
;; Function bnsolv (bnsolv_, funcdef_no=0, decl_uid=3499, cgraph_uid=0, symbol_order=0)

bnsolv (real(kind=4)[0:D.3693] * restrict a, real(kind=4)[0:D.3696] * restrict b, real(kind=4)[0:D.3690] * restrict c, real(kind=4)[0:D.3687] * restrict r, integer(kind=4) & restrict nb, integer(kind=4) & restrict n, integer(kind=4) & restrict nrhs, integer(kind=4) & restrict nrmax)
{
  logical(kind=1) D.3682;
  integer(kind=4) D.3679;
  logical(kind=1) D.3678;
  integer(kind=4) D.3675;
  logical(kind=1) D.3674;
  integer(kind=4) D.3671;
  logical(kind=1) D.3670;
  integer(kind=4) D.3667;
  logical(kind=1) D.3662;
  integer(kind=4) D.3659;
  logical(kind=1) D.3657;
  integer(kind=4) D.3654;
  logical(kind=1) D.3653;
  integer(kind=4) D.3650;
  integer(kind=4) D.3649;
  logical(kind=1) D.3648;
  integer(kind=4) D.3645;
  logical(kind=1) D.3643;
  integer(kind=4) D.3640;
  logical(kind=1) D.3638;
  integer(kind=4) D.3635;
  struct __st_parameter_dt dt_parm.29;
  logical(kind=1) D.3629;
  integer(kind=4) D.3626;
  logical(kind=1) D.3624;
  integer(kind=4) D.3621;
  logical(kind=1) D.3619;
  integer(kind=4) D.3616;
  integer(kind=4) D.3615;
  logical(kind=1) D.3614;
  integer(kind=4) D.3611;
  integer(kind=4) D.3610;
  logical(kind=1) D.3608;
  integer(kind=4) D.3605;
  logical(kind=1) D.3603;
  integer(kind=4) D.3600;
  logical(kind=1) D.3598;
  integer(kind=4) D.3595;
  integer(kind=4) D.3594;
  struct __st_parameter_dt dt_parm.28;
  real(kind=4) D.3589;
  logical(kind=1) D.3588;
  integer(kind=4) D.3585;
  integer(kind=4) D.3584;
  logical(kind=1) D.3583;
  integer(kind=4) D.3580;
  logical(kind=1) D.3576;
  integer(kind=4) D.3573;
  logical(kind=1) D.3571;
  integer(kind=4) D.3568;
  logical(kind=1) D.3567;
  integer(kind=4) D.3564;
  logical(kind=1) D.3563;
  integer(kind=4) D.3560;
  logical(kind=1) D.3557;
  integer(kind=4) D.3554;
  sizetype D.3698;
  bitsizetype D.3697;
  integer(kind=8) D.3696;
  sizetype D.3695;
  bitsizetype D.3694;
  integer(kind=8) D.3693;
  sizetype D.3692;
  bitsizetype D.3691;
  integer(kind=8) D.3690;
  sizetype D.3689;
  bitsizetype D.3688;
  integer(kind=8) D.3687;
  real(kind=4) temp;
  integer(kind=8) size.27;
  integer(kind=8) offset.26;
  integer(kind=8) stride.25;
  integer(kind=8) ubound.24;
  integer(kind=8) stride.23;
  integer(kind=8) ubound.22;
  integer(kind=8) ubound.21;
  real(kind=4) pivot;
  integer(kind=4) l;
  integer(kind=4) kx;
  integer(kind=4) kpiv;
  integer(kind=4) kp1;
  integer(kind=4) k;
  integer(kind=4) j;
  integer(kind=4) ip;
  integer(kind=4) im;
  integer(kind=4) i;
  integer(kind=8) size.20;
  integer(kind=8) offset.19;
  integer(kind=8) stride.18;
  integer(kind=8) ubound.17;
  integer(kind=8) stride.16;
  integer(kind=8) ubound.15;
  integer(kind=8) ubound.14;
  real(kind=4) btmp;
  integer(kind=8) size.13;
  integer(kind=8) offset.12;
  integer(kind=8) stride.11;
  integer(kind=8) ubound.10;
  integer(kind=8) stride.9;
  integer(kind=8) ubound.8;
  integer(kind=8) ubound.7;
  real(kind=4) atmp;
  integer(kind=8) size.6;
  integer(kind=8) offset.5;
  integer(kind=8) stride.4;
  integer(kind=8) ubound.3;
  integer(kind=8) stride.2;
  integer(kind=8) ubound.1;
  integer(kind=8) ubound.0;
  integer(kind=4) _1;
  integer(kind=4) _2;
  integer(kind=4) _3;
  sizetype size.30_4;
  bitsizetype _5;
  sizetype size.31_6;
  integer(kind=8) _7;
  integer(kind=4) _8;
  integer(kind=4) _9;
  integer(kind=4) _10;
  sizetype size.32_11;
  bitsizetype _12;
  sizetype size.33_13;
  integer(kind=8) _14;
  integer(kind=4) _15;
  integer(kind=4) _16;
  integer(kind=4) _17;
  sizetype size.34_18;
  bitsizetype _19;
  sizetype size.35_20;
  integer(kind=8) _21;
  integer(kind=4) _22;
  integer(kind=4) _23;
  integer(kind=4) _24;
  sizetype size.36_25;
  bitsizetype _26;
  sizetype size.37_27;
  integer(kind=8) _28;
  integer(kind=4) i.38_29;
  integer(kind=4) i.39_30;
  integer(kind=4) i.40_31;
  integer(kind=4) i.41_32;
  integer(kind=8) _33;
  integer(kind=8) _34;
  integer(kind=8) _35;
  integer(kind=8) _36;
  integer(kind=8) _37;
  integer(kind=8) _38;
  integer(kind=8) _39;
  integer(kind=8) _40;
  integer(kind=4) i.42_41;
  integer(kind=8) _42;
  integer(kind=8) _43;
  integer(kind=8) _44;
  integer(kind=8) _45;
  integer(kind=8) _46;
  integer(kind=8) _47;
  integer(kind=8) _48;
  integer(kind=8) _49;
  real(kind=4) _50;
  integer(kind=8) _51;
  integer(kind=8) _52;
  integer(kind=8) _53;
  integer(kind=8) _54;
  integer(kind=8) _55;
  integer(kind=8) _56;
  integer(kind=8) _57;
  integer(kind=8) _58;
  real(kind=4) _59;
  real(kind=4) _60;
  integer(kind=4) i.43_61;
  integer(kind=8) _62;
  integer(kind=8) _63;
  integer(kind=8) _64;
  integer(kind=8) _65;
  integer(kind=8) _66;
  integer(kind=8) _67;
  integer(kind=8) _68;
  integer(kind=8) _69;
  real(kind=4) _70;
  integer(kind=4) i.44_71;
  integer(kind=8) _72;
  integer(kind=8) _73;
  integer(kind=8) _74;
  integer(kind=8) _75;
  integer(kind=8) _76;
  integer(kind=8) _77;
  integer(kind=8) _78;
  integer(kind=8) _79;
  real(kind=4) _80;
  integer(kind=8) _81;
  integer(kind=8) _82;
  integer(kind=8) _83;
  integer(kind=8) _84;
  integer(kind=8) _85;
  integer(kind=8) _86;
  integer(kind=8) _87;
  integer(kind=8) _88;
  real(kind=4) _89;
  real(kind=4) _90;
  integer(kind=4) i.45_91;
  integer(kind=8) _92;
  integer(kind=8) _93;
  integer(kind=8) _94;
  integer(kind=8) _95;
  integer(kind=8) _96;
  integer(kind=8) _97;
  integer(kind=8) _98;
  integer(kind=8) _99;
  real(kind=4) _100;
  integer(kind=4) _101;
  integer(kind=4) i.46_102;
  integer(kind=8) _103;
  integer(kind=8) _104;
  integer(kind=8) _105;
  integer(kind=8) _106;
  integer(kind=8) _107;
  integer(kind=8) _108;
  integer(kind=8) _109;
  integer(kind=8) _110;
  real(kind=4) _111;
  real(kind=4) _112;
  integer(kind=4) i.47_113;
  integer(kind=8) _114;
  integer(kind=8) _115;
  integer(kind=8) _116;
  integer(kind=8) _117;
  integer(kind=8) _118;
  integer(kind=8) _119;
  integer(kind=8) _120;
  integer(kind=8) _121;
  real(kind=4) _122;
  real(kind=4) _123;
  integer(kind=4) i.48_124;
  integer(kind=8) _125;
  integer(kind=8) _126;
  integer(kind=8) _127;
  integer(kind=8) _128;
  integer(kind=8) _129;
  integer(kind=8) _130;
  integer(kind=8) _131;
  integer(kind=8) _132;
  real(kind=4) _133;
  integer(kind=4) i.49_134;
  integer(kind=8) _135;
  integer(kind=8) _136;
  integer(kind=8) _137;
  integer(kind=8) _138;
  integer(kind=8) _139;
  integer(kind=8) _140;
  integer(kind=8) _141;
  integer(kind=8) _142;
  real(kind=4) _143;
  integer(kind=4) i.50_144;
  integer(kind=8) _145;
  integer(kind=8) _146;
  integer(kind=8) _147;
  integer(kind=8) _148;
  integer(kind=8) _149;
  integer(kind=8) _150;
  integer(kind=8) _151;
  integer(kind=8) _152;
  integer(kind=4) i.51_153;
  integer(kind=8) _154;
  integer(kind=8) _155;
  integer(kind=8) _156;
  integer(kind=8) _157;
  integer(kind=8) _158;
  integer(kind=8) _159;
  integer(kind=8) _160;
  integer(kind=8) _161;
  real(kind=4) _162;
  integer(kind=4) i.52_163;
  integer(kind=8) _164;
  integer(kind=8) _165;
  integer(kind=8) _166;
  integer(kind=8) _167;
  integer(kind=8) _168;
  integer(kind=8) _169;
  integer(kind=8) _170;
  integer(kind=8) _171;
  real(kind=4) _172;
  integer(kind=4) i.53_173;
  integer(kind=8) _174;
  integer(kind=8) _175;
  integer(kind=8) _176;
  integer(kind=8) _177;
  integer(kind=8) _178;
  integer(kind=8) _179;
  integer(kind=8) _180;
  integer(kind=8) _181;
  integer(kind=4) i.54_182;
  integer(kind=8) _183;
  integer(kind=8) _184;
  integer(kind=8) _185;
  integer(kind=8) _186;
  integer(kind=8) _187;
  integer(kind=8) _188;
  integer(kind=8) _189;
  integer(kind=8) _190;
  real(kind=4) _191;
  integer(kind=4) i.55_192;
  integer(kind=8) _193;
  integer(kind=8) _194;
  integer(kind=8) _195;
  integer(kind=8) _196;
  integer(kind=8) _197;
  integer(kind=8) _198;
  integer(kind=8) _199;
  integer(kind=8) _200;
  integer(kind=4) i.56_201;
  integer(kind=8) _202;
  integer(kind=8) _203;
  integer(kind=8) _204;
  integer(kind=8) _205;
  integer(kind=8) _206;
  integer(kind=8) _207;
  integer(kind=8) _208;
  integer(kind=8) _209;
  real(kind=4) _210;
  integer(kind=4) i.57_211;
  integer(kind=8) _212;
  integer(kind=8) _213;
  integer(kind=8) _214;
  integer(kind=8) _215;
  integer(kind=8) _216;
  integer(kind=8) _217;
  integer(kind=8) _218;
  integer(kind=8) _219;
  integer(kind=4) i.58_220;
  integer(kind=8) _221;
  integer(kind=8) _222;
  integer(kind=8) _223;
  integer(kind=8) _224;
  integer(kind=8) _225;
  integer(kind=8) _226;
  integer(kind=8) _227;
  integer(kind=8) _228;
  real(kind=4) _229;
  integer(kind=4) i.59_230;
  integer(kind=8) _231;
  integer(kind=8) _232;
  integer(kind=8) _233;
  integer(kind=8) _234;
  integer(kind=8) _235;
  integer(kind=8) _236;
  integer(kind=8) _237;
  integer(kind=8) _238;
  integer(kind=4) i.60_239;
  integer(kind=8) _240;
  integer(kind=8) _241;
  integer(kind=8) _242;
  integer(kind=8) _243;
  integer(kind=8) _244;
  integer(kind=8) _245;
  integer(kind=8) _246;
  integer(kind=8) _247;
  real(kind=4) _248;
  integer(kind=4) i.61_249;
  integer(kind=8) _250;
  integer(kind=8) _251;
  integer(kind=8) _252;
  integer(kind=8) _253;
  integer(kind=8) _254;
  integer(kind=8) _255;
  integer(kind=8) _256;
  integer(kind=8) _257;
  integer(kind=4) i.62_258;
  integer(kind=8) _259;
  integer(kind=8) _260;
  integer(kind=8) _261;
  integer(kind=8) _262;
  integer(kind=8) _263;
  integer(kind=8) _264;
  integer(kind=8) _265;
  integer(kind=8) _266;
  real(kind=4) _267;
  integer(kind=4) i.63_268;
  integer(kind=8) _269;
  integer(kind=8) _270;
  integer(kind=8) _271;
  integer(kind=8) _272;
  integer(kind=8) _273;
  integer(kind=8) _274;
  integer(kind=8) _275;
  integer(kind=8) _276;
  integer(kind=4) i.64_277;
  integer(kind=8) _278;
  integer(kind=8) _279;
  integer(kind=8) _280;
  integer(kind=8) _281;
  integer(kind=8) _282;
  integer(kind=8) _283;
  integer(kind=8) _284;
  integer(kind=8) _285;
  integer(kind=4) i.65_286;
  integer(kind=8) _287;
  integer(kind=8) _288;
  integer(kind=8) _289;
  integer(kind=8) _290;
  integer(kind=8) _291;
  integer(kind=8) _292;
  integer(kind=8) _293;
  integer(kind=8) _294;
  real(kind=4) _295;
  integer(kind=4) i.66_296;
  integer(kind=8) _297;
  integer(kind=8) _298;
  integer(kind=8) _299;
  integer(kind=8) _300;
  integer(kind=8) _301;
  integer(kind=8) _302;
  integer(kind=8) _303;
  integer(kind=8) _304;
  real(kind=4) _305;
  real(kind=4) _306;
  integer(kind=4) i.67_307;
  integer(kind=8) _308;
  integer(kind=8) _309;
  integer(kind=8) _310;
  integer(kind=8) _311;
  integer(kind=8) _312;
  integer(kind=8) _313;
  integer(kind=8) _314;
  integer(kind=8) _315;
  real(kind=4) _316;
  integer(kind=4) i.68_317;
  integer(kind=8) _318;
  integer(kind=8) _319;
  integer(kind=8) _320;
  integer(kind=8) _321;
  integer(kind=8) _322;
  integer(kind=8) _323;
  integer(kind=8) _324;
  integer(kind=8) _325;
  real(kind=4) _326;
  integer(kind=4) i.69_327;
  integer(kind=8) _328;
  integer(kind=8) _329;
  integer(kind=8) _330;
  integer(kind=8) _331;
  integer(kind=8) _332;
  integer(kind=8) _333;
  integer(kind=8) _334;
  integer(kind=8) _335;
  real(kind=4) _336;
  real(kind=4) _337;
  integer(kind=4) i.70_338;
  integer(kind=8) _339;
  integer(kind=8) _340;
  integer(kind=8) _341;
  integer(kind=8) _342;
  integer(kind=8) _343;
  integer(kind=8) _344;
  integer(kind=8) _345;
  integer(kind=8) _346;
  real(kind=4) _347;
  integer(kind=4) i.71_348;
  integer(kind=8) _349;
  integer(kind=8) _350;
  integer(kind=8) _351;
  integer(kind=8) _352;
  integer(kind=8) _353;
  integer(kind=8) _354;
  integer(kind=8) _355;
  integer(kind=8) _356;
  real(kind=4) _357;
  integer(kind=4) i.72_358;
  integer(kind=8) _359;
  integer(kind=8) _360;
  integer(kind=8) _361;
  integer(kind=8) _362;
  integer(kind=8) _363;
  integer(kind=8) _364;
  integer(kind=8) _365;
  integer(kind=8) _366;
  real(kind=4) _367;
  real(kind=4) _368;
  integer(kind=4) i.73_369;
  integer(kind=8) _370;
  integer(kind=8) _371;
  integer(kind=8) _372;
  integer(kind=8) _373;
  integer(kind=8) _374;
  integer(kind=8) _375;
  integer(kind=8) _376;
  integer(kind=8) _377;
  real(kind=4) _378;
  integer(kind=4) i.74_379;
  integer(kind=8) _380;
  integer(kind=8) _381;
  integer(kind=8) _382;
  integer(kind=4) _383;
  integer(kind=8) _384;
  integer(kind=8) _385;
  integer(kind=8) _386;
  integer(kind=4) _387;
  integer(kind=8) _388;
  integer(kind=8) _389;
  real(kind=4) _390;
  integer(kind=4) i.75_391;
  integer(kind=8) _392;
  integer(kind=8) _393;
  integer(kind=8) _394;
  integer(kind=4) _395;
  integer(kind=8) _396;
  integer(kind=8) _397;
  integer(kind=8) _398;
  integer(kind=4) _399;
  integer(kind=8) _400;
  integer(kind=8) _401;
  real(kind=4) _402;
  integer(kind=4) i.76_403;
  integer(kind=8) _404;
  integer(kind=8) _405;
  integer(kind=8) _406;
  integer(kind=8) _407;
  integer(kind=8) _408;
  integer(kind=8) _409;
  integer(kind=4) _410;
  integer(kind=8) _411;
  integer(kind=8) _412;
  real(kind=4) _413;
  integer(kind=4) i.77_414;
  integer(kind=8) _415;
  integer(kind=8) _416;
  integer(kind=8) _417;
  integer(kind=8) _418;
  integer(kind=8) _419;
  integer(kind=8) _420;
  integer(kind=4) _421;
  integer(kind=8) _422;
  integer(kind=8) _423;
  real(kind=4) _424;
  integer(kind=4) i.78_425;
  integer(kind=8) _426;
  integer(kind=8) _427;
  integer(kind=8) _428;
  integer(kind=8) _429;
  integer(kind=8) _430;
  integer(kind=8) _431;
  integer(kind=4) _432;
  integer(kind=8) _433;
  integer(kind=8) _434;
  real(kind=4) _435;
  integer(kind=4) i.79_436;
  integer(kind=8) _437;
  integer(kind=8) _438;
  integer(kind=8) _439;
  integer(kind=8) _440;
  integer(kind=8) _441;
  integer(kind=8) _442;
  integer(kind=4) _443;
  integer(kind=8) _444;
  integer(kind=8) _445;
  real(kind=4) _446;
  integer(kind=4) _447;
  integer(kind=4) i.80_448;
  integer(kind=8) _449;
  integer(kind=8) _450;
  integer(kind=8) _451;
  integer(kind=8) _452;
  integer(kind=8) _453;
  integer(kind=8) _454;
  integer(kind=8) _455;
  integer(kind=8) _456;
  integer(kind=4) i.81_457;
  integer(kind=8) _458;
  integer(kind=8) _459;
  integer(kind=8) _460;
  integer(kind=8) _461;
  integer(kind=8) _462;
  integer(kind=8) _463;
  integer(kind=8) _464;
  integer(kind=8) _465;
  real(kind=4) _466;
  integer(kind=4) i.82_467;
  integer(kind=8) _468;
  integer(kind=8) _469;
  integer(kind=8) _470;
  integer(kind=8) _471;
  integer(kind=8) _472;
  integer(kind=8) _473;
  integer(kind=8) _474;
  integer(kind=8) _475;
  real(kind=4) _476;
  real(kind=4) _477;
  integer(kind=4) i.83_478;
  integer(kind=8) _479;
  integer(kind=8) _480;
  integer(kind=8) _481;
  integer(kind=8) _482;
  integer(kind=8) _483;
  integer(kind=8) _484;
  integer(kind=8) _485;
  integer(kind=8) _486;
  real(kind=4) _487;
  integer(kind=4) i.84_488;
  integer(kind=8) _489;
  integer(kind=8) _490;
  integer(kind=8) _491;
  integer(kind=8) _492;
  integer(kind=8) _493;
  integer(kind=8) _494;
  integer(kind=8) _495;
  integer(kind=8) _496;
  real(kind=4) _497;
  integer(kind=4) i.85_498;
  integer(kind=8) _499;
  integer(kind=8) _500;
  integer(kind=8) _501;
  integer(kind=8) _502;
  integer(kind=8) _503;
  integer(kind=8) _504;
  integer(kind=8) _505;
  integer(kind=8) _506;
  real(kind=4) _507;
  real(kind=4) _508;
  integer(kind=4) i.86_509;
  integer(kind=8) _510;
  integer(kind=8) _511;
  integer(kind=8) _512;
  integer(kind=8) _513;
  integer(kind=8) _514;
  integer(kind=8) _515;
  integer(kind=8) _516;
  integer(kind=8) _517;
  real(kind=4) _518;
  integer(kind=4) i.87_519;
  integer(kind=4) _520;
  integer(kind=4) _521;
  integer(kind=4) i.88_522;
  integer(kind=4) i.89_523;
  integer(kind=4) i.90_524;
  integer(kind=8) _525;
  integer(kind=8) _526;
  integer(kind=8) _527;
  integer(kind=8) _528;
  integer(kind=8) _529;
  integer(kind=8) _530;
  integer(kind=8) _531;
  integer(kind=8) _532;
  real(kind=4) _533;
  integer(kind=8) _534;
  integer(kind=8) _535;
  integer(kind=8) _536;
  integer(kind=8) _537;
  integer(kind=8) _538;
  integer(kind=8) _539;
  integer(kind=8) _540;
  integer(kind=8) _541;
  real(kind=4) _542;
  integer(kind=4) i.91_543;
  integer(kind=8) _544;
  integer(kind=8) _545;
  integer(kind=8) _546;
  integer(kind=8) _547;
  integer(kind=8) _548;
  integer(kind=8) _549;
  integer(kind=8) _550;
  integer(kind=8) _551;
  real(kind=4) _552;
  real(kind=4) _553;
  integer(kind=4) i.92_554;
  integer(kind=8) _555;
  integer(kind=8) _556;
  integer(kind=8) _557;
  integer(kind=8) _558;
  integer(kind=8) _559;
  integer(kind=8) _560;
  integer(kind=8) _561;
  integer(kind=8) _562;
  real(kind=4) _563;
  integer(kind=4) i.93_564;
  integer(kind=4) _565;
  integer(kind=8) stride.9_617;
  integer(kind=8) stride.9_618;
  integer(kind=8) stride.11_620;
  integer(kind=8) stride.11_621;
  integer(kind=8) size.13_624;
  integer(kind=8) size.13_625;
  integer(kind=8) _626;
  bitsizetype _627;
  sizetype _628;
  integer(kind=8) offset.12_629;
  integer(kind=8) stride.2_631;
  integer(kind=8) stride.2_632;
  integer(kind=8) stride.4_634;
  integer(kind=8) stride.4_635;
  integer(kind=8) size.6_637;
  integer(kind=8) size.6_638;
  integer(kind=8) _639;
  bitsizetype _640;
  sizetype _641;
  integer(kind=8) offset.5_642;
  integer(kind=8) stride.16_644;
  integer(kind=8) stride.16_645;
  integer(kind=8) stride.18_647;
  integer(kind=8) stride.18_648;
  integer(kind=8) size.20_650;
  integer(kind=8) size.20_651;
  integer(kind=8) _652;
  bitsizetype _653;
  sizetype _654;
  integer(kind=8) offset.19_655;
  integer(kind=8) stride.23_657;
  integer(kind=8) stride.23_658;
  integer(kind=8) stride.25_661;
  integer(kind=8) stride.25_662;
  integer(kind=8) size.27_664;
  integer(kind=8) size.27_665;
  integer(kind=8) _666;
  bitsizetype _667;
  sizetype _668;
  integer(kind=8) offset.26_669;
  integer(kind=4) _670;
  logical(kind=1) _672;
  integer(kind=4) _674;
  logical(kind=1) _676;
  integer(kind=4) _677;
  logical(kind=1) _679;
  integer(kind=4) _682;
  logical(kind=1) _684;
  integer(kind=4) _690;
  logical(kind=1) _692;
  integer(kind=4) _698;
  logical(kind=1) _700;
  integer(kind=4) _703;
  integer(kind=4) _704;
  logical(kind=1) _706;
  real(kind=4) _707;
  integer(kind=4) _712;
  integer(kind=4) _713;
  logical(kind=1) _715;
  integer(kind=4) _720;
  logical(kind=1) _722;
  integer(kind=4) _727;
  logical(kind=1) _729;
  integer(kind=4) _734;
  integer(kind=4) _735;
  logical(kind=1) _737;
  integer(kind=4) _739;
  integer(kind=4) _740;
  logical(kind=1) _742;
  integer(kind=4) _745;
  logical(kind=1) _747;
  integer(kind=4) _750;
  logical(kind=1) _752;
  integer(kind=4) _768;
  logical(kind=1) _770;
  integer(kind=4) _773;
  logical(kind=1) _775;
  integer(kind=4) _778;
  logical(kind=1) _780;
  integer(kind=4) _782;
  integer(kind=4) _783;
  logical(kind=1) _785;
  integer(kind=4) _787;
  logical(kind=1) _789;
  integer(kind=4) _792;
  logical(kind=1) _794;
  integer(kind=4) _810;
  logical(kind=1) _812;
  integer(kind=4) _814;
  logical(kind=1) _816;
  integer(kind=4) _817;
  logical(kind=1) _819;
  integer(kind=4) _820;
  logical(kind=1) _822;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = *nb_615(D);
  ubound.7_616 = (integer(kind=8)) _1;
  stride.9_617 = ubound.7_616;
  stride.9_618 = MAX_EXPR <stride.9_617, 0>;
  _2 = *nb_615(D);
  ubound.8_619 = (integer(kind=8)) _2;
  stride.11_620 = stride.9_618 * ubound.8_619;
  stride.11_621 = MAX_EXPR <stride.11_620, 0>;
  _3 = *n_622(D);
  ubound.10_623 = (integer(kind=8)) _3;
  size.13_624 = stride.11_621 * ubound.10_623;
  size.13_625 = MAX_EXPR <size.13_624, 0>;
  _626 = size.13_625 + -1;
  size.30_4 = (sizetype) size.13_625;
  _5 = (bitsizetype) size.30_4;
  _627 = _5 * 32;
  size.31_6 = (sizetype) size.13_625;
  _628 = size.31_6 * 4;
  _7 = ~stride.9_618;
  offset.12_629 = _7 - stride.11_621;
  _8 = *nb_615(D);
  ubound.0_630 = (integer(kind=8)) _8;
  stride.2_631 = ubound.0_630;
  stride.2_632 = MAX_EXPR <stride.2_631, 0>;
  _9 = *nb_615(D);
  ubound.1_633 = (integer(kind=8)) _9;
  stride.4_634 = stride.2_632 * ubound.1_633;
  stride.4_635 = MAX_EXPR <stride.4_634, 0>;
  _10 = *n_622(D);
  ubound.3_636 = (integer(kind=8)) _10;
  size.6_637 = stride.4_635 * ubound.3_636;
  size.6_638 = MAX_EXPR <size.6_637, 0>;
  _639 = size.6_638 + -1;
  size.32_11 = (sizetype) size.6_638;
  _12 = (bitsizetype) size.32_11;
  _640 = _12 * 32;
  size.33_13 = (sizetype) size.6_638;
  _641 = size.33_13 * 4;
  _14 = ~stride.2_632;
  offset.5_642 = _14 - stride.4_635;
  _15 = *nb_615(D);
  ubound.14_643 = (integer(kind=8)) _15;
  stride.16_644 = ubound.14_643;
  stride.16_645 = MAX_EXPR <stride.16_644, 0>;
  _16 = *nb_615(D);
  ubound.15_646 = (integer(kind=8)) _16;
  stride.18_647 = stride.16_645 * ubound.15_646;
  stride.18_648 = MAX_EXPR <stride.18_647, 0>;
  _17 = *n_622(D);
  ubound.17_649 = (integer(kind=8)) _17;
  size.20_650 = stride.18_648 * ubound.17_649;
  size.20_651 = MAX_EXPR <size.20_650, 0>;
  _652 = size.20_651 + -1;
  size.34_18 = (sizetype) size.20_651;
  _19 = (bitsizetype) size.34_18;
  _653 = _19 * 32;
  size.35_20 = (sizetype) size.20_651;
  _654 = size.35_20 * 4;
  _21 = ~stride.16_645;
  offset.19_655 = _21 - stride.18_648;
  _22 = *nb_615(D);
  ubound.21_656 = (integer(kind=8)) _22;
  stride.23_657 = ubound.21_656;
  stride.23_658 = MAX_EXPR <stride.23_657, 0>;
  _23 = *nrmax_659(D);
  ubound.22_660 = (integer(kind=8)) _23;
  stride.25_661 = stride.23_658 * ubound.22_660;
  stride.25_662 = MAX_EXPR <stride.25_661, 0>;
  _24 = *n_622(D);
  ubound.24_663 = (integer(kind=8)) _24;
  size.27_664 = stride.25_662 * ubound.24_663;
  size.27_665 = MAX_EXPR <size.27_664, 0>;
  _666 = size.27_665 + -1;
  size.36_25 = (sizetype) size.27_665;
  _26 = (bitsizetype) size.36_25;
  _667 = _26 * 32;
  size.37_27 = (sizetype) size.27_665;
  _668 = size.37_27 * 4;
  _28 = ~stride.23_658;
  offset.26_669 = _28 - stride.25_662;
  _670 = *n_622(D);
  i = 1;
;;    succ:       3

;;   basic block 3, loop depth 1
;;    pred:       2
;;                68
  i.38_29 = i;
  _672 = _670 < i.38_29;
  if (_672 != 0)
    goto <bb 69>; [0.00%]
  else
    goto <bb 4>; [0.00%]
;;    succ:       69
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  i.39_30 = i;
  im_673 = i.39_30 + -1;
  i.40_31 = i;
  if (i.40_31 == 1)
    goto <bb 17>; [0.00%]
  else
    goto <bb 5>; [0.00%]
;;    succ:       17
;;                5

;;   basic block 5, loop depth 1
;;    pred:       4
  _674 = *nb_615(D);
  k_675 = 1;
;;    succ:       6

;;   basic block 6, loop depth 2
;;    pred:       5
;;                16
  # k_568 = PHI <k_675(5), k_697(16)>
  _676 = k_568 > _674;
  if (_676 != 0)
    goto <bb 17>; [0.00%]
  else
    goto <bb 7>; [0.00%]
;;    succ:       17
;;                7

;;   basic block 7, loop depth 2
;;    pred:       6
  _677 = *nb_615(D);
  j_678 = 1;
;;    succ:       8

;;   basic block 8, loop depth 3
;;    pred:       7
;;                15
  # j_566 = PHI <j_678(7), j_696(15)>
  _679 = j_566 > _677;
  if (_679 != 0)
    goto <bb 16>; [0.00%]
  else
    goto <bb 9>; [0.00%]
;;    succ:       16
;;                9

;;   basic block 9, loop depth 3
;;    pred:       8
  i.41_32 = i;
  _33 = (integer(kind=8)) i.41_32;
  _34 = stride.11_621 * _33;
  _35 = offset.12_629 + _34;
  _36 = (integer(kind=8)) j_566;
  _37 = stride.9_618 * _36;
  _38 = _35 + _37;
  _39 = (integer(kind=8)) k_568;
  _40 = _38 + _39;
  btmp_681 = *b_680(D)[_40];
  _682 = *nb_615(D);
  l_683 = 1;
;;    succ:       10

;;   basic block 10, loop depth 4
;;    pred:       9
;;                11
  # l_577 = PHI <l_683(9), l_688(11)>
  _684 = l_577 > _682;
  if (_684 != 0)
    goto <bb 12>; [0.00%]
  else
    goto <bb 11>; [0.00%]
;;    succ:       12
;;                11

;;   basic block 11, loop depth 4
;;    pred:       10
  i.42_41 = i;
  _42 = (integer(kind=8)) i.42_41;
  _43 = stride.4_635 * _42;
  _44 = offset.5_642 + _43;
  _45 = (integer(kind=8)) l_577;
  _46 = stride.2_632 * _45;
  _47 = _44 + _46;
  _48 = (integer(kind=8)) k_568;
  _49 = _47 + _48;
  _50 = *a_685(D)[_49];
  _51 = (integer(kind=8)) im_673;
  _52 = stride.18_648 * _51;
  _53 = offset.19_655 + _52;
  _54 = (integer(kind=8)) l_577;
  _55 = stride.16_645 * _54;
  _56 = _53 + _55;
  _57 = (integer(kind=8)) j_566;
  _58 = _56 + _57;
  _59 = *c_686(D)[_58];
  _60 = btmp_681 * _59;
  i.43_61 = i;
  _62 = (integer(kind=8)) i.43_61;
  _63 = stride.4_635 * _62;
  _64 = offset.5_642 + _63;
  _65 = (integer(kind=8)) l_577;
  _66 = stride.2_632 * _65;
  _67 = _64 + _66;
  _68 = (integer(kind=8)) k_568;
  _69 = _67 + _68;
  _70 = _50 - _60;
  *a_685(D)[_69] = _70;
  l_688 = l_577 + 1;
  goto <bb 10>; [0.00%]
;;    succ:       10

;;   basic block 12, loop depth 3
;;    pred:       10
  _690 = *nrhs_689(D);
  l_691 = 1;
;;    succ:       13

;;   basic block 13, loop depth 4
;;    pred:       12
;;                14
  # l_578 = PHI <l_691(12), l_695(14)>
  _692 = l_578 > _690;
  if (_692 != 0)
    goto <bb 15>; [0.00%]
  else
    goto <bb 14>; [0.00%]
;;    succ:       15
;;                14

;;   basic block 14, loop depth 4
;;    pred:       13
  i.44_71 = i;
  _72 = (integer(kind=8)) i.44_71;
  _73 = stride.25_662 * _72;
  _74 = offset.26_669 + _73;
  _75 = (integer(kind=8)) l_578;
  _76 = stride.23_658 * _75;
  _77 = _74 + _76;
  _78 = (integer(kind=8)) k_568;
  _79 = _77 + _78;
  _80 = *r_693(D)[_79];
  _81 = (integer(kind=8)) im_673;
  _82 = stride.25_662 * _81;
  _83 = offset.26_669 + _82;
  _84 = (integer(kind=8)) l_578;
  _85 = stride.23_658 * _84;
  _86 = _83 + _85;
  _87 = (integer(kind=8)) j_566;
  _88 = _86 + _87;
  _89 = *r_693(D)[_88];
  _90 = btmp_681 * _89;
  i.45_91 = i;
  _92 = (integer(kind=8)) i.45_91;
  _93 = stride.25_662 * _92;
  _94 = offset.26_669 + _93;
  _95 = (integer(kind=8)) l_578;
  _96 = stride.23_658 * _95;
  _97 = _94 + _96;
  _98 = (integer(kind=8)) k_568;
  _99 = _97 + _98;
  _100 = _80 - _90;
  *r_693(D)[_99] = _100;
  l_695 = l_578 + 1;
  goto <bb 13>; [0.00%]
;;    succ:       13

;;   basic block 15, loop depth 3
;;    pred:       13
  j_696 = j_566 + 1;
  goto <bb 8>; [0.00%]
;;    succ:       8

;;   basic block 16, loop depth 2
;;    pred:       8
  k_697 = k_568 + 1;
  goto <bb 6>; [0.00%]
;;    succ:       6

;;   basic block 17, loop depth 1
;;    pred:       4
;;                6
  _101 = *nb_615(D);
  _698 = _101 + -1;
  kpiv_699 = 1;
;;    succ:       18

;;   basic block 18, loop depth 2
;;    pred:       17
;;                47
  # kpiv_573 = PHI <kpiv_699(17), kpiv_756(47)>
  _700 = kpiv_573 > _698;
  if (_700 != 0)
    goto <bb 48>; [0.00%]
  else
    goto <bb 19>; [0.00%]
;;    succ:       48
;;                19

;;   basic block 19, loop depth 2
;;    pred:       18
  kp1_701 = kpiv_573 + 1;
  kx_702 = kpiv_573;
  _703 = kp1_701;
  _704 = *nb_615(D);
  k_705 = _703;
;;    succ:       20

;;   basic block 20, loop depth 3
;;    pred:       19
;;                23
  # k_569 = PHI <k_705(19), k_709(23)>
  # kx_575 = PHI <kx_702(19), kx_576(23)>
  _706 = k_569 > _704;
  if (_706 != 0)
    goto <bb 24>; [0.00%]
  else
    goto <bb 21>; [0.00%]
;;    succ:       24
;;                21

;;   basic block 21, loop depth 3
;;    pred:       20
  i.46_102 = i;
  _103 = (integer(kind=8)) i.46_102;
  _104 = stride.4_635 * _103;
  _105 = offset.5_642 + _104;
  _106 = (integer(kind=8)) kpiv_573;
  _107 = stride.2_632 * _106;
  _108 = _105 + _107;
  _109 = (integer(kind=8)) k_569;
  _110 = _108 + _109;
  _111 = *a_685(D)[_110];
  _112 = ABS_EXPR <_111>;
  i.47_113 = i;
  _114 = (integer(kind=8)) i.47_113;
  _115 = stride.4_635 * _114;
  _116 = offset.5_642 + _115;
  _117 = (integer(kind=8)) kpiv_573;
  _118 = stride.2_632 * _117;
  _119 = _116 + _118;
  _120 = (integer(kind=8)) kx_575;
  _121 = _119 + _120;
  _122 = *a_685(D)[_121];
  _123 = ABS_EXPR <_122>;
  _707 = _112 - _123;
  if (_707 <= 0.0)
    goto <bb 23>; [0.00%]
  else
    goto <bb 22>; [0.00%]
;;    succ:       23
;;                22

;;   basic block 22, loop depth 3
;;    pred:       21
  kx_708 = k_569;
;;    succ:       23

;;   basic block 23, loop depth 3
;;    pred:       21
;;                22
  # kx_576 = PHI <kx_575(21), kx_708(22)>
  k_709 = k_569 + 1;
  goto <bb 20>; [0.00%]
;;    succ:       20

;;   basic block 24, loop depth 2
;;    pred:       20
  i.48_124 = i;
  _125 = (integer(kind=8)) i.48_124;
  _126 = stride.4_635 * _125;
  _127 = offset.5_642 + _126;
  _128 = (integer(kind=8)) kpiv_573;
  _129 = stride.2_632 * _128;
  _130 = _127 + _129;
  _131 = (integer(kind=8)) kx_575;
  _132 = _130 + _131;
  _133 = *a_685(D)[_132];
  if (_133 == 0.0)
    goto <bb 25>; [0.00%]
  else
    goto <bb 26>; [0.00%]
;;    succ:       25
;;                26

;;   basic block 25, loop depth 0
;;    pred:       24
  dt_parm.28.common.filename = &"../src/bnsolv.f"[1]{lb: 1 sz: 1};
  dt_parm.28.common.line = 72;
  dt_parm.28.common.flags = 128;
  dt_parm.28.common.unit = 6;
  _gfortran_st_write (&dt_parm.28);
  _gfortran_transfer_character_write (&dt_parm.28, &"Singular A block, i = "[1]{lb: 1 sz: 1}, 22);
  _gfortran_transfer_integer_write (&dt_parm.28, &i, 4);
  _gfortran_st_write_done (&dt_parm.28);
  dt_parm.28 ={v} {CLOBBER};
  _gfortran_stop_string (0B, 0);
;;    succ:      

;;   basic block 26, loop depth 2
;;    pred:       24
  i.49_134 = i;
  _135 = (integer(kind=8)) i.49_134;
  _136 = stride.4_635 * _135;
  _137 = offset.5_642 + _136;
  _138 = (integer(kind=8)) kpiv_573;
  _139 = stride.2_632 * _138;
  _140 = _137 + _139;
  _141 = (integer(kind=8)) kx_575;
  _142 = _140 + _141;
  _143 = *a_685(D)[_142];
  pivot_710 = 1.0e+0 / _143;
  i.50_144 = i;
  _145 = (integer(kind=8)) i.50_144;
  _146 = stride.4_635 * _145;
  _147 = offset.5_642 + _146;
  _148 = (integer(kind=8)) kpiv_573;
  _149 = stride.2_632 * _148;
  _150 = _147 + _149;
  _151 = (integer(kind=8)) kpiv_573;
  _152 = _150 + _151;
  i.51_153 = i;
  _154 = (integer(kind=8)) i.51_153;
  _155 = stride.4_635 * _154;
  _156 = offset.5_642 + _155;
  _157 = (integer(kind=8)) kpiv_573;
  _158 = stride.2_632 * _157;
  _159 = _156 + _158;
  _160 = (integer(kind=8)) kx_575;
  _161 = _159 + _160;
  _162 = *a_685(D)[_152];
  *a_685(D)[_161] = _162;
  _712 = kp1_701;
  _713 = *nb_615(D);
  l_714 = _712;
;;    succ:       27

;;   basic block 27, loop depth 3
;;    pred:       26
;;                28
  # l_579 = PHI <l_714(26), l_719(28)>
  _715 = l_579 > _713;
  if (_715 != 0)
    goto <bb 29>; [0.00%]
  else
    goto <bb 28>; [0.00%]
;;    succ:       29
;;                28

;;   basic block 28, loop depth 3
;;    pred:       27
  i.52_163 = i;
  _164 = (integer(kind=8)) i.52_163;
  _165 = stride.4_635 * _164;
  _166 = offset.5_642 + _165;
  _167 = (integer(kind=8)) l_579;
  _168 = stride.2_632 * _167;
  _169 = _166 + _168;
  _170 = (integer(kind=8)) kx_575;
  _171 = _169 + _170;
  _172 = *a_685(D)[_171];
  temp_716 = pivot_710 * _172;
  i.53_173 = i;
  _174 = (integer(kind=8)) i.53_173;
  _175 = stride.4_635 * _174;
  _176 = offset.5_642 + _175;
  _177 = (integer(kind=8)) l_579;
  _178 = stride.2_632 * _177;
  _179 = _176 + _178;
  _180 = (integer(kind=8)) kpiv_573;
  _181 = _179 + _180;
  i.54_182 = i;
  _183 = (integer(kind=8)) i.54_182;
  _184 = stride.4_635 * _183;
  _185 = offset.5_642 + _184;
  _186 = (integer(kind=8)) l_579;
  _187 = stride.2_632 * _186;
  _188 = _185 + _187;
  _189 = (integer(kind=8)) kx_575;
  _190 = _188 + _189;
  _191 = *a_685(D)[_181];
  *a_685(D)[_190] = _191;
  i.55_192 = i;
  _193 = (integer(kind=8)) i.55_192;
  _194 = stride.4_635 * _193;
  _195 = offset.5_642 + _194;
  _196 = (integer(kind=8)) l_579;
  _197 = stride.2_632 * _196;
  _198 = _195 + _197;
  _199 = (integer(kind=8)) kpiv_573;
  _200 = _198 + _199;
  *a_685(D)[_200] = temp_716;
  l_719 = l_579 + 1;
  goto <bb 27>; [0.00%]
;;    succ:       27

;;   basic block 29, loop depth 2
;;    pred:       27
  _720 = *nb_615(D);
  l_721 = 1;
;;    succ:       30

;;   basic block 30, loop depth 3
;;    pred:       29
;;                31
  # l_580 = PHI <l_721(29), l_726(31)>
  _722 = l_580 > _720;
  if (_722 != 0)
    goto <bb 32>; [0.00%]
  else
    goto <bb 31>; [0.00%]
;;    succ:       32
;;                31

;;   basic block 31, loop depth 3
;;    pred:       30
  i.56_201 = i;
  _202 = (integer(kind=8)) i.56_201;
  _203 = stride.18_648 * _202;
  _204 = offset.19_655 + _203;
  _205 = (integer(kind=8)) l_580;
  _206 = stride.16_645 * _205;
  _207 = _204 + _206;
  _208 = (integer(kind=8)) kx_575;
  _209 = _207 + _208;
  _210 = *c_686(D)[_209];
  temp_723 = pivot_710 * _210;
  i.57_211 = i;
  _212 = (integer(kind=8)) i.57_211;
  _213 = stride.18_648 * _212;
  _214 = offset.19_655 + _213;
  _215 = (integer(kind=8)) l_580;
  _216 = stride.16_645 * _215;
  _217 = _214 + _216;
  _218 = (integer(kind=8)) kpiv_573;
  _219 = _217 + _218;
  i.58_220 = i;
  _221 = (integer(kind=8)) i.58_220;
  _222 = stride.18_648 * _221;
  _223 = offset.19_655 + _222;
  _224 = (integer(kind=8)) l_580;
  _225 = stride.16_645 * _224;
  _226 = _223 + _225;
  _227 = (integer(kind=8)) kx_575;
  _228 = _226 + _227;
  _229 = *c_686(D)[_219];
  *c_686(D)[_228] = _229;
  i.59_230 = i;
  _231 = (integer(kind=8)) i.59_230;
  _232 = stride.18_648 * _231;
  _233 = offset.19_655 + _232;
  _234 = (integer(kind=8)) l_580;
  _235 = stride.16_645 * _234;
  _236 = _233 + _235;
  _237 = (integer(kind=8)) kpiv_573;
  _238 = _236 + _237;
  *c_686(D)[_238] = temp_723;
  l_726 = l_580 + 1;
  goto <bb 30>; [0.00%]
;;    succ:       30

;;   basic block 32, loop depth 2
;;    pred:       30
  _727 = *nrhs_689(D);
  l_728 = 1;
;;    succ:       33

;;   basic block 33, loop depth 3
;;    pred:       32
;;                34
  # l_581 = PHI <l_728(32), l_733(34)>
  _729 = l_581 > _727;
  if (_729 != 0)
    goto <bb 35>; [0.00%]
  else
    goto <bb 34>; [0.00%]
;;    succ:       35
;;                34

;;   basic block 34, loop depth 3
;;    pred:       33
  i.60_239 = i;
  _240 = (integer(kind=8)) i.60_239;
  _241 = stride.25_662 * _240;
  _242 = offset.26_669 + _241;
  _243 = (integer(kind=8)) l_581;
  _244 = stride.23_658 * _243;
  _245 = _242 + _244;
  _246 = (integer(kind=8)) kx_575;
  _247 = _245 + _246;
  _248 = *r_693(D)[_247];
  temp_730 = pivot_710 * _248;
  i.61_249 = i;
  _250 = (integer(kind=8)) i.61_249;
  _251 = stride.25_662 * _250;
  _252 = offset.26_669 + _251;
  _253 = (integer(kind=8)) l_581;
  _254 = stride.23_658 * _253;
  _255 = _252 + _254;
  _256 = (integer(kind=8)) kpiv_573;
  _257 = _255 + _256;
  i.62_258 = i;
  _259 = (integer(kind=8)) i.62_258;
  _260 = stride.25_662 * _259;
  _261 = offset.26_669 + _260;
  _262 = (integer(kind=8)) l_581;
  _263 = stride.23_658 * _262;
  _264 = _261 + _263;
  _265 = (integer(kind=8)) kx_575;
  _266 = _264 + _265;
  _267 = *r_693(D)[_257];
  *r_693(D)[_266] = _267;
  i.63_268 = i;
  _269 = (integer(kind=8)) i.63_268;
  _270 = stride.25_662 * _269;
  _271 = offset.26_669 + _270;
  _272 = (integer(kind=8)) l_581;
  _273 = stride.23_658 * _272;
  _274 = _271 + _273;
  _275 = (integer(kind=8)) kpiv_573;
  _276 = _274 + _275;
  *r_693(D)[_276] = temp_730;
  l_733 = l_581 + 1;
  goto <bb 33>; [0.00%]
;;    succ:       33

;;   basic block 35, loop depth 2
;;    pred:       33
  _734 = kp1_701;
  _735 = *nb_615(D);
  k_736 = _734;
;;    succ:       36

;;   basic block 36, loop depth 3
;;    pred:       35
;;                46
  # k_570 = PHI <k_736(35), k_755(46)>
  _737 = k_570 > _735;
  if (_737 != 0)
    goto <bb 47>; [0.00%]
  else
    goto <bb 37>; [0.00%]
;;    succ:       47
;;                37

;;   basic block 37, loop depth 3
;;    pred:       36
  i.64_277 = i;
  _278 = (integer(kind=8)) i.64_277;
  _279 = stride.4_635 * _278;
  _280 = offset.5_642 + _279;
  _281 = (integer(kind=8)) kpiv_573;
  _282 = stride.2_632 * _281;
  _283 = _280 + _282;
  _284 = (integer(kind=8)) k_570;
  _285 = _283 + _284;
  atmp_738 = *a_685(D)[_285];
  _739 = kp1_701;
  _740 = *nb_615(D);
  l_741 = _739;
;;    succ:       38

;;   basic block 38, loop depth 4
;;    pred:       37
;;                39
  # l_582 = PHI <l_741(37), l_744(39)>
  _742 = l_582 > _740;
  if (_742 != 0)
    goto <bb 40>; [0.00%]
  else
    goto <bb 39>; [0.00%]
;;    succ:       40
;;                39

;;   basic block 39, loop depth 4
;;    pred:       38
  i.65_286 = i;
  _287 = (integer(kind=8)) i.65_286;
  _288 = stride.4_635 * _287;
  _289 = offset.5_642 + _288;
  _290 = (integer(kind=8)) l_582;
  _291 = stride.2_632 * _290;
  _292 = _289 + _291;
  _293 = (integer(kind=8)) k_570;
  _294 = _292 + _293;
  _295 = *a_685(D)[_294];
  i.66_296 = i;
  _297 = (integer(kind=8)) i.66_296;
  _298 = stride.4_635 * _297;
  _299 = offset.5_642 + _298;
  _300 = (integer(kind=8)) l_582;
  _301 = stride.2_632 * _300;
  _302 = _299 + _301;
  _303 = (integer(kind=8)) kpiv_573;
  _304 = _302 + _303;
  _305 = *a_685(D)[_304];
  _306 = atmp_738 * _305;
  i.67_307 = i;
  _308 = (integer(kind=8)) i.67_307;
  _309 = stride.4_635 * _308;
  _310 = offset.5_642 + _309;
  _311 = (integer(kind=8)) l_582;
  _312 = stride.2_632 * _311;
  _313 = _310 + _312;
  _314 = (integer(kind=8)) k_570;
  _315 = _313 + _314;
  _316 = _295 - _306;
  *a_685(D)[_315] = _316;
  l_744 = l_582 + 1;
  goto <bb 38>; [0.00%]
;;    succ:       38

;;   basic block 40, loop depth 3
;;    pred:       38
  _745 = *nb_615(D);
  l_746 = 1;
;;    succ:       41

;;   basic block 41, loop depth 4
;;    pred:       40
;;                42
  # l_583 = PHI <l_746(40), l_749(42)>
  _747 = l_583 > _745;
  if (_747 != 0)
    goto <bb 43>; [0.00%]
  else
    goto <bb 42>; [0.00%]
;;    succ:       43
;;                42

;;   basic block 42, loop depth 4
;;    pred:       41
  i.68_317 = i;
  _318 = (integer(kind=8)) i.68_317;
  _319 = stride.18_648 * _318;
  _320 = offset.19_655 + _319;
  _321 = (integer(kind=8)) l_583;
  _322 = stride.16_645 * _321;
  _323 = _320 + _322;
  _324 = (integer(kind=8)) k_570;
  _325 = _323 + _324;
  _326 = *c_686(D)[_325];
  i.69_327 = i;
  _328 = (integer(kind=8)) i.69_327;
  _329 = stride.18_648 * _328;
  _330 = offset.19_655 + _329;
  _331 = (integer(kind=8)) l_583;
  _332 = stride.16_645 * _331;
  _333 = _330 + _332;
  _334 = (integer(kind=8)) kpiv_573;
  _335 = _333 + _334;
  _336 = *c_686(D)[_335];
  _337 = atmp_738 * _336;
  i.70_338 = i;
  _339 = (integer(kind=8)) i.70_338;
  _340 = stride.18_648 * _339;
  _341 = offset.19_655 + _340;
  _342 = (integer(kind=8)) l_583;
  _343 = stride.16_645 * _342;
  _344 = _341 + _343;
  _345 = (integer(kind=8)) k_570;
  _346 = _344 + _345;
  _347 = _326 - _337;
  *c_686(D)[_346] = _347;
  l_749 = l_583 + 1;
  goto <bb 41>; [0.00%]
;;    succ:       41

;;   basic block 43, loop depth 3
;;    pred:       41
  _750 = *nrhs_689(D);
  l_751 = 1;
;;    succ:       44

;;   basic block 44, loop depth 4
;;    pred:       43
;;                45
  # l_584 = PHI <l_751(43), l_754(45)>
  _752 = l_584 > _750;
  if (_752 != 0)
    goto <bb 46>; [0.00%]
  else
    goto <bb 45>; [0.00%]
;;    succ:       46
;;                45

;;   basic block 45, loop depth 4
;;    pred:       44
  i.71_348 = i;
  _349 = (integer(kind=8)) i.71_348;
  _350 = stride.25_662 * _349;
  _351 = offset.26_669 + _350;
  _352 = (integer(kind=8)) l_584;
  _353 = stride.23_658 * _352;
  _354 = _351 + _353;
  _355 = (integer(kind=8)) k_570;
  _356 = _354 + _355;
  _357 = *r_693(D)[_356];
  i.72_358 = i;
  _359 = (integer(kind=8)) i.72_358;
  _360 = stride.25_662 * _359;
  _361 = offset.26_669 + _360;
  _362 = (integer(kind=8)) l_584;
  _363 = stride.23_658 * _362;
  _364 = _361 + _363;
  _365 = (integer(kind=8)) kpiv_573;
  _366 = _364 + _365;
  _367 = *r_693(D)[_366];
  _368 = atmp_738 * _367;
  i.73_369 = i;
  _370 = (integer(kind=8)) i.73_369;
  _371 = stride.25_662 * _370;
  _372 = offset.26_669 + _371;
  _373 = (integer(kind=8)) l_584;
  _374 = stride.23_658 * _373;
  _375 = _372 + _374;
  _376 = (integer(kind=8)) k_570;
  _377 = _375 + _376;
  _378 = _357 - _368;
  *r_693(D)[_377] = _378;
  l_754 = l_584 + 1;
  goto <bb 44>; [0.00%]
;;    succ:       44

;;   basic block 46, loop depth 3
;;    pred:       44
  k_755 = k_570 + 1;
  goto <bb 36>; [0.00%]
;;    succ:       36

;;   basic block 47, loop depth 2
;;    pred:       36
  kpiv_756 = kpiv_573 + 1;
  goto <bb 18>; [0.00%]
;;    succ:       18

;;   basic block 48, loop depth 1
;;    pred:       18
  i.74_379 = i;
  _380 = (integer(kind=8)) i.74_379;
  _381 = stride.4_635 * _380;
  _382 = offset.5_642 + _381;
  _383 = *nb_615(D);
  _384 = (integer(kind=8)) _383;
  _385 = stride.2_632 * _384;
  _386 = _382 + _385;
  _387 = *nb_615(D);
  _388 = (integer(kind=8)) _387;
  _389 = _386 + _388;
  _390 = *a_685(D)[_389];
  if (_390 == 0.0)
    goto <bb 49>; [0.00%]
  else
    goto <bb 50>; [0.00%]
;;    succ:       49
;;                50

;;   basic block 49, loop depth 0
;;    pred:       48
  dt_parm.29.common.filename = &"../src/bnsolv.f"[1]{lb: 1 sz: 1};
  dt_parm.29.common.line = 118;
  dt_parm.29.common.flags = 128;
  dt_parm.29.common.unit = 6;
  _gfortran_st_write (&dt_parm.29);
  _gfortran_transfer_character_write (&dt_parm.29, &"Singular A block, i = "[1]{lb: 1 sz: 1}, 22);
  _gfortran_transfer_integer_write (&dt_parm.29, &i, 4);
  _gfortran_st_write_done (&dt_parm.29);
  dt_parm.29 ={v} {CLOBBER};
  _gfortran_stop_string (0B, 0);
;;    succ:      

;;   basic block 50, loop depth 1
;;    pred:       48
  i.75_391 = i;
  _392 = (integer(kind=8)) i.75_391;
  _393 = stride.4_635 * _392;
  _394 = offset.5_642 + _393;
  _395 = *nb_615(D);
  _396 = (integer(kind=8)) _395;
  _397 = stride.2_632 * _396;
  _398 = _394 + _397;
  _399 = *nb_615(D);
  _400 = (integer(kind=8)) _399;
  _401 = _398 + _400;
  _402 = *a_685(D)[_401];
  pivot_767 = 1.0e+0 / _402;
  _768 = *nb_615(D);
  l_769 = 1;
;;    succ:       51

;;   basic block 51, loop depth 2
;;    pred:       50
;;                52
  # l_585 = PHI <l_769(50), l_772(52)>
  _770 = l_585 > _768;
  if (_770 != 0)
    goto <bb 53>; [0.00%]
  else
    goto <bb 52>; [0.00%]
;;    succ:       53
;;                52

;;   basic block 52, loop depth 2
;;    pred:       51
  i.76_403 = i;
  _404 = (integer(kind=8)) i.76_403;
  _405 = stride.18_648 * _404;
  _406 = offset.19_655 + _405;
  _407 = (integer(kind=8)) l_585;
  _408 = stride.16_645 * _407;
  _409 = _406 + _408;
  _410 = *nb_615(D);
  _411 = (integer(kind=8)) _410;
  _412 = _409 + _411;
  _413 = *c_686(D)[_412];
  i.77_414 = i;
  _415 = (integer(kind=8)) i.77_414;
  _416 = stride.18_648 * _415;
  _417 = offset.19_655 + _416;
  _418 = (integer(kind=8)) l_585;
  _419 = stride.16_645 * _418;
  _420 = _417 + _419;
  _421 = *nb_615(D);
  _422 = (integer(kind=8)) _421;
  _423 = _420 + _422;
  _424 = pivot_767 * _413;
  *c_686(D)[_423] = _424;
  l_772 = l_585 + 1;
  goto <bb 51>; [0.00%]
;;    succ:       51

;;   basic block 53, loop depth 1
;;    pred:       51
  _773 = *nrhs_689(D);
  l_774 = 1;
;;    succ:       54

;;   basic block 54, loop depth 2
;;    pred:       53
;;                55
  # l_586 = PHI <l_774(53), l_777(55)>
  _775 = l_586 > _773;
  if (_775 != 0)
    goto <bb 56>; [0.00%]
  else
    goto <bb 55>; [0.00%]
;;    succ:       56
;;                55

;;   basic block 55, loop depth 2
;;    pred:       54
  i.78_425 = i;
  _426 = (integer(kind=8)) i.78_425;
  _427 = stride.25_662 * _426;
  _428 = offset.26_669 + _427;
  _429 = (integer(kind=8)) l_586;
  _430 = stride.23_658 * _429;
  _431 = _428 + _430;
  _432 = *nb_615(D);
  _433 = (integer(kind=8)) _432;
  _434 = _431 + _433;
  _435 = *r_693(D)[_434];
  i.79_436 = i;
  _437 = (integer(kind=8)) i.79_436;
  _438 = stride.25_662 * _437;
  _439 = offset.26_669 + _438;
  _440 = (integer(kind=8)) l_586;
  _441 = stride.23_658 * _440;
  _442 = _439 + _441;
  _443 = *nb_615(D);
  _444 = (integer(kind=8)) _443;
  _445 = _442 + _444;
  _446 = pivot_767 * _435;
  *r_693(D)[_445] = _446;
  l_777 = l_586 + 1;
  goto <bb 54>; [0.00%]
;;    succ:       54

;;   basic block 56, loop depth 1
;;    pred:       54
  _447 = *nb_615(D);
  _778 = _447 + -1;
  kpiv_779 = _778;
;;    succ:       57

;;   basic block 57, loop depth 2
;;    pred:       56
;;                67
  # kpiv_574 = PHI <kpiv_779(56), kpiv_798(67)>
  _780 = kpiv_574 <= 0;
  if (_780 != 0)
    goto <bb 68>; [0.00%]
  else
    goto <bb 58>; [0.00%]
;;    succ:       68
;;                58

;;   basic block 58, loop depth 2
;;    pred:       57
  kp1_781 = kpiv_574 + 1;
  _782 = kp1_781;
  _783 = *nb_615(D);
  k_784 = _782;
;;    succ:       59

;;   basic block 59, loop depth 3
;;    pred:       58
;;                66
  # k_571 = PHI <k_784(58), k_797(66)>
  _785 = k_571 > _783;
  if (_785 != 0)
    goto <bb 67>; [0.00%]
  else
    goto <bb 60>; [0.00%]
;;    succ:       67
;;                60

;;   basic block 60, loop depth 3
;;    pred:       59
  i.80_448 = i;
  _449 = (integer(kind=8)) i.80_448;
  _450 = stride.4_635 * _449;
  _451 = offset.5_642 + _450;
  _452 = (integer(kind=8)) k_571;
  _453 = stride.2_632 * _452;
  _454 = _451 + _453;
  _455 = (integer(kind=8)) kpiv_574;
  _456 = _454 + _455;
  atmp_786 = *a_685(D)[_456];
  _787 = *nb_615(D);
  l_788 = 1;
;;    succ:       61

;;   basic block 61, loop depth 4
;;    pred:       60
;;                62
  # l_587 = PHI <l_788(60), l_791(62)>
  _789 = l_587 > _787;
  if (_789 != 0)
    goto <bb 63>; [0.00%]
  else
    goto <bb 62>; [0.00%]
;;    succ:       63
;;                62

;;   basic block 62, loop depth 4
;;    pred:       61
  i.81_457 = i;
  _458 = (integer(kind=8)) i.81_457;
  _459 = stride.18_648 * _458;
  _460 = offset.19_655 + _459;
  _461 = (integer(kind=8)) l_587;
  _462 = stride.16_645 * _461;
  _463 = _460 + _462;
  _464 = (integer(kind=8)) kpiv_574;
  _465 = _463 + _464;
  _466 = *c_686(D)[_465];
  i.82_467 = i;
  _468 = (integer(kind=8)) i.82_467;
  _469 = stride.18_648 * _468;
  _470 = offset.19_655 + _469;
  _471 = (integer(kind=8)) l_587;
  _472 = stride.16_645 * _471;
  _473 = _470 + _472;
  _474 = (integer(kind=8)) k_571;
  _475 = _473 + _474;
  _476 = *c_686(D)[_475];
  _477 = atmp_786 * _476;
  i.83_478 = i;
  _479 = (integer(kind=8)) i.83_478;
  _480 = stride.18_648 * _479;
  _481 = offset.19_655 + _480;
  _482 = (integer(kind=8)) l_587;
  _483 = stride.16_645 * _482;
  _484 = _481 + _483;
  _485 = (integer(kind=8)) kpiv_574;
  _486 = _484 + _485;
  _487 = _466 - _477;
  *c_686(D)[_486] = _487;
  l_791 = l_587 + 1;
  goto <bb 61>; [0.00%]
;;    succ:       61

;;   basic block 63, loop depth 3
;;    pred:       61
  _792 = *nrhs_689(D);
  l_793 = 1;
;;    succ:       64

;;   basic block 64, loop depth 4
;;    pred:       63
;;                65
  # l_588 = PHI <l_793(63), l_796(65)>
  _794 = l_588 > _792;
  if (_794 != 0)
    goto <bb 66>; [0.00%]
  else
    goto <bb 65>; [0.00%]
;;    succ:       66
;;                65

;;   basic block 65, loop depth 4
;;    pred:       64
  i.84_488 = i;
  _489 = (integer(kind=8)) i.84_488;
  _490 = stride.25_662 * _489;
  _491 = offset.26_669 + _490;
  _492 = (integer(kind=8)) l_588;
  _493 = stride.23_658 * _492;
  _494 = _491 + _493;
  _495 = (integer(kind=8)) kpiv_574;
  _496 = _494 + _495;
  _497 = *r_693(D)[_496];
  i.85_498 = i;
  _499 = (integer(kind=8)) i.85_498;
  _500 = stride.25_662 * _499;
  _501 = offset.26_669 + _500;
  _502 = (integer(kind=8)) l_588;
  _503 = stride.23_658 * _502;
  _504 = _501 + _503;
  _505 = (integer(kind=8)) k_571;
  _506 = _504 + _505;
  _507 = *r_693(D)[_506];
  _508 = atmp_786 * _507;
  i.86_509 = i;
  _510 = (integer(kind=8)) i.86_509;
  _511 = stride.25_662 * _510;
  _512 = offset.26_669 + _511;
  _513 = (integer(kind=8)) l_588;
  _514 = stride.23_658 * _513;
  _515 = _512 + _514;
  _516 = (integer(kind=8)) kpiv_574;
  _517 = _515 + _516;
  _518 = _497 - _508;
  *r_693(D)[_517] = _518;
  l_796 = l_588 + 1;
  goto <bb 64>; [0.00%]
;;    succ:       64

;;   basic block 66, loop depth 3
;;    pred:       64
  k_797 = k_571 + 1;
  goto <bb 59>; [0.00%]
;;    succ:       59

;;   basic block 67, loop depth 2
;;    pred:       59
  kpiv_798 = kpiv_574 + -1;
  goto <bb 57>; [0.00%]
;;    succ:       57

;;   basic block 68, loop depth 1
;;    pred:       57
  i.87_519 = i;
  _520 = i.87_519 + 1;
  i = _520;
  goto <bb 3>; [0.00%]
;;    succ:       3

;;   basic block 69, loop depth 0
;;    pred:       3
  _521 = *n_622(D);
  _810 = _521 + -1;
  i = _810;
;;    succ:       70

;;   basic block 70, loop depth 1
;;    pred:       69
;;                80
  i.88_522 = i;
  _812 = i.88_522 <= 0;
  if (_812 != 0)
    goto <bb 81>; [0.00%]
  else
    goto <bb 71>; [0.00%]
;;    succ:       81
;;                71

;;   basic block 71, loop depth 1
;;    pred:       70
  i.89_523 = i;
  ip_813 = i.89_523 + 1;
  _814 = *nrhs_689(D);
  l_815 = 1;
;;    succ:       72

;;   basic block 72, loop depth 2
;;    pred:       71
;;                79
  # l_589 = PHI <l_815(71), l_826(79)>
  _816 = l_589 > _814;
  if (_816 != 0)
    goto <bb 80>; [0.00%]
  else
    goto <bb 73>; [0.00%]
;;    succ:       80
;;                73

;;   basic block 73, loop depth 2
;;    pred:       72
  _817 = *nb_615(D);
  k_818 = 1;
;;    succ:       74

;;   basic block 74, loop depth 3
;;    pred:       73
;;                78
  # k_572 = PHI <k_818(73), k_825(78)>
  _819 = k_572 > _817;
  if (_819 != 0)
    goto <bb 79>; [0.00%]
  else
    goto <bb 75>; [0.00%]
;;    succ:       79
;;                75

;;   basic block 75, loop depth 3
;;    pred:       74
  _820 = *nb_615(D);
  j_821 = 1;
;;    succ:       76

;;   basic block 76, loop depth 4
;;    pred:       75
;;                77
  # j_567 = PHI <j_821(75), j_824(77)>
  _822 = j_567 > _820;
  if (_822 != 0)
    goto <bb 78>; [0.00%]
  else
    goto <bb 77>; [0.00%]
;;    succ:       78
;;                77

;;   basic block 77, loop depth 4
;;    pred:       76
  i.90_524 = i;
  _525 = (integer(kind=8)) i.90_524;
  _526 = stride.25_662 * _525;
  _527 = offset.26_669 + _526;
  _528 = (integer(kind=8)) l_589;
  _529 = stride.23_658 * _528;
  _530 = _527 + _529;
  _531 = (integer(kind=8)) k_572;
  _532 = _530 + _531;
  _533 = *r_693(D)[_532];
  _534 = (integer(kind=8)) ip_813;
  _535 = stride.25_662 * _534;
  _536 = offset.26_669 + _535;
  _537 = (integer(kind=8)) l_589;
  _538 = stride.23_658 * _537;
  _539 = _536 + _538;
  _540 = (integer(kind=8)) j_567;
  _541 = _539 + _540;
  _542 = *r_693(D)[_541];
  i.91_543 = i;
  _544 = (integer(kind=8)) i.91_543;
  _545 = stride.18_648 * _544;
  _546 = offset.19_655 + _545;
  _547 = (integer(kind=8)) j_567;
  _548 = stride.16_645 * _547;
  _549 = _546 + _548;
  _550 = (integer(kind=8)) k_572;
  _551 = _549 + _550;
  _552 = *c_686(D)[_551];
  _553 = _542 * _552;
  i.92_554 = i;
  _555 = (integer(kind=8)) i.92_554;
  _556 = stride.25_662 * _555;
  _557 = offset.26_669 + _556;
  _558 = (integer(kind=8)) l_589;
  _559 = stride.23_658 * _558;
  _560 = _557 + _559;
  _561 = (integer(kind=8)) k_572;
  _562 = _560 + _561;
  _563 = _533 - _553;
  *r_693(D)[_562] = _563;
  j_824 = j_567 + 1;
  goto <bb 76>; [0.00%]
;;    succ:       76

;;   basic block 78, loop depth 3
;;    pred:       76
  k_825 = k_572 + 1;
  goto <bb 74>; [0.00%]
;;    succ:       74

;;   basic block 79, loop depth 2
;;    pred:       74
  l_826 = l_589 + 1;
  goto <bb 72>; [0.00%]
;;    succ:       72

;;   basic block 80, loop depth 1
;;    pred:       72
  i.93_564 = i;
  _565 = i.93_564 + -1;
  i = _565;
  goto <bb 70>; [0.00%]
;;    succ:       70

;;   basic block 81, loop depth 0
;;    pred:       70
;;    succ:       82

;;   basic block 82, loop depth 0
;;    pred:       81
  i ={v} {CLOBBER};
;;    succ:       83

;;   basic block 83, loop depth 0
;;    pred:       82
<L131> [0.00%]:
  return;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_1 - 1 )
Partition 2 (_2 - 2 )
Partition 3 (_3 - 3 )
Partition 4 (size.30_4 - 4 )
Partition 5 (_5 - 5 )
Partition 6 (size.31_6 - 6 )
Partition 7 (_7 - 7 )
Partition 8 (_8 - 8 )
Partition 9 (_9 - 9 )
Partition 10 (_10 - 10 )
Partition 11 (size.32_11 - 11 )
Partition 12 (_12 - 12 )
Partition 13 (size.33_13 - 13 )
Partition 14 (_14 - 14 )
Partition 15 (_15 - 15 )
Partition 16 (_16 - 16 )
Partition 17 (_17 - 17 )
Partition 18 (size.34_18 - 18 )
Partition 19 (_19 - 19 )
Partition 20 (size.35_20 - 20 )
Partition 21 (_21 - 21 )
Partition 22 (_22 - 22 )
Partition 23 (_23 - 23 )
Partition 24 (_24 - 24 )
Partition 25 (size.36_25 - 25 )
Partition 26 (_26 - 26 )
Partition 27 (size.37_27 - 27 )
Partition 28 (_28 - 28 )
Partition 29 (i.38_29 - 29 )
Partition 30 (i.39_30 - 30 )
Partition 31 (i.40_31 - 31 )
Partition 32 (i.41_32 - 32 )
Partition 33 (_33 - 33 )
Partition 34 (_34 - 34 )
Partition 35 (_35 - 35 )
Partition 36 (_36 - 36 )
Partition 37 (_37 - 37 )
Partition 38 (_38 - 38 )
Partition 39 (_39 - 39 )
Partition 40 (_40 - 40 )
Partition 41 (i.42_41 - 41 )
Partition 42 (_42 - 42 )
Partition 43 (_43 - 43 )
Partition 44 (_44 - 44 )
Partition 45 (_45 - 45 )
Partition 46 (_46 - 46 )
Partition 47 (_47 - 47 )
Partition 48 (_48 - 48 )
Partition 49 (_49 - 49 )
Partition 50 (_50 - 50 )
Partition 51 (_51 - 51 )
Partition 52 (_52 - 52 )
Partition 53 (_53 - 53 )
Partition 54 (_54 - 54 )
Partition 55 (_55 - 55 )
Partition 56 (_56 - 56 )
Partition 57 (_57 - 57 )
Partition 58 (_58 - 58 )
Partition 59 (_59 - 59 )
Partition 60 (_60 - 60 )
Partition 61 (i.43_61 - 61 )
Partition 62 (_62 - 62 )
Partition 63 (_63 - 63 )
Partition 64 (_64 - 64 )
Partition 65 (_65 - 65 )
Partition 66 (_66 - 66 )
Partition 67 (_67 - 67 )
Partition 68 (_68 - 68 )
Partition 69 (_69 - 69 )
Partition 70 (_70 - 70 )
Partition 71 (i.44_71 - 71 )
Partition 72 (_72 - 72 )
Partition 73 (_73 - 73 )
Partition 74 (_74 - 74 )
Partition 75 (_75 - 75 )
Partition 76 (_76 - 76 )
Partition 77 (_77 - 77 )
Partition 78 (_78 - 78 )
Partition 79 (_79 - 79 )
Partition 80 (_80 - 80 )
Partition 81 (_81 - 81 )
Partition 82 (_82 - 82 )
Partition 83 (_83 - 83 )
Partition 84 (_84 - 84 )
Partition 85 (_85 - 85 )
Partition 86 (_86 - 86 )
Partition 87 (_87 - 87 )
Partition 88 (_88 - 88 )
Partition 89 (_89 - 89 )
Partition 90 (_90 - 90 )
Partition 91 (i.45_91 - 91 )
Partition 92 (_92 - 92 )
Partition 93 (_93 - 93 )
Partition 94 (_94 - 94 )
Partition 95 (_95 - 95 )
Partition 96 (_96 - 96 )
Partition 97 (_97 - 97 )
Partition 98 (_98 - 98 )
Partition 99 (_99 - 99 )
Partition 100 (_100 - 100 )
Partition 101 (_101 - 101 )
Partition 102 (i.46_102 - 102 )
Partition 103 (_103 - 103 )
Partition 104 (_104 - 104 )
Partition 105 (_105 - 105 )
Partition 106 (_106 - 106 )
Partition 107 (_107 - 107 )
Partition 108 (_108 - 108 )
Partition 109 (_109 - 109 )
Partition 110 (_110 - 110 )
Partition 111 (_111 - 111 )
Partition 112 (_112 - 112 )
Partition 113 (i.47_113 - 113 )
Partition 114 (_114 - 114 )
Partition 115 (_115 - 115 )
Partition 116 (_116 - 116 )
Partition 117 (_117 - 117 )
Partition 118 (_118 - 118 )
Partition 119 (_119 - 119 )
Partition 120 (_120 - 120 )
Partition 121 (_121 - 121 )
Partition 122 (_122 - 122 )
Partition 123 (_123 - 123 )
Partition 124 (i.48_124 - 124 )
Partition 125 (_125 - 125 )
Partition 126 (_126 - 126 )
Partition 127 (_127 - 127 )
Partition 128 (_128 - 128 )
Partition 129 (_129 - 129 )
Partition 130 (_130 - 130 )
Partition 131 (_131 - 131 )
Partition 132 (_132 - 132 )
Partition 133 (_133 - 133 )
Partition 134 (i.49_134 - 134 )
Partition 135 (_135 - 135 )
Partition 136 (_136 - 136 )
Partition 137 (_137 - 137 )
Partition 138 (_138 - 138 )
Partition 139 (_139 - 139 )
Partition 140 (_140 - 140 )
Partition 141 (_141 - 141 )
Partition 142 (_142 - 142 )
Partition 143 (_143 - 143 )
Partition 144 (i.50_144 - 144 )
Partition 145 (_145 - 145 )
Partition 146 (_146 - 146 )
Partition 147 (_147 - 147 )
Partition 148 (_148 - 148 )
Partition 149 (_149 - 149 )
Partition 150 (_150 - 150 )
Partition 151 (_151 - 151 )
Partition 152 (_152 - 152 )
Partition 153 (i.51_153 - 153 )
Partition 154 (_154 - 154 )
Partition 155 (_155 - 155 )
Partition 156 (_156 - 156 )
Partition 157 (_157 - 157 )
Partition 158 (_158 - 158 )
Partition 159 (_159 - 159 )
Partition 160 (_160 - 160 )
Partition 161 (_161 - 161 )
Partition 162 (_162 - 162 )
Partition 163 (i.52_163 - 163 )
Partition 164 (_164 - 164 )
Partition 165 (_165 - 165 )
Partition 166 (_166 - 166 )
Partition 167 (_167 - 167 )
Partition 168 (_168 - 168 )
Partition 169 (_169 - 169 )
Partition 170 (_170 - 170 )
Partition 171 (_171 - 171 )
Partition 172 (_172 - 172 )
Partition 173 (i.53_173 - 173 )
Partition 174 (_174 - 174 )
Partition 175 (_175 - 175 )
Partition 176 (_176 - 176 )
Partition 177 (_177 - 177 )
Partition 178 (_178 - 178 )
Partition 179 (_179 - 179 )
Partition 180 (_180 - 180 )
Partition 181 (_181 - 181 )
Partition 182 (i.54_182 - 182 )
Partition 183 (_183 - 183 )
Partition 184 (_184 - 184 )
Partition 185 (_185 - 185 )
Partition 186 (_186 - 186 )
Partition 187 (_187 - 187 )
Partition 188 (_188 - 188 )
Partition 189 (_189 - 189 )
Partition 190 (_190 - 190 )
Partition 191 (_191 - 191 )
Partition 192 (i.55_192 - 192 )
Partition 193 (_193 - 193 )
Partition 194 (_194 - 194 )
Partition 195 (_195 - 195 )
Partition 196 (_196 - 196 )
Partition 197 (_197 - 197 )
Partition 198 (_198 - 198 )
Partition 199 (_199 - 199 )
Partition 200 (_200 - 200 )
Partition 201 (i.56_201 - 201 )
Partition 202 (_202 - 202 )
Partition 203 (_203 - 203 )
Partition 204 (_204 - 204 )
Partition 205 (_205 - 205 )
Partition 206 (_206 - 206 )
Partition 207 (_207 - 207 )
Partition 208 (_208 - 208 )
Partition 209 (_209 - 209 )
Partition 210 (_210 - 210 )
Partition 211 (i.57_211 - 211 )
Partition 212 (_212 - 212 )
Partition 213 (_213 - 213 )
Partition 214 (_214 - 214 )
Partition 215 (_215 - 215 )
Partition 216 (_216 - 216 )
Partition 217 (_217 - 217 )
Partition 218 (_218 - 218 )
Partition 219 (_219 - 219 )
Partition 220 (i.58_220 - 220 )
Partition 221 (_221 - 221 )
Partition 222 (_222 - 222 )
Partition 223 (_223 - 223 )
Partition 224 (_224 - 224 )
Partition 225 (_225 - 225 )
Partition 226 (_226 - 226 )
Partition 227 (_227 - 227 )
Partition 228 (_228 - 228 )
Partition 229 (_229 - 229 )
Partition 230 (i.59_230 - 230 )
Partition 231 (_231 - 231 )
Partition 232 (_232 - 232 )
Partition 233 (_233 - 233 )
Partition 234 (_234 - 234 )
Partition 235 (_235 - 235 )
Partition 236 (_236 - 236 )
Partition 237 (_237 - 237 )
Partition 238 (_238 - 238 )
Partition 239 (i.60_239 - 239 )
Partition 240 (_240 - 240 )
Partition 241 (_241 - 241 )
Partition 242 (_242 - 242 )
Partition 243 (_243 - 243 )
Partition 244 (_244 - 244 )
Partition 245 (_245 - 245 )
Partition 246 (_246 - 246 )
Partition 247 (_247 - 247 )
Partition 248 (_248 - 248 )
Partition 249 (i.61_249 - 249 )
Partition 250 (_250 - 250 )
Partition 251 (_251 - 251 )
Partition 252 (_252 - 252 )
Partition 253 (_253 - 253 )
Partition 254 (_254 - 254 )
Partition 255 (_255 - 255 )
Partition 256 (_256 - 256 )
Partition 257 (_257 - 257 )
Partition 258 (i.62_258 - 258 )
Partition 259 (_259 - 259 )
Partition 260 (_260 - 260 )
Partition 261 (_261 - 261 )
Partition 262 (_262 - 262 )
Partition 263 (_263 - 263 )
Partition 264 (_264 - 264 )
Partition 265 (_265 - 265 )
Partition 266 (_266 - 266 )
Partition 267 (_267 - 267 )
Partition 268 (i.63_268 - 268 )
Partition 269 (_269 - 269 )
Partition 270 (_270 - 270 )
Partition 271 (_271 - 271 )
Partition 272 (_272 - 272 )
Partition 273 (_273 - 273 )
Partition 274 (_274 - 274 )
Partition 275 (_275 - 275 )
Partition 276 (_276 - 276 )
Partition 277 (i.64_277 - 277 )
Partition 278 (_278 - 278 )
Partition 279 (_279 - 279 )
Partition 280 (_280 - 280 )
Partition 281 (_281 - 281 )
Partition 282 (_282 - 282 )
Partition 283 (_283 - 283 )
Partition 284 (_284 - 284 )
Partition 285 (_285 - 285 )
Partition 286 (i.65_286 - 286 )
Partition 287 (_287 - 287 )
Partition 288 (_288 - 288 )
Partition 289 (_289 - 289 )
Partition 290 (_290 - 290 )
Partition 291 (_291 - 291 )
Partition 292 (_292 - 292 )
Partition 293 (_293 - 293 )
Partition 294 (_294 - 294 )
Partition 295 (_295 - 295 )
Partition 296 (i.66_296 - 296 )
Partition 297 (_297 - 297 )
Partition 298 (_298 - 298 )
Partition 299 (_299 - 299 )
Partition 300 (_300 - 300 )
Partition 301 (_301 - 301 )
Partition 302 (_302 - 302 )
Partition 303 (_303 - 303 )
Partition 304 (_304 - 304 )
Partition 305 (_305 - 305 )
Partition 306 (_306 - 306 )
Partition 307 (i.67_307 - 307 )
Partition 308 (_308 - 308 )
Partition 309 (_309 - 309 )
Partition 310 (_310 - 310 )
Partition 311 (_311 - 311 )
Partition 312 (_312 - 312 )
Partition 313 (_313 - 313 )
Partition 314 (_314 - 314 )
Partition 315 (_315 - 315 )
Partition 316 (_316 - 316 )
Partition 317 (i.68_317 - 317 )
Partition 318 (_318 - 318 )
Partition 319 (_319 - 319 )
Partition 320 (_320 - 320 )
Partition 321 (_321 - 321 )
Partition 322 (_322 - 322 )
Partition 323 (_323 - 323 )
Partition 324 (_324 - 324 )
Partition 325 (_325 - 325 )
Partition 326 (_326 - 326 )
Partition 327 (i.69_327 - 327 )
Partition 328 (_328 - 328 )
Partition 329 (_329 - 329 )
Partition 330 (_330 - 330 )
Partition 331 (_331 - 331 )
Partition 332 (_332 - 332 )
Partition 333 (_333 - 333 )
Partition 334 (_334 - 334 )
Partition 335 (_335 - 335 )
Partition 336 (_336 - 336 )
Partition 337 (_337 - 337 )
Partition 338 (i.70_338 - 338 )
Partition 339 (_339 - 339 )
Partition 340 (_340 - 340 )
Partition 341 (_341 - 341 )
Partition 342 (_342 - 342 )
Partition 343 (_343 - 343 )
Partition 344 (_344 - 344 )
Partition 345 (_345 - 345 )
Partition 346 (_346 - 346 )
Partition 347 (_347 - 347 )
Partition 348 (i.71_348 - 348 )
Partition 349 (_349 - 349 )
Partition 350 (_350 - 350 )
Partition 351 (_351 - 351 )
Partition 352 (_352 - 352 )
Partition 353 (_353 - 353 )
Partition 354 (_354 - 354 )
Partition 355 (_355 - 355 )
Partition 356 (_356 - 356 )
Partition 357 (_357 - 357 )
Partition 358 (i.72_358 - 358 )
Partition 359 (_359 - 359 )
Partition 360 (_360 - 360 )
Partition 361 (_361 - 361 )
Partition 362 (_362 - 362 )
Partition 363 (_363 - 363 )
Partition 364 (_364 - 364 )
Partition 365 (_365 - 365 )
Partition 366 (_366 - 366 )
Partition 367 (_367 - 367 )
Partition 368 (_368 - 368 )
Partition 369 (i.73_369 - 369 )
Partition 370 (_370 - 370 )
Partition 371 (_371 - 371 )
Partition 372 (_372 - 372 )
Partition 373 (_373 - 373 )
Partition 374 (_374 - 374 )
Partition 375 (_375 - 375 )
Partition 376 (_376 - 376 )
Partition 377 (_377 - 377 )
Partition 378 (_378 - 378 )
Partition 379 (i.74_379 - 379 )
Partition 380 (_380 - 380 )
Partition 381 (_381 - 381 )
Partition 382 (_382 - 382 )
Partition 383 (_383 - 383 )
Partition 384 (_384 - 384 )
Partition 385 (_385 - 385 )
Partition 386 (_386 - 386 )
Partition 387 (_387 - 387 )
Partition 388 (_388 - 388 )
Partition 389 (_389 - 389 )
Partition 390 (_390 - 390 )
Partition 391 (i.75_391 - 391 )
Partition 392 (_392 - 392 )
Partition 393 (_393 - 393 )
Partition 394 (_394 - 394 )
Partition 395 (_395 - 395 )
Partition 396 (_396 - 396 )
Partition 397 (_397 - 397 )
Partition 398 (_398 - 398 )
Partition 399 (_399 - 399 )
Partition 400 (_400 - 400 )
Partition 401 (_401 - 401 )
Partition 402 (_402 - 402 )
Partition 403 (i.76_403 - 403 )
Partition 404 (_404 - 404 )
Partition 405 (_405 - 405 )
Partition 406 (_406 - 406 )
Partition 407 (_407 - 407 )
Partition 408 (_408 - 408 )
Partition 409 (_409 - 409 )
Partition 410 (_410 - 410 )
Partition 411 (_411 - 411 )
Partition 412 (_412 - 412 )
Partition 413 (_413 - 413 )
Partition 414 (i.77_414 - 414 )
Partition 415 (_415 - 415 )
Partition 416 (_416 - 416 )
Partition 417 (_417 - 417 )
Partition 418 (_418 - 418 )
Partition 419 (_419 - 419 )
Partition 420 (_420 - 420 )
Partition 421 (_421 - 421 )
Partition 422 (_422 - 422 )
Partition 423 (_423 - 423 )
Partition 424 (_424 - 424 )
Partition 425 (i.78_425 - 425 )
Partition 426 (_426 - 426 )
Partition 427 (_427 - 427 )
Partition 428 (_428 - 428 )
Partition 429 (_429 - 429 )
Partition 430 (_430 - 430 )
Partition 431 (_431 - 431 )
Partition 432 (_432 - 432 )
Partition 433 (_433 - 433 )
Partition 434 (_434 - 434 )
Partition 435 (_435 - 435 )
Partition 436 (i.79_436 - 436 )
Partition 437 (_437 - 437 )
Partition 438 (_438 - 438 )
Partition 439 (_439 - 439 )
Partition 440 (_440 - 440 )
Partition 441 (_441 - 441 )
Partition 442 (_442 - 442 )
Partition 443 (_443 - 443 )
Partition 444 (_444 - 444 )
Partition 445 (_445 - 445 )
Partition 446 (_446 - 446 )
Partition 447 (_447 - 447 )
Partition 448 (i.80_448 - 448 )
Partition 449 (_449 - 449 )
Partition 450 (_450 - 450 )
Partition 451 (_451 - 451 )
Partition 452 (_452 - 452 )
Partition 453 (_453 - 453 )
Partition 454 (_454 - 454 )
Partition 455 (_455 - 455 )
Partition 456 (_456 - 456 )
Partition 457 (i.81_457 - 457 )
Partition 458 (_458 - 458 )
Partition 459 (_459 - 459 )
Partition 460 (_460 - 460 )
Partition 461 (_461 - 461 )
Partition 462 (_462 - 462 )
Partition 463 (_463 - 463 )
Partition 464 (_464 - 464 )
Partition 465 (_465 - 465 )
Partition 466 (_466 - 466 )
Partition 467 (i.82_467 - 467 )
Partition 468 (_468 - 468 )
Partition 469 (_469 - 469 )
Partition 470 (_470 - 470 )
Partition 471 (_471 - 471 )
Partition 472 (_472 - 472 )
Partition 473 (_473 - 473 )
Partition 474 (_474 - 474 )
Partition 475 (_475 - 475 )
Partition 476 (_476 - 476 )
Partition 477 (_477 - 477 )
Partition 478 (i.83_478 - 478 )
Partition 479 (_479 - 479 )
Partition 480 (_480 - 480 )
Partition 481 (_481 - 481 )
Partition 482 (_482 - 482 )
Partition 483 (_483 - 483 )
Partition 484 (_484 - 484 )
Partition 485 (_485 - 485 )
Partition 486 (_486 - 486 )
Partition 487 (_487 - 487 )
Partition 488 (i.84_488 - 488 )
Partition 489 (_489 - 489 )
Partition 490 (_490 - 490 )
Partition 491 (_491 - 491 )
Partition 492 (_492 - 492 )
Partition 493 (_493 - 493 )
Partition 494 (_494 - 494 )
Partition 495 (_495 - 495 )
Partition 496 (_496 - 496 )
Partition 497 (_497 - 497 )
Partition 498 (i.85_498 - 498 )
Partition 499 (_499 - 499 )
Partition 500 (_500 - 500 )
Partition 501 (_501 - 501 )
Partition 502 (_502 - 502 )
Partition 503 (_503 - 503 )
Partition 504 (_504 - 504 )
Partition 505 (_505 - 505 )
Partition 506 (_506 - 506 )
Partition 507 (_507 - 507 )
Partition 508 (_508 - 508 )
Partition 509 (i.86_509 - 509 )
Partition 510 (_510 - 510 )
Partition 511 (_511 - 511 )
Partition 512 (_512 - 512 )
Partition 513 (_513 - 513 )
Partition 514 (_514 - 514 )
Partition 515 (_515 - 515 )
Partition 516 (_516 - 516 )
Partition 517 (_517 - 517 )
Partition 518 (_518 - 518 )
Partition 519 (i.87_519 - 519 )
Partition 520 (_520 - 520 )
Partition 521 (_521 - 521 )
Partition 522 (i.88_522 - 522 )
Partition 523 (i.89_523 - 523 )
Partition 524 (i.90_524 - 524 )
Partition 525 (_525 - 525 )
Partition 526 (_526 - 526 )
Partition 527 (_527 - 527 )
Partition 528 (_528 - 528 )
Partition 529 (_529 - 529 )
Partition 530 (_530 - 530 )
Partition 531 (_531 - 531 )
Partition 532 (_532 - 532 )
Partition 533 (_533 - 533 )
Partition 534 (_534 - 534 )
Partition 535 (_535 - 535 )
Partition 536 (_536 - 536 )
Partition 537 (_537 - 537 )
Partition 538 (_538 - 538 )
Partition 539 (_539 - 539 )
Partition 540 (_540 - 540 )
Partition 541 (_541 - 541 )
Partition 542 (_542 - 542 )
Partition 543 (i.91_543 - 543 )
Partition 544 (_544 - 544 )
Partition 545 (_545 - 545 )
Partition 546 (_546 - 546 )
Partition 547 (_547 - 547 )
Partition 548 (_548 - 548 )
Partition 549 (_549 - 549 )
Partition 550 (_550 - 550 )
Partition 551 (_551 - 551 )
Partition 552 (_552 - 552 )
Partition 553 (_553 - 553 )
Partition 554 (i.92_554 - 554 )
Partition 555 (_555 - 555 )
Partition 556 (_556 - 556 )
Partition 557 (_557 - 557 )
Partition 558 (_558 - 558 )
Partition 559 (_559 - 559 )
Partition 560 (_560 - 560 )
Partition 561 (_561 - 561 )
Partition 562 (_562 - 562 )
Partition 563 (_563 - 563 )
Partition 564 (i.93_564 - 564 )
Partition 565 (_565 - 565 )
Partition 566 (j_566 - 566 )
Partition 567 (j_567 - 567 )
Partition 568 (k_568 - 568 )
Partition 569 (k_569 - 569 )
Partition 570 (k_570 - 570 )
Partition 571 (k_571 - 571 )
Partition 572 (k_572 - 572 )
Partition 573 (kpiv_573 - 573 )
Partition 574 (kpiv_574 - 574 )
Partition 575 (kx_575 - 575 )
Partition 576 (kx_576 - 576 )
Partition 577 (l_577 - 577 )
Partition 578 (l_578 - 578 )
Partition 579 (l_579 - 579 )
Partition 580 (l_580 - 580 )
Partition 581 (l_581 - 581 )
Partition 582 (l_582 - 582 )
Partition 583 (l_583 - 583 )
Partition 584 (l_584 - 584 )
Partition 585 (l_585 - 585 )
Partition 586 (l_586 - 586 )
Partition 587 (l_587 - 587 )
Partition 588 (l_588 - 588 )
Partition 589 (l_589 - 589 )
Partition 615 (nb_615(D) - 615 )
Partition 616 (ubound.7_616 - 616 )
Partition 617 (stride.9_617 - 617 )
Partition 618 (stride.9_618 - 618 )
Partition 619 (ubound.8_619 - 619 )
Partition 620 (stride.11_620 - 620 )
Partition 621 (stride.11_621 - 621 )
Partition 622 (n_622(D) - 622 )
Partition 623 (ubound.10_623 - 623 )
Partition 624 (size.13_624 - 624 )
Partition 625 (size.13_625 - 625 )
Partition 626 (_626 - 626 )
Partition 627 (_627 - 627 )
Partition 628 (_628 - 628 )
Partition 629 (offset.12_629 - 629 )
Partition 630 (ubound.0_630 - 630 )
Partition 631 (stride.2_631 - 631 )
Partition 632 (stride.2_632 - 632 )
Partition 633 (ubound.1_633 - 633 )
Partition 634 (stride.4_634 - 634 )
Partition 635 (stride.4_635 - 635 )
Partition 636 (ubound.3_636 - 636 )
Partition 637 (size.6_637 - 637 )
Partition 638 (size.6_638 - 638 )
Partition 639 (_639 - 639 )
Partition 640 (_640 - 640 )
Partition 641 (_641 - 641 )
Partition 642 (offset.5_642 - 642 )
Partition 643 (ubound.14_643 - 643 )
Partition 644 (stride.16_644 - 644 )
Partition 645 (stride.16_645 - 645 )
Partition 646 (ubound.15_646 - 646 )
Partition 647 (stride.18_647 - 647 )
Partition 648 (stride.18_648 - 648 )
Partition 649 (ubound.17_649 - 649 )
Partition 650 (size.20_650 - 650 )
Partition 651 (size.20_651 - 651 )
Partition 652 (_652 - 652 )
Partition 653 (_653 - 653 )
Partition 654 (_654 - 654 )
Partition 655 (offset.19_655 - 655 )
Partition 656 (ubound.21_656 - 656 )
Partition 657 (stride.23_657 - 657 )
Partition 658 (stride.23_658 - 658 )
Partition 659 (nrmax_659(D) - 659 )
Partition 660 (ubound.22_660 - 660 )
Partition 661 (stride.25_661 - 661 )
Partition 662 (stride.25_662 - 662 )
Partition 663 (ubound.24_663 - 663 )
Partition 664 (size.27_664 - 664 )
Partition 665 (size.27_665 - 665 )
Partition 666 (_666 - 666 )
Partition 667 (_667 - 667 )
Partition 668 (_668 - 668 )
Partition 669 (offset.26_669 - 669 )
Partition 670 (_670 - 670 )
Partition 672 (_672 - 672 )
Partition 673 (im_673 - 673 )
Partition 674 (_674 - 674 )
Partition 675 (k_675 - 675 )
Partition 676 (_676 - 676 )
Partition 677 (_677 - 677 )
Partition 678 (j_678 - 678 )
Partition 679 (_679 - 679 )
Partition 680 (b_680(D) - 680 )
Partition 681 (btmp_681 - 681 )
Partition 682 (_682 - 682 )
Partition 683 (l_683 - 683 )
Partition 684 (_684 - 684 )
Partition 685 (a_685(D) - 685 )
Partition 686 (c_686(D) - 686 )
Partition 688 (l_688 - 688 )
Partition 689 (nrhs_689(D) - 689 )
Partition 690 (_690 - 690 )
Partition 691 (l_691 - 691 )
Partition 692 (_692 - 692 )
Partition 693 (r_693(D) - 693 )
Partition 695 (l_695 - 695 )
Partition 696 (j_696 - 696 )
Partition 697 (k_697 - 697 )
Partition 698 (_698 - 698 )
Partition 699 (kpiv_699 - 699 )
Partition 700 (_700 - 700 )
Partition 701 (kp1_701 - 701 )
Partition 702 (kx_702 - 702 )
Partition 703 (_703 - 703 )
Partition 704 (_704 - 704 )
Partition 705 (k_705 - 705 )
Partition 706 (_706 - 706 )
Partition 707 (_707 - 707 )
Partition 708 (kx_708 - 708 )
Partition 709 (k_709 - 709 )
Partition 710 (pivot_710 - 710 )
Partition 712 (_712 - 712 )
Partition 713 (_713 - 713 )
Partition 714 (l_714 - 714 )
Partition 715 (_715 - 715 )
Partition 716 (temp_716 - 716 )
Partition 719 (l_719 - 719 )
Partition 720 (_720 - 720 )
Partition 721 (l_721 - 721 )
Partition 722 (_722 - 722 )
Partition 723 (temp_723 - 723 )
Partition 726 (l_726 - 726 )
Partition 727 (_727 - 727 )
Partition 728 (l_728 - 728 )
Partition 729 (_729 - 729 )
Partition 730 (temp_730 - 730 )
Partition 733 (l_733 - 733 )
Partition 734 (_734 - 734 )
Partition 735 (_735 - 735 )
Partition 736 (k_736 - 736 )
Partition 737 (_737 - 737 )
Partition 738 (atmp_738 - 738 )
Partition 739 (_739 - 739 )
Partition 740 (_740 - 740 )
Partition 741 (l_741 - 741 )
Partition 742 (_742 - 742 )
Partition 744 (l_744 - 744 )
Partition 745 (_745 - 745 )
Partition 746 (l_746 - 746 )
Partition 747 (_747 - 747 )
Partition 749 (l_749 - 749 )
Partition 750 (_750 - 750 )
Partition 751 (l_751 - 751 )
Partition 752 (_752 - 752 )
Partition 754 (l_754 - 754 )
Partition 755 (k_755 - 755 )
Partition 756 (kpiv_756 - 756 )
Partition 767 (pivot_767 - 767 )
Partition 768 (_768 - 768 )
Partition 769 (l_769 - 769 )
Partition 770 (_770 - 770 )
Partition 772 (l_772 - 772 )
Partition 773 (_773 - 773 )
Partition 774 (l_774 - 774 )
Partition 775 (_775 - 775 )
Partition 777 (l_777 - 777 )
Partition 778 (_778 - 778 )
Partition 779 (kpiv_779 - 779 )
Partition 780 (_780 - 780 )
Partition 781 (kp1_781 - 781 )
Partition 782 (_782 - 782 )
Partition 783 (_783 - 783 )
Partition 784 (k_784 - 784 )
Partition 785 (_785 - 785 )
Partition 786 (atmp_786 - 786 )
Partition 787 (_787 - 787 )
Partition 788 (l_788 - 788 )
Partition 789 (_789 - 789 )
Partition 791 (l_791 - 791 )
Partition 792 (_792 - 792 )
Partition 793 (l_793 - 793 )
Partition 794 (_794 - 794 )
Partition 796 (l_796 - 796 )
Partition 797 (k_797 - 797 )
Partition 798 (kpiv_798 - 798 )
Partition 810 (_810 - 810 )
Partition 812 (_812 - 812 )
Partition 813 (ip_813 - 813 )
Partition 814 (_814 - 814 )
Partition 815 (l_815 - 815 )
Partition 816 (_816 - 816 )
Partition 817 (_817 - 817 )
Partition 818 (k_818 - 818 )
Partition 819 (_819 - 819 )
Partition 820 (_820 - 820 )
Partition 821 (j_821 - 821 )
Partition 822 (_822 - 822 )
Partition 824 (j_824 - 824 )
Partition 825 (k_825 - 825 )
Partition 826 (l_826 - 826 )


Partition map 

Partition 0 (j_566 - 566 )
Partition 1 (j_567 - 567 )
Partition 2 (k_568 - 568 )
Partition 3 (k_569 - 569 )
Partition 4 (k_570 - 570 )
Partition 5 (k_571 - 571 )
Partition 6 (k_572 - 572 )
Partition 7 (kpiv_573 - 573 )
Partition 8 (kpiv_574 - 574 )
Partition 9 (kx_575 - 575 )
Partition 10 (kx_576 - 576 )
Partition 11 (l_577 - 577 )
Partition 12 (l_578 - 578 )
Partition 13 (l_579 - 579 )
Partition 14 (l_580 - 580 )
Partition 15 (l_581 - 581 )
Partition 16 (l_582 - 582 )
Partition 17 (l_583 - 583 )
Partition 18 (l_584 - 584 )
Partition 19 (l_585 - 585 )
Partition 20 (l_586 - 586 )
Partition 21 (l_587 - 587 )
Partition 22 (l_588 - 588 )
Partition 23 (l_589 - 589 )
Partition 24 (nb_615(D) - 615 )
Partition 25 (n_622(D) - 622 )
Partition 26 (nrmax_659(D) - 659 )
Partition 27 (k_675 - 675 )
Partition 28 (j_678 - 678 )
Partition 29 (b_680(D) - 680 )
Partition 30 (l_683 - 683 )
Partition 31 (a_685(D) - 685 )
Partition 32 (c_686(D) - 686 )
Partition 33 (l_688 - 688 )
Partition 34 (nrhs_689(D) - 689 )
Partition 35 (l_691 - 691 )
Partition 36 (r_693(D) - 693 )
Partition 37 (l_695 - 695 )
Partition 38 (j_696 - 696 )
Partition 39 (k_697 - 697 )
Partition 40 (kpiv_699 - 699 )
Partition 41 (kp1_701 - 701 )
Partition 42 (kx_702 - 702 )
Partition 43 (k_705 - 705 )
Partition 44 (kx_708 - 708 )
Partition 45 (k_709 - 709 )
Partition 46 (pivot_710 - 710 )
Partition 47 (l_714 - 714 )
Partition 48 (temp_716 - 716 )
Partition 49 (l_719 - 719 )
Partition 50 (l_721 - 721 )
Partition 51 (temp_723 - 723 )
Partition 52 (l_726 - 726 )
Partition 53 (l_728 - 728 )
Partition 54 (temp_730 - 730 )
Partition 55 (l_733 - 733 )
Partition 56 (k_736 - 736 )
Partition 57 (atmp_738 - 738 )
Partition 58 (l_741 - 741 )
Partition 59 (l_744 - 744 )
Partition 60 (l_746 - 746 )
Partition 61 (l_749 - 749 )
Partition 62 (l_751 - 751 )
Partition 63 (l_754 - 754 )
Partition 64 (k_755 - 755 )
Partition 65 (kpiv_756 - 756 )
Partition 66 (pivot_767 - 767 )
Partition 67 (l_769 - 769 )
Partition 68 (l_772 - 772 )
Partition 69 (l_774 - 774 )
Partition 70 (l_777 - 777 )
Partition 71 (kpiv_779 - 779 )
Partition 72 (kp1_781 - 781 )
Partition 73 (k_784 - 784 )
Partition 74 (atmp_786 - 786 )
Partition 75 (l_788 - 788 )
Partition 76 (l_791 - 791 )
Partition 77 (l_793 - 793 )
Partition 78 (l_796 - 796 )
Partition 79 (k_797 - 797 )
Partition 80 (kpiv_798 - 798 )
Partition 81 (l_815 - 815 )
Partition 82 (k_818 - 818 )
Partition 83 (j_821 - 821 )
Partition 84 (j_824 - 824 )
Partition 85 (k_825 - 825 )
Partition 86 (l_826 - 826 )


Conflict graph:

After sorting:
Sorted Coalesce list:
(2147483646, 0) kx_575 <-> kx_576
(2147483646, 0) j_566 <-> j_567
(2147483646, 0) k_568 <-> k_569
(2147483646, 0) k_568 <-> k_570
(2147483646, 0) k_568 <-> k_571
(2147483646, 0) k_568 <-> k_572
(2147483646, 0) kpiv_573 <-> kpiv_574
(2147483646, 0) l_577 <-> l_578
(2147483646, 0) l_577 <-> l_579
(2147483646, 0) l_577 <-> l_580
(2147483646, 0) l_577 <-> l_581
(2147483646, 0) l_577 <-> l_582
(2147483646, 0) l_577 <-> l_583
(2147483646, 0) l_577 <-> l_584
(2147483646, 0) l_577 <-> l_585
(2147483646, 0) l_577 <-> l_586
(2147483646, 0) l_577 <-> l_587
(2147483646, 0) l_577 <-> l_588
(2147483646, 0) l_577 <-> l_589
(2147483646, 0) k_568 <-> k_675
(2147483646, 0) j_566 <-> j_678
(2147483646, 0) l_577 <-> l_683
(2147483646, 0) l_577 <-> l_688
(2147483646, 0) l_577 <-> l_691
(2147483646, 0) l_577 <-> l_695
(2147483646, 0) j_566 <-> j_696
(2147483646, 0) k_568 <-> k_697
(2147483646, 0) kpiv_573 <-> kpiv_699
(2147483646, 0) kx_575 <-> kx_702
(2147483646, 0) k_568 <-> k_705
(2147483646, 0) kx_575 <-> kx_708
(2147483646, 0) k_568 <-> k_709
(2147483646, 0) l_577 <-> l_714
(2147483646, 0) l_577 <-> l_719
(2147483646, 0) l_577 <-> l_721
(2147483646, 0) temp_716 <-> temp_723
(2147483646, 0) l_577 <-> l_726
(2147483646, 0) l_577 <-> l_728
(2147483646, 0) temp_716 <-> temp_730
(2147483646, 0) l_577 <-> l_733
(2147483646, 0) k_568 <-> k_736
(2147483646, 0) l_577 <-> l_741
(2147483646, 0) l_577 <-> l_744
(2147483646, 0) l_577 <-> l_746
(2147483646, 0) l_577 <-> l_749
(2147483646, 0) l_577 <-> l_751
(2147483646, 0) l_577 <-> l_754
(2147483646, 0) k_568 <-> k_755
(2147483646, 0) kpiv_573 <-> kpiv_756
(2147483646, 0) pivot_710 <-> pivot_767
(2147483646, 0) l_577 <-> l_769
(2147483646, 0) l_577 <-> l_772
(2147483646, 0) l_577 <-> l_774
(2147483646, 0) l_577 <-> l_777
(2147483646, 0) kpiv_573 <-> kpiv_779
(2147483646, 0) kp1_701 <-> kp1_781
(2147483646, 0) k_568 <-> k_784
(2147483646, 0) atmp_738 <-> atmp_786
(2147483646, 0) l_577 <-> l_788
(2147483646, 0) l_577 <-> l_791
(2147483646, 0) l_577 <-> l_793
(2147483646, 0) l_577 <-> l_796
(2147483646, 0) k_568 <-> k_797
(2147483646, 0) kpiv_573 <-> kpiv_798
(2147483646, 0) l_577 <-> l_815
(2147483646, 0) k_568 <-> k_818
(2147483646, 0) j_566 <-> j_821
(2147483646, 0) j_566 <-> j_824
(2147483646, 0) k_568 <-> k_825
(2147483646, 0) l_577 <-> l_826

Partition map 

Partition 0 (j_566 - 566 )
Partition 1 (j_567 - 567 )
Partition 2 (k_568 - 568 )
Partition 3 (k_569 - 569 )
Partition 4 (k_570 - 570 )
Partition 5 (k_571 - 571 )
Partition 6 (k_572 - 572 )
Partition 7 (kpiv_573 - 573 )
Partition 8 (kpiv_574 - 574 )
Partition 9 (kx_575 - 575 )
Partition 10 (kx_576 - 576 )
Partition 11 (l_577 - 577 )
Partition 12 (l_578 - 578 )
Partition 13 (l_579 - 579 )
Partition 14 (l_580 - 580 )
Partition 15 (l_581 - 581 )
Partition 16 (l_582 - 582 )
Partition 17 (l_583 - 583 )
Partition 18 (l_584 - 584 )
Partition 19 (l_585 - 585 )
Partition 20 (l_586 - 586 )
Partition 21 (l_587 - 587 )
Partition 22 (l_588 - 588 )
Partition 23 (l_589 - 589 )
Partition 24 (nb_615(D) - 615 )
Partition 25 (n_622(D) - 622 )
Partition 26 (nrmax_659(D) - 659 )
Partition 27 (k_675 - 675 )
Partition 28 (j_678 - 678 )
Partition 29 (b_680(D) - 680 )
Partition 30 (l_683 - 683 )
Partition 31 (a_685(D) - 685 )
Partition 32 (c_686(D) - 686 )
Partition 33 (l_688 - 688 )
Partition 34 (nrhs_689(D) - 689 )
Partition 35 (l_691 - 691 )
Partition 36 (r_693(D) - 693 )
Partition 37 (l_695 - 695 )
Partition 38 (j_696 - 696 )
Partition 39 (k_697 - 697 )
Partition 40 (kpiv_699 - 699 )
Partition 41 (kp1_701 - 701 )
Partition 42 (kx_702 - 702 )
Partition 43 (k_705 - 705 )
Partition 44 (kx_708 - 708 )
Partition 45 (k_709 - 709 )
Partition 46 (pivot_710 - 710 )
Partition 47 (l_714 - 714 )
Partition 48 (temp_716 - 716 )
Partition 49 (l_719 - 719 )
Partition 50 (l_721 - 721 )
Partition 51 (temp_723 - 723 )
Partition 52 (l_726 - 726 )
Partition 53 (l_728 - 728 )
Partition 54 (temp_730 - 730 )
Partition 55 (l_733 - 733 )
Partition 56 (k_736 - 736 )
Partition 57 (atmp_738 - 738 )
Partition 58 (l_741 - 741 )
Partition 59 (l_744 - 744 )
Partition 60 (l_746 - 746 )
Partition 61 (l_749 - 749 )
Partition 62 (l_751 - 751 )
Partition 63 (l_754 - 754 )
Partition 64 (k_755 - 755 )
Partition 65 (kpiv_756 - 756 )
Partition 66 (pivot_767 - 767 )
Partition 67 (l_769 - 769 )
Partition 68 (l_772 - 772 )
Partition 69 (l_774 - 774 )
Partition 70 (l_777 - 777 )
Partition 71 (kpiv_779 - 779 )
Partition 72 (kp1_781 - 781 )
Partition 73 (k_784 - 784 )
Partition 74 (atmp_786 - 786 )
Partition 75 (l_788 - 788 )
Partition 76 (l_791 - 791 )
Partition 77 (l_793 - 793 )
Partition 78 (l_796 - 796 )
Partition 79 (k_797 - 797 )
Partition 80 (kpiv_798 - 798 )
Partition 81 (l_815 - 815 )
Partition 82 (k_818 - 818 )
Partition 83 (j_821 - 821 )
Partition 84 (j_824 - 824 )
Partition 85 (k_825 - 825 )
Partition 86 (l_826 - 826 )

Coalesce list: (575)kx_575 & (576)kx_576 [map: 9, 10] : Success -> 9
Coalesce list: (566)j_566 & (567)j_567 [map: 0, 1] : Success -> 0
Coalesce list: (568)k_568 & (569)k_569 [map: 2, 3] : Success -> 2
Coalesce list: (568)k_568 & (570)k_570 [map: 2, 4] : Success -> 2
Coalesce list: (568)k_568 & (571)k_571 [map: 2, 5] : Success -> 2
Coalesce list: (568)k_568 & (572)k_572 [map: 2, 6] : Success -> 2
Coalesce list: (573)kpiv_573 & (574)kpiv_574 [map: 7, 8] : Success -> 7
Coalesce list: (577)l_577 & (578)l_578 [map: 11, 12] : Success -> 11
Coalesce list: (577)l_577 & (579)l_579 [map: 11, 13] : Success -> 11
Coalesce list: (577)l_577 & (580)l_580 [map: 11, 14] : Success -> 11
Coalesce list: (577)l_577 & (581)l_581 [map: 11, 15] : Success -> 11
Coalesce list: (577)l_577 & (582)l_582 [map: 11, 16] : Success -> 11
Coalesce list: (577)l_577 & (583)l_583 [map: 11, 17] : Success -> 11
Coalesce list: (577)l_577 & (584)l_584 [map: 11, 18] : Success -> 11
Coalesce list: (577)l_577 & (585)l_585 [map: 11, 19] : Success -> 11
Coalesce list: (577)l_577 & (586)l_586 [map: 11, 20] : Success -> 11
Coalesce list: (577)l_577 & (587)l_587 [map: 11, 21] : Success -> 11
Coalesce list: (577)l_577 & (588)l_588 [map: 11, 22] : Success -> 11
Coalesce list: (577)l_577 & (589)l_589 [map: 11, 23] : Success -> 11
Coalesce list: (568)k_568 & (675)k_675 [map: 2, 27] : Success -> 2
Coalesce list: (566)j_566 & (678)j_678 [map: 0, 28] : Success -> 0
Coalesce list: (577)l_577 & (683)l_683 [map: 11, 30] : Success -> 11
Coalesce list: (577)l_577 & (688)l_688 [map: 11, 33] : Success -> 11
Coalesce list: (577)l_577 & (691)l_691 [map: 11, 35] : Success -> 11
Coalesce list: (577)l_577 & (695)l_695 [map: 11, 37] : Success -> 11
Coalesce list: (566)j_566 & (696)j_696 [map: 0, 38] : Success -> 0
Coalesce list: (568)k_568 & (697)k_697 [map: 2, 39] : Success -> 2
Coalesce list: (573)kpiv_573 & (699)kpiv_699 [map: 7, 40] : Success -> 7
Coalesce list: (575)kx_575 & (702)kx_702 [map: 9, 42] : Success -> 9
Coalesce list: (568)k_568 & (705)k_705 [map: 2, 43] : Success -> 2
Coalesce list: (575)kx_575 & (708)kx_708 [map: 9, 44] : Success -> 9
Coalesce list: (568)k_568 & (709)k_709 [map: 2, 45] : Success -> 2
Coalesce list: (577)l_577 & (714)l_714 [map: 11, 47] : Success -> 11
Coalesce list: (577)l_577 & (719)l_719 [map: 11, 49] : Success -> 11
Coalesce list: (577)l_577 & (721)l_721 [map: 11, 50] : Success -> 11
Coalesce list: (716)temp_716 & (723)temp_723 [map: 48, 51] : Success -> 48
Coalesce list: (577)l_577 & (726)l_726 [map: 11, 52] : Success -> 11
Coalesce list: (577)l_577 & (728)l_728 [map: 11, 53] : Success -> 11
Coalesce list: (716)temp_716 & (730)temp_730 [map: 48, 54] : Success -> 48
Coalesce list: (577)l_577 & (733)l_733 [map: 11, 55] : Success -> 11
Coalesce list: (568)k_568 & (736)k_736 [map: 2, 56] : Success -> 2
Coalesce list: (577)l_577 & (741)l_741 [map: 11, 58] : Success -> 11
Coalesce list: (577)l_577 & (744)l_744 [map: 11, 59] : Success -> 11
Coalesce list: (577)l_577 & (746)l_746 [map: 11, 60] : Success -> 11
Coalesce list: (577)l_577 & (749)l_749 [map: 11, 61] : Success -> 11
Coalesce list: (577)l_577 & (751)l_751 [map: 11, 62] : Success -> 11
Coalesce list: (577)l_577 & (754)l_754 [map: 11, 63] : Success -> 11
Coalesce list: (568)k_568 & (755)k_755 [map: 2, 64] : Success -> 2
Coalesce list: (573)kpiv_573 & (756)kpiv_756 [map: 7, 65] : Success -> 7
Coalesce list: (710)pivot_710 & (767)pivot_767 [map: 46, 66] : Success -> 46
Coalesce list: (577)l_577 & (769)l_769 [map: 11, 67] : Success -> 11
Coalesce list: (577)l_577 & (772)l_772 [map: 11, 68] : Success -> 11
Coalesce list: (577)l_577 & (774)l_774 [map: 11, 69] : Success -> 11
Coalesce list: (577)l_577 & (777)l_777 [map: 11, 70] : Success -> 11
Coalesce list: (573)kpiv_573 & (779)kpiv_779 [map: 7, 71] : Success -> 7
Coalesce list: (701)kp1_701 & (781)kp1_781 [map: 41, 72] : Success -> 41
Coalesce list: (568)k_568 & (784)k_784 [map: 2, 73] : Success -> 2
Coalesce list: (738)atmp_738 & (786)atmp_786 [map: 57, 74] : Success -> 57
Coalesce list: (577)l_577 & (788)l_788 [map: 11, 75] : Success -> 11
Coalesce list: (577)l_577 & (791)l_791 [map: 11, 76] : Success -> 11
Coalesce list: (577)l_577 & (793)l_793 [map: 11, 77] : Success -> 11
Coalesce list: (577)l_577 & (796)l_796 [map: 11, 78] : Success -> 11
Coalesce list: (568)k_568 & (797)k_797 [map: 2, 79] : Success -> 2
Coalesce list: (573)kpiv_573 & (798)kpiv_798 [map: 7, 80] : Success -> 7
Coalesce list: (577)l_577 & (815)l_815 [map: 11, 81] : Success -> 11
Coalesce list: (568)k_568 & (818)k_818 [map: 2, 82] : Success -> 2
Coalesce list: (566)j_566 & (821)j_821 [map: 0, 83] : Success -> 0
Coalesce list: (566)j_566 & (824)j_824 [map: 0, 84] : Success -> 0
Coalesce list: (568)k_568 & (825)k_825 [map: 2, 85] : Success -> 2
Coalesce list: (577)l_577 & (826)l_826 [map: 11, 86] : Success -> 11
Coalesce list: (567)j_566 & (824)j_566: Already Coalesced.
Coalesce list: (567)j_566 & (821)j_566: Already Coalesced.
Coalesce list: (572)k_568 & (825)k_568: Already Coalesced.
Coalesce list: (572)k_568 & (818)k_568: Already Coalesced.
Coalesce list: (589)l_577 & (826)l_577: Already Coalesced.
Coalesce list: (589)l_577 & (815)l_577: Already Coalesced.
Coalesce list: (588)l_577 & (796)l_577: Already Coalesced.
Coalesce list: (588)l_577 & (793)l_577: Already Coalesced.
Coalesce list: (587)l_577 & (791)l_577: Already Coalesced.
Coalesce list: (587)l_577 & (788)l_577: Already Coalesced.
Coalesce list: (571)k_568 & (797)k_568: Already Coalesced.
Coalesce list: (571)k_568 & (784)k_568: Already Coalesced.
Coalesce list: (574)kpiv_573 & (798)kpiv_573: Already Coalesced.
Coalesce list: (574)kpiv_573 & (779)kpiv_573: Already Coalesced.
Coalesce list: (586)l_577 & (777)l_577: Already Coalesced.
Coalesce list: (586)l_577 & (774)l_577: Already Coalesced.
Coalesce list: (585)l_577 & (772)l_577: Already Coalesced.
Coalesce list: (585)l_577 & (769)l_577: Already Coalesced.
Coalesce list: (584)l_577 & (754)l_577: Already Coalesced.
Coalesce list: (584)l_577 & (751)l_577: Already Coalesced.
Coalesce list: (583)l_577 & (749)l_577: Already Coalesced.
Coalesce list: (583)l_577 & (746)l_577: Already Coalesced.
Coalesce list: (582)l_577 & (744)l_577: Already Coalesced.
Coalesce list: (582)l_577 & (741)l_577: Already Coalesced.
Coalesce list: (570)k_568 & (755)k_568: Already Coalesced.
Coalesce list: (570)k_568 & (736)k_568: Already Coalesced.
Coalesce list: (581)l_577 & (733)l_577: Already Coalesced.
Coalesce list: (581)l_577 & (728)l_577: Already Coalesced.
Coalesce list: (580)l_577 & (726)l_577: Already Coalesced.
Coalesce list: (580)l_577 & (721)l_577: Already Coalesced.
Coalesce list: (579)l_577 & (719)l_577: Already Coalesced.
Coalesce list: (579)l_577 & (714)l_577: Already Coalesced.
Coalesce list: (576)kx_575 & (708)kx_575: Already Coalesced.
Coalesce list: (575)kx_575 & (576)kx_575: Already Coalesced.
Coalesce list: (575)kx_575 & (702)kx_575: Already Coalesced.
Coalesce list: (569)k_568 & (709)k_568: Already Coalesced.
Coalesce list: (569)k_568 & (705)k_568: Already Coalesced.
Coalesce list: (573)kpiv_573 & (756)kpiv_573: Already Coalesced.
Coalesce list: (573)kpiv_573 & (699)kpiv_573: Already Coalesced.
Coalesce list: (578)l_577 & (695)l_577: Already Coalesced.
Coalesce list: (578)l_577 & (691)l_577: Already Coalesced.
Coalesce list: (577)l_577 & (688)l_577: Already Coalesced.
Coalesce list: (577)l_577 & (683)l_577: Already Coalesced.
Coalesce list: (566)j_566 & (696)j_566: Already Coalesced.
Coalesce list: (566)j_566 & (678)j_566: Already Coalesced.
Coalesce list: (568)k_568 & (697)k_568: Already Coalesced.
Coalesce list: (568)k_568 & (675)k_568: Already Coalesced.
After Coalescing:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (_2 - 2 )
Partition 2 (_3 - 3 )
Partition 3 (size.30_4 - 4 )
Partition 4 (_5 - 5 )
Partition 5 (size.31_6 - 6 )
Partition 6 (_7 - 7 )
Partition 7 (_8 - 8 )
Partition 8 (_9 - 9 )
Partition 9 (_10 - 10 )
Partition 10 (size.32_11 - 11 )
Partition 11 (_12 - 12 )
Partition 12 (size.33_13 - 13 )
Partition 13 (_14 - 14 )
Partition 14 (_15 - 15 )
Partition 15 (_16 - 16 )
Partition 16 (_17 - 17 )
Partition 17 (size.34_18 - 18 )
Partition 18 (_19 - 19 )
Partition 19 (size.35_20 - 20 )
Partition 20 (_21 - 21 )
Partition 21 (_22 - 22 )
Partition 22 (_23 - 23 )
Partition 23 (_24 - 24 )
Partition 24 (size.36_25 - 25 )
Partition 25 (_26 - 26 )
Partition 26 (size.37_27 - 27 )
Partition 27 (_28 - 28 )
Partition 28 (i.38_29 - 29 )
Partition 29 (i.39_30 - 30 )
Partition 30 (i.40_31 - 31 )
Partition 31 (i.41_32 - 32 )
Partition 32 (_33 - 33 )
Partition 33 (_34 - 34 )
Partition 34 (_35 - 35 )
Partition 35 (_36 - 36 )
Partition 36 (_37 - 37 )
Partition 37 (_38 - 38 )
Partition 38 (_39 - 39 )
Partition 39 (_40 - 40 )
Partition 40 (i.42_41 - 41 )
Partition 41 (_42 - 42 )
Partition 42 (_43 - 43 )
Partition 43 (_44 - 44 )
Partition 44 (_45 - 45 )
Partition 45 (_46 - 46 )
Partition 46 (_47 - 47 )
Partition 47 (_48 - 48 )
Partition 48 (_49 - 49 )
Partition 49 (_50 - 50 )
Partition 50 (_51 - 51 )
Partition 51 (_52 - 52 )
Partition 52 (_53 - 53 )
Partition 53 (_54 - 54 )
Partition 54 (_55 - 55 )
Partition 55 (_56 - 56 )
Partition 56 (_57 - 57 )
Partition 57 (_58 - 58 )
Partition 58 (_59 - 59 )
Partition 59 (_60 - 60 )
Partition 60 (i.43_61 - 61 )
Partition 61 (_62 - 62 )
Partition 62 (_63 - 63 )
Partition 63 (_64 - 64 )
Partition 64 (_65 - 65 )
Partition 65 (_66 - 66 )
Partition 66 (_67 - 67 )
Partition 67 (_68 - 68 )
Partition 68 (_69 - 69 )
Partition 69 (_70 - 70 )
Partition 70 (i.44_71 - 71 )
Partition 71 (_72 - 72 )
Partition 72 (_73 - 73 )
Partition 73 (_74 - 74 )
Partition 74 (_75 - 75 )
Partition 75 (_76 - 76 )
Partition 76 (_77 - 77 )
Partition 77 (_78 - 78 )
Partition 78 (_79 - 79 )
Partition 79 (_80 - 80 )
Partition 80 (_81 - 81 )
Partition 81 (_82 - 82 )
Partition 82 (_83 - 83 )
Partition 83 (_84 - 84 )
Partition 84 (_85 - 85 )
Partition 85 (_86 - 86 )
Partition 86 (_87 - 87 )
Partition 87 (_88 - 88 )
Partition 88 (_89 - 89 )
Partition 89 (_90 - 90 )
Partition 90 (i.45_91 - 91 )
Partition 91 (_92 - 92 )
Partition 92 (_93 - 93 )
Partition 93 (_94 - 94 )
Partition 94 (_95 - 95 )
Partition 95 (_96 - 96 )
Partition 96 (_97 - 97 )
Partition 97 (_98 - 98 )
Partition 98 (_99 - 99 )
Partition 99 (_100 - 100 )
Partition 100 (_101 - 101 )
Partition 101 (i.46_102 - 102 )
Partition 102 (_103 - 103 )
Partition 103 (_104 - 104 )
Partition 104 (_105 - 105 )
Partition 105 (_106 - 106 )
Partition 106 (_107 - 107 )
Partition 107 (_108 - 108 )
Partition 108 (_109 - 109 )
Partition 109 (_110 - 110 )
Partition 110 (_111 - 111 )
Partition 111 (_112 - 112 )
Partition 112 (i.47_113 - 113 )
Partition 113 (_114 - 114 )
Partition 114 (_115 - 115 )
Partition 115 (_116 - 116 )
Partition 116 (_117 - 117 )
Partition 117 (_118 - 118 )
Partition 118 (_119 - 119 )
Partition 119 (_120 - 120 )
Partition 120 (_121 - 121 )
Partition 121 (_122 - 122 )
Partition 122 (_123 - 123 )
Partition 123 (i.48_124 - 124 )
Partition 124 (_125 - 125 )
Partition 125 (_126 - 126 )
Partition 126 (_127 - 127 )
Partition 127 (_128 - 128 )
Partition 128 (_129 - 129 )
Partition 129 (_130 - 130 )
Partition 130 (_131 - 131 )
Partition 131 (_132 - 132 )
Partition 132 (_133 - 133 )
Partition 133 (i.49_134 - 134 )
Partition 134 (_135 - 135 )
Partition 135 (_136 - 136 )
Partition 136 (_137 - 137 )
Partition 137 (_138 - 138 )
Partition 138 (_139 - 139 )
Partition 139 (_140 - 140 )
Partition 140 (_141 - 141 )
Partition 141 (_142 - 142 )
Partition 142 (_143 - 143 )
Partition 143 (i.50_144 - 144 )
Partition 144 (_145 - 145 )
Partition 145 (_146 - 146 )
Partition 146 (_147 - 147 )
Partition 147 (_148 - 148 )
Partition 148 (_149 - 149 )
Partition 149 (_150 - 150 )
Partition 150 (_151 - 151 )
Partition 151 (_152 - 152 )
Partition 152 (i.51_153 - 153 )
Partition 153 (_154 - 154 )
Partition 154 (_155 - 155 )
Partition 155 (_156 - 156 )
Partition 156 (_157 - 157 )
Partition 157 (_158 - 158 )
Partition 158 (_159 - 159 )
Partition 159 (_160 - 160 )
Partition 160 (_161 - 161 )
Partition 161 (_162 - 162 )
Partition 162 (i.52_163 - 163 )
Partition 163 (_164 - 164 )
Partition 164 (_165 - 165 )
Partition 165 (_166 - 166 )
Partition 166 (_167 - 167 )
Partition 167 (_168 - 168 )
Partition 168 (_169 - 169 )
Partition 169 (_170 - 170 )
Partition 170 (_171 - 171 )
Partition 171 (_172 - 172 )
Partition 172 (i.53_173 - 173 )
Partition 173 (_174 - 174 )
Partition 174 (_175 - 175 )
Partition 175 (_176 - 176 )
Partition 176 (_177 - 177 )
Partition 177 (_178 - 178 )
Partition 178 (_179 - 179 )
Partition 179 (_180 - 180 )
Partition 180 (_181 - 181 )
Partition 181 (i.54_182 - 182 )
Partition 182 (_183 - 183 )
Partition 183 (_184 - 184 )
Partition 184 (_185 - 185 )
Partition 185 (_186 - 186 )
Partition 186 (_187 - 187 )
Partition 187 (_188 - 188 )
Partition 188 (_189 - 189 )
Partition 189 (_190 - 190 )
Partition 190 (_191 - 191 )
Partition 191 (i.55_192 - 192 )
Partition 192 (_193 - 193 )
Partition 193 (_194 - 194 )
Partition 194 (_195 - 195 )
Partition 195 (_196 - 196 )
Partition 196 (_197 - 197 )
Partition 197 (_198 - 198 )
Partition 198 (_199 - 199 )
Partition 199 (_200 - 200 )
Partition 200 (i.56_201 - 201 )
Partition 201 (_202 - 202 )
Partition 202 (_203 - 203 )
Partition 203 (_204 - 204 )
Partition 204 (_205 - 205 )
Partition 205 (_206 - 206 )
Partition 206 (_207 - 207 )
Partition 207 (_208 - 208 )
Partition 208 (_209 - 209 )
Partition 209 (_210 - 210 )
Partition 210 (i.57_211 - 211 )
Partition 211 (_212 - 212 )
Partition 212 (_213 - 213 )
Partition 213 (_214 - 214 )
Partition 214 (_215 - 215 )
Partition 215 (_216 - 216 )
Partition 216 (_217 - 217 )
Partition 217 (_218 - 218 )
Partition 218 (_219 - 219 )
Partition 219 (i.58_220 - 220 )
Partition 220 (_221 - 221 )
Partition 221 (_222 - 222 )
Partition 222 (_223 - 223 )
Partition 223 (_224 - 224 )
Partition 224 (_225 - 225 )
Partition 225 (_226 - 226 )
Partition 226 (_227 - 227 )
Partition 227 (_228 - 228 )
Partition 228 (_229 - 229 )
Partition 229 (i.59_230 - 230 )
Partition 230 (_231 - 231 )
Partition 231 (_232 - 232 )
Partition 232 (_233 - 233 )
Partition 233 (_234 - 234 )
Partition 234 (_235 - 235 )
Partition 235 (_236 - 236 )
Partition 236 (_237 - 237 )
Partition 237 (_238 - 238 )
Partition 238 (i.60_239 - 239 )
Partition 239 (_240 - 240 )
Partition 240 (_241 - 241 )
Partition 241 (_242 - 242 )
Partition 242 (_243 - 243 )
Partition 243 (_244 - 244 )
Partition 244 (_245 - 245 )
Partition 245 (_246 - 246 )
Partition 246 (_247 - 247 )
Partition 247 (_248 - 248 )
Partition 248 (i.61_249 - 249 )
Partition 249 (_250 - 250 )
Partition 250 (_251 - 251 )
Partition 251 (_252 - 252 )
Partition 252 (_253 - 253 )
Partition 253 (_254 - 254 )
Partition 254 (_255 - 255 )
Partition 255 (_256 - 256 )
Partition 256 (_257 - 257 )
Partition 257 (i.62_258 - 258 )
Partition 258 (_259 - 259 )
Partition 259 (_260 - 260 )
Partition 260 (_261 - 261 )
Partition 261 (_262 - 262 )
Partition 262 (_263 - 263 )
Partition 263 (_264 - 264 )
Partition 264 (_265 - 265 )
Partition 265 (_266 - 266 )
Partition 266 (_267 - 267 )
Partition 267 (i.63_268 - 268 )
Partition 268 (_269 - 269 )
Partition 269 (_270 - 270 )
Partition 270 (_271 - 271 )
Partition 271 (_272 - 272 )
Partition 272 (_273 - 273 )
Partition 273 (_274 - 274 )
Partition 274 (_275 - 275 )
Partition 275 (_276 - 276 )
Partition 276 (i.64_277 - 277 )
Partition 277 (_278 - 278 )
Partition 278 (_279 - 279 )
Partition 279 (_280 - 280 )
Partition 280 (_281 - 281 )
Partition 281 (_282 - 282 )
Partition 282 (_283 - 283 )
Partition 283 (_284 - 284 )
Partition 284 (_285 - 285 )
Partition 285 (i.65_286 - 286 )
Partition 286 (_287 - 287 )
Partition 287 (_288 - 288 )
Partition 288 (_289 - 289 )
Partition 289 (_290 - 290 )
Partition 290 (_291 - 291 )
Partition 291 (_292 - 292 )
Partition 292 (_293 - 293 )
Partition 293 (_294 - 294 )
Partition 294 (_295 - 295 )
Partition 295 (i.66_296 - 296 )
Partition 296 (_297 - 297 )
Partition 297 (_298 - 298 )
Partition 298 (_299 - 299 )
Partition 299 (_300 - 300 )
Partition 300 (_301 - 301 )
Partition 301 (_302 - 302 )
Partition 302 (_303 - 303 )
Partition 303 (_304 - 304 )
Partition 304 (_305 - 305 )
Partition 305 (_306 - 306 )
Partition 306 (i.67_307 - 307 )
Partition 307 (_308 - 308 )
Partition 308 (_309 - 309 )
Partition 309 (_310 - 310 )
Partition 310 (_311 - 311 )
Partition 311 (_312 - 312 )
Partition 312 (_313 - 313 )
Partition 313 (_314 - 314 )
Partition 314 (_315 - 315 )
Partition 315 (_316 - 316 )
Partition 316 (i.68_317 - 317 )
Partition 317 (_318 - 318 )
Partition 318 (_319 - 319 )
Partition 319 (_320 - 320 )
Partition 320 (_321 - 321 )
Partition 321 (_322 - 322 )
Partition 322 (_323 - 323 )
Partition 323 (_324 - 324 )
Partition 324 (_325 - 325 )
Partition 325 (_326 - 326 )
Partition 326 (i.69_327 - 327 )
Partition 327 (_328 - 328 )
Partition 328 (_329 - 329 )
Partition 329 (_330 - 330 )
Partition 330 (_331 - 331 )
Partition 331 (_332 - 332 )
Partition 332 (_333 - 333 )
Partition 333 (_334 - 334 )
Partition 334 (_335 - 335 )
Partition 335 (_336 - 336 )
Partition 336 (_337 - 337 )
Partition 337 (i.70_338 - 338 )
Partition 338 (_339 - 339 )
Partition 339 (_340 - 340 )
Partition 340 (_341 - 341 )
Partition 341 (_342 - 342 )
Partition 342 (_343 - 343 )
Partition 343 (_344 - 344 )
Partition 344 (_345 - 345 )
Partition 345 (_346 - 346 )
Partition 346 (_347 - 347 )
Partition 347 (i.71_348 - 348 )
Partition 348 (_349 - 349 )
Partition 349 (_350 - 350 )
Partition 350 (_351 - 351 )
Partition 351 (_352 - 352 )
Partition 352 (_353 - 353 )
Partition 353 (_354 - 354 )
Partition 354 (_355 - 355 )
Partition 355 (_356 - 356 )
Partition 356 (_357 - 357 )
Partition 357 (i.72_358 - 358 )
Partition 358 (_359 - 359 )
Partition 359 (_360 - 360 )
Partition 360 (_361 - 361 )
Partition 361 (_362 - 362 )
Partition 362 (_363 - 363 )
Partition 363 (_364 - 364 )
Partition 364 (_365 - 365 )
Partition 365 (_366 - 366 )
Partition 366 (_367 - 367 )
Partition 367 (_368 - 368 )
Partition 368 (i.73_369 - 369 )
Partition 369 (_370 - 370 )
Partition 370 (_371 - 371 )
Partition 371 (_372 - 372 )
Partition 372 (_373 - 373 )
Partition 373 (_374 - 374 )
Partition 374 (_375 - 375 )
Partition 375 (_376 - 376 )
Partition 376 (_377 - 377 )
Partition 377 (_378 - 378 )
Partition 378 (i.74_379 - 379 )
Partition 379 (_380 - 380 )
Partition 380 (_381 - 381 )
Partition 381 (_382 - 382 )
Partition 382 (_383 - 383 )
Partition 383 (_384 - 384 )
Partition 384 (_385 - 385 )
Partition 385 (_386 - 386 )
Partition 386 (_387 - 387 )
Partition 387 (_388 - 388 )
Partition 388 (_389 - 389 )
Partition 389 (_390 - 390 )
Partition 390 (i.75_391 - 391 )
Partition 391 (_392 - 392 )
Partition 392 (_393 - 393 )
Partition 393 (_394 - 394 )
Partition 394 (_395 - 395 )
Partition 395 (_396 - 396 )
Partition 396 (_397 - 397 )
Partition 397 (_398 - 398 )
Partition 398 (_399 - 399 )
Partition 399 (_400 - 400 )
Partition 400 (_401 - 401 )
Partition 401 (_402 - 402 )
Partition 402 (i.76_403 - 403 )
Partition 403 (_404 - 404 )
Partition 404 (_405 - 405 )
Partition 405 (_406 - 406 )
Partition 406 (_407 - 407 )
Partition 407 (_408 - 408 )
Partition 408 (_409 - 409 )
Partition 409 (_410 - 410 )
Partition 410 (_411 - 411 )
Partition 411 (_412 - 412 )
Partition 412 (_413 - 413 )
Partition 413 (i.77_414 - 414 )
Partition 414 (_415 - 415 )
Partition 415 (_416 - 416 )
Partition 416 (_417 - 417 )
Partition 417 (_418 - 418 )
Partition 418 (_419 - 419 )
Partition 419 (_420 - 420 )
Partition 420 (_421 - 421 )
Partition 421 (_422 - 422 )
Partition 422 (_423 - 423 )
Partition 423 (_424 - 424 )
Partition 424 (i.78_425 - 425 )
Partition 425 (_426 - 426 )
Partition 426 (_427 - 427 )
Partition 427 (_428 - 428 )
Partition 428 (_429 - 429 )
Partition 429 (_430 - 430 )
Partition 430 (_431 - 431 )
Partition 431 (_432 - 432 )
Partition 432 (_433 - 433 )
Partition 433 (_434 - 434 )
Partition 434 (_435 - 435 )
Partition 435 (i.79_436 - 436 )
Partition 436 (_437 - 437 )
Partition 437 (_438 - 438 )
Partition 438 (_439 - 439 )
Partition 439 (_440 - 440 )
Partition 440 (_441 - 441 )
Partition 441 (_442 - 442 )
Partition 442 (_443 - 443 )
Partition 443 (_444 - 444 )
Partition 444 (_445 - 445 )
Partition 445 (_446 - 446 )
Partition 446 (_447 - 447 )
Partition 447 (i.80_448 - 448 )
Partition 448 (_449 - 449 )
Partition 449 (_450 - 450 )
Partition 450 (_451 - 451 )
Partition 451 (_452 - 452 )
Partition 452 (_453 - 453 )
Partition 453 (_454 - 454 )
Partition 454 (_455 - 455 )
Partition 455 (_456 - 456 )
Partition 456 (i.81_457 - 457 )
Partition 457 (_458 - 458 )
Partition 458 (_459 - 459 )
Partition 459 (_460 - 460 )
Partition 460 (_461 - 461 )
Partition 461 (_462 - 462 )
Partition 462 (_463 - 463 )
Partition 463 (_464 - 464 )
Partition 464 (_465 - 465 )
Partition 465 (_466 - 466 )
Partition 466 (i.82_467 - 467 )
Partition 467 (_468 - 468 )
Partition 468 (_469 - 469 )
Partition 469 (_470 - 470 )
Partition 470 (_471 - 471 )
Partition 471 (_472 - 472 )
Partition 472 (_473 - 473 )
Partition 473 (_474 - 474 )
Partition 474 (_475 - 475 )
Partition 475 (_476 - 476 )
Partition 476 (_477 - 477 )
Partition 477 (i.83_478 - 478 )
Partition 478 (_479 - 479 )
Partition 479 (_480 - 480 )
Partition 480 (_481 - 481 )
Partition 481 (_482 - 482 )
Partition 482 (_483 - 483 )
Partition 483 (_484 - 484 )
Partition 484 (_485 - 485 )
Partition 485 (_486 - 486 )
Partition 486 (_487 - 487 )
Partition 487 (i.84_488 - 488 )
Partition 488 (_489 - 489 )
Partition 489 (_490 - 490 )
Partition 490 (_491 - 491 )
Partition 491 (_492 - 492 )
Partition 492 (_493 - 493 )
Partition 493 (_494 - 494 )
Partition 494 (_495 - 495 )
Partition 495 (_496 - 496 )
Partition 496 (_497 - 497 )
Partition 497 (i.85_498 - 498 )
Partition 498 (_499 - 499 )
Partition 499 (_500 - 500 )
Partition 500 (_501 - 501 )
Partition 501 (_502 - 502 )
Partition 502 (_503 - 503 )
Partition 503 (_504 - 504 )
Partition 504 (_505 - 505 )
Partition 505 (_506 - 506 )
Partition 506 (_507 - 507 )
Partition 507 (_508 - 508 )
Partition 508 (i.86_509 - 509 )
Partition 509 (_510 - 510 )
Partition 510 (_511 - 511 )
Partition 511 (_512 - 512 )
Partition 512 (_513 - 513 )
Partition 513 (_514 - 514 )
Partition 514 (_515 - 515 )
Partition 515 (_516 - 516 )
Partition 516 (_517 - 517 )
Partition 517 (_518 - 518 )
Partition 518 (i.87_519 - 519 )
Partition 519 (_520 - 520 )
Partition 520 (_521 - 521 )
Partition 521 (i.88_522 - 522 )
Partition 522 (i.89_523 - 523 )
Partition 523 (i.90_524 - 524 )
Partition 524 (_525 - 525 )
Partition 525 (_526 - 526 )
Partition 526 (_527 - 527 )
Partition 527 (_528 - 528 )
Partition 528 (_529 - 529 )
Partition 529 (_530 - 530 )
Partition 530 (_531 - 531 )
Partition 531 (_532 - 532 )
Partition 532 (_533 - 533 )
Partition 533 (_534 - 534 )
Partition 534 (_535 - 535 )
Partition 535 (_536 - 536 )
Partition 536 (_537 - 537 )
Partition 537 (_538 - 538 )
Partition 538 (_539 - 539 )
Partition 539 (_540 - 540 )
Partition 540 (_541 - 541 )
Partition 541 (_542 - 542 )
Partition 542 (i.91_543 - 543 )
Partition 543 (_544 - 544 )
Partition 544 (_545 - 545 )
Partition 545 (_546 - 546 )
Partition 546 (_547 - 547 )
Partition 547 (_548 - 548 )
Partition 548 (_549 - 549 )
Partition 549 (_550 - 550 )
Partition 550 (_551 - 551 )
Partition 551 (_552 - 552 )
Partition 552 (_553 - 553 )
Partition 553 (i.92_554 - 554 )
Partition 554 (_555 - 555 )
Partition 555 (_556 - 556 )
Partition 556 (_557 - 557 )
Partition 557 (_558 - 558 )
Partition 558 (_559 - 559 )
Partition 559 (_560 - 560 )
Partition 560 (_561 - 561 )
Partition 561 (_562 - 562 )
Partition 562 (_563 - 563 )
Partition 563 (i.93_564 - 564 )
Partition 564 (_565 - 565 )
Partition 565 (j_566 - 566 567 678 696 821 824 )
Partition 566 (k_568 - 568 569 570 571 572 675 697 705 709 736 755 784 797 818 825 )
Partition 567 (kpiv_573 - 573 574 699 756 779 798 )
Partition 568 (kx_575 - 575 576 702 708 )
Partition 569 (l_577 - 577 578 579 580 581 582 583 584 585 586 587 588 589 683 688 691 695 714 719 721 726 728 733 741 744 746 749 751 754 769 772 774 777 788 791 793 796 815 826 )
Partition 570 (nb_615(D) - 615 )
Partition 571 (ubound.7_616 - 616 )
Partition 572 (stride.9_617 - 617 )
Partition 573 (stride.9_618 - 618 )
Partition 574 (ubound.8_619 - 619 )
Partition 575 (stride.11_620 - 620 )
Partition 576 (stride.11_621 - 621 )
Partition 577 (n_622(D) - 622 )
Partition 578 (ubound.10_623 - 623 )
Partition 579 (size.13_624 - 624 )
Partition 580 (size.13_625 - 625 )
Partition 581 (_626 - 626 )
Partition 582 (_627 - 627 )
Partition 583 (_628 - 628 )
Partition 584 (offset.12_629 - 629 )
Partition 585 (ubound.0_630 - 630 )
Partition 586 (stride.2_631 - 631 )
Partition 587 (stride.2_632 - 632 )
Partition 588 (ubound.1_633 - 633 )
Partition 589 (stride.4_634 - 634 )
Partition 590 (stride.4_635 - 635 )
Partition 591 (ubound.3_636 - 636 )
Partition 592 (size.6_637 - 637 )
Partition 593 (size.6_638 - 638 )
Partition 594 (_639 - 639 )
Partition 595 (_640 - 640 )
Partition 596 (_641 - 641 )
Partition 597 (offset.5_642 - 642 )
Partition 598 (ubound.14_643 - 643 )
Partition 599 (stride.16_644 - 644 )
Partition 600 (stride.16_645 - 645 )
Partition 601 (ubound.15_646 - 646 )
Partition 602 (stride.18_647 - 647 )
Partition 603 (stride.18_648 - 648 )
Partition 604 (ubound.17_649 - 649 )
Partition 605 (size.20_650 - 650 )
Partition 606 (size.20_651 - 651 )
Partition 607 (_652 - 652 )
Partition 608 (_653 - 653 )
Partition 609 (_654 - 654 )
Partition 610 (offset.19_655 - 655 )
Partition 611 (ubound.21_656 - 656 )
Partition 612 (stride.23_657 - 657 )
Partition 613 (stride.23_658 - 658 )
Partition 614 (nrmax_659(D) - 659 )
Partition 615 (ubound.22_660 - 660 )
Partition 616 (stride.25_661 - 661 )
Partition 617 (stride.25_662 - 662 )
Partition 618 (ubound.24_663 - 663 )
Partition 619 (size.27_664 - 664 )
Partition 620 (size.27_665 - 665 )
Partition 621 (_666 - 666 )
Partition 622 (_667 - 667 )
Partition 623 (_668 - 668 )
Partition 624 (offset.26_669 - 669 )
Partition 625 (_670 - 670 )
Partition 626 (_672 - 672 )
Partition 627 (im_673 - 673 )
Partition 628 (_674 - 674 )
Partition 629 (_676 - 676 )
Partition 630 (_677 - 677 )
Partition 631 (_679 - 679 )
Partition 632 (b_680(D) - 680 )
Partition 633 (btmp_681 - 681 )
Partition 634 (_682 - 682 )
Partition 635 (_684 - 684 )
Partition 636 (a_685(D) - 685 )
Partition 637 (c_686(D) - 686 )
Partition 638 (nrhs_689(D) - 689 )
Partition 639 (_690 - 690 )
Partition 640 (_692 - 692 )
Partition 641 (r_693(D) - 693 )
Partition 642 (_698 - 698 )
Partition 643 (_700 - 700 )
Partition 644 (kp1_701 - 701 781 )
Partition 645 (_703 - 703 )
Partition 646 (_704 - 704 )
Partition 647 (_706 - 706 )
Partition 648 (_707 - 707 )
Partition 649 (pivot_710 - 710 767 )
Partition 650 (_712 - 712 )
Partition 651 (_713 - 713 )
Partition 652 (_715 - 715 )
Partition 653 (temp_716 - 716 723 730 )
Partition 654 (_720 - 720 )
Partition 655 (_722 - 722 )
Partition 656 (_727 - 727 )
Partition 657 (_729 - 729 )
Partition 658 (_734 - 734 )
Partition 659 (_735 - 735 )
Partition 660 (_737 - 737 )
Partition 661 (atmp_738 - 738 786 )
Partition 662 (_739 - 739 )
Partition 663 (_740 - 740 )
Partition 664 (_742 - 742 )
Partition 665 (_745 - 745 )
Partition 666 (_747 - 747 )
Partition 667 (_750 - 750 )
Partition 668 (_752 - 752 )
Partition 669 (_768 - 768 )
Partition 670 (_770 - 770 )
Partition 671 (_773 - 773 )
Partition 672 (_775 - 775 )
Partition 673 (_778 - 778 )
Partition 674 (_780 - 780 )
Partition 675 (_782 - 782 )
Partition 676 (_783 - 783 )
Partition 677 (_785 - 785 )
Partition 678 (_787 - 787 )
Partition 679 (_789 - 789 )
Partition 680 (_792 - 792 )
Partition 681 (_794 - 794 )
Partition 682 (_810 - 810 )
Partition 683 (_812 - 812 )
Partition 684 (ip_813 - 813 )
Partition 685 (_814 - 814 )
Partition 686 (_816 - 816 )
Partition 687 (_817 - 817 )
Partition 688 (_819 - 819 )
Partition 689 (_820 - 820 )
Partition 690 (_822 - 822 )

bnsolv (real(kind=4)[0:D.3693] * restrict a, real(kind=4)[0:D.3696] * restrict b, real(kind=4)[0:D.3690] * restrict c, real(kind=4)[0:D.3687] * restrict r, integer(kind=4) & restrict nb, integer(kind=4) & restrict n, integer(kind=4) & restrict nrhs, integer(kind=4) & restrict nrmax)
{
  logical(kind=1) D.3682;
  integer(kind=4) D.3679;
  logical(kind=1) D.3678;
  integer(kind=4) D.3675;
  logical(kind=1) D.3674;
  integer(kind=4) D.3671;
  logical(kind=1) D.3670;
  integer(kind=4) D.3667;
  logical(kind=1) D.3662;
  integer(kind=4) D.3659;
  logical(kind=1) D.3657;
  integer(kind=4) D.3654;
  logical(kind=1) D.3653;
  integer(kind=4) D.3650;
  integer(kind=4) D.3649;
  logical(kind=1) D.3648;
  integer(kind=4) D.3645;
  logical(kind=1) D.3643;
  integer(kind=4) D.3640;
  logical(kind=1) D.3638;
  integer(kind=4) D.3635;
  struct __st_parameter_dt dt_parm.29;
  logical(kind=1) D.3629;
  integer(kind=4) D.3626;
  logical(kind=1) D.3624;
  integer(kind=4) D.3621;
  logical(kind=1) D.3619;
  integer(kind=4) D.3616;
  integer(kind=4) D.3615;
  logical(kind=1) D.3614;
  integer(kind=4) D.3611;
  integer(kind=4) D.3610;
  logical(kind=1) D.3608;
  integer(kind=4) D.3605;
  logical(kind=1) D.3603;
  integer(kind=4) D.3600;
  logical(kind=1) D.3598;
  integer(kind=4) D.3595;
  integer(kind=4) D.3594;
  struct __st_parameter_dt dt_parm.28;
  real(kind=4) D.3589;
  logical(kind=1) D.3588;
  integer(kind=4) D.3585;
  integer(kind=4) D.3584;
  logical(kind=1) D.3583;
  integer(kind=4) D.3580;
  logical(kind=1) D.3576;
  integer(kind=4) D.3573;
  logical(kind=1) D.3571;
  integer(kind=4) D.3568;
  logical(kind=1) D.3567;
  integer(kind=4) D.3564;
  logical(kind=1) D.3563;
  integer(kind=4) D.3560;
  logical(kind=1) D.3557;
  integer(kind=4) D.3554;
  sizetype D.3698;
  bitsizetype D.3697;
  integer(kind=8) D.3696;
  sizetype D.3695;
  bitsizetype D.3694;
  integer(kind=8) D.3693;
  sizetype D.3692;
  bitsizetype D.3691;
  integer(kind=8) D.3690;
  sizetype D.3689;
  bitsizetype D.3688;
  integer(kind=8) D.3687;
  real(kind=4) temp;
  integer(kind=8) size.27;
  integer(kind=8) offset.26;
  integer(kind=8) stride.25;
  integer(kind=8) ubound.24;
  integer(kind=8) stride.23;
  integer(kind=8) ubound.22;
  integer(kind=8) ubound.21;
  real(kind=4) pivot;
  integer(kind=4) l;
  integer(kind=4) kx;
  integer(kind=4) kpiv;
  integer(kind=4) kp1;
  integer(kind=4) k;
  integer(kind=4) j;
  integer(kind=4) ip;
  integer(kind=4) im;
  integer(kind=4) i;
  integer(kind=8) size.20;
  integer(kind=8) offset.19;
  integer(kind=8) stride.18;
  integer(kind=8) ubound.17;
  integer(kind=8) stride.16;
  integer(kind=8) ubound.15;
  integer(kind=8) ubound.14;
  real(kind=4) btmp;
  integer(kind=8) size.13;
  integer(kind=8) offset.12;
  integer(kind=8) stride.11;
  integer(kind=8) ubound.10;
  integer(kind=8) stride.9;
  integer(kind=8) ubound.8;
  integer(kind=8) ubound.7;
  real(kind=4) atmp;
  integer(kind=8) size.6;
  integer(kind=8) offset.5;
  integer(kind=8) stride.4;
  integer(kind=8) ubound.3;
  integer(kind=8) stride.2;
  integer(kind=8) ubound.1;
  integer(kind=8) ubound.0;
  integer(kind=4) _1;
  integer(kind=4) _2;
  integer(kind=4) _3;
  sizetype size.30_4;
  bitsizetype _5;
  sizetype size.31_6;
  integer(kind=8) _7;
  integer(kind=4) _8;
  integer(kind=4) _9;
  integer(kind=4) _10;
  sizetype size.32_11;
  bitsizetype _12;
  sizetype size.33_13;
  integer(kind=8) _14;
  integer(kind=4) _15;
  integer(kind=4) _16;
  integer(kind=4) _17;
  sizetype size.34_18;
  bitsizetype _19;
  sizetype size.35_20;
  integer(kind=8) _21;
  integer(kind=4) _22;
  integer(kind=4) _23;
  integer(kind=4) _24;
  sizetype size.36_25;
  bitsizetype _26;
  sizetype size.37_27;
  integer(kind=8) _28;
  integer(kind=4) i.38_29;
  integer(kind=4) i.39_30;
  integer(kind=4) i.40_31;
  integer(kind=4) i.41_32;
  integer(kind=8) _33;
  integer(kind=8) _34;
  integer(kind=8) _35;
  integer(kind=8) _36;
  integer(kind=8) _37;
  integer(kind=8) _38;
  integer(kind=8) _39;
  integer(kind=8) _40;
  integer(kind=4) i.42_41;
  integer(kind=8) _42;
  integer(kind=8) _43;
  integer(kind=8) _44;
  integer(kind=8) _45;
  integer(kind=8) _46;
  integer(kind=8) _47;
  integer(kind=8) _48;
  integer(kind=8) _49;
  real(kind=4) _50;
  integer(kind=8) _51;
  integer(kind=8) _52;
  integer(kind=8) _53;
  integer(kind=8) _54;
  integer(kind=8) _55;
  integer(kind=8) _56;
  integer(kind=8) _57;
  integer(kind=8) _58;
  real(kind=4) _59;
  real(kind=4) _60;
  integer(kind=4) i.43_61;
  integer(kind=8) _62;
  integer(kind=8) _63;
  integer(kind=8) _64;
  integer(kind=8) _65;
  integer(kind=8) _66;
  integer(kind=8) _67;
  integer(kind=8) _68;
  integer(kind=8) _69;
  real(kind=4) _70;
  integer(kind=4) i.44_71;
  integer(kind=8) _72;
  integer(kind=8) _73;
  integer(kind=8) _74;
  integer(kind=8) _75;
  integer(kind=8) _76;
  integer(kind=8) _77;
  integer(kind=8) _78;
  integer(kind=8) _79;
  real(kind=4) _80;
  integer(kind=8) _81;
  integer(kind=8) _82;
  integer(kind=8) _83;
  integer(kind=8) _84;
  integer(kind=8) _85;
  integer(kind=8) _86;
  integer(kind=8) _87;
  integer(kind=8) _88;
  real(kind=4) _89;
  real(kind=4) _90;
  integer(kind=4) i.45_91;
  integer(kind=8) _92;
  integer(kind=8) _93;
  integer(kind=8) _94;
  integer(kind=8) _95;
  integer(kind=8) _96;
  integer(kind=8) _97;
  integer(kind=8) _98;
  integer(kind=8) _99;
  real(kind=4) _100;
  integer(kind=4) _101;
  integer(kind=4) i.46_102;
  integer(kind=8) _103;
  integer(kind=8) _104;
  integer(kind=8) _105;
  integer(kind=8) _106;
  integer(kind=8) _107;
  integer(kind=8) _108;
  integer(kind=8) _109;
  integer(kind=8) _110;
  real(kind=4) _111;
  real(kind=4) _112;
  integer(kind=4) i.47_113;
  integer(kind=8) _114;
  integer(kind=8) _115;
  integer(kind=8) _116;
  integer(kind=8) _117;
  integer(kind=8) _118;
  integer(kind=8) _119;
  integer(kind=8) _120;
  integer(kind=8) _121;
  real(kind=4) _122;
  real(kind=4) _123;
  integer(kind=4) i.48_124;
  integer(kind=8) _125;
  integer(kind=8) _126;
  integer(kind=8) _127;
  integer(kind=8) _128;
  integer(kind=8) _129;
  integer(kind=8) _130;
  integer(kind=8) _131;
  integer(kind=8) _132;
  real(kind=4) _133;
  integer(kind=4) i.49_134;
  integer(kind=8) _135;
  integer(kind=8) _136;
  integer(kind=8) _137;
  integer(kind=8) _138;
  integer(kind=8) _139;
  integer(kind=8) _140;
  integer(kind=8) _141;
  integer(kind=8) _142;
  real(kind=4) _143;
  integer(kind=4) i.50_144;
  integer(kind=8) _145;
  integer(kind=8) _146;
  integer(kind=8) _147;
  integer(kind=8) _148;
  integer(kind=8) _149;
  integer(kind=8) _150;
  integer(kind=8) _151;
  integer(kind=8) _152;
  integer(kind=4) i.51_153;
  integer(kind=8) _154;
  integer(kind=8) _155;
  integer(kind=8) _156;
  integer(kind=8) _157;
  integer(kind=8) _158;
  integer(kind=8) _159;
  integer(kind=8) _160;
  integer(kind=8) _161;
  real(kind=4) _162;
  integer(kind=4) i.52_163;
  integer(kind=8) _164;
  integer(kind=8) _165;
  integer(kind=8) _166;
  integer(kind=8) _167;
  integer(kind=8) _168;
  integer(kind=8) _169;
  integer(kind=8) _170;
  integer(kind=8) _171;
  real(kind=4) _172;
  integer(kind=4) i.53_173;
  integer(kind=8) _174;
  integer(kind=8) _175;
  integer(kind=8) _176;
  integer(kind=8) _177;
  integer(kind=8) _178;
  integer(kind=8) _179;
  integer(kind=8) _180;
  integer(kind=8) _181;
  integer(kind=4) i.54_182;
  integer(kind=8) _183;
  integer(kind=8) _184;
  integer(kind=8) _185;
  integer(kind=8) _186;
  integer(kind=8) _187;
  integer(kind=8) _188;
  integer(kind=8) _189;
  integer(kind=8) _190;
  real(kind=4) _191;
  integer(kind=4) i.55_192;
  integer(kind=8) _193;
  integer(kind=8) _194;
  integer(kind=8) _195;
  integer(kind=8) _196;
  integer(kind=8) _197;
  integer(kind=8) _198;
  integer(kind=8) _199;
  integer(kind=8) _200;
  integer(kind=4) i.56_201;
  integer(kind=8) _202;
  integer(kind=8) _203;
  integer(kind=8) _204;
  integer(kind=8) _205;
  integer(kind=8) _206;
  integer(kind=8) _207;
  integer(kind=8) _208;
  integer(kind=8) _209;
  real(kind=4) _210;
  integer(kind=4) i.57_211;
  integer(kind=8) _212;
  integer(kind=8) _213;
  integer(kind=8) _214;
  integer(kind=8) _215;
  integer(kind=8) _216;
  integer(kind=8) _217;
  integer(kind=8) _218;
  integer(kind=8) _219;
  integer(kind=4) i.58_220;
  integer(kind=8) _221;
  integer(kind=8) _222;
  integer(kind=8) _223;
  integer(kind=8) _224;
  integer(kind=8) _225;
  integer(kind=8) _226;
  integer(kind=8) _227;
  integer(kind=8) _228;
  real(kind=4) _229;
  integer(kind=4) i.59_230;
  integer(kind=8) _231;
  integer(kind=8) _232;
  integer(kind=8) _233;
  integer(kind=8) _234;
  integer(kind=8) _235;
  integer(kind=8) _236;
  integer(kind=8) _237;
  integer(kind=8) _238;
  integer(kind=4) i.60_239;
  integer(kind=8) _240;
  integer(kind=8) _241;
  integer(kind=8) _242;
  integer(kind=8) _243;
  integer(kind=8) _244;
  integer(kind=8) _245;
  integer(kind=8) _246;
  integer(kind=8) _247;
  real(kind=4) _248;
  integer(kind=4) i.61_249;
  integer(kind=8) _250;
  integer(kind=8) _251;
  integer(kind=8) _252;
  integer(kind=8) _253;
  integer(kind=8) _254;
  integer(kind=8) _255;
  integer(kind=8) _256;
  integer(kind=8) _257;
  integer(kind=4) i.62_258;
  integer(kind=8) _259;
  integer(kind=8) _260;
  integer(kind=8) _261;
  integer(kind=8) _262;
  integer(kind=8) _263;
  integer(kind=8) _264;
  integer(kind=8) _265;
  integer(kind=8) _266;
  real(kind=4) _267;
  integer(kind=4) i.63_268;
  integer(kind=8) _269;
  integer(kind=8) _270;
  integer(kind=8) _271;
  integer(kind=8) _272;
  integer(kind=8) _273;
  integer(kind=8) _274;
  integer(kind=8) _275;
  integer(kind=8) _276;
  integer(kind=4) i.64_277;
  integer(kind=8) _278;
  integer(kind=8) _279;
  integer(kind=8) _280;
  integer(kind=8) _281;
  integer(kind=8) _282;
  integer(kind=8) _283;
  integer(kind=8) _284;
  integer(kind=8) _285;
  integer(kind=4) i.65_286;
  integer(kind=8) _287;
  integer(kind=8) _288;
  integer(kind=8) _289;
  integer(kind=8) _290;
  integer(kind=8) _291;
  integer(kind=8) _292;
  integer(kind=8) _293;
  integer(kind=8) _294;
  real(kind=4) _295;
  integer(kind=4) i.66_296;
  integer(kind=8) _297;
  integer(kind=8) _298;
  integer(kind=8) _299;
  integer(kind=8) _300;
  integer(kind=8) _301;
  integer(kind=8) _302;
  integer(kind=8) _303;
  integer(kind=8) _304;
  real(kind=4) _305;
  real(kind=4) _306;
  integer(kind=4) i.67_307;
  integer(kind=8) _308;
  integer(kind=8) _309;
  integer(kind=8) _310;
  integer(kind=8) _311;
  integer(kind=8) _312;
  integer(kind=8) _313;
  integer(kind=8) _314;
  integer(kind=8) _315;
  real(kind=4) _316;
  integer(kind=4) i.68_317;
  integer(kind=8) _318;
  integer(kind=8) _319;
  integer(kind=8) _320;
  integer(kind=8) _321;
  integer(kind=8) _322;
  integer(kind=8) _323;
  integer(kind=8) _324;
  integer(kind=8) _325;
  real(kind=4) _326;
  integer(kind=4) i.69_327;
  integer(kind=8) _328;
  integer(kind=8) _329;
  integer(kind=8) _330;
  integer(kind=8) _331;
  integer(kind=8) _332;
  integer(kind=8) _333;
  integer(kind=8) _334;
  integer(kind=8) _335;
  real(kind=4) _336;
  real(kind=4) _337;
  integer(kind=4) i.70_338;
  integer(kind=8) _339;
  integer(kind=8) _340;
  integer(kind=8) _341;
  integer(kind=8) _342;
  integer(kind=8) _343;
  integer(kind=8) _344;
  integer(kind=8) _345;
  integer(kind=8) _346;
  real(kind=4) _347;
  integer(kind=4) i.71_348;
  integer(kind=8) _349;
  integer(kind=8) _350;
  integer(kind=8) _351;
  integer(kind=8) _352;
  integer(kind=8) _353;
  integer(kind=8) _354;
  integer(kind=8) _355;
  integer(kind=8) _356;
  real(kind=4) _357;
  integer(kind=4) i.72_358;
  integer(kind=8) _359;
  integer(kind=8) _360;
  integer(kind=8) _361;
  integer(kind=8) _362;
  integer(kind=8) _363;
  integer(kind=8) _364;
  integer(kind=8) _365;
  integer(kind=8) _366;
  real(kind=4) _367;
  real(kind=4) _368;
  integer(kind=4) i.73_369;
  integer(kind=8) _370;
  integer(kind=8) _371;
  integer(kind=8) _372;
  integer(kind=8) _373;
  integer(kind=8) _374;
  integer(kind=8) _375;
  integer(kind=8) _376;
  integer(kind=8) _377;
  real(kind=4) _378;
  integer(kind=4) i.74_379;
  integer(kind=8) _380;
  integer(kind=8) _381;
  integer(kind=8) _382;
  integer(kind=4) _383;
  integer(kind=8) _384;
  integer(kind=8) _385;
  integer(kind=8) _386;
  integer(kind=4) _387;
  integer(kind=8) _388;
  integer(kind=8) _389;
  real(kind=4) _390;
  integer(kind=4) i.75_391;
  integer(kind=8) _392;
  integer(kind=8) _393;
  integer(kind=8) _394;
  integer(kind=4) _395;
  integer(kind=8) _396;
  integer(kind=8) _397;
  integer(kind=8) _398;
  integer(kind=4) _399;
  integer(kind=8) _400;
  integer(kind=8) _401;
  real(kind=4) _402;
  integer(kind=4) i.76_403;
  integer(kind=8) _404;
  integer(kind=8) _405;
  integer(kind=8) _406;
  integer(kind=8) _407;
  integer(kind=8) _408;
  integer(kind=8) _409;
  integer(kind=4) _410;
  integer(kind=8) _411;
  integer(kind=8) _412;
  real(kind=4) _413;
  integer(kind=4) i.77_414;
  integer(kind=8) _415;
  integer(kind=8) _416;
  integer(kind=8) _417;
  integer(kind=8) _418;
  integer(kind=8) _419;
  integer(kind=8) _420;
  integer(kind=4) _421;
  integer(kind=8) _422;
  integer(kind=8) _423;
  real(kind=4) _424;
  integer(kind=4) i.78_425;
  integer(kind=8) _426;
  integer(kind=8) _427;
  integer(kind=8) _428;
  integer(kind=8) _429;
  integer(kind=8) _430;
  integer(kind=8) _431;
  integer(kind=4) _432;
  integer(kind=8) _433;
  integer(kind=8) _434;
  real(kind=4) _435;
  integer(kind=4) i.79_436;
  integer(kind=8) _437;
  integer(kind=8) _438;
  integer(kind=8) _439;
  integer(kind=8) _440;
  integer(kind=8) _441;
  integer(kind=8) _442;
  integer(kind=4) _443;
  integer(kind=8) _444;
  integer(kind=8) _445;
  real(kind=4) _446;
  integer(kind=4) _447;
  integer(kind=4) i.80_448;
  integer(kind=8) _449;
  integer(kind=8) _450;
  integer(kind=8) _451;
  integer(kind=8) _452;
  integer(kind=8) _453;
  integer(kind=8) _454;
  integer(kind=8) _455;
  integer(kind=8) _456;
  integer(kind=4) i.81_457;
  integer(kind=8) _458;
  integer(kind=8) _459;
  integer(kind=8) _460;
  integer(kind=8) _461;
  integer(kind=8) _462;
  integer(kind=8) _463;
  integer(kind=8) _464;
  integer(kind=8) _465;
  real(kind=4) _466;
  integer(kind=4) i.82_467;
  integer(kind=8) _468;
  integer(kind=8) _469;
  integer(kind=8) _470;
  integer(kind=8) _471;
  integer(kind=8) _472;
  integer(kind=8) _473;
  integer(kind=8) _474;
  integer(kind=8) _475;
  real(kind=4) _476;
  real(kind=4) _477;
  integer(kind=4) i.83_478;
  integer(kind=8) _479;
  integer(kind=8) _480;
  integer(kind=8) _481;
  integer(kind=8) _482;
  integer(kind=8) _483;
  integer(kind=8) _484;
  integer(kind=8) _485;
  integer(kind=8) _486;
  real(kind=4) _487;
  integer(kind=4) i.84_488;
  integer(kind=8) _489;
  integer(kind=8) _490;
  integer(kind=8) _491;
  integer(kind=8) _492;
  integer(kind=8) _493;
  integer(kind=8) _494;
  integer(kind=8) _495;
  integer(kind=8) _496;
  real(kind=4) _497;
  integer(kind=4) i.85_498;
  integer(kind=8) _499;
  integer(kind=8) _500;
  integer(kind=8) _501;
  integer(kind=8) _502;
  integer(kind=8) _503;
  integer(kind=8) _504;
  integer(kind=8) _505;
  integer(kind=8) _506;
  real(kind=4) _507;
  real(kind=4) _508;
  integer(kind=4) i.86_509;
  integer(kind=8) _510;
  integer(kind=8) _511;
  integer(kind=8) _512;
  integer(kind=8) _513;
  integer(kind=8) _514;
  integer(kind=8) _515;
  integer(kind=8) _516;
  integer(kind=8) _517;
  real(kind=4) _518;
  integer(kind=4) i.87_519;
  integer(kind=4) _520;
  integer(kind=4) _521;
  integer(kind=4) i.88_522;
  integer(kind=4) i.89_523;
  integer(kind=4) i.90_524;
  integer(kind=8) _525;
  integer(kind=8) _526;
  integer(kind=8) _527;
  integer(kind=8) _528;
  integer(kind=8) _529;
  integer(kind=8) _530;
  integer(kind=8) _531;
  integer(kind=8) _532;
  real(kind=4) _533;
  integer(kind=8) _534;
  integer(kind=8) _535;
  integer(kind=8) _536;
  integer(kind=8) _537;
  integer(kind=8) _538;
  integer(kind=8) _539;
  integer(kind=8) _540;
  integer(kind=8) _541;
  real(kind=4) _542;
  integer(kind=4) i.91_543;
  integer(kind=8) _544;
  integer(kind=8) _545;
  integer(kind=8) _546;
  integer(kind=8) _547;
  integer(kind=8) _548;
  integer(kind=8) _549;
  integer(kind=8) _550;
  integer(kind=8) _551;
  real(kind=4) _552;
  real(kind=4) _553;
  integer(kind=4) i.92_554;
  integer(kind=8) _555;
  integer(kind=8) _556;
  integer(kind=8) _557;
  integer(kind=8) _558;
  integer(kind=8) _559;
  integer(kind=8) _560;
  integer(kind=8) _561;
  integer(kind=8) _562;
  real(kind=4) _563;
  integer(kind=4) i.93_564;
  integer(kind=4) _565;
  integer(kind=8) stride.9_617;
  integer(kind=8) stride.9_618;
  integer(kind=8) stride.11_620;
  integer(kind=8) stride.11_621;
  integer(kind=8) size.13_624;
  integer(kind=8) size.13_625;
  integer(kind=8) _626;
  bitsizetype _627;
  sizetype _628;
  integer(kind=8) offset.12_629;
  integer(kind=8) stride.2_631;
  integer(kind=8) stride.2_632;
  integer(kind=8) stride.4_634;
  integer(kind=8) stride.4_635;
  integer(kind=8) size.6_637;
  integer(kind=8) size.6_638;
  integer(kind=8) _639;
  bitsizetype _640;
  sizetype _641;
  integer(kind=8) offset.5_642;
  integer(kind=8) stride.16_644;
  integer(kind=8) stride.16_645;
  integer(kind=8) stride.18_647;
  integer(kind=8) stride.18_648;
  integer(kind=8) size.20_650;
  integer(kind=8) size.20_651;
  integer(kind=8) _652;
  bitsizetype _653;
  sizetype _654;
  integer(kind=8) offset.19_655;
  integer(kind=8) stride.23_657;
  integer(kind=8) stride.23_658;
  integer(kind=8) stride.25_661;
  integer(kind=8) stride.25_662;
  integer(kind=8) size.27_664;
  integer(kind=8) size.27_665;
  integer(kind=8) _666;
  bitsizetype _667;
  sizetype _668;
  integer(kind=8) offset.26_669;
  integer(kind=4) _670;
  logical(kind=1) _672;
  integer(kind=4) _674;
  logical(kind=1) _676;
  integer(kind=4) _677;
  logical(kind=1) _679;
  integer(kind=4) _682;
  logical(kind=1) _684;
  integer(kind=4) _690;
  logical(kind=1) _692;
  integer(kind=4) _698;
  logical(kind=1) _700;
  integer(kind=4) _703;
  integer(kind=4) _704;
  logical(kind=1) _706;
  real(kind=4) _707;
  integer(kind=4) _712;
  integer(kind=4) _713;
  logical(kind=1) _715;
  integer(kind=4) _720;
  logical(kind=1) _722;
  integer(kind=4) _727;
  logical(kind=1) _729;
  integer(kind=4) _734;
  integer(kind=4) _735;
  logical(kind=1) _737;
  integer(kind=4) _739;
  integer(kind=4) _740;
  logical(kind=1) _742;
  integer(kind=4) _745;
  logical(kind=1) _747;
  integer(kind=4) _750;
  logical(kind=1) _752;
  integer(kind=4) _768;
  logical(kind=1) _770;
  integer(kind=4) _773;
  logical(kind=1) _775;
  integer(kind=4) _778;
  logical(kind=1) _780;
  integer(kind=4) _782;
  integer(kind=4) _783;
  logical(kind=1) _785;
  integer(kind=4) _787;
  logical(kind=1) _789;
  integer(kind=4) _792;
  logical(kind=1) _794;
  integer(kind=4) _810;
  logical(kind=1) _812;
  integer(kind=4) _814;
  logical(kind=1) _816;
  integer(kind=4) _817;
  logical(kind=1) _819;
  integer(kind=4) _820;
  logical(kind=1) _822;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = *nb_615(D);
  ubound.7_616 = (integer(kind=8)) _1;
  stride.9_617 = ubound.7_616;
  stride.9_618 = MAX_EXPR <stride.9_617, 0>;
  _2 = *nb_615(D);
  ubound.8_619 = (integer(kind=8)) _2;
  stride.11_620 = stride.9_618 * ubound.8_619;
  stride.11_621 = MAX_EXPR <stride.11_620, 0>;
  _3 = *n_622(D);
  ubound.10_623 = (integer(kind=8)) _3;
  size.13_624 = stride.11_621 * ubound.10_623;
  size.13_625 = MAX_EXPR <size.13_624, 0>;
  _626 = size.13_625 + -1;
  size.30_4 = (sizetype) size.13_625;
  _5 = (bitsizetype) size.30_4;
  _627 = _5 * 32;
  size.31_6 = (sizetype) size.13_625;
  _628 = size.31_6 * 4;
  _7 = ~stride.9_618;
  offset.12_629 = _7 - stride.11_621;
  _8 = *nb_615(D);
  ubound.0_630 = (integer(kind=8)) _8;
  stride.2_631 = ubound.0_630;
  stride.2_632 = MAX_EXPR <stride.2_631, 0>;
  _9 = *nb_615(D);
  ubound.1_633 = (integer(kind=8)) _9;
  stride.4_634 = stride.2_632 * ubound.1_633;
  stride.4_635 = MAX_EXPR <stride.4_634, 0>;
  _10 = *n_622(D);
  ubound.3_636 = (integer(kind=8)) _10;
  size.6_637 = stride.4_635 * ubound.3_636;
  size.6_638 = MAX_EXPR <size.6_637, 0>;
  _639 = size.6_638 + -1;
  size.32_11 = (sizetype) size.6_638;
  _12 = (bitsizetype) size.32_11;
  _640 = _12 * 32;
  size.33_13 = (sizetype) size.6_638;
  _641 = size.33_13 * 4;
  _14 = ~stride.2_632;
  offset.5_642 = _14 - stride.4_635;
  _15 = *nb_615(D);
  ubound.14_643 = (integer(kind=8)) _15;
  stride.16_644 = ubound.14_643;
  stride.16_645 = MAX_EXPR <stride.16_644, 0>;
  _16 = *nb_615(D);
  ubound.15_646 = (integer(kind=8)) _16;
  stride.18_647 = stride.16_645 * ubound.15_646;
  stride.18_648 = MAX_EXPR <stride.18_647, 0>;
  _17 = *n_622(D);
  ubound.17_649 = (integer(kind=8)) _17;
  size.20_650 = stride.18_648 * ubound.17_649;
  size.20_651 = MAX_EXPR <size.20_650, 0>;
  _652 = size.20_651 + -1;
  size.34_18 = (sizetype) size.20_651;
  _19 = (bitsizetype) size.34_18;
  _653 = _19 * 32;
  size.35_20 = (sizetype) size.20_651;
  _654 = size.35_20 * 4;
  _21 = ~stride.16_645;
  offset.19_655 = _21 - stride.18_648;
  _22 = *nb_615(D);
  ubound.21_656 = (integer(kind=8)) _22;
  stride.23_657 = ubound.21_656;
  stride.23_658 = MAX_EXPR <stride.23_657, 0>;
  _23 = *nrmax_659(D);
  ubound.22_660 = (integer(kind=8)) _23;
  stride.25_661 = stride.23_658 * ubound.22_660;
  stride.25_662 = MAX_EXPR <stride.25_661, 0>;
  _24 = *n_622(D);
  ubound.24_663 = (integer(kind=8)) _24;
  size.27_664 = stride.25_662 * ubound.24_663;
  size.27_665 = MAX_EXPR <size.27_664, 0>;
  _666 = size.27_665 + -1;
  size.36_25 = (sizetype) size.27_665;
  _26 = (bitsizetype) size.36_25;
  _667 = _26 * 32;
  size.37_27 = (sizetype) size.27_665;
  _668 = size.37_27 * 4;
  _28 = ~stride.23_658;
  offset.26_669 = _28 - stride.25_662;
  _670 = *n_622(D);
  i = 1;
;;    succ:       3

;;   basic block 3, loop depth 1
;;    pred:       2
;;                68
  i.38_29 = i;
  _672 = _670 < i.38_29;
  if (_672 != 0)
    goto <bb 69>; [0.00%]
  else
    goto <bb 4>; [0.00%]
;;    succ:       69
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  i.39_30 = i;
  im_673 = i.39_30 + -1;
  i.40_31 = i;
  if (i.40_31 == 1)
    goto <bb 17>; [0.00%]
  else
    goto <bb 5>; [0.00%]
;;    succ:       17
;;                5

;;   basic block 5, loop depth 1
;;    pred:       4
  _674 = *nb_615(D);
  k_675 = 1;
;;    succ:       6

;;   basic block 6, loop depth 2
;;    pred:       5
;;                16
  # k_568 = PHI <k_675(5), k_697(16)>
  _676 = k_568 > _674;
  if (_676 != 0)
    goto <bb 17>; [0.00%]
  else
    goto <bb 7>; [0.00%]
;;    succ:       17
;;                7

;;   basic block 7, loop depth 2
;;    pred:       6
  _677 = *nb_615(D);
  j_678 = 1;
;;    succ:       8

;;   basic block 8, loop depth 3
;;    pred:       7
;;                15
  # j_566 = PHI <j_678(7), j_696(15)>
  _679 = j_566 > _677;
  if (_679 != 0)
    goto <bb 16>; [0.00%]
  else
    goto <bb 9>; [0.00%]
;;    succ:       16
;;                9

;;   basic block 9, loop depth 3
;;    pred:       8
  i.41_32 = i;
  _33 = (integer(kind=8)) i.41_32;
  _34 = stride.11_621 * _33;
  _35 = offset.12_629 + _34;
  _36 = (integer(kind=8)) j_566;
  _37 = stride.9_618 * _36;
  _38 = _35 + _37;
  _39 = (integer(kind=8)) k_568;
  _40 = _38 + _39;
  btmp_681 = *b_680(D)[_40];
  _682 = *nb_615(D);
  l_683 = 1;
;;    succ:       10

;;   basic block 10, loop depth 4
;;    pred:       9
;;                11
  # l_577 = PHI <l_683(9), l_688(11)>
  _684 = l_577 > _682;
  if (_684 != 0)
    goto <bb 12>; [0.00%]
  else
    goto <bb 11>; [0.00%]
;;    succ:       12
;;                11

;;   basic block 11, loop depth 4
;;    pred:       10
  i.42_41 = i;
  _42 = (integer(kind=8)) i.42_41;
  _43 = stride.4_635 * _42;
  _44 = offset.5_642 + _43;
  _45 = (integer(kind=8)) l_577;
  _46 = stride.2_632 * _45;
  _47 = _44 + _46;
  _48 = (integer(kind=8)) k_568;
  _49 = _47 + _48;
  _50 = *a_685(D)[_49];
  _51 = (integer(kind=8)) im_673;
  _52 = stride.18_648 * _51;
  _53 = offset.19_655 + _52;
  _54 = (integer(kind=8)) l_577;
  _55 = stride.16_645 * _54;
  _56 = _53 + _55;
  _57 = (integer(kind=8)) j_566;
  _58 = _56 + _57;
  _59 = *c_686(D)[_58];
  _60 = btmp_681 * _59;
  i.43_61 = i;
  _62 = (integer(kind=8)) i.43_61;
  _63 = stride.4_635 * _62;
  _64 = offset.5_642 + _63;
  _65 = (integer(kind=8)) l_577;
  _66 = stride.2_632 * _65;
  _67 = _64 + _66;
  _68 = (integer(kind=8)) k_568;
  _69 = _67 + _68;
  _70 = _50 - _60;
  *a_685(D)[_69] = _70;
  l_688 = l_577 + 1;
  goto <bb 10>; [0.00%]
;;    succ:       10

;;   basic block 12, loop depth 3
;;    pred:       10
  _690 = *nrhs_689(D);
  l_691 = 1;
;;    succ:       13

;;   basic block 13, loop depth 4
;;    pred:       12
;;                14
  # l_578 = PHI <l_691(12), l_695(14)>
  _692 = l_578 > _690;
  if (_692 != 0)
    goto <bb 15>; [0.00%]
  else
    goto <bb 14>; [0.00%]
;;    succ:       15
;;                14

;;   basic block 14, loop depth 4
;;    pred:       13
  i.44_71 = i;
  _72 = (integer(kind=8)) i.44_71;
  _73 = stride.25_662 * _72;
  _74 = offset.26_669 + _73;
  _75 = (integer(kind=8)) l_578;
  _76 = stride.23_658 * _75;
  _77 = _74 + _76;
  _78 = (integer(kind=8)) k_568;
  _79 = _77 + _78;
  _80 = *r_693(D)[_79];
  _81 = (integer(kind=8)) im_673;
  _82 = stride.25_662 * _81;
  _83 = offset.26_669 + _82;
  _84 = (integer(kind=8)) l_578;
  _85 = stride.23_658 * _84;
  _86 = _83 + _85;
  _87 = (integer(kind=8)) j_566;
  _88 = _86 + _87;
  _89 = *r_693(D)[_88];
  _90 = btmp_681 * _89;
  i.45_91 = i;
  _92 = (integer(kind=8)) i.45_91;
  _93 = stride.25_662 * _92;
  _94 = offset.26_669 + _93;
  _95 = (integer(kind=8)) l_578;
  _96 = stride.23_658 * _95;
  _97 = _94 + _96;
  _98 = (integer(kind=8)) k_568;
  _99 = _97 + _98;
  _100 = _80 - _90;
  *r_693(D)[_99] = _100;
  l_695 = l_578 + 1;
  goto <bb 13>; [0.00%]
;;    succ:       13

;;   basic block 15, loop depth 3
;;    pred:       13
  j_696 = j_566 + 1;
  goto <bb 8>; [0.00%]
;;    succ:       8

;;   basic block 16, loop depth 2
;;    pred:       8
  k_697 = k_568 + 1;
  goto <bb 6>; [0.00%]
;;    succ:       6

;;   basic block 17, loop depth 1
;;    pred:       4
;;                6
  _101 = *nb_615(D);
  _698 = _101 + -1;
  kpiv_699 = 1;
;;    succ:       18

;;   basic block 18, loop depth 2
;;    pred:       17
;;                47
  # kpiv_573 = PHI <kpiv_699(17), kpiv_756(47)>
  _700 = kpiv_573 > _698;
  if (_700 != 0)
    goto <bb 48>; [0.00%]
  else
    goto <bb 19>; [0.00%]
;;    succ:       48
;;                19

;;   basic block 19, loop depth 2
;;    pred:       18
  kp1_701 = kpiv_573 + 1;
  kx_702 = kpiv_573;
  _703 = kp1_701;
  _704 = *nb_615(D);
  k_705 = _703;
;;    succ:       20

;;   basic block 20, loop depth 3
;;    pred:       19
;;                23
  # k_569 = PHI <k_705(19), k_709(23)>
  # kx_575 = PHI <kx_702(19), kx_576(23)>
  _706 = k_569 > _704;
  if (_706 != 0)
    goto <bb 24>; [0.00%]
  else
    goto <bb 21>; [0.00%]
;;    succ:       24
;;                21

;;   basic block 21, loop depth 3
;;    pred:       20
  i.46_102 = i;
  _103 = (integer(kind=8)) i.46_102;
  _104 = stride.4_635 * _103;
  _105 = offset.5_642 + _104;
  _106 = (integer(kind=8)) kpiv_573;
  _107 = stride.2_632 * _106;
  _108 = _105 + _107;
  _109 = (integer(kind=8)) k_569;
  _110 = _108 + _109;
  _111 = *a_685(D)[_110];
  _112 = ABS_EXPR <_111>;
  i.47_113 = i;
  _114 = (integer(kind=8)) i.47_113;
  _115 = stride.4_635 * _114;
  _116 = offset.5_642 + _115;
  _117 = (integer(kind=8)) kpiv_573;
  _118 = stride.2_632 * _117;
  _119 = _116 + _118;
  _120 = (integer(kind=8)) kx_575;
  _121 = _119 + _120;
  _122 = *a_685(D)[_121];
  _123 = ABS_EXPR <_122>;
  _707 = _112 - _123;
  if (_707 <= 0.0)
    goto <bb 23>; [0.00%]
  else
    goto <bb 22>; [0.00%]
;;    succ:       23
;;                22

;;   basic block 22, loop depth 3
;;    pred:       21
  kx_708 = k_569;
;;    succ:       23

;;   basic block 23, loop depth 3
;;    pred:       21
;;                22
  # kx_576 = PHI <kx_575(21), kx_708(22)>
  k_709 = k_569 + 1;
  goto <bb 20>; [0.00%]
;;    succ:       20

;;   basic block 24, loop depth 2
;;    pred:       20
  i.48_124 = i;
  _125 = (integer(kind=8)) i.48_124;
  _126 = stride.4_635 * _125;
  _127 = offset.5_642 + _126;
  _128 = (integer(kind=8)) kpiv_573;
  _129 = stride.2_632 * _128;
  _130 = _127 + _129;
  _131 = (integer(kind=8)) kx_575;
  _132 = _130 + _131;
  _133 = *a_685(D)[_132];
  if (_133 == 0.0)
    goto <bb 25>; [0.00%]
  else
    goto <bb 26>; [0.00%]
;;    succ:       25
;;                26

;;   basic block 25, loop depth 0
;;    pred:       24
  dt_parm.28.common.filename = &"../src/bnsolv.f"[1]{lb: 1 sz: 1};
  dt_parm.28.common.line = 72;
  dt_parm.28.common.flags = 128;
  dt_parm.28.common.unit = 6;
  _gfortran_st_write (&dt_parm.28);
  _gfortran_transfer_character_write (&dt_parm.28, &"Singular A block, i = "[1]{lb: 1 sz: 1}, 22);
  _gfortran_transfer_integer_write (&dt_parm.28, &i, 4);
  _gfortran_st_write_done (&dt_parm.28);
  dt_parm.28 ={v} {CLOBBER};
  _gfortran_stop_string (0B, 0);
;;    succ:      

;;   basic block 26, loop depth 2
;;    pred:       24
  i.49_134 = i;
  _135 = (integer(kind=8)) i.49_134;
  _136 = stride.4_635 * _135;
  _137 = offset.5_642 + _136;
  _138 = (integer(kind=8)) kpiv_573;
  _139 = stride.2_632 * _138;
  _140 = _137 + _139;
  _141 = (integer(kind=8)) kx_575;
  _142 = _140 + _141;
  _143 = *a_685(D)[_142];
  pivot_710 = 1.0e+0 / _143;
  i.50_144 = i;
  _145 = (integer(kind=8)) i.50_144;
  _146 = stride.4_635 * _145;
  _147 = offset.5_642 + _146;
  _148 = (integer(kind=8)) kpiv_573;
  _149 = stride.2_632 * _148;
  _150 = _147 + _149;
  _151 = (integer(kind=8)) kpiv_573;
  _152 = _150 + _151;
  i.51_153 = i;
  _154 = (integer(kind=8)) i.51_153;
  _155 = stride.4_635 * _154;
  _156 = offset.5_642 + _155;
  _157 = (integer(kind=8)) kpiv_573;
  _158 = stride.2_632 * _157;
  _159 = _156 + _158;
  _160 = (integer(kind=8)) kx_575;
  _161 = _159 + _160;
  _162 = *a_685(D)[_152];
  *a_685(D)[_161] = _162;
  _712 = kp1_701;
  _713 = *nb_615(D);
  l_714 = _712;
;;    succ:       27

;;   basic block 27, loop depth 3
;;    pred:       26
;;                28
  # l_579 = PHI <l_714(26), l_719(28)>
  _715 = l_579 > _713;
  if (_715 != 0)
    goto <bb 29>; [0.00%]
  else
    goto <bb 28>; [0.00%]
;;    succ:       29
;;                28

;;   basic block 28, loop depth 3
;;    pred:       27
  i.52_163 = i;
  _164 = (integer(kind=8)) i.52_163;
  _165 = stride.4_635 * _164;
  _166 = offset.5_642 + _165;
  _167 = (integer(kind=8)) l_579;
  _168 = stride.2_632 * _167;
  _169 = _166 + _168;
  _170 = (integer(kind=8)) kx_575;
  _171 = _169 + _170;
  _172 = *a_685(D)[_171];
  temp_716 = pivot_710 * _172;
  i.53_173 = i;
  _174 = (integer(kind=8)) i.53_173;
  _175 = stride.4_635 * _174;
  _176 = offset.5_642 + _175;
  _177 = (integer(kind=8)) l_579;
  _178 = stride.2_632 * _177;
  _179 = _176 + _178;
  _180 = (integer(kind=8)) kpiv_573;
  _181 = _179 + _180;
  i.54_182 = i;
  _183 = (integer(kind=8)) i.54_182;
  _184 = stride.4_635 * _183;
  _185 = offset.5_642 + _184;
  _186 = (integer(kind=8)) l_579;
  _187 = stride.2_632 * _186;
  _188 = _185 + _187;
  _189 = (integer(kind=8)) kx_575;
  _190 = _188 + _189;
  _191 = *a_685(D)[_181];
  *a_685(D)[_190] = _191;
  i.55_192 = i;
  _193 = (integer(kind=8)) i.55_192;
  _194 = stride.4_635 * _193;
  _195 = offset.5_642 + _194;
  _196 = (integer(kind=8)) l_579;
  _197 = stride.2_632 * _196;
  _198 = _195 + _197;
  _199 = (integer(kind=8)) kpiv_573;
  _200 = _198 + _199;
  *a_685(D)[_200] = temp_716;
  l_719 = l_579 + 1;
  goto <bb 27>; [0.00%]
;;    succ:       27

;;   basic block 29, loop depth 2
;;    pred:       27
  _720 = *nb_615(D);
  l_721 = 1;
;;    succ:       30

;;   basic block 30, loop depth 3
;;    pred:       29
;;                31
  # l_580 = PHI <l_721(29), l_726(31)>
  _722 = l_580 > _720;
  if (_722 != 0)
    goto <bb 32>; [0.00%]
  else
    goto <bb 31>; [0.00%]
;;    succ:       32
;;                31

;;   basic block 31, loop depth 3
;;    pred:       30
  i.56_201 = i;
  _202 = (integer(kind=8)) i.56_201;
  _203 = stride.18_648 * _202;
  _204 = offset.19_655 + _203;
  _205 = (integer(kind=8)) l_580;
  _206 = stride.16_645 * _205;
  _207 = _204 + _206;
  _208 = (integer(kind=8)) kx_575;
  _209 = _207 + _208;
  _210 = *c_686(D)[_209];
  temp_723 = pivot_710 * _210;
  i.57_211 = i;
  _212 = (integer(kind=8)) i.57_211;
  _213 = stride.18_648 * _212;
  _214 = offset.19_655 + _213;
  _215 = (integer(kind=8)) l_580;
  _216 = stride.16_645 * _215;
  _217 = _214 + _216;
  _218 = (integer(kind=8)) kpiv_573;
  _219 = _217 + _218;
  i.58_220 = i;
  _221 = (integer(kind=8)) i.58_220;
  _222 = stride.18_648 * _221;
  _223 = offset.19_655 + _222;
  _224 = (integer(kind=8)) l_580;
  _225 = stride.16_645 * _224;
  _226 = _223 + _225;
  _227 = (integer(kind=8)) kx_575;
  _228 = _226 + _227;
  _229 = *c_686(D)[_219];
  *c_686(D)[_228] = _229;
  i.59_230 = i;
  _231 = (integer(kind=8)) i.59_230;
  _232 = stride.18_648 * _231;
  _233 = offset.19_655 + _232;
  _234 = (integer(kind=8)) l_580;
  _235 = stride.16_645 * _234;
  _236 = _233 + _235;
  _237 = (integer(kind=8)) kpiv_573;
  _238 = _236 + _237;
  *c_686(D)[_238] = temp_723;
  l_726 = l_580 + 1;
  goto <bb 30>; [0.00%]
;;    succ:       30

;;   basic block 32, loop depth 2
;;    pred:       30
  _727 = *nrhs_689(D);
  l_728 = 1;
;;    succ:       33

;;   basic block 33, loop depth 3
;;    pred:       32
;;                34
  # l_581 = PHI <l_728(32), l_733(34)>
  _729 = l_581 > _727;
  if (_729 != 0)
    goto <bb 35>; [0.00%]
  else
    goto <bb 34>; [0.00%]
;;    succ:       35
;;                34

;;   basic block 34, loop depth 3
;;    pred:       33
  i.60_239 = i;
  _240 = (integer(kind=8)) i.60_239;
  _241 = stride.25_662 * _240;
  _242 = offset.26_669 + _241;
  _243 = (integer(kind=8)) l_581;
  _244 = stride.23_658 * _243;
  _245 = _242 + _244;
  _246 = (integer(kind=8)) kx_575;
  _247 = _245 + _246;
  _248 = *r_693(D)[_247];
  temp_730 = pivot_710 * _248;
  i.61_249 = i;
  _250 = (integer(kind=8)) i.61_249;
  _251 = stride.25_662 * _250;
  _252 = offset.26_669 + _251;
  _253 = (integer(kind=8)) l_581;
  _254 = stride.23_658 * _253;
  _255 = _252 + _254;
  _256 = (integer(kind=8)) kpiv_573;
  _257 = _255 + _256;
  i.62_258 = i;
  _259 = (integer(kind=8)) i.62_258;
  _260 = stride.25_662 * _259;
  _261 = offset.26_669 + _260;
  _262 = (integer(kind=8)) l_581;
  _263 = stride.23_658 * _262;
  _264 = _261 + _263;
  _265 = (integer(kind=8)) kx_575;
  _266 = _264 + _265;
  _267 = *r_693(D)[_257];
  *r_693(D)[_266] = _267;
  i.63_268 = i;
  _269 = (integer(kind=8)) i.63_268;
  _270 = stride.25_662 * _269;
  _271 = offset.26_669 + _270;
  _272 = (integer(kind=8)) l_581;
  _273 = stride.23_658 * _272;
  _274 = _271 + _273;
  _275 = (integer(kind=8)) kpiv_573;
  _276 = _274 + _275;
  *r_693(D)[_276] = temp_730;
  l_733 = l_581 + 1;
  goto <bb 33>; [0.00%]
;;    succ:       33

;;   basic block 35, loop depth 2
;;    pred:       33
  _734 = kp1_701;
  _735 = *nb_615(D);
  k_736 = _734;
;;    succ:       36

;;   basic block 36, loop depth 3
;;    pred:       35
;;                46
  # k_570 = PHI <k_736(35), k_755(46)>
  _737 = k_570 > _735;
  if (_737 != 0)
    goto <bb 47>; [0.00%]
  else
    goto <bb 37>; [0.00%]
;;    succ:       47
;;                37

;;   basic block 37, loop depth 3
;;    pred:       36
  i.64_277 = i;
  _278 = (integer(kind=8)) i.64_277;
  _279 = stride.4_635 * _278;
  _280 = offset.5_642 + _279;
  _281 = (integer(kind=8)) kpiv_573;
  _282 = stride.2_632 * _281;
  _283 = _280 + _282;
  _284 = (integer(kind=8)) k_570;
  _285 = _283 + _284;
  atmp_738 = *a_685(D)[_285];
  _739 = kp1_701;
  _740 = *nb_615(D);
  l_741 = _739;
;;    succ:       38

;;   basic block 38, loop depth 4
;;    pred:       37
;;                39
  # l_582 = PHI <l_741(37), l_744(39)>
  _742 = l_582 > _740;
  if (_742 != 0)
    goto <bb 40>; [0.00%]
  else
    goto <bb 39>; [0.00%]
;;    succ:       40
;;                39

;;   basic block 39, loop depth 4
;;    pred:       38
  i.65_286 = i;
  _287 = (integer(kind=8)) i.65_286;
  _288 = stride.4_635 * _287;
  _289 = offset.5_642 + _288;
  _290 = (integer(kind=8)) l_582;
  _291 = stride.2_632 * _290;
  _292 = _289 + _291;
  _293 = (integer(kind=8)) k_570;
  _294 = _292 + _293;
  _295 = *a_685(D)[_294];
  i.66_296 = i;
  _297 = (integer(kind=8)) i.66_296;
  _298 = stride.4_635 * _297;
  _299 = offset.5_642 + _298;
  _300 = (integer(kind=8)) l_582;
  _301 = stride.2_632 * _300;
  _302 = _299 + _301;
  _303 = (integer(kind=8)) kpiv_573;
  _304 = _302 + _303;
  _305 = *a_685(D)[_304];
  _306 = atmp_738 * _305;
  i.67_307 = i;
  _308 = (integer(kind=8)) i.67_307;
  _309 = stride.4_635 * _308;
  _310 = offset.5_642 + _309;
  _311 = (integer(kind=8)) l_582;
  _312 = stride.2_632 * _311;
  _313 = _310 + _312;
  _314 = (integer(kind=8)) k_570;
  _315 = _313 + _314;
  _316 = _295 - _306;
  *a_685(D)[_315] = _316;
  l_744 = l_582 + 1;
  goto <bb 38>; [0.00%]
;;    succ:       38

;;   basic block 40, loop depth 3
;;    pred:       38
  _745 = *nb_615(D);
  l_746 = 1;
;;    succ:       41

;;   basic block 41, loop depth 4
;;    pred:       40
;;                42
  # l_583 = PHI <l_746(40), l_749(42)>
  _747 = l_583 > _745;
  if (_747 != 0)
    goto <bb 43>; [0.00%]
  else
    goto <bb 42>; [0.00%]
;;    succ:       43
;;                42

;;   basic block 42, loop depth 4
;;    pred:       41
  i.68_317 = i;
  _318 = (integer(kind=8)) i.68_317;
  _319 = stride.18_648 * _318;
  _320 = offset.19_655 + _319;
  _321 = (integer(kind=8)) l_583;
  _322 = stride.16_645 * _321;
  _323 = _320 + _322;
  _324 = (integer(kind=8)) k_570;
  _325 = _323 + _324;
  _326 = *c_686(D)[_325];
  i.69_327 = i;
  _328 = (integer(kind=8)) i.69_327;
  _329 = stride.18_648 * _328;
  _330 = offset.19_655 + _329;
  _331 = (integer(kind=8)) l_583;
  _332 = stride.16_645 * _331;
  _333 = _330 + _332;
  _334 = (integer(kind=8)) kpiv_573;
  _335 = _333 + _334;
  _336 = *c_686(D)[_335];
  _337 = atmp_738 * _336;
  i.70_338 = i;
  _339 = (integer(kind=8)) i.70_338;
  _340 = stride.18_648 * _339;
  _341 = offset.19_655 + _340;
  _342 = (integer(kind=8)) l_583;
  _343 = stride.16_645 * _342;
  _344 = _341 + _343;
  _345 = (integer(kind=8)) k_570;
  _346 = _344 + _345;
  _347 = _326 - _337;
  *c_686(D)[_346] = _347;
  l_749 = l_583 + 1;
  goto <bb 41>; [0.00%]
;;    succ:       41

;;   basic block 43, loop depth 3
;;    pred:       41
  _750 = *nrhs_689(D);
  l_751 = 1;
;;    succ:       44

;;   basic block 44, loop depth 4
;;    pred:       43
;;                45
  # l_584 = PHI <l_751(43), l_754(45)>
  _752 = l_584 > _750;
  if (_752 != 0)
    goto <bb 46>; [0.00%]
  else
    goto <bb 45>; [0.00%]
;;    succ:       46
;;                45

;;   basic block 45, loop depth 4
;;    pred:       44
  i.71_348 = i;
  _349 = (integer(kind=8)) i.71_348;
  _350 = stride.25_662 * _349;
  _351 = offset.26_669 + _350;
  _352 = (integer(kind=8)) l_584;
  _353 = stride.23_658 * _352;
  _354 = _351 + _353;
  _355 = (integer(kind=8)) k_570;
  _356 = _354 + _355;
  _357 = *r_693(D)[_356];
  i.72_358 = i;
  _359 = (integer(kind=8)) i.72_358;
  _360 = stride.25_662 * _359;
  _361 = offset.26_669 + _360;
  _362 = (integer(kind=8)) l_584;
  _363 = stride.23_658 * _362;
  _364 = _361 + _363;
  _365 = (integer(kind=8)) kpiv_573;
  _366 = _364 + _365;
  _367 = *r_693(D)[_366];
  _368 = atmp_738 * _367;
  i.73_369 = i;
  _370 = (integer(kind=8)) i.73_369;
  _371 = stride.25_662 * _370;
  _372 = offset.26_669 + _371;
  _373 = (integer(kind=8)) l_584;
  _374 = stride.23_658 * _373;
  _375 = _372 + _374;
  _376 = (integer(kind=8)) k_570;
  _377 = _375 + _376;
  _378 = _357 - _368;
  *r_693(D)[_377] = _378;
  l_754 = l_584 + 1;
  goto <bb 44>; [0.00%]
;;    succ:       44

;;   basic block 46, loop depth 3
;;    pred:       44
  k_755 = k_570 + 1;
  goto <bb 36>; [0.00%]
;;    succ:       36

;;   basic block 47, loop depth 2
;;    pred:       36
  kpiv_756 = kpiv_573 + 1;
  goto <bb 18>; [0.00%]
;;    succ:       18

;;   basic block 48, loop depth 1
;;    pred:       18
  i.74_379 = i;
  _380 = (integer(kind=8)) i.74_379;
  _381 = stride.4_635 * _380;
  _382 = offset.5_642 + _381;
  _383 = *nb_615(D);
  _384 = (integer(kind=8)) _383;
  _385 = stride.2_632 * _384;
  _386 = _382 + _385;
  _387 = *nb_615(D);
  _388 = (integer(kind=8)) _387;
  _389 = _386 + _388;
  _390 = *a_685(D)[_389];
  if (_390 == 0.0)
    goto <bb 49>; [0.00%]
  else
    goto <bb 50>; [0.00%]
;;    succ:       49
;;                50

;;   basic block 49, loop depth 0
;;    pred:       48
  dt_parm.29.common.filename = &"../src/bnsolv.f"[1]{lb: 1 sz: 1};
  dt_parm.29.common.line = 118;
  dt_parm.29.common.flags = 128;
  dt_parm.29.common.unit = 6;
  _gfortran_st_write (&dt_parm.29);
  _gfortran_transfer_character_write (&dt_parm.29, &"Singular A block, i = "[1]{lb: 1 sz: 1}, 22);
  _gfortran_transfer_integer_write (&dt_parm.29, &i, 4);
  _gfortran_st_write_done (&dt_parm.29);
  dt_parm.29 ={v} {CLOBBER};
  _gfortran_stop_string (0B, 0);
;;    succ:      

;;   basic block 50, loop depth 1
;;    pred:       48
  i.75_391 = i;
  _392 = (integer(kind=8)) i.75_391;
  _393 = stride.4_635 * _392;
  _394 = offset.5_642 + _393;
  _395 = *nb_615(D);
  _396 = (integer(kind=8)) _395;
  _397 = stride.2_632 * _396;
  _398 = _394 + _397;
  _399 = *nb_615(D);
  _400 = (integer(kind=8)) _399;
  _401 = _398 + _400;
  _402 = *a_685(D)[_401];
  pivot_767 = 1.0e+0 / _402;
  _768 = *nb_615(D);
  l_769 = 1;
;;    succ:       51

;;   basic block 51, loop depth 2
;;    pred:       50
;;                52
  # l_585 = PHI <l_769(50), l_772(52)>
  _770 = l_585 > _768;
  if (_770 != 0)
    goto <bb 53>; [0.00%]
  else
    goto <bb 52>; [0.00%]
;;    succ:       53
;;                52

;;   basic block 52, loop depth 2
;;    pred:       51
  i.76_403 = i;
  _404 = (integer(kind=8)) i.76_403;
  _405 = stride.18_648 * _404;
  _406 = offset.19_655 + _405;
  _407 = (integer(kind=8)) l_585;
  _408 = stride.16_645 * _407;
  _409 = _406 + _408;
  _410 = *nb_615(D);
  _411 = (integer(kind=8)) _410;
  _412 = _409 + _411;
  _413 = *c_686(D)[_412];
  i.77_414 = i;
  _415 = (integer(kind=8)) i.77_414;
  _416 = stride.18_648 * _415;
  _417 = offset.19_655 + _416;
  _418 = (integer(kind=8)) l_585;
  _419 = stride.16_645 * _418;
  _420 = _417 + _419;
  _421 = *nb_615(D);
  _422 = (integer(kind=8)) _421;
  _423 = _420 + _422;
  _424 = pivot_767 * _413;
  *c_686(D)[_423] = _424;
  l_772 = l_585 + 1;
  goto <bb 51>; [0.00%]
;;    succ:       51

;;   basic block 53, loop depth 1
;;    pred:       51
  _773 = *nrhs_689(D);
  l_774 = 1;
;;    succ:       54

;;   basic block 54, loop depth 2
;;    pred:       53
;;                55
  # l_586 = PHI <l_774(53), l_777(55)>
  _775 = l_586 > _773;
  if (_775 != 0)
    goto <bb 56>; [0.00%]
  else
    goto <bb 55>; [0.00%]
;;    succ:       56
;;                55

;;   basic block 55, loop depth 2
;;    pred:       54
  i.78_425 = i;
  _426 = (integer(kind=8)) i.78_425;
  _427 = stride.25_662 * _426;
  _428 = offset.26_669 + _427;
  _429 = (integer(kind=8)) l_586;
  _430 = stride.23_658 * _429;
  _431 = _428 + _430;
  _432 = *nb_615(D);
  _433 = (integer(kind=8)) _432;
  _434 = _431 + _433;
  _435 = *r_693(D)[_434];
  i.79_436 = i;
  _437 = (integer(kind=8)) i.79_436;
  _438 = stride.25_662 * _437;
  _439 = offset.26_669 + _438;
  _440 = (integer(kind=8)) l_586;
  _441 = stride.23_658 * _440;
  _442 = _439 + _441;
  _443 = *nb_615(D);
  _444 = (integer(kind=8)) _443;
  _445 = _442 + _444;
  _446 = pivot_767 * _435;
  *r_693(D)[_445] = _446;
  l_777 = l_586 + 1;
  goto <bb 54>; [0.00%]
;;    succ:       54

;;   basic block 56, loop depth 1
;;    pred:       54
  _447 = *nb_615(D);
  _778 = _447 + -1;
  kpiv_779 = _778;
;;    succ:       57

;;   basic block 57, loop depth 2
;;    pred:       56
;;                67
  # kpiv_574 = PHI <kpiv_779(56), kpiv_798(67)>
  _780 = kpiv_574 <= 0;
  if (_780 != 0)
    goto <bb 68>; [0.00%]
  else
    goto <bb 58>; [0.00%]
;;    succ:       68
;;                58

;;   basic block 58, loop depth 2
;;    pred:       57
  kp1_781 = kpiv_574 + 1;
  _782 = kp1_781;
  _783 = *nb_615(D);
  k_784 = _782;
;;    succ:       59

;;   basic block 59, loop depth 3
;;    pred:       58
;;                66
  # k_571 = PHI <k_784(58), k_797(66)>
  _785 = k_571 > _783;
  if (_785 != 0)
    goto <bb 67>; [0.00%]
  else
    goto <bb 60>; [0.00%]
;;    succ:       67
;;                60

;;   basic block 60, loop depth 3
;;    pred:       59
  i.80_448 = i;
  _449 = (integer(kind=8)) i.80_448;
  _450 = stride.4_635 * _449;
  _451 = offset.5_642 + _450;
  _452 = (integer(kind=8)) k_571;
  _453 = stride.2_632 * _452;
  _454 = _451 + _453;
  _455 = (integer(kind=8)) kpiv_574;
  _456 = _454 + _455;
  atmp_786 = *a_685(D)[_456];
  _787 = *nb_615(D);
  l_788 = 1;
;;    succ:       61

;;   basic block 61, loop depth 4
;;    pred:       60
;;                62
  # l_587 = PHI <l_788(60), l_791(62)>
  _789 = l_587 > _787;
  if (_789 != 0)
    goto <bb 63>; [0.00%]
  else
    goto <bb 62>; [0.00%]
;;    succ:       63
;;                62

;;   basic block 62, loop depth 4
;;    pred:       61
  i.81_457 = i;
  _458 = (integer(kind=8)) i.81_457;
  _459 = stride.18_648 * _458;
  _460 = offset.19_655 + _459;
  _461 = (integer(kind=8)) l_587;
  _462 = stride.16_645 * _461;
  _463 = _460 + _462;
  _464 = (integer(kind=8)) kpiv_574;
  _465 = _463 + _464;
  _466 = *c_686(D)[_465];
  i.82_467 = i;
  _468 = (integer(kind=8)) i.82_467;
  _469 = stride.18_648 * _468;
  _470 = offset.19_655 + _469;
  _471 = (integer(kind=8)) l_587;
  _472 = stride.16_645 * _471;
  _473 = _470 + _472;
  _474 = (integer(kind=8)) k_571;
  _475 = _473 + _474;
  _476 = *c_686(D)[_475];
  _477 = atmp_786 * _476;
  i.83_478 = i;
  _479 = (integer(kind=8)) i.83_478;
  _480 = stride.18_648 * _479;
  _481 = offset.19_655 + _480;
  _482 = (integer(kind=8)) l_587;
  _483 = stride.16_645 * _482;
  _484 = _481 + _483;
  _485 = (integer(kind=8)) kpiv_574;
  _486 = _484 + _485;
  _487 = _466 - _477;
  *c_686(D)[_486] = _487;
  l_791 = l_587 + 1;
  goto <bb 61>; [0.00%]
;;    succ:       61

;;   basic block 63, loop depth 3
;;    pred:       61
  _792 = *nrhs_689(D);
  l_793 = 1;
;;    succ:       64

;;   basic block 64, loop depth 4
;;    pred:       63
;;                65
  # l_588 = PHI <l_793(63), l_796(65)>
  _794 = l_588 > _792;
  if (_794 != 0)
    goto <bb 66>; [0.00%]
  else
    goto <bb 65>; [0.00%]
;;    succ:       66
;;                65

;;   basic block 65, loop depth 4
;;    pred:       64
  i.84_488 = i;
  _489 = (integer(kind=8)) i.84_488;
  _490 = stride.25_662 * _489;
  _491 = offset.26_669 + _490;
  _492 = (integer(kind=8)) l_588;
  _493 = stride.23_658 * _492;
  _494 = _491 + _493;
  _495 = (integer(kind=8)) kpiv_574;
  _496 = _494 + _495;
  _497 = *r_693(D)[_496];
  i.85_498 = i;
  _499 = (integer(kind=8)) i.85_498;
  _500 = stride.25_662 * _499;
  _501 = offset.26_669 + _500;
  _502 = (integer(kind=8)) l_588;
  _503 = stride.23_658 * _502;
  _504 = _501 + _503;
  _505 = (integer(kind=8)) k_571;
  _506 = _504 + _505;
  _507 = *r_693(D)[_506];
  _508 = atmp_786 * _507;
  i.86_509 = i;
  _510 = (integer(kind=8)) i.86_509;
  _511 = stride.25_662 * _510;
  _512 = offset.26_669 + _511;
  _513 = (integer(kind=8)) l_588;
  _514 = stride.23_658 * _513;
  _515 = _512 + _514;
  _516 = (integer(kind=8)) kpiv_574;
  _517 = _515 + _516;
  _518 = _497 - _508;
  *r_693(D)[_517] = _518;
  l_796 = l_588 + 1;
  goto <bb 64>; [0.00%]
;;    succ:       64

;;   basic block 66, loop depth 3
;;    pred:       64
  k_797 = k_571 + 1;
  goto <bb 59>; [0.00%]
;;    succ:       59

;;   basic block 67, loop depth 2
;;    pred:       59
  kpiv_798 = kpiv_574 + -1;
  goto <bb 57>; [0.00%]
;;    succ:       57

;;   basic block 68, loop depth 1
;;    pred:       57
  i.87_519 = i;
  _520 = i.87_519 + 1;
  i = _520;
  goto <bb 3>; [0.00%]
;;    succ:       3

;;   basic block 69, loop depth 0
;;    pred:       3
  _521 = *n_622(D);
  _810 = _521 + -1;
  i = _810;
;;    succ:       70

;;   basic block 70, loop depth 1
;;    pred:       69
;;                80
  i.88_522 = i;
  _812 = i.88_522 <= 0;
  if (_812 != 0)
    goto <bb 81>; [0.00%]
  else
    goto <bb 71>; [0.00%]
;;    succ:       81
;;                71

;;   basic block 71, loop depth 1
;;    pred:       70
  i.89_523 = i;
  ip_813 = i.89_523 + 1;
  _814 = *nrhs_689(D);
  l_815 = 1;
;;    succ:       72

;;   basic block 72, loop depth 2
;;    pred:       71
;;                79
  # l_589 = PHI <l_815(71), l_826(79)>
  _816 = l_589 > _814;
  if (_816 != 0)
    goto <bb 80>; [0.00%]
  else
    goto <bb 73>; [0.00%]
;;    succ:       80
;;                73

;;   basic block 73, loop depth 2
;;    pred:       72
  _817 = *nb_615(D);
  k_818 = 1;
;;    succ:       74

;;   basic block 74, loop depth 3
;;    pred:       73
;;                78
  # k_572 = PHI <k_818(73), k_825(78)>
  _819 = k_572 > _817;
  if (_819 != 0)
    goto <bb 79>; [0.00%]
  else
    goto <bb 75>; [0.00%]
;;    succ:       79
;;                75

;;   basic block 75, loop depth 3
;;    pred:       74
  _820 = *nb_615(D);
  j_821 = 1;
;;    succ:       76

;;   basic block 76, loop depth 4
;;    pred:       75
;;                77
  # j_567 = PHI <j_821(75), j_824(77)>
  _822 = j_567 > _820;
  if (_822 != 0)
    goto <bb 78>; [0.00%]
  else
    goto <bb 77>; [0.00%]
;;    succ:       78
;;                77

;;   basic block 77, loop depth 4
;;    pred:       76
  i.90_524 = i;
  _525 = (integer(kind=8)) i.90_524;
  _526 = stride.25_662 * _525;
  _527 = offset.26_669 + _526;
  _528 = (integer(kind=8)) l_589;
  _529 = stride.23_658 * _528;
  _530 = _527 + _529;
  _531 = (integer(kind=8)) k_572;
  _532 = _530 + _531;
  _533 = *r_693(D)[_532];
  _534 = (integer(kind=8)) ip_813;
  _535 = stride.25_662 * _534;
  _536 = offset.26_669 + _535;
  _537 = (integer(kind=8)) l_589;
  _538 = stride.23_658 * _537;
  _539 = _536 + _538;
  _540 = (integer(kind=8)) j_567;
  _541 = _539 + _540;
  _542 = *r_693(D)[_541];
  i.91_543 = i;
  _544 = (integer(kind=8)) i.91_543;
  _545 = stride.18_648 * _544;
  _546 = offset.19_655 + _545;
  _547 = (integer(kind=8)) j_567;
  _548 = stride.16_645 * _547;
  _549 = _546 + _548;
  _550 = (integer(kind=8)) k_572;
  _551 = _549 + _550;
  _552 = *c_686(D)[_551];
  _553 = _542 * _552;
  i.92_554 = i;
  _555 = (integer(kind=8)) i.92_554;
  _556 = stride.25_662 * _555;
  _557 = offset.26_669 + _556;
  _558 = (integer(kind=8)) l_589;
  _559 = stride.23_658 * _558;
  _560 = _557 + _559;
  _561 = (integer(kind=8)) k_572;
  _562 = _560 + _561;
  _563 = _533 - _553;
  *r_693(D)[_562] = _563;
  j_824 = j_567 + 1;
  goto <bb 76>; [0.00%]
;;    succ:       76

;;   basic block 78, loop depth 3
;;    pred:       76
  k_825 = k_572 + 1;
  goto <bb 74>; [0.00%]
;;    succ:       74

;;   basic block 79, loop depth 2
;;    pred:       74
  l_826 = l_589 + 1;
  goto <bb 72>; [0.00%]
;;    succ:       72

;;   basic block 80, loop depth 1
;;    pred:       72
  i.93_564 = i;
  _565 = i.93_564 + -1;
  i = _565;
  goto <bb 70>; [0.00%]
;;    succ:       70

;;   basic block 81, loop depth 0
;;    pred:       70
;;    succ:       82

;;   basic block 82, loop depth 0
;;    pred:       81
  i ={v} {CLOBBER};
;;    succ:       83

;;   basic block 83, loop depth 0
;;    pred:       82
<L131> [0.00%]:
  return;
;;    succ:       EXIT

}


Partition 1: size 480 align 16
	dt_parm.29	dt_parm.28

;; Generating RTL for gimple basic block 2

;; _1 = *nb_615(D);

(insn 11 10 12 (set (reg/f:DI 746)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -680 [0xfffffffffffffd58])) [11 nb+0 S8 A64])) "../src/bnsolv.f":21 -1
     (nil))

(insn 12 11 0 (set (reg:SI 87 [ _1 ])
        (mem:SI (reg/f:DI 746) [1 *nb_615(D)+0 S4 A32])) "../src/bnsolv.f":21 -1
     (nil))

;; ubound.7_616 = (integer(kind=8)) _1;

(insn 13 12 14 (set (reg:DI 747)
        (sign_extend:DI (reg:SI 87 [ _1 ]))) "../src/bnsolv.f":21 -1
     (nil))

(insn 14 13 0 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [2 ubound.7+0 S8 A64])
        (reg:DI 747)) "../src/bnsolv.f":21 -1
     (nil))

;; stride.9_617 = ubound.7_616;

(insn 15 14 0 (set (reg:DI 652 [ stride.9_617 ])
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [2 ubound.7+0 S8 A64])) "../src/bnsolv.f":21 -1
     (nil))

;; stride.9_618 = MAX_EXPR <stride.9_617, 0>;

(insn 17 15 16 (set (reg:DI 748)
        (const_int 0 [0])) "../src/bnsolv.f":21 -1
     (nil))

(insn 16 17 18 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 652 [ stride.9_617 ])
            (const_int 0 [0]))) "../src/bnsolv.f":21 -1
     (nil))

(insn 18 16 0 (set (reg:DI 653 [ stride.9_618 ])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 652 [ stride.9_617 ])
            (reg:DI 748))) "../src/bnsolv.f":21 -1
     (nil))

;; _2 = *nb_615(D);

(insn 19 18 20 (set (reg/f:DI 749)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -680 [0xfffffffffffffd58])) [11 nb+0 S8 A64])) "../src/bnsolv.f":21 -1
     (nil))

(insn 20 19 0 (set (reg:SI 88 [ _2 ])
        (mem:SI (reg/f:DI 749) [1 *nb_615(D)+0 S4 A32])) "../src/bnsolv.f":21 -1
     (nil))

;; ubound.8_619 = (integer(kind=8)) _2;

(insn 21 20 22 (set (reg:DI 750)
        (sign_extend:DI (reg:SI 88 [ _2 ]))) "../src/bnsolv.f":21 -1
     (nil))

(insn 22 21 0 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [2 ubound.8+0 S8 A64])
        (reg:DI 750)) "../src/bnsolv.f":21 -1
     (nil))

;; stride.11_620 = stride.9_618 * ubound.8_619;

(insn 23 22 0 (parallel [
            (set (reg:DI 654 [ stride.11_620 ])
                (mult:DI (reg:DI 653 [ stride.9_618 ])
                    (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -40 [0xffffffffffffffd8])) [2 ubound.8+0 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":21 -1
     (nil))

;; stride.11_621 = MAX_EXPR <stride.11_620, 0>;

(insn 25 23 24 (set (reg:DI 751)
        (const_int 0 [0])) "../src/bnsolv.f":21 -1
     (nil))

(insn 24 25 26 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 654 [ stride.11_620 ])
            (const_int 0 [0]))) "../src/bnsolv.f":21 -1
     (nil))

(insn 26 24 0 (set (reg:DI 655 [ stride.11_621 ])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 654 [ stride.11_620 ])
            (reg:DI 751))) "../src/bnsolv.f":21 -1
     (nil))

;; _3 = *n_622(D);

(insn 27 26 28 (set (reg/f:DI 752)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -688 [0xfffffffffffffd50])) [11 n+0 S8 A64])) "../src/bnsolv.f":21 -1
     (nil))

(insn 28 27 0 (set (reg:SI 89 [ _3 ])
        (mem:SI (reg/f:DI 752) [1 *n_622(D)+0 S4 A32])) "../src/bnsolv.f":21 -1
     (nil))

;; ubound.10_623 = (integer(kind=8)) _3;

(insn 29 28 30 (set (reg:DI 753)
        (sign_extend:DI (reg:SI 89 [ _3 ]))) "../src/bnsolv.f":21 -1
     (nil))

(insn 30 29 0 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [2 ubound.10+0 S8 A64])
        (reg:DI 753)) "../src/bnsolv.f":21 -1
     (nil))

;; size.13_624 = stride.11_621 * ubound.10_623;

(insn 31 30 0 (parallel [
            (set (reg:DI 656 [ size.13_624 ])
                (mult:DI (reg:DI 655 [ stride.11_621 ])
                    (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -48 [0xffffffffffffffd0])) [2 ubound.10+0 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":21 -1
     (nil))

;; size.13_625 = MAX_EXPR <size.13_624, 0>;

(insn 33 31 32 (set (reg:DI 754)
        (const_int 0 [0])) "../src/bnsolv.f":21 -1
     (nil))

(insn 32 33 34 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 656 [ size.13_624 ])
            (const_int 0 [0]))) "../src/bnsolv.f":21 -1
     (nil))

(insn 34 32 0 (set (reg:DI 657 [ size.13_625 ])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 656 [ size.13_624 ])
            (reg:DI 754))) "../src/bnsolv.f":21 -1
     (nil))

;; _626 = size.13_625 + -1;

(insn 35 34 0 (parallel [
            (set (reg:DI 658 [ _626 ])
                (plus:DI (reg:DI 657 [ size.13_625 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":21 -1
     (nil))

;; size.30_4 = (sizetype) size.13_625;

(insn 36 35 0 (set (reg:DI 90 [ size.30_4 ])
        (reg:DI 657 [ size.13_625 ])) "../src/bnsolv.f":21 -1
     (nil))

;; _5 = (bitsizetype) size.30_4;

(insn 37 36 38 (set (subreg:DI (reg:TI 91 [ _5 ]) 0)
        (reg:DI 90 [ size.30_4 ])) "../src/bnsolv.f":21 -1
     (nil))

(insn 38 37 0 (set (subreg:DI (reg:TI 91 [ _5 ]) 8)
        (const_int 0 [0])) "../src/bnsolv.f":21 -1
     (nil))

;; _627 = _5 * 32;

(insn 39 38 0 (parallel [
            (set (reg:TI 659 [ _627 ])
                (ashift:TI (reg:TI 91 [ _5 ])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":21 -1
     (nil))

;; size.31_6 = (sizetype) size.13_625;

(insn 40 39 0 (set (reg:DI 92 [ size.31_6 ])
        (reg:DI 657 [ size.13_625 ])) "../src/bnsolv.f":21 -1
     (nil))

;; _628 = size.31_6 * 4;

(insn 41 40 0 (parallel [
            (set (reg:DI 660 [ _628 ])
                (ashift:DI (reg:DI 92 [ size.31_6 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":21 -1
     (nil))

;; _7 = ~stride.9_618;

(insn 42 41 0 (set (reg:DI 93 [ _7 ])
        (not:DI (reg:DI 653 [ stride.9_618 ]))) "../src/bnsolv.f":21 -1
     (nil))

;; offset.12_629 = _7 - stride.11_621;

(insn 43 42 0 (parallel [
            (set (reg:DI 661 [ offset.12_629 ])
                (minus:DI (reg:DI 93 [ _7 ])
                    (reg:DI 655 [ stride.11_621 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":21 -1
     (nil))

;; _8 = *nb_615(D);

(insn 44 43 45 (set (reg/f:DI 755)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -680 [0xfffffffffffffd58])) [11 nb+0 S8 A64])) "../src/bnsolv.f":21 -1
     (nil))

(insn 45 44 0 (set (reg:SI 94 [ _8 ])
        (mem:SI (reg/f:DI 755) [1 *nb_615(D)+0 S4 A32])) "../src/bnsolv.f":21 -1
     (nil))

;; ubound.0_630 = (integer(kind=8)) _8;

(insn 46 45 47 (set (reg:DI 756)
        (sign_extend:DI (reg:SI 94 [ _8 ]))) "../src/bnsolv.f":21 -1
     (nil))

(insn 47 46 0 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [2 ubound.0+0 S8 A64])
        (reg:DI 756)) "../src/bnsolv.f":21 -1
     (nil))

;; stride.2_631 = ubound.0_630;

(insn 48 47 0 (set (reg:DI 662 [ stride.2_631 ])
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [2 ubound.0+0 S8 A64])) "../src/bnsolv.f":21 -1
     (nil))

;; stride.2_632 = MAX_EXPR <stride.2_631, 0>;

(insn 50 48 49 (set (reg:DI 757)
        (const_int 0 [0])) "../src/bnsolv.f":21 -1
     (nil))

(insn 49 50 51 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 662 [ stride.2_631 ])
            (const_int 0 [0]))) "../src/bnsolv.f":21 -1
     (nil))

(insn 51 49 0 (set (reg:DI 663 [ stride.2_632 ])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 662 [ stride.2_631 ])
            (reg:DI 757))) "../src/bnsolv.f":21 -1
     (nil))

;; _9 = *nb_615(D);

(insn 52 51 53 (set (reg/f:DI 758)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -680 [0xfffffffffffffd58])) [11 nb+0 S8 A64])) "../src/bnsolv.f":21 -1
     (nil))

(insn 53 52 0 (set (reg:SI 95 [ _9 ])
        (mem:SI (reg/f:DI 758) [1 *nb_615(D)+0 S4 A32])) "../src/bnsolv.f":21 -1
     (nil))

;; ubound.1_633 = (integer(kind=8)) _9;

(insn 54 53 55 (set (reg:DI 759)
        (sign_extend:DI (reg:SI 95 [ _9 ]))) "../src/bnsolv.f":21 -1
     (nil))

(insn 55 54 0 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -64 [0xffffffffffffffc0])) [2 ubound.1+0 S8 A64])
        (reg:DI 759)) "../src/bnsolv.f":21 -1
     (nil))

;; stride.4_634 = stride.2_632 * ubound.1_633;

(insn 56 55 0 (parallel [
            (set (reg:DI 664 [ stride.4_634 ])
                (mult:DI (reg:DI 663 [ stride.2_632 ])
                    (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -64 [0xffffffffffffffc0])) [2 ubound.1+0 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":21 -1
     (nil))

;; stride.4_635 = MAX_EXPR <stride.4_634, 0>;

(insn 58 56 57 (set (reg:DI 760)
        (const_int 0 [0])) "../src/bnsolv.f":21 -1
     (nil))

(insn 57 58 59 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 664 [ stride.4_634 ])
            (const_int 0 [0]))) "../src/bnsolv.f":21 -1
     (nil))

(insn 59 57 0 (set (reg:DI 665 [ stride.4_635 ])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 664 [ stride.4_634 ])
            (reg:DI 760))) "../src/bnsolv.f":21 -1
     (nil))

;; _10 = *n_622(D);

(insn 60 59 61 (set (reg/f:DI 761)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -688 [0xfffffffffffffd50])) [11 n+0 S8 A64])) "../src/bnsolv.f":21 -1
     (nil))

(insn 61 60 0 (set (reg:SI 96 [ _10 ])
        (mem:SI (reg/f:DI 761) [1 *n_622(D)+0 S4 A32])) "../src/bnsolv.f":21 -1
     (nil))

;; ubound.3_636 = (integer(kind=8)) _10;

(insn 62 61 63 (set (reg:DI 762)
        (sign_extend:DI (reg:SI 96 [ _10 ]))) "../src/bnsolv.f":21 -1
     (nil))

(insn 63 62 0 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -72 [0xffffffffffffffb8])) [2 ubound.3+0 S8 A64])
        (reg:DI 762)) "../src/bnsolv.f":21 -1
     (nil))

;; size.6_637 = stride.4_635 * ubound.3_636;

(insn 64 63 0 (parallel [
            (set (reg:DI 666 [ size.6_637 ])
                (mult:DI (reg:DI 665 [ stride.4_635 ])
                    (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -72 [0xffffffffffffffb8])) [2 ubound.3+0 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":21 -1
     (nil))

;; size.6_638 = MAX_EXPR <size.6_637, 0>;

(insn 66 64 65 (set (reg:DI 763)
        (const_int 0 [0])) "../src/bnsolv.f":21 -1
     (nil))

(insn 65 66 67 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 666 [ size.6_637 ])
            (const_int 0 [0]))) "../src/bnsolv.f":21 -1
     (nil))

(insn 67 65 0 (set (reg:DI 667 [ size.6_638 ])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 666 [ size.6_637 ])
            (reg:DI 763))) "../src/bnsolv.f":21 -1
     (nil))

;; _639 = size.6_638 + -1;

(insn 68 67 0 (parallel [
            (set (reg:DI 668 [ _639 ])
                (plus:DI (reg:DI 667 [ size.6_638 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":21 -1
     (nil))

;; size.32_11 = (sizetype) size.6_638;

(insn 69 68 0 (set (reg:DI 97 [ size.32_11 ])
        (reg:DI 667 [ size.6_638 ])) "../src/bnsolv.f":21 -1
     (nil))

;; _12 = (bitsizetype) size.32_11;

(insn 70 69 71 (set (subreg:DI (reg:TI 98 [ _12 ]) 0)
        (reg:DI 97 [ size.32_11 ])) "../src/bnsolv.f":21 -1
     (nil))

(insn 71 70 0 (set (subreg:DI (reg:TI 98 [ _12 ]) 8)
        (const_int 0 [0])) "../src/bnsolv.f":21 -1
     (nil))

;; _640 = _12 * 32;

(insn 72 71 0 (parallel [
            (set (reg:TI 669 [ _640 ])
                (ashift:TI (reg:TI 98 [ _12 ])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":21 -1
     (nil))

;; size.33_13 = (sizetype) size.6_638;

(insn 73 72 0 (set (reg:DI 99 [ size.33_13 ])
        (reg:DI 667 [ size.6_638 ])) "../src/bnsolv.f":21 -1
     (nil))

;; _641 = size.33_13 * 4;

(insn 74 73 0 (parallel [
            (set (reg:DI 670 [ _641 ])
                (ashift:DI (reg:DI 99 [ size.33_13 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":21 -1
     (nil))

;; _14 = ~stride.2_632;

(insn 75 74 0 (set (reg:DI 100 [ _14 ])
        (not:DI (reg:DI 663 [ stride.2_632 ]))) "../src/bnsolv.f":21 -1
     (nil))

;; offset.5_642 = _14 - stride.4_635;

(insn 76 75 0 (parallel [
            (set (reg:DI 671 [ offset.5_642 ])
                (minus:DI (reg:DI 100 [ _14 ])
                    (reg:DI 665 [ stride.4_635 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":21 -1
     (nil))

;; _15 = *nb_615(D);

(insn 77 76 78 (set (reg/f:DI 764)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -680 [0xfffffffffffffd58])) [11 nb+0 S8 A64])) "../src/bnsolv.f":21 -1
     (nil))

(insn 78 77 0 (set (reg:SI 101 [ _15 ])
        (mem:SI (reg/f:DI 764) [1 *nb_615(D)+0 S4 A32])) "../src/bnsolv.f":21 -1
     (nil))

;; ubound.14_643 = (integer(kind=8)) _15;

(insn 79 78 80 (set (reg:DI 765)
        (sign_extend:DI (reg:SI 101 [ _15 ]))) "../src/bnsolv.f":21 -1
     (nil))

(insn 80 79 0 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -80 [0xffffffffffffffb0])) [2 ubound.14+0 S8 A64])
        (reg:DI 765)) "../src/bnsolv.f":21 -1
     (nil))

;; stride.16_644 = ubound.14_643;

(insn 81 80 0 (set (reg:DI 672 [ stride.16_644 ])
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -80 [0xffffffffffffffb0])) [2 ubound.14+0 S8 A64])) "../src/bnsolv.f":21 -1
     (nil))

;; stride.16_645 = MAX_EXPR <stride.16_644, 0>;

(insn 83 81 82 (set (reg:DI 766)
        (const_int 0 [0])) "../src/bnsolv.f":21 -1
     (nil))

(insn 82 83 84 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 672 [ stride.16_644 ])
            (const_int 0 [0]))) "../src/bnsolv.f":21 -1
     (nil))

(insn 84 82 0 (set (reg:DI 673 [ stride.16_645 ])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 672 [ stride.16_644 ])
            (reg:DI 766))) "../src/bnsolv.f":21 -1
     (nil))

;; _16 = *nb_615(D);

(insn 85 84 86 (set (reg/f:DI 767)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -680 [0xfffffffffffffd58])) [11 nb+0 S8 A64])) "../src/bnsolv.f":21 -1
     (nil))

(insn 86 85 0 (set (reg:SI 102 [ _16 ])
        (mem:SI (reg/f:DI 767) [1 *nb_615(D)+0 S4 A32])) "../src/bnsolv.f":21 -1
     (nil))

;; ubound.15_646 = (integer(kind=8)) _16;

(insn 87 86 88 (set (reg:DI 768)
        (sign_extend:DI (reg:SI 102 [ _16 ]))) "../src/bnsolv.f":21 -1
     (nil))

(insn 88 87 0 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -88 [0xffffffffffffffa8])) [2 ubound.15+0 S8 A64])
        (reg:DI 768)) "../src/bnsolv.f":21 -1
     (nil))

;; stride.18_647 = stride.16_645 * ubound.15_646;

(insn 89 88 0 (parallel [
            (set (reg:DI 674 [ stride.18_647 ])
                (mult:DI (reg:DI 673 [ stride.16_645 ])
                    (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -88 [0xffffffffffffffa8])) [2 ubound.15+0 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":21 -1
     (nil))

;; stride.18_648 = MAX_EXPR <stride.18_647, 0>;

(insn 91 89 90 (set (reg:DI 769)
        (const_int 0 [0])) "../src/bnsolv.f":21 -1
     (nil))

(insn 90 91 92 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 674 [ stride.18_647 ])
            (const_int 0 [0]))) "../src/bnsolv.f":21 -1
     (nil))

(insn 92 90 0 (set (reg:DI 675 [ stride.18_648 ])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 674 [ stride.18_647 ])
            (reg:DI 769))) "../src/bnsolv.f":21 -1
     (nil))

;; _17 = *n_622(D);

(insn 93 92 94 (set (reg/f:DI 770)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -688 [0xfffffffffffffd50])) [11 n+0 S8 A64])) "../src/bnsolv.f":21 -1
     (nil))

(insn 94 93 0 (set (reg:SI 103 [ _17 ])
        (mem:SI (reg/f:DI 770) [1 *n_622(D)+0 S4 A32])) "../src/bnsolv.f":21 -1
     (nil))

;; ubound.17_649 = (integer(kind=8)) _17;

(insn 95 94 96 (set (reg:DI 771)
        (sign_extend:DI (reg:SI 103 [ _17 ]))) "../src/bnsolv.f":21 -1
     (nil))

(insn 96 95 0 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -96 [0xffffffffffffffa0])) [2 ubound.17+0 S8 A64])
        (reg:DI 771)) "../src/bnsolv.f":21 -1
     (nil))

;; size.20_650 = stride.18_648 * ubound.17_649;

(insn 97 96 0 (parallel [
            (set (reg:DI 676 [ size.20_650 ])
                (mult:DI (reg:DI 675 [ stride.18_648 ])
                    (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -96 [0xffffffffffffffa0])) [2 ubound.17+0 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":21 -1
     (nil))

;; size.20_651 = MAX_EXPR <size.20_650, 0>;

(insn 99 97 98 (set (reg:DI 772)
        (const_int 0 [0])) "../src/bnsolv.f":21 -1
     (nil))

(insn 98 99 100 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 676 [ size.20_650 ])
            (const_int 0 [0]))) "../src/bnsolv.f":21 -1
     (nil))

(insn 100 98 0 (set (reg:DI 677 [ size.20_651 ])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 676 [ size.20_650 ])
            (reg:DI 772))) "../src/bnsolv.f":21 -1
     (nil))

;; _652 = size.20_651 + -1;

(insn 101 100 0 (parallel [
            (set (reg:DI 678 [ _652 ])
                (plus:DI (reg:DI 677 [ size.20_651 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":21 -1
     (nil))

;; size.34_18 = (sizetype) size.20_651;

(insn 102 101 0 (set (reg:DI 104 [ size.34_18 ])
        (reg:DI 677 [ size.20_651 ])) "../src/bnsolv.f":21 -1
     (nil))

;; _19 = (bitsizetype) size.34_18;

(insn 103 102 104 (set (subreg:DI (reg:TI 105 [ _19 ]) 0)
        (reg:DI 104 [ size.34_18 ])) "../src/bnsolv.f":21 -1
     (nil))

(insn 104 103 0 (set (subreg:DI (reg:TI 105 [ _19 ]) 8)
        (const_int 0 [0])) "../src/bnsolv.f":21 -1
     (nil))

;; _653 = _19 * 32;

(insn 105 104 0 (parallel [
            (set (reg:TI 679 [ _653 ])
                (ashift:TI (reg:TI 105 [ _19 ])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":21 -1
     (nil))

;; size.35_20 = (sizetype) size.20_651;

(insn 106 105 0 (set (reg:DI 106 [ size.35_20 ])
        (reg:DI 677 [ size.20_651 ])) "../src/bnsolv.f":21 -1
     (nil))

;; _654 = size.35_20 * 4;

(insn 107 106 0 (parallel [
            (set (reg:DI 680 [ _654 ])
                (ashift:DI (reg:DI 106 [ size.35_20 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":21 -1
     (nil))

;; _21 = ~stride.16_645;

(insn 108 107 0 (set (reg:DI 107 [ _21 ])
        (not:DI (reg:DI 673 [ stride.16_645 ]))) "../src/bnsolv.f":21 -1
     (nil))

;; offset.19_655 = _21 - stride.18_648;

(insn 109 108 0 (parallel [
            (set (reg:DI 681 [ offset.19_655 ])
                (minus:DI (reg:DI 107 [ _21 ])
                    (reg:DI 675 [ stride.18_648 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":21 -1
     (nil))

;; _22 = *nb_615(D);

(insn 110 109 111 (set (reg/f:DI 773)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -680 [0xfffffffffffffd58])) [11 nb+0 S8 A64])) "../src/bnsolv.f":21 -1
     (nil))

(insn 111 110 0 (set (reg:SI 108 [ _22 ])
        (mem:SI (reg/f:DI 773) [1 *nb_615(D)+0 S4 A32])) "../src/bnsolv.f":21 -1
     (nil))

;; ubound.21_656 = (integer(kind=8)) _22;

(insn 112 111 113 (set (reg:DI 774)
        (sign_extend:DI (reg:SI 108 [ _22 ]))) "../src/bnsolv.f":21 -1
     (nil))

(insn 113 112 0 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -104 [0xffffffffffffff98])) [2 ubound.21+0 S8 A64])
        (reg:DI 774)) "../src/bnsolv.f":21 -1
     (nil))

;; stride.23_657 = ubound.21_656;

(insn 114 113 0 (set (reg:DI 682 [ stride.23_657 ])
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -104 [0xffffffffffffff98])) [2 ubound.21+0 S8 A64])) "../src/bnsolv.f":21 -1
     (nil))

;; stride.23_658 = MAX_EXPR <stride.23_657, 0>;

(insn 116 114 115 (set (reg:DI 775)
        (const_int 0 [0])) "../src/bnsolv.f":21 -1
     (nil))

(insn 115 116 117 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 682 [ stride.23_657 ])
            (const_int 0 [0]))) "../src/bnsolv.f":21 -1
     (nil))

(insn 117 115 0 (set (reg:DI 683 [ stride.23_658 ])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 682 [ stride.23_657 ])
            (reg:DI 775))) "../src/bnsolv.f":21 -1
     (nil))

;; _23 = *nrmax_659(D);

(insn 118 117 119 (set (reg/f:DI 776)
        (mem/f/c:DI (plus:DI (reg/f:DI 81 virtual-incoming-args)
                (const_int 8 [0x8])) [11 nrmax+0 S8 A64])) "../src/bnsolv.f":21 -1
     (nil))

(insn 119 118 0 (set (reg:SI 109 [ _23 ])
        (mem:SI (reg/f:DI 776) [1 *nrmax_659(D)+0 S4 A32])) "../src/bnsolv.f":21 -1
     (nil))

;; ubound.22_660 = (integer(kind=8)) _23;

(insn 120 119 121 (set (reg:DI 777)
        (sign_extend:DI (reg:SI 109 [ _23 ]))) "../src/bnsolv.f":21 -1
     (nil))

(insn 121 120 0 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -112 [0xffffffffffffff90])) [2 ubound.22+0 S8 A64])
        (reg:DI 777)) "../src/bnsolv.f":21 -1
     (nil))

;; stride.25_661 = stride.23_658 * ubound.22_660;

(insn 122 121 0 (parallel [
            (set (reg:DI 684 [ stride.25_661 ])
                (mult:DI (reg:DI 683 [ stride.23_658 ])
                    (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -112 [0xffffffffffffff90])) [2 ubound.22+0 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":21 -1
     (nil))

;; stride.25_662 = MAX_EXPR <stride.25_661, 0>;

(insn 124 122 123 (set (reg:DI 778)
        (const_int 0 [0])) "../src/bnsolv.f":21 -1
     (nil))

(insn 123 124 125 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 684 [ stride.25_661 ])
            (const_int 0 [0]))) "../src/bnsolv.f":21 -1
     (nil))

(insn 125 123 0 (set (reg:DI 685 [ stride.25_662 ])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 684 [ stride.25_661 ])
            (reg:DI 778))) "../src/bnsolv.f":21 -1
     (nil))

;; _24 = *n_622(D);

(insn 126 125 127 (set (reg/f:DI 779)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -688 [0xfffffffffffffd50])) [11 n+0 S8 A64])) "../src/bnsolv.f":21 -1
     (nil))

(insn 127 126 0 (set (reg:SI 110 [ _24 ])
        (mem:SI (reg/f:DI 779) [1 *n_622(D)+0 S4 A32])) "../src/bnsolv.f":21 -1
     (nil))

;; ubound.24_663 = (integer(kind=8)) _24;

(insn 128 127 129 (set (reg:DI 780)
        (sign_extend:DI (reg:SI 110 [ _24 ]))) "../src/bnsolv.f":21 -1
     (nil))

(insn 129 128 0 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -120 [0xffffffffffffff88])) [2 ubound.24+0 S8 A64])
        (reg:DI 780)) "../src/bnsolv.f":21 -1
     (nil))

;; size.27_664 = stride.25_662 * ubound.24_663;

(insn 130 129 0 (parallel [
            (set (reg:DI 686 [ size.27_664 ])
                (mult:DI (reg:DI 685 [ stride.25_662 ])
                    (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -120 [0xffffffffffffff88])) [2 ubound.24+0 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":21 -1
     (nil))

;; size.27_665 = MAX_EXPR <size.27_664, 0>;

(insn 132 130 131 (set (reg:DI 781)
        (const_int 0 [0])) "../src/bnsolv.f":21 -1
     (nil))

(insn 131 132 133 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 686 [ size.27_664 ])
            (const_int 0 [0]))) "../src/bnsolv.f":21 -1
     (nil))

(insn 133 131 0 (set (reg:DI 687 [ size.27_665 ])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 686 [ size.27_664 ])
            (reg:DI 781))) "../src/bnsolv.f":21 -1
     (nil))

;; _666 = size.27_665 + -1;

(insn 134 133 0 (parallel [
            (set (reg:DI 688 [ _666 ])
                (plus:DI (reg:DI 687 [ size.27_665 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":21 -1
     (nil))

;; size.36_25 = (sizetype) size.27_665;

(insn 135 134 0 (set (reg:DI 111 [ size.36_25 ])
        (reg:DI 687 [ size.27_665 ])) "../src/bnsolv.f":21 -1
     (nil))

;; _26 = (bitsizetype) size.36_25;

(insn 136 135 137 (set (subreg:DI (reg:TI 112 [ _26 ]) 0)
        (reg:DI 111 [ size.36_25 ])) "../src/bnsolv.f":21 -1
     (nil))

(insn 137 136 0 (set (subreg:DI (reg:TI 112 [ _26 ]) 8)
        (const_int 0 [0])) "../src/bnsolv.f":21 -1
     (nil))

;; _667 = _26 * 32;

(insn 138 137 0 (parallel [
            (set (reg:TI 689 [ _667 ])
                (ashift:TI (reg:TI 112 [ _26 ])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":21 -1
     (nil))

;; size.37_27 = (sizetype) size.27_665;

(insn 139 138 0 (set (reg:DI 113 [ size.37_27 ])
        (reg:DI 687 [ size.27_665 ])) "../src/bnsolv.f":21 -1
     (nil))

;; _668 = size.37_27 * 4;

(insn 140 139 0 (parallel [
            (set (reg:DI 690 [ _668 ])
                (ashift:DI (reg:DI 113 [ size.37_27 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":21 -1
     (nil))

;; _28 = ~stride.23_658;

(insn 141 140 0 (set (reg:DI 114 [ _28 ])
        (not:DI (reg:DI 683 [ stride.23_658 ]))) "../src/bnsolv.f":21 -1
     (nil))

;; offset.26_669 = _28 - stride.25_662;

(insn 142 141 0 (parallel [
            (set (reg:DI 691 [ offset.26_669 ])
                (minus:DI (reg:DI 114 [ _28 ])
                    (reg:DI 685 [ stride.25_662 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":21 -1
     (nil))

;; _670 = *n_622(D);

(insn 143 142 144 (set (reg/f:DI 782)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -688 [0xfffffffffffffd50])) [11 n+0 S8 A64])) "../src/bnsolv.f":37 -1
     (nil))

(insn 144 143 0 (set (reg:SI 692 [ _670 ])
        (mem:SI (reg/f:DI 782) [1 *n_622(D)+0 S4 A32])) "../src/bnsolv.f":37 -1
     (nil))

;; i = 1;

(insn 145 144 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [1 i+0 S4 A64])
        (const_int 1 [0x1])) "../src/bnsolv.f":37 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; i.38_29 = i;

(insn 147 146 0 (set (reg:SI 115 [ i.38_29 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [1 i+0 S4 A64])) "../src/bnsolv.f":37 -1
     (nil))

;; _672 = _670 < i.38_29;

(insn 148 147 149 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 692 [ _670 ])
            (reg:SI 115 [ i.38_29 ]))) "../src/bnsolv.f":37 -1
     (nil))

(insn 149 148 0 (set (reg:QI 693 [ _672 ])
        (lt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "../src/bnsolv.f":37 -1
     (nil))

;; if (_672 != 0)

(insn 150 149 151 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 693 [ _672 ])
            (const_int 0 [0]))) "../src/bnsolv.f":37 -1
     (nil))

(jump_insn 151 150 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "../src/bnsolv.f":37 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; i.39_30 = i;

(insn 153 152 0 (set (reg:SI 116 [ i.39_30 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [1 i+0 S4 A64])) "../src/bnsolv.f":39 -1
     (nil))

;; im_673 = i.39_30 + -1;

(insn 154 153 155 (parallel [
            (set (reg:SI 783)
                (plus:SI (reg:SI 116 [ i.39_30 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":39 -1
     (nil))

(insn 155 154 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -124 [0xffffffffffffff84])) [1 im+0 S4 A32])
        (reg:SI 783)) "../src/bnsolv.f":39 -1
     (nil))

;; i.40_31 = i;

(insn 156 155 0 (set (reg:SI 117 [ i.40_31 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [1 i+0 S4 A64])) "../src/bnsolv.f":42 -1
     (nil))

;; if (i.40_31 == 1)

(insn 157 156 158 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 117 [ i.40_31 ])
            (const_int 1 [0x1]))) "../src/bnsolv.f":42 -1
     (nil))

(jump_insn 158 157 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "../src/bnsolv.f":42 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; _674 = *nb_615(D);

(insn 160 159 161 (set (reg/f:DI 784)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -680 [0xfffffffffffffd58])) [11 nb+0 S8 A64])) "../src/bnsolv.f":45 -1
     (nil))

(insn 161 160 0 (set (reg:SI 694 [ _674 ])
        (mem:SI (reg/f:DI 784) [1 *nb_615(D)+0 S4 A32])) "../src/bnsolv.f":45 -1
     (nil))

;; k_675 = 1;

(insn 162 161 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 k+0 S4 A32])
        (const_int 1 [0x1])) "../src/bnsolv.f":45 -1
     (nil))

;; Generating RTL for gimple basic block 6

;; _676 = k_568 > _674;

(insn 164 163 165 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [1 k+0 S4 A32])
            (reg:SI 694 [ _674 ]))) "../src/bnsolv.f":45 -1
     (nil))

(insn 165 164 0 (set (reg:QI 695 [ _676 ])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "../src/bnsolv.f":45 -1
     (nil))

;; if (_676 != 0)

(insn 166 165 167 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 695 [ _676 ])
            (const_int 0 [0]))) "../src/bnsolv.f":45 -1
     (nil))

(jump_insn 167 166 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "../src/bnsolv.f":45 -1
     (nil))

;; Generating RTL for gimple basic block 7

;; _677 = *nb_615(D);

(insn 169 168 170 (set (reg/f:DI 785)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -680 [0xfffffffffffffd58])) [11 nb+0 S8 A64])) "../src/bnsolv.f":46 -1
     (nil))

(insn 170 169 0 (set (reg:SI 696 [ _677 ])
        (mem:SI (reg/f:DI 785) [1 *nb_615(D)+0 S4 A32])) "../src/bnsolv.f":46 -1
     (nil))

;; j_678 = 1;

(insn 171 170 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 j+0 S4 A32])
        (const_int 1 [0x1])) "../src/bnsolv.f":46 -1
     (nil))

;; Generating RTL for gimple basic block 8

;; _679 = j_566 > _677;

(insn 173 172 174 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 j+0 S4 A32])
            (reg:SI 696 [ _677 ]))) "../src/bnsolv.f":46 -1
     (nil))

(insn 174 173 0 (set (reg:QI 697 [ _679 ])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "../src/bnsolv.f":46 -1
     (nil))

;; if (_679 != 0)

(insn 175 174 176 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 697 [ _679 ])
            (const_int 0 [0]))) "../src/bnsolv.f":46 -1
     (nil))

(jump_insn 176 175 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "../src/bnsolv.f":46 -1
     (nil))

;; Generating RTL for gimple basic block 9

;; i.41_32 = i;

(insn 178 177 0 (set (reg:SI 118 [ i.41_32 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [1 i+0 S4 A64])) "../src/bnsolv.f":47 -1
     (nil))

;; _33 = (integer(kind=8)) i.41_32;

(insn 179 178 0 (set (reg:DI 119 [ _33 ])
        (sign_extend:DI (reg:SI 118 [ i.41_32 ]))) "../src/bnsolv.f":47 -1
     (nil))

;; _34 = stride.11_621 * _33;

(insn 180 179 0 (parallel [
            (set (reg:DI 120 [ _34 ])
                (mult:DI (reg:DI 655 [ stride.11_621 ])
                    (reg:DI 119 [ _33 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":47 -1
     (nil))

;; _35 = offset.12_629 + _34;

(insn 181 180 0 (parallel [
            (set (reg:DI 121 [ _35 ])
                (plus:DI (reg:DI 661 [ offset.12_629 ])
                    (reg:DI 120 [ _34 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":47 -1
     (nil))

;; _36 = (integer(kind=8)) j_566;

(insn 182 181 183 (set (reg:SI 786)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 j+0 S4 A32])) "../src/bnsolv.f":47 -1
     (nil))

(insn 183 182 0 (set (reg:DI 122 [ _36 ])
        (sign_extend:DI (reg:SI 786))) "../src/bnsolv.f":47 -1
     (nil))

;; _37 = stride.9_618 * _36;

(insn 184 183 0 (parallel [
            (set (reg:DI 123 [ _37 ])
                (mult:DI (reg:DI 653 [ stride.9_618 ])
                    (reg:DI 122 [ _36 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":47 -1
     (nil))

;; _38 = _35 + _37;

(insn 185 184 0 (parallel [
            (set (reg:DI 124 [ _38 ])
                (plus:DI (reg:DI 121 [ _35 ])
                    (reg:DI 123 [ _37 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":47 -1
     (nil))

;; _39 = (integer(kind=8)) k_568;

(insn 186 185 187 (set (reg:SI 787)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 k+0 S4 A32])) "../src/bnsolv.f":47 -1
     (nil))

(insn 187 186 0 (set (reg:DI 125 [ _39 ])
        (sign_extend:DI (reg:SI 787))) "../src/bnsolv.f":47 -1
     (nil))

;; _40 = _38 + _39;

(insn 188 187 0 (parallel [
            (set (reg:DI 126 [ _40 ])
                (plus:DI (reg:DI 124 [ _38 ])
                    (reg:DI 125 [ _39 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":47 -1
     (nil))
Applying pattern match.pd:84, generic-match.c:11356
Applying pattern match.pd:84, generic-match.c:11356
Applying pattern match.pd:84, generic-match.c:11356

;; btmp_681 = *b_680(D)[_40];

(insn 189 188 190 (set (reg/f:DI 788)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -656 [0xfffffffffffffd70])) [10 b+0 S8 A64])) "../src/bnsolv.f":47 -1
     (nil))

(insn 190 189 191 (set (reg:SF 789)
        (mem:SF (plus:DI (mult:DI (reg:DI 126 [ _40 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 788)) [3 *b_680(D) S4 A32])) "../src/bnsolv.f":47 -1
     (nil))

(insn 191 190 0 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -128 [0xffffffffffffff80])) [3 btmp+0 S4 A32])
        (reg:SF 789)) "../src/bnsolv.f":47 -1
     (nil))

;; _682 = *nb_615(D);

(insn 192 191 193 (set (reg/f:DI 790)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -680 [0xfffffffffffffd58])) [11 nb+0 S8 A64])) "../src/bnsolv.f":48 -1
     (nil))

(insn 193 192 0 (set (reg:SI 698 [ _682 ])
        (mem:SI (reg/f:DI 790) [1 *nb_615(D)+0 S4 A32])) "../src/bnsolv.f":48 -1
     (nil))

;; l_683 = 1;

(insn 194 193 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])
        (const_int 1 [0x1])) "../src/bnsolv.f":48 -1
     (nil))

;; Generating RTL for gimple basic block 10

;; _684 = l_577 > _682;

(insn 196 195 197 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])
            (reg:SI 698 [ _682 ]))) "../src/bnsolv.f":48 -1
     (nil))

(insn 197 196 0 (set (reg:QI 699 [ _684 ])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "../src/bnsolv.f":48 -1
     (nil))

;; if (_684 != 0)

(insn 198 197 199 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 699 [ _684 ])
            (const_int 0 [0]))) "../src/bnsolv.f":48 -1
     (nil))

(jump_insn 199 198 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "../src/bnsolv.f":48 -1
     (nil))

;; Generating RTL for gimple basic block 11

;; i.42_41 = i;

(insn 201 200 0 (set (reg:SI 127 [ i.42_41 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [1 i+0 S4 A64])) "../src/bnsolv.f":49 -1
     (nil))

;; _42 = (integer(kind=8)) i.42_41;

(insn 202 201 0 (set (reg:DI 128 [ _42 ])
        (sign_extend:DI (reg:SI 127 [ i.42_41 ]))) "../src/bnsolv.f":49 -1
     (nil))

;; _43 = stride.4_635 * _42;

(insn 203 202 0 (parallel [
            (set (reg:DI 129 [ _43 ])
                (mult:DI (reg:DI 665 [ stride.4_635 ])
                    (reg:DI 128 [ _42 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":49 -1
     (nil))

;; _44 = offset.5_642 + _43;

(insn 204 203 0 (parallel [
            (set (reg:DI 130 [ _44 ])
                (plus:DI (reg:DI 671 [ offset.5_642 ])
                    (reg:DI 129 [ _43 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":49 -1
     (nil))

;; _45 = (integer(kind=8)) l_577;

(insn 205 204 206 (set (reg:SI 791)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])) "../src/bnsolv.f":49 -1
     (nil))

(insn 206 205 0 (set (reg:DI 131 [ _45 ])
        (sign_extend:DI (reg:SI 791))) "../src/bnsolv.f":49 -1
     (nil))

;; _46 = stride.2_632 * _45;

(insn 207 206 0 (parallel [
            (set (reg:DI 132 [ _46 ])
                (mult:DI (reg:DI 663 [ stride.2_632 ])
                    (reg:DI 131 [ _45 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":49 -1
     (nil))

;; _47 = _44 + _46;

(insn 208 207 0 (parallel [
            (set (reg:DI 133 [ _47 ])
                (plus:DI (reg:DI 130 [ _44 ])
                    (reg:DI 132 [ _46 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":49 -1
     (nil))

;; _48 = (integer(kind=8)) k_568;

(insn 209 208 210 (set (reg:SI 792)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 k+0 S4 A32])) "../src/bnsolv.f":49 -1
     (nil))

(insn 210 209 0 (set (reg:DI 134 [ _48 ])
        (sign_extend:DI (reg:SI 792))) "../src/bnsolv.f":49 -1
     (nil))

;; _49 = _47 + _48;

(insn 211 210 0 (parallel [
            (set (reg:DI 135 [ _49 ])
                (plus:DI (reg:DI 133 [ _47 ])
                    (reg:DI 134 [ _48 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":49 -1
     (nil))
Applying pattern match.pd:84, generic-match.c:11356
Applying pattern match.pd:84, generic-match.c:11356
Applying pattern match.pd:84, generic-match.c:11356

;; _50 = *a_685(D)[_49];

(insn 212 211 213 (set (reg/f:DI 793)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -648 [0xfffffffffffffd78])) [10 a+0 S8 A64])) "../src/bnsolv.f":49 -1
     (nil))

(insn 213 212 0 (set (reg:SF 136 [ _50 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 135 [ _49 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 793)) [3 *a_685(D) S4 A32])) "../src/bnsolv.f":49 -1
     (nil))

;; _51 = (integer(kind=8)) im_673;

(insn 214 213 215 (set (reg:SI 794)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -124 [0xffffffffffffff84])) [1 im+0 S4 A32])) "../src/bnsolv.f":49 -1
     (nil))

(insn 215 214 0 (set (reg:DI 137 [ _51 ])
        (sign_extend:DI (reg:SI 794))) "../src/bnsolv.f":49 -1
     (nil))

;; _52 = stride.18_648 * _51;

(insn 216 215 0 (parallel [
            (set (reg:DI 138 [ _52 ])
                (mult:DI (reg:DI 675 [ stride.18_648 ])
                    (reg:DI 137 [ _51 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":49 -1
     (nil))

;; _53 = offset.19_655 + _52;

(insn 217 216 0 (parallel [
            (set (reg:DI 139 [ _53 ])
                (plus:DI (reg:DI 681 [ offset.19_655 ])
                    (reg:DI 138 [ _52 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":49 -1
     (nil))

;; _54 = (integer(kind=8)) l_577;

(insn 218 217 219 (set (reg:SI 795)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])) "../src/bnsolv.f":49 -1
     (nil))

(insn 219 218 0 (set (reg:DI 140 [ _54 ])
        (sign_extend:DI (reg:SI 795))) "../src/bnsolv.f":49 -1
     (nil))

;; _55 = stride.16_645 * _54;

(insn 220 219 0 (parallel [
            (set (reg:DI 141 [ _55 ])
                (mult:DI (reg:DI 673 [ stride.16_645 ])
                    (reg:DI 140 [ _54 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":49 -1
     (nil))

;; _56 = _53 + _55;

(insn 221 220 0 (parallel [
            (set (reg:DI 142 [ _56 ])
                (plus:DI (reg:DI 139 [ _53 ])
                    (reg:DI 141 [ _55 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":49 -1
     (nil))

;; _57 = (integer(kind=8)) j_566;

(insn 222 221 223 (set (reg:SI 796)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 j+0 S4 A32])) "../src/bnsolv.f":49 -1
     (nil))

(insn 223 222 0 (set (reg:DI 143 [ _57 ])
        (sign_extend:DI (reg:SI 796))) "../src/bnsolv.f":49 -1
     (nil))

;; _58 = _56 + _57;

(insn 224 223 0 (parallel [
            (set (reg:DI 144 [ _58 ])
                (plus:DI (reg:DI 142 [ _56 ])
                    (reg:DI 143 [ _57 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":49 -1
     (nil))
Applying pattern match.pd:84, generic-match.c:11356
Applying pattern match.pd:84, generic-match.c:11356
Applying pattern match.pd:84, generic-match.c:11356

;; _59 = *c_686(D)[_58];

(insn 225 224 226 (set (reg/f:DI 797)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -664 [0xfffffffffffffd68])) [10 c+0 S8 A64])) "../src/bnsolv.f":49 -1
     (nil))

(insn 226 225 0 (set (reg:SF 145 [ _59 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 144 [ _58 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 797)) [3 *c_686(D) S4 A32])) "../src/bnsolv.f":49 -1
     (nil))

;; _60 = btmp_681 * _59;

(insn 227 226 0 (set (reg:SF 146 [ _60 ])
        (mult:SF (reg:SF 145 [ _59 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -128 [0xffffffffffffff80])) [3 btmp+0 S4 A32]))) "../src/bnsolv.f":49 -1
     (nil))

;; i.43_61 = i;

(insn 228 227 0 (set (reg:SI 147 [ i.43_61 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [1 i+0 S4 A64])) "../src/bnsolv.f":49 -1
     (nil))

;; _62 = (integer(kind=8)) i.43_61;

(insn 229 228 0 (set (reg:DI 148 [ _62 ])
        (sign_extend:DI (reg:SI 147 [ i.43_61 ]))) "../src/bnsolv.f":49 -1
     (nil))

;; _63 = stride.4_635 * _62;

(insn 230 229 0 (parallel [
            (set (reg:DI 149 [ _63 ])
                (mult:DI (reg:DI 665 [ stride.4_635 ])
                    (reg:DI 148 [ _62 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":49 -1
     (nil))

;; _64 = offset.5_642 + _63;

(insn 231 230 0 (parallel [
            (set (reg:DI 150 [ _64 ])
                (plus:DI (reg:DI 671 [ offset.5_642 ])
                    (reg:DI 149 [ _63 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":49 -1
     (nil))

;; _65 = (integer(kind=8)) l_577;

(insn 232 231 233 (set (reg:SI 798)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])) "../src/bnsolv.f":49 -1
     (nil))

(insn 233 232 0 (set (reg:DI 151 [ _65 ])
        (sign_extend:DI (reg:SI 798))) "../src/bnsolv.f":49 -1
     (nil))

;; _66 = stride.2_632 * _65;

(insn 234 233 0 (parallel [
            (set (reg:DI 152 [ _66 ])
                (mult:DI (reg:DI 663 [ stride.2_632 ])
                    (reg:DI 151 [ _65 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":49 -1
     (nil))

;; _67 = _64 + _66;

(insn 235 234 0 (parallel [
            (set (reg:DI 153 [ _67 ])
                (plus:DI (reg:DI 150 [ _64 ])
                    (reg:DI 152 [ _66 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":49 -1
     (nil))

;; _68 = (integer(kind=8)) k_568;

(insn 236 235 237 (set (reg:SI 799)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 k+0 S4 A32])) "../src/bnsolv.f":49 -1
     (nil))

(insn 237 236 0 (set (reg:DI 154 [ _68 ])
        (sign_extend:DI (reg:SI 799))) "../src/bnsolv.f":49 -1
     (nil))

;; _69 = _67 + _68;

(insn 238 237 0 (parallel [
            (set (reg:DI 155 [ _69 ])
                (plus:DI (reg:DI 153 [ _67 ])
                    (reg:DI 154 [ _68 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":49 -1
     (nil))

;; _70 = _50 - _60;

(insn 239 238 0 (set (reg:SF 156 [ _70 ])
        (minus:SF (reg:SF 136 [ _50 ])
            (reg:SF 146 [ _60 ]))) "../src/bnsolv.f":49 -1
     (nil))
Applying pattern match.pd:84, generic-match.c:11356
Applying pattern match.pd:84, generic-match.c:11356
Applying pattern match.pd:84, generic-match.c:11356

;; *a_685(D)[_69] = _70;

(insn 240 239 241 (set (reg/f:DI 800)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -648 [0xfffffffffffffd78])) [10 a+0 S8 A64])) "../src/bnsolv.f":49 -1
     (nil))

(insn 241 240 0 (set (mem:SF (plus:DI (mult:DI (reg:DI 155 [ _69 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 800)) [3 *a_685(D) S4 A32])
        (reg:SF 156 [ _70 ])) "../src/bnsolv.f":49 -1
     (nil))

;; l_688 = l_577 + 1;

(insn 242 241 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":48 -1
     (nil))

;; Generating RTL for gimple basic block 12

;; 

(code_label 246 245 247 5 (nil) [0 uses])

(note 247 246 0 NOTE_INSN_BASIC_BLOCK)

;; _690 = *nrhs_689(D);

(insn 248 247 249 (set (reg/f:DI 801)
        (mem/f/c:DI (reg/f:DI 81 virtual-incoming-args) [11 nrhs+0 S8 A64])) "../src/bnsolv.f":51 -1
     (nil))

(insn 249 248 0 (set (reg:SI 700 [ _690 ])
        (mem:SI (reg/f:DI 801) [1 *nrhs_689(D)+0 S4 A32])) "../src/bnsolv.f":51 -1
     (nil))

;; l_691 = 1;

(insn 250 249 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])
        (const_int 1 [0x1])) "../src/bnsolv.f":51 -1
     (nil))

;; Generating RTL for gimple basic block 13

;; _692 = l_578 > _690;

(insn 252 251 253 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])
            (reg:SI 700 [ _690 ]))) "../src/bnsolv.f":51 -1
     (nil))

(insn 253 252 0 (set (reg:QI 701 [ _692 ])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "../src/bnsolv.f":51 -1
     (nil))

;; if (_692 != 0)

(insn 254 253 255 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 701 [ _692 ])
            (const_int 0 [0]))) "../src/bnsolv.f":51 -1
     (nil))

(jump_insn 255 254 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "../src/bnsolv.f":51 -1
     (nil))

;; Generating RTL for gimple basic block 14

;; i.44_71 = i;

(insn 257 256 0 (set (reg:SI 157 [ i.44_71 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [1 i+0 S4 A64])) "../src/bnsolv.f":52 -1
     (nil))

;; _72 = (integer(kind=8)) i.44_71;

(insn 258 257 0 (set (reg:DI 158 [ _72 ])
        (sign_extend:DI (reg:SI 157 [ i.44_71 ]))) "../src/bnsolv.f":52 -1
     (nil))

;; _73 = stride.25_662 * _72;

(insn 259 258 0 (parallel [
            (set (reg:DI 159 [ _73 ])
                (mult:DI (reg:DI 685 [ stride.25_662 ])
                    (reg:DI 158 [ _72 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":52 -1
     (nil))

;; _74 = offset.26_669 + _73;

(insn 260 259 0 (parallel [
            (set (reg:DI 160 [ _74 ])
                (plus:DI (reg:DI 691 [ offset.26_669 ])
                    (reg:DI 159 [ _73 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":52 -1
     (nil))

;; _75 = (integer(kind=8)) l_578;

(insn 261 260 262 (set (reg:SI 802)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])) "../src/bnsolv.f":52 -1
     (nil))

(insn 262 261 0 (set (reg:DI 161 [ _75 ])
        (sign_extend:DI (reg:SI 802))) "../src/bnsolv.f":52 -1
     (nil))

;; _76 = stride.23_658 * _75;

(insn 263 262 0 (parallel [
            (set (reg:DI 162 [ _76 ])
                (mult:DI (reg:DI 683 [ stride.23_658 ])
                    (reg:DI 161 [ _75 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":52 -1
     (nil))

;; _77 = _74 + _76;

(insn 264 263 0 (parallel [
            (set (reg:DI 163 [ _77 ])
                (plus:DI (reg:DI 160 [ _74 ])
                    (reg:DI 162 [ _76 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":52 -1
     (nil))

;; _78 = (integer(kind=8)) k_568;

(insn 265 264 266 (set (reg:SI 803)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 k+0 S4 A32])) "../src/bnsolv.f":52 -1
     (nil))

(insn 266 265 0 (set (reg:DI 164 [ _78 ])
        (sign_extend:DI (reg:SI 803))) "../src/bnsolv.f":52 -1
     (nil))

;; _79 = _77 + _78;

(insn 267 266 0 (parallel [
            (set (reg:DI 165 [ _79 ])
                (plus:DI (reg:DI 163 [ _77 ])
                    (reg:DI 164 [ _78 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":52 -1
     (nil))
Applying pattern match.pd:84, generic-match.c:11356
Applying pattern match.pd:84, generic-match.c:11356
Applying pattern match.pd:84, generic-match.c:11356

;; _80 = *r_693(D)[_79];

(insn 268 267 269 (set (reg/f:DI 804)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -672 [0xfffffffffffffd60])) [10 r+0 S8 A64])) "../src/bnsolv.f":52 -1
     (nil))

(insn 269 268 0 (set (reg:SF 166 [ _80 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 165 [ _79 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 804)) [3 *r_693(D) S4 A32])) "../src/bnsolv.f":52 -1
     (nil))

;; _81 = (integer(kind=8)) im_673;

(insn 270 269 271 (set (reg:SI 805)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -124 [0xffffffffffffff84])) [1 im+0 S4 A32])) "../src/bnsolv.f":52 -1
     (nil))

(insn 271 270 0 (set (reg:DI 167 [ _81 ])
        (sign_extend:DI (reg:SI 805))) "../src/bnsolv.f":52 -1
     (nil))

;; _82 = stride.25_662 * _81;

(insn 272 271 0 (parallel [
            (set (reg:DI 168 [ _82 ])
                (mult:DI (reg:DI 685 [ stride.25_662 ])
                    (reg:DI 167 [ _81 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":52 -1
     (nil))

;; _83 = offset.26_669 + _82;

(insn 273 272 0 (parallel [
            (set (reg:DI 169 [ _83 ])
                (plus:DI (reg:DI 691 [ offset.26_669 ])
                    (reg:DI 168 [ _82 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":52 -1
     (nil))

;; _84 = (integer(kind=8)) l_578;

(insn 274 273 275 (set (reg:SI 806)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])) "../src/bnsolv.f":52 -1
     (nil))

(insn 275 274 0 (set (reg:DI 170 [ _84 ])
        (sign_extend:DI (reg:SI 806))) "../src/bnsolv.f":52 -1
     (nil))

;; _85 = stride.23_658 * _84;

(insn 276 275 0 (parallel [
            (set (reg:DI 171 [ _85 ])
                (mult:DI (reg:DI 683 [ stride.23_658 ])
                    (reg:DI 170 [ _84 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":52 -1
     (nil))

;; _86 = _83 + _85;

(insn 277 276 0 (parallel [
            (set (reg:DI 172 [ _86 ])
                (plus:DI (reg:DI 169 [ _83 ])
                    (reg:DI 171 [ _85 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":52 -1
     (nil))

;; _87 = (integer(kind=8)) j_566;

(insn 278 277 279 (set (reg:SI 807)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 j+0 S4 A32])) "../src/bnsolv.f":52 -1
     (nil))

(insn 279 278 0 (set (reg:DI 173 [ _87 ])
        (sign_extend:DI (reg:SI 807))) "../src/bnsolv.f":52 -1
     (nil))

;; _88 = _86 + _87;

(insn 280 279 0 (parallel [
            (set (reg:DI 174 [ _88 ])
                (plus:DI (reg:DI 172 [ _86 ])
                    (reg:DI 173 [ _87 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":52 -1
     (nil))
Applying pattern match.pd:84, generic-match.c:11356
Applying pattern match.pd:84, generic-match.c:11356
Applying pattern match.pd:84, generic-match.c:11356

;; _89 = *r_693(D)[_88];

(insn 281 280 282 (set (reg/f:DI 808)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -672 [0xfffffffffffffd60])) [10 r+0 S8 A64])) "../src/bnsolv.f":52 -1
     (nil))

(insn 282 281 0 (set (reg:SF 175 [ _89 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 174 [ _88 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 808)) [3 *r_693(D) S4 A32])) "../src/bnsolv.f":52 -1
     (nil))

;; _90 = btmp_681 * _89;

(insn 283 282 0 (set (reg:SF 176 [ _90 ])
        (mult:SF (reg:SF 175 [ _89 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -128 [0xffffffffffffff80])) [3 btmp+0 S4 A32]))) "../src/bnsolv.f":52 -1
     (nil))

;; i.45_91 = i;

(insn 284 283 0 (set (reg:SI 177 [ i.45_91 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [1 i+0 S4 A64])) "../src/bnsolv.f":52 -1
     (nil))

;; _92 = (integer(kind=8)) i.45_91;

(insn 285 284 0 (set (reg:DI 178 [ _92 ])
        (sign_extend:DI (reg:SI 177 [ i.45_91 ]))) "../src/bnsolv.f":52 -1
     (nil))

;; _93 = stride.25_662 * _92;

(insn 286 285 0 (parallel [
            (set (reg:DI 179 [ _93 ])
                (mult:DI (reg:DI 685 [ stride.25_662 ])
                    (reg:DI 178 [ _92 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":52 -1
     (nil))

;; _94 = offset.26_669 + _93;

(insn 287 286 0 (parallel [
            (set (reg:DI 180 [ _94 ])
                (plus:DI (reg:DI 691 [ offset.26_669 ])
                    (reg:DI 179 [ _93 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":52 -1
     (nil))

;; _95 = (integer(kind=8)) l_578;

(insn 288 287 289 (set (reg:SI 809)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])) "../src/bnsolv.f":52 -1
     (nil))

(insn 289 288 0 (set (reg:DI 181 [ _95 ])
        (sign_extend:DI (reg:SI 809))) "../src/bnsolv.f":52 -1
     (nil))

;; _96 = stride.23_658 * _95;

(insn 290 289 0 (parallel [
            (set (reg:DI 182 [ _96 ])
                (mult:DI (reg:DI 683 [ stride.23_658 ])
                    (reg:DI 181 [ _95 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":52 -1
     (nil))

;; _97 = _94 + _96;

(insn 291 290 0 (parallel [
            (set (reg:DI 183 [ _97 ])
                (plus:DI (reg:DI 180 [ _94 ])
                    (reg:DI 182 [ _96 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":52 -1
     (nil))

;; _98 = (integer(kind=8)) k_568;

(insn 292 291 293 (set (reg:SI 810)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 k+0 S4 A32])) "../src/bnsolv.f":52 -1
     (nil))

(insn 293 292 0 (set (reg:DI 184 [ _98 ])
        (sign_extend:DI (reg:SI 810))) "../src/bnsolv.f":52 -1
     (nil))

;; _99 = _97 + _98;

(insn 294 293 0 (parallel [
            (set (reg:DI 185 [ _99 ])
                (plus:DI (reg:DI 183 [ _97 ])
                    (reg:DI 184 [ _98 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":52 -1
     (nil))

;; _100 = _80 - _90;

(insn 295 294 0 (set (reg:SF 186 [ _100 ])
        (minus:SF (reg:SF 166 [ _80 ])
            (reg:SF 176 [ _90 ]))) "../src/bnsolv.f":52 -1
     (nil))
Applying pattern match.pd:84, generic-match.c:11356
Applying pattern match.pd:84, generic-match.c:11356
Applying pattern match.pd:84, generic-match.c:11356

;; *r_693(D)[_99] = _100;

(insn 296 295 297 (set (reg/f:DI 811)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -672 [0xfffffffffffffd60])) [10 r+0 S8 A64])) "../src/bnsolv.f":52 -1
     (nil))

(insn 297 296 0 (set (mem:SF (plus:DI (mult:DI (reg:DI 185 [ _99 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 811)) [3 *r_693(D) S4 A32])
        (reg:SF 186 [ _100 ])) "../src/bnsolv.f":52 -1
     (nil))

;; l_695 = l_578 + 1;

(insn 298 297 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":51 -1
     (nil))

;; Generating RTL for gimple basic block 15

;; 

(code_label 302 301 303 7 (nil) [0 uses])

(note 303 302 0 NOTE_INSN_BASIC_BLOCK)

;; j_696 = j_566 + 1;

(insn 304 303 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [1 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [1 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":46 -1
     (nil))

;; Generating RTL for gimple basic block 16

;; 

(code_label 308 307 309 4 (nil) [0 uses])

(note 309 308 0 NOTE_INSN_BASIC_BLOCK)

;; k_697 = k_568 + 1;

(insn 310 309 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [1 k+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [1 k+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":45 -1
     (nil))

;; Generating RTL for gimple basic block 17

;; 

(code_label 314 313 315 3 (nil) [0 uses])

(note 315 314 0 NOTE_INSN_BASIC_BLOCK)

;; _101 = *nb_615(D);

(insn 316 315 317 (set (reg/f:DI 812)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -680 [0xfffffffffffffd58])) [11 nb+0 S8 A64])) "../src/bnsolv.f":61 -1
     (nil))

(insn 317 316 0 (set (reg:SI 187 [ _101 ])
        (mem:SI (reg/f:DI 812) [1 *nb_615(D)+0 S4 A32])) "../src/bnsolv.f":61 -1
     (nil))

;; _698 = _101 + -1;

(insn 318 317 0 (parallel [
            (set (reg:SI 702 [ _698 ])
                (plus:SI (reg:SI 187 [ _101 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":61 -1
     (nil))

;; kpiv_699 = 1;

(insn 319 318 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 kpiv+0 S4 A32])
        (const_int 1 [0x1])) "../src/bnsolv.f":61 -1
     (nil))

;; Generating RTL for gimple basic block 18

;; _700 = kpiv_573 > _698;

(insn 321 320 322 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [1 kpiv+0 S4 A32])
            (reg:SI 702 [ _698 ]))) "../src/bnsolv.f":61 -1
     (nil))

(insn 322 321 0 (set (reg:QI 703 [ _700 ])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "../src/bnsolv.f":61 -1
     (nil))

;; if (_700 != 0)

(insn 323 322 324 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 703 [ _700 ])
            (const_int 0 [0]))) "../src/bnsolv.f":61 -1
     (nil))

(jump_insn 324 323 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "../src/bnsolv.f":61 -1
     (nil))

;; Generating RTL for gimple basic block 19

;; kp1_701 = kpiv_573 + 1;

(insn 329 325 330 (set (reg:SI 816)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 kpiv+0 S4 A32])) "../src/bnsolv.f":62 -1
     (nil))

(insn 330 329 331 (parallel [
            (set (reg:SI 815)
                (plus:SI (reg:SI 816)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":62 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [1 kpiv+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))

(insn 331 330 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -132 [0xffffffffffffff7c])) [1 kp1+0 S4 A32])
        (reg:SI 815)) "../src/bnsolv.f":62 -1
     (nil))

;; kx_702 = kpiv_573;

(insn 332 331 333 (set (reg:SI 817)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 kpiv+0 S4 A32])) "../src/bnsolv.f":65 -1
     (nil))

(insn 333 332 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [1 kx+0 S4 A32])
        (reg:SI 817)) "../src/bnsolv.f":65 -1
     (nil))

;; _703 = kp1_701;

(insn 334 333 0 (set (reg:SI 704 [ _703 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -132 [0xffffffffffffff7c])) [1 kp1+0 S4 A32])) "../src/bnsolv.f":66 -1
     (nil))

;; _704 = *nb_615(D);

(insn 335 334 336 (set (reg/f:DI 818)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -680 [0xfffffffffffffd58])) [11 nb+0 S8 A64])) "../src/bnsolv.f":66 -1
     (nil))

(insn 336 335 0 (set (reg:SI 705 [ _704 ])
        (mem:SI (reg/f:DI 818) [1 *nb_615(D)+0 S4 A32])) "../src/bnsolv.f":66 -1
     (nil))

;; k_705 = _703;

(insn 337 336 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 k+0 S4 A32])
        (reg:SI 704 [ _703 ])) "../src/bnsolv.f":66 -1
     (nil))

;; Generating RTL for gimple basic block 20

;; _706 = k_569 > _704;

(insn 339 338 340 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [1 k+0 S4 A32])
            (reg:SI 705 [ _704 ]))) "../src/bnsolv.f":66 -1
     (nil))

(insn 340 339 0 (set (reg:QI 706 [ _706 ])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "../src/bnsolv.f":66 -1
     (nil))

;; if (_706 != 0)

(insn 341 340 342 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 706 [ _706 ])
            (const_int 0 [0]))) "../src/bnsolv.f":66 -1
     (nil))

(jump_insn 342 341 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "../src/bnsolv.f":66 -1
     (nil))

;; Generating RTL for gimple basic block 21

;; i.46_102 = i;

(insn 344 343 0 (set (reg:SI 188 [ i.46_102 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [1 i+0 S4 A64])) "../src/bnsolv.f":67 -1
     (nil))

;; _103 = (integer(kind=8)) i.46_102;

(insn 345 344 0 (set (reg:DI 189 [ _103 ])
        (sign_extend:DI (reg:SI 188 [ i.46_102 ]))) "../src/bnsolv.f":67 -1
     (nil))

;; _104 = stride.4_635 * _103;

(insn 346 345 0 (parallel [
            (set (reg:DI 190 [ _104 ])
                (mult:DI (reg:DI 665 [ stride.4_635 ])
                    (reg:DI 189 [ _103 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":67 -1
     (nil))

;; _105 = offset.5_642 + _104;

(insn 347 346 0 (parallel [
            (set (reg:DI 191 [ _105 ])
                (plus:DI (reg:DI 671 [ offset.5_642 ])
                    (reg:DI 190 [ _104 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":67 -1
     (nil))

;; _106 = (integer(kind=8)) kpiv_573;

(insn 348 347 349 (set (reg:SI 819)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 kpiv+0 S4 A32])) "../src/bnsolv.f":67 -1
     (nil))

(insn 349 348 0 (set (reg:DI 192 [ _106 ])
        (sign_extend:DI (reg:SI 819))) "../src/bnsolv.f":67 -1
     (nil))

;; _107 = stride.2_632 * _106;

(insn 350 349 0 (parallel [
            (set (reg:DI 193 [ _107 ])
                (mult:DI (reg:DI 663 [ stride.2_632 ])
                    (reg:DI 192 [ _106 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":67 -1
     (nil))

;; _108 = _105 + _107;

(insn 351 350 0 (parallel [
            (set (reg:DI 194 [ _108 ])
                (plus:DI (reg:DI 191 [ _105 ])
                    (reg:DI 193 [ _107 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":67 -1
     (nil))

;; _109 = (integer(kind=8)) k_569;

(insn 352 351 353 (set (reg:SI 820)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 k+0 S4 A32])) "../src/bnsolv.f":67 -1
     (nil))

(insn 353 352 0 (set (reg:DI 195 [ _109 ])
        (sign_extend:DI (reg:SI 820))) "../src/bnsolv.f":67 -1
     (nil))

;; _110 = _108 + _109;

(insn 354 353 0 (parallel [
            (set (reg:DI 196 [ _110 ])
                (plus:DI (reg:DI 194 [ _108 ])
                    (reg:DI 195 [ _109 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":67 -1
     (nil))
Applying pattern match.pd:84, generic-match.c:11356
Applying pattern match.pd:84, generic-match.c:11356
Applying pattern match.pd:84, generic-match.c:11356

;; _111 = *a_685(D)[_110];

(insn 355 354 356 (set (reg/f:DI 821)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -648 [0xfffffffffffffd78])) [10 a+0 S8 A64])) "../src/bnsolv.f":67 -1
     (nil))

(insn 356 355 0 (set (reg:SF 197 [ _111 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 196 [ _110 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 821)) [3 *a_685(D) S4 A32])) "../src/bnsolv.f":67 -1
     (nil))

;; _112 = ABS_EXPR <_111>;

(insn 357 356 358 (set (reg:V4SF 822)
        (mem/u/c:V4SF (symbol_ref/u:DI ("*lC0") [flags 0x2]) [3  S16 A128])) "../src/bnsolv.f":67 -1
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF +QNaN [+QNaN])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))

(insn 358 357 0 (parallel [
            (set (reg:SF 198 [ _112 ])
                (abs:SF (reg:SF 197 [ _111 ])))
            (use (reg:V4SF 822))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":67 -1
     (expr_list:REG_EQUAL (abs:SF (reg:SF 197 [ _111 ]))
        (nil)))

;; i.47_113 = i;

(insn 359 358 0 (set (reg:SI 199 [ i.47_113 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [1 i+0 S4 A64])) "../src/bnsolv.f":67 -1
     (nil))

;; _114 = (integer(kind=8)) i.47_113;

(insn 360 359 0 (set (reg:DI 200 [ _114 ])
        (sign_extend:DI (reg:SI 199 [ i.47_113 ]))) "../src/bnsolv.f":67 -1
     (nil))

;; _115 = stride.4_635 * _114;

(insn 361 360 0 (parallel [
            (set (reg:DI 201 [ _115 ])
                (mult:DI (reg:DI 665 [ stride.4_635 ])
                    (reg:DI 200 [ _114 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":67 -1
     (nil))

;; _116 = offset.5_642 + _115;

(insn 362 361 0 (parallel [
            (set (reg:DI 202 [ _116 ])
                (plus:DI (reg:DI 671 [ offset.5_642 ])
                    (reg:DI 201 [ _115 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":67 -1
     (nil))

;; _117 = (integer(kind=8)) kpiv_573;

(insn 363 362 364 (set (reg:SI 823)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 kpiv+0 S4 A32])) "../src/bnsolv.f":67 -1
     (nil))

(insn 364 363 0 (set (reg:DI 203 [ _117 ])
        (sign_extend:DI (reg:SI 823))) "../src/bnsolv.f":67 -1
     (nil))

;; _118 = stride.2_632 * _117;

(insn 365 364 0 (parallel [
            (set (reg:DI 204 [ _118 ])
                (mult:DI (reg:DI 663 [ stride.2_632 ])
                    (reg:DI 203 [ _117 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":67 -1
     (nil))

;; _119 = _116 + _118;

(insn 366 365 0 (parallel [
            (set (reg:DI 205 [ _119 ])
                (plus:DI (reg:DI 202 [ _116 ])
                    (reg:DI 204 [ _118 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":67 -1
     (nil))

;; _120 = (integer(kind=8)) kx_575;

(insn 367 366 368 (set (reg:SI 824)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [1 kx+0 S4 A32])) "../src/bnsolv.f":67 -1
     (nil))

(insn 368 367 0 (set (reg:DI 206 [ _120 ])
        (sign_extend:DI (reg:SI 824))) "../src/bnsolv.f":67 -1
     (nil))

;; _121 = _119 + _120;

(insn 369 368 0 (parallel [
            (set (reg:DI 207 [ _121 ])
                (plus:DI (reg:DI 205 [ _119 ])
                    (reg:DI 206 [ _120 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":67 -1
     (nil))
Applying pattern match.pd:84, generic-match.c:11356
Applying pattern match.pd:84, generic-match.c:11356
Applying pattern match.pd:84, generic-match.c:11356

;; _122 = *a_685(D)[_121];

(insn 370 369 371 (set (reg/f:DI 825)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -648 [0xfffffffffffffd78])) [10 a+0 S8 A64])) "../src/bnsolv.f":67 -1
     (nil))

(insn 371 370 0 (set (reg:SF 208 [ _122 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 207 [ _121 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 825)) [3 *a_685(D) S4 A32])) "../src/bnsolv.f":67 -1
     (nil))

;; _123 = ABS_EXPR <_122>;

(insn 372 371 373 (set (reg:V4SF 826)
        (mem/u/c:V4SF (symbol_ref/u:DI ("*lC0") [flags 0x2]) [3  S16 A128])) "../src/bnsolv.f":67 -1
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF +QNaN [+QNaN])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))

(insn 373 372 0 (parallel [
            (set (reg:SF 209 [ _123 ])
                (abs:SF (reg:SF 208 [ _122 ])))
            (use (reg:V4SF 826))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":67 -1
     (expr_list:REG_EQUAL (abs:SF (reg:SF 208 [ _122 ]))
        (nil)))

;; _707 = _112 - _123;

(insn 374 373 0 (set (reg:SF 707 [ _707 ])
        (minus:SF (reg:SF 198 [ _112 ])
            (reg:SF 209 [ _123 ]))) "../src/bnsolv.f":67 -1
     (nil))

;; if (_707 <= 0.0)

(insn 375 374 376 (set (reg:SF 827)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC1") [flags 0x2]) [3  S4 A32])) "../src/bnsolv.f":67 -1
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))

(insn 376 375 377 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 827)
            (reg:SF 707 [ _707 ]))) "../src/bnsolv.f":67 -1
     (nil))

(jump_insn 377 376 0 (set (pc)
        (if_then_else (ge (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "../src/bnsolv.f":67 -1
     (nil))

;; Generating RTL for gimple basic block 22

;; kx_708 = k_569;

(insn 379 378 380 (set (reg:SI 828)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 k+0 S4 A32])) "../src/bnsolv.f":68 -1
     (nil))

(insn 380 379 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [1 kx+0 S4 A32])
        (reg:SI 828)) "../src/bnsolv.f":68 -1
     (nil))

;; Generating RTL for gimple basic block 23

;; 

(code_label 381 380 382 13 (nil) [0 uses])

(note 382 381 0 NOTE_INSN_BASIC_BLOCK)

;; k_709 = k_569 + 1;

(insn 383 382 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [1 k+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [1 k+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":66 -1
     (nil))

;; Generating RTL for gimple basic block 24

;; 

(code_label 387 386 388 12 (nil) [0 uses])

(note 388 387 0 NOTE_INSN_BASIC_BLOCK)

;; i.48_124 = i;

(insn 389 388 0 (set (reg:SI 210 [ i.48_124 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [1 i+0 S4 A64])) "../src/bnsolv.f":71 -1
     (nil))

;; _125 = (integer(kind=8)) i.48_124;

(insn 390 389 0 (set (reg:DI 211 [ _125 ])
        (sign_extend:DI (reg:SI 210 [ i.48_124 ]))) "../src/bnsolv.f":71 -1
     (nil))

;; _126 = stride.4_635 * _125;

(insn 391 390 0 (parallel [
            (set (reg:DI 212 [ _126 ])
                (mult:DI (reg:DI 665 [ stride.4_635 ])
                    (reg:DI 211 [ _125 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":71 -1
     (nil))

;; _127 = offset.5_642 + _126;

(insn 392 391 0 (parallel [
            (set (reg:DI 213 [ _127 ])
                (plus:DI (reg:DI 671 [ offset.5_642 ])
                    (reg:DI 212 [ _126 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":71 -1
     (nil))

;; _128 = (integer(kind=8)) kpiv_573;

(insn 393 392 394 (set (reg:SI 829)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 kpiv+0 S4 A32])) "../src/bnsolv.f":71 -1
     (nil))

(insn 394 393 0 (set (reg:DI 214 [ _128 ])
        (sign_extend:DI (reg:SI 829))) "../src/bnsolv.f":71 -1
     (nil))

;; _129 = stride.2_632 * _128;

(insn 395 394 0 (parallel [
            (set (reg:DI 215 [ _129 ])
                (mult:DI (reg:DI 663 [ stride.2_632 ])
                    (reg:DI 214 [ _128 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":71 -1
     (nil))

;; _130 = _127 + _129;

(insn 396 395 0 (parallel [
            (set (reg:DI 216 [ _130 ])
                (plus:DI (reg:DI 213 [ _127 ])
                    (reg:DI 215 [ _129 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":71 -1
     (nil))

;; _131 = (integer(kind=8)) kx_575;

(insn 397 396 398 (set (reg:SI 830)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [1 kx+0 S4 A32])) "../src/bnsolv.f":71 -1
     (nil))

(insn 398 397 0 (set (reg:DI 217 [ _131 ])
        (sign_extend:DI (reg:SI 830))) "../src/bnsolv.f":71 -1
     (nil))

;; _132 = _130 + _131;

(insn 399 398 0 (parallel [
            (set (reg:DI 218 [ _132 ])
                (plus:DI (reg:DI 216 [ _130 ])
                    (reg:DI 217 [ _131 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":71 -1
     (nil))
Applying pattern match.pd:84, generic-match.c:11356
Applying pattern match.pd:84, generic-match.c:11356
Applying pattern match.pd:84, generic-match.c:11356

;; _133 = *a_685(D)[_132];

(insn 400 399 401 (set (reg/f:DI 831)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -648 [0xfffffffffffffd78])) [10 a+0 S8 A64])) "../src/bnsolv.f":71 -1
     (nil))

(insn 401 400 0 (set (reg:SF 219 [ _133 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 218 [ _132 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 831)) [3 *a_685(D) S4 A32])) "../src/bnsolv.f":71 -1
     (nil))

;; if (_133 == 0.0)

(insn 402 401 403 (set (reg:SF 832)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC1") [flags 0x2]) [3  S4 A32])) "../src/bnsolv.f":71 -1
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))

(insn 403 402 404 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 219 [ _133 ])
            (reg:SF 832))) "../src/bnsolv.f":71 -1
     (nil))

(jump_insn 404 403 405 (set (pc)
        (if_then_else (unordered (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "../src/bnsolv.f":71 -1
     (nil))

(insn 405 404 406 (set (reg:SF 833)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC1") [flags 0x2]) [3  S4 A32])) "../src/bnsolv.f":71 -1
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))

(insn 406 405 407 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 219 [ _133 ])
            (reg:SF 833))) "../src/bnsolv.f":71 -1
     (nil))

(jump_insn 407 406 408 (set (pc)
        (if_then_else (uneq (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref 410)
            (pc))) "../src/bnsolv.f":71 -1
     (nil))

(jump_insn 408 407 409 (set (pc)
        (label_ref 0)) "../src/bnsolv.f":71 -1
     (nil))

(barrier 409 408 410)

(code_label 410 409 0 16 (nil) [0 uses])

;; Generating RTL for gimple basic block 25

;; dt_parm.28.common.filename = &"../src/bnsolv.f"[1]{lb: 1 sz: 1};

(insn 412 411 413 (set (reg/f:DI 834)
        (symbol_ref/f:DI ("*lC2") [flags 0x2]  <var_decl 0x143100ea0 *lC2>)) "../src/bnsolv.f":72 -1
     (nil))

(insn 413 412 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -632 [0xfffffffffffffd88])) [6 dt_parm.28.common.filename+0 S8 A64])
        (reg/f:DI 834)) "../src/bnsolv.f":72 -1
     (nil))

;; dt_parm.28.common.line = 72;

(insn 414 413 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -624 [0xfffffffffffffd90])) [1 dt_parm.28.common.line+0 S4 A128])
        (const_int 72 [0x48])) "../src/bnsolv.f":72 -1
     (nil))

;; dt_parm.28.common.flags = 128;

(insn 415 414 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -640 [0xfffffffffffffd80])) [1 dt_parm.28.common.flags+0 S4 A128])
        (const_int 128 [0x80])) "../src/bnsolv.f":72 -1
     (nil))

;; dt_parm.28.common.unit = 6;

(insn 416 415 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -636 [0xfffffffffffffd84])) [1 dt_parm.28.common.unit+0 S4 A32])
        (const_int 6 [0x6])) "../src/bnsolv.f":72 -1
     (nil))

;; _gfortran_st_write (&dt_parm.28);

(insn 417 416 418 (parallel [
            (set (reg:DI 835)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -640 [0xfffffffffffffd80])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":72 -1
     (nil))

(insn 418 417 419 (set (reg:DI 5 di)
        (reg:DI 835)) "../src/bnsolv.f":72 -1
     (nil))

(call_insn 419 418 0 (call (mem:QI (symbol_ref:DI ("_gfortran_st_write") [flags 0x41]  <function_decl 0x1427e0800 _gfortran_st_write>) [0 _gfortran_st_write S1 A8])
        (const_int 0 [0])) "../src/bnsolv.f":72 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; _gfortran_transfer_character_write (&dt_parm.28, &"Singular A block, i = "[1]{lb: 1 sz: 1}, 22);

(insn 420 419 421 (parallel [
            (set (reg:DI 836)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -640 [0xfffffffffffffd80])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":72 -1
     (nil))

(insn 421 420 422 (set (reg:SI 1 dx)
        (const_int 22 [0x16])) "../src/bnsolv.f":72 -1
     (nil))

(insn 422 421 423 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*lC3") [flags 0x2]  <var_decl 0x143100f30 *lC3>)) "../src/bnsolv.f":72 -1
     (nil))

(insn 423 422 424 (set (reg:DI 5 di)
        (reg:DI 836)) "../src/bnsolv.f":72 -1
     (nil))

(call_insn 424 423 0 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_character_write") [flags 0x41]  <function_decl 0x1427d4900 _gfortran_transfer_character_write>) [0 _gfortran_transfer_character_write S1 A8])
        (const_int 0 [0])) "../src/bnsolv.f":72 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))

;; _gfortran_transfer_integer_write (&dt_parm.28, &i, 4);

(insn 425 424 426 (parallel [
            (set (reg:DI 837)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -152 [0xffffffffffffff68])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":72 -1
     (nil))

(insn 426 425 427 (parallel [
            (set (reg:DI 838)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -640 [0xfffffffffffffd80])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":72 -1
     (nil))

(insn 427 426 428 (set (reg:SI 1 dx)
        (const_int 4 [0x4])) "../src/bnsolv.f":72 -1
     (nil))

(insn 428 427 429 (set (reg:DI 4 si)
        (reg:DI 837)) "../src/bnsolv.f":72 -1
     (nil))

(insn 429 428 430 (set (reg:DI 5 di)
        (reg:DI 838)) "../src/bnsolv.f":72 -1
     (nil))

(call_insn 430 429 0 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_integer_write") [flags 0x41]  <function_decl 0x1427d4500 _gfortran_transfer_integer_write>) [0 _gfortran_transfer_integer_write S1 A8])
        (const_int 0 [0])) "../src/bnsolv.f":72 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))

;; _gfortran_st_write_done (&dt_parm.28);

(insn 431 430 432 (parallel [
            (set (reg:DI 839)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -640 [0xfffffffffffffd80])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":72 -1
     (nil))

(insn 432 431 433 (set (reg:DI 5 di)
        (reg:DI 839)) "../src/bnsolv.f":72 -1
     (nil))

(call_insn 433 432 0 (call (mem:QI (symbol_ref:DI ("_gfortran_st_write_done") [flags 0x41]  <function_decl 0x1427e4300 _gfortran_st_write_done>) [0 _gfortran_st_write_done S1 A8])
        (const_int 0 [0])) "../src/bnsolv.f":72 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; dt_parm.28 ={v} {CLOBBER};

(nil)

;; _gfortran_stop_string (0B, 0);

(insn 434 433 435 (set (reg:SI 4 si)
        (const_int 0 [0])) "../src/bnsolv.f":73 -1
     (nil))

(insn 435 434 436 (set (reg:DI 5 di)
        (const_int 0 [0])) "../src/bnsolv.f":73 -1
     (nil))

(call_insn 436 435 437 (call (mem:QI (symbol_ref:DI ("_gfortran_stop_string") [flags 0x41]  <function_decl 0x1427c2200 _gfortran_stop_string>) [0 _gfortran_stop_string S1 A8])
        (const_int 0 [0])) "../src/bnsolv.f":73 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))

(barrier 437 436 0)

;; Generating RTL for gimple basic block 26

;; 

(code_label 438 437 439 15 (nil) [0 uses])

(note 439 438 0 NOTE_INSN_BASIC_BLOCK)

;; i.49_134 = i;

(insn 440 439 0 (set (reg:SI 220 [ i.49_134 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [1 i+0 S4 A64])) "../src/bnsolv.f":76 -1
     (nil))

;; _135 = (integer(kind=8)) i.49_134;

(insn 441 440 0 (set (reg:DI 221 [ _135 ])
        (sign_extend:DI (reg:SI 220 [ i.49_134 ]))) "../src/bnsolv.f":76 -1
     (nil))

;; _136 = stride.4_635 * _135;

(insn 442 441 0 (parallel [
            (set (reg:DI 222 [ _136 ])
                (mult:DI (reg:DI 665 [ stride.4_635 ])
                    (reg:DI 221 [ _135 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":76 -1
     (nil))

;; _137 = offset.5_642 + _136;

(insn 443 442 0 (parallel [
            (set (reg:DI 223 [ _137 ])
                (plus:DI (reg:DI 671 [ offset.5_642 ])
                    (reg:DI 222 [ _136 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":76 -1
     (nil))

;; _138 = (integer(kind=8)) kpiv_573;

(insn 444 443 445 (set (reg:SI 840)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 kpiv+0 S4 A32])) "../src/bnsolv.f":76 -1
     (nil))

(insn 445 444 0 (set (reg:DI 224 [ _138 ])
        (sign_extend:DI (reg:SI 840))) "../src/bnsolv.f":76 -1
     (nil))

;; _139 = stride.2_632 * _138;

(insn 446 445 0 (parallel [
            (set (reg:DI 225 [ _139 ])
                (mult:DI (reg:DI 663 [ stride.2_632 ])
                    (reg:DI 224 [ _138 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":76 -1
     (nil))

;; _140 = _137 + _139;

(insn 447 446 0 (parallel [
            (set (reg:DI 226 [ _140 ])
                (plus:DI (reg:DI 223 [ _137 ])
                    (reg:DI 225 [ _139 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":76 -1
     (nil))

;; _141 = (integer(kind=8)) kx_575;

(insn 448 447 449 (set (reg:SI 841)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [1 kx+0 S4 A32])) "../src/bnsolv.f":76 -1
     (nil))

(insn 449 448 0 (set (reg:DI 227 [ _141 ])
        (sign_extend:DI (reg:SI 841))) "../src/bnsolv.f":76 -1
     (nil))

;; _142 = _140 + _141;

(insn 450 449 0 (parallel [
            (set (reg:DI 228 [ _142 ])
                (plus:DI (reg:DI 226 [ _140 ])
                    (reg:DI 227 [ _141 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":76 -1
     (nil))
Applying pattern match.pd:84, generic-match.c:11356
Applying pattern match.pd:84, generic-match.c:11356
Applying pattern match.pd:84, generic-match.c:11356

;; _143 = *a_685(D)[_142];

(insn 451 450 452 (set (reg/f:DI 842)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -648 [0xfffffffffffffd78])) [10 a+0 S8 A64])) "../src/bnsolv.f":76 -1
     (nil))

(insn 452 451 0 (set (reg:SF 229 [ _143 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 228 [ _142 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 842)) [3 *a_685(D) S4 A32])) "../src/bnsolv.f":76 -1
     (nil))

;; pivot_710 = 1.0e+0 / _143;

(insn 453 452 454 (set (reg:SF 844)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC4") [flags 0x2]) [3  S4 A32])) "../src/bnsolv.f":76 -1
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))

(insn 454 453 455 (set (reg:SF 843)
        (div:SF (reg:SF 844)
            (reg:SF 229 [ _143 ]))) "../src/bnsolv.f":76 -1
     (nil))

(insn 455 454 0 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -136 [0xffffffffffffff78])) [3 pivot+0 S4 A32])
        (reg:SF 843)) "../src/bnsolv.f":76 -1
     (nil))

;; i.50_144 = i;

(insn 456 455 0 (set (reg:SI 230 [ i.50_144 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [1 i+0 S4 A64])) "../src/bnsolv.f":79 -1
     (nil))

;; _145 = (integer(kind=8)) i.50_144;

(insn 457 456 0 (set (reg:DI 231 [ _145 ])
        (sign_extend:DI (reg:SI 230 [ i.50_144 ]))) "../src/bnsolv.f":79 -1
     (nil))

;; _146 = stride.4_635 * _145;

(insn 458 457 0 (parallel [
            (set (reg:DI 232 [ _146 ])
                (mult:DI (reg:DI 665 [ stride.4_635 ])
                    (reg:DI 231 [ _145 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":79 -1
     (nil))

;; _147 = offset.5_642 + _146;

(insn 459 458 0 (parallel [
            (set (reg:DI 233 [ _147 ])
                (plus:DI (reg:DI 671 [ offset.5_642 ])
                    (reg:DI 232 [ _146 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":79 -1
     (nil))

;; _148 = (integer(kind=8)) kpiv_573;

(insn 460 459 461 (set (reg:SI 845)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 kpiv+0 S4 A32])) "../src/bnsolv.f":79 -1
     (nil))

(insn 461 460 0 (set (reg:DI 234 [ _148 ])
        (sign_extend:DI (reg:SI 845))) "../src/bnsolv.f":79 -1
     (nil))

;; _149 = stride.2_632 * _148;

(insn 462 461 0 (parallel [
            (set (reg:DI 235 [ _149 ])
                (mult:DI (reg:DI 663 [ stride.2_632 ])
                    (reg:DI 234 [ _148 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":79 -1
     (nil))

;; _150 = _147 + _149;

(insn 463 462 0 (parallel [
            (set (reg:DI 236 [ _150 ])
                (plus:DI (reg:DI 233 [ _147 ])
                    (reg:DI 235 [ _149 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":79 -1
     (nil))

;; _151 = (integer(kind=8)) kpiv_573;

(insn 464 463 465 (set (reg:SI 846)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 kpiv+0 S4 A32])) "../src/bnsolv.f":79 -1
     (nil))

(insn 465 464 0 (set (reg:DI 237 [ _151 ])
        (sign_extend:DI (reg:SI 846))) "../src/bnsolv.f":79 -1
     (nil))

;; _152 = _150 + _151;

(insn 466 465 0 (parallel [
            (set (reg:DI 238 [ _152 ])
                (plus:DI (reg:DI 236 [ _150 ])
                    (reg:DI 237 [ _151 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":79 -1
     (nil))

;; i.51_153 = i;

(insn 467 466 0 (set (reg:SI 239 [ i.51_153 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [1 i+0 S4 A64])) "../src/bnsolv.f":79 -1
     (nil))

;; _154 = (integer(kind=8)) i.51_153;

(insn 468 467 0 (set (reg:DI 240 [ _154 ])
        (sign_extend:DI (reg:SI 239 [ i.51_153 ]))) "../src/bnsolv.f":79 -1
     (nil))

;; _155 = stride.4_635 * _154;

(insn 469 468 0 (parallel [
            (set (reg:DI 241 [ _155 ])
                (mult:DI (reg:DI 665 [ stride.4_635 ])
                    (reg:DI 240 [ _154 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":79 -1
     (nil))

;; _156 = offset.5_642 + _155;

(insn 470 469 0 (parallel [
            (set (reg:DI 242 [ _156 ])
                (plus:DI (reg:DI 671 [ offset.5_642 ])
                    (reg:DI 241 [ _155 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":79 -1
     (nil))

;; _157 = (integer(kind=8)) kpiv_573;

(insn 471 470 472 (set (reg:SI 847)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 kpiv+0 S4 A32])) "../src/bnsolv.f":79 -1
     (nil))

(insn 472 471 0 (set (reg:DI 243 [ _157 ])
        (sign_extend:DI (reg:SI 847))) "../src/bnsolv.f":79 -1
     (nil))

;; _158 = stride.2_632 * _157;

(insn 473 472 0 (parallel [
            (set (reg:DI 244 [ _158 ])
                (mult:DI (reg:DI 663 [ stride.2_632 ])
                    (reg:DI 243 [ _157 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":79 -1
     (nil))

;; _159 = _156 + _158;

(insn 474 473 0 (parallel [
            (set (reg:DI 245 [ _159 ])
                (plus:DI (reg:DI 242 [ _156 ])
                    (reg:DI 244 [ _158 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":79 -1
     (nil))

;; _160 = (integer(kind=8)) kx_575;

(insn 475 474 476 (set (reg:SI 848)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [1 kx+0 S4 A32])) "../src/bnsolv.f":79 -1
     (nil))

(insn 476 475 0 (set (reg:DI 246 [ _160 ])
        (sign_extend:DI (reg:SI 848))) "../src/bnsolv.f":79 -1
     (nil))

;; _161 = _159 + _160;

(insn 477 476 0 (parallel [
            (set (reg:DI 247 [ _161 ])
                (plus:DI (reg:DI 245 [ _159 ])
                    (reg:DI 246 [ _160 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":79 -1
     (nil))
Applying pattern match.pd:84, generic-match.c:11356
Applying pattern match.pd:84, generic-match.c:11356
Applying pattern match.pd:84, generic-match.c:11356

;; _162 = *a_685(D)[_152];

(insn 478 477 479 (set (reg/f:DI 849)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -648 [0xfffffffffffffd78])) [10 a+0 S8 A64])) "../src/bnsolv.f":79 -1
     (nil))

(insn 479 478 0 (set (reg:SF 248 [ _162 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 238 [ _152 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 849)) [3 *a_685(D) S4 A32])) "../src/bnsolv.f":79 -1
     (nil))
Applying pattern match.pd:84, generic-match.c:11356
Applying pattern match.pd:84, generic-match.c:11356
Applying pattern match.pd:84, generic-match.c:11356

;; *a_685(D)[_161] = _162;

(insn 480 479 481 (set (reg/f:DI 850)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -648 [0xfffffffffffffd78])) [10 a+0 S8 A64])) "../src/bnsolv.f":79 -1
     (nil))

(insn 481 480 0 (set (mem:SF (plus:DI (mult:DI (reg:DI 247 [ _161 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 850)) [3 *a_685(D) S4 A32])
        (reg:SF 248 [ _162 ])) "../src/bnsolv.f":79 -1
     (nil))

;; _712 = kp1_701;

(insn 482 481 0 (set (reg:SI 708 [ _712 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -132 [0xffffffffffffff7c])) [1 kp1+0 S4 A32])) "../src/bnsolv.f":82 -1
     (nil))

;; _713 = *nb_615(D);

(insn 483 482 484 (set (reg/f:DI 851)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -680 [0xfffffffffffffd58])) [11 nb+0 S8 A64])) "../src/bnsolv.f":82 -1
     (nil))

(insn 484 483 0 (set (reg:SI 709 [ _713 ])
        (mem:SI (reg/f:DI 851) [1 *nb_615(D)+0 S4 A32])) "../src/bnsolv.f":82 -1
     (nil))

;; l_714 = _712;

(insn 485 484 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])
        (reg:SI 708 [ _712 ])) "../src/bnsolv.f":82 -1
     (nil))

;; Generating RTL for gimple basic block 27

;; _715 = l_579 > _713;

(insn 487 486 488 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])
            (reg:SI 709 [ _713 ]))) "../src/bnsolv.f":82 -1
     (nil))

(insn 488 487 0 (set (reg:QI 710 [ _715 ])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "../src/bnsolv.f":82 -1
     (nil))

;; if (_715 != 0)

(insn 489 488 490 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 710 [ _715 ])
            (const_int 0 [0]))) "../src/bnsolv.f":82 -1
     (nil))

(jump_insn 490 489 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "../src/bnsolv.f":82 -1
     (nil))

;; Generating RTL for gimple basic block 28

;; i.52_163 = i;

(insn 492 491 0 (set (reg:SI 249 [ i.52_163 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [1 i+0 S4 A64])) "../src/bnsolv.f":83 -1
     (nil))

;; _164 = (integer(kind=8)) i.52_163;

(insn 493 492 0 (set (reg:DI 250 [ _164 ])
        (sign_extend:DI (reg:SI 249 [ i.52_163 ]))) "../src/bnsolv.f":83 -1
     (nil))

;; _165 = stride.4_635 * _164;

(insn 494 493 0 (parallel [
            (set (reg:DI 251 [ _165 ])
                (mult:DI (reg:DI 665 [ stride.4_635 ])
                    (reg:DI 250 [ _164 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":83 -1
     (nil))

;; _166 = offset.5_642 + _165;

(insn 495 494 0 (parallel [
            (set (reg:DI 252 [ _166 ])
                (plus:DI (reg:DI 671 [ offset.5_642 ])
                    (reg:DI 251 [ _165 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":83 -1
     (nil))

;; _167 = (integer(kind=8)) l_579;

(insn 496 495 497 (set (reg:SI 852)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])) "../src/bnsolv.f":83 -1
     (nil))

(insn 497 496 0 (set (reg:DI 253 [ _167 ])
        (sign_extend:DI (reg:SI 852))) "../src/bnsolv.f":83 -1
     (nil))

;; _168 = stride.2_632 * _167;

(insn 498 497 0 (parallel [
            (set (reg:DI 254 [ _168 ])
                (mult:DI (reg:DI 663 [ stride.2_632 ])
                    (reg:DI 253 [ _167 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":83 -1
     (nil))

;; _169 = _166 + _168;

(insn 499 498 0 (parallel [
            (set (reg:DI 255 [ _169 ])
                (plus:DI (reg:DI 252 [ _166 ])
                    (reg:DI 254 [ _168 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":83 -1
     (nil))

;; _170 = (integer(kind=8)) kx_575;

(insn 500 499 501 (set (reg:SI 853)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [1 kx+0 S4 A32])) "../src/bnsolv.f":83 -1
     (nil))

(insn 501 500 0 (set (reg:DI 256 [ _170 ])
        (sign_extend:DI (reg:SI 853))) "../src/bnsolv.f":83 -1
     (nil))

;; _171 = _169 + _170;

(insn 502 501 0 (parallel [
            (set (reg:DI 257 [ _171 ])
                (plus:DI (reg:DI 255 [ _169 ])
                    (reg:DI 256 [ _170 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":83 -1
     (nil))
Applying pattern match.pd:84, generic-match.c:11356
Applying pattern match.pd:84, generic-match.c:11356
Applying pattern match.pd:84, generic-match.c:11356

;; _172 = *a_685(D)[_171];

(insn 503 502 504 (set (reg/f:DI 854)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -648 [0xfffffffffffffd78])) [10 a+0 S8 A64])) "../src/bnsolv.f":83 -1
     (nil))

(insn 504 503 0 (set (reg:SF 258 [ _172 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 257 [ _171 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 854)) [3 *a_685(D) S4 A32])) "../src/bnsolv.f":83 -1
     (nil))

;; temp_716 = pivot_710 * _172;

(insn 505 504 506 (set (reg:SF 856)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -136 [0xffffffffffffff78])) [3 pivot+0 S4 A32])) "../src/bnsolv.f":83 -1
     (nil))

(insn 506 505 507 (set (reg:SF 855)
        (mult:SF (reg:SF 856)
            (reg:SF 258 [ _172 ]))) "../src/bnsolv.f":83 -1
     (nil))

(insn 507 506 0 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -140 [0xffffffffffffff74])) [3 temp+0 S4 A32])
        (reg:SF 855)) "../src/bnsolv.f":83 -1
     (nil))

;; i.53_173 = i;

(insn 508 507 0 (set (reg:SI 259 [ i.53_173 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [1 i+0 S4 A64])) "../src/bnsolv.f":84 -1
     (nil))

;; _174 = (integer(kind=8)) i.53_173;

(insn 509 508 0 (set (reg:DI 260 [ _174 ])
        (sign_extend:DI (reg:SI 259 [ i.53_173 ]))) "../src/bnsolv.f":84 -1
     (nil))

;; _175 = stride.4_635 * _174;

(insn 510 509 0 (parallel [
            (set (reg:DI 261 [ _175 ])
                (mult:DI (reg:DI 665 [ stride.4_635 ])
                    (reg:DI 260 [ _174 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":84 -1
     (nil))

;; _176 = offset.5_642 + _175;

(insn 511 510 0 (parallel [
            (set (reg:DI 262 [ _176 ])
                (plus:DI (reg:DI 671 [ offset.5_642 ])
                    (reg:DI 261 [ _175 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":84 -1
     (nil))

;; _177 = (integer(kind=8)) l_579;

(insn 512 511 513 (set (reg:SI 857)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])) "../src/bnsolv.f":84 -1
     (nil))

(insn 513 512 0 (set (reg:DI 263 [ _177 ])
        (sign_extend:DI (reg:SI 857))) "../src/bnsolv.f":84 -1
     (nil))

;; _178 = stride.2_632 * _177;

(insn 514 513 0 (parallel [
            (set (reg:DI 264 [ _178 ])
                (mult:DI (reg:DI 663 [ stride.2_632 ])
                    (reg:DI 263 [ _177 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":84 -1
     (nil))

;; _179 = _176 + _178;

(insn 515 514 0 (parallel [
            (set (reg:DI 265 [ _179 ])
                (plus:DI (reg:DI 262 [ _176 ])
                    (reg:DI 264 [ _178 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":84 -1
     (nil))

;; _180 = (integer(kind=8)) kpiv_573;

(insn 516 515 517 (set (reg:SI 858)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 kpiv+0 S4 A32])) "../src/bnsolv.f":84 -1
     (nil))

(insn 517 516 0 (set (reg:DI 266 [ _180 ])
        (sign_extend:DI (reg:SI 858))) "../src/bnsolv.f":84 -1
     (nil))

;; _181 = _179 + _180;

(insn 518 517 0 (parallel [
            (set (reg:DI 267 [ _181 ])
                (plus:DI (reg:DI 265 [ _179 ])
                    (reg:DI 266 [ _180 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":84 -1
     (nil))

;; i.54_182 = i;

(insn 519 518 0 (set (reg:SI 268 [ i.54_182 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [1 i+0 S4 A64])) "../src/bnsolv.f":84 -1
     (nil))

;; _183 = (integer(kind=8)) i.54_182;

(insn 520 519 0 (set (reg:DI 269 [ _183 ])
        (sign_extend:DI (reg:SI 268 [ i.54_182 ]))) "../src/bnsolv.f":84 -1
     (nil))

;; _184 = stride.4_635 * _183;

(insn 521 520 0 (parallel [
            (set (reg:DI 270 [ _184 ])
                (mult:DI (reg:DI 665 [ stride.4_635 ])
                    (reg:DI 269 [ _183 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":84 -1
     (nil))

;; _185 = offset.5_642 + _184;

(insn 522 521 0 (parallel [
            (set (reg:DI 271 [ _185 ])
                (plus:DI (reg:DI 671 [ offset.5_642 ])
                    (reg:DI 270 [ _184 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":84 -1
     (nil))

;; _186 = (integer(kind=8)) l_579;

(insn 523 522 524 (set (reg:SI 859)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])) "../src/bnsolv.f":84 -1
     (nil))

(insn 524 523 0 (set (reg:DI 272 [ _186 ])
        (sign_extend:DI (reg:SI 859))) "../src/bnsolv.f":84 -1
     (nil))

;; _187 = stride.2_632 * _186;

(insn 525 524 0 (parallel [
            (set (reg:DI 273 [ _187 ])
                (mult:DI (reg:DI 663 [ stride.2_632 ])
                    (reg:DI 272 [ _186 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":84 -1
     (nil))

;; _188 = _185 + _187;

(insn 526 525 0 (parallel [
            (set (reg:DI 274 [ _188 ])
                (plus:DI (reg:DI 271 [ _185 ])
                    (reg:DI 273 [ _187 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":84 -1
     (nil))

;; _189 = (integer(kind=8)) kx_575;

(insn 527 526 528 (set (reg:SI 860)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [1 kx+0 S4 A32])) "../src/bnsolv.f":84 -1
     (nil))

(insn 528 527 0 (set (reg:DI 275 [ _189 ])
        (sign_extend:DI (reg:SI 860))) "../src/bnsolv.f":84 -1
     (nil))

;; _190 = _188 + _189;

(insn 529 528 0 (parallel [
            (set (reg:DI 276 [ _190 ])
                (plus:DI (reg:DI 274 [ _188 ])
                    (reg:DI 275 [ _189 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":84 -1
     (nil))
Applying pattern match.pd:84, generic-match.c:11356
Applying pattern match.pd:84, generic-match.c:11356
Applying pattern match.pd:84, generic-match.c:11356

;; _191 = *a_685(D)[_181];

(insn 530 529 531 (set (reg/f:DI 861)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -648 [0xfffffffffffffd78])) [10 a+0 S8 A64])) "../src/bnsolv.f":84 -1
     (nil))

(insn 531 530 0 (set (reg:SF 277 [ _191 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 267 [ _181 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 861)) [3 *a_685(D) S4 A32])) "../src/bnsolv.f":84 -1
     (nil))
Applying pattern match.pd:84, generic-match.c:11356
Applying pattern match.pd:84, generic-match.c:11356
Applying pattern match.pd:84, generic-match.c:11356

;; *a_685(D)[_190] = _191;

(insn 532 531 533 (set (reg/f:DI 862)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -648 [0xfffffffffffffd78])) [10 a+0 S8 A64])) "../src/bnsolv.f":84 -1
     (nil))

(insn 533 532 0 (set (mem:SF (plus:DI (mult:DI (reg:DI 276 [ _190 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 862)) [3 *a_685(D) S4 A32])
        (reg:SF 277 [ _191 ])) "../src/bnsolv.f":84 -1
     (nil))

;; i.55_192 = i;

(insn 534 533 0 (set (reg:SI 278 [ i.55_192 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [1 i+0 S4 A64])) "../src/bnsolv.f":85 -1
     (nil))

;; _193 = (integer(kind=8)) i.55_192;

(insn 535 534 0 (set (reg:DI 279 [ _193 ])
        (sign_extend:DI (reg:SI 278 [ i.55_192 ]))) "../src/bnsolv.f":85 -1
     (nil))

;; _194 = stride.4_635 * _193;

(insn 536 535 0 (parallel [
            (set (reg:DI 280 [ _194 ])
                (mult:DI (reg:DI 665 [ stride.4_635 ])
                    (reg:DI 279 [ _193 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":85 -1
     (nil))

;; _195 = offset.5_642 + _194;

(insn 537 536 0 (parallel [
            (set (reg:DI 281 [ _195 ])
                (plus:DI (reg:DI 671 [ offset.5_642 ])
                    (reg:DI 280 [ _194 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":85 -1
     (nil))

;; _196 = (integer(kind=8)) l_579;

(insn 538 537 539 (set (reg:SI 863)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])) "../src/bnsolv.f":85 -1
     (nil))

(insn 539 538 0 (set (reg:DI 282 [ _196 ])
        (sign_extend:DI (reg:SI 863))) "../src/bnsolv.f":85 -1
     (nil))

;; _197 = stride.2_632 * _196;

(insn 540 539 0 (parallel [
            (set (reg:DI 283 [ _197 ])
                (mult:DI (reg:DI 663 [ stride.2_632 ])
                    (reg:DI 282 [ _196 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":85 -1
     (nil))

;; _198 = _195 + _197;

(insn 541 540 0 (parallel [
            (set (reg:DI 284 [ _198 ])
                (plus:DI (reg:DI 281 [ _195 ])
                    (reg:DI 283 [ _197 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":85 -1
     (nil))

;; _199 = (integer(kind=8)) kpiv_573;

(insn 542 541 543 (set (reg:SI 864)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 kpiv+0 S4 A32])) "../src/bnsolv.f":85 -1
     (nil))

(insn 543 542 0 (set (reg:DI 285 [ _199 ])
        (sign_extend:DI (reg:SI 864))) "../src/bnsolv.f":85 -1
     (nil))

;; _200 = _198 + _199;

(insn 544 543 0 (parallel [
            (set (reg:DI 286 [ _200 ])
                (plus:DI (reg:DI 284 [ _198 ])
                    (reg:DI 285 [ _199 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":85 -1
     (nil))
Applying pattern match.pd:84, generic-match.c:11356
Applying pattern match.pd:84, generic-match.c:11356
Applying pattern match.pd:84, generic-match.c:11356

;; *a_685(D)[_200] = temp_716;

(insn 545 544 546 (set (reg/f:DI 865)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -648 [0xfffffffffffffd78])) [10 a+0 S8 A64])) "../src/bnsolv.f":85 -1
     (nil))

(insn 546 545 547 (set (reg:SF 866)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -140 [0xffffffffffffff74])) [3 temp+0 S4 A32])) "../src/bnsolv.f":85 -1
     (nil))

(insn 547 546 0 (set (mem:SF (plus:DI (mult:DI (reg:DI 286 [ _200 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 865)) [3 *a_685(D) S4 A32])
        (reg:SF 866)) "../src/bnsolv.f":85 -1
     (nil))

;; l_719 = l_579 + 1;

(insn 548 547 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":82 -1
     (nil))

;; Generating RTL for gimple basic block 29

;; 

(code_label 552 551 553 17 (nil) [0 uses])

(note 553 552 0 NOTE_INSN_BASIC_BLOCK)

;; _720 = *nb_615(D);

(insn 554 553 555 (set (reg/f:DI 867)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -680 [0xfffffffffffffd58])) [11 nb+0 S8 A64])) "../src/bnsolv.f":88 -1
     (nil))

(insn 555 554 0 (set (reg:SI 711 [ _720 ])
        (mem:SI (reg/f:DI 867) [1 *nb_615(D)+0 S4 A32])) "../src/bnsolv.f":88 -1
     (nil))

;; l_721 = 1;

(insn 556 555 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])
        (const_int 1 [0x1])) "../src/bnsolv.f":88 -1
     (nil))

;; Generating RTL for gimple basic block 30

;; _722 = l_580 > _720;

(insn 558 557 559 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])
            (reg:SI 711 [ _720 ]))) "../src/bnsolv.f":88 -1
     (nil))

(insn 559 558 0 (set (reg:QI 712 [ _722 ])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "../src/bnsolv.f":88 -1
     (nil))

;; if (_722 != 0)

(insn 560 559 561 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 712 [ _722 ])
            (const_int 0 [0]))) "../src/bnsolv.f":88 -1
     (nil))

(jump_insn 561 560 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "../src/bnsolv.f":88 -1
     (nil))

;; Generating RTL for gimple basic block 31

;; i.56_201 = i;

(insn 563 562 0 (set (reg:SI 287 [ i.56_201 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [1 i+0 S4 A64])) "../src/bnsolv.f":89 -1
     (nil))

;; _202 = (integer(kind=8)) i.56_201;

(insn 564 563 0 (set (reg:DI 288 [ _202 ])
        (sign_extend:DI (reg:SI 287 [ i.56_201 ]))) "../src/bnsolv.f":89 -1
     (nil))

;; _203 = stride.18_648 * _202;

(insn 565 564 0 (parallel [
            (set (reg:DI 289 [ _203 ])
                (mult:DI (reg:DI 675 [ stride.18_648 ])
                    (reg:DI 288 [ _202 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":89 -1
     (nil))

;; _204 = offset.19_655 + _203;

(insn 566 565 0 (parallel [
            (set (reg:DI 290 [ _204 ])
                (plus:DI (reg:DI 681 [ offset.19_655 ])
                    (reg:DI 289 [ _203 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":89 -1
     (nil))

;; _205 = (integer(kind=8)) l_580;

(insn 567 566 568 (set (reg:SI 868)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])) "../src/bnsolv.f":89 -1
     (nil))

(insn 568 567 0 (set (reg:DI 291 [ _205 ])
        (sign_extend:DI (reg:SI 868))) "../src/bnsolv.f":89 -1
     (nil))

;; _206 = stride.16_645 * _205;

(insn 569 568 0 (parallel [
            (set (reg:DI 292 [ _206 ])
                (mult:DI (reg:DI 673 [ stride.16_645 ])
                    (reg:DI 291 [ _205 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":89 -1
     (nil))

;; _207 = _204 + _206;

(insn 570 569 0 (parallel [
            (set (reg:DI 293 [ _207 ])
                (plus:DI (reg:DI 290 [ _204 ])
                    (reg:DI 292 [ _206 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":89 -1
     (nil))

;; _208 = (integer(kind=8)) kx_575;

(insn 571 570 572 (set (reg:SI 869)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [1 kx+0 S4 A32])) "../src/bnsolv.f":89 -1
     (nil))

(insn 572 571 0 (set (reg:DI 294 [ _208 ])
        (sign_extend:DI (reg:SI 869))) "../src/bnsolv.f":89 -1
     (nil))

;; _209 = _207 + _208;

(insn 573 572 0 (parallel [
            (set (reg:DI 295 [ _209 ])
                (plus:DI (reg:DI 293 [ _207 ])
                    (reg:DI 294 [ _208 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":89 -1
     (nil))
Applying pattern match.pd:84, generic-match.c:11356
Applying pattern match.pd:84, generic-match.c:11356
Applying pattern match.pd:84, generic-match.c:11356

;; _210 = *c_686(D)[_209];

(insn 574 573 575 (set (reg/f:DI 870)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -664 [0xfffffffffffffd68])) [10 c+0 S8 A64])) "../src/bnsolv.f":89 -1
     (nil))

(insn 575 574 0 (set (reg:SF 296 [ _210 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 295 [ _209 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 870)) [3 *c_686(D) S4 A32])) "../src/bnsolv.f":89 -1
     (nil))

;; temp_723 = pivot_710 * _210;

(insn 576 575 577 (set (reg:SF 872)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -136 [0xffffffffffffff78])) [3 pivot+0 S4 A32])) "../src/bnsolv.f":89 -1
     (nil))

(insn 577 576 578 (set (reg:SF 871)
        (mult:SF (reg:SF 872)
            (reg:SF 296 [ _210 ]))) "../src/bnsolv.f":89 -1
     (nil))

(insn 578 577 0 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -140 [0xffffffffffffff74])) [3 temp+0 S4 A32])
        (reg:SF 871)) "../src/bnsolv.f":89 -1
     (nil))

;; i.57_211 = i;

(insn 579 578 0 (set (reg:SI 297 [ i.57_211 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [1 i+0 S4 A64])) "../src/bnsolv.f":90 -1
     (nil))

;; _212 = (integer(kind=8)) i.57_211;

(insn 580 579 0 (set (reg:DI 298 [ _212 ])
        (sign_extend:DI (reg:SI 297 [ i.57_211 ]))) "../src/bnsolv.f":90 -1
     (nil))

;; _213 = stride.18_648 * _212;

(insn 581 580 0 (parallel [
            (set (reg:DI 299 [ _213 ])
                (mult:DI (reg:DI 675 [ stride.18_648 ])
                    (reg:DI 298 [ _212 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":90 -1
     (nil))

;; _214 = offset.19_655 + _213;

(insn 582 581 0 (parallel [
            (set (reg:DI 300 [ _214 ])
                (plus:DI (reg:DI 681 [ offset.19_655 ])
                    (reg:DI 299 [ _213 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":90 -1
     (nil))

;; _215 = (integer(kind=8)) l_580;

(insn 583 582 584 (set (reg:SI 873)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])) "../src/bnsolv.f":90 -1
     (nil))

(insn 584 583 0 (set (reg:DI 301 [ _215 ])
        (sign_extend:DI (reg:SI 873))) "../src/bnsolv.f":90 -1
     (nil))

;; _216 = stride.16_645 * _215;

(insn 585 584 0 (parallel [
            (set (reg:DI 302 [ _216 ])
                (mult:DI (reg:DI 673 [ stride.16_645 ])
                    (reg:DI 301 [ _215 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":90 -1
     (nil))

;; _217 = _214 + _216;

(insn 586 585 0 (parallel [
            (set (reg:DI 303 [ _217 ])
                (plus:DI (reg:DI 300 [ _214 ])
                    (reg:DI 302 [ _216 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":90 -1
     (nil))

;; _218 = (integer(kind=8)) kpiv_573;

(insn 587 586 588 (set (reg:SI 874)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 kpiv+0 S4 A32])) "../src/bnsolv.f":90 -1
     (nil))

(insn 588 587 0 (set (reg:DI 304 [ _218 ])
        (sign_extend:DI (reg:SI 874))) "../src/bnsolv.f":90 -1
     (nil))

;; _219 = _217 + _218;

(insn 589 588 0 (parallel [
            (set (reg:DI 305 [ _219 ])
                (plus:DI (reg:DI 303 [ _217 ])
                    (reg:DI 304 [ _218 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":90 -1
     (nil))

;; i.58_220 = i;

(insn 590 589 0 (set (reg:SI 306 [ i.58_220 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [1 i+0 S4 A64])) "../src/bnsolv.f":90 -1
     (nil))

;; _221 = (integer(kind=8)) i.58_220;

(insn 591 590 0 (set (reg:DI 307 [ _221 ])
        (sign_extend:DI (reg:SI 306 [ i.58_220 ]))) "../src/bnsolv.f":90 -1
     (nil))

;; _222 = stride.18_648 * _221;

(insn 592 591 0 (parallel [
            (set (reg:DI 308 [ _222 ])
                (mult:DI (reg:DI 675 [ stride.18_648 ])
                    (reg:DI 307 [ _221 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":90 -1
     (nil))

;; _223 = offset.19_655 + _222;

(insn 593 592 0 (parallel [
            (set (reg:DI 309 [ _223 ])
                (plus:DI (reg:DI 681 [ offset.19_655 ])
                    (reg:DI 308 [ _222 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":90 -1
     (nil))

;; _224 = (integer(kind=8)) l_580;

(insn 594 593 595 (set (reg:SI 875)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])) "../src/bnsolv.f":90 -1
     (nil))

(insn 595 594 0 (set (reg:DI 310 [ _224 ])
        (sign_extend:DI (reg:SI 875))) "../src/bnsolv.f":90 -1
     (nil))

;; _225 = stride.16_645 * _224;

(insn 596 595 0 (parallel [
            (set (reg:DI 311 [ _225 ])
                (mult:DI (reg:DI 673 [ stride.16_645 ])
                    (reg:DI 310 [ _224 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":90 -1
     (nil))

;; _226 = _223 + _225;

(insn 597 596 0 (parallel [
            (set (reg:DI 312 [ _226 ])
                (plus:DI (reg:DI 309 [ _223 ])
                    (reg:DI 311 [ _225 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":90 -1
     (nil))

;; _227 = (integer(kind=8)) kx_575;

(insn 598 597 599 (set (reg:SI 876)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [1 kx+0 S4 A32])) "../src/bnsolv.f":90 -1
     (nil))

(insn 599 598 0 (set (reg:DI 313 [ _227 ])
        (sign_extend:DI (reg:SI 876))) "../src/bnsolv.f":90 -1
     (nil))

;; _228 = _226 + _227;

(insn 600 599 0 (parallel [
            (set (reg:DI 314 [ _228 ])
                (plus:DI (reg:DI 312 [ _226 ])
                    (reg:DI 313 [ _227 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":90 -1
     (nil))
Applying pattern match.pd:84, generic-match.c:11356
Applying pattern match.pd:84, generic-match.c:11356
Applying pattern match.pd:84, generic-match.c:11356

;; _229 = *c_686(D)[_219];

(insn 601 600 602 (set (reg/f:DI 877)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -664 [0xfffffffffffffd68])) [10 c+0 S8 A64])) "../src/bnsolv.f":90 -1
     (nil))

(insn 602 601 0 (set (reg:SF 315 [ _229 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 305 [ _219 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 877)) [3 *c_686(D) S4 A32])) "../src/bnsolv.f":90 -1
     (nil))
Applying pattern match.pd:84, generic-match.c:11356
Applying pattern match.pd:84, generic-match.c:11356
Applying pattern match.pd:84, generic-match.c:11356

;; *c_686(D)[_228] = _229;

(insn 603 602 604 (set (reg/f:DI 878)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -664 [0xfffffffffffffd68])) [10 c+0 S8 A64])) "../src/bnsolv.f":90 -1
     (nil))

(insn 604 603 0 (set (mem:SF (plus:DI (mult:DI (reg:DI 314 [ _228 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 878)) [3 *c_686(D) S4 A32])
        (reg:SF 315 [ _229 ])) "../src/bnsolv.f":90 -1
     (nil))

;; i.59_230 = i;

(insn 605 604 0 (set (reg:SI 316 [ i.59_230 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [1 i+0 S4 A64])) "../src/bnsolv.f":91 -1
     (nil))

;; _231 = (integer(kind=8)) i.59_230;

(insn 606 605 0 (set (reg:DI 317 [ _231 ])
        (sign_extend:DI (reg:SI 316 [ i.59_230 ]))) "../src/bnsolv.f":91 -1
     (nil))

;; _232 = stride.18_648 * _231;

(insn 607 606 0 (parallel [
            (set (reg:DI 318 [ _232 ])
                (mult:DI (reg:DI 675 [ stride.18_648 ])
                    (reg:DI 317 [ _231 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":91 -1
     (nil))

;; _233 = offset.19_655 + _232;

(insn 608 607 0 (parallel [
            (set (reg:DI 319 [ _233 ])
                (plus:DI (reg:DI 681 [ offset.19_655 ])
                    (reg:DI 318 [ _232 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":91 -1
     (nil))

;; _234 = (integer(kind=8)) l_580;

(insn 609 608 610 (set (reg:SI 879)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])) "../src/bnsolv.f":91 -1
     (nil))

(insn 610 609 0 (set (reg:DI 320 [ _234 ])
        (sign_extend:DI (reg:SI 879))) "../src/bnsolv.f":91 -1
     (nil))

;; _235 = stride.16_645 * _234;

(insn 611 610 0 (parallel [
            (set (reg:DI 321 [ _235 ])
                (mult:DI (reg:DI 673 [ stride.16_645 ])
                    (reg:DI 320 [ _234 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":91 -1
     (nil))

;; _236 = _233 + _235;

(insn 612 611 0 (parallel [
            (set (reg:DI 322 [ _236 ])
                (plus:DI (reg:DI 319 [ _233 ])
                    (reg:DI 321 [ _235 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":91 -1
     (nil))

;; _237 = (integer(kind=8)) kpiv_573;

(insn 613 612 614 (set (reg:SI 880)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 kpiv+0 S4 A32])) "../src/bnsolv.f":91 -1
     (nil))

(insn 614 613 0 (set (reg:DI 323 [ _237 ])
        (sign_extend:DI (reg:SI 880))) "../src/bnsolv.f":91 -1
     (nil))

;; _238 = _236 + _237;

(insn 615 614 0 (parallel [
            (set (reg:DI 324 [ _238 ])
                (plus:DI (reg:DI 322 [ _236 ])
                    (reg:DI 323 [ _237 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":91 -1
     (nil))
Applying pattern match.pd:84, generic-match.c:11356
Applying pattern match.pd:84, generic-match.c:11356
Applying pattern match.pd:84, generic-match.c:11356

;; *c_686(D)[_238] = temp_723;

(insn 616 615 617 (set (reg/f:DI 881)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -664 [0xfffffffffffffd68])) [10 c+0 S8 A64])) "../src/bnsolv.f":91 -1
     (nil))

(insn 617 616 618 (set (reg:SF 882)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -140 [0xffffffffffffff74])) [3 temp+0 S4 A32])) "../src/bnsolv.f":91 -1
     (nil))

(insn 618 617 0 (set (mem:SF (plus:DI (mult:DI (reg:DI 324 [ _238 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 881)) [3 *c_686(D) S4 A32])
        (reg:SF 882)) "../src/bnsolv.f":91 -1
     (nil))

;; l_726 = l_580 + 1;

(insn 619 618 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":88 -1
     (nil))

;; Generating RTL for gimple basic block 32

;; 

(code_label 623 622 624 19 (nil) [0 uses])

(note 624 623 0 NOTE_INSN_BASIC_BLOCK)

;; _727 = *nrhs_689(D);

(insn 625 624 626 (set (reg/f:DI 883)
        (mem/f/c:DI (reg/f:DI 81 virtual-incoming-args) [11 nrhs+0 S8 A64])) "../src/bnsolv.f":94 -1
     (nil))

(insn 626 625 0 (set (reg:SI 713 [ _727 ])
        (mem:SI (reg/f:DI 883) [1 *nrhs_689(D)+0 S4 A32])) "../src/bnsolv.f":94 -1
     (nil))

;; l_728 = 1;

(insn 627 626 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])
        (const_int 1 [0x1])) "../src/bnsolv.f":94 -1
     (nil))

;; Generating RTL for gimple basic block 33

;; _729 = l_581 > _727;

(insn 629 628 630 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])
            (reg:SI 713 [ _727 ]))) "../src/bnsolv.f":94 -1
     (nil))

(insn 630 629 0 (set (reg:QI 714 [ _729 ])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "../src/bnsolv.f":94 -1
     (nil))

;; if (_729 != 0)

(insn 631 630 632 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 714 [ _729 ])
            (const_int 0 [0]))) "../src/bnsolv.f":94 -1
     (nil))

(jump_insn 632 631 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "../src/bnsolv.f":94 -1
     (nil))

;; Generating RTL for gimple basic block 34

;; i.60_239 = i;

(insn 634 633 0 (set (reg:SI 325 [ i.60_239 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [1 i+0 S4 A64])) "../src/bnsolv.f":95 -1
     (nil))

;; _240 = (integer(kind=8)) i.60_239;

(insn 635 634 0 (set (reg:DI 326 [ _240 ])
        (sign_extend:DI (reg:SI 325 [ i.60_239 ]))) "../src/bnsolv.f":95 -1
     (nil))

;; _241 = stride.25_662 * _240;

(insn 636 635 0 (parallel [
            (set (reg:DI 327 [ _241 ])
                (mult:DI (reg:DI 685 [ stride.25_662 ])
                    (reg:DI 326 [ _240 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":95 -1
     (nil))

;; _242 = offset.26_669 + _241;

(insn 637 636 0 (parallel [
            (set (reg:DI 328 [ _242 ])
                (plus:DI (reg:DI 691 [ offset.26_669 ])
                    (reg:DI 327 [ _241 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":95 -1
     (nil))

;; _243 = (integer(kind=8)) l_581;

(insn 638 637 639 (set (reg:SI 884)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])) "../src/bnsolv.f":95 -1
     (nil))

(insn 639 638 0 (set (reg:DI 329 [ _243 ])
        (sign_extend:DI (reg:SI 884))) "../src/bnsolv.f":95 -1
     (nil))

;; _244 = stride.23_658 * _243;

(insn 640 639 0 (parallel [
            (set (reg:DI 330 [ _244 ])
                (mult:DI (reg:DI 683 [ stride.23_658 ])
                    (reg:DI 329 [ _243 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":95 -1
     (nil))

;; _245 = _242 + _244;

(insn 641 640 0 (parallel [
            (set (reg:DI 331 [ _245 ])
                (plus:DI (reg:DI 328 [ _242 ])
                    (reg:DI 330 [ _244 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":95 -1
     (nil))

;; _246 = (integer(kind=8)) kx_575;

(insn 642 641 643 (set (reg:SI 885)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [1 kx+0 S4 A32])) "../src/bnsolv.f":95 -1
     (nil))

(insn 643 642 0 (set (reg:DI 332 [ _246 ])
        (sign_extend:DI (reg:SI 885))) "../src/bnsolv.f":95 -1
     (nil))

;; _247 = _245 + _246;

(insn 644 643 0 (parallel [
            (set (reg:DI 333 [ _247 ])
                (plus:DI (reg:DI 331 [ _245 ])
                    (reg:DI 332 [ _246 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":95 -1
     (nil))
Applying pattern match.pd:84, generic-match.c:11356
Applying pattern match.pd:84, generic-match.c:11356
Applying pattern match.pd:84, generic-match.c:11356

;; _248 = *r_693(D)[_247];

(insn 645 644 646 (set (reg/f:DI 886)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -672 [0xfffffffffffffd60])) [10 r+0 S8 A64])) "../src/bnsolv.f":95 -1
     (nil))

(insn 646 645 0 (set (reg:SF 334 [ _248 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 333 [ _247 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 886)) [3 *r_693(D) S4 A32])) "../src/bnsolv.f":95 -1
     (nil))

;; temp_730 = pivot_710 * _248;

(insn 647 646 648 (set (reg:SF 888)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -136 [0xffffffffffffff78])) [3 pivot+0 S4 A32])) "../src/bnsolv.f":95 -1
     (nil))

(insn 648 647 649 (set (reg:SF 887)
        (mult:SF (reg:SF 888)
            (reg:SF 334 [ _248 ]))) "../src/bnsolv.f":95 -1
     (nil))

(insn 649 648 0 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -140 [0xffffffffffffff74])) [3 temp+0 S4 A32])
        (reg:SF 887)) "../src/bnsolv.f":95 -1
     (nil))

;; i.61_249 = i;

(insn 650 649 0 (set (reg:SI 335 [ i.61_249 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [1 i+0 S4 A64])) "../src/bnsolv.f":96 -1
     (nil))

;; _250 = (integer(kind=8)) i.61_249;

(insn 651 650 0 (set (reg:DI 336 [ _250 ])
        (sign_extend:DI (reg:SI 335 [ i.61_249 ]))) "../src/bnsolv.f":96 -1
     (nil))

;; _251 = stride.25_662 * _250;

(insn 652 651 0 (parallel [
            (set (reg:DI 337 [ _251 ])
                (mult:DI (reg:DI 685 [ stride.25_662 ])
                    (reg:DI 336 [ _250 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":96 -1
     (nil))

;; _252 = offset.26_669 + _251;

(insn 653 652 0 (parallel [
            (set (reg:DI 338 [ _252 ])
                (plus:DI (reg:DI 691 [ offset.26_669 ])
                    (reg:DI 337 [ _251 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":96 -1
     (nil))

;; _253 = (integer(kind=8)) l_581;

(insn 654 653 655 (set (reg:SI 889)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])) "../src/bnsolv.f":96 -1
     (nil))

(insn 655 654 0 (set (reg:DI 339 [ _253 ])
        (sign_extend:DI (reg:SI 889))) "../src/bnsolv.f":96 -1
     (nil))

;; _254 = stride.23_658 * _253;

(insn 656 655 0 (parallel [
            (set (reg:DI 340 [ _254 ])
                (mult:DI (reg:DI 683 [ stride.23_658 ])
                    (reg:DI 339 [ _253 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":96 -1
     (nil))

;; _255 = _252 + _254;

(insn 657 656 0 (parallel [
            (set (reg:DI 341 [ _255 ])
                (plus:DI (reg:DI 338 [ _252 ])
                    (reg:DI 340 [ _254 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":96 -1
     (nil))

;; _256 = (integer(kind=8)) kpiv_573;

(insn 658 657 659 (set (reg:SI 890)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 kpiv+0 S4 A32])) "../src/bnsolv.f":96 -1
     (nil))

(insn 659 658 0 (set (reg:DI 342 [ _256 ])
        (sign_extend:DI (reg:SI 890))) "../src/bnsolv.f":96 -1
     (nil))

;; _257 = _255 + _256;

(insn 660 659 0 (parallel [
            (set (reg:DI 343 [ _257 ])
                (plus:DI (reg:DI 341 [ _255 ])
                    (reg:DI 342 [ _256 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":96 -1
     (nil))

;; i.62_258 = i;

(insn 661 660 0 (set (reg:SI 344 [ i.62_258 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [1 i+0 S4 A64])) "../src/bnsolv.f":96 -1
     (nil))

;; _259 = (integer(kind=8)) i.62_258;

(insn 662 661 0 (set (reg:DI 345 [ _259 ])
        (sign_extend:DI (reg:SI 344 [ i.62_258 ]))) "../src/bnsolv.f":96 -1
     (nil))

;; _260 = stride.25_662 * _259;

(insn 663 662 0 (parallel [
            (set (reg:DI 346 [ _260 ])
                (mult:DI (reg:DI 685 [ stride.25_662 ])
                    (reg:DI 345 [ _259 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":96 -1
     (nil))

;; _261 = offset.26_669 + _260;

(insn 664 663 0 (parallel [
            (set (reg:DI 347 [ _261 ])
                (plus:DI (reg:DI 691 [ offset.26_669 ])
                    (reg:DI 346 [ _260 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":96 -1
     (nil))

;; _262 = (integer(kind=8)) l_581;

(insn 665 664 666 (set (reg:SI 891)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])) "../src/bnsolv.f":96 -1
     (nil))

(insn 666 665 0 (set (reg:DI 348 [ _262 ])
        (sign_extend:DI (reg:SI 891))) "../src/bnsolv.f":96 -1
     (nil))

;; _263 = stride.23_658 * _262;

(insn 667 666 0 (parallel [
            (set (reg:DI 349 [ _263 ])
                (mult:DI (reg:DI 683 [ stride.23_658 ])
                    (reg:DI 348 [ _262 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":96 -1
     (nil))

;; _264 = _261 + _263;

(insn 668 667 0 (parallel [
            (set (reg:DI 350 [ _264 ])
                (plus:DI (reg:DI 347 [ _261 ])
                    (reg:DI 349 [ _263 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":96 -1
     (nil))

;; _265 = (integer(kind=8)) kx_575;

(insn 669 668 670 (set (reg:SI 892)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [1 kx+0 S4 A32])) "../src/bnsolv.f":96 -1
     (nil))

(insn 670 669 0 (set (reg:DI 351 [ _265 ])
        (sign_extend:DI (reg:SI 892))) "../src/bnsolv.f":96 -1
     (nil))

;; _266 = _264 + _265;

(insn 671 670 0 (parallel [
            (set (reg:DI 352 [ _266 ])
                (plus:DI (reg:DI 350 [ _264 ])
                    (reg:DI 351 [ _265 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":96 -1
     (nil))
Applying pattern match.pd:84, generic-match.c:11356
Applying pattern match.pd:84, generic-match.c:11356
Applying pattern match.pd:84, generic-match.c:11356

;; _267 = *r_693(D)[_257];

(insn 672 671 673 (set (reg/f:DI 893)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -672 [0xfffffffffffffd60])) [10 r+0 S8 A64])) "../src/bnsolv.f":96 -1
     (nil))

(insn 673 672 0 (set (reg:SF 353 [ _267 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 343 [ _257 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 893)) [3 *r_693(D) S4 A32])) "../src/bnsolv.f":96 -1
     (nil))
Applying pattern match.pd:84, generic-match.c:11356
Applying pattern match.pd:84, generic-match.c:11356
Applying pattern match.pd:84, generic-match.c:11356

;; *r_693(D)[_266] = _267;

(insn 674 673 675 (set (reg/f:DI 894)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -672 [0xfffffffffffffd60])) [10 r+0 S8 A64])) "../src/bnsolv.f":96 -1
     (nil))

(insn 675 674 0 (set (mem:SF (plus:DI (mult:DI (reg:DI 352 [ _266 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 894)) [3 *r_693(D) S4 A32])
        (reg:SF 353 [ _267 ])) "../src/bnsolv.f":96 -1
     (nil))

;; i.63_268 = i;

(insn 676 675 0 (set (reg:SI 354 [ i.63_268 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [1 i+0 S4 A64])) "../src/bnsolv.f":97 -1
     (nil))

;; _269 = (integer(kind=8)) i.63_268;

(insn 677 676 0 (set (reg:DI 355 [ _269 ])
        (sign_extend:DI (reg:SI 354 [ i.63_268 ]))) "../src/bnsolv.f":97 -1
     (nil))

;; _270 = stride.25_662 * _269;

(insn 678 677 0 (parallel [
            (set (reg:DI 356 [ _270 ])
                (mult:DI (reg:DI 685 [ stride.25_662 ])
                    (reg:DI 355 [ _269 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":97 -1
     (nil))

;; _271 = offset.26_669 + _270;

(insn 679 678 0 (parallel [
            (set (reg:DI 357 [ _271 ])
                (plus:DI (reg:DI 691 [ offset.26_669 ])
                    (reg:DI 356 [ _270 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":97 -1
     (nil))

;; _272 = (integer(kind=8)) l_581;

(insn 680 679 681 (set (reg:SI 895)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])) "../src/bnsolv.f":97 -1
     (nil))

(insn 681 680 0 (set (reg:DI 358 [ _272 ])
        (sign_extend:DI (reg:SI 895))) "../src/bnsolv.f":97 -1
     (nil))

;; _273 = stride.23_658 * _272;

(insn 682 681 0 (parallel [
            (set (reg:DI 359 [ _273 ])
                (mult:DI (reg:DI 683 [ stride.23_658 ])
                    (reg:DI 358 [ _272 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":97 -1
     (nil))

;; _274 = _271 + _273;

(insn 683 682 0 (parallel [
            (set (reg:DI 360 [ _274 ])
                (plus:DI (reg:DI 357 [ _271 ])
                    (reg:DI 359 [ _273 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":97 -1
     (nil))

;; _275 = (integer(kind=8)) kpiv_573;

(insn 684 683 685 (set (reg:SI 896)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 kpiv+0 S4 A32])) "../src/bnsolv.f":97 -1
     (nil))

(insn 685 684 0 (set (reg:DI 361 [ _275 ])
        (sign_extend:DI (reg:SI 896))) "../src/bnsolv.f":97 -1
     (nil))

;; _276 = _274 + _275;

(insn 686 685 0 (parallel [
            (set (reg:DI 362 [ _276 ])
                (plus:DI (reg:DI 360 [ _274 ])
                    (reg:DI 361 [ _275 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":97 -1
     (nil))
Applying pattern match.pd:84, generic-match.c:11356
Applying pattern match.pd:84, generic-match.c:11356
Applying pattern match.pd:84, generic-match.c:11356

;; *r_693(D)[_276] = temp_730;

(insn 687 686 688 (set (reg/f:DI 897)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -672 [0xfffffffffffffd60])) [10 r+0 S8 A64])) "../src/bnsolv.f":97 -1
     (nil))

(insn 688 687 689 (set (reg:SF 898)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -140 [0xffffffffffffff74])) [3 temp+0 S4 A32])) "../src/bnsolv.f":97 -1
     (nil))

(insn 689 688 0 (set (mem:SF (plus:DI (mult:DI (reg:DI 362 [ _276 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 897)) [3 *r_693(D) S4 A32])
        (reg:SF 898)) "../src/bnsolv.f":97 -1
     (nil))

;; l_733 = l_581 + 1;

(insn 690 689 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":94 -1
     (nil))

;; Generating RTL for gimple basic block 35

;; 

(code_label 694 693 695 21 (nil) [0 uses])

(note 695 694 0 NOTE_INSN_BASIC_BLOCK)

;; _734 = kp1_701;

(insn 696 695 0 (set (reg:SI 715 [ _734 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -132 [0xffffffffffffff7c])) [1 kp1+0 S4 A32])) "../src/bnsolv.f":101 -1
     (nil))

;; _735 = *nb_615(D);

(insn 697 696 698 (set (reg/f:DI 899)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -680 [0xfffffffffffffd58])) [11 nb+0 S8 A64])) "../src/bnsolv.f":101 -1
     (nil))

(insn 698 697 0 (set (reg:SI 716 [ _735 ])
        (mem:SI (reg/f:DI 899) [1 *nb_615(D)+0 S4 A32])) "../src/bnsolv.f":101 -1
     (nil))

;; k_736 = _734;

(insn 699 698 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 k+0 S4 A32])
        (reg:SI 715 [ _734 ])) "../src/bnsolv.f":101 -1
     (nil))

;; Generating RTL for gimple basic block 36

;; _737 = k_570 > _735;

(insn 701 700 702 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [1 k+0 S4 A32])
            (reg:SI 716 [ _735 ]))) "../src/bnsolv.f":101 -1
     (nil))

(insn 702 701 0 (set (reg:QI 717 [ _737 ])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "../src/bnsolv.f":101 -1
     (nil))

;; if (_737 != 0)

(insn 703 702 704 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 717 [ _737 ])
            (const_int 0 [0]))) "../src/bnsolv.f":101 -1
     (nil))

(jump_insn 704 703 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "../src/bnsolv.f":101 -1
     (nil))

;; Generating RTL for gimple basic block 37

;; i.64_277 = i;

(insn 706 705 0 (set (reg:SI 363 [ i.64_277 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [1 i+0 S4 A64])) "../src/bnsolv.f":102 -1
     (nil))

;; _278 = (integer(kind=8)) i.64_277;

(insn 707 706 0 (set (reg:DI 364 [ _278 ])
        (sign_extend:DI (reg:SI 363 [ i.64_277 ]))) "../src/bnsolv.f":102 -1
     (nil))

;; _279 = stride.4_635 * _278;

(insn 708 707 0 (parallel [
            (set (reg:DI 365 [ _279 ])
                (mult:DI (reg:DI 665 [ stride.4_635 ])
                    (reg:DI 364 [ _278 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":102 -1
     (nil))

;; _280 = offset.5_642 + _279;

(insn 709 708 0 (parallel [
            (set (reg:DI 366 [ _280 ])
                (plus:DI (reg:DI 671 [ offset.5_642 ])
                    (reg:DI 365 [ _279 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":102 -1
     (nil))

;; _281 = (integer(kind=8)) kpiv_573;

(insn 710 709 711 (set (reg:SI 900)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 kpiv+0 S4 A32])) "../src/bnsolv.f":102 -1
     (nil))

(insn 711 710 0 (set (reg:DI 367 [ _281 ])
        (sign_extend:DI (reg:SI 900))) "../src/bnsolv.f":102 -1
     (nil))

;; _282 = stride.2_632 * _281;

(insn 712 711 0 (parallel [
            (set (reg:DI 368 [ _282 ])
                (mult:DI (reg:DI 663 [ stride.2_632 ])
                    (reg:DI 367 [ _281 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":102 -1
     (nil))

;; _283 = _280 + _282;

(insn 713 712 0 (parallel [
            (set (reg:DI 369 [ _283 ])
                (plus:DI (reg:DI 366 [ _280 ])
                    (reg:DI 368 [ _282 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":102 -1
     (nil))

;; _284 = (integer(kind=8)) k_570;

(insn 714 713 715 (set (reg:SI 901)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 k+0 S4 A32])) "../src/bnsolv.f":102 -1
     (nil))

(insn 715 714 0 (set (reg:DI 370 [ _284 ])
        (sign_extend:DI (reg:SI 901))) "../src/bnsolv.f":102 -1
     (nil))

;; _285 = _283 + _284;

(insn 716 715 0 (parallel [
            (set (reg:DI 371 [ _285 ])
                (plus:DI (reg:DI 369 [ _283 ])
                    (reg:DI 370 [ _284 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":102 -1
     (nil))
Applying pattern match.pd:84, generic-match.c:11356
Applying pattern match.pd:84, generic-match.c:11356
Applying pattern match.pd:84, generic-match.c:11356

;; atmp_738 = *a_685(D)[_285];

(insn 717 716 718 (set (reg/f:DI 902)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -648 [0xfffffffffffffd78])) [10 a+0 S8 A64])) "../src/bnsolv.f":102 -1
     (nil))

(insn 718 717 719 (set (reg:SF 903)
        (mem:SF (plus:DI (mult:DI (reg:DI 371 [ _285 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 902)) [3 *a_685(D) S4 A32])) "../src/bnsolv.f":102 -1
     (nil))

(insn 719 718 0 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -144 [0xffffffffffffff70])) [3 atmp+0 S4 A32])
        (reg:SF 903)) "../src/bnsolv.f":102 -1
     (nil))

;; _739 = kp1_701;

(insn 720 719 0 (set (reg:SI 718 [ _739 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -132 [0xffffffffffffff7c])) [1 kp1+0 S4 A32])) "../src/bnsolv.f":103 -1
     (nil))

;; _740 = *nb_615(D);

(insn 721 720 722 (set (reg/f:DI 904)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -680 [0xfffffffffffffd58])) [11 nb+0 S8 A64])) "../src/bnsolv.f":103 -1
     (nil))

(insn 722 721 0 (set (reg:SI 719 [ _740 ])
        (mem:SI (reg/f:DI 904) [1 *nb_615(D)+0 S4 A32])) "../src/bnsolv.f":103 -1
     (nil))

;; l_741 = _739;

(insn 723 722 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])
        (reg:SI 718 [ _739 ])) "../src/bnsolv.f":103 -1
     (nil))

;; Generating RTL for gimple basic block 38

;; _742 = l_582 > _740;

(insn 725 724 726 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])
            (reg:SI 719 [ _740 ]))) "../src/bnsolv.f":103 -1
     (nil))

(insn 726 725 0 (set (reg:QI 720 [ _742 ])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "../src/bnsolv.f":103 -1
     (nil))

;; if (_742 != 0)

(insn 727 726 728 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 720 [ _742 ])
            (const_int 0 [0]))) "../src/bnsolv.f":103 -1
     (nil))

(jump_insn 728 727 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "../src/bnsolv.f":103 -1
     (nil))

;; Generating RTL for gimple basic block 39

;; i.65_286 = i;

(insn 730 729 0 (set (reg:SI 372 [ i.65_286 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [1 i+0 S4 A64])) "../src/bnsolv.f":104 -1
     (nil))

;; _287 = (integer(kind=8)) i.65_286;

(insn 731 730 0 (set (reg:DI 373 [ _287 ])
        (sign_extend:DI (reg:SI 372 [ i.65_286 ]))) "../src/bnsolv.f":104 -1
     (nil))

;; _288 = stride.4_635 * _287;

(insn 732 731 0 (parallel [
            (set (reg:DI 374 [ _288 ])
                (mult:DI (reg:DI 665 [ stride.4_635 ])
                    (reg:DI 373 [ _287 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":104 -1
     (nil))

;; _289 = offset.5_642 + _288;

(insn 733 732 0 (parallel [
            (set (reg:DI 375 [ _289 ])
                (plus:DI (reg:DI 671 [ offset.5_642 ])
                    (reg:DI 374 [ _288 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":104 -1
     (nil))

;; _290 = (integer(kind=8)) l_582;

(insn 734 733 735 (set (reg:SI 905)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])) "../src/bnsolv.f":104 -1
     (nil))

(insn 735 734 0 (set (reg:DI 376 [ _290 ])
        (sign_extend:DI (reg:SI 905))) "../src/bnsolv.f":104 -1
     (nil))

;; _291 = stride.2_632 * _290;

(insn 736 735 0 (parallel [
            (set (reg:DI 377 [ _291 ])
                (mult:DI (reg:DI 663 [ stride.2_632 ])
                    (reg:DI 376 [ _290 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":104 -1
     (nil))

;; _292 = _289 + _291;

(insn 737 736 0 (parallel [
            (set (reg:DI 378 [ _292 ])
                (plus:DI (reg:DI 375 [ _289 ])
                    (reg:DI 377 [ _291 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":104 -1
     (nil))

;; _293 = (integer(kind=8)) k_570;

(insn 738 737 739 (set (reg:SI 906)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 k+0 S4 A32])) "../src/bnsolv.f":104 -1
     (nil))

(insn 739 738 0 (set (reg:DI 379 [ _293 ])
        (sign_extend:DI (reg:SI 906))) "../src/bnsolv.f":104 -1
     (nil))

;; _294 = _292 + _293;

(insn 740 739 0 (parallel [
            (set (reg:DI 380 [ _294 ])
                (plus:DI (reg:DI 378 [ _292 ])
                    (reg:DI 379 [ _293 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":104 -1
     (nil))
Applying pattern match.pd:84, generic-match.c:11356
Applying pattern match.pd:84, generic-match.c:11356
Applying pattern match.pd:84, generic-match.c:11356

;; _295 = *a_685(D)[_294];

(insn 741 740 742 (set (reg/f:DI 907)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -648 [0xfffffffffffffd78])) [10 a+0 S8 A64])) "../src/bnsolv.f":104 -1
     (nil))

(insn 742 741 0 (set (reg:SF 381 [ _295 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 380 [ _294 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 907)) [3 *a_685(D) S4 A32])) "../src/bnsolv.f":104 -1
     (nil))

;; i.66_296 = i;

(insn 743 742 0 (set (reg:SI 382 [ i.66_296 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [1 i+0 S4 A64])) "../src/bnsolv.f":104 -1
     (nil))

;; _297 = (integer(kind=8)) i.66_296;

(insn 744 743 0 (set (reg:DI 383 [ _297 ])
        (sign_extend:DI (reg:SI 382 [ i.66_296 ]))) "../src/bnsolv.f":104 -1
     (nil))

;; _298 = stride.4_635 * _297;

(insn 745 744 0 (parallel [
            (set (reg:DI 384 [ _298 ])
                (mult:DI (reg:DI 665 [ stride.4_635 ])
                    (reg:DI 383 [ _297 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":104 -1
     (nil))

;; _299 = offset.5_642 + _298;

(insn 746 745 0 (parallel [
            (set (reg:DI 385 [ _299 ])
                (plus:DI (reg:DI 671 [ offset.5_642 ])
                    (reg:DI 384 [ _298 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":104 -1
     (nil))

;; _300 = (integer(kind=8)) l_582;

(insn 747 746 748 (set (reg:SI 908)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])) "../src/bnsolv.f":104 -1
     (nil))

(insn 748 747 0 (set (reg:DI 386 [ _300 ])
        (sign_extend:DI (reg:SI 908))) "../src/bnsolv.f":104 -1
     (nil))

;; _301 = stride.2_632 * _300;

(insn 749 748 0 (parallel [
            (set (reg:DI 387 [ _301 ])
                (mult:DI (reg:DI 663 [ stride.2_632 ])
                    (reg:DI 386 [ _300 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":104 -1
     (nil))

;; _302 = _299 + _301;

(insn 750 749 0 (parallel [
            (set (reg:DI 388 [ _302 ])
                (plus:DI (reg:DI 385 [ _299 ])
                    (reg:DI 387 [ _301 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":104 -1
     (nil))

;; _303 = (integer(kind=8)) kpiv_573;

(insn 751 750 752 (set (reg:SI 909)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 kpiv+0 S4 A32])) "../src/bnsolv.f":104 -1
     (nil))

(insn 752 751 0 (set (reg:DI 389 [ _303 ])
        (sign_extend:DI (reg:SI 909))) "../src/bnsolv.f":104 -1
     (nil))

;; _304 = _302 + _303;

(insn 753 752 0 (parallel [
            (set (reg:DI 390 [ _304 ])
                (plus:DI (reg:DI 388 [ _302 ])
                    (reg:DI 389 [ _303 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":104 -1
     (nil))
Applying pattern match.pd:84, generic-match.c:11356
Applying pattern match.pd:84, generic-match.c:11356
Applying pattern match.pd:84, generic-match.c:11356

;; _305 = *a_685(D)[_304];

(insn 754 753 755 (set (reg/f:DI 910)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -648 [0xfffffffffffffd78])) [10 a+0 S8 A64])) "../src/bnsolv.f":104 -1
     (nil))

(insn 755 754 0 (set (reg:SF 391 [ _305 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 390 [ _304 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 910)) [3 *a_685(D) S4 A32])) "../src/bnsolv.f":104 -1
     (nil))

;; _306 = atmp_738 * _305;

(insn 756 755 0 (set (reg:SF 392 [ _306 ])
        (mult:SF (reg:SF 391 [ _305 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -144 [0xffffffffffffff70])) [3 atmp+0 S4 A32]))) "../src/bnsolv.f":104 -1
     (nil))

;; i.67_307 = i;

(insn 757 756 0 (set (reg:SI 393 [ i.67_307 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [1 i+0 S4 A64])) "../src/bnsolv.f":104 -1
     (nil))

;; _308 = (integer(kind=8)) i.67_307;

(insn 758 757 0 (set (reg:DI 394 [ _308 ])
        (sign_extend:DI (reg:SI 393 [ i.67_307 ]))) "../src/bnsolv.f":104 -1
     (nil))

;; _309 = stride.4_635 * _308;

(insn 759 758 0 (parallel [
            (set (reg:DI 395 [ _309 ])
                (mult:DI (reg:DI 665 [ stride.4_635 ])
                    (reg:DI 394 [ _308 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":104 -1
     (nil))

;; _310 = offset.5_642 + _309;

(insn 760 759 0 (parallel [
            (set (reg:DI 396 [ _310 ])
                (plus:DI (reg:DI 671 [ offset.5_642 ])
                    (reg:DI 395 [ _309 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":104 -1
     (nil))

;; _311 = (integer(kind=8)) l_582;

(insn 761 760 762 (set (reg:SI 911)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])) "../src/bnsolv.f":104 -1
     (nil))

(insn 762 761 0 (set (reg:DI 397 [ _311 ])
        (sign_extend:DI (reg:SI 911))) "../src/bnsolv.f":104 -1
     (nil))

;; _312 = stride.2_632 * _311;

(insn 763 762 0 (parallel [
            (set (reg:DI 398 [ _312 ])
                (mult:DI (reg:DI 663 [ stride.2_632 ])
                    (reg:DI 397 [ _311 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":104 -1
     (nil))

;; _313 = _310 + _312;

(insn 764 763 0 (parallel [
            (set (reg:DI 399 [ _313 ])
                (plus:DI (reg:DI 396 [ _310 ])
                    (reg:DI 398 [ _312 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":104 -1
     (nil))

;; _314 = (integer(kind=8)) k_570;

(insn 765 764 766 (set (reg:SI 912)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 k+0 S4 A32])) "../src/bnsolv.f":104 -1
     (nil))

(insn 766 765 0 (set (reg:DI 400 [ _314 ])
        (sign_extend:DI (reg:SI 912))) "../src/bnsolv.f":104 -1
     (nil))

;; _315 = _313 + _314;

(insn 767 766 0 (parallel [
            (set (reg:DI 401 [ _315 ])
                (plus:DI (reg:DI 399 [ _313 ])
                    (reg:DI 400 [ _314 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":104 -1
     (nil))

;; _316 = _295 - _306;

(insn 768 767 0 (set (reg:SF 402 [ _316 ])
        (minus:SF (reg:SF 381 [ _295 ])
            (reg:SF 392 [ _306 ]))) "../src/bnsolv.f":104 -1
     (nil))
Applying pattern match.pd:84, generic-match.c:11356
Applying pattern match.pd:84, generic-match.c:11356
Applying pattern match.pd:84, generic-match.c:11356

;; *a_685(D)[_315] = _316;

(insn 769 768 770 (set (reg/f:DI 913)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -648 [0xfffffffffffffd78])) [10 a+0 S8 A64])) "../src/bnsolv.f":104 -1
     (nil))

(insn 770 769 0 (set (mem:SF (plus:DI (mult:DI (reg:DI 401 [ _315 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 913)) [3 *a_685(D) S4 A32])
        (reg:SF 402 [ _316 ])) "../src/bnsolv.f":104 -1
     (nil))

;; l_744 = l_582 + 1;

(insn 771 770 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":103 -1
     (nil))

;; Generating RTL for gimple basic block 40

;; 

(code_label 775 774 776 24 (nil) [0 uses])

(note 776 775 0 NOTE_INSN_BASIC_BLOCK)

;; _745 = *nb_615(D);

(insn 777 776 778 (set (reg/f:DI 914)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -680 [0xfffffffffffffd58])) [11 nb+0 S8 A64])) "../src/bnsolv.f":106 -1
     (nil))

(insn 778 777 0 (set (reg:SI 721 [ _745 ])
        (mem:SI (reg/f:DI 914) [1 *nb_615(D)+0 S4 A32])) "../src/bnsolv.f":106 -1
     (nil))

;; l_746 = 1;

(insn 779 778 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])
        (const_int 1 [0x1])) "../src/bnsolv.f":106 -1
     (nil))

;; Generating RTL for gimple basic block 41

;; _747 = l_583 > _745;

(insn 781 780 782 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])
            (reg:SI 721 [ _745 ]))) "../src/bnsolv.f":106 -1
     (nil))

(insn 782 781 0 (set (reg:QI 722 [ _747 ])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "../src/bnsolv.f":106 -1
     (nil))

;; if (_747 != 0)

(insn 783 782 784 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 722 [ _747 ])
            (const_int 0 [0]))) "../src/bnsolv.f":106 -1
     (nil))

(jump_insn 784 783 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "../src/bnsolv.f":106 -1
     (nil))

;; Generating RTL for gimple basic block 42

;; i.68_317 = i;

(insn 786 785 0 (set (reg:SI 403 [ i.68_317 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [1 i+0 S4 A64])) "../src/bnsolv.f":107 -1
     (nil))

;; _318 = (integer(kind=8)) i.68_317;

(insn 787 786 0 (set (reg:DI 404 [ _318 ])
        (sign_extend:DI (reg:SI 403 [ i.68_317 ]))) "../src/bnsolv.f":107 -1
     (nil))

;; _319 = stride.18_648 * _318;

(insn 788 787 0 (parallel [
            (set (reg:DI 405 [ _319 ])
                (mult:DI (reg:DI 675 [ stride.18_648 ])
                    (reg:DI 404 [ _318 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":107 -1
     (nil))

;; _320 = offset.19_655 + _319;

(insn 789 788 0 (parallel [
            (set (reg:DI 406 [ _320 ])
                (plus:DI (reg:DI 681 [ offset.19_655 ])
                    (reg:DI 405 [ _319 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":107 -1
     (nil))

;; _321 = (integer(kind=8)) l_583;

(insn 790 789 791 (set (reg:SI 915)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])) "../src/bnsolv.f":107 -1
     (nil))

(insn 791 790 0 (set (reg:DI 407 [ _321 ])
        (sign_extend:DI (reg:SI 915))) "../src/bnsolv.f":107 -1
     (nil))

;; _322 = stride.16_645 * _321;

(insn 792 791 0 (parallel [
            (set (reg:DI 408 [ _322 ])
                (mult:DI (reg:DI 673 [ stride.16_645 ])
                    (reg:DI 407 [ _321 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":107 -1
     (nil))

;; _323 = _320 + _322;

(insn 793 792 0 (parallel [
            (set (reg:DI 409 [ _323 ])
                (plus:DI (reg:DI 406 [ _320 ])
                    (reg:DI 408 [ _322 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":107 -1
     (nil))

;; _324 = (integer(kind=8)) k_570;

(insn 794 793 795 (set (reg:SI 916)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 k+0 S4 A32])) "../src/bnsolv.f":107 -1
     (nil))

(insn 795 794 0 (set (reg:DI 410 [ _324 ])
        (sign_extend:DI (reg:SI 916))) "../src/bnsolv.f":107 -1
     (nil))

;; _325 = _323 + _324;

(insn 796 795 0 (parallel [
            (set (reg:DI 411 [ _325 ])
                (plus:DI (reg:DI 409 [ _323 ])
                    (reg:DI 410 [ _324 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":107 -1
     (nil))
Applying pattern match.pd:84, generic-match.c:11356
Applying pattern match.pd:84, generic-match.c:11356
Applying pattern match.pd:84, generic-match.c:11356

;; _326 = *c_686(D)[_325];

(insn 797 796 798 (set (reg/f:DI 917)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -664 [0xfffffffffffffd68])) [10 c+0 S8 A64])) "../src/bnsolv.f":107 -1
     (nil))

(insn 798 797 0 (set (reg:SF 412 [ _326 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 411 [ _325 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 917)) [3 *c_686(D) S4 A32])) "../src/bnsolv.f":107 -1
     (nil))

;; i.69_327 = i;

(insn 799 798 0 (set (reg:SI 413 [ i.69_327 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [1 i+0 S4 A64])) "../src/bnsolv.f":107 -1
     (nil))

;; _328 = (integer(kind=8)) i.69_327;

(insn 800 799 0 (set (reg:DI 414 [ _328 ])
        (sign_extend:DI (reg:SI 413 [ i.69_327 ]))) "../src/bnsolv.f":107 -1
     (nil))

;; _329 = stride.18_648 * _328;

(insn 801 800 0 (parallel [
            (set (reg:DI 415 [ _329 ])
                (mult:DI (reg:DI 675 [ stride.18_648 ])
                    (reg:DI 414 [ _328 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":107 -1
     (nil))

;; _330 = offset.19_655 + _329;

(insn 802 801 0 (parallel [
            (set (reg:DI 416 [ _330 ])
                (plus:DI (reg:DI 681 [ offset.19_655 ])
                    (reg:DI 415 [ _329 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":107 -1
     (nil))

;; _331 = (integer(kind=8)) l_583;

(insn 803 802 804 (set (reg:SI 918)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])) "../src/bnsolv.f":107 -1
     (nil))

(insn 804 803 0 (set (reg:DI 417 [ _331 ])
        (sign_extend:DI (reg:SI 918))) "../src/bnsolv.f":107 -1
     (nil))

;; _332 = stride.16_645 * _331;

(insn 805 804 0 (parallel [
            (set (reg:DI 418 [ _332 ])
                (mult:DI (reg:DI 673 [ stride.16_645 ])
                    (reg:DI 417 [ _331 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":107 -1
     (nil))

;; _333 = _330 + _332;

(insn 806 805 0 (parallel [
            (set (reg:DI 419 [ _333 ])
                (plus:DI (reg:DI 416 [ _330 ])
                    (reg:DI 418 [ _332 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":107 -1
     (nil))

;; _334 = (integer(kind=8)) kpiv_573;

(insn 807 806 808 (set (reg:SI 919)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 kpiv+0 S4 A32])) "../src/bnsolv.f":107 -1
     (nil))

(insn 808 807 0 (set (reg:DI 420 [ _334 ])
        (sign_extend:DI (reg:SI 919))) "../src/bnsolv.f":107 -1
     (nil))

;; _335 = _333 + _334;

(insn 809 808 0 (parallel [
            (set (reg:DI 421 [ _335 ])
                (plus:DI (reg:DI 419 [ _333 ])
                    (reg:DI 420 [ _334 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":107 -1
     (nil))
Applying pattern match.pd:84, generic-match.c:11356
Applying pattern match.pd:84, generic-match.c:11356
Applying pattern match.pd:84, generic-match.c:11356

;; _336 = *c_686(D)[_335];

(insn 810 809 811 (set (reg/f:DI 920)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -664 [0xfffffffffffffd68])) [10 c+0 S8 A64])) "../src/bnsolv.f":107 -1
     (nil))

(insn 811 810 0 (set (reg:SF 422 [ _336 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 421 [ _335 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 920)) [3 *c_686(D) S4 A32])) "../src/bnsolv.f":107 -1
     (nil))

;; _337 = atmp_738 * _336;

(insn 812 811 0 (set (reg:SF 423 [ _337 ])
        (mult:SF (reg:SF 422 [ _336 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -144 [0xffffffffffffff70])) [3 atmp+0 S4 A32]))) "../src/bnsolv.f":107 -1
     (nil))

;; i.70_338 = i;

(insn 813 812 0 (set (reg:SI 424 [ i.70_338 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [1 i+0 S4 A64])) "../src/bnsolv.f":107 -1
     (nil))

;; _339 = (integer(kind=8)) i.70_338;

(insn 814 813 0 (set (reg:DI 425 [ _339 ])
        (sign_extend:DI (reg:SI 424 [ i.70_338 ]))) "../src/bnsolv.f":107 -1
     (nil))

;; _340 = stride.18_648 * _339;

(insn 815 814 0 (parallel [
            (set (reg:DI 426 [ _340 ])
                (mult:DI (reg:DI 675 [ stride.18_648 ])
                    (reg:DI 425 [ _339 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":107 -1
     (nil))

;; _341 = offset.19_655 + _340;

(insn 816 815 0 (parallel [
            (set (reg:DI 427 [ _341 ])
                (plus:DI (reg:DI 681 [ offset.19_655 ])
                    (reg:DI 426 [ _340 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":107 -1
     (nil))

;; _342 = (integer(kind=8)) l_583;

(insn 817 816 818 (set (reg:SI 921)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])) "../src/bnsolv.f":107 -1
     (nil))

(insn 818 817 0 (set (reg:DI 428 [ _342 ])
        (sign_extend:DI (reg:SI 921))) "../src/bnsolv.f":107 -1
     (nil))

;; _343 = stride.16_645 * _342;

(insn 819 818 0 (parallel [
            (set (reg:DI 429 [ _343 ])
                (mult:DI (reg:DI 673 [ stride.16_645 ])
                    (reg:DI 428 [ _342 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":107 -1
     (nil))

;; _344 = _341 + _343;

(insn 820 819 0 (parallel [
            (set (reg:DI 430 [ _344 ])
                (plus:DI (reg:DI 427 [ _341 ])
                    (reg:DI 429 [ _343 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":107 -1
     (nil))

;; _345 = (integer(kind=8)) k_570;

(insn 821 820 822 (set (reg:SI 922)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 k+0 S4 A32])) "../src/bnsolv.f":107 -1
     (nil))

(insn 822 821 0 (set (reg:DI 431 [ _345 ])
        (sign_extend:DI (reg:SI 922))) "../src/bnsolv.f":107 -1
     (nil))

;; _346 = _344 + _345;

(insn 823 822 0 (parallel [
            (set (reg:DI 432 [ _346 ])
                (plus:DI (reg:DI 430 [ _344 ])
                    (reg:DI 431 [ _345 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":107 -1
     (nil))

;; _347 = _326 - _337;

(insn 824 823 0 (set (reg:SF 433 [ _347 ])
        (minus:SF (reg:SF 412 [ _326 ])
            (reg:SF 423 [ _337 ]))) "../src/bnsolv.f":107 -1
     (nil))
Applying pattern match.pd:84, generic-match.c:11356
Applying pattern match.pd:84, generic-match.c:11356
Applying pattern match.pd:84, generic-match.c:11356

;; *c_686(D)[_346] = _347;

(insn 825 824 826 (set (reg/f:DI 923)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -664 [0xfffffffffffffd68])) [10 c+0 S8 A64])) "../src/bnsolv.f":107 -1
     (nil))

(insn 826 825 0 (set (mem:SF (plus:DI (mult:DI (reg:DI 432 [ _346 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 923)) [3 *c_686(D) S4 A32])
        (reg:SF 433 [ _347 ])) "../src/bnsolv.f":107 -1
     (nil))

;; l_749 = l_583 + 1;

(insn 827 826 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":106 -1
     (nil))

;; Generating RTL for gimple basic block 43

;; 

(code_label 831 830 832 26 (nil) [0 uses])

(note 832 831 0 NOTE_INSN_BASIC_BLOCK)

;; _750 = *nrhs_689(D);

(insn 833 832 834 (set (reg/f:DI 924)
        (mem/f/c:DI (reg/f:DI 81 virtual-incoming-args) [11 nrhs+0 S8 A64])) "../src/bnsolv.f":109 -1
     (nil))

(insn 834 833 0 (set (reg:SI 723 [ _750 ])
        (mem:SI (reg/f:DI 924) [1 *nrhs_689(D)+0 S4 A32])) "../src/bnsolv.f":109 -1
     (nil))

;; l_751 = 1;

(insn 835 834 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])
        (const_int 1 [0x1])) "../src/bnsolv.f":109 -1
     (nil))

;; Generating RTL for gimple basic block 44

;; _752 = l_584 > _750;

(insn 837 836 838 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])
            (reg:SI 723 [ _750 ]))) "../src/bnsolv.f":109 -1
     (nil))

(insn 838 837 0 (set (reg:QI 724 [ _752 ])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "../src/bnsolv.f":109 -1
     (nil))

;; if (_752 != 0)

(insn 839 838 840 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 724 [ _752 ])
            (const_int 0 [0]))) "../src/bnsolv.f":109 -1
     (nil))

(jump_insn 840 839 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "../src/bnsolv.f":109 -1
     (nil))

;; Generating RTL for gimple basic block 45

;; i.71_348 = i;

(insn 842 841 0 (set (reg:SI 434 [ i.71_348 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [1 i+0 S4 A64])) "../src/bnsolv.f":110 -1
     (nil))

;; _349 = (integer(kind=8)) i.71_348;

(insn 843 842 0 (set (reg:DI 435 [ _349 ])
        (sign_extend:DI (reg:SI 434 [ i.71_348 ]))) "../src/bnsolv.f":110 -1
     (nil))

;; _350 = stride.25_662 * _349;

(insn 844 843 0 (parallel [
            (set (reg:DI 436 [ _350 ])
                (mult:DI (reg:DI 685 [ stride.25_662 ])
                    (reg:DI 435 [ _349 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":110 -1
     (nil))

;; _351 = offset.26_669 + _350;

(insn 845 844 0 (parallel [
            (set (reg:DI 437 [ _351 ])
                (plus:DI (reg:DI 691 [ offset.26_669 ])
                    (reg:DI 436 [ _350 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":110 -1
     (nil))

;; _352 = (integer(kind=8)) l_584;

(insn 846 845 847 (set (reg:SI 925)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])) "../src/bnsolv.f":110 -1
     (nil))

(insn 847 846 0 (set (reg:DI 438 [ _352 ])
        (sign_extend:DI (reg:SI 925))) "../src/bnsolv.f":110 -1
     (nil))

;; _353 = stride.23_658 * _352;

(insn 848 847 0 (parallel [
            (set (reg:DI 439 [ _353 ])
                (mult:DI (reg:DI 683 [ stride.23_658 ])
                    (reg:DI 438 [ _352 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":110 -1
     (nil))

;; _354 = _351 + _353;

(insn 849 848 0 (parallel [
            (set (reg:DI 440 [ _354 ])
                (plus:DI (reg:DI 437 [ _351 ])
                    (reg:DI 439 [ _353 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":110 -1
     (nil))

;; _355 = (integer(kind=8)) k_570;

(insn 850 849 851 (set (reg:SI 926)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 k+0 S4 A32])) "../src/bnsolv.f":110 -1
     (nil))

(insn 851 850 0 (set (reg:DI 441 [ _355 ])
        (sign_extend:DI (reg:SI 926))) "../src/bnsolv.f":110 -1
     (nil))

;; _356 = _354 + _355;

(insn 852 851 0 (parallel [
            (set (reg:DI 442 [ _356 ])
                (plus:DI (reg:DI 440 [ _354 ])
                    (reg:DI 441 [ _355 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":110 -1
     (nil))
Applying pattern match.pd:84, generic-match.c:11356
Applying pattern match.pd:84, generic-match.c:11356
Applying pattern match.pd:84, generic-match.c:11356

;; _357 = *r_693(D)[_356];

(insn 853 852 854 (set (reg/f:DI 927)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -672 [0xfffffffffffffd60])) [10 r+0 S8 A64])) "../src/bnsolv.f":110 -1
     (nil))

(insn 854 853 0 (set (reg:SF 443 [ _357 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 442 [ _356 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 927)) [3 *r_693(D) S4 A32])) "../src/bnsolv.f":110 -1
     (nil))

;; i.72_358 = i;

(insn 855 854 0 (set (reg:SI 444 [ i.72_358 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [1 i+0 S4 A64])) "../src/bnsolv.f":110 -1
     (nil))

;; _359 = (integer(kind=8)) i.72_358;

(insn 856 855 0 (set (reg:DI 445 [ _359 ])
        (sign_extend:DI (reg:SI 444 [ i.72_358 ]))) "../src/bnsolv.f":110 -1
     (nil))

;; _360 = stride.25_662 * _359;

(insn 857 856 0 (parallel [
            (set (reg:DI 446 [ _360 ])
                (mult:DI (reg:DI 685 [ stride.25_662 ])
                    (reg:DI 445 [ _359 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":110 -1
     (nil))

;; _361 = offset.26_669 + _360;

(insn 858 857 0 (parallel [
            (set (reg:DI 447 [ _361 ])
                (plus:DI (reg:DI 691 [ offset.26_669 ])
                    (reg:DI 446 [ _360 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":110 -1
     (nil))

;; _362 = (integer(kind=8)) l_584;

(insn 859 858 860 (set (reg:SI 928)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])) "../src/bnsolv.f":110 -1
     (nil))

(insn 860 859 0 (set (reg:DI 448 [ _362 ])
        (sign_extend:DI (reg:SI 928))) "../src/bnsolv.f":110 -1
     (nil))

;; _363 = stride.23_658 * _362;

(insn 861 860 0 (parallel [
            (set (reg:DI 449 [ _363 ])
                (mult:DI (reg:DI 683 [ stride.23_658 ])
                    (reg:DI 448 [ _362 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":110 -1
     (nil))

;; _364 = _361 + _363;

(insn 862 861 0 (parallel [
            (set (reg:DI 450 [ _364 ])
                (plus:DI (reg:DI 447 [ _361 ])
                    (reg:DI 449 [ _363 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":110 -1
     (nil))

;; _365 = (integer(kind=8)) kpiv_573;

(insn 863 862 864 (set (reg:SI 929)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 kpiv+0 S4 A32])) "../src/bnsolv.f":110 -1
     (nil))

(insn 864 863 0 (set (reg:DI 451 [ _365 ])
        (sign_extend:DI (reg:SI 929))) "../src/bnsolv.f":110 -1
     (nil))

;; _366 = _364 + _365;

(insn 865 864 0 (parallel [
            (set (reg:DI 452 [ _366 ])
                (plus:DI (reg:DI 450 [ _364 ])
                    (reg:DI 451 [ _365 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":110 -1
     (nil))
Applying pattern match.pd:84, generic-match.c:11356
Applying pattern match.pd:84, generic-match.c:11356
Applying pattern match.pd:84, generic-match.c:11356

;; _367 = *r_693(D)[_366];

(insn 866 865 867 (set (reg/f:DI 930)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -672 [0xfffffffffffffd60])) [10 r+0 S8 A64])) "../src/bnsolv.f":110 -1
     (nil))

(insn 867 866 0 (set (reg:SF 453 [ _367 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 452 [ _366 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 930)) [3 *r_693(D) S4 A32])) "../src/bnsolv.f":110 -1
     (nil))

;; _368 = atmp_738 * _367;

(insn 868 867 0 (set (reg:SF 454 [ _368 ])
        (mult:SF (reg:SF 453 [ _367 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -144 [0xffffffffffffff70])) [3 atmp+0 S4 A32]))) "../src/bnsolv.f":110 -1
     (nil))

;; i.73_369 = i;

(insn 869 868 0 (set (reg:SI 455 [ i.73_369 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [1 i+0 S4 A64])) "../src/bnsolv.f":110 -1
     (nil))

;; _370 = (integer(kind=8)) i.73_369;

(insn 870 869 0 (set (reg:DI 456 [ _370 ])
        (sign_extend:DI (reg:SI 455 [ i.73_369 ]))) "../src/bnsolv.f":110 -1
     (nil))

;; _371 = stride.25_662 * _370;

(insn 871 870 0 (parallel [
            (set (reg:DI 457 [ _371 ])
                (mult:DI (reg:DI 685 [ stride.25_662 ])
                    (reg:DI 456 [ _370 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":110 -1
     (nil))

;; _372 = offset.26_669 + _371;

(insn 872 871 0 (parallel [
            (set (reg:DI 458 [ _372 ])
                (plus:DI (reg:DI 691 [ offset.26_669 ])
                    (reg:DI 457 [ _371 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":110 -1
     (nil))

;; _373 = (integer(kind=8)) l_584;

(insn 873 872 874 (set (reg:SI 931)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])) "../src/bnsolv.f":110 -1
     (nil))

(insn 874 873 0 (set (reg:DI 459 [ _373 ])
        (sign_extend:DI (reg:SI 931))) "../src/bnsolv.f":110 -1
     (nil))

;; _374 = stride.23_658 * _373;

(insn 875 874 0 (parallel [
            (set (reg:DI 460 [ _374 ])
                (mult:DI (reg:DI 683 [ stride.23_658 ])
                    (reg:DI 459 [ _373 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":110 -1
     (nil))

;; _375 = _372 + _374;

(insn 876 875 0 (parallel [
            (set (reg:DI 461 [ _375 ])
                (plus:DI (reg:DI 458 [ _372 ])
                    (reg:DI 460 [ _374 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":110 -1
     (nil))

;; _376 = (integer(kind=8)) k_570;

(insn 877 876 878 (set (reg:SI 932)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 k+0 S4 A32])) "../src/bnsolv.f":110 -1
     (nil))

(insn 878 877 0 (set (reg:DI 462 [ _376 ])
        (sign_extend:DI (reg:SI 932))) "../src/bnsolv.f":110 -1
     (nil))

;; _377 = _375 + _376;

(insn 879 878 0 (parallel [
            (set (reg:DI 463 [ _377 ])
                (plus:DI (reg:DI 461 [ _375 ])
                    (reg:DI 462 [ _376 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":110 -1
     (nil))

;; _378 = _357 - _368;

(insn 880 879 0 (set (reg:SF 464 [ _378 ])
        (minus:SF (reg:SF 443 [ _357 ])
            (reg:SF 454 [ _368 ]))) "../src/bnsolv.f":110 -1
     (nil))
Applying pattern match.pd:84, generic-match.c:11356
Applying pattern match.pd:84, generic-match.c:11356
Applying pattern match.pd:84, generic-match.c:11356

;; *r_693(D)[_377] = _378;

(insn 881 880 882 (set (reg/f:DI 933)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -672 [0xfffffffffffffd60])) [10 r+0 S8 A64])) "../src/bnsolv.f":110 -1
     (nil))

(insn 882 881 0 (set (mem:SF (plus:DI (mult:DI (reg:DI 463 [ _377 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 933)) [3 *r_693(D) S4 A32])
        (reg:SF 464 [ _378 ])) "../src/bnsolv.f":110 -1
     (nil))

;; l_754 = l_584 + 1;

(insn 883 882 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":109 -1
     (nil))

;; Generating RTL for gimple basic block 46

;; 

(code_label 887 886 888 28 (nil) [0 uses])

(note 888 887 0 NOTE_INSN_BASIC_BLOCK)

;; k_755 = k_570 + 1;

(insn 889 888 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [1 k+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [1 k+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":101 -1
     (nil))

;; Generating RTL for gimple basic block 47

;; 

(code_label 893 892 894 23 (nil) [0 uses])

(note 894 893 0 NOTE_INSN_BASIC_BLOCK)

;; kpiv_756 = kpiv_573 + 1;

(insn 895 894 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -12 [0xfffffffffffffff4])) [1 kpiv+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -12 [0xfffffffffffffff4])) [1 kpiv+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":61 -1
     (nil))

;; Generating RTL for gimple basic block 48

;; 

(code_label 899 898 900 11 (nil) [0 uses])

(note 900 899 0 NOTE_INSN_BASIC_BLOCK)

;; i.74_379 = i;

(insn 901 900 0 (set (reg:SI 465 [ i.74_379 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [1 i+0 S4 A64])) "../src/bnsolv.f":117 -1
     (nil))

;; _380 = (integer(kind=8)) i.74_379;

(insn 902 901 0 (set (reg:DI 466 [ _380 ])
        (sign_extend:DI (reg:SI 465 [ i.74_379 ]))) "../src/bnsolv.f":117 -1
     (nil))

;; _381 = stride.4_635 * _380;

(insn 903 902 0 (parallel [
            (set (reg:DI 467 [ _381 ])
                (mult:DI (reg:DI 665 [ stride.4_635 ])
                    (reg:DI 466 [ _380 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":117 -1
     (nil))

;; _382 = offset.5_642 + _381;

(insn 904 903 0 (parallel [
            (set (reg:DI 468 [ _382 ])
                (plus:DI (reg:DI 671 [ offset.5_642 ])
                    (reg:DI 467 [ _381 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":117 -1
     (nil))

;; _383 = *nb_615(D);

(insn 905 904 906 (set (reg/f:DI 934)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -680 [0xfffffffffffffd58])) [11 nb+0 S8 A64])) "../src/bnsolv.f":117 -1
     (nil))

(insn 906 905 0 (set (reg:SI 469 [ _383 ])
        (mem:SI (reg/f:DI 934) [1 *nb_615(D)+0 S4 A32])) "../src/bnsolv.f":117 -1
     (nil))

;; _384 = (integer(kind=8)) _383;

(insn 907 906 0 (set (reg:DI 470 [ _384 ])
        (sign_extend:DI (reg:SI 469 [ _383 ]))) "../src/bnsolv.f":117 -1
     (nil))

;; _385 = stride.2_632 * _384;

(insn 908 907 0 (parallel [
            (set (reg:DI 471 [ _385 ])
                (mult:DI (reg:DI 663 [ stride.2_632 ])
                    (reg:DI 470 [ _384 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":117 -1
     (nil))

;; _386 = _382 + _385;

(insn 909 908 0 (parallel [
            (set (reg:DI 472 [ _386 ])
                (plus:DI (reg:DI 468 [ _382 ])
                    (reg:DI 471 [ _385 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":117 -1
     (nil))

;; _387 = *nb_615(D);

(insn 910 909 911 (set (reg/f:DI 935)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -680 [0xfffffffffffffd58])) [11 nb+0 S8 A64])) "../src/bnsolv.f":117 -1
     (nil))

(insn 911 910 0 (set (reg:SI 473 [ _387 ])
        (mem:SI (reg/f:DI 935) [1 *nb_615(D)+0 S4 A32])) "../src/bnsolv.f":117 -1
     (nil))

;; _388 = (integer(kind=8)) _387;

(insn 912 911 0 (set (reg:DI 474 [ _388 ])
        (sign_extend:DI (reg:SI 473 [ _387 ]))) "../src/bnsolv.f":117 -1
     (nil))

;; _389 = _386 + _388;

(insn 913 912 0 (parallel [
            (set (reg:DI 475 [ _389 ])
                (plus:DI (reg:DI 472 [ _386 ])
                    (reg:DI 474 [ _388 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":117 -1
     (nil))
Applying pattern match.pd:84, generic-match.c:11356
Applying pattern match.pd:84, generic-match.c:11356
Applying pattern match.pd:84, generic-match.c:11356

;; _390 = *a_685(D)[_389];

(insn 914 913 915 (set (reg/f:DI 936)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -648 [0xfffffffffffffd78])) [10 a+0 S8 A64])) "../src/bnsolv.f":117 -1
     (nil))

(insn 915 914 0 (set (reg:SF 476 [ _390 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 475 [ _389 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 936)) [3 *a_685(D) S4 A32])) "../src/bnsolv.f":117 -1
     (nil))

;; if (_390 == 0.0)

(insn 916 915 917 (set (reg:SF 937)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC1") [flags 0x2]) [3  S4 A32])) "../src/bnsolv.f":117 -1
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))

(insn 917 916 918 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 476 [ _390 ])
            (reg:SF 937))) "../src/bnsolv.f":117 -1
     (nil))

(jump_insn 918 917 919 (set (pc)
        (if_then_else (unordered (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "../src/bnsolv.f":117 -1
     (nil))

(insn 919 918 920 (set (reg:SF 938)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC1") [flags 0x2]) [3  S4 A32])) "../src/bnsolv.f":117 -1
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))

(insn 920 919 921 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 476 [ _390 ])
            (reg:SF 938))) "../src/bnsolv.f":117 -1
     (nil))

(jump_insn 921 920 922 (set (pc)
        (if_then_else (uneq (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref 924)
            (pc))) "../src/bnsolv.f":117 -1
     (nil))

(jump_insn 922 921 923 (set (pc)
        (label_ref 0)) "../src/bnsolv.f":117 -1
     (nil))

(barrier 923 922 924)

(code_label 924 923 0 33 (nil) [0 uses])

;; Generating RTL for gimple basic block 49

;; dt_parm.29.common.filename = &"../src/bnsolv.f"[1]{lb: 1 sz: 1};

(insn 926 925 927 (set (reg/f:DI 939)
        (symbol_ref/f:DI ("*lC2") [flags 0x2]  <var_decl 0x143100ea0 *lC2>)) "../src/bnsolv.f":118 -1
     (nil))

(insn 927 926 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -632 [0xfffffffffffffd88])) [6 dt_parm.29.common.filename+0 S8 A64])
        (reg/f:DI 939)) "../src/bnsolv.f":118 -1
     (nil))

;; dt_parm.29.common.line = 118;

(insn 928 927 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -624 [0xfffffffffffffd90])) [1 dt_parm.29.common.line+0 S4 A128])
        (const_int 118 [0x76])) "../src/bnsolv.f":118 -1
     (nil))

;; dt_parm.29.common.flags = 128;

(insn 929 928 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -640 [0xfffffffffffffd80])) [1 dt_parm.29.common.flags+0 S4 A128])
        (const_int 128 [0x80])) "../src/bnsolv.f":118 -1
     (nil))

;; dt_parm.29.common.unit = 6;

(insn 930 929 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -636 [0xfffffffffffffd84])) [1 dt_parm.29.common.unit+0 S4 A32])
        (const_int 6 [0x6])) "../src/bnsolv.f":118 -1
     (nil))

;; _gfortran_st_write (&dt_parm.29);

(insn 931 930 932 (parallel [
            (set (reg:DI 940)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -640 [0xfffffffffffffd80])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":118 -1
     (nil))

(insn 932 931 933 (set (reg:DI 5 di)
        (reg:DI 940)) "../src/bnsolv.f":118 -1
     (nil))

(call_insn 933 932 0 (call (mem:QI (symbol_ref:DI ("_gfortran_st_write") [flags 0x41]  <function_decl 0x1427e0800 _gfortran_st_write>) [0 _gfortran_st_write S1 A8])
        (const_int 0 [0])) "../src/bnsolv.f":118 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; _gfortran_transfer_character_write (&dt_parm.29, &"Singular A block, i = "[1]{lb: 1 sz: 1}, 22);

(insn 934 933 935 (parallel [
            (set (reg:DI 941)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -640 [0xfffffffffffffd80])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":118 -1
     (nil))

(insn 935 934 936 (set (reg:SI 1 dx)
        (const_int 22 [0x16])) "../src/bnsolv.f":118 -1
     (nil))

(insn 936 935 937 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*lC3") [flags 0x2]  <var_decl 0x143100f30 *lC3>)) "../src/bnsolv.f":118 -1
     (nil))

(insn 937 936 938 (set (reg:DI 5 di)
        (reg:DI 941)) "../src/bnsolv.f":118 -1
     (nil))

(call_insn 938 937 0 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_character_write") [flags 0x41]  <function_decl 0x1427d4900 _gfortran_transfer_character_write>) [0 _gfortran_transfer_character_write S1 A8])
        (const_int 0 [0])) "../src/bnsolv.f":118 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))

;; _gfortran_transfer_integer_write (&dt_parm.29, &i, 4);

(insn 939 938 940 (parallel [
            (set (reg:DI 942)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -152 [0xffffffffffffff68])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":118 -1
     (nil))

(insn 940 939 941 (parallel [
            (set (reg:DI 943)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -640 [0xfffffffffffffd80])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":118 -1
     (nil))

(insn 941 940 942 (set (reg:SI 1 dx)
        (const_int 4 [0x4])) "../src/bnsolv.f":118 -1
     (nil))

(insn 942 941 943 (set (reg:DI 4 si)
        (reg:DI 942)) "../src/bnsolv.f":118 -1
     (nil))

(insn 943 942 944 (set (reg:DI 5 di)
        (reg:DI 943)) "../src/bnsolv.f":118 -1
     (nil))

(call_insn 944 943 0 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_integer_write") [flags 0x41]  <function_decl 0x1427d4500 _gfortran_transfer_integer_write>) [0 _gfortran_transfer_integer_write S1 A8])
        (const_int 0 [0])) "../src/bnsolv.f":118 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))

;; _gfortran_st_write_done (&dt_parm.29);

(insn 945 944 946 (parallel [
            (set (reg:DI 944)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -640 [0xfffffffffffffd80])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":118 -1
     (nil))

(insn 946 945 947 (set (reg:DI 5 di)
        (reg:DI 944)) "../src/bnsolv.f":118 -1
     (nil))

(call_insn 947 946 0 (call (mem:QI (symbol_ref:DI ("_gfortran_st_write_done") [flags 0x41]  <function_decl 0x1427e4300 _gfortran_st_write_done>) [0 _gfortran_st_write_done S1 A8])
        (const_int 0 [0])) "../src/bnsolv.f":118 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; dt_parm.29 ={v} {CLOBBER};

(nil)

;; _gfortran_stop_string (0B, 0);

(insn 948 947 949 (set (reg:SI 4 si)
        (const_int 0 [0])) "../src/bnsolv.f":119 -1
     (nil))

(insn 949 948 950 (set (reg:DI 5 di)
        (const_int 0 [0])) "../src/bnsolv.f":119 -1
     (nil))

(call_insn 950 949 951 (call (mem:QI (symbol_ref:DI ("_gfortran_stop_string") [flags 0x41]  <function_decl 0x1427c2200 _gfortran_stop_string>) [0 _gfortran_stop_string S1 A8])
        (const_int 0 [0])) "../src/bnsolv.f":119 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))

(barrier 951 950 0)

;; Generating RTL for gimple basic block 50

;; 

(code_label 952 951 953 32 (nil) [0 uses])

(note 953 952 0 NOTE_INSN_BASIC_BLOCK)

;; i.75_391 = i;

(insn 954 953 0 (set (reg:SI 477 [ i.75_391 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [1 i+0 S4 A64])) "../src/bnsolv.f":121 -1
     (nil))

;; _392 = (integer(kind=8)) i.75_391;

(insn 955 954 0 (set (reg:DI 478 [ _392 ])
        (sign_extend:DI (reg:SI 477 [ i.75_391 ]))) "../src/bnsolv.f":121 -1
     (nil))

;; _393 = stride.4_635 * _392;

(insn 956 955 0 (parallel [
            (set (reg:DI 479 [ _393 ])
                (mult:DI (reg:DI 665 [ stride.4_635 ])
                    (reg:DI 478 [ _392 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":121 -1
     (nil))

;; _394 = offset.5_642 + _393;

(insn 957 956 0 (parallel [
            (set (reg:DI 480 [ _394 ])
                (plus:DI (reg:DI 671 [ offset.5_642 ])
                    (reg:DI 479 [ _393 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":121 -1
     (nil))

;; _395 = *nb_615(D);

(insn 958 957 959 (set (reg/f:DI 945)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -680 [0xfffffffffffffd58])) [11 nb+0 S8 A64])) "../src/bnsolv.f":121 -1
     (nil))

(insn 959 958 0 (set (reg:SI 481 [ _395 ])
        (mem:SI (reg/f:DI 945) [1 *nb_615(D)+0 S4 A32])) "../src/bnsolv.f":121 -1
     (nil))

;; _396 = (integer(kind=8)) _395;

(insn 960 959 0 (set (reg:DI 482 [ _396 ])
        (sign_extend:DI (reg:SI 481 [ _395 ]))) "../src/bnsolv.f":121 -1
     (nil))

;; _397 = stride.2_632 * _396;

(insn 961 960 0 (parallel [
            (set (reg:DI 483 [ _397 ])
                (mult:DI (reg:DI 663 [ stride.2_632 ])
                    (reg:DI 482 [ _396 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":121 -1
     (nil))

;; _398 = _394 + _397;

(insn 962 961 0 (parallel [
            (set (reg:DI 484 [ _398 ])
                (plus:DI (reg:DI 480 [ _394 ])
                    (reg:DI 483 [ _397 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":121 -1
     (nil))

;; _399 = *nb_615(D);

(insn 963 962 964 (set (reg/f:DI 946)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -680 [0xfffffffffffffd58])) [11 nb+0 S8 A64])) "../src/bnsolv.f":121 -1
     (nil))

(insn 964 963 0 (set (reg:SI 485 [ _399 ])
        (mem:SI (reg/f:DI 946) [1 *nb_615(D)+0 S4 A32])) "../src/bnsolv.f":121 -1
     (nil))

;; _400 = (integer(kind=8)) _399;

(insn 965 964 0 (set (reg:DI 486 [ _400 ])
        (sign_extend:DI (reg:SI 485 [ _399 ]))) "../src/bnsolv.f":121 -1
     (nil))

;; _401 = _398 + _400;

(insn 966 965 0 (parallel [
            (set (reg:DI 487 [ _401 ])
                (plus:DI (reg:DI 484 [ _398 ])
                    (reg:DI 486 [ _400 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":121 -1
     (nil))
Applying pattern match.pd:84, generic-match.c:11356
Applying pattern match.pd:84, generic-match.c:11356
Applying pattern match.pd:84, generic-match.c:11356

;; _402 = *a_685(D)[_401];

(insn 967 966 968 (set (reg/f:DI 947)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -648 [0xfffffffffffffd78])) [10 a+0 S8 A64])) "../src/bnsolv.f":121 -1
     (nil))

(insn 968 967 0 (set (reg:SF 488 [ _402 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 487 [ _401 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 947)) [3 *a_685(D) S4 A32])) "../src/bnsolv.f":121 -1
     (nil))

;; pivot_767 = 1.0e+0 / _402;

(insn 969 968 970 (set (reg:SF 949)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC4") [flags 0x2]) [3  S4 A32])) "../src/bnsolv.f":121 -1
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))

(insn 970 969 971 (set (reg:SF 948)
        (div:SF (reg:SF 949)
            (reg:SF 488 [ _402 ]))) "../src/bnsolv.f":121 -1
     (nil))

(insn 971 970 0 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -136 [0xffffffffffffff78])) [3 pivot+0 S4 A32])
        (reg:SF 948)) "../src/bnsolv.f":121 -1
     (nil))

;; _768 = *nb_615(D);

(insn 972 971 973 (set (reg/f:DI 950)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -680 [0xfffffffffffffd58])) [11 nb+0 S8 A64])) "../src/bnsolv.f":122 -1
     (nil))

(insn 973 972 0 (set (reg:SI 725 [ _768 ])
        (mem:SI (reg/f:DI 950) [1 *nb_615(D)+0 S4 A32])) "../src/bnsolv.f":122 -1
     (nil))

;; l_769 = 1;

(insn 974 973 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])
        (const_int 1 [0x1])) "../src/bnsolv.f":122 -1
     (nil))

;; Generating RTL for gimple basic block 51

;; _770 = l_585 > _768;

(insn 976 975 977 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])
            (reg:SI 725 [ _768 ]))) "../src/bnsolv.f":122 -1
     (nil))

(insn 977 976 0 (set (reg:QI 726 [ _770 ])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "../src/bnsolv.f":122 -1
     (nil))

;; if (_770 != 0)

(insn 978 977 979 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 726 [ _770 ])
            (const_int 0 [0]))) "../src/bnsolv.f":122 -1
     (nil))

(jump_insn 979 978 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "../src/bnsolv.f":122 -1
     (nil))

;; Generating RTL for gimple basic block 52

;; i.76_403 = i;

(insn 981 980 0 (set (reg:SI 489 [ i.76_403 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [1 i+0 S4 A64])) "../src/bnsolv.f":123 -1
     (nil))

;; _404 = (integer(kind=8)) i.76_403;

(insn 982 981 0 (set (reg:DI 490 [ _404 ])
        (sign_extend:DI (reg:SI 489 [ i.76_403 ]))) "../src/bnsolv.f":123 -1
     (nil))

;; _405 = stride.18_648 * _404;

(insn 983 982 0 (parallel [
            (set (reg:DI 491 [ _405 ])
                (mult:DI (reg:DI 675 [ stride.18_648 ])
                    (reg:DI 490 [ _404 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":123 -1
     (nil))

;; _406 = offset.19_655 + _405;

(insn 984 983 0 (parallel [
            (set (reg:DI 492 [ _406 ])
                (plus:DI (reg:DI 681 [ offset.19_655 ])
                    (reg:DI 491 [ _405 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":123 -1
     (nil))

;; _407 = (integer(kind=8)) l_585;

(insn 985 984 986 (set (reg:SI 951)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])) "../src/bnsolv.f":123 -1
     (nil))

(insn 986 985 0 (set (reg:DI 493 [ _407 ])
        (sign_extend:DI (reg:SI 951))) "../src/bnsolv.f":123 -1
     (nil))

;; _408 = stride.16_645 * _407;

(insn 987 986 0 (parallel [
            (set (reg:DI 494 [ _408 ])
                (mult:DI (reg:DI 673 [ stride.16_645 ])
                    (reg:DI 493 [ _407 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":123 -1
     (nil))

;; _409 = _406 + _408;

(insn 988 987 0 (parallel [
            (set (reg:DI 495 [ _409 ])
                (plus:DI (reg:DI 492 [ _406 ])
                    (reg:DI 494 [ _408 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":123 -1
     (nil))

;; _410 = *nb_615(D);

(insn 989 988 990 (set (reg/f:DI 952)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -680 [0xfffffffffffffd58])) [11 nb+0 S8 A64])) "../src/bnsolv.f":123 -1
     (nil))

(insn 990 989 0 (set (reg:SI 496 [ _410 ])
        (mem:SI (reg/f:DI 952) [1 *nb_615(D)+0 S4 A32])) "../src/bnsolv.f":123 -1
     (nil))

;; _411 = (integer(kind=8)) _410;

(insn 991 990 0 (set (reg:DI 497 [ _411 ])
        (sign_extend:DI (reg:SI 496 [ _410 ]))) "../src/bnsolv.f":123 -1
     (nil))

;; _412 = _409 + _411;

(insn 992 991 0 (parallel [
            (set (reg:DI 498 [ _412 ])
                (plus:DI (reg:DI 495 [ _409 ])
                    (reg:DI 497 [ _411 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":123 -1
     (nil))
Applying pattern match.pd:84, generic-match.c:11356
Applying pattern match.pd:84, generic-match.c:11356
Applying pattern match.pd:84, generic-match.c:11356

;; _413 = *c_686(D)[_412];

(insn 993 992 994 (set (reg/f:DI 953)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -664 [0xfffffffffffffd68])) [10 c+0 S8 A64])) "../src/bnsolv.f":123 -1
     (nil))

(insn 994 993 0 (set (reg:SF 499 [ _413 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 498 [ _412 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 953)) [3 *c_686(D) S4 A32])) "../src/bnsolv.f":123 -1
     (nil))

;; i.77_414 = i;

(insn 995 994 0 (set (reg:SI 500 [ i.77_414 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [1 i+0 S4 A64])) "../src/bnsolv.f":123 -1
     (nil))

;; _415 = (integer(kind=8)) i.77_414;

(insn 996 995 0 (set (reg:DI 501 [ _415 ])
        (sign_extend:DI (reg:SI 500 [ i.77_414 ]))) "../src/bnsolv.f":123 -1
     (nil))

;; _416 = stride.18_648 * _415;

(insn 997 996 0 (parallel [
            (set (reg:DI 502 [ _416 ])
                (mult:DI (reg:DI 675 [ stride.18_648 ])
                    (reg:DI 501 [ _415 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":123 -1
     (nil))

;; _417 = offset.19_655 + _416;

(insn 998 997 0 (parallel [
            (set (reg:DI 503 [ _417 ])
                (plus:DI (reg:DI 681 [ offset.19_655 ])
                    (reg:DI 502 [ _416 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":123 -1
     (nil))

;; _418 = (integer(kind=8)) l_585;

(insn 999 998 1000 (set (reg:SI 954)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])) "../src/bnsolv.f":123 -1
     (nil))

(insn 1000 999 0 (set (reg:DI 504 [ _418 ])
        (sign_extend:DI (reg:SI 954))) "../src/bnsolv.f":123 -1
     (nil))

;; _419 = stride.16_645 * _418;

(insn 1001 1000 0 (parallel [
            (set (reg:DI 505 [ _419 ])
                (mult:DI (reg:DI 673 [ stride.16_645 ])
                    (reg:DI 504 [ _418 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":123 -1
     (nil))

;; _420 = _417 + _419;

(insn 1002 1001 0 (parallel [
            (set (reg:DI 506 [ _420 ])
                (plus:DI (reg:DI 503 [ _417 ])
                    (reg:DI 505 [ _419 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":123 -1
     (nil))

;; _421 = *nb_615(D);

(insn 1003 1002 1004 (set (reg/f:DI 955)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -680 [0xfffffffffffffd58])) [11 nb+0 S8 A64])) "../src/bnsolv.f":123 -1
     (nil))

(insn 1004 1003 0 (set (reg:SI 507 [ _421 ])
        (mem:SI (reg/f:DI 955) [1 *nb_615(D)+0 S4 A32])) "../src/bnsolv.f":123 -1
     (nil))

;; _422 = (integer(kind=8)) _421;

(insn 1005 1004 0 (set (reg:DI 508 [ _422 ])
        (sign_extend:DI (reg:SI 507 [ _421 ]))) "../src/bnsolv.f":123 -1
     (nil))

;; _423 = _420 + _422;

(insn 1006 1005 0 (parallel [
            (set (reg:DI 509 [ _423 ])
                (plus:DI (reg:DI 506 [ _420 ])
                    (reg:DI 508 [ _422 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":123 -1
     (nil))

;; _424 = pivot_767 * _413;

(insn 1007 1006 0 (set (reg:SF 510 [ _424 ])
        (mult:SF (reg:SF 499 [ _413 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -136 [0xffffffffffffff78])) [3 pivot+0 S4 A32]))) "../src/bnsolv.f":123 -1
     (nil))
Applying pattern match.pd:84, generic-match.c:11356
Applying pattern match.pd:84, generic-match.c:11356
Applying pattern match.pd:84, generic-match.c:11356

;; *c_686(D)[_423] = _424;

(insn 1008 1007 1009 (set (reg/f:DI 956)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -664 [0xfffffffffffffd68])) [10 c+0 S8 A64])) "../src/bnsolv.f":123 -1
     (nil))

(insn 1009 1008 0 (set (mem:SF (plus:DI (mult:DI (reg:DI 509 [ _423 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 956)) [3 *c_686(D) S4 A32])
        (reg:SF 510 [ _424 ])) "../src/bnsolv.f":123 -1
     (nil))

;; l_772 = l_585 + 1;

(insn 1010 1009 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":122 -1
     (nil))

;; Generating RTL for gimple basic block 53

;; 

(code_label 1014 1013 1015 34 (nil) [0 uses])

(note 1015 1014 0 NOTE_INSN_BASIC_BLOCK)

;; _773 = *nrhs_689(D);

(insn 1016 1015 1017 (set (reg/f:DI 957)
        (mem/f/c:DI (reg/f:DI 81 virtual-incoming-args) [11 nrhs+0 S8 A64])) "../src/bnsolv.f":125 -1
     (nil))

(insn 1017 1016 0 (set (reg:SI 727 [ _773 ])
        (mem:SI (reg/f:DI 957) [1 *nrhs_689(D)+0 S4 A32])) "../src/bnsolv.f":125 -1
     (nil))

;; l_774 = 1;

(insn 1018 1017 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])
        (const_int 1 [0x1])) "../src/bnsolv.f":125 -1
     (nil))

;; Generating RTL for gimple basic block 54

;; _775 = l_586 > _773;

(insn 1020 1019 1021 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])
            (reg:SI 727 [ _773 ]))) "../src/bnsolv.f":125 -1
     (nil))

(insn 1021 1020 0 (set (reg:QI 728 [ _775 ])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "../src/bnsolv.f":125 -1
     (nil))

;; if (_775 != 0)

(insn 1022 1021 1023 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 728 [ _775 ])
            (const_int 0 [0]))) "../src/bnsolv.f":125 -1
     (nil))

(jump_insn 1023 1022 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "../src/bnsolv.f":125 -1
     (nil))

;; Generating RTL for gimple basic block 55

;; i.78_425 = i;

(insn 1025 1024 0 (set (reg:SI 511 [ i.78_425 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [1 i+0 S4 A64])) "../src/bnsolv.f":126 -1
     (nil))

;; _426 = (integer(kind=8)) i.78_425;

(insn 1026 1025 0 (set (reg:DI 512 [ _426 ])
        (sign_extend:DI (reg:SI 511 [ i.78_425 ]))) "../src/bnsolv.f":126 -1
     (nil))

;; _427 = stride.25_662 * _426;

(insn 1027 1026 0 (parallel [
            (set (reg:DI 513 [ _427 ])
                (mult:DI (reg:DI 685 [ stride.25_662 ])
                    (reg:DI 512 [ _426 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":126 -1
     (nil))

;; _428 = offset.26_669 + _427;

(insn 1028 1027 0 (parallel [
            (set (reg:DI 514 [ _428 ])
                (plus:DI (reg:DI 691 [ offset.26_669 ])
                    (reg:DI 513 [ _427 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":126 -1
     (nil))

;; _429 = (integer(kind=8)) l_586;

(insn 1029 1028 1030 (set (reg:SI 958)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])) "../src/bnsolv.f":126 -1
     (nil))

(insn 1030 1029 0 (set (reg:DI 515 [ _429 ])
        (sign_extend:DI (reg:SI 958))) "../src/bnsolv.f":126 -1
     (nil))

;; _430 = stride.23_658 * _429;

(insn 1031 1030 0 (parallel [
            (set (reg:DI 516 [ _430 ])
                (mult:DI (reg:DI 683 [ stride.23_658 ])
                    (reg:DI 515 [ _429 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":126 -1
     (nil))

;; _431 = _428 + _430;

(insn 1032 1031 0 (parallel [
            (set (reg:DI 517 [ _431 ])
                (plus:DI (reg:DI 514 [ _428 ])
                    (reg:DI 516 [ _430 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":126 -1
     (nil))

;; _432 = *nb_615(D);

(insn 1033 1032 1034 (set (reg/f:DI 959)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -680 [0xfffffffffffffd58])) [11 nb+0 S8 A64])) "../src/bnsolv.f":126 -1
     (nil))

(insn 1034 1033 0 (set (reg:SI 518 [ _432 ])
        (mem:SI (reg/f:DI 959) [1 *nb_615(D)+0 S4 A32])) "../src/bnsolv.f":126 -1
     (nil))

;; _433 = (integer(kind=8)) _432;

(insn 1035 1034 0 (set (reg:DI 519 [ _433 ])
        (sign_extend:DI (reg:SI 518 [ _432 ]))) "../src/bnsolv.f":126 -1
     (nil))

;; _434 = _431 + _433;

(insn 1036 1035 0 (parallel [
            (set (reg:DI 520 [ _434 ])
                (plus:DI (reg:DI 517 [ _431 ])
                    (reg:DI 519 [ _433 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":126 -1
     (nil))
Applying pattern match.pd:84, generic-match.c:11356
Applying pattern match.pd:84, generic-match.c:11356
Applying pattern match.pd:84, generic-match.c:11356

;; _435 = *r_693(D)[_434];

(insn 1037 1036 1038 (set (reg/f:DI 960)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -672 [0xfffffffffffffd60])) [10 r+0 S8 A64])) "../src/bnsolv.f":126 -1
     (nil))

(insn 1038 1037 0 (set (reg:SF 521 [ _435 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 520 [ _434 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 960)) [3 *r_693(D) S4 A32])) "../src/bnsolv.f":126 -1
     (nil))

;; i.79_436 = i;

(insn 1039 1038 0 (set (reg:SI 522 [ i.79_436 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [1 i+0 S4 A64])) "../src/bnsolv.f":126 -1
     (nil))

;; _437 = (integer(kind=8)) i.79_436;

(insn 1040 1039 0 (set (reg:DI 523 [ _437 ])
        (sign_extend:DI (reg:SI 522 [ i.79_436 ]))) "../src/bnsolv.f":126 -1
     (nil))

;; _438 = stride.25_662 * _437;

(insn 1041 1040 0 (parallel [
            (set (reg:DI 524 [ _438 ])
                (mult:DI (reg:DI 685 [ stride.25_662 ])
                    (reg:DI 523 [ _437 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":126 -1
     (nil))

;; _439 = offset.26_669 + _438;

(insn 1042 1041 0 (parallel [
            (set (reg:DI 525 [ _439 ])
                (plus:DI (reg:DI 691 [ offset.26_669 ])
                    (reg:DI 524 [ _438 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":126 -1
     (nil))

;; _440 = (integer(kind=8)) l_586;

(insn 1043 1042 1044 (set (reg:SI 961)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])) "../src/bnsolv.f":126 -1
     (nil))

(insn 1044 1043 0 (set (reg:DI 526 [ _440 ])
        (sign_extend:DI (reg:SI 961))) "../src/bnsolv.f":126 -1
     (nil))

;; _441 = stride.23_658 * _440;

(insn 1045 1044 0 (parallel [
            (set (reg:DI 527 [ _441 ])
                (mult:DI (reg:DI 683 [ stride.23_658 ])
                    (reg:DI 526 [ _440 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":126 -1
     (nil))

;; _442 = _439 + _441;

(insn 1046 1045 0 (parallel [
            (set (reg:DI 528 [ _442 ])
                (plus:DI (reg:DI 525 [ _439 ])
                    (reg:DI 527 [ _441 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":126 -1
     (nil))

;; _443 = *nb_615(D);

(insn 1047 1046 1048 (set (reg/f:DI 962)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -680 [0xfffffffffffffd58])) [11 nb+0 S8 A64])) "../src/bnsolv.f":126 -1
     (nil))

(insn 1048 1047 0 (set (reg:SI 529 [ _443 ])
        (mem:SI (reg/f:DI 962) [1 *nb_615(D)+0 S4 A32])) "../src/bnsolv.f":126 -1
     (nil))

;; _444 = (integer(kind=8)) _443;

(insn 1049 1048 0 (set (reg:DI 530 [ _444 ])
        (sign_extend:DI (reg:SI 529 [ _443 ]))) "../src/bnsolv.f":126 -1
     (nil))

;; _445 = _442 + _444;

(insn 1050 1049 0 (parallel [
            (set (reg:DI 531 [ _445 ])
                (plus:DI (reg:DI 528 [ _442 ])
                    (reg:DI 530 [ _444 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":126 -1
     (nil))

;; _446 = pivot_767 * _435;

(insn 1051 1050 0 (set (reg:SF 532 [ _446 ])
        (mult:SF (reg:SF 521 [ _435 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -136 [0xffffffffffffff78])) [3 pivot+0 S4 A32]))) "../src/bnsolv.f":126 -1
     (nil))
Applying pattern match.pd:84, generic-match.c:11356
Applying pattern match.pd:84, generic-match.c:11356
Applying pattern match.pd:84, generic-match.c:11356

;; *r_693(D)[_445] = _446;

(insn 1052 1051 1053 (set (reg/f:DI 963)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -672 [0xfffffffffffffd60])) [10 r+0 S8 A64])) "../src/bnsolv.f":126 -1
     (nil))

(insn 1053 1052 0 (set (mem:SF (plus:DI (mult:DI (reg:DI 531 [ _445 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 963)) [3 *r_693(D) S4 A32])
        (reg:SF 532 [ _446 ])) "../src/bnsolv.f":126 -1
     (nil))

;; l_777 = l_586 + 1;

(insn 1054 1053 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":125 -1
     (nil))

;; Generating RTL for gimple basic block 56

;; 

(code_label 1058 1057 1059 36 (nil) [0 uses])

(note 1059 1058 0 NOTE_INSN_BASIC_BLOCK)

;; _447 = *nb_615(D);

(insn 1060 1059 1061 (set (reg/f:DI 964)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -680 [0xfffffffffffffd58])) [11 nb+0 S8 A64])) "../src/bnsolv.f":130 -1
     (nil))

(insn 1061 1060 0 (set (reg:SI 533 [ _447 ])
        (mem:SI (reg/f:DI 964) [1 *nb_615(D)+0 S4 A32])) "../src/bnsolv.f":130 -1
     (nil))

;; _778 = _447 + -1;

(insn 1062 1061 0 (parallel [
            (set (reg:SI 729 [ _778 ])
                (plus:SI (reg:SI 533 [ _447 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":130 -1
     (nil))

;; kpiv_779 = _778;

(insn 1063 1062 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 kpiv+0 S4 A32])
        (reg:SI 729 [ _778 ])) "../src/bnsolv.f":130 -1
     (nil))

;; Generating RTL for gimple basic block 57

;; _780 = kpiv_574 <= 0;

(insn 1065 1064 1066 (set (reg:CCNO 17 flags)
        (compare:CCNO (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [1 kpiv+0 S4 A32])
            (const_int 0 [0]))) "../src/bnsolv.f":130 -1
     (nil))

(insn 1066 1065 0 (set (reg:QI 730 [ _780 ])
        (le:QI (reg:CCNO 17 flags)
            (const_int 0 [0]))) "../src/bnsolv.f":130 -1
     (nil))

;; if (_780 != 0)

(insn 1067 1066 1068 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 730 [ _780 ])
            (const_int 0 [0]))) "../src/bnsolv.f":130 -1
     (nil))

(jump_insn 1068 1067 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "../src/bnsolv.f":130 -1
     (nil))

;; Generating RTL for gimple basic block 58

;; kp1_781 = kpiv_574 + 1;

(insn 1073 1069 1074 (set (reg:SI 968)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 kpiv+0 S4 A32])) "../src/bnsolv.f":131 -1
     (nil))

(insn 1074 1073 1075 (parallel [
            (set (reg:SI 967)
                (plus:SI (reg:SI 968)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":131 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [1 kpiv+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))

(insn 1075 1074 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -132 [0xffffffffffffff7c])) [1 kp1+0 S4 A32])
        (reg:SI 967)) "../src/bnsolv.f":131 -1
     (nil))

;; _782 = kp1_781;

(insn 1076 1075 0 (set (reg:SI 731 [ _782 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -132 [0xffffffffffffff7c])) [1 kp1+0 S4 A32])) "../src/bnsolv.f":132 -1
     (nil))

;; _783 = *nb_615(D);

(insn 1077 1076 1078 (set (reg/f:DI 969)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -680 [0xfffffffffffffd58])) [11 nb+0 S8 A64])) "../src/bnsolv.f":132 -1
     (nil))

(insn 1078 1077 0 (set (reg:SI 732 [ _783 ])
        (mem:SI (reg/f:DI 969) [1 *nb_615(D)+0 S4 A32])) "../src/bnsolv.f":132 -1
     (nil))

;; k_784 = _782;

(insn 1079 1078 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 k+0 S4 A32])
        (reg:SI 731 [ _782 ])) "../src/bnsolv.f":132 -1
     (nil))

;; Generating RTL for gimple basic block 59

;; _785 = k_571 > _783;

(insn 1081 1080 1082 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [1 k+0 S4 A32])
            (reg:SI 732 [ _783 ]))) "../src/bnsolv.f":132 -1
     (nil))

(insn 1082 1081 0 (set (reg:QI 733 [ _785 ])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "../src/bnsolv.f":132 -1
     (nil))

;; if (_785 != 0)

(insn 1083 1082 1084 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 733 [ _785 ])
            (const_int 0 [0]))) "../src/bnsolv.f":132 -1
     (nil))

(jump_insn 1084 1083 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "../src/bnsolv.f":132 -1
     (nil))

;; Generating RTL for gimple basic block 60

;; i.80_448 = i;

(insn 1086 1085 0 (set (reg:SI 534 [ i.80_448 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [1 i+0 S4 A64])) "../src/bnsolv.f":133 -1
     (nil))

;; _449 = (integer(kind=8)) i.80_448;

(insn 1087 1086 0 (set (reg:DI 535 [ _449 ])
        (sign_extend:DI (reg:SI 534 [ i.80_448 ]))) "../src/bnsolv.f":133 -1
     (nil))

;; _450 = stride.4_635 * _449;

(insn 1088 1087 0 (parallel [
            (set (reg:DI 536 [ _450 ])
                (mult:DI (reg:DI 665 [ stride.4_635 ])
                    (reg:DI 535 [ _449 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":133 -1
     (nil))

;; _451 = offset.5_642 + _450;

(insn 1089 1088 0 (parallel [
            (set (reg:DI 537 [ _451 ])
                (plus:DI (reg:DI 671 [ offset.5_642 ])
                    (reg:DI 536 [ _450 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":133 -1
     (nil))

;; _452 = (integer(kind=8)) k_571;

(insn 1090 1089 1091 (set (reg:SI 970)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 k+0 S4 A32])) "../src/bnsolv.f":133 -1
     (nil))

(insn 1091 1090 0 (set (reg:DI 538 [ _452 ])
        (sign_extend:DI (reg:SI 970))) "../src/bnsolv.f":133 -1
     (nil))

;; _453 = stride.2_632 * _452;

(insn 1092 1091 0 (parallel [
            (set (reg:DI 539 [ _453 ])
                (mult:DI (reg:DI 663 [ stride.2_632 ])
                    (reg:DI 538 [ _452 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":133 -1
     (nil))

;; _454 = _451 + _453;

(insn 1093 1092 0 (parallel [
            (set (reg:DI 540 [ _454 ])
                (plus:DI (reg:DI 537 [ _451 ])
                    (reg:DI 539 [ _453 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":133 -1
     (nil))

;; _455 = (integer(kind=8)) kpiv_574;

(insn 1094 1093 1095 (set (reg:SI 971)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 kpiv+0 S4 A32])) "../src/bnsolv.f":133 -1
     (nil))

(insn 1095 1094 0 (set (reg:DI 541 [ _455 ])
        (sign_extend:DI (reg:SI 971))) "../src/bnsolv.f":133 -1
     (nil))

;; _456 = _454 + _455;

(insn 1096 1095 0 (parallel [
            (set (reg:DI 542 [ _456 ])
                (plus:DI (reg:DI 540 [ _454 ])
                    (reg:DI 541 [ _455 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":133 -1
     (nil))
Applying pattern match.pd:84, generic-match.c:11356
Applying pattern match.pd:84, generic-match.c:11356
Applying pattern match.pd:84, generic-match.c:11356

;; atmp_786 = *a_685(D)[_456];

(insn 1097 1096 1098 (set (reg/f:DI 972)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -648 [0xfffffffffffffd78])) [10 a+0 S8 A64])) "../src/bnsolv.f":133 -1
     (nil))

(insn 1098 1097 1099 (set (reg:SF 973)
        (mem:SF (plus:DI (mult:DI (reg:DI 542 [ _456 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 972)) [3 *a_685(D) S4 A32])) "../src/bnsolv.f":133 -1
     (nil))

(insn 1099 1098 0 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -144 [0xffffffffffffff70])) [3 atmp+0 S4 A32])
        (reg:SF 973)) "../src/bnsolv.f":133 -1
     (nil))

;; _787 = *nb_615(D);

(insn 1100 1099 1101 (set (reg/f:DI 974)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -680 [0xfffffffffffffd58])) [11 nb+0 S8 A64])) "../src/bnsolv.f":134 -1
     (nil))

(insn 1101 1100 0 (set (reg:SI 734 [ _787 ])
        (mem:SI (reg/f:DI 974) [1 *nb_615(D)+0 S4 A32])) "../src/bnsolv.f":134 -1
     (nil))

;; l_788 = 1;

(insn 1102 1101 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])
        (const_int 1 [0x1])) "../src/bnsolv.f":134 -1
     (nil))

;; Generating RTL for gimple basic block 61

;; _789 = l_587 > _787;

(insn 1104 1103 1105 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])
            (reg:SI 734 [ _787 ]))) "../src/bnsolv.f":134 -1
     (nil))

(insn 1105 1104 0 (set (reg:QI 735 [ _789 ])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "../src/bnsolv.f":134 -1
     (nil))

;; if (_789 != 0)

(insn 1106 1105 1107 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 735 [ _789 ])
            (const_int 0 [0]))) "../src/bnsolv.f":134 -1
     (nil))

(jump_insn 1107 1106 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "../src/bnsolv.f":134 -1
     (nil))

;; Generating RTL for gimple basic block 62

;; i.81_457 = i;

(insn 1109 1108 0 (set (reg:SI 543 [ i.81_457 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [1 i+0 S4 A64])) "../src/bnsolv.f":135 -1
     (nil))

;; _458 = (integer(kind=8)) i.81_457;

(insn 1110 1109 0 (set (reg:DI 544 [ _458 ])
        (sign_extend:DI (reg:SI 543 [ i.81_457 ]))) "../src/bnsolv.f":135 -1
     (nil))

;; _459 = stride.18_648 * _458;

(insn 1111 1110 0 (parallel [
            (set (reg:DI 545 [ _459 ])
                (mult:DI (reg:DI 675 [ stride.18_648 ])
                    (reg:DI 544 [ _458 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":135 -1
     (nil))

;; _460 = offset.19_655 + _459;

(insn 1112 1111 0 (parallel [
            (set (reg:DI 546 [ _460 ])
                (plus:DI (reg:DI 681 [ offset.19_655 ])
                    (reg:DI 545 [ _459 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":135 -1
     (nil))

;; _461 = (integer(kind=8)) l_587;

(insn 1113 1112 1114 (set (reg:SI 975)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])) "../src/bnsolv.f":135 -1
     (nil))

(insn 1114 1113 0 (set (reg:DI 547 [ _461 ])
        (sign_extend:DI (reg:SI 975))) "../src/bnsolv.f":135 -1
     (nil))

;; _462 = stride.16_645 * _461;

(insn 1115 1114 0 (parallel [
            (set (reg:DI 548 [ _462 ])
                (mult:DI (reg:DI 673 [ stride.16_645 ])
                    (reg:DI 547 [ _461 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":135 -1
     (nil))

;; _463 = _460 + _462;

(insn 1116 1115 0 (parallel [
            (set (reg:DI 549 [ _463 ])
                (plus:DI (reg:DI 546 [ _460 ])
                    (reg:DI 548 [ _462 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":135 -1
     (nil))

;; _464 = (integer(kind=8)) kpiv_574;

(insn 1117 1116 1118 (set (reg:SI 976)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 kpiv+0 S4 A32])) "../src/bnsolv.f":135 -1
     (nil))

(insn 1118 1117 0 (set (reg:DI 550 [ _464 ])
        (sign_extend:DI (reg:SI 976))) "../src/bnsolv.f":135 -1
     (nil))

;; _465 = _463 + _464;

(insn 1119 1118 0 (parallel [
            (set (reg:DI 551 [ _465 ])
                (plus:DI (reg:DI 549 [ _463 ])
                    (reg:DI 550 [ _464 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":135 -1
     (nil))
Applying pattern match.pd:84, generic-match.c:11356
Applying pattern match.pd:84, generic-match.c:11356
Applying pattern match.pd:84, generic-match.c:11356

;; _466 = *c_686(D)[_465];

(insn 1120 1119 1121 (set (reg/f:DI 977)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -664 [0xfffffffffffffd68])) [10 c+0 S8 A64])) "../src/bnsolv.f":135 -1
     (nil))

(insn 1121 1120 0 (set (reg:SF 552 [ _466 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 551 [ _465 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 977)) [3 *c_686(D) S4 A32])) "../src/bnsolv.f":135 -1
     (nil))

;; i.82_467 = i;

(insn 1122 1121 0 (set (reg:SI 553 [ i.82_467 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [1 i+0 S4 A64])) "../src/bnsolv.f":135 -1
     (nil))

;; _468 = (integer(kind=8)) i.82_467;

(insn 1123 1122 0 (set (reg:DI 554 [ _468 ])
        (sign_extend:DI (reg:SI 553 [ i.82_467 ]))) "../src/bnsolv.f":135 -1
     (nil))

;; _469 = stride.18_648 * _468;

(insn 1124 1123 0 (parallel [
            (set (reg:DI 555 [ _469 ])
                (mult:DI (reg:DI 675 [ stride.18_648 ])
                    (reg:DI 554 [ _468 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":135 -1
     (nil))

;; _470 = offset.19_655 + _469;

(insn 1125 1124 0 (parallel [
            (set (reg:DI 556 [ _470 ])
                (plus:DI (reg:DI 681 [ offset.19_655 ])
                    (reg:DI 555 [ _469 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":135 -1
     (nil))

;; _471 = (integer(kind=8)) l_587;

(insn 1126 1125 1127 (set (reg:SI 978)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])) "../src/bnsolv.f":135 -1
     (nil))

(insn 1127 1126 0 (set (reg:DI 557 [ _471 ])
        (sign_extend:DI (reg:SI 978))) "../src/bnsolv.f":135 -1
     (nil))

;; _472 = stride.16_645 * _471;

(insn 1128 1127 0 (parallel [
            (set (reg:DI 558 [ _472 ])
                (mult:DI (reg:DI 673 [ stride.16_645 ])
                    (reg:DI 557 [ _471 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":135 -1
     (nil))

;; _473 = _470 + _472;

(insn 1129 1128 0 (parallel [
            (set (reg:DI 559 [ _473 ])
                (plus:DI (reg:DI 556 [ _470 ])
                    (reg:DI 558 [ _472 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":135 -1
     (nil))

;; _474 = (integer(kind=8)) k_571;

(insn 1130 1129 1131 (set (reg:SI 979)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 k+0 S4 A32])) "../src/bnsolv.f":135 -1
     (nil))

(insn 1131 1130 0 (set (reg:DI 560 [ _474 ])
        (sign_extend:DI (reg:SI 979))) "../src/bnsolv.f":135 -1
     (nil))

;; _475 = _473 + _474;

(insn 1132 1131 0 (parallel [
            (set (reg:DI 561 [ _475 ])
                (plus:DI (reg:DI 559 [ _473 ])
                    (reg:DI 560 [ _474 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":135 -1
     (nil))
Applying pattern match.pd:84, generic-match.c:11356
Applying pattern match.pd:84, generic-match.c:11356
Applying pattern match.pd:84, generic-match.c:11356

;; _476 = *c_686(D)[_475];

(insn 1133 1132 1134 (set (reg/f:DI 980)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -664 [0xfffffffffffffd68])) [10 c+0 S8 A64])) "../src/bnsolv.f":135 -1
     (nil))

(insn 1134 1133 0 (set (reg:SF 562 [ _476 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 561 [ _475 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 980)) [3 *c_686(D) S4 A32])) "../src/bnsolv.f":135 -1
     (nil))

;; _477 = atmp_786 * _476;

(insn 1135 1134 0 (set (reg:SF 563 [ _477 ])
        (mult:SF (reg:SF 562 [ _476 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -144 [0xffffffffffffff70])) [3 atmp+0 S4 A32]))) "../src/bnsolv.f":135 -1
     (nil))

;; i.83_478 = i;

(insn 1136 1135 0 (set (reg:SI 564 [ i.83_478 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [1 i+0 S4 A64])) "../src/bnsolv.f":135 -1
     (nil))

;; _479 = (integer(kind=8)) i.83_478;

(insn 1137 1136 0 (set (reg:DI 565 [ _479 ])
        (sign_extend:DI (reg:SI 564 [ i.83_478 ]))) "../src/bnsolv.f":135 -1
     (nil))

;; _480 = stride.18_648 * _479;

(insn 1138 1137 0 (parallel [
            (set (reg:DI 566 [ _480 ])
                (mult:DI (reg:DI 675 [ stride.18_648 ])
                    (reg:DI 565 [ _479 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":135 -1
     (nil))

;; _481 = offset.19_655 + _480;

(insn 1139 1138 0 (parallel [
            (set (reg:DI 567 [ _481 ])
                (plus:DI (reg:DI 681 [ offset.19_655 ])
                    (reg:DI 566 [ _480 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":135 -1
     (nil))

;; _482 = (integer(kind=8)) l_587;

(insn 1140 1139 1141 (set (reg:SI 981)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])) "../src/bnsolv.f":135 -1
     (nil))

(insn 1141 1140 0 (set (reg:DI 568 [ _482 ])
        (sign_extend:DI (reg:SI 981))) "../src/bnsolv.f":135 -1
     (nil))

;; _483 = stride.16_645 * _482;

(insn 1142 1141 0 (parallel [
            (set (reg:DI 569 [ _483 ])
                (mult:DI (reg:DI 673 [ stride.16_645 ])
                    (reg:DI 568 [ _482 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":135 -1
     (nil))

;; _484 = _481 + _483;

(insn 1143 1142 0 (parallel [
            (set (reg:DI 570 [ _484 ])
                (plus:DI (reg:DI 567 [ _481 ])
                    (reg:DI 569 [ _483 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":135 -1
     (nil))

;; _485 = (integer(kind=8)) kpiv_574;

(insn 1144 1143 1145 (set (reg:SI 982)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 kpiv+0 S4 A32])) "../src/bnsolv.f":135 -1
     (nil))

(insn 1145 1144 0 (set (reg:DI 571 [ _485 ])
        (sign_extend:DI (reg:SI 982))) "../src/bnsolv.f":135 -1
     (nil))

;; _486 = _484 + _485;

(insn 1146 1145 0 (parallel [
            (set (reg:DI 572 [ _486 ])
                (plus:DI (reg:DI 570 [ _484 ])
                    (reg:DI 571 [ _485 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":135 -1
     (nil))

;; _487 = _466 - _477;

(insn 1147 1146 0 (set (reg:SF 573 [ _487 ])
        (minus:SF (reg:SF 552 [ _466 ])
            (reg:SF 563 [ _477 ]))) "../src/bnsolv.f":135 -1
     (nil))
Applying pattern match.pd:84, generic-match.c:11356
Applying pattern match.pd:84, generic-match.c:11356
Applying pattern match.pd:84, generic-match.c:11356

;; *c_686(D)[_486] = _487;

(insn 1148 1147 1149 (set (reg/f:DI 983)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -664 [0xfffffffffffffd68])) [10 c+0 S8 A64])) "../src/bnsolv.f":135 -1
     (nil))

(insn 1149 1148 0 (set (mem:SF (plus:DI (mult:DI (reg:DI 572 [ _486 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 983)) [3 *c_686(D) S4 A32])
        (reg:SF 573 [ _487 ])) "../src/bnsolv.f":135 -1
     (nil))

;; l_791 = l_587 + 1;

(insn 1150 1149 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":134 -1
     (nil))

;; Generating RTL for gimple basic block 63

;; 

(code_label 1154 1153 1155 40 (nil) [0 uses])

(note 1155 1154 0 NOTE_INSN_BASIC_BLOCK)

;; _792 = *nrhs_689(D);

(insn 1156 1155 1157 (set (reg/f:DI 984)
        (mem/f/c:DI (reg/f:DI 81 virtual-incoming-args) [11 nrhs+0 S8 A64])) "../src/bnsolv.f":137 -1
     (nil))

(insn 1157 1156 0 (set (reg:SI 736 [ _792 ])
        (mem:SI (reg/f:DI 984) [1 *nrhs_689(D)+0 S4 A32])) "../src/bnsolv.f":137 -1
     (nil))

;; l_793 = 1;

(insn 1158 1157 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])
        (const_int 1 [0x1])) "../src/bnsolv.f":137 -1
     (nil))

;; Generating RTL for gimple basic block 64

;; _794 = l_588 > _792;

(insn 1160 1159 1161 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])
            (reg:SI 736 [ _792 ]))) "../src/bnsolv.f":137 -1
     (nil))

(insn 1161 1160 0 (set (reg:QI 737 [ _794 ])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "../src/bnsolv.f":137 -1
     (nil))

;; if (_794 != 0)

(insn 1162 1161 1163 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 737 [ _794 ])
            (const_int 0 [0]))) "../src/bnsolv.f":137 -1
     (nil))

(jump_insn 1163 1162 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "../src/bnsolv.f":137 -1
     (nil))

;; Generating RTL for gimple basic block 65

;; i.84_488 = i;

(insn 1165 1164 0 (set (reg:SI 574 [ i.84_488 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [1 i+0 S4 A64])) "../src/bnsolv.f":138 -1
     (nil))

;; _489 = (integer(kind=8)) i.84_488;

(insn 1166 1165 0 (set (reg:DI 575 [ _489 ])
        (sign_extend:DI (reg:SI 574 [ i.84_488 ]))) "../src/bnsolv.f":138 -1
     (nil))

;; _490 = stride.25_662 * _489;

(insn 1167 1166 0 (parallel [
            (set (reg:DI 576 [ _490 ])
                (mult:DI (reg:DI 685 [ stride.25_662 ])
                    (reg:DI 575 [ _489 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":138 -1
     (nil))

;; _491 = offset.26_669 + _490;

(insn 1168 1167 0 (parallel [
            (set (reg:DI 577 [ _491 ])
                (plus:DI (reg:DI 691 [ offset.26_669 ])
                    (reg:DI 576 [ _490 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":138 -1
     (nil))

;; _492 = (integer(kind=8)) l_588;

(insn 1169 1168 1170 (set (reg:SI 985)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])) "../src/bnsolv.f":138 -1
     (nil))

(insn 1170 1169 0 (set (reg:DI 578 [ _492 ])
        (sign_extend:DI (reg:SI 985))) "../src/bnsolv.f":138 -1
     (nil))

;; _493 = stride.23_658 * _492;

(insn 1171 1170 0 (parallel [
            (set (reg:DI 579 [ _493 ])
                (mult:DI (reg:DI 683 [ stride.23_658 ])
                    (reg:DI 578 [ _492 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":138 -1
     (nil))

;; _494 = _491 + _493;

(insn 1172 1171 0 (parallel [
            (set (reg:DI 580 [ _494 ])
                (plus:DI (reg:DI 577 [ _491 ])
                    (reg:DI 579 [ _493 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":138 -1
     (nil))

;; _495 = (integer(kind=8)) kpiv_574;

(insn 1173 1172 1174 (set (reg:SI 986)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 kpiv+0 S4 A32])) "../src/bnsolv.f":138 -1
     (nil))

(insn 1174 1173 0 (set (reg:DI 581 [ _495 ])
        (sign_extend:DI (reg:SI 986))) "../src/bnsolv.f":138 -1
     (nil))

;; _496 = _494 + _495;

(insn 1175 1174 0 (parallel [
            (set (reg:DI 582 [ _496 ])
                (plus:DI (reg:DI 580 [ _494 ])
                    (reg:DI 581 [ _495 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":138 -1
     (nil))
Applying pattern match.pd:84, generic-match.c:11356
Applying pattern match.pd:84, generic-match.c:11356
Applying pattern match.pd:84, generic-match.c:11356

;; _497 = *r_693(D)[_496];

(insn 1176 1175 1177 (set (reg/f:DI 987)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -672 [0xfffffffffffffd60])) [10 r+0 S8 A64])) "../src/bnsolv.f":138 -1
     (nil))

(insn 1177 1176 0 (set (reg:SF 583 [ _497 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 582 [ _496 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 987)) [3 *r_693(D) S4 A32])) "../src/bnsolv.f":138 -1
     (nil))

;; i.85_498 = i;

(insn 1178 1177 0 (set (reg:SI 584 [ i.85_498 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [1 i+0 S4 A64])) "../src/bnsolv.f":138 -1
     (nil))

;; _499 = (integer(kind=8)) i.85_498;

(insn 1179 1178 0 (set (reg:DI 585 [ _499 ])
        (sign_extend:DI (reg:SI 584 [ i.85_498 ]))) "../src/bnsolv.f":138 -1
     (nil))

;; _500 = stride.25_662 * _499;

(insn 1180 1179 0 (parallel [
            (set (reg:DI 586 [ _500 ])
                (mult:DI (reg:DI 685 [ stride.25_662 ])
                    (reg:DI 585 [ _499 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":138 -1
     (nil))

;; _501 = offset.26_669 + _500;

(insn 1181 1180 0 (parallel [
            (set (reg:DI 587 [ _501 ])
                (plus:DI (reg:DI 691 [ offset.26_669 ])
                    (reg:DI 586 [ _500 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":138 -1
     (nil))

;; _502 = (integer(kind=8)) l_588;

(insn 1182 1181 1183 (set (reg:SI 988)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])) "../src/bnsolv.f":138 -1
     (nil))

(insn 1183 1182 0 (set (reg:DI 588 [ _502 ])
        (sign_extend:DI (reg:SI 988))) "../src/bnsolv.f":138 -1
     (nil))

;; _503 = stride.23_658 * _502;

(insn 1184 1183 0 (parallel [
            (set (reg:DI 589 [ _503 ])
                (mult:DI (reg:DI 683 [ stride.23_658 ])
                    (reg:DI 588 [ _502 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":138 -1
     (nil))

;; _504 = _501 + _503;

(insn 1185 1184 0 (parallel [
            (set (reg:DI 590 [ _504 ])
                (plus:DI (reg:DI 587 [ _501 ])
                    (reg:DI 589 [ _503 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":138 -1
     (nil))

;; _505 = (integer(kind=8)) k_571;

(insn 1186 1185 1187 (set (reg:SI 989)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 k+0 S4 A32])) "../src/bnsolv.f":138 -1
     (nil))

(insn 1187 1186 0 (set (reg:DI 591 [ _505 ])
        (sign_extend:DI (reg:SI 989))) "../src/bnsolv.f":138 -1
     (nil))

;; _506 = _504 + _505;

(insn 1188 1187 0 (parallel [
            (set (reg:DI 592 [ _506 ])
                (plus:DI (reg:DI 590 [ _504 ])
                    (reg:DI 591 [ _505 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":138 -1
     (nil))
Applying pattern match.pd:84, generic-match.c:11356
Applying pattern match.pd:84, generic-match.c:11356
Applying pattern match.pd:84, generic-match.c:11356

;; _507 = *r_693(D)[_506];

(insn 1189 1188 1190 (set (reg/f:DI 990)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -672 [0xfffffffffffffd60])) [10 r+0 S8 A64])) "../src/bnsolv.f":138 -1
     (nil))

(insn 1190 1189 0 (set (reg:SF 593 [ _507 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 592 [ _506 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 990)) [3 *r_693(D) S4 A32])) "../src/bnsolv.f":138 -1
     (nil))

;; _508 = atmp_786 * _507;

(insn 1191 1190 0 (set (reg:SF 594 [ _508 ])
        (mult:SF (reg:SF 593 [ _507 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -144 [0xffffffffffffff70])) [3 atmp+0 S4 A32]))) "../src/bnsolv.f":138 -1
     (nil))

;; i.86_509 = i;

(insn 1192 1191 0 (set (reg:SI 595 [ i.86_509 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [1 i+0 S4 A64])) "../src/bnsolv.f":138 -1
     (nil))

;; _510 = (integer(kind=8)) i.86_509;

(insn 1193 1192 0 (set (reg:DI 596 [ _510 ])
        (sign_extend:DI (reg:SI 595 [ i.86_509 ]))) "../src/bnsolv.f":138 -1
     (nil))

;; _511 = stride.25_662 * _510;

(insn 1194 1193 0 (parallel [
            (set (reg:DI 597 [ _511 ])
                (mult:DI (reg:DI 685 [ stride.25_662 ])
                    (reg:DI 596 [ _510 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":138 -1
     (nil))

;; _512 = offset.26_669 + _511;

(insn 1195 1194 0 (parallel [
            (set (reg:DI 598 [ _512 ])
                (plus:DI (reg:DI 691 [ offset.26_669 ])
                    (reg:DI 597 [ _511 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":138 -1
     (nil))

;; _513 = (integer(kind=8)) l_588;

(insn 1196 1195 1197 (set (reg:SI 991)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])) "../src/bnsolv.f":138 -1
     (nil))

(insn 1197 1196 0 (set (reg:DI 599 [ _513 ])
        (sign_extend:DI (reg:SI 991))) "../src/bnsolv.f":138 -1
     (nil))

;; _514 = stride.23_658 * _513;

(insn 1198 1197 0 (parallel [
            (set (reg:DI 600 [ _514 ])
                (mult:DI (reg:DI 683 [ stride.23_658 ])
                    (reg:DI 599 [ _513 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":138 -1
     (nil))

;; _515 = _512 + _514;

(insn 1199 1198 0 (parallel [
            (set (reg:DI 601 [ _515 ])
                (plus:DI (reg:DI 598 [ _512 ])
                    (reg:DI 600 [ _514 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":138 -1
     (nil))

;; _516 = (integer(kind=8)) kpiv_574;

(insn 1200 1199 1201 (set (reg:SI 992)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 kpiv+0 S4 A32])) "../src/bnsolv.f":138 -1
     (nil))

(insn 1201 1200 0 (set (reg:DI 602 [ _516 ])
        (sign_extend:DI (reg:SI 992))) "../src/bnsolv.f":138 -1
     (nil))

;; _517 = _515 + _516;

(insn 1202 1201 0 (parallel [
            (set (reg:DI 603 [ _517 ])
                (plus:DI (reg:DI 601 [ _515 ])
                    (reg:DI 602 [ _516 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":138 -1
     (nil))

;; _518 = _497 - _508;

(insn 1203 1202 0 (set (reg:SF 604 [ _518 ])
        (minus:SF (reg:SF 583 [ _497 ])
            (reg:SF 594 [ _508 ]))) "../src/bnsolv.f":138 -1
     (nil))
Applying pattern match.pd:84, generic-match.c:11356
Applying pattern match.pd:84, generic-match.c:11356
Applying pattern match.pd:84, generic-match.c:11356

;; *r_693(D)[_517] = _518;

(insn 1204 1203 1205 (set (reg/f:DI 993)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -672 [0xfffffffffffffd60])) [10 r+0 S8 A64])) "../src/bnsolv.f":138 -1
     (nil))

(insn 1205 1204 0 (set (mem:SF (plus:DI (mult:DI (reg:DI 603 [ _517 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 993)) [3 *r_693(D) S4 A32])
        (reg:SF 604 [ _518 ])) "../src/bnsolv.f":138 -1
     (nil))

;; l_796 = l_588 + 1;

(insn 1206 1205 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":137 -1
     (nil))

;; Generating RTL for gimple basic block 66

;; 

(code_label 1210 1209 1211 42 (nil) [0 uses])

(note 1211 1210 0 NOTE_INSN_BASIC_BLOCK)

;; k_797 = k_571 + 1;

(insn 1212 1211 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [1 k+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [1 k+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":132 -1
     (nil))

;; Generating RTL for gimple basic block 67

;; 

(code_label 1216 1215 1217 39 (nil) [0 uses])

(note 1217 1216 0 NOTE_INSN_BASIC_BLOCK)

;; kpiv_798 = kpiv_574 + -1;

(insn 1218 1217 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -12 [0xfffffffffffffff4])) [1 kpiv+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -12 [0xfffffffffffffff4])) [1 kpiv+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":130 -1
     (nil))

;; Generating RTL for gimple basic block 68

;; 

(code_label 1222 1221 1223 38 (nil) [0 uses])

(note 1223 1222 0 NOTE_INSN_BASIC_BLOCK)

;; i.87_519 = i;

(insn 1224 1223 0 (set (reg:SI 605 [ i.87_519 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [1 i+0 S4 A64])) "../src/bnsolv.f":37 -1
     (nil))

;; _520 = i.87_519 + 1;

(insn 1225 1224 0 (parallel [
            (set (reg:SI 606 [ _520 ])
                (plus:SI (reg:SI 605 [ i.87_519 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":37 -1
     (nil))

;; i = _520;

(insn 1226 1225 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [1 i+0 S4 A64])
        (reg:SI 606 [ _520 ])) "../src/bnsolv.f":37 -1
     (nil))

;; Generating RTL for gimple basic block 69

;; 

(code_label 1230 1229 1231 2 (nil) [0 uses])

(note 1231 1230 0 NOTE_INSN_BASIC_BLOCK)

;; _521 = *n_622(D);

(insn 1232 1231 1233 (set (reg/f:DI 994)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -688 [0xfffffffffffffd50])) [11 n+0 S8 A64])) "../src/bnsolv.f":145 -1
     (nil))

(insn 1233 1232 0 (set (reg:SI 607 [ _521 ])
        (mem:SI (reg/f:DI 994) [1 *n_622(D)+0 S4 A32])) "../src/bnsolv.f":145 -1
     (nil))

;; _810 = _521 + -1;

(insn 1234 1233 0 (parallel [
            (set (reg:SI 738 [ _810 ])
                (plus:SI (reg:SI 607 [ _521 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":145 -1
     (nil))

;; i = _810;

(insn 1235 1234 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [1 i+0 S4 A64])
        (reg:SI 738 [ _810 ])) "../src/bnsolv.f":145 -1
     (nil))

;; Generating RTL for gimple basic block 70

;; i.88_522 = i;

(insn 1237 1236 0 (set (reg:SI 608 [ i.88_522 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [1 i+0 S4 A64])) "../src/bnsolv.f":145 -1
     (nil))

;; _812 = i.88_522 <= 0;

(insn 1238 1237 1239 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 608 [ i.88_522 ])
            (const_int 0 [0]))) "../src/bnsolv.f":145 -1
     (nil))

(insn 1239 1238 0 (set (reg:QI 739 [ _812 ])
        (le:QI (reg:CCNO 17 flags)
            (const_int 0 [0]))) "../src/bnsolv.f":145 -1
     (nil))

;; if (_812 != 0)

(insn 1240 1239 1241 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 739 [ _812 ])
            (const_int 0 [0]))) "../src/bnsolv.f":145 -1
     (nil))

(jump_insn 1241 1240 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "../src/bnsolv.f":145 -1
     (nil))

;; Generating RTL for gimple basic block 71

;; i.89_523 = i;

(insn 1243 1242 0 (set (reg:SI 609 [ i.89_523 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [1 i+0 S4 A64])) "../src/bnsolv.f":146 -1
     (nil))

;; ip_813 = i.89_523 + 1;

(insn 1244 1243 1245 (parallel [
            (set (reg:SI 995)
                (plus:SI (reg:SI 609 [ i.89_523 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":146 -1
     (nil))

(insn 1245 1244 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -148 [0xffffffffffffff6c])) [1 ip+0 S4 A32])
        (reg:SI 995)) "../src/bnsolv.f":146 -1
     (nil))

;; _814 = *nrhs_689(D);

(insn 1246 1245 1247 (set (reg/f:DI 996)
        (mem/f/c:DI (reg/f:DI 81 virtual-incoming-args) [11 nrhs+0 S8 A64])) "../src/bnsolv.f":147 -1
     (nil))

(insn 1247 1246 0 (set (reg:SI 740 [ _814 ])
        (mem:SI (reg/f:DI 996) [1 *nrhs_689(D)+0 S4 A32])) "../src/bnsolv.f":147 -1
     (nil))

;; l_815 = 1;

(insn 1248 1247 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])
        (const_int 1 [0x1])) "../src/bnsolv.f":147 -1
     (nil))

;; Generating RTL for gimple basic block 72

;; _816 = l_589 > _814;

(insn 1250 1249 1251 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])
            (reg:SI 740 [ _814 ]))) "../src/bnsolv.f":147 -1
     (nil))

(insn 1251 1250 0 (set (reg:QI 741 [ _816 ])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "../src/bnsolv.f":147 -1
     (nil))

;; if (_816 != 0)

(insn 1252 1251 1253 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 741 [ _816 ])
            (const_int 0 [0]))) "../src/bnsolv.f":147 -1
     (nil))

(jump_insn 1253 1252 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "../src/bnsolv.f":147 -1
     (nil))

;; Generating RTL for gimple basic block 73

;; _817 = *nb_615(D);

(insn 1255 1254 1256 (set (reg/f:DI 997)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -680 [0xfffffffffffffd58])) [11 nb+0 S8 A64])) "../src/bnsolv.f":148 -1
     (nil))

(insn 1256 1255 0 (set (reg:SI 742 [ _817 ])
        (mem:SI (reg/f:DI 997) [1 *nb_615(D)+0 S4 A32])) "../src/bnsolv.f":148 -1
     (nil))

;; k_818 = 1;

(insn 1257 1256 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 k+0 S4 A32])
        (const_int 1 [0x1])) "../src/bnsolv.f":148 -1
     (nil))

;; Generating RTL for gimple basic block 74

;; _819 = k_572 > _817;

(insn 1259 1258 1260 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [1 k+0 S4 A32])
            (reg:SI 742 [ _817 ]))) "../src/bnsolv.f":148 -1
     (nil))

(insn 1260 1259 0 (set (reg:QI 743 [ _819 ])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "../src/bnsolv.f":148 -1
     (nil))

;; if (_819 != 0)

(insn 1261 1260 1262 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 743 [ _819 ])
            (const_int 0 [0]))) "../src/bnsolv.f":148 -1
     (nil))

(jump_insn 1262 1261 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "../src/bnsolv.f":148 -1
     (nil))

;; Generating RTL for gimple basic block 75

;; _820 = *nb_615(D);

(insn 1264 1263 1265 (set (reg/f:DI 998)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -680 [0xfffffffffffffd58])) [11 nb+0 S8 A64])) "../src/bnsolv.f":149 -1
     (nil))

(insn 1265 1264 0 (set (reg:SI 744 [ _820 ])
        (mem:SI (reg/f:DI 998) [1 *nb_615(D)+0 S4 A32])) "../src/bnsolv.f":149 -1
     (nil))

;; j_821 = 1;

(insn 1266 1265 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 j+0 S4 A32])
        (const_int 1 [0x1])) "../src/bnsolv.f":149 -1
     (nil))

;; Generating RTL for gimple basic block 76

;; _822 = j_567 > _820;

(insn 1268 1267 1269 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 j+0 S4 A32])
            (reg:SI 744 [ _820 ]))) "../src/bnsolv.f":149 -1
     (nil))

(insn 1269 1268 0 (set (reg:QI 745 [ _822 ])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "../src/bnsolv.f":149 -1
     (nil))

;; if (_822 != 0)

(insn 1270 1269 1271 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 745 [ _822 ])
            (const_int 0 [0]))) "../src/bnsolv.f":149 -1
     (nil))

(jump_insn 1271 1270 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "../src/bnsolv.f":149 -1
     (nil))

;; Generating RTL for gimple basic block 77

;; i.90_524 = i;

(insn 1273 1272 0 (set (reg:SI 610 [ i.90_524 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [1 i+0 S4 A64])) "../src/bnsolv.f":150 -1
     (nil))

;; _525 = (integer(kind=8)) i.90_524;

(insn 1274 1273 0 (set (reg:DI 611 [ _525 ])
        (sign_extend:DI (reg:SI 610 [ i.90_524 ]))) "../src/bnsolv.f":150 -1
     (nil))

;; _526 = stride.25_662 * _525;

(insn 1275 1274 0 (parallel [
            (set (reg:DI 612 [ _526 ])
                (mult:DI (reg:DI 685 [ stride.25_662 ])
                    (reg:DI 611 [ _525 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":150 -1
     (nil))

;; _527 = offset.26_669 + _526;

(insn 1276 1275 0 (parallel [
            (set (reg:DI 613 [ _527 ])
                (plus:DI (reg:DI 691 [ offset.26_669 ])
                    (reg:DI 612 [ _526 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":150 -1
     (nil))

;; _528 = (integer(kind=8)) l_589;

(insn 1277 1276 1278 (set (reg:SI 999)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])) "../src/bnsolv.f":150 -1
     (nil))

(insn 1278 1277 0 (set (reg:DI 614 [ _528 ])
        (sign_extend:DI (reg:SI 999))) "../src/bnsolv.f":150 -1
     (nil))

;; _529 = stride.23_658 * _528;

(insn 1279 1278 0 (parallel [
            (set (reg:DI 615 [ _529 ])
                (mult:DI (reg:DI 683 [ stride.23_658 ])
                    (reg:DI 614 [ _528 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":150 -1
     (nil))

;; _530 = _527 + _529;

(insn 1280 1279 0 (parallel [
            (set (reg:DI 616 [ _530 ])
                (plus:DI (reg:DI 613 [ _527 ])
                    (reg:DI 615 [ _529 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":150 -1
     (nil))

;; _531 = (integer(kind=8)) k_572;

(insn 1281 1280 1282 (set (reg:SI 1000)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 k+0 S4 A32])) "../src/bnsolv.f":150 -1
     (nil))

(insn 1282 1281 0 (set (reg:DI 617 [ _531 ])
        (sign_extend:DI (reg:SI 1000))) "../src/bnsolv.f":150 -1
     (nil))

;; _532 = _530 + _531;

(insn 1283 1282 0 (parallel [
            (set (reg:DI 618 [ _532 ])
                (plus:DI (reg:DI 616 [ _530 ])
                    (reg:DI 617 [ _531 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":150 -1
     (nil))
Applying pattern match.pd:84, generic-match.c:11356
Applying pattern match.pd:84, generic-match.c:11356
Applying pattern match.pd:84, generic-match.c:11356

;; _533 = *r_693(D)[_532];

(insn 1284 1283 1285 (set (reg/f:DI 1001)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -672 [0xfffffffffffffd60])) [10 r+0 S8 A64])) "../src/bnsolv.f":150 -1
     (nil))

(insn 1285 1284 0 (set (reg:SF 619 [ _533 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 618 [ _532 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 1001)) [3 *r_693(D) S4 A32])) "../src/bnsolv.f":150 -1
     (nil))

;; _534 = (integer(kind=8)) ip_813;

(insn 1286 1285 1287 (set (reg:SI 1002)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -148 [0xffffffffffffff6c])) [1 ip+0 S4 A32])) "../src/bnsolv.f":150 -1
     (nil))

(insn 1287 1286 0 (set (reg:DI 620 [ _534 ])
        (sign_extend:DI (reg:SI 1002))) "../src/bnsolv.f":150 -1
     (nil))

;; _535 = stride.25_662 * _534;

(insn 1288 1287 0 (parallel [
            (set (reg:DI 621 [ _535 ])
                (mult:DI (reg:DI 685 [ stride.25_662 ])
                    (reg:DI 620 [ _534 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":150 -1
     (nil))

;; _536 = offset.26_669 + _535;

(insn 1289 1288 0 (parallel [
            (set (reg:DI 622 [ _536 ])
                (plus:DI (reg:DI 691 [ offset.26_669 ])
                    (reg:DI 621 [ _535 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":150 -1
     (nil))

;; _537 = (integer(kind=8)) l_589;

(insn 1290 1289 1291 (set (reg:SI 1003)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])) "../src/bnsolv.f":150 -1
     (nil))

(insn 1291 1290 0 (set (reg:DI 623 [ _537 ])
        (sign_extend:DI (reg:SI 1003))) "../src/bnsolv.f":150 -1
     (nil))

;; _538 = stride.23_658 * _537;

(insn 1292 1291 0 (parallel [
            (set (reg:DI 624 [ _538 ])
                (mult:DI (reg:DI 683 [ stride.23_658 ])
                    (reg:DI 623 [ _537 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":150 -1
     (nil))

;; _539 = _536 + _538;

(insn 1293 1292 0 (parallel [
            (set (reg:DI 625 [ _539 ])
                (plus:DI (reg:DI 622 [ _536 ])
                    (reg:DI 624 [ _538 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":150 -1
     (nil))

;; _540 = (integer(kind=8)) j_567;

(insn 1294 1293 1295 (set (reg:SI 1004)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 j+0 S4 A32])) "../src/bnsolv.f":150 -1
     (nil))

(insn 1295 1294 0 (set (reg:DI 626 [ _540 ])
        (sign_extend:DI (reg:SI 1004))) "../src/bnsolv.f":150 -1
     (nil))

;; _541 = _539 + _540;

(insn 1296 1295 0 (parallel [
            (set (reg:DI 627 [ _541 ])
                (plus:DI (reg:DI 625 [ _539 ])
                    (reg:DI 626 [ _540 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":150 -1
     (nil))
Applying pattern match.pd:84, generic-match.c:11356
Applying pattern match.pd:84, generic-match.c:11356
Applying pattern match.pd:84, generic-match.c:11356

;; _542 = *r_693(D)[_541];

(insn 1297 1296 1298 (set (reg/f:DI 1005)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -672 [0xfffffffffffffd60])) [10 r+0 S8 A64])) "../src/bnsolv.f":150 -1
     (nil))

(insn 1298 1297 0 (set (reg:SF 628 [ _542 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 627 [ _541 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 1005)) [3 *r_693(D) S4 A32])) "../src/bnsolv.f":150 -1
     (nil))

;; i.91_543 = i;

(insn 1299 1298 0 (set (reg:SI 629 [ i.91_543 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [1 i+0 S4 A64])) "../src/bnsolv.f":150 -1
     (nil))

;; _544 = (integer(kind=8)) i.91_543;

(insn 1300 1299 0 (set (reg:DI 630 [ _544 ])
        (sign_extend:DI (reg:SI 629 [ i.91_543 ]))) "../src/bnsolv.f":150 -1
     (nil))

;; _545 = stride.18_648 * _544;

(insn 1301 1300 0 (parallel [
            (set (reg:DI 631 [ _545 ])
                (mult:DI (reg:DI 675 [ stride.18_648 ])
                    (reg:DI 630 [ _544 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":150 -1
     (nil))

;; _546 = offset.19_655 + _545;

(insn 1302 1301 0 (parallel [
            (set (reg:DI 632 [ _546 ])
                (plus:DI (reg:DI 681 [ offset.19_655 ])
                    (reg:DI 631 [ _545 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":150 -1
     (nil))

;; _547 = (integer(kind=8)) j_567;

(insn 1303 1302 1304 (set (reg:SI 1006)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 j+0 S4 A32])) "../src/bnsolv.f":150 -1
     (nil))

(insn 1304 1303 0 (set (reg:DI 633 [ _547 ])
        (sign_extend:DI (reg:SI 1006))) "../src/bnsolv.f":150 -1
     (nil))

;; _548 = stride.16_645 * _547;

(insn 1305 1304 0 (parallel [
            (set (reg:DI 634 [ _548 ])
                (mult:DI (reg:DI 673 [ stride.16_645 ])
                    (reg:DI 633 [ _547 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":150 -1
     (nil))

;; _549 = _546 + _548;

(insn 1306 1305 0 (parallel [
            (set (reg:DI 635 [ _549 ])
                (plus:DI (reg:DI 632 [ _546 ])
                    (reg:DI 634 [ _548 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":150 -1
     (nil))

;; _550 = (integer(kind=8)) k_572;

(insn 1307 1306 1308 (set (reg:SI 1007)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 k+0 S4 A32])) "../src/bnsolv.f":150 -1
     (nil))

(insn 1308 1307 0 (set (reg:DI 636 [ _550 ])
        (sign_extend:DI (reg:SI 1007))) "../src/bnsolv.f":150 -1
     (nil))

;; _551 = _549 + _550;

(insn 1309 1308 0 (parallel [
            (set (reg:DI 637 [ _551 ])
                (plus:DI (reg:DI 635 [ _549 ])
                    (reg:DI 636 [ _550 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":150 -1
     (nil))
Applying pattern match.pd:84, generic-match.c:11356
Applying pattern match.pd:84, generic-match.c:11356
Applying pattern match.pd:84, generic-match.c:11356

;; _552 = *c_686(D)[_551];

(insn 1310 1309 1311 (set (reg/f:DI 1008)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -664 [0xfffffffffffffd68])) [10 c+0 S8 A64])) "../src/bnsolv.f":150 -1
     (nil))

(insn 1311 1310 0 (set (reg:SF 638 [ _552 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 637 [ _551 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 1008)) [3 *c_686(D) S4 A32])) "../src/bnsolv.f":150 -1
     (nil))

;; _553 = _542 * _552;

(insn 1312 1311 0 (set (reg:SF 639 [ _553 ])
        (mult:SF (reg:SF 628 [ _542 ])
            (reg:SF 638 [ _552 ]))) "../src/bnsolv.f":150 -1
     (nil))

;; i.92_554 = i;

(insn 1313 1312 0 (set (reg:SI 640 [ i.92_554 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [1 i+0 S4 A64])) "../src/bnsolv.f":150 -1
     (nil))

;; _555 = (integer(kind=8)) i.92_554;

(insn 1314 1313 0 (set (reg:DI 641 [ _555 ])
        (sign_extend:DI (reg:SI 640 [ i.92_554 ]))) "../src/bnsolv.f":150 -1
     (nil))

;; _556 = stride.25_662 * _555;

(insn 1315 1314 0 (parallel [
            (set (reg:DI 642 [ _556 ])
                (mult:DI (reg:DI 685 [ stride.25_662 ])
                    (reg:DI 641 [ _555 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":150 -1
     (nil))

;; _557 = offset.26_669 + _556;

(insn 1316 1315 0 (parallel [
            (set (reg:DI 643 [ _557 ])
                (plus:DI (reg:DI 691 [ offset.26_669 ])
                    (reg:DI 642 [ _556 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":150 -1
     (nil))

;; _558 = (integer(kind=8)) l_589;

(insn 1317 1316 1318 (set (reg:SI 1009)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])) "../src/bnsolv.f":150 -1
     (nil))

(insn 1318 1317 0 (set (reg:DI 644 [ _558 ])
        (sign_extend:DI (reg:SI 1009))) "../src/bnsolv.f":150 -1
     (nil))

;; _559 = stride.23_658 * _558;

(insn 1319 1318 0 (parallel [
            (set (reg:DI 645 [ _559 ])
                (mult:DI (reg:DI 683 [ stride.23_658 ])
                    (reg:DI 644 [ _558 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":150 -1
     (nil))

;; _560 = _557 + _559;

(insn 1320 1319 0 (parallel [
            (set (reg:DI 646 [ _560 ])
                (plus:DI (reg:DI 643 [ _557 ])
                    (reg:DI 645 [ _559 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":150 -1
     (nil))

;; _561 = (integer(kind=8)) k_572;

(insn 1321 1320 1322 (set (reg:SI 1010)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 k+0 S4 A32])) "../src/bnsolv.f":150 -1
     (nil))

(insn 1322 1321 0 (set (reg:DI 647 [ _561 ])
        (sign_extend:DI (reg:SI 1010))) "../src/bnsolv.f":150 -1
     (nil))

;; _562 = _560 + _561;

(insn 1323 1322 0 (parallel [
            (set (reg:DI 648 [ _562 ])
                (plus:DI (reg:DI 646 [ _560 ])
                    (reg:DI 647 [ _561 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":150 -1
     (nil))

;; _563 = _533 - _553;

(insn 1324 1323 0 (set (reg:SF 649 [ _563 ])
        (minus:SF (reg:SF 619 [ _533 ])
            (reg:SF 639 [ _553 ]))) "../src/bnsolv.f":150 -1
     (nil))
Applying pattern match.pd:84, generic-match.c:11356
Applying pattern match.pd:84, generic-match.c:11356
Applying pattern match.pd:84, generic-match.c:11356

;; *r_693(D)[_562] = _563;

(insn 1325 1324 1326 (set (reg/f:DI 1011)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -672 [0xfffffffffffffd60])) [10 r+0 S8 A64])) "../src/bnsolv.f":150 -1
     (nil))

(insn 1326 1325 0 (set (mem:SF (plus:DI (mult:DI (reg:DI 648 [ _562 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 1011)) [3 *r_693(D) S4 A32])
        (reg:SF 649 [ _563 ])) "../src/bnsolv.f":150 -1
     (nil))

;; j_824 = j_567 + 1;

(insn 1327 1326 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [1 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [1 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":149 -1
     (nil))

;; Generating RTL for gimple basic block 78

;; 

(code_label 1331 1330 1332 50 (nil) [0 uses])

(note 1332 1331 0 NOTE_INSN_BASIC_BLOCK)

;; k_825 = k_572 + 1;

(insn 1333 1332 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [1 k+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [1 k+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":148 -1
     (nil))

;; Generating RTL for gimple basic block 79

;; 

(code_label 1337 1336 1338 49 (nil) [0 uses])

(note 1338 1337 0 NOTE_INSN_BASIC_BLOCK)

;; l_826 = l_589 + 1;

(insn 1339 1338 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":147 -1
     (nil))

;; Generating RTL for gimple basic block 80

;; 

(code_label 1343 1342 1344 48 (nil) [0 uses])

(note 1344 1343 0 NOTE_INSN_BASIC_BLOCK)

;; i.93_564 = i;

(insn 1345 1344 0 (set (reg:SI 650 [ i.93_564 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [1 i+0 S4 A64])) "../src/bnsolv.f":145 -1
     (nil))

;; _565 = i.93_564 + -1;

(insn 1346 1345 0 (parallel [
            (set (reg:SI 651 [ _565 ])
                (plus:SI (reg:SI 650 [ i.93_564 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":145 -1
     (nil))

;; i = _565;

(insn 1347 1346 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [1 i+0 S4 A64])
        (reg:SI 651 [ _565 ])) "../src/bnsolv.f":145 -1
     (nil))

;; Generating RTL for gimple basic block 81

;; 

(code_label 1351 1350 1352 47 (nil) [0 uses])

(note 1352 1351 0 NOTE_INSN_BASIC_BLOCK)

;; Generating RTL for gimple basic block 82

;; i ={v} {CLOBBER};

(nil)

;; Generating RTL for gimple basic block 83

;; <L131> [0.00%]:

(code_label 1354 1353 1355 55 (nil) [0 uses])

(note 1355 1354 0 NOTE_INSN_BASIC_BLOCK)
Purged non-fallthru edges from bb 88
Purged non-fallthru edges from bb 91


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Edge 26->28 redirected to 29
Forwarding edge 26->27 to 30 failed.
Forwarding edge 26->27 to 30 failed.
deleting block 28
Edge 53->55 redirected to 56
Forwarding edge 53->54 to 57 failed.
Forwarding edge 53->54 to 57 failed.
deleting block 55
Merging block 89 into block 88...
Merged blocks 88 and 89.
Merged 88 and 89 without moving.
Merging block 90 into block 88...
Merged blocks 88 and 90.
Merged 88 and 90 without moving.
Merging block 91 into block 88...
Merged blocks 88 and 91.
Merged 88 and 91 without moving.


try_optimize_cfg iteration 2

Forwarding edge 26->27 to 30 failed.
Forwarding edge 53->54 to 57 failed.
fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 9 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 9 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 9 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -648 [0xfffffffffffffd78])) [10 a+0 S8 A64])
        (reg:DI 5 di [ a ])) "../src/bnsolv.f":21 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -656 [0xfffffffffffffd70])) [10 b+0 S8 A64])
        (reg:DI 4 si [ b ])) "../src/bnsolv.f":21 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -664 [0xfffffffffffffd68])) [10 c+0 S8 A64])
        (reg:DI 1 dx [ c ])) "../src/bnsolv.f":21 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -672 [0xfffffffffffffd60])) [10 r+0 S8 A64])
        (reg:DI 2 cx [ r ])) "../src/bnsolv.f":21 -1
     (nil))
(insn 6 5 7 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -680 [0xfffffffffffffd58])) [11 nb+0 S8 A64])
        (reg:DI 37 r8 [ nb ])) "../src/bnsolv.f":21 -1
     (nil))
(insn 7 6 8 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -688 [0xfffffffffffffd50])) [11 n+0 S8 A64])
        (reg:DI 38 r9 [ n ])) "../src/bnsolv.f":21 -1
     (nil))
(note 8 7 11 2 NOTE_INSN_FUNCTION_BEG)
(insn 11 8 12 2 (set (reg/f:DI 746)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -680 [0xfffffffffffffd58])) [11 nb+0 S8 A64])) "../src/bnsolv.f":21 -1
     (nil))
(insn 12 11 13 2 (set (reg:SI 87 [ _1 ])
        (mem:SI (reg/f:DI 746) [1 *nb_615(D)+0 S4 A32])) "../src/bnsolv.f":21 -1
     (nil))
(insn 13 12 14 2 (set (reg:DI 747)
        (sign_extend:DI (reg:SI 87 [ _1 ]))) "../src/bnsolv.f":21 -1
     (nil))
(insn 14 13 15 2 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [2 ubound.7+0 S8 A64])
        (reg:DI 747)) "../src/bnsolv.f":21 -1
     (nil))
(insn 15 14 17 2 (set (reg:DI 652 [ stride.9_617 ])
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [2 ubound.7+0 S8 A64])) "../src/bnsolv.f":21 -1
     (nil))
(insn 17 15 16 2 (set (reg:DI 748)
        (const_int 0 [0])) "../src/bnsolv.f":21 -1
     (nil))
(insn 16 17 18 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 652 [ stride.9_617 ])
            (const_int 0 [0]))) "../src/bnsolv.f":21 -1
     (nil))
(insn 18 16 19 2 (set (reg:DI 653 [ stride.9_618 ])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 652 [ stride.9_617 ])
            (reg:DI 748))) "../src/bnsolv.f":21 -1
     (nil))
(insn 19 18 20 2 (set (reg/f:DI 749)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -680 [0xfffffffffffffd58])) [11 nb+0 S8 A64])) "../src/bnsolv.f":21 -1
     (nil))
(insn 20 19 21 2 (set (reg:SI 88 [ _2 ])
        (mem:SI (reg/f:DI 749) [1 *nb_615(D)+0 S4 A32])) "../src/bnsolv.f":21 -1
     (nil))
(insn 21 20 22 2 (set (reg:DI 750)
        (sign_extend:DI (reg:SI 88 [ _2 ]))) "../src/bnsolv.f":21 -1
     (nil))
(insn 22 21 23 2 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [2 ubound.8+0 S8 A64])
        (reg:DI 750)) "../src/bnsolv.f":21 -1
     (nil))
(insn 23 22 25 2 (parallel [
            (set (reg:DI 654 [ stride.11_620 ])
                (mult:DI (reg:DI 653 [ stride.9_618 ])
                    (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -40 [0xffffffffffffffd8])) [2 ubound.8+0 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":21 -1
     (nil))
(insn 25 23 24 2 (set (reg:DI 751)
        (const_int 0 [0])) "../src/bnsolv.f":21 -1
     (nil))
(insn 24 25 26 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 654 [ stride.11_620 ])
            (const_int 0 [0]))) "../src/bnsolv.f":21 -1
     (nil))
(insn 26 24 27 2 (set (reg:DI 655 [ stride.11_621 ])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 654 [ stride.11_620 ])
            (reg:DI 751))) "../src/bnsolv.f":21 -1
     (nil))
(insn 27 26 28 2 (set (reg/f:DI 752)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -688 [0xfffffffffffffd50])) [11 n+0 S8 A64])) "../src/bnsolv.f":21 -1
     (nil))
(insn 28 27 29 2 (set (reg:SI 89 [ _3 ])
        (mem:SI (reg/f:DI 752) [1 *n_622(D)+0 S4 A32])) "../src/bnsolv.f":21 -1
     (nil))
(insn 29 28 30 2 (set (reg:DI 753)
        (sign_extend:DI (reg:SI 89 [ _3 ]))) "../src/bnsolv.f":21 -1
     (nil))
(insn 30 29 31 2 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [2 ubound.10+0 S8 A64])
        (reg:DI 753)) "../src/bnsolv.f":21 -1
     (nil))
(insn 31 30 33 2 (parallel [
            (set (reg:DI 656 [ size.13_624 ])
                (mult:DI (reg:DI 655 [ stride.11_621 ])
                    (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -48 [0xffffffffffffffd0])) [2 ubound.10+0 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":21 -1
     (nil))
(insn 33 31 32 2 (set (reg:DI 754)
        (const_int 0 [0])) "../src/bnsolv.f":21 -1
     (nil))
(insn 32 33 34 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 656 [ size.13_624 ])
            (const_int 0 [0]))) "../src/bnsolv.f":21 -1
     (nil))
(insn 34 32 35 2 (set (reg:DI 657 [ size.13_625 ])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 656 [ size.13_624 ])
            (reg:DI 754))) "../src/bnsolv.f":21 -1
     (nil))
(insn 35 34 36 2 (parallel [
            (set (reg:DI 658 [ _626 ])
                (plus:DI (reg:DI 657 [ size.13_625 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":21 -1
     (nil))
(insn 36 35 37 2 (set (reg:DI 90 [ size.30_4 ])
        (reg:DI 657 [ size.13_625 ])) "../src/bnsolv.f":21 -1
     (nil))
(insn 37 36 38 2 (set (subreg:DI (reg:TI 91 [ _5 ]) 0)
        (reg:DI 90 [ size.30_4 ])) "../src/bnsolv.f":21 -1
     (nil))
(insn 38 37 39 2 (set (subreg:DI (reg:TI 91 [ _5 ]) 8)
        (const_int 0 [0])) "../src/bnsolv.f":21 -1
     (nil))
(insn 39 38 40 2 (parallel [
            (set (reg:TI 659 [ _627 ])
                (ashift:TI (reg:TI 91 [ _5 ])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":21 -1
     (nil))
(insn 40 39 41 2 (set (reg:DI 92 [ size.31_6 ])
        (reg:DI 657 [ size.13_625 ])) "../src/bnsolv.f":21 -1
     (nil))
(insn 41 40 42 2 (parallel [
            (set (reg:DI 660 [ _628 ])
                (ashift:DI (reg:DI 92 [ size.31_6 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":21 -1
     (nil))
(insn 42 41 43 2 (set (reg:DI 93 [ _7 ])
        (not:DI (reg:DI 653 [ stride.9_618 ]))) "../src/bnsolv.f":21 -1
     (nil))
(insn 43 42 44 2 (parallel [
            (set (reg:DI 661 [ offset.12_629 ])
                (minus:DI (reg:DI 93 [ _7 ])
                    (reg:DI 655 [ stride.11_621 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":21 -1
     (nil))
(insn 44 43 45 2 (set (reg/f:DI 755)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -680 [0xfffffffffffffd58])) [11 nb+0 S8 A64])) "../src/bnsolv.f":21 -1
     (nil))
(insn 45 44 46 2 (set (reg:SI 94 [ _8 ])
        (mem:SI (reg/f:DI 755) [1 *nb_615(D)+0 S4 A32])) "../src/bnsolv.f":21 -1
     (nil))
(insn 46 45 47 2 (set (reg:DI 756)
        (sign_extend:DI (reg:SI 94 [ _8 ]))) "../src/bnsolv.f":21 -1
     (nil))
(insn 47 46 48 2 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [2 ubound.0+0 S8 A64])
        (reg:DI 756)) "../src/bnsolv.f":21 -1
     (nil))
(insn 48 47 50 2 (set (reg:DI 662 [ stride.2_631 ])
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [2 ubound.0+0 S8 A64])) "../src/bnsolv.f":21 -1
     (nil))
(insn 50 48 49 2 (set (reg:DI 757)
        (const_int 0 [0])) "../src/bnsolv.f":21 -1
     (nil))
(insn 49 50 51 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 662 [ stride.2_631 ])
            (const_int 0 [0]))) "../src/bnsolv.f":21 -1
     (nil))
(insn 51 49 52 2 (set (reg:DI 663 [ stride.2_632 ])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 662 [ stride.2_631 ])
            (reg:DI 757))) "../src/bnsolv.f":21 -1
     (nil))
(insn 52 51 53 2 (set (reg/f:DI 758)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -680 [0xfffffffffffffd58])) [11 nb+0 S8 A64])) "../src/bnsolv.f":21 -1
     (nil))
(insn 53 52 54 2 (set (reg:SI 95 [ _9 ])
        (mem:SI (reg/f:DI 758) [1 *nb_615(D)+0 S4 A32])) "../src/bnsolv.f":21 -1
     (nil))
(insn 54 53 55 2 (set (reg:DI 759)
        (sign_extend:DI (reg:SI 95 [ _9 ]))) "../src/bnsolv.f":21 -1
     (nil))
(insn 55 54 56 2 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -64 [0xffffffffffffffc0])) [2 ubound.1+0 S8 A64])
        (reg:DI 759)) "../src/bnsolv.f":21 -1
     (nil))
(insn 56 55 58 2 (parallel [
            (set (reg:DI 664 [ stride.4_634 ])
                (mult:DI (reg:DI 663 [ stride.2_632 ])
                    (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -64 [0xffffffffffffffc0])) [2 ubound.1+0 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":21 -1
     (nil))
(insn 58 56 57 2 (set (reg:DI 760)
        (const_int 0 [0])) "../src/bnsolv.f":21 -1
     (nil))
(insn 57 58 59 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 664 [ stride.4_634 ])
            (const_int 0 [0]))) "../src/bnsolv.f":21 -1
     (nil))
(insn 59 57 60 2 (set (reg:DI 665 [ stride.4_635 ])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 664 [ stride.4_634 ])
            (reg:DI 760))) "../src/bnsolv.f":21 -1
     (nil))
(insn 60 59 61 2 (set (reg/f:DI 761)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -688 [0xfffffffffffffd50])) [11 n+0 S8 A64])) "../src/bnsolv.f":21 -1
     (nil))
(insn 61 60 62 2 (set (reg:SI 96 [ _10 ])
        (mem:SI (reg/f:DI 761) [1 *n_622(D)+0 S4 A32])) "../src/bnsolv.f":21 -1
     (nil))
(insn 62 61 63 2 (set (reg:DI 762)
        (sign_extend:DI (reg:SI 96 [ _10 ]))) "../src/bnsolv.f":21 -1
     (nil))
(insn 63 62 64 2 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -72 [0xffffffffffffffb8])) [2 ubound.3+0 S8 A64])
        (reg:DI 762)) "../src/bnsolv.f":21 -1
     (nil))
(insn 64 63 66 2 (parallel [
            (set (reg:DI 666 [ size.6_637 ])
                (mult:DI (reg:DI 665 [ stride.4_635 ])
                    (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -72 [0xffffffffffffffb8])) [2 ubound.3+0 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":21 -1
     (nil))
(insn 66 64 65 2 (set (reg:DI 763)
        (const_int 0 [0])) "../src/bnsolv.f":21 -1
     (nil))
(insn 65 66 67 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 666 [ size.6_637 ])
            (const_int 0 [0]))) "../src/bnsolv.f":21 -1
     (nil))
(insn 67 65 68 2 (set (reg:DI 667 [ size.6_638 ])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 666 [ size.6_637 ])
            (reg:DI 763))) "../src/bnsolv.f":21 -1
     (nil))
(insn 68 67 69 2 (parallel [
            (set (reg:DI 668 [ _639 ])
                (plus:DI (reg:DI 667 [ size.6_638 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":21 -1
     (nil))
(insn 69 68 70 2 (set (reg:DI 97 [ size.32_11 ])
        (reg:DI 667 [ size.6_638 ])) "../src/bnsolv.f":21 -1
     (nil))
(insn 70 69 71 2 (set (subreg:DI (reg:TI 98 [ _12 ]) 0)
        (reg:DI 97 [ size.32_11 ])) "../src/bnsolv.f":21 -1
     (nil))
(insn 71 70 72 2 (set (subreg:DI (reg:TI 98 [ _12 ]) 8)
        (const_int 0 [0])) "../src/bnsolv.f":21 -1
     (nil))
(insn 72 71 73 2 (parallel [
            (set (reg:TI 669 [ _640 ])
                (ashift:TI (reg:TI 98 [ _12 ])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":21 -1
     (nil))
(insn 73 72 74 2 (set (reg:DI 99 [ size.33_13 ])
        (reg:DI 667 [ size.6_638 ])) "../src/bnsolv.f":21 -1
     (nil))
(insn 74 73 75 2 (parallel [
            (set (reg:DI 670 [ _641 ])
                (ashift:DI (reg:DI 99 [ size.33_13 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":21 -1
     (nil))
(insn 75 74 76 2 (set (reg:DI 100 [ _14 ])
        (not:DI (reg:DI 663 [ stride.2_632 ]))) "../src/bnsolv.f":21 -1
     (nil))
(insn 76 75 77 2 (parallel [
            (set (reg:DI 671 [ offset.5_642 ])
                (minus:DI (reg:DI 100 [ _14 ])
                    (reg:DI 665 [ stride.4_635 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":21 -1
     (nil))
(insn 77 76 78 2 (set (reg/f:DI 764)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -680 [0xfffffffffffffd58])) [11 nb+0 S8 A64])) "../src/bnsolv.f":21 -1
     (nil))
(insn 78 77 79 2 (set (reg:SI 101 [ _15 ])
        (mem:SI (reg/f:DI 764) [1 *nb_615(D)+0 S4 A32])) "../src/bnsolv.f":21 -1
     (nil))
(insn 79 78 80 2 (set (reg:DI 765)
        (sign_extend:DI (reg:SI 101 [ _15 ]))) "../src/bnsolv.f":21 -1
     (nil))
(insn 80 79 81 2 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -80 [0xffffffffffffffb0])) [2 ubound.14+0 S8 A64])
        (reg:DI 765)) "../src/bnsolv.f":21 -1
     (nil))
(insn 81 80 83 2 (set (reg:DI 672 [ stride.16_644 ])
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -80 [0xffffffffffffffb0])) [2 ubound.14+0 S8 A64])) "../src/bnsolv.f":21 -1
     (nil))
(insn 83 81 82 2 (set (reg:DI 766)
        (const_int 0 [0])) "../src/bnsolv.f":21 -1
     (nil))
(insn 82 83 84 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 672 [ stride.16_644 ])
            (const_int 0 [0]))) "../src/bnsolv.f":21 -1
     (nil))
(insn 84 82 85 2 (set (reg:DI 673 [ stride.16_645 ])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 672 [ stride.16_644 ])
            (reg:DI 766))) "../src/bnsolv.f":21 -1
     (nil))
(insn 85 84 86 2 (set (reg/f:DI 767)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -680 [0xfffffffffffffd58])) [11 nb+0 S8 A64])) "../src/bnsolv.f":21 -1
     (nil))
(insn 86 85 87 2 (set (reg:SI 102 [ _16 ])
        (mem:SI (reg/f:DI 767) [1 *nb_615(D)+0 S4 A32])) "../src/bnsolv.f":21 -1
     (nil))
(insn 87 86 88 2 (set (reg:DI 768)
        (sign_extend:DI (reg:SI 102 [ _16 ]))) "../src/bnsolv.f":21 -1
     (nil))
(insn 88 87 89 2 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -88 [0xffffffffffffffa8])) [2 ubound.15+0 S8 A64])
        (reg:DI 768)) "../src/bnsolv.f":21 -1
     (nil))
(insn 89 88 91 2 (parallel [
            (set (reg:DI 674 [ stride.18_647 ])
                (mult:DI (reg:DI 673 [ stride.16_645 ])
                    (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -88 [0xffffffffffffffa8])) [2 ubound.15+0 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":21 -1
     (nil))
(insn 91 89 90 2 (set (reg:DI 769)
        (const_int 0 [0])) "../src/bnsolv.f":21 -1
     (nil))
(insn 90 91 92 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 674 [ stride.18_647 ])
            (const_int 0 [0]))) "../src/bnsolv.f":21 -1
     (nil))
(insn 92 90 93 2 (set (reg:DI 675 [ stride.18_648 ])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 674 [ stride.18_647 ])
            (reg:DI 769))) "../src/bnsolv.f":21 -1
     (nil))
(insn 93 92 94 2 (set (reg/f:DI 770)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -688 [0xfffffffffffffd50])) [11 n+0 S8 A64])) "../src/bnsolv.f":21 -1
     (nil))
(insn 94 93 95 2 (set (reg:SI 103 [ _17 ])
        (mem:SI (reg/f:DI 770) [1 *n_622(D)+0 S4 A32])) "../src/bnsolv.f":21 -1
     (nil))
(insn 95 94 96 2 (set (reg:DI 771)
        (sign_extend:DI (reg:SI 103 [ _17 ]))) "../src/bnsolv.f":21 -1
     (nil))
(insn 96 95 97 2 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -96 [0xffffffffffffffa0])) [2 ubound.17+0 S8 A64])
        (reg:DI 771)) "../src/bnsolv.f":21 -1
     (nil))
(insn 97 96 99 2 (parallel [
            (set (reg:DI 676 [ size.20_650 ])
                (mult:DI (reg:DI 675 [ stride.18_648 ])
                    (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -96 [0xffffffffffffffa0])) [2 ubound.17+0 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":21 -1
     (nil))
(insn 99 97 98 2 (set (reg:DI 772)
        (const_int 0 [0])) "../src/bnsolv.f":21 -1
     (nil))
(insn 98 99 100 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 676 [ size.20_650 ])
            (const_int 0 [0]))) "../src/bnsolv.f":21 -1
     (nil))
(insn 100 98 101 2 (set (reg:DI 677 [ size.20_651 ])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 676 [ size.20_650 ])
            (reg:DI 772))) "../src/bnsolv.f":21 -1
     (nil))
(insn 101 100 102 2 (parallel [
            (set (reg:DI 678 [ _652 ])
                (plus:DI (reg:DI 677 [ size.20_651 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":21 -1
     (nil))
(insn 102 101 103 2 (set (reg:DI 104 [ size.34_18 ])
        (reg:DI 677 [ size.20_651 ])) "../src/bnsolv.f":21 -1
     (nil))
(insn 103 102 104 2 (set (subreg:DI (reg:TI 105 [ _19 ]) 0)
        (reg:DI 104 [ size.34_18 ])) "../src/bnsolv.f":21 -1
     (nil))
(insn 104 103 105 2 (set (subreg:DI (reg:TI 105 [ _19 ]) 8)
        (const_int 0 [0])) "../src/bnsolv.f":21 -1
     (nil))
(insn 105 104 106 2 (parallel [
            (set (reg:TI 679 [ _653 ])
                (ashift:TI (reg:TI 105 [ _19 ])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":21 -1
     (nil))
(insn 106 105 107 2 (set (reg:DI 106 [ size.35_20 ])
        (reg:DI 677 [ size.20_651 ])) "../src/bnsolv.f":21 -1
     (nil))
(insn 107 106 108 2 (parallel [
            (set (reg:DI 680 [ _654 ])
                (ashift:DI (reg:DI 106 [ size.35_20 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":21 -1
     (nil))
(insn 108 107 109 2 (set (reg:DI 107 [ _21 ])
        (not:DI (reg:DI 673 [ stride.16_645 ]))) "../src/bnsolv.f":21 -1
     (nil))
(insn 109 108 110 2 (parallel [
            (set (reg:DI 681 [ offset.19_655 ])
                (minus:DI (reg:DI 107 [ _21 ])
                    (reg:DI 675 [ stride.18_648 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":21 -1
     (nil))
(insn 110 109 111 2 (set (reg/f:DI 773)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -680 [0xfffffffffffffd58])) [11 nb+0 S8 A64])) "../src/bnsolv.f":21 -1
     (nil))
(insn 111 110 112 2 (set (reg:SI 108 [ _22 ])
        (mem:SI (reg/f:DI 773) [1 *nb_615(D)+0 S4 A32])) "../src/bnsolv.f":21 -1
     (nil))
(insn 112 111 113 2 (set (reg:DI 774)
        (sign_extend:DI (reg:SI 108 [ _22 ]))) "../src/bnsolv.f":21 -1
     (nil))
(insn 113 112 114 2 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -104 [0xffffffffffffff98])) [2 ubound.21+0 S8 A64])
        (reg:DI 774)) "../src/bnsolv.f":21 -1
     (nil))
(insn 114 113 116 2 (set (reg:DI 682 [ stride.23_657 ])
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -104 [0xffffffffffffff98])) [2 ubound.21+0 S8 A64])) "../src/bnsolv.f":21 -1
     (nil))
(insn 116 114 115 2 (set (reg:DI 775)
        (const_int 0 [0])) "../src/bnsolv.f":21 -1
     (nil))
(insn 115 116 117 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 682 [ stride.23_657 ])
            (const_int 0 [0]))) "../src/bnsolv.f":21 -1
     (nil))
(insn 117 115 118 2 (set (reg:DI 683 [ stride.23_658 ])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 682 [ stride.23_657 ])
            (reg:DI 775))) "../src/bnsolv.f":21 -1
     (nil))
(insn 118 117 119 2 (set (reg/f:DI 776)
        (mem/f/c:DI (plus:DI (reg/f:DI 81 virtual-incoming-args)
                (const_int 8 [0x8])) [11 nrmax+0 S8 A64])) "../src/bnsolv.f":21 -1
     (nil))
(insn 119 118 120 2 (set (reg:SI 109 [ _23 ])
        (mem:SI (reg/f:DI 776) [1 *nrmax_659(D)+0 S4 A32])) "../src/bnsolv.f":21 -1
     (nil))
(insn 120 119 121 2 (set (reg:DI 777)
        (sign_extend:DI (reg:SI 109 [ _23 ]))) "../src/bnsolv.f":21 -1
     (nil))
(insn 121 120 122 2 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -112 [0xffffffffffffff90])) [2 ubound.22+0 S8 A64])
        (reg:DI 777)) "../src/bnsolv.f":21 -1
     (nil))
(insn 122 121 124 2 (parallel [
            (set (reg:DI 684 [ stride.25_661 ])
                (mult:DI (reg:DI 683 [ stride.23_658 ])
                    (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -112 [0xffffffffffffff90])) [2 ubound.22+0 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":21 -1
     (nil))
(insn 124 122 123 2 (set (reg:DI 778)
        (const_int 0 [0])) "../src/bnsolv.f":21 -1
     (nil))
(insn 123 124 125 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 684 [ stride.25_661 ])
            (const_int 0 [0]))) "../src/bnsolv.f":21 -1
     (nil))
(insn 125 123 126 2 (set (reg:DI 685 [ stride.25_662 ])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 684 [ stride.25_661 ])
            (reg:DI 778))) "../src/bnsolv.f":21 -1
     (nil))
(insn 126 125 127 2 (set (reg/f:DI 779)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -688 [0xfffffffffffffd50])) [11 n+0 S8 A64])) "../src/bnsolv.f":21 -1
     (nil))
(insn 127 126 128 2 (set (reg:SI 110 [ _24 ])
        (mem:SI (reg/f:DI 779) [1 *n_622(D)+0 S4 A32])) "../src/bnsolv.f":21 -1
     (nil))
(insn 128 127 129 2 (set (reg:DI 780)
        (sign_extend:DI (reg:SI 110 [ _24 ]))) "../src/bnsolv.f":21 -1
     (nil))
(insn 129 128 130 2 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -120 [0xffffffffffffff88])) [2 ubound.24+0 S8 A64])
        (reg:DI 780)) "../src/bnsolv.f":21 -1
     (nil))
(insn 130 129 132 2 (parallel [
            (set (reg:DI 686 [ size.27_664 ])
                (mult:DI (reg:DI 685 [ stride.25_662 ])
                    (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -120 [0xffffffffffffff88])) [2 ubound.24+0 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":21 -1
     (nil))
(insn 132 130 131 2 (set (reg:DI 781)
        (const_int 0 [0])) "../src/bnsolv.f":21 -1
     (nil))
(insn 131 132 133 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 686 [ size.27_664 ])
            (const_int 0 [0]))) "../src/bnsolv.f":21 -1
     (nil))
(insn 133 131 134 2 (set (reg:DI 687 [ size.27_665 ])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 686 [ size.27_664 ])
            (reg:DI 781))) "../src/bnsolv.f":21 -1
     (nil))
(insn 134 133 135 2 (parallel [
            (set (reg:DI 688 [ _666 ])
                (plus:DI (reg:DI 687 [ size.27_665 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":21 -1
     (nil))
(insn 135 134 136 2 (set (reg:DI 111 [ size.36_25 ])
        (reg:DI 687 [ size.27_665 ])) "../src/bnsolv.f":21 -1
     (nil))
(insn 136 135 137 2 (set (subreg:DI (reg:TI 112 [ _26 ]) 0)
        (reg:DI 111 [ size.36_25 ])) "../src/bnsolv.f":21 -1
     (nil))
(insn 137 136 138 2 (set (subreg:DI (reg:TI 112 [ _26 ]) 8)
        (const_int 0 [0])) "../src/bnsolv.f":21 -1
     (nil))
(insn 138 137 139 2 (parallel [
            (set (reg:TI 689 [ _667 ])
                (ashift:TI (reg:TI 112 [ _26 ])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":21 -1
     (nil))
(insn 139 138 140 2 (set (reg:DI 113 [ size.37_27 ])
        (reg:DI 687 [ size.27_665 ])) "../src/bnsolv.f":21 -1
     (nil))
(insn 140 139 141 2 (parallel [
            (set (reg:DI 690 [ _668 ])
                (ashift:DI (reg:DI 113 [ size.37_27 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":21 -1
     (nil))
(insn 141 140 142 2 (set (reg:DI 114 [ _28 ])
        (not:DI (reg:DI 683 [ stride.23_658 ]))) "../src/bnsolv.f":21 -1
     (nil))
(insn 142 141 143 2 (parallel [
            (set (reg:DI 691 [ offset.26_669 ])
                (minus:DI (reg:DI 114 [ _28 ])
                    (reg:DI 685 [ stride.25_662 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":21 -1
     (nil))
(insn 143 142 144 2 (set (reg/f:DI 782)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -688 [0xfffffffffffffd50])) [11 n+0 S8 A64])) "../src/bnsolv.f":37 -1
     (nil))
(insn 144 143 145 2 (set (reg:SI 692 [ _670 ])
        (mem:SI (reg/f:DI 782) [1 *n_622(D)+0 S4 A32])) "../src/bnsolv.f":37 -1
     (nil))
(insn 145 144 1227 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [1 i+0 S4 A64])
        (const_int 1 [0x1])) "../src/bnsolv.f":37 -1
     (nil))
;;  succ:       4 (FALLTHRU)

;; basic block 4, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 (FALLTHRU)
;;              75 (DFS_BACK)
(code_label 1227 145 146 4 46 (nil) [1 uses])
(note 146 1227 147 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 147 146 148 4 (set (reg:SI 115 [ i.38_29 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [1 i+0 S4 A64])) "../src/bnsolv.f":37 -1
     (nil))
(insn 148 147 149 4 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 692 [ _670 ])
            (reg:SI 115 [ i.38_29 ]))) "../src/bnsolv.f":37 -1
     (nil))
(insn 149 148 150 4 (set (reg:QI 693 [ _672 ])
        (lt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "../src/bnsolv.f":37 -1
     (nil))
(insn 150 149 151 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 693 [ _672 ])
            (const_int 0 [0]))) "../src/bnsolv.f":37 -1
     (nil))
(jump_insn 151 150 152 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1230)
            (pc))) "../src/bnsolv.f":37 -1
     (nil)
 -> 1230)
;;  succ:       76
;;              5 (FALLTHRU)

;; basic block 5, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       4 (FALLTHRU)
(note 152 151 153 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 153 152 154 5 (set (reg:SI 116 [ i.39_30 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [1 i+0 S4 A64])) "../src/bnsolv.f":39 -1
     (nil))
(insn 154 153 155 5 (parallel [
            (set (reg:SI 783)
                (plus:SI (reg:SI 116 [ i.39_30 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":39 -1
     (nil))
(insn 155 154 156 5 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -124 [0xffffffffffffff84])) [1 im+0 S4 A32])
        (reg:SI 783)) "../src/bnsolv.f":39 -1
     (nil))
(insn 156 155 157 5 (set (reg:SI 117 [ i.40_31 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [1 i+0 S4 A64])) "../src/bnsolv.f":42 -1
     (nil))
(insn 157 156 158 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 117 [ i.40_31 ])
            (const_int 1 [0x1]))) "../src/bnsolv.f":42 -1
     (nil))
(jump_insn 158 157 159 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 314)
            (pc))) "../src/bnsolv.f":42 -1
     (nil)
 -> 314)
;;  succ:       18
;;              6 (FALLTHRU)

;; basic block 6, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       5 (FALLTHRU)
(note 159 158 160 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 160 159 161 6 (set (reg/f:DI 784)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -680 [0xfffffffffffffd58])) [11 nb+0 S8 A64])) "../src/bnsolv.f":45 -1
     (nil))
(insn 161 160 162 6 (set (reg:SI 694 [ _674 ])
        (mem:SI (reg/f:DI 784) [1 *nb_615(D)+0 S4 A32])) "../src/bnsolv.f":45 -1
     (nil))
(insn 162 161 311 6 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 k+0 S4 A32])
        (const_int 1 [0x1])) "../src/bnsolv.f":45 -1
     (nil))
;;  succ:       7 (FALLTHRU)

;; basic block 7, loop depth 2, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       6 (FALLTHRU)
;;              17 (DFS_BACK)
(code_label 311 162 163 7 10 (nil) [1 uses])
(note 163 311 164 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 164 163 165 7 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [1 k+0 S4 A32])
            (reg:SI 694 [ _674 ]))) "../src/bnsolv.f":45 -1
     (nil))
(insn 165 164 166 7 (set (reg:QI 695 [ _676 ])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "../src/bnsolv.f":45 -1
     (nil))
(insn 166 165 167 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 695 [ _676 ])
            (const_int 0 [0]))) "../src/bnsolv.f":45 -1
     (nil))
(jump_insn 167 166 168 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 314)
            (pc))) "../src/bnsolv.f":45 -1
     (nil)
 -> 314)
;;  succ:       18
;;              8 (FALLTHRU)

;; basic block 8, loop depth 2, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL)
;;  pred:       7 (FALLTHRU)
(note 168 167 169 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 169 168 170 8 (set (reg/f:DI 785)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -680 [0xfffffffffffffd58])) [11 nb+0 S8 A64])) "../src/bnsolv.f":46 -1
     (nil))
(insn 170 169 171 8 (set (reg:SI 696 [ _677 ])
        (mem:SI (reg/f:DI 785) [1 *nb_615(D)+0 S4 A32])) "../src/bnsolv.f":46 -1
     (nil))
(insn 171 170 305 8 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 j+0 S4 A32])
        (const_int 1 [0x1])) "../src/bnsolv.f":46 -1
     (nil))
;;  succ:       9 (FALLTHRU)

;; basic block 9, loop depth 3, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL)
;;  pred:       8 (FALLTHRU)
;;              16 (DFS_BACK)
(code_label 305 171 172 9 9 (nil) [1 uses])
(note 172 305 173 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 173 172 174 9 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 j+0 S4 A32])
            (reg:SI 696 [ _677 ]))) "../src/bnsolv.f":46 -1
     (nil))
(insn 174 173 175 9 (set (reg:QI 697 [ _679 ])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "../src/bnsolv.f":46 -1
     (nil))
(insn 175 174 176 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 697 [ _679 ])
            (const_int 0 [0]))) "../src/bnsolv.f":46 -1
     (nil))
(jump_insn 176 175 177 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 308)
            (pc))) "../src/bnsolv.f":46 -1
     (nil)
 -> 308)
;;  succ:       17
;;              10 (FALLTHRU)

;; basic block 10, loop depth 3, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL)
;;  pred:       9 (FALLTHRU)
(note 177 176 178 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 178 177 179 10 (set (reg:SI 118 [ i.41_32 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [1 i+0 S4 A64])) "../src/bnsolv.f":47 -1
     (nil))
(insn 179 178 180 10 (set (reg:DI 119 [ _33 ])
        (sign_extend:DI (reg:SI 118 [ i.41_32 ]))) "../src/bnsolv.f":47 -1
     (nil))
(insn 180 179 181 10 (parallel [
            (set (reg:DI 120 [ _34 ])
                (mult:DI (reg:DI 655 [ stride.11_621 ])
                    (reg:DI 119 [ _33 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":47 -1
     (nil))
(insn 181 180 182 10 (parallel [
            (set (reg:DI 121 [ _35 ])
                (plus:DI (reg:DI 661 [ offset.12_629 ])
                    (reg:DI 120 [ _34 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":47 -1
     (nil))
(insn 182 181 183 10 (set (reg:SI 786)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 j+0 S4 A32])) "../src/bnsolv.f":47 -1
     (nil))
(insn 183 182 184 10 (set (reg:DI 122 [ _36 ])
        (sign_extend:DI (reg:SI 786))) "../src/bnsolv.f":47 -1
     (nil))
(insn 184 183 185 10 (parallel [
            (set (reg:DI 123 [ _37 ])
                (mult:DI (reg:DI 653 [ stride.9_618 ])
                    (reg:DI 122 [ _36 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":47 -1
     (nil))
(insn 185 184 186 10 (parallel [
            (set (reg:DI 124 [ _38 ])
                (plus:DI (reg:DI 121 [ _35 ])
                    (reg:DI 123 [ _37 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":47 -1
     (nil))
(insn 186 185 187 10 (set (reg:SI 787)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 k+0 S4 A32])) "../src/bnsolv.f":47 -1
     (nil))
(insn 187 186 188 10 (set (reg:DI 125 [ _39 ])
        (sign_extend:DI (reg:SI 787))) "../src/bnsolv.f":47 -1
     (nil))
(insn 188 187 189 10 (parallel [
            (set (reg:DI 126 [ _40 ])
                (plus:DI (reg:DI 124 [ _38 ])
                    (reg:DI 125 [ _39 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":47 -1
     (nil))
(insn 189 188 190 10 (set (reg/f:DI 788)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -656 [0xfffffffffffffd70])) [10 b+0 S8 A64])) "../src/bnsolv.f":47 -1
     (nil))
(insn 190 189 191 10 (set (reg:SF 789)
        (mem:SF (plus:DI (mult:DI (reg:DI 126 [ _40 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 788)) [3 *b_680(D) S4 A32])) "../src/bnsolv.f":47 -1
     (nil))
(insn 191 190 192 10 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -128 [0xffffffffffffff80])) [3 btmp+0 S4 A32])
        (reg:SF 789)) "../src/bnsolv.f":47 -1
     (nil))
(insn 192 191 193 10 (set (reg/f:DI 790)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -680 [0xfffffffffffffd58])) [11 nb+0 S8 A64])) "../src/bnsolv.f":48 -1
     (nil))
(insn 193 192 194 10 (set (reg:SI 698 [ _682 ])
        (mem:SI (reg/f:DI 790) [1 *nb_615(D)+0 S4 A32])) "../src/bnsolv.f":48 -1
     (nil))
(insn 194 193 243 10 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])
        (const_int 1 [0x1])) "../src/bnsolv.f":48 -1
     (nil))
;;  succ:       11 (FALLTHRU)

;; basic block 11, loop depth 4, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL)
;;  pred:       10 (FALLTHRU)
;;              12 (DFS_BACK)
(code_label 243 194 195 11 6 (nil) [1 uses])
(note 195 243 196 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 196 195 197 11 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])
            (reg:SI 698 [ _682 ]))) "../src/bnsolv.f":48 -1
     (nil))
(insn 197 196 198 11 (set (reg:QI 699 [ _684 ])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "../src/bnsolv.f":48 -1
     (nil))
(insn 198 197 199 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 699 [ _684 ])
            (const_int 0 [0]))) "../src/bnsolv.f":48 -1
     (nil))
(jump_insn 199 198 200 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 246)
            (pc))) "../src/bnsolv.f":48 -1
     (nil)
 -> 246)
;;  succ:       13
;;              12 (FALLTHRU)

;; basic block 12, loop depth 4, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL)
;;  pred:       11 (FALLTHRU)
(note 200 199 201 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 201 200 202 12 (set (reg:SI 127 [ i.42_41 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [1 i+0 S4 A64])) "../src/bnsolv.f":49 -1
     (nil))
(insn 202 201 203 12 (set (reg:DI 128 [ _42 ])
        (sign_extend:DI (reg:SI 127 [ i.42_41 ]))) "../src/bnsolv.f":49 -1
     (nil))
(insn 203 202 204 12 (parallel [
            (set (reg:DI 129 [ _43 ])
                (mult:DI (reg:DI 665 [ stride.4_635 ])
                    (reg:DI 128 [ _42 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":49 -1
     (nil))
(insn 204 203 205 12 (parallel [
            (set (reg:DI 130 [ _44 ])
                (plus:DI (reg:DI 671 [ offset.5_642 ])
                    (reg:DI 129 [ _43 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":49 -1
     (nil))
(insn 205 204 206 12 (set (reg:SI 791)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])) "../src/bnsolv.f":49 -1
     (nil))
(insn 206 205 207 12 (set (reg:DI 131 [ _45 ])
        (sign_extend:DI (reg:SI 791))) "../src/bnsolv.f":49 -1
     (nil))
(insn 207 206 208 12 (parallel [
            (set (reg:DI 132 [ _46 ])
                (mult:DI (reg:DI 663 [ stride.2_632 ])
                    (reg:DI 131 [ _45 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":49 -1
     (nil))
(insn 208 207 209 12 (parallel [
            (set (reg:DI 133 [ _47 ])
                (plus:DI (reg:DI 130 [ _44 ])
                    (reg:DI 132 [ _46 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":49 -1
     (nil))
(insn 209 208 210 12 (set (reg:SI 792)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 k+0 S4 A32])) "../src/bnsolv.f":49 -1
     (nil))
(insn 210 209 211 12 (set (reg:DI 134 [ _48 ])
        (sign_extend:DI (reg:SI 792))) "../src/bnsolv.f":49 -1
     (nil))
(insn 211 210 212 12 (parallel [
            (set (reg:DI 135 [ _49 ])
                (plus:DI (reg:DI 133 [ _47 ])
                    (reg:DI 134 [ _48 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":49 -1
     (nil))
(insn 212 211 213 12 (set (reg/f:DI 793)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -648 [0xfffffffffffffd78])) [10 a+0 S8 A64])) "../src/bnsolv.f":49 -1
     (nil))
(insn 213 212 214 12 (set (reg:SF 136 [ _50 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 135 [ _49 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 793)) [3 *a_685(D) S4 A32])) "../src/bnsolv.f":49 -1
     (nil))
(insn 214 213 215 12 (set (reg:SI 794)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -124 [0xffffffffffffff84])) [1 im+0 S4 A32])) "../src/bnsolv.f":49 -1
     (nil))
(insn 215 214 216 12 (set (reg:DI 137 [ _51 ])
        (sign_extend:DI (reg:SI 794))) "../src/bnsolv.f":49 -1
     (nil))
(insn 216 215 217 12 (parallel [
            (set (reg:DI 138 [ _52 ])
                (mult:DI (reg:DI 675 [ stride.18_648 ])
                    (reg:DI 137 [ _51 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":49 -1
     (nil))
(insn 217 216 218 12 (parallel [
            (set (reg:DI 139 [ _53 ])
                (plus:DI (reg:DI 681 [ offset.19_655 ])
                    (reg:DI 138 [ _52 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":49 -1
     (nil))
(insn 218 217 219 12 (set (reg:SI 795)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])) "../src/bnsolv.f":49 -1
     (nil))
(insn 219 218 220 12 (set (reg:DI 140 [ _54 ])
        (sign_extend:DI (reg:SI 795))) "../src/bnsolv.f":49 -1
     (nil))
(insn 220 219 221 12 (parallel [
            (set (reg:DI 141 [ _55 ])
                (mult:DI (reg:DI 673 [ stride.16_645 ])
                    (reg:DI 140 [ _54 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":49 -1
     (nil))
(insn 221 220 222 12 (parallel [
            (set (reg:DI 142 [ _56 ])
                (plus:DI (reg:DI 139 [ _53 ])
                    (reg:DI 141 [ _55 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":49 -1
     (nil))
(insn 222 221 223 12 (set (reg:SI 796)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 j+0 S4 A32])) "../src/bnsolv.f":49 -1
     (nil))
(insn 223 222 224 12 (set (reg:DI 143 [ _57 ])
        (sign_extend:DI (reg:SI 796))) "../src/bnsolv.f":49 -1
     (nil))
(insn 224 223 225 12 (parallel [
            (set (reg:DI 144 [ _58 ])
                (plus:DI (reg:DI 142 [ _56 ])
                    (reg:DI 143 [ _57 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":49 -1
     (nil))
(insn 225 224 226 12 (set (reg/f:DI 797)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -664 [0xfffffffffffffd68])) [10 c+0 S8 A64])) "../src/bnsolv.f":49 -1
     (nil))
(insn 226 225 227 12 (set (reg:SF 145 [ _59 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 144 [ _58 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 797)) [3 *c_686(D) S4 A32])) "../src/bnsolv.f":49 -1
     (nil))
(insn 227 226 228 12 (set (reg:SF 146 [ _60 ])
        (mult:SF (reg:SF 145 [ _59 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -128 [0xffffffffffffff80])) [3 btmp+0 S4 A32]))) "../src/bnsolv.f":49 -1
     (nil))
(insn 228 227 229 12 (set (reg:SI 147 [ i.43_61 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [1 i+0 S4 A64])) "../src/bnsolv.f":49 -1
     (nil))
(insn 229 228 230 12 (set (reg:DI 148 [ _62 ])
        (sign_extend:DI (reg:SI 147 [ i.43_61 ]))) "../src/bnsolv.f":49 -1
     (nil))
(insn 230 229 231 12 (parallel [
            (set (reg:DI 149 [ _63 ])
                (mult:DI (reg:DI 665 [ stride.4_635 ])
                    (reg:DI 148 [ _62 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":49 -1
     (nil))
(insn 231 230 232 12 (parallel [
            (set (reg:DI 150 [ _64 ])
                (plus:DI (reg:DI 671 [ offset.5_642 ])
                    (reg:DI 149 [ _63 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":49 -1
     (nil))
(insn 232 231 233 12 (set (reg:SI 798)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])) "../src/bnsolv.f":49 -1
     (nil))
(insn 233 232 234 12 (set (reg:DI 151 [ _65 ])
        (sign_extend:DI (reg:SI 798))) "../src/bnsolv.f":49 -1
     (nil))
(insn 234 233 235 12 (parallel [
            (set (reg:DI 152 [ _66 ])
                (mult:DI (reg:DI 663 [ stride.2_632 ])
                    (reg:DI 151 [ _65 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":49 -1
     (nil))
(insn 235 234 236 12 (parallel [
            (set (reg:DI 153 [ _67 ])
                (plus:DI (reg:DI 150 [ _64 ])
                    (reg:DI 152 [ _66 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":49 -1
     (nil))
(insn 236 235 237 12 (set (reg:SI 799)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 k+0 S4 A32])) "../src/bnsolv.f":49 -1
     (nil))
(insn 237 236 238 12 (set (reg:DI 154 [ _68 ])
        (sign_extend:DI (reg:SI 799))) "../src/bnsolv.f":49 -1
     (nil))
(insn 238 237 239 12 (parallel [
            (set (reg:DI 155 [ _69 ])
                (plus:DI (reg:DI 153 [ _67 ])
                    (reg:DI 154 [ _68 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":49 -1
     (nil))
(insn 239 238 240 12 (set (reg:SF 156 [ _70 ])
        (minus:SF (reg:SF 136 [ _50 ])
            (reg:SF 146 [ _60 ]))) "../src/bnsolv.f":49 -1
     (nil))
(insn 240 239 241 12 (set (reg/f:DI 800)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -648 [0xfffffffffffffd78])) [10 a+0 S8 A64])) "../src/bnsolv.f":49 -1
     (nil))
(insn 241 240 242 12 (set (mem:SF (plus:DI (mult:DI (reg:DI 155 [ _69 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 800)) [3 *a_685(D) S4 A32])
        (reg:SF 156 [ _70 ])) "../src/bnsolv.f":49 -1
     (nil))
(insn 242 241 244 12 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":48 -1
     (nil))
(jump_insn 244 242 245 12 (set (pc)
        (label_ref 243)) "../src/bnsolv.f":48 -1
     (nil)
 -> 243)
;;  succ:       11 (DFS_BACK)

(barrier 245 244 246)
;; basic block 13, loop depth 3, count 0, freq 0, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL)
;;  pred:       11
(code_label 246 245 247 13 5 (nil) [1 uses])
(note 247 246 248 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 248 247 249 13 (set (reg/f:DI 801)
        (mem/f/c:DI (reg/f:DI 81 virtual-incoming-args) [11 nrhs+0 S8 A64])) "../src/bnsolv.f":51 -1
     (nil))
(insn 249 248 250 13 (set (reg:SI 700 [ _690 ])
        (mem:SI (reg/f:DI 801) [1 *nrhs_689(D)+0 S4 A32])) "../src/bnsolv.f":51 -1
     (nil))
(insn 250 249 299 13 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])
        (const_int 1 [0x1])) "../src/bnsolv.f":51 -1
     (nil))
;;  succ:       14 (FALLTHRU)

;; basic block 14, loop depth 4, count 0, freq 0, maybe hot
;;  prev block 13, next block 15, flags: (NEW, REACHABLE, RTL)
;;  pred:       13 (FALLTHRU)
;;              15 (DFS_BACK)
(code_label 299 250 251 14 8 (nil) [1 uses])
(note 251 299 252 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 252 251 253 14 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])
            (reg:SI 700 [ _690 ]))) "../src/bnsolv.f":51 -1
     (nil))
(insn 253 252 254 14 (set (reg:QI 701 [ _692 ])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "../src/bnsolv.f":51 -1
     (nil))
(insn 254 253 255 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 701 [ _692 ])
            (const_int 0 [0]))) "../src/bnsolv.f":51 -1
     (nil))
(jump_insn 255 254 256 14 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 302)
            (pc))) "../src/bnsolv.f":51 -1
     (nil)
 -> 302)
;;  succ:       16
;;              15 (FALLTHRU)

;; basic block 15, loop depth 4, count 0, freq 0, maybe hot
;;  prev block 14, next block 16, flags: (NEW, REACHABLE, RTL)
;;  pred:       14 (FALLTHRU)
(note 256 255 257 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 257 256 258 15 (set (reg:SI 157 [ i.44_71 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [1 i+0 S4 A64])) "../src/bnsolv.f":52 -1
     (nil))
(insn 258 257 259 15 (set (reg:DI 158 [ _72 ])
        (sign_extend:DI (reg:SI 157 [ i.44_71 ]))) "../src/bnsolv.f":52 -1
     (nil))
(insn 259 258 260 15 (parallel [
            (set (reg:DI 159 [ _73 ])
                (mult:DI (reg:DI 685 [ stride.25_662 ])
                    (reg:DI 158 [ _72 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":52 -1
     (nil))
(insn 260 259 261 15 (parallel [
            (set (reg:DI 160 [ _74 ])
                (plus:DI (reg:DI 691 [ offset.26_669 ])
                    (reg:DI 159 [ _73 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":52 -1
     (nil))
(insn 261 260 262 15 (set (reg:SI 802)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])) "../src/bnsolv.f":52 -1
     (nil))
(insn 262 261 263 15 (set (reg:DI 161 [ _75 ])
        (sign_extend:DI (reg:SI 802))) "../src/bnsolv.f":52 -1
     (nil))
(insn 263 262 264 15 (parallel [
            (set (reg:DI 162 [ _76 ])
                (mult:DI (reg:DI 683 [ stride.23_658 ])
                    (reg:DI 161 [ _75 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":52 -1
     (nil))
(insn 264 263 265 15 (parallel [
            (set (reg:DI 163 [ _77 ])
                (plus:DI (reg:DI 160 [ _74 ])
                    (reg:DI 162 [ _76 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":52 -1
     (nil))
(insn 265 264 266 15 (set (reg:SI 803)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 k+0 S4 A32])) "../src/bnsolv.f":52 -1
     (nil))
(insn 266 265 267 15 (set (reg:DI 164 [ _78 ])
        (sign_extend:DI (reg:SI 803))) "../src/bnsolv.f":52 -1
     (nil))
(insn 267 266 268 15 (parallel [
            (set (reg:DI 165 [ _79 ])
                (plus:DI (reg:DI 163 [ _77 ])
                    (reg:DI 164 [ _78 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":52 -1
     (nil))
(insn 268 267 269 15 (set (reg/f:DI 804)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -672 [0xfffffffffffffd60])) [10 r+0 S8 A64])) "../src/bnsolv.f":52 -1
     (nil))
(insn 269 268 270 15 (set (reg:SF 166 [ _80 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 165 [ _79 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 804)) [3 *r_693(D) S4 A32])) "../src/bnsolv.f":52 -1
     (nil))
(insn 270 269 271 15 (set (reg:SI 805)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -124 [0xffffffffffffff84])) [1 im+0 S4 A32])) "../src/bnsolv.f":52 -1
     (nil))
(insn 271 270 272 15 (set (reg:DI 167 [ _81 ])
        (sign_extend:DI (reg:SI 805))) "../src/bnsolv.f":52 -1
     (nil))
(insn 272 271 273 15 (parallel [
            (set (reg:DI 168 [ _82 ])
                (mult:DI (reg:DI 685 [ stride.25_662 ])
                    (reg:DI 167 [ _81 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":52 -1
     (nil))
(insn 273 272 274 15 (parallel [
            (set (reg:DI 169 [ _83 ])
                (plus:DI (reg:DI 691 [ offset.26_669 ])
                    (reg:DI 168 [ _82 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":52 -1
     (nil))
(insn 274 273 275 15 (set (reg:SI 806)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])) "../src/bnsolv.f":52 -1
     (nil))
(insn 275 274 276 15 (set (reg:DI 170 [ _84 ])
        (sign_extend:DI (reg:SI 806))) "../src/bnsolv.f":52 -1
     (nil))
(insn 276 275 277 15 (parallel [
            (set (reg:DI 171 [ _85 ])
                (mult:DI (reg:DI 683 [ stride.23_658 ])
                    (reg:DI 170 [ _84 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":52 -1
     (nil))
(insn 277 276 278 15 (parallel [
            (set (reg:DI 172 [ _86 ])
                (plus:DI (reg:DI 169 [ _83 ])
                    (reg:DI 171 [ _85 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":52 -1
     (nil))
(insn 278 277 279 15 (set (reg:SI 807)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 j+0 S4 A32])) "../src/bnsolv.f":52 -1
     (nil))
(insn 279 278 280 15 (set (reg:DI 173 [ _87 ])
        (sign_extend:DI (reg:SI 807))) "../src/bnsolv.f":52 -1
     (nil))
(insn 280 279 281 15 (parallel [
            (set (reg:DI 174 [ _88 ])
                (plus:DI (reg:DI 172 [ _86 ])
                    (reg:DI 173 [ _87 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":52 -1
     (nil))
(insn 281 280 282 15 (set (reg/f:DI 808)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -672 [0xfffffffffffffd60])) [10 r+0 S8 A64])) "../src/bnsolv.f":52 -1
     (nil))
(insn 282 281 283 15 (set (reg:SF 175 [ _89 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 174 [ _88 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 808)) [3 *r_693(D) S4 A32])) "../src/bnsolv.f":52 -1
     (nil))
(insn 283 282 284 15 (set (reg:SF 176 [ _90 ])
        (mult:SF (reg:SF 175 [ _89 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -128 [0xffffffffffffff80])) [3 btmp+0 S4 A32]))) "../src/bnsolv.f":52 -1
     (nil))
(insn 284 283 285 15 (set (reg:SI 177 [ i.45_91 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [1 i+0 S4 A64])) "../src/bnsolv.f":52 -1
     (nil))
(insn 285 284 286 15 (set (reg:DI 178 [ _92 ])
        (sign_extend:DI (reg:SI 177 [ i.45_91 ]))) "../src/bnsolv.f":52 -1
     (nil))
(insn 286 285 287 15 (parallel [
            (set (reg:DI 179 [ _93 ])
                (mult:DI (reg:DI 685 [ stride.25_662 ])
                    (reg:DI 178 [ _92 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":52 -1
     (nil))
(insn 287 286 288 15 (parallel [
            (set (reg:DI 180 [ _94 ])
                (plus:DI (reg:DI 691 [ offset.26_669 ])
                    (reg:DI 179 [ _93 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":52 -1
     (nil))
(insn 288 287 289 15 (set (reg:SI 809)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])) "../src/bnsolv.f":52 -1
     (nil))
(insn 289 288 290 15 (set (reg:DI 181 [ _95 ])
        (sign_extend:DI (reg:SI 809))) "../src/bnsolv.f":52 -1
     (nil))
(insn 290 289 291 15 (parallel [
            (set (reg:DI 182 [ _96 ])
                (mult:DI (reg:DI 683 [ stride.23_658 ])
                    (reg:DI 181 [ _95 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":52 -1
     (nil))
(insn 291 290 292 15 (parallel [
            (set (reg:DI 183 [ _97 ])
                (plus:DI (reg:DI 180 [ _94 ])
                    (reg:DI 182 [ _96 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":52 -1
     (nil))
(insn 292 291 293 15 (set (reg:SI 810)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 k+0 S4 A32])) "../src/bnsolv.f":52 -1
     (nil))
(insn 293 292 294 15 (set (reg:DI 184 [ _98 ])
        (sign_extend:DI (reg:SI 810))) "../src/bnsolv.f":52 -1
     (nil))
(insn 294 293 295 15 (parallel [
            (set (reg:DI 185 [ _99 ])
                (plus:DI (reg:DI 183 [ _97 ])
                    (reg:DI 184 [ _98 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":52 -1
     (nil))
(insn 295 294 296 15 (set (reg:SF 186 [ _100 ])
        (minus:SF (reg:SF 166 [ _80 ])
            (reg:SF 176 [ _90 ]))) "../src/bnsolv.f":52 -1
     (nil))
(insn 296 295 297 15 (set (reg/f:DI 811)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -672 [0xfffffffffffffd60])) [10 r+0 S8 A64])) "../src/bnsolv.f":52 -1
     (nil))
(insn 297 296 298 15 (set (mem:SF (plus:DI (mult:DI (reg:DI 185 [ _99 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 811)) [3 *r_693(D) S4 A32])
        (reg:SF 186 [ _100 ])) "../src/bnsolv.f":52 -1
     (nil))
(insn 298 297 300 15 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":51 -1
     (nil))
(jump_insn 300 298 301 15 (set (pc)
        (label_ref 299)) "../src/bnsolv.f":51 -1
     (nil)
 -> 299)
;;  succ:       14 (DFS_BACK)

(barrier 301 300 302)
;; basic block 16, loop depth 3, count 0, freq 0, maybe hot
;;  prev block 15, next block 17, flags: (NEW, REACHABLE, RTL)
;;  pred:       14
(code_label 302 301 303 16 7 (nil) [1 uses])
(note 303 302 304 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 304 303 306 16 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [1 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [1 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":46 -1
     (nil))
(jump_insn 306 304 307 16 (set (pc)
        (label_ref 305)) "../src/bnsolv.f":46 -1
     (nil)
 -> 305)
;;  succ:       9 (DFS_BACK)

(barrier 307 306 308)
;; basic block 17, loop depth 2, count 0, freq 0, maybe hot
;;  prev block 16, next block 18, flags: (NEW, REACHABLE, RTL)
;;  pred:       9
(code_label 308 307 309 17 4 (nil) [1 uses])
(note 309 308 310 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 310 309 312 17 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [1 k+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [1 k+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":45 -1
     (nil))
(jump_insn 312 310 313 17 (set (pc)
        (label_ref 311)) "../src/bnsolv.f":45 -1
     (nil)
 -> 311)
;;  succ:       7 (DFS_BACK)

(barrier 313 312 314)
;; basic block 18, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 17, next block 19, flags: (NEW, REACHABLE, RTL)
;;  pred:       5
;;              7
(code_label 314 313 315 18 3 (nil) [2 uses])
(note 315 314 316 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 316 315 317 18 (set (reg/f:DI 812)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -680 [0xfffffffffffffd58])) [11 nb+0 S8 A64])) "../src/bnsolv.f":61 -1
     (nil))
(insn 317 316 318 18 (set (reg:SI 187 [ _101 ])
        (mem:SI (reg/f:DI 812) [1 *nb_615(D)+0 S4 A32])) "../src/bnsolv.f":61 -1
     (nil))
(insn 318 317 319 18 (parallel [
            (set (reg:SI 702 [ _698 ])
                (plus:SI (reg:SI 187 [ _101 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":61 -1
     (nil))
(insn 319 318 896 18 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 kpiv+0 S4 A32])
        (const_int 1 [0x1])) "../src/bnsolv.f":61 -1
     (nil))
;;  succ:       19 (FALLTHRU)

;; basic block 19, loop depth 2, count 0, freq 0, maybe hot
;;  prev block 18, next block 20, flags: (NEW, REACHABLE, RTL)
;;  pred:       18 (FALLTHRU)
;;              51 (DFS_BACK)
(code_label 896 319 320 19 31 (nil) [1 uses])
(note 320 896 321 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 321 320 322 19 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [1 kpiv+0 S4 A32])
            (reg:SI 702 [ _698 ]))) "../src/bnsolv.f":61 -1
     (nil))
(insn 322 321 323 19 (set (reg:QI 703 [ _700 ])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "../src/bnsolv.f":61 -1
     (nil))
(insn 323 322 324 19 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 703 [ _700 ])
            (const_int 0 [0]))) "../src/bnsolv.f":61 -1
     (nil))
(jump_insn 324 323 325 19 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 899)
            (pc))) "../src/bnsolv.f":61 -1
     (nil)
 -> 899)
;;  succ:       52
;;              20 (FALLTHRU)

;; basic block 20, loop depth 2, count 0, freq 0, maybe hot
;;  prev block 19, next block 21, flags: (NEW, REACHABLE, RTL)
;;  pred:       19 (FALLTHRU)
(note 325 324 329 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 329 325 330 20 (set (reg:SI 816)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 kpiv+0 S4 A32])) "../src/bnsolv.f":62 -1
     (nil))
(insn 330 329 331 20 (parallel [
            (set (reg:SI 815)
                (plus:SI (reg:SI 816)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":62 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [1 kpiv+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 331 330 332 20 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -132 [0xffffffffffffff7c])) [1 kp1+0 S4 A32])
        (reg:SI 815)) "../src/bnsolv.f":62 -1
     (nil))
(insn 332 331 333 20 (set (reg:SI 817)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 kpiv+0 S4 A32])) "../src/bnsolv.f":65 -1
     (nil))
(insn 333 332 334 20 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [1 kx+0 S4 A32])
        (reg:SI 817)) "../src/bnsolv.f":65 -1
     (nil))
(insn 334 333 335 20 (set (reg:SI 704 [ _703 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -132 [0xffffffffffffff7c])) [1 kp1+0 S4 A32])) "../src/bnsolv.f":66 -1
     (nil))
(insn 335 334 336 20 (set (reg/f:DI 818)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -680 [0xfffffffffffffd58])) [11 nb+0 S8 A64])) "../src/bnsolv.f":66 -1
     (nil))
(insn 336 335 337 20 (set (reg:SI 705 [ _704 ])
        (mem:SI (reg/f:DI 818) [1 *nb_615(D)+0 S4 A32])) "../src/bnsolv.f":66 -1
     (nil))
(insn 337 336 384 20 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 k+0 S4 A32])
        (reg:SI 704 [ _703 ])) "../src/bnsolv.f":66 -1
     (nil))
;;  succ:       21 (FALLTHRU)

;; basic block 21, loop depth 3, count 0, freq 0, maybe hot
;;  prev block 20, next block 22, flags: (NEW, REACHABLE, RTL)
;;  pred:       20 (FALLTHRU)
;;              24 (DFS_BACK)
(code_label 384 337 338 21 14 (nil) [1 uses])
(note 338 384 339 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 339 338 340 21 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [1 k+0 S4 A32])
            (reg:SI 705 [ _704 ]))) "../src/bnsolv.f":66 -1
     (nil))
(insn 340 339 341 21 (set (reg:QI 706 [ _706 ])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "../src/bnsolv.f":66 -1
     (nil))
(insn 341 340 342 21 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 706 [ _706 ])
            (const_int 0 [0]))) "../src/bnsolv.f":66 -1
     (nil))
(jump_insn 342 341 343 21 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 387)
            (pc))) "../src/bnsolv.f":66 -1
     (nil)
 -> 387)
;;  succ:       25
;;              22 (FALLTHRU)

;; basic block 22, loop depth 3, count 0, freq 0, maybe hot
;;  prev block 21, next block 23, flags: (NEW, REACHABLE, RTL)
;;  pred:       21 (FALLTHRU)
(note 343 342 344 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 344 343 345 22 (set (reg:SI 188 [ i.46_102 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [1 i+0 S4 A64])) "../src/bnsolv.f":67 -1
     (nil))
(insn 345 344 346 22 (set (reg:DI 189 [ _103 ])
        (sign_extend:DI (reg:SI 188 [ i.46_102 ]))) "../src/bnsolv.f":67 -1
     (nil))
(insn 346 345 347 22 (parallel [
            (set (reg:DI 190 [ _104 ])
                (mult:DI (reg:DI 665 [ stride.4_635 ])
                    (reg:DI 189 [ _103 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":67 -1
     (nil))
(insn 347 346 348 22 (parallel [
            (set (reg:DI 191 [ _105 ])
                (plus:DI (reg:DI 671 [ offset.5_642 ])
                    (reg:DI 190 [ _104 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":67 -1
     (nil))
(insn 348 347 349 22 (set (reg:SI 819)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 kpiv+0 S4 A32])) "../src/bnsolv.f":67 -1
     (nil))
(insn 349 348 350 22 (set (reg:DI 192 [ _106 ])
        (sign_extend:DI (reg:SI 819))) "../src/bnsolv.f":67 -1
     (nil))
(insn 350 349 351 22 (parallel [
            (set (reg:DI 193 [ _107 ])
                (mult:DI (reg:DI 663 [ stride.2_632 ])
                    (reg:DI 192 [ _106 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":67 -1
     (nil))
(insn 351 350 352 22 (parallel [
            (set (reg:DI 194 [ _108 ])
                (plus:DI (reg:DI 191 [ _105 ])
                    (reg:DI 193 [ _107 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":67 -1
     (nil))
(insn 352 351 353 22 (set (reg:SI 820)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 k+0 S4 A32])) "../src/bnsolv.f":67 -1
     (nil))
(insn 353 352 354 22 (set (reg:DI 195 [ _109 ])
        (sign_extend:DI (reg:SI 820))) "../src/bnsolv.f":67 -1
     (nil))
(insn 354 353 355 22 (parallel [
            (set (reg:DI 196 [ _110 ])
                (plus:DI (reg:DI 194 [ _108 ])
                    (reg:DI 195 [ _109 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":67 -1
     (nil))
(insn 355 354 356 22 (set (reg/f:DI 821)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -648 [0xfffffffffffffd78])) [10 a+0 S8 A64])) "../src/bnsolv.f":67 -1
     (nil))
(insn 356 355 357 22 (set (reg:SF 197 [ _111 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 196 [ _110 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 821)) [3 *a_685(D) S4 A32])) "../src/bnsolv.f":67 -1
     (nil))
(insn 357 356 358 22 (set (reg:V4SF 822)
        (mem/u/c:V4SF (symbol_ref/u:DI ("*lC0") [flags 0x2]) [3  S16 A128])) "../src/bnsolv.f":67 -1
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF +QNaN [+QNaN])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 358 357 359 22 (parallel [
            (set (reg:SF 198 [ _112 ])
                (abs:SF (reg:SF 197 [ _111 ])))
            (use (reg:V4SF 822))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":67 -1
     (expr_list:REG_EQUAL (abs:SF (reg:SF 197 [ _111 ]))
        (nil)))
(insn 359 358 360 22 (set (reg:SI 199 [ i.47_113 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [1 i+0 S4 A64])) "../src/bnsolv.f":67 -1
     (nil))
(insn 360 359 361 22 (set (reg:DI 200 [ _114 ])
        (sign_extend:DI (reg:SI 199 [ i.47_113 ]))) "../src/bnsolv.f":67 -1
     (nil))
(insn 361 360 362 22 (parallel [
            (set (reg:DI 201 [ _115 ])
                (mult:DI (reg:DI 665 [ stride.4_635 ])
                    (reg:DI 200 [ _114 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":67 -1
     (nil))
(insn 362 361 363 22 (parallel [
            (set (reg:DI 202 [ _116 ])
                (plus:DI (reg:DI 671 [ offset.5_642 ])
                    (reg:DI 201 [ _115 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":67 -1
     (nil))
(insn 363 362 364 22 (set (reg:SI 823)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 kpiv+0 S4 A32])) "../src/bnsolv.f":67 -1
     (nil))
(insn 364 363 365 22 (set (reg:DI 203 [ _117 ])
        (sign_extend:DI (reg:SI 823))) "../src/bnsolv.f":67 -1
     (nil))
(insn 365 364 366 22 (parallel [
            (set (reg:DI 204 [ _118 ])
                (mult:DI (reg:DI 663 [ stride.2_632 ])
                    (reg:DI 203 [ _117 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":67 -1
     (nil))
(insn 366 365 367 22 (parallel [
            (set (reg:DI 205 [ _119 ])
                (plus:DI (reg:DI 202 [ _116 ])
                    (reg:DI 204 [ _118 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":67 -1
     (nil))
(insn 367 366 368 22 (set (reg:SI 824)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [1 kx+0 S4 A32])) "../src/bnsolv.f":67 -1
     (nil))
(insn 368 367 369 22 (set (reg:DI 206 [ _120 ])
        (sign_extend:DI (reg:SI 824))) "../src/bnsolv.f":67 -1
     (nil))
(insn 369 368 370 22 (parallel [
            (set (reg:DI 207 [ _121 ])
                (plus:DI (reg:DI 205 [ _119 ])
                    (reg:DI 206 [ _120 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":67 -1
     (nil))
(insn 370 369 371 22 (set (reg/f:DI 825)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -648 [0xfffffffffffffd78])) [10 a+0 S8 A64])) "../src/bnsolv.f":67 -1
     (nil))
(insn 371 370 372 22 (set (reg:SF 208 [ _122 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 207 [ _121 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 825)) [3 *a_685(D) S4 A32])) "../src/bnsolv.f":67 -1
     (nil))
(insn 372 371 373 22 (set (reg:V4SF 826)
        (mem/u/c:V4SF (symbol_ref/u:DI ("*lC0") [flags 0x2]) [3  S16 A128])) "../src/bnsolv.f":67 -1
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF +QNaN [+QNaN])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 373 372 374 22 (parallel [
            (set (reg:SF 209 [ _123 ])
                (abs:SF (reg:SF 208 [ _122 ])))
            (use (reg:V4SF 826))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":67 -1
     (expr_list:REG_EQUAL (abs:SF (reg:SF 208 [ _122 ]))
        (nil)))
(insn 374 373 375 22 (set (reg:SF 707 [ _707 ])
        (minus:SF (reg:SF 198 [ _112 ])
            (reg:SF 209 [ _123 ]))) "../src/bnsolv.f":67 -1
     (nil))
(insn 375 374 376 22 (set (reg:SF 827)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC1") [flags 0x2]) [3  S4 A32])) "../src/bnsolv.f":67 -1
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 376 375 377 22 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 827)
            (reg:SF 707 [ _707 ]))) "../src/bnsolv.f":67 -1
     (nil))
(jump_insn 377 376 378 22 (set (pc)
        (if_then_else (ge (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref 381)
            (pc))) "../src/bnsolv.f":67 -1
     (nil)
 -> 381)
;;  succ:       24
;;              23 (FALLTHRU)

;; basic block 23, loop depth 3, count 0, freq 0, maybe hot
;;  prev block 22, next block 24, flags: (NEW, REACHABLE, RTL)
;;  pred:       22 (FALLTHRU)
(note 378 377 379 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 379 378 380 23 (set (reg:SI 828)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 k+0 S4 A32])) "../src/bnsolv.f":68 -1
     (nil))
(insn 380 379 381 23 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [1 kx+0 S4 A32])
        (reg:SI 828)) "../src/bnsolv.f":68 -1
     (nil))
;;  succ:       24 (FALLTHRU)

;; basic block 24, loop depth 3, count 0, freq 0, maybe hot
;;  prev block 23, next block 25, flags: (NEW, REACHABLE, RTL)
;;  pred:       22
;;              23 (FALLTHRU)
(code_label 381 380 382 24 13 (nil) [1 uses])
(note 382 381 383 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 383 382 385 24 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [1 k+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [1 k+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":66 -1
     (nil))
(jump_insn 385 383 386 24 (set (pc)
        (label_ref 384)) "../src/bnsolv.f":66 -1
     (nil)
 -> 384)
;;  succ:       21 (DFS_BACK)

(barrier 386 385 387)
;; basic block 25, loop depth 2, count 0, freq 0, maybe hot
;;  prev block 24, next block 26, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       21
(code_label 387 386 388 25 12 (nil) [1 uses])
(note 388 387 389 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 389 388 390 25 (set (reg:SI 210 [ i.48_124 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [1 i+0 S4 A64])) "../src/bnsolv.f":71 -1
     (nil))
(insn 390 389 391 25 (set (reg:DI 211 [ _125 ])
        (sign_extend:DI (reg:SI 210 [ i.48_124 ]))) "../src/bnsolv.f":71 -1
     (nil))
(insn 391 390 392 25 (parallel [
            (set (reg:DI 212 [ _126 ])
                (mult:DI (reg:DI 665 [ stride.4_635 ])
                    (reg:DI 211 [ _125 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":71 -1
     (nil))
(insn 392 391 393 25 (parallel [
            (set (reg:DI 213 [ _127 ])
                (plus:DI (reg:DI 671 [ offset.5_642 ])
                    (reg:DI 212 [ _126 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":71 -1
     (nil))
(insn 393 392 394 25 (set (reg:SI 829)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 kpiv+0 S4 A32])) "../src/bnsolv.f":71 -1
     (nil))
(insn 394 393 395 25 (set (reg:DI 214 [ _128 ])
        (sign_extend:DI (reg:SI 829))) "../src/bnsolv.f":71 -1
     (nil))
(insn 395 394 396 25 (parallel [
            (set (reg:DI 215 [ _129 ])
                (mult:DI (reg:DI 663 [ stride.2_632 ])
                    (reg:DI 214 [ _128 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":71 -1
     (nil))
(insn 396 395 397 25 (parallel [
            (set (reg:DI 216 [ _130 ])
                (plus:DI (reg:DI 213 [ _127 ])
                    (reg:DI 215 [ _129 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":71 -1
     (nil))
(insn 397 396 398 25 (set (reg:SI 830)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [1 kx+0 S4 A32])) "../src/bnsolv.f":71 -1
     (nil))
(insn 398 397 399 25 (set (reg:DI 217 [ _131 ])
        (sign_extend:DI (reg:SI 830))) "../src/bnsolv.f":71 -1
     (nil))
(insn 399 398 400 25 (parallel [
            (set (reg:DI 218 [ _132 ])
                (plus:DI (reg:DI 216 [ _130 ])
                    (reg:DI 217 [ _131 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":71 -1
     (nil))
(insn 400 399 401 25 (set (reg/f:DI 831)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -648 [0xfffffffffffffd78])) [10 a+0 S8 A64])) "../src/bnsolv.f":71 -1
     (nil))
(insn 401 400 402 25 (set (reg:SF 219 [ _133 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 218 [ _132 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 831)) [3 *a_685(D) S4 A32])) "../src/bnsolv.f":71 -1
     (nil))
(insn 402 401 403 25 (set (reg:SF 832)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC1") [flags 0x2]) [3  S4 A32])) "../src/bnsolv.f":71 -1
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 403 402 404 25 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 219 [ _133 ])
            (reg:SF 832))) "../src/bnsolv.f":71 -1
     (nil))
(jump_insn 404 403 1358 25 (set (pc)
        (if_then_else (unordered (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref 438)
            (pc))) "../src/bnsolv.f":71 -1
     (nil)
 -> 438)
;;  succ:       30
;;              26 (FALLTHRU)

;; basic block 26, loop depth 2, count 0, freq 0, maybe hot
;;  prev block 25, next block 27, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       25 (FALLTHRU)
(note 1358 404 405 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 405 1358 406 26 (set (reg:SF 833)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC1") [flags 0x2]) [3  S4 A32])) "../src/bnsolv.f":71 -1
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 406 405 407 26 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 219 [ _133 ])
            (reg:SF 833))) "../src/bnsolv.f":71 -1
     (nil))
(jump_insn 407 406 1359 26 (set (pc)
        (if_then_else (uneq (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1364)
            (pc))) "../src/bnsolv.f":71 617 {*jcc_1}
     (nil)
 -> 1364)
;;  succ:       29
;;              27 (FALLTHRU)

;; basic block 27, loop depth 2, count 0, freq 0, maybe hot
;;  prev block 26, next block 29, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       26 (FALLTHRU)
(note 1359 407 408 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(jump_insn 408 1359 409 27 (set (pc)
        (label_ref 438)) "../src/bnsolv.f":71 -1
     (nil)
 -> 438)
;;  succ:       30

(barrier 409 408 1364)
;; basic block 29, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 27, next block 30, flags: (NEW, REACHABLE, RTL)
;;  pred:       26
(code_label 1364 409 411 29 56 (nil) [1 uses])
(note 411 1364 412 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 412 411 413 29 (set (reg/f:DI 834)
        (symbol_ref/f:DI ("*lC2") [flags 0x2]  <var_decl 0x143100ea0 *lC2>)) "../src/bnsolv.f":72 -1
     (nil))
(insn 413 412 414 29 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -632 [0xfffffffffffffd88])) [6 dt_parm.28.common.filename+0 S8 A64])
        (reg/f:DI 834)) "../src/bnsolv.f":72 -1
     (nil))
(insn 414 413 415 29 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -624 [0xfffffffffffffd90])) [1 dt_parm.28.common.line+0 S4 A128])
        (const_int 72 [0x48])) "../src/bnsolv.f":72 -1
     (nil))
(insn 415 414 416 29 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -640 [0xfffffffffffffd80])) [1 dt_parm.28.common.flags+0 S4 A128])
        (const_int 128 [0x80])) "../src/bnsolv.f":72 -1
     (nil))
(insn 416 415 417 29 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -636 [0xfffffffffffffd84])) [1 dt_parm.28.common.unit+0 S4 A32])
        (const_int 6 [0x6])) "../src/bnsolv.f":72 -1
     (nil))
(insn 417 416 418 29 (parallel [
            (set (reg:DI 835)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -640 [0xfffffffffffffd80])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":72 -1
     (nil))
(insn 418 417 419 29 (set (reg:DI 5 di)
        (reg:DI 835)) "../src/bnsolv.f":72 -1
     (nil))
(call_insn 419 418 420 29 (call (mem:QI (symbol_ref:DI ("_gfortran_st_write") [flags 0x41]  <function_decl 0x1427e0800 _gfortran_st_write>) [0 _gfortran_st_write S1 A8])
        (const_int 0 [0])) "../src/bnsolv.f":72 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 420 419 421 29 (parallel [
            (set (reg:DI 836)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -640 [0xfffffffffffffd80])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":72 -1
     (nil))
(insn 421 420 422 29 (set (reg:SI 1 dx)
        (const_int 22 [0x16])) "../src/bnsolv.f":72 -1
     (nil))
(insn 422 421 423 29 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*lC3") [flags 0x2]  <var_decl 0x143100f30 *lC3>)) "../src/bnsolv.f":72 -1
     (nil))
(insn 423 422 424 29 (set (reg:DI 5 di)
        (reg:DI 836)) "../src/bnsolv.f":72 -1
     (nil))
(call_insn 424 423 425 29 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_character_write") [flags 0x41]  <function_decl 0x1427d4900 _gfortran_transfer_character_write>) [0 _gfortran_transfer_character_write S1 A8])
        (const_int 0 [0])) "../src/bnsolv.f":72 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 425 424 426 29 (parallel [
            (set (reg:DI 837)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -152 [0xffffffffffffff68])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":72 -1
     (nil))
(insn 426 425 427 29 (parallel [
            (set (reg:DI 838)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -640 [0xfffffffffffffd80])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":72 -1
     (nil))
(insn 427 426 428 29 (set (reg:SI 1 dx)
        (const_int 4 [0x4])) "../src/bnsolv.f":72 -1
     (nil))
(insn 428 427 429 29 (set (reg:DI 4 si)
        (reg:DI 837)) "../src/bnsolv.f":72 -1
     (nil))
(insn 429 428 430 29 (set (reg:DI 5 di)
        (reg:DI 838)) "../src/bnsolv.f":72 -1
     (nil))
(call_insn 430 429 431 29 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_integer_write") [flags 0x41]  <function_decl 0x1427d4500 _gfortran_transfer_integer_write>) [0 _gfortran_transfer_integer_write S1 A8])
        (const_int 0 [0])) "../src/bnsolv.f":72 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 431 430 432 29 (parallel [
            (set (reg:DI 839)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -640 [0xfffffffffffffd80])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":72 -1
     (nil))
(insn 432 431 433 29 (set (reg:DI 5 di)
        (reg:DI 839)) "../src/bnsolv.f":72 -1
     (nil))
(call_insn 433 432 434 29 (call (mem:QI (symbol_ref:DI ("_gfortran_st_write_done") [flags 0x41]  <function_decl 0x1427e4300 _gfortran_st_write_done>) [0 _gfortran_st_write_done S1 A8])
        (const_int 0 [0])) "../src/bnsolv.f":72 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 434 433 435 29 (set (reg:SI 4 si)
        (const_int 0 [0])) "../src/bnsolv.f":73 -1
     (nil))
(insn 435 434 436 29 (set (reg:DI 5 di)
        (const_int 0 [0])) "../src/bnsolv.f":73 -1
     (nil))
(call_insn 436 435 437 29 (call (mem:QI (symbol_ref:DI ("_gfortran_stop_string") [flags 0x41]  <function_decl 0x1427c2200 _gfortran_stop_string>) [0 _gfortran_stop_string S1 A8])
        (const_int 0 [0])) "../src/bnsolv.f":73 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:      

(barrier 437 436 438)
;; basic block 30, loop depth 2, count 0, freq 0, maybe hot
;;  prev block 29, next block 31, flags: (NEW, REACHABLE, RTL)
;;  pred:       25
;;              27
(code_label 438 437 439 30 15 (nil) [2 uses])
(note 439 438 440 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 440 439 441 30 (set (reg:SI 220 [ i.49_134 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [1 i+0 S4 A64])) "../src/bnsolv.f":76 -1
     (nil))
(insn 441 440 442 30 (set (reg:DI 221 [ _135 ])
        (sign_extend:DI (reg:SI 220 [ i.49_134 ]))) "../src/bnsolv.f":76 -1
     (nil))
(insn 442 441 443 30 (parallel [
            (set (reg:DI 222 [ _136 ])
                (mult:DI (reg:DI 665 [ stride.4_635 ])
                    (reg:DI 221 [ _135 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":76 -1
     (nil))
(insn 443 442 444 30 (parallel [
            (set (reg:DI 223 [ _137 ])
                (plus:DI (reg:DI 671 [ offset.5_642 ])
                    (reg:DI 222 [ _136 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":76 -1
     (nil))
(insn 444 443 445 30 (set (reg:SI 840)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 kpiv+0 S4 A32])) "../src/bnsolv.f":76 -1
     (nil))
(insn 445 444 446 30 (set (reg:DI 224 [ _138 ])
        (sign_extend:DI (reg:SI 840))) "../src/bnsolv.f":76 -1
     (nil))
(insn 446 445 447 30 (parallel [
            (set (reg:DI 225 [ _139 ])
                (mult:DI (reg:DI 663 [ stride.2_632 ])
                    (reg:DI 224 [ _138 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":76 -1
     (nil))
(insn 447 446 448 30 (parallel [
            (set (reg:DI 226 [ _140 ])
                (plus:DI (reg:DI 223 [ _137 ])
                    (reg:DI 225 [ _139 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":76 -1
     (nil))
(insn 448 447 449 30 (set (reg:SI 841)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [1 kx+0 S4 A32])) "../src/bnsolv.f":76 -1
     (nil))
(insn 449 448 450 30 (set (reg:DI 227 [ _141 ])
        (sign_extend:DI (reg:SI 841))) "../src/bnsolv.f":76 -1
     (nil))
(insn 450 449 451 30 (parallel [
            (set (reg:DI 228 [ _142 ])
                (plus:DI (reg:DI 226 [ _140 ])
                    (reg:DI 227 [ _141 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":76 -1
     (nil))
(insn 451 450 452 30 (set (reg/f:DI 842)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -648 [0xfffffffffffffd78])) [10 a+0 S8 A64])) "../src/bnsolv.f":76 -1
     (nil))
(insn 452 451 453 30 (set (reg:SF 229 [ _143 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 228 [ _142 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 842)) [3 *a_685(D) S4 A32])) "../src/bnsolv.f":76 -1
     (nil))
(insn 453 452 454 30 (set (reg:SF 844)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC4") [flags 0x2]) [3  S4 A32])) "../src/bnsolv.f":76 -1
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 454 453 455 30 (set (reg:SF 843)
        (div:SF (reg:SF 844)
            (reg:SF 229 [ _143 ]))) "../src/bnsolv.f":76 -1
     (nil))
(insn 455 454 456 30 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -136 [0xffffffffffffff78])) [3 pivot+0 S4 A32])
        (reg:SF 843)) "../src/bnsolv.f":76 -1
     (nil))
(insn 456 455 457 30 (set (reg:SI 230 [ i.50_144 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [1 i+0 S4 A64])) "../src/bnsolv.f":79 -1
     (nil))
(insn 457 456 458 30 (set (reg:DI 231 [ _145 ])
        (sign_extend:DI (reg:SI 230 [ i.50_144 ]))) "../src/bnsolv.f":79 -1
     (nil))
(insn 458 457 459 30 (parallel [
            (set (reg:DI 232 [ _146 ])
                (mult:DI (reg:DI 665 [ stride.4_635 ])
                    (reg:DI 231 [ _145 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":79 -1
     (nil))
(insn 459 458 460 30 (parallel [
            (set (reg:DI 233 [ _147 ])
                (plus:DI (reg:DI 671 [ offset.5_642 ])
                    (reg:DI 232 [ _146 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":79 -1
     (nil))
(insn 460 459 461 30 (set (reg:SI 845)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 kpiv+0 S4 A32])) "../src/bnsolv.f":79 -1
     (nil))
(insn 461 460 462 30 (set (reg:DI 234 [ _148 ])
        (sign_extend:DI (reg:SI 845))) "../src/bnsolv.f":79 -1
     (nil))
(insn 462 461 463 30 (parallel [
            (set (reg:DI 235 [ _149 ])
                (mult:DI (reg:DI 663 [ stride.2_632 ])
                    (reg:DI 234 [ _148 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":79 -1
     (nil))
(insn 463 462 464 30 (parallel [
            (set (reg:DI 236 [ _150 ])
                (plus:DI (reg:DI 233 [ _147 ])
                    (reg:DI 235 [ _149 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":79 -1
     (nil))
(insn 464 463 465 30 (set (reg:SI 846)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 kpiv+0 S4 A32])) "../src/bnsolv.f":79 -1
     (nil))
(insn 465 464 466 30 (set (reg:DI 237 [ _151 ])
        (sign_extend:DI (reg:SI 846))) "../src/bnsolv.f":79 -1
     (nil))
(insn 466 465 467 30 (parallel [
            (set (reg:DI 238 [ _152 ])
                (plus:DI (reg:DI 236 [ _150 ])
                    (reg:DI 237 [ _151 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":79 -1
     (nil))
(insn 467 466 468 30 (set (reg:SI 239 [ i.51_153 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [1 i+0 S4 A64])) "../src/bnsolv.f":79 -1
     (nil))
(insn 468 467 469 30 (set (reg:DI 240 [ _154 ])
        (sign_extend:DI (reg:SI 239 [ i.51_153 ]))) "../src/bnsolv.f":79 -1
     (nil))
(insn 469 468 470 30 (parallel [
            (set (reg:DI 241 [ _155 ])
                (mult:DI (reg:DI 665 [ stride.4_635 ])
                    (reg:DI 240 [ _154 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":79 -1
     (nil))
(insn 470 469 471 30 (parallel [
            (set (reg:DI 242 [ _156 ])
                (plus:DI (reg:DI 671 [ offset.5_642 ])
                    (reg:DI 241 [ _155 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":79 -1
     (nil))
(insn 471 470 472 30 (set (reg:SI 847)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 kpiv+0 S4 A32])) "../src/bnsolv.f":79 -1
     (nil))
(insn 472 471 473 30 (set (reg:DI 243 [ _157 ])
        (sign_extend:DI (reg:SI 847))) "../src/bnsolv.f":79 -1
     (nil))
(insn 473 472 474 30 (parallel [
            (set (reg:DI 244 [ _158 ])
                (mult:DI (reg:DI 663 [ stride.2_632 ])
                    (reg:DI 243 [ _157 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":79 -1
     (nil))
(insn 474 473 475 30 (parallel [
            (set (reg:DI 245 [ _159 ])
                (plus:DI (reg:DI 242 [ _156 ])
                    (reg:DI 244 [ _158 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":79 -1
     (nil))
(insn 475 474 476 30 (set (reg:SI 848)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [1 kx+0 S4 A32])) "../src/bnsolv.f":79 -1
     (nil))
(insn 476 475 477 30 (set (reg:DI 246 [ _160 ])
        (sign_extend:DI (reg:SI 848))) "../src/bnsolv.f":79 -1
     (nil))
(insn 477 476 478 30 (parallel [
            (set (reg:DI 247 [ _161 ])
                (plus:DI (reg:DI 245 [ _159 ])
                    (reg:DI 246 [ _160 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":79 -1
     (nil))
(insn 478 477 479 30 (set (reg/f:DI 849)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -648 [0xfffffffffffffd78])) [10 a+0 S8 A64])) "../src/bnsolv.f":79 -1
     (nil))
(insn 479 478 480 30 (set (reg:SF 248 [ _162 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 238 [ _152 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 849)) [3 *a_685(D) S4 A32])) "../src/bnsolv.f":79 -1
     (nil))
(insn 480 479 481 30 (set (reg/f:DI 850)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -648 [0xfffffffffffffd78])) [10 a+0 S8 A64])) "../src/bnsolv.f":79 -1
     (nil))
(insn 481 480 482 30 (set (mem:SF (plus:DI (mult:DI (reg:DI 247 [ _161 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 850)) [3 *a_685(D) S4 A32])
        (reg:SF 248 [ _162 ])) "../src/bnsolv.f":79 -1
     (nil))
(insn 482 481 483 30 (set (reg:SI 708 [ _712 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -132 [0xffffffffffffff7c])) [1 kp1+0 S4 A32])) "../src/bnsolv.f":82 -1
     (nil))
(insn 483 482 484 30 (set (reg/f:DI 851)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -680 [0xfffffffffffffd58])) [11 nb+0 S8 A64])) "../src/bnsolv.f":82 -1
     (nil))
(insn 484 483 485 30 (set (reg:SI 709 [ _713 ])
        (mem:SI (reg/f:DI 851) [1 *nb_615(D)+0 S4 A32])) "../src/bnsolv.f":82 -1
     (nil))
(insn 485 484 549 30 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])
        (reg:SI 708 [ _712 ])) "../src/bnsolv.f":82 -1
     (nil))
;;  succ:       31 (FALLTHRU)

;; basic block 31, loop depth 3, count 0, freq 0, maybe hot
;;  prev block 30, next block 32, flags: (NEW, REACHABLE, RTL)
;;  pred:       30 (FALLTHRU)
;;              32 (DFS_BACK)
(code_label 549 485 486 31 18 (nil) [1 uses])
(note 486 549 487 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 487 486 488 31 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])
            (reg:SI 709 [ _713 ]))) "../src/bnsolv.f":82 -1
     (nil))
(insn 488 487 489 31 (set (reg:QI 710 [ _715 ])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "../src/bnsolv.f":82 -1
     (nil))
(insn 489 488 490 31 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 710 [ _715 ])
            (const_int 0 [0]))) "../src/bnsolv.f":82 -1
     (nil))
(jump_insn 490 489 491 31 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 552)
            (pc))) "../src/bnsolv.f":82 -1
     (nil)
 -> 552)
;;  succ:       33
;;              32 (FALLTHRU)

;; basic block 32, loop depth 3, count 0, freq 0, maybe hot
;;  prev block 31, next block 33, flags: (NEW, REACHABLE, RTL)
;;  pred:       31 (FALLTHRU)
(note 491 490 492 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 492 491 493 32 (set (reg:SI 249 [ i.52_163 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [1 i+0 S4 A64])) "../src/bnsolv.f":83 -1
     (nil))
(insn 493 492 494 32 (set (reg:DI 250 [ _164 ])
        (sign_extend:DI (reg:SI 249 [ i.52_163 ]))) "../src/bnsolv.f":83 -1
     (nil))
(insn 494 493 495 32 (parallel [
            (set (reg:DI 251 [ _165 ])
                (mult:DI (reg:DI 665 [ stride.4_635 ])
                    (reg:DI 250 [ _164 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":83 -1
     (nil))
(insn 495 494 496 32 (parallel [
            (set (reg:DI 252 [ _166 ])
                (plus:DI (reg:DI 671 [ offset.5_642 ])
                    (reg:DI 251 [ _165 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":83 -1
     (nil))
(insn 496 495 497 32 (set (reg:SI 852)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])) "../src/bnsolv.f":83 -1
     (nil))
(insn 497 496 498 32 (set (reg:DI 253 [ _167 ])
        (sign_extend:DI (reg:SI 852))) "../src/bnsolv.f":83 -1
     (nil))
(insn 498 497 499 32 (parallel [
            (set (reg:DI 254 [ _168 ])
                (mult:DI (reg:DI 663 [ stride.2_632 ])
                    (reg:DI 253 [ _167 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":83 -1
     (nil))
(insn 499 498 500 32 (parallel [
            (set (reg:DI 255 [ _169 ])
                (plus:DI (reg:DI 252 [ _166 ])
                    (reg:DI 254 [ _168 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":83 -1
     (nil))
(insn 500 499 501 32 (set (reg:SI 853)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [1 kx+0 S4 A32])) "../src/bnsolv.f":83 -1
     (nil))
(insn 501 500 502 32 (set (reg:DI 256 [ _170 ])
        (sign_extend:DI (reg:SI 853))) "../src/bnsolv.f":83 -1
     (nil))
(insn 502 501 503 32 (parallel [
            (set (reg:DI 257 [ _171 ])
                (plus:DI (reg:DI 255 [ _169 ])
                    (reg:DI 256 [ _170 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":83 -1
     (nil))
(insn 503 502 504 32 (set (reg/f:DI 854)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -648 [0xfffffffffffffd78])) [10 a+0 S8 A64])) "../src/bnsolv.f":83 -1
     (nil))
(insn 504 503 505 32 (set (reg:SF 258 [ _172 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 257 [ _171 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 854)) [3 *a_685(D) S4 A32])) "../src/bnsolv.f":83 -1
     (nil))
(insn 505 504 506 32 (set (reg:SF 856)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -136 [0xffffffffffffff78])) [3 pivot+0 S4 A32])) "../src/bnsolv.f":83 -1
     (nil))
(insn 506 505 507 32 (set (reg:SF 855)
        (mult:SF (reg:SF 856)
            (reg:SF 258 [ _172 ]))) "../src/bnsolv.f":83 -1
     (nil))
(insn 507 506 508 32 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -140 [0xffffffffffffff74])) [3 temp+0 S4 A32])
        (reg:SF 855)) "../src/bnsolv.f":83 -1
     (nil))
(insn 508 507 509 32 (set (reg:SI 259 [ i.53_173 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [1 i+0 S4 A64])) "../src/bnsolv.f":84 -1
     (nil))
(insn 509 508 510 32 (set (reg:DI 260 [ _174 ])
        (sign_extend:DI (reg:SI 259 [ i.53_173 ]))) "../src/bnsolv.f":84 -1
     (nil))
(insn 510 509 511 32 (parallel [
            (set (reg:DI 261 [ _175 ])
                (mult:DI (reg:DI 665 [ stride.4_635 ])
                    (reg:DI 260 [ _174 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":84 -1
     (nil))
(insn 511 510 512 32 (parallel [
            (set (reg:DI 262 [ _176 ])
                (plus:DI (reg:DI 671 [ offset.5_642 ])
                    (reg:DI 261 [ _175 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":84 -1
     (nil))
(insn 512 511 513 32 (set (reg:SI 857)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])) "../src/bnsolv.f":84 -1
     (nil))
(insn 513 512 514 32 (set (reg:DI 263 [ _177 ])
        (sign_extend:DI (reg:SI 857))) "../src/bnsolv.f":84 -1
     (nil))
(insn 514 513 515 32 (parallel [
            (set (reg:DI 264 [ _178 ])
                (mult:DI (reg:DI 663 [ stride.2_632 ])
                    (reg:DI 263 [ _177 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":84 -1
     (nil))
(insn 515 514 516 32 (parallel [
            (set (reg:DI 265 [ _179 ])
                (plus:DI (reg:DI 262 [ _176 ])
                    (reg:DI 264 [ _178 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":84 -1
     (nil))
(insn 516 515 517 32 (set (reg:SI 858)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 kpiv+0 S4 A32])) "../src/bnsolv.f":84 -1
     (nil))
(insn 517 516 518 32 (set (reg:DI 266 [ _180 ])
        (sign_extend:DI (reg:SI 858))) "../src/bnsolv.f":84 -1
     (nil))
(insn 518 517 519 32 (parallel [
            (set (reg:DI 267 [ _181 ])
                (plus:DI (reg:DI 265 [ _179 ])
                    (reg:DI 266 [ _180 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":84 -1
     (nil))
(insn 519 518 520 32 (set (reg:SI 268 [ i.54_182 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [1 i+0 S4 A64])) "../src/bnsolv.f":84 -1
     (nil))
(insn 520 519 521 32 (set (reg:DI 269 [ _183 ])
        (sign_extend:DI (reg:SI 268 [ i.54_182 ]))) "../src/bnsolv.f":84 -1
     (nil))
(insn 521 520 522 32 (parallel [
            (set (reg:DI 270 [ _184 ])
                (mult:DI (reg:DI 665 [ stride.4_635 ])
                    (reg:DI 269 [ _183 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":84 -1
     (nil))
(insn 522 521 523 32 (parallel [
            (set (reg:DI 271 [ _185 ])
                (plus:DI (reg:DI 671 [ offset.5_642 ])
                    (reg:DI 270 [ _184 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":84 -1
     (nil))
(insn 523 522 524 32 (set (reg:SI 859)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])) "../src/bnsolv.f":84 -1
     (nil))
(insn 524 523 525 32 (set (reg:DI 272 [ _186 ])
        (sign_extend:DI (reg:SI 859))) "../src/bnsolv.f":84 -1
     (nil))
(insn 525 524 526 32 (parallel [
            (set (reg:DI 273 [ _187 ])
                (mult:DI (reg:DI 663 [ stride.2_632 ])
                    (reg:DI 272 [ _186 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":84 -1
     (nil))
(insn 526 525 527 32 (parallel [
            (set (reg:DI 274 [ _188 ])
                (plus:DI (reg:DI 271 [ _185 ])
                    (reg:DI 273 [ _187 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":84 -1
     (nil))
(insn 527 526 528 32 (set (reg:SI 860)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [1 kx+0 S4 A32])) "../src/bnsolv.f":84 -1
     (nil))
(insn 528 527 529 32 (set (reg:DI 275 [ _189 ])
        (sign_extend:DI (reg:SI 860))) "../src/bnsolv.f":84 -1
     (nil))
(insn 529 528 530 32 (parallel [
            (set (reg:DI 276 [ _190 ])
                (plus:DI (reg:DI 274 [ _188 ])
                    (reg:DI 275 [ _189 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":84 -1
     (nil))
(insn 530 529 531 32 (set (reg/f:DI 861)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -648 [0xfffffffffffffd78])) [10 a+0 S8 A64])) "../src/bnsolv.f":84 -1
     (nil))
(insn 531 530 532 32 (set (reg:SF 277 [ _191 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 267 [ _181 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 861)) [3 *a_685(D) S4 A32])) "../src/bnsolv.f":84 -1
     (nil))
(insn 532 531 533 32 (set (reg/f:DI 862)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -648 [0xfffffffffffffd78])) [10 a+0 S8 A64])) "../src/bnsolv.f":84 -1
     (nil))
(insn 533 532 534 32 (set (mem:SF (plus:DI (mult:DI (reg:DI 276 [ _190 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 862)) [3 *a_685(D) S4 A32])
        (reg:SF 277 [ _191 ])) "../src/bnsolv.f":84 -1
     (nil))
(insn 534 533 535 32 (set (reg:SI 278 [ i.55_192 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [1 i+0 S4 A64])) "../src/bnsolv.f":85 -1
     (nil))
(insn 535 534 536 32 (set (reg:DI 279 [ _193 ])
        (sign_extend:DI (reg:SI 278 [ i.55_192 ]))) "../src/bnsolv.f":85 -1
     (nil))
(insn 536 535 537 32 (parallel [
            (set (reg:DI 280 [ _194 ])
                (mult:DI (reg:DI 665 [ stride.4_635 ])
                    (reg:DI 279 [ _193 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":85 -1
     (nil))
(insn 537 536 538 32 (parallel [
            (set (reg:DI 281 [ _195 ])
                (plus:DI (reg:DI 671 [ offset.5_642 ])
                    (reg:DI 280 [ _194 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":85 -1
     (nil))
(insn 538 537 539 32 (set (reg:SI 863)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])) "../src/bnsolv.f":85 -1
     (nil))
(insn 539 538 540 32 (set (reg:DI 282 [ _196 ])
        (sign_extend:DI (reg:SI 863))) "../src/bnsolv.f":85 -1
     (nil))
(insn 540 539 541 32 (parallel [
            (set (reg:DI 283 [ _197 ])
                (mult:DI (reg:DI 663 [ stride.2_632 ])
                    (reg:DI 282 [ _196 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":85 -1
     (nil))
(insn 541 540 542 32 (parallel [
            (set (reg:DI 284 [ _198 ])
                (plus:DI (reg:DI 281 [ _195 ])
                    (reg:DI 283 [ _197 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":85 -1
     (nil))
(insn 542 541 543 32 (set (reg:SI 864)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 kpiv+0 S4 A32])) "../src/bnsolv.f":85 -1
     (nil))
(insn 543 542 544 32 (set (reg:DI 285 [ _199 ])
        (sign_extend:DI (reg:SI 864))) "../src/bnsolv.f":85 -1
     (nil))
(insn 544 543 545 32 (parallel [
            (set (reg:DI 286 [ _200 ])
                (plus:DI (reg:DI 284 [ _198 ])
                    (reg:DI 285 [ _199 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":85 -1
     (nil))
(insn 545 544 546 32 (set (reg/f:DI 865)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -648 [0xfffffffffffffd78])) [10 a+0 S8 A64])) "../src/bnsolv.f":85 -1
     (nil))
(insn 546 545 547 32 (set (reg:SF 866)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -140 [0xffffffffffffff74])) [3 temp+0 S4 A32])) "../src/bnsolv.f":85 -1
     (nil))
(insn 547 546 548 32 (set (mem:SF (plus:DI (mult:DI (reg:DI 286 [ _200 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 865)) [3 *a_685(D) S4 A32])
        (reg:SF 866)) "../src/bnsolv.f":85 -1
     (nil))
(insn 548 547 550 32 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":82 -1
     (nil))
(jump_insn 550 548 551 32 (set (pc)
        (label_ref 549)) "../src/bnsolv.f":82 -1
     (nil)
 -> 549)
;;  succ:       31 (DFS_BACK)

(barrier 551 550 552)
;; basic block 33, loop depth 2, count 0, freq 0, maybe hot
;;  prev block 32, next block 34, flags: (NEW, REACHABLE, RTL)
;;  pred:       31
(code_label 552 551 553 33 17 (nil) [1 uses])
(note 553 552 554 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 554 553 555 33 (set (reg/f:DI 867)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -680 [0xfffffffffffffd58])) [11 nb+0 S8 A64])) "../src/bnsolv.f":88 -1
     (nil))
(insn 555 554 556 33 (set (reg:SI 711 [ _720 ])
        (mem:SI (reg/f:DI 867) [1 *nb_615(D)+0 S4 A32])) "../src/bnsolv.f":88 -1
     (nil))
(insn 556 555 620 33 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])
        (const_int 1 [0x1])) "../src/bnsolv.f":88 -1
     (nil))
;;  succ:       34 (FALLTHRU)

;; basic block 34, loop depth 3, count 0, freq 0, maybe hot
;;  prev block 33, next block 35, flags: (NEW, REACHABLE, RTL)
;;  pred:       33 (FALLTHRU)
;;              35 (DFS_BACK)
(code_label 620 556 557 34 20 (nil) [1 uses])
(note 557 620 558 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 558 557 559 34 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])
            (reg:SI 711 [ _720 ]))) "../src/bnsolv.f":88 -1
     (nil))
(insn 559 558 560 34 (set (reg:QI 712 [ _722 ])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "../src/bnsolv.f":88 -1
     (nil))
(insn 560 559 561 34 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 712 [ _722 ])
            (const_int 0 [0]))) "../src/bnsolv.f":88 -1
     (nil))
(jump_insn 561 560 562 34 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 623)
            (pc))) "../src/bnsolv.f":88 -1
     (nil)
 -> 623)
;;  succ:       36
;;              35 (FALLTHRU)

;; basic block 35, loop depth 3, count 0, freq 0, maybe hot
;;  prev block 34, next block 36, flags: (NEW, REACHABLE, RTL)
;;  pred:       34 (FALLTHRU)
(note 562 561 563 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 563 562 564 35 (set (reg:SI 287 [ i.56_201 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [1 i+0 S4 A64])) "../src/bnsolv.f":89 -1
     (nil))
(insn 564 563 565 35 (set (reg:DI 288 [ _202 ])
        (sign_extend:DI (reg:SI 287 [ i.56_201 ]))) "../src/bnsolv.f":89 -1
     (nil))
(insn 565 564 566 35 (parallel [
            (set (reg:DI 289 [ _203 ])
                (mult:DI (reg:DI 675 [ stride.18_648 ])
                    (reg:DI 288 [ _202 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":89 -1
     (nil))
(insn 566 565 567 35 (parallel [
            (set (reg:DI 290 [ _204 ])
                (plus:DI (reg:DI 681 [ offset.19_655 ])
                    (reg:DI 289 [ _203 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":89 -1
     (nil))
(insn 567 566 568 35 (set (reg:SI 868)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])) "../src/bnsolv.f":89 -1
     (nil))
(insn 568 567 569 35 (set (reg:DI 291 [ _205 ])
        (sign_extend:DI (reg:SI 868))) "../src/bnsolv.f":89 -1
     (nil))
(insn 569 568 570 35 (parallel [
            (set (reg:DI 292 [ _206 ])
                (mult:DI (reg:DI 673 [ stride.16_645 ])
                    (reg:DI 291 [ _205 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":89 -1
     (nil))
(insn 570 569 571 35 (parallel [
            (set (reg:DI 293 [ _207 ])
                (plus:DI (reg:DI 290 [ _204 ])
                    (reg:DI 292 [ _206 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":89 -1
     (nil))
(insn 571 570 572 35 (set (reg:SI 869)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [1 kx+0 S4 A32])) "../src/bnsolv.f":89 -1
     (nil))
(insn 572 571 573 35 (set (reg:DI 294 [ _208 ])
        (sign_extend:DI (reg:SI 869))) "../src/bnsolv.f":89 -1
     (nil))
(insn 573 572 574 35 (parallel [
            (set (reg:DI 295 [ _209 ])
                (plus:DI (reg:DI 293 [ _207 ])
                    (reg:DI 294 [ _208 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":89 -1
     (nil))
(insn 574 573 575 35 (set (reg/f:DI 870)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -664 [0xfffffffffffffd68])) [10 c+0 S8 A64])) "../src/bnsolv.f":89 -1
     (nil))
(insn 575 574 576 35 (set (reg:SF 296 [ _210 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 295 [ _209 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 870)) [3 *c_686(D) S4 A32])) "../src/bnsolv.f":89 -1
     (nil))
(insn 576 575 577 35 (set (reg:SF 872)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -136 [0xffffffffffffff78])) [3 pivot+0 S4 A32])) "../src/bnsolv.f":89 -1
     (nil))
(insn 577 576 578 35 (set (reg:SF 871)
        (mult:SF (reg:SF 872)
            (reg:SF 296 [ _210 ]))) "../src/bnsolv.f":89 -1
     (nil))
(insn 578 577 579 35 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -140 [0xffffffffffffff74])) [3 temp+0 S4 A32])
        (reg:SF 871)) "../src/bnsolv.f":89 -1
     (nil))
(insn 579 578 580 35 (set (reg:SI 297 [ i.57_211 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [1 i+0 S4 A64])) "../src/bnsolv.f":90 -1
     (nil))
(insn 580 579 581 35 (set (reg:DI 298 [ _212 ])
        (sign_extend:DI (reg:SI 297 [ i.57_211 ]))) "../src/bnsolv.f":90 -1
     (nil))
(insn 581 580 582 35 (parallel [
            (set (reg:DI 299 [ _213 ])
                (mult:DI (reg:DI 675 [ stride.18_648 ])
                    (reg:DI 298 [ _212 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":90 -1
     (nil))
(insn 582 581 583 35 (parallel [
            (set (reg:DI 300 [ _214 ])
                (plus:DI (reg:DI 681 [ offset.19_655 ])
                    (reg:DI 299 [ _213 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":90 -1
     (nil))
(insn 583 582 584 35 (set (reg:SI 873)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])) "../src/bnsolv.f":90 -1
     (nil))
(insn 584 583 585 35 (set (reg:DI 301 [ _215 ])
        (sign_extend:DI (reg:SI 873))) "../src/bnsolv.f":90 -1
     (nil))
(insn 585 584 586 35 (parallel [
            (set (reg:DI 302 [ _216 ])
                (mult:DI (reg:DI 673 [ stride.16_645 ])
                    (reg:DI 301 [ _215 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":90 -1
     (nil))
(insn 586 585 587 35 (parallel [
            (set (reg:DI 303 [ _217 ])
                (plus:DI (reg:DI 300 [ _214 ])
                    (reg:DI 302 [ _216 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":90 -1
     (nil))
(insn 587 586 588 35 (set (reg:SI 874)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 kpiv+0 S4 A32])) "../src/bnsolv.f":90 -1
     (nil))
(insn 588 587 589 35 (set (reg:DI 304 [ _218 ])
        (sign_extend:DI (reg:SI 874))) "../src/bnsolv.f":90 -1
     (nil))
(insn 589 588 590 35 (parallel [
            (set (reg:DI 305 [ _219 ])
                (plus:DI (reg:DI 303 [ _217 ])
                    (reg:DI 304 [ _218 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":90 -1
     (nil))
(insn 590 589 591 35 (set (reg:SI 306 [ i.58_220 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [1 i+0 S4 A64])) "../src/bnsolv.f":90 -1
     (nil))
(insn 591 590 592 35 (set (reg:DI 307 [ _221 ])
        (sign_extend:DI (reg:SI 306 [ i.58_220 ]))) "../src/bnsolv.f":90 -1
     (nil))
(insn 592 591 593 35 (parallel [
            (set (reg:DI 308 [ _222 ])
                (mult:DI (reg:DI 675 [ stride.18_648 ])
                    (reg:DI 307 [ _221 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":90 -1
     (nil))
(insn 593 592 594 35 (parallel [
            (set (reg:DI 309 [ _223 ])
                (plus:DI (reg:DI 681 [ offset.19_655 ])
                    (reg:DI 308 [ _222 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":90 -1
     (nil))
(insn 594 593 595 35 (set (reg:SI 875)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])) "../src/bnsolv.f":90 -1
     (nil))
(insn 595 594 596 35 (set (reg:DI 310 [ _224 ])
        (sign_extend:DI (reg:SI 875))) "../src/bnsolv.f":90 -1
     (nil))
(insn 596 595 597 35 (parallel [
            (set (reg:DI 311 [ _225 ])
                (mult:DI (reg:DI 673 [ stride.16_645 ])
                    (reg:DI 310 [ _224 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":90 -1
     (nil))
(insn 597 596 598 35 (parallel [
            (set (reg:DI 312 [ _226 ])
                (plus:DI (reg:DI 309 [ _223 ])
                    (reg:DI 311 [ _225 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":90 -1
     (nil))
(insn 598 597 599 35 (set (reg:SI 876)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [1 kx+0 S4 A32])) "../src/bnsolv.f":90 -1
     (nil))
(insn 599 598 600 35 (set (reg:DI 313 [ _227 ])
        (sign_extend:DI (reg:SI 876))) "../src/bnsolv.f":90 -1
     (nil))
(insn 600 599 601 35 (parallel [
            (set (reg:DI 314 [ _228 ])
                (plus:DI (reg:DI 312 [ _226 ])
                    (reg:DI 313 [ _227 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":90 -1
     (nil))
(insn 601 600 602 35 (set (reg/f:DI 877)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -664 [0xfffffffffffffd68])) [10 c+0 S8 A64])) "../src/bnsolv.f":90 -1
     (nil))
(insn 602 601 603 35 (set (reg:SF 315 [ _229 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 305 [ _219 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 877)) [3 *c_686(D) S4 A32])) "../src/bnsolv.f":90 -1
     (nil))
(insn 603 602 604 35 (set (reg/f:DI 878)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -664 [0xfffffffffffffd68])) [10 c+0 S8 A64])) "../src/bnsolv.f":90 -1
     (nil))
(insn 604 603 605 35 (set (mem:SF (plus:DI (mult:DI (reg:DI 314 [ _228 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 878)) [3 *c_686(D) S4 A32])
        (reg:SF 315 [ _229 ])) "../src/bnsolv.f":90 -1
     (nil))
(insn 605 604 606 35 (set (reg:SI 316 [ i.59_230 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [1 i+0 S4 A64])) "../src/bnsolv.f":91 -1
     (nil))
(insn 606 605 607 35 (set (reg:DI 317 [ _231 ])
        (sign_extend:DI (reg:SI 316 [ i.59_230 ]))) "../src/bnsolv.f":91 -1
     (nil))
(insn 607 606 608 35 (parallel [
            (set (reg:DI 318 [ _232 ])
                (mult:DI (reg:DI 675 [ stride.18_648 ])
                    (reg:DI 317 [ _231 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":91 -1
     (nil))
(insn 608 607 609 35 (parallel [
            (set (reg:DI 319 [ _233 ])
                (plus:DI (reg:DI 681 [ offset.19_655 ])
                    (reg:DI 318 [ _232 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":91 -1
     (nil))
(insn 609 608 610 35 (set (reg:SI 879)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])) "../src/bnsolv.f":91 -1
     (nil))
(insn 610 609 611 35 (set (reg:DI 320 [ _234 ])
        (sign_extend:DI (reg:SI 879))) "../src/bnsolv.f":91 -1
     (nil))
(insn 611 610 612 35 (parallel [
            (set (reg:DI 321 [ _235 ])
                (mult:DI (reg:DI 673 [ stride.16_645 ])
                    (reg:DI 320 [ _234 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":91 -1
     (nil))
(insn 612 611 613 35 (parallel [
            (set (reg:DI 322 [ _236 ])
                (plus:DI (reg:DI 319 [ _233 ])
                    (reg:DI 321 [ _235 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":91 -1
     (nil))
(insn 613 612 614 35 (set (reg:SI 880)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 kpiv+0 S4 A32])) "../src/bnsolv.f":91 -1
     (nil))
(insn 614 613 615 35 (set (reg:DI 323 [ _237 ])
        (sign_extend:DI (reg:SI 880))) "../src/bnsolv.f":91 -1
     (nil))
(insn 615 614 616 35 (parallel [
            (set (reg:DI 324 [ _238 ])
                (plus:DI (reg:DI 322 [ _236 ])
                    (reg:DI 323 [ _237 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":91 -1
     (nil))
(insn 616 615 617 35 (set (reg/f:DI 881)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -664 [0xfffffffffffffd68])) [10 c+0 S8 A64])) "../src/bnsolv.f":91 -1
     (nil))
(insn 617 616 618 35 (set (reg:SF 882)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -140 [0xffffffffffffff74])) [3 temp+0 S4 A32])) "../src/bnsolv.f":91 -1
     (nil))
(insn 618 617 619 35 (set (mem:SF (plus:DI (mult:DI (reg:DI 324 [ _238 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 881)) [3 *c_686(D) S4 A32])
        (reg:SF 882)) "../src/bnsolv.f":91 -1
     (nil))
(insn 619 618 621 35 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":88 -1
     (nil))
(jump_insn 621 619 622 35 (set (pc)
        (label_ref 620)) "../src/bnsolv.f":88 -1
     (nil)
 -> 620)
;;  succ:       34 (DFS_BACK)

(barrier 622 621 623)
;; basic block 36, loop depth 2, count 0, freq 0, maybe hot
;;  prev block 35, next block 37, flags: (NEW, REACHABLE, RTL)
;;  pred:       34
(code_label 623 622 624 36 19 (nil) [1 uses])
(note 624 623 625 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 625 624 626 36 (set (reg/f:DI 883)
        (mem/f/c:DI (reg/f:DI 81 virtual-incoming-args) [11 nrhs+0 S8 A64])) "../src/bnsolv.f":94 -1
     (nil))
(insn 626 625 627 36 (set (reg:SI 713 [ _727 ])
        (mem:SI (reg/f:DI 883) [1 *nrhs_689(D)+0 S4 A32])) "../src/bnsolv.f":94 -1
     (nil))
(insn 627 626 691 36 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])
        (const_int 1 [0x1])) "../src/bnsolv.f":94 -1
     (nil))
;;  succ:       37 (FALLTHRU)

;; basic block 37, loop depth 3, count 0, freq 0, maybe hot
;;  prev block 36, next block 38, flags: (NEW, REACHABLE, RTL)
;;  pred:       36 (FALLTHRU)
;;              38 (DFS_BACK)
(code_label 691 627 628 37 22 (nil) [1 uses])
(note 628 691 629 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 629 628 630 37 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])
            (reg:SI 713 [ _727 ]))) "../src/bnsolv.f":94 -1
     (nil))
(insn 630 629 631 37 (set (reg:QI 714 [ _729 ])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "../src/bnsolv.f":94 -1
     (nil))
(insn 631 630 632 37 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 714 [ _729 ])
            (const_int 0 [0]))) "../src/bnsolv.f":94 -1
     (nil))
(jump_insn 632 631 633 37 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 694)
            (pc))) "../src/bnsolv.f":94 -1
     (nil)
 -> 694)
;;  succ:       39
;;              38 (FALLTHRU)

;; basic block 38, loop depth 3, count 0, freq 0, maybe hot
;;  prev block 37, next block 39, flags: (NEW, REACHABLE, RTL)
;;  pred:       37 (FALLTHRU)
(note 633 632 634 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 634 633 635 38 (set (reg:SI 325 [ i.60_239 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [1 i+0 S4 A64])) "../src/bnsolv.f":95 -1
     (nil))
(insn 635 634 636 38 (set (reg:DI 326 [ _240 ])
        (sign_extend:DI (reg:SI 325 [ i.60_239 ]))) "../src/bnsolv.f":95 -1
     (nil))
(insn 636 635 637 38 (parallel [
            (set (reg:DI 327 [ _241 ])
                (mult:DI (reg:DI 685 [ stride.25_662 ])
                    (reg:DI 326 [ _240 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":95 -1
     (nil))
(insn 637 636 638 38 (parallel [
            (set (reg:DI 328 [ _242 ])
                (plus:DI (reg:DI 691 [ offset.26_669 ])
                    (reg:DI 327 [ _241 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":95 -1
     (nil))
(insn 638 637 639 38 (set (reg:SI 884)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])) "../src/bnsolv.f":95 -1
     (nil))
(insn 639 638 640 38 (set (reg:DI 329 [ _243 ])
        (sign_extend:DI (reg:SI 884))) "../src/bnsolv.f":95 -1
     (nil))
(insn 640 639 641 38 (parallel [
            (set (reg:DI 330 [ _244 ])
                (mult:DI (reg:DI 683 [ stride.23_658 ])
                    (reg:DI 329 [ _243 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":95 -1
     (nil))
(insn 641 640 642 38 (parallel [
            (set (reg:DI 331 [ _245 ])
                (plus:DI (reg:DI 328 [ _242 ])
                    (reg:DI 330 [ _244 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":95 -1
     (nil))
(insn 642 641 643 38 (set (reg:SI 885)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [1 kx+0 S4 A32])) "../src/bnsolv.f":95 -1
     (nil))
(insn 643 642 644 38 (set (reg:DI 332 [ _246 ])
        (sign_extend:DI (reg:SI 885))) "../src/bnsolv.f":95 -1
     (nil))
(insn 644 643 645 38 (parallel [
            (set (reg:DI 333 [ _247 ])
                (plus:DI (reg:DI 331 [ _245 ])
                    (reg:DI 332 [ _246 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":95 -1
     (nil))
(insn 645 644 646 38 (set (reg/f:DI 886)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -672 [0xfffffffffffffd60])) [10 r+0 S8 A64])) "../src/bnsolv.f":95 -1
     (nil))
(insn 646 645 647 38 (set (reg:SF 334 [ _248 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 333 [ _247 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 886)) [3 *r_693(D) S4 A32])) "../src/bnsolv.f":95 -1
     (nil))
(insn 647 646 648 38 (set (reg:SF 888)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -136 [0xffffffffffffff78])) [3 pivot+0 S4 A32])) "../src/bnsolv.f":95 -1
     (nil))
(insn 648 647 649 38 (set (reg:SF 887)
        (mult:SF (reg:SF 888)
            (reg:SF 334 [ _248 ]))) "../src/bnsolv.f":95 -1
     (nil))
(insn 649 648 650 38 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -140 [0xffffffffffffff74])) [3 temp+0 S4 A32])
        (reg:SF 887)) "../src/bnsolv.f":95 -1
     (nil))
(insn 650 649 651 38 (set (reg:SI 335 [ i.61_249 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [1 i+0 S4 A64])) "../src/bnsolv.f":96 -1
     (nil))
(insn 651 650 652 38 (set (reg:DI 336 [ _250 ])
        (sign_extend:DI (reg:SI 335 [ i.61_249 ]))) "../src/bnsolv.f":96 -1
     (nil))
(insn 652 651 653 38 (parallel [
            (set (reg:DI 337 [ _251 ])
                (mult:DI (reg:DI 685 [ stride.25_662 ])
                    (reg:DI 336 [ _250 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":96 -1
     (nil))
(insn 653 652 654 38 (parallel [
            (set (reg:DI 338 [ _252 ])
                (plus:DI (reg:DI 691 [ offset.26_669 ])
                    (reg:DI 337 [ _251 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":96 -1
     (nil))
(insn 654 653 655 38 (set (reg:SI 889)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])) "../src/bnsolv.f":96 -1
     (nil))
(insn 655 654 656 38 (set (reg:DI 339 [ _253 ])
        (sign_extend:DI (reg:SI 889))) "../src/bnsolv.f":96 -1
     (nil))
(insn 656 655 657 38 (parallel [
            (set (reg:DI 340 [ _254 ])
                (mult:DI (reg:DI 683 [ stride.23_658 ])
                    (reg:DI 339 [ _253 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":96 -1
     (nil))
(insn 657 656 658 38 (parallel [
            (set (reg:DI 341 [ _255 ])
                (plus:DI (reg:DI 338 [ _252 ])
                    (reg:DI 340 [ _254 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":96 -1
     (nil))
(insn 658 657 659 38 (set (reg:SI 890)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 kpiv+0 S4 A32])) "../src/bnsolv.f":96 -1
     (nil))
(insn 659 658 660 38 (set (reg:DI 342 [ _256 ])
        (sign_extend:DI (reg:SI 890))) "../src/bnsolv.f":96 -1
     (nil))
(insn 660 659 661 38 (parallel [
            (set (reg:DI 343 [ _257 ])
                (plus:DI (reg:DI 341 [ _255 ])
                    (reg:DI 342 [ _256 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":96 -1
     (nil))
(insn 661 660 662 38 (set (reg:SI 344 [ i.62_258 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [1 i+0 S4 A64])) "../src/bnsolv.f":96 -1
     (nil))
(insn 662 661 663 38 (set (reg:DI 345 [ _259 ])
        (sign_extend:DI (reg:SI 344 [ i.62_258 ]))) "../src/bnsolv.f":96 -1
     (nil))
(insn 663 662 664 38 (parallel [
            (set (reg:DI 346 [ _260 ])
                (mult:DI (reg:DI 685 [ stride.25_662 ])
                    (reg:DI 345 [ _259 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":96 -1
     (nil))
(insn 664 663 665 38 (parallel [
            (set (reg:DI 347 [ _261 ])
                (plus:DI (reg:DI 691 [ offset.26_669 ])
                    (reg:DI 346 [ _260 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":96 -1
     (nil))
(insn 665 664 666 38 (set (reg:SI 891)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])) "../src/bnsolv.f":96 -1
     (nil))
(insn 666 665 667 38 (set (reg:DI 348 [ _262 ])
        (sign_extend:DI (reg:SI 891))) "../src/bnsolv.f":96 -1
     (nil))
(insn 667 666 668 38 (parallel [
            (set (reg:DI 349 [ _263 ])
                (mult:DI (reg:DI 683 [ stride.23_658 ])
                    (reg:DI 348 [ _262 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":96 -1
     (nil))
(insn 668 667 669 38 (parallel [
            (set (reg:DI 350 [ _264 ])
                (plus:DI (reg:DI 347 [ _261 ])
                    (reg:DI 349 [ _263 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":96 -1
     (nil))
(insn 669 668 670 38 (set (reg:SI 892)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [1 kx+0 S4 A32])) "../src/bnsolv.f":96 -1
     (nil))
(insn 670 669 671 38 (set (reg:DI 351 [ _265 ])
        (sign_extend:DI (reg:SI 892))) "../src/bnsolv.f":96 -1
     (nil))
(insn 671 670 672 38 (parallel [
            (set (reg:DI 352 [ _266 ])
                (plus:DI (reg:DI 350 [ _264 ])
                    (reg:DI 351 [ _265 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":96 -1
     (nil))
(insn 672 671 673 38 (set (reg/f:DI 893)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -672 [0xfffffffffffffd60])) [10 r+0 S8 A64])) "../src/bnsolv.f":96 -1
     (nil))
(insn 673 672 674 38 (set (reg:SF 353 [ _267 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 343 [ _257 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 893)) [3 *r_693(D) S4 A32])) "../src/bnsolv.f":96 -1
     (nil))
(insn 674 673 675 38 (set (reg/f:DI 894)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -672 [0xfffffffffffffd60])) [10 r+0 S8 A64])) "../src/bnsolv.f":96 -1
     (nil))
(insn 675 674 676 38 (set (mem:SF (plus:DI (mult:DI (reg:DI 352 [ _266 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 894)) [3 *r_693(D) S4 A32])
        (reg:SF 353 [ _267 ])) "../src/bnsolv.f":96 -1
     (nil))
(insn 676 675 677 38 (set (reg:SI 354 [ i.63_268 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [1 i+0 S4 A64])) "../src/bnsolv.f":97 -1
     (nil))
(insn 677 676 678 38 (set (reg:DI 355 [ _269 ])
        (sign_extend:DI (reg:SI 354 [ i.63_268 ]))) "../src/bnsolv.f":97 -1
     (nil))
(insn 678 677 679 38 (parallel [
            (set (reg:DI 356 [ _270 ])
                (mult:DI (reg:DI 685 [ stride.25_662 ])
                    (reg:DI 355 [ _269 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":97 -1
     (nil))
(insn 679 678 680 38 (parallel [
            (set (reg:DI 357 [ _271 ])
                (plus:DI (reg:DI 691 [ offset.26_669 ])
                    (reg:DI 356 [ _270 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":97 -1
     (nil))
(insn 680 679 681 38 (set (reg:SI 895)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])) "../src/bnsolv.f":97 -1
     (nil))
(insn 681 680 682 38 (set (reg:DI 358 [ _272 ])
        (sign_extend:DI (reg:SI 895))) "../src/bnsolv.f":97 -1
     (nil))
(insn 682 681 683 38 (parallel [
            (set (reg:DI 359 [ _273 ])
                (mult:DI (reg:DI 683 [ stride.23_658 ])
                    (reg:DI 358 [ _272 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":97 -1
     (nil))
(insn 683 682 684 38 (parallel [
            (set (reg:DI 360 [ _274 ])
                (plus:DI (reg:DI 357 [ _271 ])
                    (reg:DI 359 [ _273 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":97 -1
     (nil))
(insn 684 683 685 38 (set (reg:SI 896)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 kpiv+0 S4 A32])) "../src/bnsolv.f":97 -1
     (nil))
(insn 685 684 686 38 (set (reg:DI 361 [ _275 ])
        (sign_extend:DI (reg:SI 896))) "../src/bnsolv.f":97 -1
     (nil))
(insn 686 685 687 38 (parallel [
            (set (reg:DI 362 [ _276 ])
                (plus:DI (reg:DI 360 [ _274 ])
                    (reg:DI 361 [ _275 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":97 -1
     (nil))
(insn 687 686 688 38 (set (reg/f:DI 897)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -672 [0xfffffffffffffd60])) [10 r+0 S8 A64])) "../src/bnsolv.f":97 -1
     (nil))
(insn 688 687 689 38 (set (reg:SF 898)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -140 [0xffffffffffffff74])) [3 temp+0 S4 A32])) "../src/bnsolv.f":97 -1
     (nil))
(insn 689 688 690 38 (set (mem:SF (plus:DI (mult:DI (reg:DI 362 [ _276 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 897)) [3 *r_693(D) S4 A32])
        (reg:SF 898)) "../src/bnsolv.f":97 -1
     (nil))
(insn 690 689 692 38 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":94 -1
     (nil))
(jump_insn 692 690 693 38 (set (pc)
        (label_ref 691)) "../src/bnsolv.f":94 -1
     (nil)
 -> 691)
;;  succ:       37 (DFS_BACK)

(barrier 693 692 694)
;; basic block 39, loop depth 2, count 0, freq 0, maybe hot
;;  prev block 38, next block 40, flags: (NEW, REACHABLE, RTL)
;;  pred:       37
(code_label 694 693 695 39 21 (nil) [1 uses])
(note 695 694 696 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 696 695 697 39 (set (reg:SI 715 [ _734 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -132 [0xffffffffffffff7c])) [1 kp1+0 S4 A32])) "../src/bnsolv.f":101 -1
     (nil))
(insn 697 696 698 39 (set (reg/f:DI 899)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -680 [0xfffffffffffffd58])) [11 nb+0 S8 A64])) "../src/bnsolv.f":101 -1
     (nil))
(insn 698 697 699 39 (set (reg:SI 716 [ _735 ])
        (mem:SI (reg/f:DI 899) [1 *nb_615(D)+0 S4 A32])) "../src/bnsolv.f":101 -1
     (nil))
(insn 699 698 890 39 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 k+0 S4 A32])
        (reg:SI 715 [ _734 ])) "../src/bnsolv.f":101 -1
     (nil))
;;  succ:       40 (FALLTHRU)

;; basic block 40, loop depth 3, count 0, freq 0, maybe hot
;;  prev block 39, next block 41, flags: (NEW, REACHABLE, RTL)
;;  pred:       39 (FALLTHRU)
;;              50 (DFS_BACK)
(code_label 890 699 700 40 30 (nil) [1 uses])
(note 700 890 701 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 701 700 702 40 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [1 k+0 S4 A32])
            (reg:SI 716 [ _735 ]))) "../src/bnsolv.f":101 -1
     (nil))
(insn 702 701 703 40 (set (reg:QI 717 [ _737 ])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "../src/bnsolv.f":101 -1
     (nil))
(insn 703 702 704 40 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 717 [ _737 ])
            (const_int 0 [0]))) "../src/bnsolv.f":101 -1
     (nil))
(jump_insn 704 703 705 40 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 893)
            (pc))) "../src/bnsolv.f":101 -1
     (nil)
 -> 893)
;;  succ:       51
;;              41 (FALLTHRU)

;; basic block 41, loop depth 3, count 0, freq 0, maybe hot
;;  prev block 40, next block 42, flags: (NEW, REACHABLE, RTL)
;;  pred:       40 (FALLTHRU)
(note 705 704 706 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 706 705 707 41 (set (reg:SI 363 [ i.64_277 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [1 i+0 S4 A64])) "../src/bnsolv.f":102 -1
     (nil))
(insn 707 706 708 41 (set (reg:DI 364 [ _278 ])
        (sign_extend:DI (reg:SI 363 [ i.64_277 ]))) "../src/bnsolv.f":102 -1
     (nil))
(insn 708 707 709 41 (parallel [
            (set (reg:DI 365 [ _279 ])
                (mult:DI (reg:DI 665 [ stride.4_635 ])
                    (reg:DI 364 [ _278 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":102 -1
     (nil))
(insn 709 708 710 41 (parallel [
            (set (reg:DI 366 [ _280 ])
                (plus:DI (reg:DI 671 [ offset.5_642 ])
                    (reg:DI 365 [ _279 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":102 -1
     (nil))
(insn 710 709 711 41 (set (reg:SI 900)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 kpiv+0 S4 A32])) "../src/bnsolv.f":102 -1
     (nil))
(insn 711 710 712 41 (set (reg:DI 367 [ _281 ])
        (sign_extend:DI (reg:SI 900))) "../src/bnsolv.f":102 -1
     (nil))
(insn 712 711 713 41 (parallel [
            (set (reg:DI 368 [ _282 ])
                (mult:DI (reg:DI 663 [ stride.2_632 ])
                    (reg:DI 367 [ _281 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":102 -1
     (nil))
(insn 713 712 714 41 (parallel [
            (set (reg:DI 369 [ _283 ])
                (plus:DI (reg:DI 366 [ _280 ])
                    (reg:DI 368 [ _282 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":102 -1
     (nil))
(insn 714 713 715 41 (set (reg:SI 901)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 k+0 S4 A32])) "../src/bnsolv.f":102 -1
     (nil))
(insn 715 714 716 41 (set (reg:DI 370 [ _284 ])
        (sign_extend:DI (reg:SI 901))) "../src/bnsolv.f":102 -1
     (nil))
(insn 716 715 717 41 (parallel [
            (set (reg:DI 371 [ _285 ])
                (plus:DI (reg:DI 369 [ _283 ])
                    (reg:DI 370 [ _284 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":102 -1
     (nil))
(insn 717 716 718 41 (set (reg/f:DI 902)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -648 [0xfffffffffffffd78])) [10 a+0 S8 A64])) "../src/bnsolv.f":102 -1
     (nil))
(insn 718 717 719 41 (set (reg:SF 903)
        (mem:SF (plus:DI (mult:DI (reg:DI 371 [ _285 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 902)) [3 *a_685(D) S4 A32])) "../src/bnsolv.f":102 -1
     (nil))
(insn 719 718 720 41 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -144 [0xffffffffffffff70])) [3 atmp+0 S4 A32])
        (reg:SF 903)) "../src/bnsolv.f":102 -1
     (nil))
(insn 720 719 721 41 (set (reg:SI 718 [ _739 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -132 [0xffffffffffffff7c])) [1 kp1+0 S4 A32])) "../src/bnsolv.f":103 -1
     (nil))
(insn 721 720 722 41 (set (reg/f:DI 904)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -680 [0xfffffffffffffd58])) [11 nb+0 S8 A64])) "../src/bnsolv.f":103 -1
     (nil))
(insn 722 721 723 41 (set (reg:SI 719 [ _740 ])
        (mem:SI (reg/f:DI 904) [1 *nb_615(D)+0 S4 A32])) "../src/bnsolv.f":103 -1
     (nil))
(insn 723 722 772 41 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])
        (reg:SI 718 [ _739 ])) "../src/bnsolv.f":103 -1
     (nil))
;;  succ:       42 (FALLTHRU)

;; basic block 42, loop depth 4, count 0, freq 0, maybe hot
;;  prev block 41, next block 43, flags: (NEW, REACHABLE, RTL)
;;  pred:       41 (FALLTHRU)
;;              43 (DFS_BACK)
(code_label 772 723 724 42 25 (nil) [1 uses])
(note 724 772 725 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 725 724 726 42 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])
            (reg:SI 719 [ _740 ]))) "../src/bnsolv.f":103 -1
     (nil))
(insn 726 725 727 42 (set (reg:QI 720 [ _742 ])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "../src/bnsolv.f":103 -1
     (nil))
(insn 727 726 728 42 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 720 [ _742 ])
            (const_int 0 [0]))) "../src/bnsolv.f":103 -1
     (nil))
(jump_insn 728 727 729 42 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 775)
            (pc))) "../src/bnsolv.f":103 -1
     (nil)
 -> 775)
;;  succ:       44
;;              43 (FALLTHRU)

;; basic block 43, loop depth 4, count 0, freq 0, maybe hot
;;  prev block 42, next block 44, flags: (NEW, REACHABLE, RTL)
;;  pred:       42 (FALLTHRU)
(note 729 728 730 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 730 729 731 43 (set (reg:SI 372 [ i.65_286 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [1 i+0 S4 A64])) "../src/bnsolv.f":104 -1
     (nil))
(insn 731 730 732 43 (set (reg:DI 373 [ _287 ])
        (sign_extend:DI (reg:SI 372 [ i.65_286 ]))) "../src/bnsolv.f":104 -1
     (nil))
(insn 732 731 733 43 (parallel [
            (set (reg:DI 374 [ _288 ])
                (mult:DI (reg:DI 665 [ stride.4_635 ])
                    (reg:DI 373 [ _287 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":104 -1
     (nil))
(insn 733 732 734 43 (parallel [
            (set (reg:DI 375 [ _289 ])
                (plus:DI (reg:DI 671 [ offset.5_642 ])
                    (reg:DI 374 [ _288 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":104 -1
     (nil))
(insn 734 733 735 43 (set (reg:SI 905)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])) "../src/bnsolv.f":104 -1
     (nil))
(insn 735 734 736 43 (set (reg:DI 376 [ _290 ])
        (sign_extend:DI (reg:SI 905))) "../src/bnsolv.f":104 -1
     (nil))
(insn 736 735 737 43 (parallel [
            (set (reg:DI 377 [ _291 ])
                (mult:DI (reg:DI 663 [ stride.2_632 ])
                    (reg:DI 376 [ _290 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":104 -1
     (nil))
(insn 737 736 738 43 (parallel [
            (set (reg:DI 378 [ _292 ])
                (plus:DI (reg:DI 375 [ _289 ])
                    (reg:DI 377 [ _291 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":104 -1
     (nil))
(insn 738 737 739 43 (set (reg:SI 906)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 k+0 S4 A32])) "../src/bnsolv.f":104 -1
     (nil))
(insn 739 738 740 43 (set (reg:DI 379 [ _293 ])
        (sign_extend:DI (reg:SI 906))) "../src/bnsolv.f":104 -1
     (nil))
(insn 740 739 741 43 (parallel [
            (set (reg:DI 380 [ _294 ])
                (plus:DI (reg:DI 378 [ _292 ])
                    (reg:DI 379 [ _293 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":104 -1
     (nil))
(insn 741 740 742 43 (set (reg/f:DI 907)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -648 [0xfffffffffffffd78])) [10 a+0 S8 A64])) "../src/bnsolv.f":104 -1
     (nil))
(insn 742 741 743 43 (set (reg:SF 381 [ _295 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 380 [ _294 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 907)) [3 *a_685(D) S4 A32])) "../src/bnsolv.f":104 -1
     (nil))
(insn 743 742 744 43 (set (reg:SI 382 [ i.66_296 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [1 i+0 S4 A64])) "../src/bnsolv.f":104 -1
     (nil))
(insn 744 743 745 43 (set (reg:DI 383 [ _297 ])
        (sign_extend:DI (reg:SI 382 [ i.66_296 ]))) "../src/bnsolv.f":104 -1
     (nil))
(insn 745 744 746 43 (parallel [
            (set (reg:DI 384 [ _298 ])
                (mult:DI (reg:DI 665 [ stride.4_635 ])
                    (reg:DI 383 [ _297 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":104 -1
     (nil))
(insn 746 745 747 43 (parallel [
            (set (reg:DI 385 [ _299 ])
                (plus:DI (reg:DI 671 [ offset.5_642 ])
                    (reg:DI 384 [ _298 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":104 -1
     (nil))
(insn 747 746 748 43 (set (reg:SI 908)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])) "../src/bnsolv.f":104 -1
     (nil))
(insn 748 747 749 43 (set (reg:DI 386 [ _300 ])
        (sign_extend:DI (reg:SI 908))) "../src/bnsolv.f":104 -1
     (nil))
(insn 749 748 750 43 (parallel [
            (set (reg:DI 387 [ _301 ])
                (mult:DI (reg:DI 663 [ stride.2_632 ])
                    (reg:DI 386 [ _300 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":104 -1
     (nil))
(insn 750 749 751 43 (parallel [
            (set (reg:DI 388 [ _302 ])
                (plus:DI (reg:DI 385 [ _299 ])
                    (reg:DI 387 [ _301 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":104 -1
     (nil))
(insn 751 750 752 43 (set (reg:SI 909)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 kpiv+0 S4 A32])) "../src/bnsolv.f":104 -1
     (nil))
(insn 752 751 753 43 (set (reg:DI 389 [ _303 ])
        (sign_extend:DI (reg:SI 909))) "../src/bnsolv.f":104 -1
     (nil))
(insn 753 752 754 43 (parallel [
            (set (reg:DI 390 [ _304 ])
                (plus:DI (reg:DI 388 [ _302 ])
                    (reg:DI 389 [ _303 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":104 -1
     (nil))
(insn 754 753 755 43 (set (reg/f:DI 910)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -648 [0xfffffffffffffd78])) [10 a+0 S8 A64])) "../src/bnsolv.f":104 -1
     (nil))
(insn 755 754 756 43 (set (reg:SF 391 [ _305 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 390 [ _304 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 910)) [3 *a_685(D) S4 A32])) "../src/bnsolv.f":104 -1
     (nil))
(insn 756 755 757 43 (set (reg:SF 392 [ _306 ])
        (mult:SF (reg:SF 391 [ _305 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -144 [0xffffffffffffff70])) [3 atmp+0 S4 A32]))) "../src/bnsolv.f":104 -1
     (nil))
(insn 757 756 758 43 (set (reg:SI 393 [ i.67_307 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [1 i+0 S4 A64])) "../src/bnsolv.f":104 -1
     (nil))
(insn 758 757 759 43 (set (reg:DI 394 [ _308 ])
        (sign_extend:DI (reg:SI 393 [ i.67_307 ]))) "../src/bnsolv.f":104 -1
     (nil))
(insn 759 758 760 43 (parallel [
            (set (reg:DI 395 [ _309 ])
                (mult:DI (reg:DI 665 [ stride.4_635 ])
                    (reg:DI 394 [ _308 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":104 -1
     (nil))
(insn 760 759 761 43 (parallel [
            (set (reg:DI 396 [ _310 ])
                (plus:DI (reg:DI 671 [ offset.5_642 ])
                    (reg:DI 395 [ _309 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":104 -1
     (nil))
(insn 761 760 762 43 (set (reg:SI 911)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])) "../src/bnsolv.f":104 -1
     (nil))
(insn 762 761 763 43 (set (reg:DI 397 [ _311 ])
        (sign_extend:DI (reg:SI 911))) "../src/bnsolv.f":104 -1
     (nil))
(insn 763 762 764 43 (parallel [
            (set (reg:DI 398 [ _312 ])
                (mult:DI (reg:DI 663 [ stride.2_632 ])
                    (reg:DI 397 [ _311 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":104 -1
     (nil))
(insn 764 763 765 43 (parallel [
            (set (reg:DI 399 [ _313 ])
                (plus:DI (reg:DI 396 [ _310 ])
                    (reg:DI 398 [ _312 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":104 -1
     (nil))
(insn 765 764 766 43 (set (reg:SI 912)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 k+0 S4 A32])) "../src/bnsolv.f":104 -1
     (nil))
(insn 766 765 767 43 (set (reg:DI 400 [ _314 ])
        (sign_extend:DI (reg:SI 912))) "../src/bnsolv.f":104 -1
     (nil))
(insn 767 766 768 43 (parallel [
            (set (reg:DI 401 [ _315 ])
                (plus:DI (reg:DI 399 [ _313 ])
                    (reg:DI 400 [ _314 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":104 -1
     (nil))
(insn 768 767 769 43 (set (reg:SF 402 [ _316 ])
        (minus:SF (reg:SF 381 [ _295 ])
            (reg:SF 392 [ _306 ]))) "../src/bnsolv.f":104 -1
     (nil))
(insn 769 768 770 43 (set (reg/f:DI 913)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -648 [0xfffffffffffffd78])) [10 a+0 S8 A64])) "../src/bnsolv.f":104 -1
     (nil))
(insn 770 769 771 43 (set (mem:SF (plus:DI (mult:DI (reg:DI 401 [ _315 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 913)) [3 *a_685(D) S4 A32])
        (reg:SF 402 [ _316 ])) "../src/bnsolv.f":104 -1
     (nil))
(insn 771 770 773 43 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":103 -1
     (nil))
(jump_insn 773 771 774 43 (set (pc)
        (label_ref 772)) "../src/bnsolv.f":103 -1
     (nil)
 -> 772)
;;  succ:       42 (DFS_BACK)

(barrier 774 773 775)
;; basic block 44, loop depth 3, count 0, freq 0, maybe hot
;;  prev block 43, next block 45, flags: (NEW, REACHABLE, RTL)
;;  pred:       42
(code_label 775 774 776 44 24 (nil) [1 uses])
(note 776 775 777 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 777 776 778 44 (set (reg/f:DI 914)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -680 [0xfffffffffffffd58])) [11 nb+0 S8 A64])) "../src/bnsolv.f":106 -1
     (nil))
(insn 778 777 779 44 (set (reg:SI 721 [ _745 ])
        (mem:SI (reg/f:DI 914) [1 *nb_615(D)+0 S4 A32])) "../src/bnsolv.f":106 -1
     (nil))
(insn 779 778 828 44 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])
        (const_int 1 [0x1])) "../src/bnsolv.f":106 -1
     (nil))
;;  succ:       45 (FALLTHRU)

;; basic block 45, loop depth 4, count 0, freq 0, maybe hot
;;  prev block 44, next block 46, flags: (NEW, REACHABLE, RTL)
;;  pred:       44 (FALLTHRU)
;;              46 (DFS_BACK)
(code_label 828 779 780 45 27 (nil) [1 uses])
(note 780 828 781 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 781 780 782 45 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])
            (reg:SI 721 [ _745 ]))) "../src/bnsolv.f":106 -1
     (nil))
(insn 782 781 783 45 (set (reg:QI 722 [ _747 ])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "../src/bnsolv.f":106 -1
     (nil))
(insn 783 782 784 45 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 722 [ _747 ])
            (const_int 0 [0]))) "../src/bnsolv.f":106 -1
     (nil))
(jump_insn 784 783 785 45 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 831)
            (pc))) "../src/bnsolv.f":106 -1
     (nil)
 -> 831)
;;  succ:       47
;;              46 (FALLTHRU)

;; basic block 46, loop depth 4, count 0, freq 0, maybe hot
;;  prev block 45, next block 47, flags: (NEW, REACHABLE, RTL)
;;  pred:       45 (FALLTHRU)
(note 785 784 786 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 786 785 787 46 (set (reg:SI 403 [ i.68_317 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [1 i+0 S4 A64])) "../src/bnsolv.f":107 -1
     (nil))
(insn 787 786 788 46 (set (reg:DI 404 [ _318 ])
        (sign_extend:DI (reg:SI 403 [ i.68_317 ]))) "../src/bnsolv.f":107 -1
     (nil))
(insn 788 787 789 46 (parallel [
            (set (reg:DI 405 [ _319 ])
                (mult:DI (reg:DI 675 [ stride.18_648 ])
                    (reg:DI 404 [ _318 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":107 -1
     (nil))
(insn 789 788 790 46 (parallel [
            (set (reg:DI 406 [ _320 ])
                (plus:DI (reg:DI 681 [ offset.19_655 ])
                    (reg:DI 405 [ _319 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":107 -1
     (nil))
(insn 790 789 791 46 (set (reg:SI 915)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])) "../src/bnsolv.f":107 -1
     (nil))
(insn 791 790 792 46 (set (reg:DI 407 [ _321 ])
        (sign_extend:DI (reg:SI 915))) "../src/bnsolv.f":107 -1
     (nil))
(insn 792 791 793 46 (parallel [
            (set (reg:DI 408 [ _322 ])
                (mult:DI (reg:DI 673 [ stride.16_645 ])
                    (reg:DI 407 [ _321 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":107 -1
     (nil))
(insn 793 792 794 46 (parallel [
            (set (reg:DI 409 [ _323 ])
                (plus:DI (reg:DI 406 [ _320 ])
                    (reg:DI 408 [ _322 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":107 -1
     (nil))
(insn 794 793 795 46 (set (reg:SI 916)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 k+0 S4 A32])) "../src/bnsolv.f":107 -1
     (nil))
(insn 795 794 796 46 (set (reg:DI 410 [ _324 ])
        (sign_extend:DI (reg:SI 916))) "../src/bnsolv.f":107 -1
     (nil))
(insn 796 795 797 46 (parallel [
            (set (reg:DI 411 [ _325 ])
                (plus:DI (reg:DI 409 [ _323 ])
                    (reg:DI 410 [ _324 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":107 -1
     (nil))
(insn 797 796 798 46 (set (reg/f:DI 917)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -664 [0xfffffffffffffd68])) [10 c+0 S8 A64])) "../src/bnsolv.f":107 -1
     (nil))
(insn 798 797 799 46 (set (reg:SF 412 [ _326 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 411 [ _325 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 917)) [3 *c_686(D) S4 A32])) "../src/bnsolv.f":107 -1
     (nil))
(insn 799 798 800 46 (set (reg:SI 413 [ i.69_327 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [1 i+0 S4 A64])) "../src/bnsolv.f":107 -1
     (nil))
(insn 800 799 801 46 (set (reg:DI 414 [ _328 ])
        (sign_extend:DI (reg:SI 413 [ i.69_327 ]))) "../src/bnsolv.f":107 -1
     (nil))
(insn 801 800 802 46 (parallel [
            (set (reg:DI 415 [ _329 ])
                (mult:DI (reg:DI 675 [ stride.18_648 ])
                    (reg:DI 414 [ _328 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":107 -1
     (nil))
(insn 802 801 803 46 (parallel [
            (set (reg:DI 416 [ _330 ])
                (plus:DI (reg:DI 681 [ offset.19_655 ])
                    (reg:DI 415 [ _329 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":107 -1
     (nil))
(insn 803 802 804 46 (set (reg:SI 918)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])) "../src/bnsolv.f":107 -1
     (nil))
(insn 804 803 805 46 (set (reg:DI 417 [ _331 ])
        (sign_extend:DI (reg:SI 918))) "../src/bnsolv.f":107 -1
     (nil))
(insn 805 804 806 46 (parallel [
            (set (reg:DI 418 [ _332 ])
                (mult:DI (reg:DI 673 [ stride.16_645 ])
                    (reg:DI 417 [ _331 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":107 -1
     (nil))
(insn 806 805 807 46 (parallel [
            (set (reg:DI 419 [ _333 ])
                (plus:DI (reg:DI 416 [ _330 ])
                    (reg:DI 418 [ _332 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":107 -1
     (nil))
(insn 807 806 808 46 (set (reg:SI 919)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 kpiv+0 S4 A32])) "../src/bnsolv.f":107 -1
     (nil))
(insn 808 807 809 46 (set (reg:DI 420 [ _334 ])
        (sign_extend:DI (reg:SI 919))) "../src/bnsolv.f":107 -1
     (nil))
(insn 809 808 810 46 (parallel [
            (set (reg:DI 421 [ _335 ])
                (plus:DI (reg:DI 419 [ _333 ])
                    (reg:DI 420 [ _334 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":107 -1
     (nil))
(insn 810 809 811 46 (set (reg/f:DI 920)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -664 [0xfffffffffffffd68])) [10 c+0 S8 A64])) "../src/bnsolv.f":107 -1
     (nil))
(insn 811 810 812 46 (set (reg:SF 422 [ _336 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 421 [ _335 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 920)) [3 *c_686(D) S4 A32])) "../src/bnsolv.f":107 -1
     (nil))
(insn 812 811 813 46 (set (reg:SF 423 [ _337 ])
        (mult:SF (reg:SF 422 [ _336 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -144 [0xffffffffffffff70])) [3 atmp+0 S4 A32]))) "../src/bnsolv.f":107 -1
     (nil))
(insn 813 812 814 46 (set (reg:SI 424 [ i.70_338 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [1 i+0 S4 A64])) "../src/bnsolv.f":107 -1
     (nil))
(insn 814 813 815 46 (set (reg:DI 425 [ _339 ])
        (sign_extend:DI (reg:SI 424 [ i.70_338 ]))) "../src/bnsolv.f":107 -1
     (nil))
(insn 815 814 816 46 (parallel [
            (set (reg:DI 426 [ _340 ])
                (mult:DI (reg:DI 675 [ stride.18_648 ])
                    (reg:DI 425 [ _339 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":107 -1
     (nil))
(insn 816 815 817 46 (parallel [
            (set (reg:DI 427 [ _341 ])
                (plus:DI (reg:DI 681 [ offset.19_655 ])
                    (reg:DI 426 [ _340 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":107 -1
     (nil))
(insn 817 816 818 46 (set (reg:SI 921)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])) "../src/bnsolv.f":107 -1
     (nil))
(insn 818 817 819 46 (set (reg:DI 428 [ _342 ])
        (sign_extend:DI (reg:SI 921))) "../src/bnsolv.f":107 -1
     (nil))
(insn 819 818 820 46 (parallel [
            (set (reg:DI 429 [ _343 ])
                (mult:DI (reg:DI 673 [ stride.16_645 ])
                    (reg:DI 428 [ _342 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":107 -1
     (nil))
(insn 820 819 821 46 (parallel [
            (set (reg:DI 430 [ _344 ])
                (plus:DI (reg:DI 427 [ _341 ])
                    (reg:DI 429 [ _343 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":107 -1
     (nil))
(insn 821 820 822 46 (set (reg:SI 922)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 k+0 S4 A32])) "../src/bnsolv.f":107 -1
     (nil))
(insn 822 821 823 46 (set (reg:DI 431 [ _345 ])
        (sign_extend:DI (reg:SI 922))) "../src/bnsolv.f":107 -1
     (nil))
(insn 823 822 824 46 (parallel [
            (set (reg:DI 432 [ _346 ])
                (plus:DI (reg:DI 430 [ _344 ])
                    (reg:DI 431 [ _345 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":107 -1
     (nil))
(insn 824 823 825 46 (set (reg:SF 433 [ _347 ])
        (minus:SF (reg:SF 412 [ _326 ])
            (reg:SF 423 [ _337 ]))) "../src/bnsolv.f":107 -1
     (nil))
(insn 825 824 826 46 (set (reg/f:DI 923)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -664 [0xfffffffffffffd68])) [10 c+0 S8 A64])) "../src/bnsolv.f":107 -1
     (nil))
(insn 826 825 827 46 (set (mem:SF (plus:DI (mult:DI (reg:DI 432 [ _346 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 923)) [3 *c_686(D) S4 A32])
        (reg:SF 433 [ _347 ])) "../src/bnsolv.f":107 -1
     (nil))
(insn 827 826 829 46 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":106 -1
     (nil))
(jump_insn 829 827 830 46 (set (pc)
        (label_ref 828)) "../src/bnsolv.f":106 -1
     (nil)
 -> 828)
;;  succ:       45 (DFS_BACK)

(barrier 830 829 831)
;; basic block 47, loop depth 3, count 0, freq 0, maybe hot
;;  prev block 46, next block 48, flags: (NEW, REACHABLE, RTL)
;;  pred:       45
(code_label 831 830 832 47 26 (nil) [1 uses])
(note 832 831 833 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 833 832 834 47 (set (reg/f:DI 924)
        (mem/f/c:DI (reg/f:DI 81 virtual-incoming-args) [11 nrhs+0 S8 A64])) "../src/bnsolv.f":109 -1
     (nil))
(insn 834 833 835 47 (set (reg:SI 723 [ _750 ])
        (mem:SI (reg/f:DI 924) [1 *nrhs_689(D)+0 S4 A32])) "../src/bnsolv.f":109 -1
     (nil))
(insn 835 834 884 47 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])
        (const_int 1 [0x1])) "../src/bnsolv.f":109 -1
     (nil))
;;  succ:       48 (FALLTHRU)

;; basic block 48, loop depth 4, count 0, freq 0, maybe hot
;;  prev block 47, next block 49, flags: (NEW, REACHABLE, RTL)
;;  pred:       47 (FALLTHRU)
;;              49 (DFS_BACK)
(code_label 884 835 836 48 29 (nil) [1 uses])
(note 836 884 837 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(insn 837 836 838 48 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])
            (reg:SI 723 [ _750 ]))) "../src/bnsolv.f":109 -1
     (nil))
(insn 838 837 839 48 (set (reg:QI 724 [ _752 ])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "../src/bnsolv.f":109 -1
     (nil))
(insn 839 838 840 48 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 724 [ _752 ])
            (const_int 0 [0]))) "../src/bnsolv.f":109 -1
     (nil))
(jump_insn 840 839 841 48 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 887)
            (pc))) "../src/bnsolv.f":109 -1
     (nil)
 -> 887)
;;  succ:       50
;;              49 (FALLTHRU)

;; basic block 49, loop depth 4, count 0, freq 0, maybe hot
;;  prev block 48, next block 50, flags: (NEW, REACHABLE, RTL)
;;  pred:       48 (FALLTHRU)
(note 841 840 842 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(insn 842 841 843 49 (set (reg:SI 434 [ i.71_348 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [1 i+0 S4 A64])) "../src/bnsolv.f":110 -1
     (nil))
(insn 843 842 844 49 (set (reg:DI 435 [ _349 ])
        (sign_extend:DI (reg:SI 434 [ i.71_348 ]))) "../src/bnsolv.f":110 -1
     (nil))
(insn 844 843 845 49 (parallel [
            (set (reg:DI 436 [ _350 ])
                (mult:DI (reg:DI 685 [ stride.25_662 ])
                    (reg:DI 435 [ _349 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":110 -1
     (nil))
(insn 845 844 846 49 (parallel [
            (set (reg:DI 437 [ _351 ])
                (plus:DI (reg:DI 691 [ offset.26_669 ])
                    (reg:DI 436 [ _350 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":110 -1
     (nil))
(insn 846 845 847 49 (set (reg:SI 925)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])) "../src/bnsolv.f":110 -1
     (nil))
(insn 847 846 848 49 (set (reg:DI 438 [ _352 ])
        (sign_extend:DI (reg:SI 925))) "../src/bnsolv.f":110 -1
     (nil))
(insn 848 847 849 49 (parallel [
            (set (reg:DI 439 [ _353 ])
                (mult:DI (reg:DI 683 [ stride.23_658 ])
                    (reg:DI 438 [ _352 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":110 -1
     (nil))
(insn 849 848 850 49 (parallel [
            (set (reg:DI 440 [ _354 ])
                (plus:DI (reg:DI 437 [ _351 ])
                    (reg:DI 439 [ _353 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":110 -1
     (nil))
(insn 850 849 851 49 (set (reg:SI 926)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 k+0 S4 A32])) "../src/bnsolv.f":110 -1
     (nil))
(insn 851 850 852 49 (set (reg:DI 441 [ _355 ])
        (sign_extend:DI (reg:SI 926))) "../src/bnsolv.f":110 -1
     (nil))
(insn 852 851 853 49 (parallel [
            (set (reg:DI 442 [ _356 ])
                (plus:DI (reg:DI 440 [ _354 ])
                    (reg:DI 441 [ _355 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":110 -1
     (nil))
(insn 853 852 854 49 (set (reg/f:DI 927)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -672 [0xfffffffffffffd60])) [10 r+0 S8 A64])) "../src/bnsolv.f":110 -1
     (nil))
(insn 854 853 855 49 (set (reg:SF 443 [ _357 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 442 [ _356 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 927)) [3 *r_693(D) S4 A32])) "../src/bnsolv.f":110 -1
     (nil))
(insn 855 854 856 49 (set (reg:SI 444 [ i.72_358 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [1 i+0 S4 A64])) "../src/bnsolv.f":110 -1
     (nil))
(insn 856 855 857 49 (set (reg:DI 445 [ _359 ])
        (sign_extend:DI (reg:SI 444 [ i.72_358 ]))) "../src/bnsolv.f":110 -1
     (nil))
(insn 857 856 858 49 (parallel [
            (set (reg:DI 446 [ _360 ])
                (mult:DI (reg:DI 685 [ stride.25_662 ])
                    (reg:DI 445 [ _359 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":110 -1
     (nil))
(insn 858 857 859 49 (parallel [
            (set (reg:DI 447 [ _361 ])
                (plus:DI (reg:DI 691 [ offset.26_669 ])
                    (reg:DI 446 [ _360 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":110 -1
     (nil))
(insn 859 858 860 49 (set (reg:SI 928)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])) "../src/bnsolv.f":110 -1
     (nil))
(insn 860 859 861 49 (set (reg:DI 448 [ _362 ])
        (sign_extend:DI (reg:SI 928))) "../src/bnsolv.f":110 -1
     (nil))
(insn 861 860 862 49 (parallel [
            (set (reg:DI 449 [ _363 ])
                (mult:DI (reg:DI 683 [ stride.23_658 ])
                    (reg:DI 448 [ _362 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":110 -1
     (nil))
(insn 862 861 863 49 (parallel [
            (set (reg:DI 450 [ _364 ])
                (plus:DI (reg:DI 447 [ _361 ])
                    (reg:DI 449 [ _363 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":110 -1
     (nil))
(insn 863 862 864 49 (set (reg:SI 929)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 kpiv+0 S4 A32])) "../src/bnsolv.f":110 -1
     (nil))
(insn 864 863 865 49 (set (reg:DI 451 [ _365 ])
        (sign_extend:DI (reg:SI 929))) "../src/bnsolv.f":110 -1
     (nil))
(insn 865 864 866 49 (parallel [
            (set (reg:DI 452 [ _366 ])
                (plus:DI (reg:DI 450 [ _364 ])
                    (reg:DI 451 [ _365 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":110 -1
     (nil))
(insn 866 865 867 49 (set (reg/f:DI 930)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -672 [0xfffffffffffffd60])) [10 r+0 S8 A64])) "../src/bnsolv.f":110 -1
     (nil))
(insn 867 866 868 49 (set (reg:SF 453 [ _367 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 452 [ _366 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 930)) [3 *r_693(D) S4 A32])) "../src/bnsolv.f":110 -1
     (nil))
(insn 868 867 869 49 (set (reg:SF 454 [ _368 ])
        (mult:SF (reg:SF 453 [ _367 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -144 [0xffffffffffffff70])) [3 atmp+0 S4 A32]))) "../src/bnsolv.f":110 -1
     (nil))
(insn 869 868 870 49 (set (reg:SI 455 [ i.73_369 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [1 i+0 S4 A64])) "../src/bnsolv.f":110 -1
     (nil))
(insn 870 869 871 49 (set (reg:DI 456 [ _370 ])
        (sign_extend:DI (reg:SI 455 [ i.73_369 ]))) "../src/bnsolv.f":110 -1
     (nil))
(insn 871 870 872 49 (parallel [
            (set (reg:DI 457 [ _371 ])
                (mult:DI (reg:DI 685 [ stride.25_662 ])
                    (reg:DI 456 [ _370 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":110 -1
     (nil))
(insn 872 871 873 49 (parallel [
            (set (reg:DI 458 [ _372 ])
                (plus:DI (reg:DI 691 [ offset.26_669 ])
                    (reg:DI 457 [ _371 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":110 -1
     (nil))
(insn 873 872 874 49 (set (reg:SI 931)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])) "../src/bnsolv.f":110 -1
     (nil))
(insn 874 873 875 49 (set (reg:DI 459 [ _373 ])
        (sign_extend:DI (reg:SI 931))) "../src/bnsolv.f":110 -1
     (nil))
(insn 875 874 876 49 (parallel [
            (set (reg:DI 460 [ _374 ])
                (mult:DI (reg:DI 683 [ stride.23_658 ])
                    (reg:DI 459 [ _373 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":110 -1
     (nil))
(insn 876 875 877 49 (parallel [
            (set (reg:DI 461 [ _375 ])
                (plus:DI (reg:DI 458 [ _372 ])
                    (reg:DI 460 [ _374 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":110 -1
     (nil))
(insn 877 876 878 49 (set (reg:SI 932)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 k+0 S4 A32])) "../src/bnsolv.f":110 -1
     (nil))
(insn 878 877 879 49 (set (reg:DI 462 [ _376 ])
        (sign_extend:DI (reg:SI 932))) "../src/bnsolv.f":110 -1
     (nil))
(insn 879 878 880 49 (parallel [
            (set (reg:DI 463 [ _377 ])
                (plus:DI (reg:DI 461 [ _375 ])
                    (reg:DI 462 [ _376 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":110 -1
     (nil))
(insn 880 879 881 49 (set (reg:SF 464 [ _378 ])
        (minus:SF (reg:SF 443 [ _357 ])
            (reg:SF 454 [ _368 ]))) "../src/bnsolv.f":110 -1
     (nil))
(insn 881 880 882 49 (set (reg/f:DI 933)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -672 [0xfffffffffffffd60])) [10 r+0 S8 A64])) "../src/bnsolv.f":110 -1
     (nil))
(insn 882 881 883 49 (set (mem:SF (plus:DI (mult:DI (reg:DI 463 [ _377 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 933)) [3 *r_693(D) S4 A32])
        (reg:SF 464 [ _378 ])) "../src/bnsolv.f":110 -1
     (nil))
(insn 883 882 885 49 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":109 -1
     (nil))
(jump_insn 885 883 886 49 (set (pc)
        (label_ref 884)) "../src/bnsolv.f":109 -1
     (nil)
 -> 884)
;;  succ:       48 (DFS_BACK)

(barrier 886 885 887)
;; basic block 50, loop depth 3, count 0, freq 0, maybe hot
;;  prev block 49, next block 51, flags: (NEW, REACHABLE, RTL)
;;  pred:       48
(code_label 887 886 888 50 28 (nil) [1 uses])
(note 888 887 889 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(insn 889 888 891 50 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [1 k+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [1 k+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":101 -1
     (nil))
(jump_insn 891 889 892 50 (set (pc)
        (label_ref 890)) "../src/bnsolv.f":101 -1
     (nil)
 -> 890)
;;  succ:       40 (DFS_BACK)

(barrier 892 891 893)
;; basic block 51, loop depth 2, count 0, freq 0, maybe hot
;;  prev block 50, next block 52, flags: (NEW, REACHABLE, RTL)
;;  pred:       40
(code_label 893 892 894 51 23 (nil) [1 uses])
(note 894 893 895 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(insn 895 894 897 51 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -12 [0xfffffffffffffff4])) [1 kpiv+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -12 [0xfffffffffffffff4])) [1 kpiv+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":61 -1
     (nil))
(jump_insn 897 895 898 51 (set (pc)
        (label_ref 896)) "../src/bnsolv.f":61 -1
     (nil)
 -> 896)
;;  succ:       19 (DFS_BACK)

(barrier 898 897 899)
;; basic block 52, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 51, next block 53, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       19
(code_label 899 898 900 52 11 (nil) [1 uses])
(note 900 899 901 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(insn 901 900 902 52 (set (reg:SI 465 [ i.74_379 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [1 i+0 S4 A64])) "../src/bnsolv.f":117 -1
     (nil))
(insn 902 901 903 52 (set (reg:DI 466 [ _380 ])
        (sign_extend:DI (reg:SI 465 [ i.74_379 ]))) "../src/bnsolv.f":117 -1
     (nil))
(insn 903 902 904 52 (parallel [
            (set (reg:DI 467 [ _381 ])
                (mult:DI (reg:DI 665 [ stride.4_635 ])
                    (reg:DI 466 [ _380 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":117 -1
     (nil))
(insn 904 903 905 52 (parallel [
            (set (reg:DI 468 [ _382 ])
                (plus:DI (reg:DI 671 [ offset.5_642 ])
                    (reg:DI 467 [ _381 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":117 -1
     (nil))
(insn 905 904 906 52 (set (reg/f:DI 934)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -680 [0xfffffffffffffd58])) [11 nb+0 S8 A64])) "../src/bnsolv.f":117 -1
     (nil))
(insn 906 905 907 52 (set (reg:SI 469 [ _383 ])
        (mem:SI (reg/f:DI 934) [1 *nb_615(D)+0 S4 A32])) "../src/bnsolv.f":117 -1
     (nil))
(insn 907 906 908 52 (set (reg:DI 470 [ _384 ])
        (sign_extend:DI (reg:SI 469 [ _383 ]))) "../src/bnsolv.f":117 -1
     (nil))
(insn 908 907 909 52 (parallel [
            (set (reg:DI 471 [ _385 ])
                (mult:DI (reg:DI 663 [ stride.2_632 ])
                    (reg:DI 470 [ _384 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":117 -1
     (nil))
(insn 909 908 910 52 (parallel [
            (set (reg:DI 472 [ _386 ])
                (plus:DI (reg:DI 468 [ _382 ])
                    (reg:DI 471 [ _385 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":117 -1
     (nil))
(insn 910 909 911 52 (set (reg/f:DI 935)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -680 [0xfffffffffffffd58])) [11 nb+0 S8 A64])) "../src/bnsolv.f":117 -1
     (nil))
(insn 911 910 912 52 (set (reg:SI 473 [ _387 ])
        (mem:SI (reg/f:DI 935) [1 *nb_615(D)+0 S4 A32])) "../src/bnsolv.f":117 -1
     (nil))
(insn 912 911 913 52 (set (reg:DI 474 [ _388 ])
        (sign_extend:DI (reg:SI 473 [ _387 ]))) "../src/bnsolv.f":117 -1
     (nil))
(insn 913 912 914 52 (parallel [
            (set (reg:DI 475 [ _389 ])
                (plus:DI (reg:DI 472 [ _386 ])
                    (reg:DI 474 [ _388 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":117 -1
     (nil))
(insn 914 913 915 52 (set (reg/f:DI 936)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -648 [0xfffffffffffffd78])) [10 a+0 S8 A64])) "../src/bnsolv.f":117 -1
     (nil))
(insn 915 914 916 52 (set (reg:SF 476 [ _390 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 475 [ _389 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 936)) [3 *a_685(D) S4 A32])) "../src/bnsolv.f":117 -1
     (nil))
(insn 916 915 917 52 (set (reg:SF 937)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC1") [flags 0x2]) [3  S4 A32])) "../src/bnsolv.f":117 -1
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 917 916 918 52 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 476 [ _390 ])
            (reg:SF 937))) "../src/bnsolv.f":117 -1
     (nil))
(jump_insn 918 917 1361 52 (set (pc)
        (if_then_else (unordered (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref 952)
            (pc))) "../src/bnsolv.f":117 -1
     (nil)
 -> 952)
;;  succ:       57
;;              53 (FALLTHRU)

;; basic block 53, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 52, next block 54, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       52 (FALLTHRU)
(note 1361 918 919 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(insn 919 1361 920 53 (set (reg:SF 938)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC1") [flags 0x2]) [3  S4 A32])) "../src/bnsolv.f":117 -1
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 920 919 921 53 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 476 [ _390 ])
            (reg:SF 938))) "../src/bnsolv.f":117 -1
     (nil))
(jump_insn 921 920 1362 53 (set (pc)
        (if_then_else (uneq (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1365)
            (pc))) "../src/bnsolv.f":117 617 {*jcc_1}
     (nil)
 -> 1365)
;;  succ:       56
;;              54 (FALLTHRU)

;; basic block 54, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 53, next block 56, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       53 (FALLTHRU)
(note 1362 921 922 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(jump_insn 922 1362 923 54 (set (pc)
        (label_ref 952)) "../src/bnsolv.f":117 -1
     (nil)
 -> 952)
;;  succ:       57

(barrier 923 922 1365)
;; basic block 56, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 54, next block 57, flags: (NEW, REACHABLE, RTL)
;;  pred:       53
(code_label 1365 923 925 56 57 (nil) [1 uses])
(note 925 1365 926 56 [bb 56] NOTE_INSN_BASIC_BLOCK)
(insn 926 925 927 56 (set (reg/f:DI 939)
        (symbol_ref/f:DI ("*lC2") [flags 0x2]  <var_decl 0x143100ea0 *lC2>)) "../src/bnsolv.f":118 -1
     (nil))
(insn 927 926 928 56 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -632 [0xfffffffffffffd88])) [6 dt_parm.29.common.filename+0 S8 A64])
        (reg/f:DI 939)) "../src/bnsolv.f":118 -1
     (nil))
(insn 928 927 929 56 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -624 [0xfffffffffffffd90])) [1 dt_parm.29.common.line+0 S4 A128])
        (const_int 118 [0x76])) "../src/bnsolv.f":118 -1
     (nil))
(insn 929 928 930 56 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -640 [0xfffffffffffffd80])) [1 dt_parm.29.common.flags+0 S4 A128])
        (const_int 128 [0x80])) "../src/bnsolv.f":118 -1
     (nil))
(insn 930 929 931 56 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -636 [0xfffffffffffffd84])) [1 dt_parm.29.common.unit+0 S4 A32])
        (const_int 6 [0x6])) "../src/bnsolv.f":118 -1
     (nil))
(insn 931 930 932 56 (parallel [
            (set (reg:DI 940)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -640 [0xfffffffffffffd80])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":118 -1
     (nil))
(insn 932 931 933 56 (set (reg:DI 5 di)
        (reg:DI 940)) "../src/bnsolv.f":118 -1
     (nil))
(call_insn 933 932 934 56 (call (mem:QI (symbol_ref:DI ("_gfortran_st_write") [flags 0x41]  <function_decl 0x1427e0800 _gfortran_st_write>) [0 _gfortran_st_write S1 A8])
        (const_int 0 [0])) "../src/bnsolv.f":118 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 934 933 935 56 (parallel [
            (set (reg:DI 941)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -640 [0xfffffffffffffd80])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":118 -1
     (nil))
(insn 935 934 936 56 (set (reg:SI 1 dx)
        (const_int 22 [0x16])) "../src/bnsolv.f":118 -1
     (nil))
(insn 936 935 937 56 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*lC3") [flags 0x2]  <var_decl 0x143100f30 *lC3>)) "../src/bnsolv.f":118 -1
     (nil))
(insn 937 936 938 56 (set (reg:DI 5 di)
        (reg:DI 941)) "../src/bnsolv.f":118 -1
     (nil))
(call_insn 938 937 939 56 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_character_write") [flags 0x41]  <function_decl 0x1427d4900 _gfortran_transfer_character_write>) [0 _gfortran_transfer_character_write S1 A8])
        (const_int 0 [0])) "../src/bnsolv.f":118 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 939 938 940 56 (parallel [
            (set (reg:DI 942)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -152 [0xffffffffffffff68])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":118 -1
     (nil))
(insn 940 939 941 56 (parallel [
            (set (reg:DI 943)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -640 [0xfffffffffffffd80])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":118 -1
     (nil))
(insn 941 940 942 56 (set (reg:SI 1 dx)
        (const_int 4 [0x4])) "../src/bnsolv.f":118 -1
     (nil))
(insn 942 941 943 56 (set (reg:DI 4 si)
        (reg:DI 942)) "../src/bnsolv.f":118 -1
     (nil))
(insn 943 942 944 56 (set (reg:DI 5 di)
        (reg:DI 943)) "../src/bnsolv.f":118 -1
     (nil))
(call_insn 944 943 945 56 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_integer_write") [flags 0x41]  <function_decl 0x1427d4500 _gfortran_transfer_integer_write>) [0 _gfortran_transfer_integer_write S1 A8])
        (const_int 0 [0])) "../src/bnsolv.f":118 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 945 944 946 56 (parallel [
            (set (reg:DI 944)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -640 [0xfffffffffffffd80])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":118 -1
     (nil))
(insn 946 945 947 56 (set (reg:DI 5 di)
        (reg:DI 944)) "../src/bnsolv.f":118 -1
     (nil))
(call_insn 947 946 948 56 (call (mem:QI (symbol_ref:DI ("_gfortran_st_write_done") [flags 0x41]  <function_decl 0x1427e4300 _gfortran_st_write_done>) [0 _gfortran_st_write_done S1 A8])
        (const_int 0 [0])) "../src/bnsolv.f":118 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 948 947 949 56 (set (reg:SI 4 si)
        (const_int 0 [0])) "../src/bnsolv.f":119 -1
     (nil))
(insn 949 948 950 56 (set (reg:DI 5 di)
        (const_int 0 [0])) "../src/bnsolv.f":119 -1
     (nil))
(call_insn 950 949 951 56 (call (mem:QI (symbol_ref:DI ("_gfortran_stop_string") [flags 0x41]  <function_decl 0x1427c2200 _gfortran_stop_string>) [0 _gfortran_stop_string S1 A8])
        (const_int 0 [0])) "../src/bnsolv.f":119 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:      

(barrier 951 950 952)
;; basic block 57, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 56, next block 58, flags: (NEW, REACHABLE, RTL)
;;  pred:       52
;;              54
(code_label 952 951 953 57 32 (nil) [2 uses])
(note 953 952 954 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(insn 954 953 955 57 (set (reg:SI 477 [ i.75_391 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [1 i+0 S4 A64])) "../src/bnsolv.f":121 -1
     (nil))
(insn 955 954 956 57 (set (reg:DI 478 [ _392 ])
        (sign_extend:DI (reg:SI 477 [ i.75_391 ]))) "../src/bnsolv.f":121 -1
     (nil))
(insn 956 955 957 57 (parallel [
            (set (reg:DI 479 [ _393 ])
                (mult:DI (reg:DI 665 [ stride.4_635 ])
                    (reg:DI 478 [ _392 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":121 -1
     (nil))
(insn 957 956 958 57 (parallel [
            (set (reg:DI 480 [ _394 ])
                (plus:DI (reg:DI 671 [ offset.5_642 ])
                    (reg:DI 479 [ _393 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":121 -1
     (nil))
(insn 958 957 959 57 (set (reg/f:DI 945)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -680 [0xfffffffffffffd58])) [11 nb+0 S8 A64])) "../src/bnsolv.f":121 -1
     (nil))
(insn 959 958 960 57 (set (reg:SI 481 [ _395 ])
        (mem:SI (reg/f:DI 945) [1 *nb_615(D)+0 S4 A32])) "../src/bnsolv.f":121 -1
     (nil))
(insn 960 959 961 57 (set (reg:DI 482 [ _396 ])
        (sign_extend:DI (reg:SI 481 [ _395 ]))) "../src/bnsolv.f":121 -1
     (nil))
(insn 961 960 962 57 (parallel [
            (set (reg:DI 483 [ _397 ])
                (mult:DI (reg:DI 663 [ stride.2_632 ])
                    (reg:DI 482 [ _396 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":121 -1
     (nil))
(insn 962 961 963 57 (parallel [
            (set (reg:DI 484 [ _398 ])
                (plus:DI (reg:DI 480 [ _394 ])
                    (reg:DI 483 [ _397 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":121 -1
     (nil))
(insn 963 962 964 57 (set (reg/f:DI 946)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -680 [0xfffffffffffffd58])) [11 nb+0 S8 A64])) "../src/bnsolv.f":121 -1
     (nil))
(insn 964 963 965 57 (set (reg:SI 485 [ _399 ])
        (mem:SI (reg/f:DI 946) [1 *nb_615(D)+0 S4 A32])) "../src/bnsolv.f":121 -1
     (nil))
(insn 965 964 966 57 (set (reg:DI 486 [ _400 ])
        (sign_extend:DI (reg:SI 485 [ _399 ]))) "../src/bnsolv.f":121 -1
     (nil))
(insn 966 965 967 57 (parallel [
            (set (reg:DI 487 [ _401 ])
                (plus:DI (reg:DI 484 [ _398 ])
                    (reg:DI 486 [ _400 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":121 -1
     (nil))
(insn 967 966 968 57 (set (reg/f:DI 947)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -648 [0xfffffffffffffd78])) [10 a+0 S8 A64])) "../src/bnsolv.f":121 -1
     (nil))
(insn 968 967 969 57 (set (reg:SF 488 [ _402 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 487 [ _401 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 947)) [3 *a_685(D) S4 A32])) "../src/bnsolv.f":121 -1
     (nil))
(insn 969 968 970 57 (set (reg:SF 949)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC4") [flags 0x2]) [3  S4 A32])) "../src/bnsolv.f":121 -1
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 970 969 971 57 (set (reg:SF 948)
        (div:SF (reg:SF 949)
            (reg:SF 488 [ _402 ]))) "../src/bnsolv.f":121 -1
     (nil))
(insn 971 970 972 57 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -136 [0xffffffffffffff78])) [3 pivot+0 S4 A32])
        (reg:SF 948)) "../src/bnsolv.f":121 -1
     (nil))
(insn 972 971 973 57 (set (reg/f:DI 950)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -680 [0xfffffffffffffd58])) [11 nb+0 S8 A64])) "../src/bnsolv.f":122 -1
     (nil))
(insn 973 972 974 57 (set (reg:SI 725 [ _768 ])
        (mem:SI (reg/f:DI 950) [1 *nb_615(D)+0 S4 A32])) "../src/bnsolv.f":122 -1
     (nil))
(insn 974 973 1011 57 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])
        (const_int 1 [0x1])) "../src/bnsolv.f":122 -1
     (nil))
;;  succ:       58 (FALLTHRU)

;; basic block 58, loop depth 2, count 0, freq 0, maybe hot
;;  prev block 57, next block 59, flags: (NEW, REACHABLE, RTL)
;;  pred:       57 (FALLTHRU)
;;              59 (DFS_BACK)
(code_label 1011 974 975 58 35 (nil) [1 uses])
(note 975 1011 976 58 [bb 58] NOTE_INSN_BASIC_BLOCK)
(insn 976 975 977 58 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])
            (reg:SI 725 [ _768 ]))) "../src/bnsolv.f":122 -1
     (nil))
(insn 977 976 978 58 (set (reg:QI 726 [ _770 ])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "../src/bnsolv.f":122 -1
     (nil))
(insn 978 977 979 58 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 726 [ _770 ])
            (const_int 0 [0]))) "../src/bnsolv.f":122 -1
     (nil))
(jump_insn 979 978 980 58 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1014)
            (pc))) "../src/bnsolv.f":122 -1
     (nil)
 -> 1014)
;;  succ:       60
;;              59 (FALLTHRU)

;; basic block 59, loop depth 2, count 0, freq 0, maybe hot
;;  prev block 58, next block 60, flags: (NEW, REACHABLE, RTL)
;;  pred:       58 (FALLTHRU)
(note 980 979 981 59 [bb 59] NOTE_INSN_BASIC_BLOCK)
(insn 981 980 982 59 (set (reg:SI 489 [ i.76_403 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [1 i+0 S4 A64])) "../src/bnsolv.f":123 -1
     (nil))
(insn 982 981 983 59 (set (reg:DI 490 [ _404 ])
        (sign_extend:DI (reg:SI 489 [ i.76_403 ]))) "../src/bnsolv.f":123 -1
     (nil))
(insn 983 982 984 59 (parallel [
            (set (reg:DI 491 [ _405 ])
                (mult:DI (reg:DI 675 [ stride.18_648 ])
                    (reg:DI 490 [ _404 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":123 -1
     (nil))
(insn 984 983 985 59 (parallel [
            (set (reg:DI 492 [ _406 ])
                (plus:DI (reg:DI 681 [ offset.19_655 ])
                    (reg:DI 491 [ _405 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":123 -1
     (nil))
(insn 985 984 986 59 (set (reg:SI 951)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])) "../src/bnsolv.f":123 -1
     (nil))
(insn 986 985 987 59 (set (reg:DI 493 [ _407 ])
        (sign_extend:DI (reg:SI 951))) "../src/bnsolv.f":123 -1
     (nil))
(insn 987 986 988 59 (parallel [
            (set (reg:DI 494 [ _408 ])
                (mult:DI (reg:DI 673 [ stride.16_645 ])
                    (reg:DI 493 [ _407 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":123 -1
     (nil))
(insn 988 987 989 59 (parallel [
            (set (reg:DI 495 [ _409 ])
                (plus:DI (reg:DI 492 [ _406 ])
                    (reg:DI 494 [ _408 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":123 -1
     (nil))
(insn 989 988 990 59 (set (reg/f:DI 952)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -680 [0xfffffffffffffd58])) [11 nb+0 S8 A64])) "../src/bnsolv.f":123 -1
     (nil))
(insn 990 989 991 59 (set (reg:SI 496 [ _410 ])
        (mem:SI (reg/f:DI 952) [1 *nb_615(D)+0 S4 A32])) "../src/bnsolv.f":123 -1
     (nil))
(insn 991 990 992 59 (set (reg:DI 497 [ _411 ])
        (sign_extend:DI (reg:SI 496 [ _410 ]))) "../src/bnsolv.f":123 -1
     (nil))
(insn 992 991 993 59 (parallel [
            (set (reg:DI 498 [ _412 ])
                (plus:DI (reg:DI 495 [ _409 ])
                    (reg:DI 497 [ _411 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":123 -1
     (nil))
(insn 993 992 994 59 (set (reg/f:DI 953)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -664 [0xfffffffffffffd68])) [10 c+0 S8 A64])) "../src/bnsolv.f":123 -1
     (nil))
(insn 994 993 995 59 (set (reg:SF 499 [ _413 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 498 [ _412 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 953)) [3 *c_686(D) S4 A32])) "../src/bnsolv.f":123 -1
     (nil))
(insn 995 994 996 59 (set (reg:SI 500 [ i.77_414 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [1 i+0 S4 A64])) "../src/bnsolv.f":123 -1
     (nil))
(insn 996 995 997 59 (set (reg:DI 501 [ _415 ])
        (sign_extend:DI (reg:SI 500 [ i.77_414 ]))) "../src/bnsolv.f":123 -1
     (nil))
(insn 997 996 998 59 (parallel [
            (set (reg:DI 502 [ _416 ])
                (mult:DI (reg:DI 675 [ stride.18_648 ])
                    (reg:DI 501 [ _415 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":123 -1
     (nil))
(insn 998 997 999 59 (parallel [
            (set (reg:DI 503 [ _417 ])
                (plus:DI (reg:DI 681 [ offset.19_655 ])
                    (reg:DI 502 [ _416 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":123 -1
     (nil))
(insn 999 998 1000 59 (set (reg:SI 954)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])) "../src/bnsolv.f":123 -1
     (nil))
(insn 1000 999 1001 59 (set (reg:DI 504 [ _418 ])
        (sign_extend:DI (reg:SI 954))) "../src/bnsolv.f":123 -1
     (nil))
(insn 1001 1000 1002 59 (parallel [
            (set (reg:DI 505 [ _419 ])
                (mult:DI (reg:DI 673 [ stride.16_645 ])
                    (reg:DI 504 [ _418 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":123 -1
     (nil))
(insn 1002 1001 1003 59 (parallel [
            (set (reg:DI 506 [ _420 ])
                (plus:DI (reg:DI 503 [ _417 ])
                    (reg:DI 505 [ _419 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":123 -1
     (nil))
(insn 1003 1002 1004 59 (set (reg/f:DI 955)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -680 [0xfffffffffffffd58])) [11 nb+0 S8 A64])) "../src/bnsolv.f":123 -1
     (nil))
(insn 1004 1003 1005 59 (set (reg:SI 507 [ _421 ])
        (mem:SI (reg/f:DI 955) [1 *nb_615(D)+0 S4 A32])) "../src/bnsolv.f":123 -1
     (nil))
(insn 1005 1004 1006 59 (set (reg:DI 508 [ _422 ])
        (sign_extend:DI (reg:SI 507 [ _421 ]))) "../src/bnsolv.f":123 -1
     (nil))
(insn 1006 1005 1007 59 (parallel [
            (set (reg:DI 509 [ _423 ])
                (plus:DI (reg:DI 506 [ _420 ])
                    (reg:DI 508 [ _422 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":123 -1
     (nil))
(insn 1007 1006 1008 59 (set (reg:SF 510 [ _424 ])
        (mult:SF (reg:SF 499 [ _413 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -136 [0xffffffffffffff78])) [3 pivot+0 S4 A32]))) "../src/bnsolv.f":123 -1
     (nil))
(insn 1008 1007 1009 59 (set (reg/f:DI 956)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -664 [0xfffffffffffffd68])) [10 c+0 S8 A64])) "../src/bnsolv.f":123 -1
     (nil))
(insn 1009 1008 1010 59 (set (mem:SF (plus:DI (mult:DI (reg:DI 509 [ _423 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 956)) [3 *c_686(D) S4 A32])
        (reg:SF 510 [ _424 ])) "../src/bnsolv.f":123 -1
     (nil))
(insn 1010 1009 1012 59 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":122 -1
     (nil))
(jump_insn 1012 1010 1013 59 (set (pc)
        (label_ref 1011)) "../src/bnsolv.f":122 -1
     (nil)
 -> 1011)
;;  succ:       58 (DFS_BACK)

(barrier 1013 1012 1014)
;; basic block 60, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 59, next block 61, flags: (NEW, REACHABLE, RTL)
;;  pred:       58
(code_label 1014 1013 1015 60 34 (nil) [1 uses])
(note 1015 1014 1016 60 [bb 60] NOTE_INSN_BASIC_BLOCK)
(insn 1016 1015 1017 60 (set (reg/f:DI 957)
        (mem/f/c:DI (reg/f:DI 81 virtual-incoming-args) [11 nrhs+0 S8 A64])) "../src/bnsolv.f":125 -1
     (nil))
(insn 1017 1016 1018 60 (set (reg:SI 727 [ _773 ])
        (mem:SI (reg/f:DI 957) [1 *nrhs_689(D)+0 S4 A32])) "../src/bnsolv.f":125 -1
     (nil))
(insn 1018 1017 1055 60 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])
        (const_int 1 [0x1])) "../src/bnsolv.f":125 -1
     (nil))
;;  succ:       61 (FALLTHRU)

;; basic block 61, loop depth 2, count 0, freq 0, maybe hot
;;  prev block 60, next block 62, flags: (NEW, REACHABLE, RTL)
;;  pred:       60 (FALLTHRU)
;;              62 (DFS_BACK)
(code_label 1055 1018 1019 61 37 (nil) [1 uses])
(note 1019 1055 1020 61 [bb 61] NOTE_INSN_BASIC_BLOCK)
(insn 1020 1019 1021 61 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])
            (reg:SI 727 [ _773 ]))) "../src/bnsolv.f":125 -1
     (nil))
(insn 1021 1020 1022 61 (set (reg:QI 728 [ _775 ])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "../src/bnsolv.f":125 -1
     (nil))
(insn 1022 1021 1023 61 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 728 [ _775 ])
            (const_int 0 [0]))) "../src/bnsolv.f":125 -1
     (nil))
(jump_insn 1023 1022 1024 61 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1058)
            (pc))) "../src/bnsolv.f":125 -1
     (nil)
 -> 1058)
;;  succ:       63
;;              62 (FALLTHRU)

;; basic block 62, loop depth 2, count 0, freq 0, maybe hot
;;  prev block 61, next block 63, flags: (NEW, REACHABLE, RTL)
;;  pred:       61 (FALLTHRU)
(note 1024 1023 1025 62 [bb 62] NOTE_INSN_BASIC_BLOCK)
(insn 1025 1024 1026 62 (set (reg:SI 511 [ i.78_425 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [1 i+0 S4 A64])) "../src/bnsolv.f":126 -1
     (nil))
(insn 1026 1025 1027 62 (set (reg:DI 512 [ _426 ])
        (sign_extend:DI (reg:SI 511 [ i.78_425 ]))) "../src/bnsolv.f":126 -1
     (nil))
(insn 1027 1026 1028 62 (parallel [
            (set (reg:DI 513 [ _427 ])
                (mult:DI (reg:DI 685 [ stride.25_662 ])
                    (reg:DI 512 [ _426 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":126 -1
     (nil))
(insn 1028 1027 1029 62 (parallel [
            (set (reg:DI 514 [ _428 ])
                (plus:DI (reg:DI 691 [ offset.26_669 ])
                    (reg:DI 513 [ _427 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":126 -1
     (nil))
(insn 1029 1028 1030 62 (set (reg:SI 958)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])) "../src/bnsolv.f":126 -1
     (nil))
(insn 1030 1029 1031 62 (set (reg:DI 515 [ _429 ])
        (sign_extend:DI (reg:SI 958))) "../src/bnsolv.f":126 -1
     (nil))
(insn 1031 1030 1032 62 (parallel [
            (set (reg:DI 516 [ _430 ])
                (mult:DI (reg:DI 683 [ stride.23_658 ])
                    (reg:DI 515 [ _429 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":126 -1
     (nil))
(insn 1032 1031 1033 62 (parallel [
            (set (reg:DI 517 [ _431 ])
                (plus:DI (reg:DI 514 [ _428 ])
                    (reg:DI 516 [ _430 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":126 -1
     (nil))
(insn 1033 1032 1034 62 (set (reg/f:DI 959)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -680 [0xfffffffffffffd58])) [11 nb+0 S8 A64])) "../src/bnsolv.f":126 -1
     (nil))
(insn 1034 1033 1035 62 (set (reg:SI 518 [ _432 ])
        (mem:SI (reg/f:DI 959) [1 *nb_615(D)+0 S4 A32])) "../src/bnsolv.f":126 -1
     (nil))
(insn 1035 1034 1036 62 (set (reg:DI 519 [ _433 ])
        (sign_extend:DI (reg:SI 518 [ _432 ]))) "../src/bnsolv.f":126 -1
     (nil))
(insn 1036 1035 1037 62 (parallel [
            (set (reg:DI 520 [ _434 ])
                (plus:DI (reg:DI 517 [ _431 ])
                    (reg:DI 519 [ _433 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":126 -1
     (nil))
(insn 1037 1036 1038 62 (set (reg/f:DI 960)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -672 [0xfffffffffffffd60])) [10 r+0 S8 A64])) "../src/bnsolv.f":126 -1
     (nil))
(insn 1038 1037 1039 62 (set (reg:SF 521 [ _435 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 520 [ _434 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 960)) [3 *r_693(D) S4 A32])) "../src/bnsolv.f":126 -1
     (nil))
(insn 1039 1038 1040 62 (set (reg:SI 522 [ i.79_436 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [1 i+0 S4 A64])) "../src/bnsolv.f":126 -1
     (nil))
(insn 1040 1039 1041 62 (set (reg:DI 523 [ _437 ])
        (sign_extend:DI (reg:SI 522 [ i.79_436 ]))) "../src/bnsolv.f":126 -1
     (nil))
(insn 1041 1040 1042 62 (parallel [
            (set (reg:DI 524 [ _438 ])
                (mult:DI (reg:DI 685 [ stride.25_662 ])
                    (reg:DI 523 [ _437 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":126 -1
     (nil))
(insn 1042 1041 1043 62 (parallel [
            (set (reg:DI 525 [ _439 ])
                (plus:DI (reg:DI 691 [ offset.26_669 ])
                    (reg:DI 524 [ _438 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":126 -1
     (nil))
(insn 1043 1042 1044 62 (set (reg:SI 961)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])) "../src/bnsolv.f":126 -1
     (nil))
(insn 1044 1043 1045 62 (set (reg:DI 526 [ _440 ])
        (sign_extend:DI (reg:SI 961))) "../src/bnsolv.f":126 -1
     (nil))
(insn 1045 1044 1046 62 (parallel [
            (set (reg:DI 527 [ _441 ])
                (mult:DI (reg:DI 683 [ stride.23_658 ])
                    (reg:DI 526 [ _440 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":126 -1
     (nil))
(insn 1046 1045 1047 62 (parallel [
            (set (reg:DI 528 [ _442 ])
                (plus:DI (reg:DI 525 [ _439 ])
                    (reg:DI 527 [ _441 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":126 -1
     (nil))
(insn 1047 1046 1048 62 (set (reg/f:DI 962)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -680 [0xfffffffffffffd58])) [11 nb+0 S8 A64])) "../src/bnsolv.f":126 -1
     (nil))
(insn 1048 1047 1049 62 (set (reg:SI 529 [ _443 ])
        (mem:SI (reg/f:DI 962) [1 *nb_615(D)+0 S4 A32])) "../src/bnsolv.f":126 -1
     (nil))
(insn 1049 1048 1050 62 (set (reg:DI 530 [ _444 ])
        (sign_extend:DI (reg:SI 529 [ _443 ]))) "../src/bnsolv.f":126 -1
     (nil))
(insn 1050 1049 1051 62 (parallel [
            (set (reg:DI 531 [ _445 ])
                (plus:DI (reg:DI 528 [ _442 ])
                    (reg:DI 530 [ _444 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":126 -1
     (nil))
(insn 1051 1050 1052 62 (set (reg:SF 532 [ _446 ])
        (mult:SF (reg:SF 521 [ _435 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -136 [0xffffffffffffff78])) [3 pivot+0 S4 A32]))) "../src/bnsolv.f":126 -1
     (nil))
(insn 1052 1051 1053 62 (set (reg/f:DI 963)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -672 [0xfffffffffffffd60])) [10 r+0 S8 A64])) "../src/bnsolv.f":126 -1
     (nil))
(insn 1053 1052 1054 62 (set (mem:SF (plus:DI (mult:DI (reg:DI 531 [ _445 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 963)) [3 *r_693(D) S4 A32])
        (reg:SF 532 [ _446 ])) "../src/bnsolv.f":126 -1
     (nil))
(insn 1054 1053 1056 62 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":125 -1
     (nil))
(jump_insn 1056 1054 1057 62 (set (pc)
        (label_ref 1055)) "../src/bnsolv.f":125 -1
     (nil)
 -> 1055)
;;  succ:       61 (DFS_BACK)

(barrier 1057 1056 1058)
;; basic block 63, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 62, next block 64, flags: (NEW, REACHABLE, RTL)
;;  pred:       61
(code_label 1058 1057 1059 63 36 (nil) [1 uses])
(note 1059 1058 1060 63 [bb 63] NOTE_INSN_BASIC_BLOCK)
(insn 1060 1059 1061 63 (set (reg/f:DI 964)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -680 [0xfffffffffffffd58])) [11 nb+0 S8 A64])) "../src/bnsolv.f":130 -1
     (nil))
(insn 1061 1060 1062 63 (set (reg:SI 533 [ _447 ])
        (mem:SI (reg/f:DI 964) [1 *nb_615(D)+0 S4 A32])) "../src/bnsolv.f":130 -1
     (nil))
(insn 1062 1061 1063 63 (parallel [
            (set (reg:SI 729 [ _778 ])
                (plus:SI (reg:SI 533 [ _447 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":130 -1
     (nil))
(insn 1063 1062 1219 63 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 kpiv+0 S4 A32])
        (reg:SI 729 [ _778 ])) "../src/bnsolv.f":130 -1
     (nil))
;;  succ:       64 (FALLTHRU)

;; basic block 64, loop depth 2, count 0, freq 0, maybe hot
;;  prev block 63, next block 65, flags: (NEW, REACHABLE, RTL)
;;  pred:       63 (FALLTHRU)
;;              74 (DFS_BACK)
(code_label 1219 1063 1064 64 45 (nil) [1 uses])
(note 1064 1219 1065 64 [bb 64] NOTE_INSN_BASIC_BLOCK)
(insn 1065 1064 1066 64 (set (reg:CCNO 17 flags)
        (compare:CCNO (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [1 kpiv+0 S4 A32])
            (const_int 0 [0]))) "../src/bnsolv.f":130 -1
     (nil))
(insn 1066 1065 1067 64 (set (reg:QI 730 [ _780 ])
        (le:QI (reg:CCNO 17 flags)
            (const_int 0 [0]))) "../src/bnsolv.f":130 -1
     (nil))
(insn 1067 1066 1068 64 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 730 [ _780 ])
            (const_int 0 [0]))) "../src/bnsolv.f":130 -1
     (nil))
(jump_insn 1068 1067 1069 64 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1222)
            (pc))) "../src/bnsolv.f":130 -1
     (nil)
 -> 1222)
;;  succ:       75
;;              65 (FALLTHRU)

;; basic block 65, loop depth 2, count 0, freq 0, maybe hot
;;  prev block 64, next block 66, flags: (NEW, REACHABLE, RTL)
;;  pred:       64 (FALLTHRU)
(note 1069 1068 1073 65 [bb 65] NOTE_INSN_BASIC_BLOCK)
(insn 1073 1069 1074 65 (set (reg:SI 968)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 kpiv+0 S4 A32])) "../src/bnsolv.f":131 -1
     (nil))
(insn 1074 1073 1075 65 (parallel [
            (set (reg:SI 967)
                (plus:SI (reg:SI 968)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":131 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [1 kpiv+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 1075 1074 1076 65 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -132 [0xffffffffffffff7c])) [1 kp1+0 S4 A32])
        (reg:SI 967)) "../src/bnsolv.f":131 -1
     (nil))
(insn 1076 1075 1077 65 (set (reg:SI 731 [ _782 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -132 [0xffffffffffffff7c])) [1 kp1+0 S4 A32])) "../src/bnsolv.f":132 -1
     (nil))
(insn 1077 1076 1078 65 (set (reg/f:DI 969)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -680 [0xfffffffffffffd58])) [11 nb+0 S8 A64])) "../src/bnsolv.f":132 -1
     (nil))
(insn 1078 1077 1079 65 (set (reg:SI 732 [ _783 ])
        (mem:SI (reg/f:DI 969) [1 *nb_615(D)+0 S4 A32])) "../src/bnsolv.f":132 -1
     (nil))
(insn 1079 1078 1213 65 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 k+0 S4 A32])
        (reg:SI 731 [ _782 ])) "../src/bnsolv.f":132 -1
     (nil))
;;  succ:       66 (FALLTHRU)

;; basic block 66, loop depth 3, count 0, freq 0, maybe hot
;;  prev block 65, next block 67, flags: (NEW, REACHABLE, RTL)
;;  pred:       65 (FALLTHRU)
;;              73 (DFS_BACK)
(code_label 1213 1079 1080 66 44 (nil) [1 uses])
(note 1080 1213 1081 66 [bb 66] NOTE_INSN_BASIC_BLOCK)
(insn 1081 1080 1082 66 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [1 k+0 S4 A32])
            (reg:SI 732 [ _783 ]))) "../src/bnsolv.f":132 -1
     (nil))
(insn 1082 1081 1083 66 (set (reg:QI 733 [ _785 ])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "../src/bnsolv.f":132 -1
     (nil))
(insn 1083 1082 1084 66 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 733 [ _785 ])
            (const_int 0 [0]))) "../src/bnsolv.f":132 -1
     (nil))
(jump_insn 1084 1083 1085 66 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1216)
            (pc))) "../src/bnsolv.f":132 -1
     (nil)
 -> 1216)
;;  succ:       74
;;              67 (FALLTHRU)

;; basic block 67, loop depth 3, count 0, freq 0, maybe hot
;;  prev block 66, next block 68, flags: (NEW, REACHABLE, RTL)
;;  pred:       66 (FALLTHRU)
(note 1085 1084 1086 67 [bb 67] NOTE_INSN_BASIC_BLOCK)
(insn 1086 1085 1087 67 (set (reg:SI 534 [ i.80_448 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [1 i+0 S4 A64])) "../src/bnsolv.f":133 -1
     (nil))
(insn 1087 1086 1088 67 (set (reg:DI 535 [ _449 ])
        (sign_extend:DI (reg:SI 534 [ i.80_448 ]))) "../src/bnsolv.f":133 -1
     (nil))
(insn 1088 1087 1089 67 (parallel [
            (set (reg:DI 536 [ _450 ])
                (mult:DI (reg:DI 665 [ stride.4_635 ])
                    (reg:DI 535 [ _449 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":133 -1
     (nil))
(insn 1089 1088 1090 67 (parallel [
            (set (reg:DI 537 [ _451 ])
                (plus:DI (reg:DI 671 [ offset.5_642 ])
                    (reg:DI 536 [ _450 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":133 -1
     (nil))
(insn 1090 1089 1091 67 (set (reg:SI 970)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 k+0 S4 A32])) "../src/bnsolv.f":133 -1
     (nil))
(insn 1091 1090 1092 67 (set (reg:DI 538 [ _452 ])
        (sign_extend:DI (reg:SI 970))) "../src/bnsolv.f":133 -1
     (nil))
(insn 1092 1091 1093 67 (parallel [
            (set (reg:DI 539 [ _453 ])
                (mult:DI (reg:DI 663 [ stride.2_632 ])
                    (reg:DI 538 [ _452 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":133 -1
     (nil))
(insn 1093 1092 1094 67 (parallel [
            (set (reg:DI 540 [ _454 ])
                (plus:DI (reg:DI 537 [ _451 ])
                    (reg:DI 539 [ _453 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":133 -1
     (nil))
(insn 1094 1093 1095 67 (set (reg:SI 971)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 kpiv+0 S4 A32])) "../src/bnsolv.f":133 -1
     (nil))
(insn 1095 1094 1096 67 (set (reg:DI 541 [ _455 ])
        (sign_extend:DI (reg:SI 971))) "../src/bnsolv.f":133 -1
     (nil))
(insn 1096 1095 1097 67 (parallel [
            (set (reg:DI 542 [ _456 ])
                (plus:DI (reg:DI 540 [ _454 ])
                    (reg:DI 541 [ _455 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":133 -1
     (nil))
(insn 1097 1096 1098 67 (set (reg/f:DI 972)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -648 [0xfffffffffffffd78])) [10 a+0 S8 A64])) "../src/bnsolv.f":133 -1
     (nil))
(insn 1098 1097 1099 67 (set (reg:SF 973)
        (mem:SF (plus:DI (mult:DI (reg:DI 542 [ _456 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 972)) [3 *a_685(D) S4 A32])) "../src/bnsolv.f":133 -1
     (nil))
(insn 1099 1098 1100 67 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -144 [0xffffffffffffff70])) [3 atmp+0 S4 A32])
        (reg:SF 973)) "../src/bnsolv.f":133 -1
     (nil))
(insn 1100 1099 1101 67 (set (reg/f:DI 974)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -680 [0xfffffffffffffd58])) [11 nb+0 S8 A64])) "../src/bnsolv.f":134 -1
     (nil))
(insn 1101 1100 1102 67 (set (reg:SI 734 [ _787 ])
        (mem:SI (reg/f:DI 974) [1 *nb_615(D)+0 S4 A32])) "../src/bnsolv.f":134 -1
     (nil))
(insn 1102 1101 1151 67 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])
        (const_int 1 [0x1])) "../src/bnsolv.f":134 -1
     (nil))
;;  succ:       68 (FALLTHRU)

;; basic block 68, loop depth 4, count 0, freq 0, maybe hot
;;  prev block 67, next block 69, flags: (NEW, REACHABLE, RTL)
;;  pred:       67 (FALLTHRU)
;;              69 (DFS_BACK)
(code_label 1151 1102 1103 68 41 (nil) [1 uses])
(note 1103 1151 1104 68 [bb 68] NOTE_INSN_BASIC_BLOCK)
(insn 1104 1103 1105 68 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])
            (reg:SI 734 [ _787 ]))) "../src/bnsolv.f":134 -1
     (nil))
(insn 1105 1104 1106 68 (set (reg:QI 735 [ _789 ])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "../src/bnsolv.f":134 -1
     (nil))
(insn 1106 1105 1107 68 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 735 [ _789 ])
            (const_int 0 [0]))) "../src/bnsolv.f":134 -1
     (nil))
(jump_insn 1107 1106 1108 68 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1154)
            (pc))) "../src/bnsolv.f":134 -1
     (nil)
 -> 1154)
;;  succ:       70
;;              69 (FALLTHRU)

;; basic block 69, loop depth 4, count 0, freq 0, maybe hot
;;  prev block 68, next block 70, flags: (NEW, REACHABLE, RTL)
;;  pred:       68 (FALLTHRU)
(note 1108 1107 1109 69 [bb 69] NOTE_INSN_BASIC_BLOCK)
(insn 1109 1108 1110 69 (set (reg:SI 543 [ i.81_457 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [1 i+0 S4 A64])) "../src/bnsolv.f":135 -1
     (nil))
(insn 1110 1109 1111 69 (set (reg:DI 544 [ _458 ])
        (sign_extend:DI (reg:SI 543 [ i.81_457 ]))) "../src/bnsolv.f":135 -1
     (nil))
(insn 1111 1110 1112 69 (parallel [
            (set (reg:DI 545 [ _459 ])
                (mult:DI (reg:DI 675 [ stride.18_648 ])
                    (reg:DI 544 [ _458 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":135 -1
     (nil))
(insn 1112 1111 1113 69 (parallel [
            (set (reg:DI 546 [ _460 ])
                (plus:DI (reg:DI 681 [ offset.19_655 ])
                    (reg:DI 545 [ _459 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":135 -1
     (nil))
(insn 1113 1112 1114 69 (set (reg:SI 975)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])) "../src/bnsolv.f":135 -1
     (nil))
(insn 1114 1113 1115 69 (set (reg:DI 547 [ _461 ])
        (sign_extend:DI (reg:SI 975))) "../src/bnsolv.f":135 -1
     (nil))
(insn 1115 1114 1116 69 (parallel [
            (set (reg:DI 548 [ _462 ])
                (mult:DI (reg:DI 673 [ stride.16_645 ])
                    (reg:DI 547 [ _461 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":135 -1
     (nil))
(insn 1116 1115 1117 69 (parallel [
            (set (reg:DI 549 [ _463 ])
                (plus:DI (reg:DI 546 [ _460 ])
                    (reg:DI 548 [ _462 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":135 -1
     (nil))
(insn 1117 1116 1118 69 (set (reg:SI 976)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 kpiv+0 S4 A32])) "../src/bnsolv.f":135 -1
     (nil))
(insn 1118 1117 1119 69 (set (reg:DI 550 [ _464 ])
        (sign_extend:DI (reg:SI 976))) "../src/bnsolv.f":135 -1
     (nil))
(insn 1119 1118 1120 69 (parallel [
            (set (reg:DI 551 [ _465 ])
                (plus:DI (reg:DI 549 [ _463 ])
                    (reg:DI 550 [ _464 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":135 -1
     (nil))
(insn 1120 1119 1121 69 (set (reg/f:DI 977)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -664 [0xfffffffffffffd68])) [10 c+0 S8 A64])) "../src/bnsolv.f":135 -1
     (nil))
(insn 1121 1120 1122 69 (set (reg:SF 552 [ _466 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 551 [ _465 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 977)) [3 *c_686(D) S4 A32])) "../src/bnsolv.f":135 -1
     (nil))
(insn 1122 1121 1123 69 (set (reg:SI 553 [ i.82_467 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [1 i+0 S4 A64])) "../src/bnsolv.f":135 -1
     (nil))
(insn 1123 1122 1124 69 (set (reg:DI 554 [ _468 ])
        (sign_extend:DI (reg:SI 553 [ i.82_467 ]))) "../src/bnsolv.f":135 -1
     (nil))
(insn 1124 1123 1125 69 (parallel [
            (set (reg:DI 555 [ _469 ])
                (mult:DI (reg:DI 675 [ stride.18_648 ])
                    (reg:DI 554 [ _468 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":135 -1
     (nil))
(insn 1125 1124 1126 69 (parallel [
            (set (reg:DI 556 [ _470 ])
                (plus:DI (reg:DI 681 [ offset.19_655 ])
                    (reg:DI 555 [ _469 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":135 -1
     (nil))
(insn 1126 1125 1127 69 (set (reg:SI 978)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])) "../src/bnsolv.f":135 -1
     (nil))
(insn 1127 1126 1128 69 (set (reg:DI 557 [ _471 ])
        (sign_extend:DI (reg:SI 978))) "../src/bnsolv.f":135 -1
     (nil))
(insn 1128 1127 1129 69 (parallel [
            (set (reg:DI 558 [ _472 ])
                (mult:DI (reg:DI 673 [ stride.16_645 ])
                    (reg:DI 557 [ _471 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":135 -1
     (nil))
(insn 1129 1128 1130 69 (parallel [
            (set (reg:DI 559 [ _473 ])
                (plus:DI (reg:DI 556 [ _470 ])
                    (reg:DI 558 [ _472 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":135 -1
     (nil))
(insn 1130 1129 1131 69 (set (reg:SI 979)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 k+0 S4 A32])) "../src/bnsolv.f":135 -1
     (nil))
(insn 1131 1130 1132 69 (set (reg:DI 560 [ _474 ])
        (sign_extend:DI (reg:SI 979))) "../src/bnsolv.f":135 -1
     (nil))
(insn 1132 1131 1133 69 (parallel [
            (set (reg:DI 561 [ _475 ])
                (plus:DI (reg:DI 559 [ _473 ])
                    (reg:DI 560 [ _474 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":135 -1
     (nil))
(insn 1133 1132 1134 69 (set (reg/f:DI 980)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -664 [0xfffffffffffffd68])) [10 c+0 S8 A64])) "../src/bnsolv.f":135 -1
     (nil))
(insn 1134 1133 1135 69 (set (reg:SF 562 [ _476 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 561 [ _475 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 980)) [3 *c_686(D) S4 A32])) "../src/bnsolv.f":135 -1
     (nil))
(insn 1135 1134 1136 69 (set (reg:SF 563 [ _477 ])
        (mult:SF (reg:SF 562 [ _476 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -144 [0xffffffffffffff70])) [3 atmp+0 S4 A32]))) "../src/bnsolv.f":135 -1
     (nil))
(insn 1136 1135 1137 69 (set (reg:SI 564 [ i.83_478 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [1 i+0 S4 A64])) "../src/bnsolv.f":135 -1
     (nil))
(insn 1137 1136 1138 69 (set (reg:DI 565 [ _479 ])
        (sign_extend:DI (reg:SI 564 [ i.83_478 ]))) "../src/bnsolv.f":135 -1
     (nil))
(insn 1138 1137 1139 69 (parallel [
            (set (reg:DI 566 [ _480 ])
                (mult:DI (reg:DI 675 [ stride.18_648 ])
                    (reg:DI 565 [ _479 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":135 -1
     (nil))
(insn 1139 1138 1140 69 (parallel [
            (set (reg:DI 567 [ _481 ])
                (plus:DI (reg:DI 681 [ offset.19_655 ])
                    (reg:DI 566 [ _480 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":135 -1
     (nil))
(insn 1140 1139 1141 69 (set (reg:SI 981)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])) "../src/bnsolv.f":135 -1
     (nil))
(insn 1141 1140 1142 69 (set (reg:DI 568 [ _482 ])
        (sign_extend:DI (reg:SI 981))) "../src/bnsolv.f":135 -1
     (nil))
(insn 1142 1141 1143 69 (parallel [
            (set (reg:DI 569 [ _483 ])
                (mult:DI (reg:DI 673 [ stride.16_645 ])
                    (reg:DI 568 [ _482 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":135 -1
     (nil))
(insn 1143 1142 1144 69 (parallel [
            (set (reg:DI 570 [ _484 ])
                (plus:DI (reg:DI 567 [ _481 ])
                    (reg:DI 569 [ _483 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":135 -1
     (nil))
(insn 1144 1143 1145 69 (set (reg:SI 982)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 kpiv+0 S4 A32])) "../src/bnsolv.f":135 -1
     (nil))
(insn 1145 1144 1146 69 (set (reg:DI 571 [ _485 ])
        (sign_extend:DI (reg:SI 982))) "../src/bnsolv.f":135 -1
     (nil))
(insn 1146 1145 1147 69 (parallel [
            (set (reg:DI 572 [ _486 ])
                (plus:DI (reg:DI 570 [ _484 ])
                    (reg:DI 571 [ _485 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":135 -1
     (nil))
(insn 1147 1146 1148 69 (set (reg:SF 573 [ _487 ])
        (minus:SF (reg:SF 552 [ _466 ])
            (reg:SF 563 [ _477 ]))) "../src/bnsolv.f":135 -1
     (nil))
(insn 1148 1147 1149 69 (set (reg/f:DI 983)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -664 [0xfffffffffffffd68])) [10 c+0 S8 A64])) "../src/bnsolv.f":135 -1
     (nil))
(insn 1149 1148 1150 69 (set (mem:SF (plus:DI (mult:DI (reg:DI 572 [ _486 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 983)) [3 *c_686(D) S4 A32])
        (reg:SF 573 [ _487 ])) "../src/bnsolv.f":135 -1
     (nil))
(insn 1150 1149 1152 69 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":134 -1
     (nil))
(jump_insn 1152 1150 1153 69 (set (pc)
        (label_ref 1151)) "../src/bnsolv.f":134 -1
     (nil)
 -> 1151)
;;  succ:       68 (DFS_BACK)

(barrier 1153 1152 1154)
;; basic block 70, loop depth 3, count 0, freq 0, maybe hot
;;  prev block 69, next block 71, flags: (NEW, REACHABLE, RTL)
;;  pred:       68
(code_label 1154 1153 1155 70 40 (nil) [1 uses])
(note 1155 1154 1156 70 [bb 70] NOTE_INSN_BASIC_BLOCK)
(insn 1156 1155 1157 70 (set (reg/f:DI 984)
        (mem/f/c:DI (reg/f:DI 81 virtual-incoming-args) [11 nrhs+0 S8 A64])) "../src/bnsolv.f":137 -1
     (nil))
(insn 1157 1156 1158 70 (set (reg:SI 736 [ _792 ])
        (mem:SI (reg/f:DI 984) [1 *nrhs_689(D)+0 S4 A32])) "../src/bnsolv.f":137 -1
     (nil))
(insn 1158 1157 1207 70 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])
        (const_int 1 [0x1])) "../src/bnsolv.f":137 -1
     (nil))
;;  succ:       71 (FALLTHRU)

;; basic block 71, loop depth 4, count 0, freq 0, maybe hot
;;  prev block 70, next block 72, flags: (NEW, REACHABLE, RTL)
;;  pred:       70 (FALLTHRU)
;;              72 (DFS_BACK)
(code_label 1207 1158 1159 71 43 (nil) [1 uses])
(note 1159 1207 1160 71 [bb 71] NOTE_INSN_BASIC_BLOCK)
(insn 1160 1159 1161 71 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])
            (reg:SI 736 [ _792 ]))) "../src/bnsolv.f":137 -1
     (nil))
(insn 1161 1160 1162 71 (set (reg:QI 737 [ _794 ])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "../src/bnsolv.f":137 -1
     (nil))
(insn 1162 1161 1163 71 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 737 [ _794 ])
            (const_int 0 [0]))) "../src/bnsolv.f":137 -1
     (nil))
(jump_insn 1163 1162 1164 71 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1210)
            (pc))) "../src/bnsolv.f":137 -1
     (nil)
 -> 1210)
;;  succ:       73
;;              72 (FALLTHRU)

;; basic block 72, loop depth 4, count 0, freq 0, maybe hot
;;  prev block 71, next block 73, flags: (NEW, REACHABLE, RTL)
;;  pred:       71 (FALLTHRU)
(note 1164 1163 1165 72 [bb 72] NOTE_INSN_BASIC_BLOCK)
(insn 1165 1164 1166 72 (set (reg:SI 574 [ i.84_488 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [1 i+0 S4 A64])) "../src/bnsolv.f":138 -1
     (nil))
(insn 1166 1165 1167 72 (set (reg:DI 575 [ _489 ])
        (sign_extend:DI (reg:SI 574 [ i.84_488 ]))) "../src/bnsolv.f":138 -1
     (nil))
(insn 1167 1166 1168 72 (parallel [
            (set (reg:DI 576 [ _490 ])
                (mult:DI (reg:DI 685 [ stride.25_662 ])
                    (reg:DI 575 [ _489 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":138 -1
     (nil))
(insn 1168 1167 1169 72 (parallel [
            (set (reg:DI 577 [ _491 ])
                (plus:DI (reg:DI 691 [ offset.26_669 ])
                    (reg:DI 576 [ _490 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":138 -1
     (nil))
(insn 1169 1168 1170 72 (set (reg:SI 985)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])) "../src/bnsolv.f":138 -1
     (nil))
(insn 1170 1169 1171 72 (set (reg:DI 578 [ _492 ])
        (sign_extend:DI (reg:SI 985))) "../src/bnsolv.f":138 -1
     (nil))
(insn 1171 1170 1172 72 (parallel [
            (set (reg:DI 579 [ _493 ])
                (mult:DI (reg:DI 683 [ stride.23_658 ])
                    (reg:DI 578 [ _492 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":138 -1
     (nil))
(insn 1172 1171 1173 72 (parallel [
            (set (reg:DI 580 [ _494 ])
                (plus:DI (reg:DI 577 [ _491 ])
                    (reg:DI 579 [ _493 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":138 -1
     (nil))
(insn 1173 1172 1174 72 (set (reg:SI 986)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 kpiv+0 S4 A32])) "../src/bnsolv.f":138 -1
     (nil))
(insn 1174 1173 1175 72 (set (reg:DI 581 [ _495 ])
        (sign_extend:DI (reg:SI 986))) "../src/bnsolv.f":138 -1
     (nil))
(insn 1175 1174 1176 72 (parallel [
            (set (reg:DI 582 [ _496 ])
                (plus:DI (reg:DI 580 [ _494 ])
                    (reg:DI 581 [ _495 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":138 -1
     (nil))
(insn 1176 1175 1177 72 (set (reg/f:DI 987)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -672 [0xfffffffffffffd60])) [10 r+0 S8 A64])) "../src/bnsolv.f":138 -1
     (nil))
(insn 1177 1176 1178 72 (set (reg:SF 583 [ _497 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 582 [ _496 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 987)) [3 *r_693(D) S4 A32])) "../src/bnsolv.f":138 -1
     (nil))
(insn 1178 1177 1179 72 (set (reg:SI 584 [ i.85_498 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [1 i+0 S4 A64])) "../src/bnsolv.f":138 -1
     (nil))
(insn 1179 1178 1180 72 (set (reg:DI 585 [ _499 ])
        (sign_extend:DI (reg:SI 584 [ i.85_498 ]))) "../src/bnsolv.f":138 -1
     (nil))
(insn 1180 1179 1181 72 (parallel [
            (set (reg:DI 586 [ _500 ])
                (mult:DI (reg:DI 685 [ stride.25_662 ])
                    (reg:DI 585 [ _499 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":138 -1
     (nil))
(insn 1181 1180 1182 72 (parallel [
            (set (reg:DI 587 [ _501 ])
                (plus:DI (reg:DI 691 [ offset.26_669 ])
                    (reg:DI 586 [ _500 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":138 -1
     (nil))
(insn 1182 1181 1183 72 (set (reg:SI 988)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])) "../src/bnsolv.f":138 -1
     (nil))
(insn 1183 1182 1184 72 (set (reg:DI 588 [ _502 ])
        (sign_extend:DI (reg:SI 988))) "../src/bnsolv.f":138 -1
     (nil))
(insn 1184 1183 1185 72 (parallel [
            (set (reg:DI 589 [ _503 ])
                (mult:DI (reg:DI 683 [ stride.23_658 ])
                    (reg:DI 588 [ _502 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":138 -1
     (nil))
(insn 1185 1184 1186 72 (parallel [
            (set (reg:DI 590 [ _504 ])
                (plus:DI (reg:DI 587 [ _501 ])
                    (reg:DI 589 [ _503 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":138 -1
     (nil))
(insn 1186 1185 1187 72 (set (reg:SI 989)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 k+0 S4 A32])) "../src/bnsolv.f":138 -1
     (nil))
(insn 1187 1186 1188 72 (set (reg:DI 591 [ _505 ])
        (sign_extend:DI (reg:SI 989))) "../src/bnsolv.f":138 -1
     (nil))
(insn 1188 1187 1189 72 (parallel [
            (set (reg:DI 592 [ _506 ])
                (plus:DI (reg:DI 590 [ _504 ])
                    (reg:DI 591 [ _505 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":138 -1
     (nil))
(insn 1189 1188 1190 72 (set (reg/f:DI 990)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -672 [0xfffffffffffffd60])) [10 r+0 S8 A64])) "../src/bnsolv.f":138 -1
     (nil))
(insn 1190 1189 1191 72 (set (reg:SF 593 [ _507 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 592 [ _506 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 990)) [3 *r_693(D) S4 A32])) "../src/bnsolv.f":138 -1
     (nil))
(insn 1191 1190 1192 72 (set (reg:SF 594 [ _508 ])
        (mult:SF (reg:SF 593 [ _507 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -144 [0xffffffffffffff70])) [3 atmp+0 S4 A32]))) "../src/bnsolv.f":138 -1
     (nil))
(insn 1192 1191 1193 72 (set (reg:SI 595 [ i.86_509 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [1 i+0 S4 A64])) "../src/bnsolv.f":138 -1
     (nil))
(insn 1193 1192 1194 72 (set (reg:DI 596 [ _510 ])
        (sign_extend:DI (reg:SI 595 [ i.86_509 ]))) "../src/bnsolv.f":138 -1
     (nil))
(insn 1194 1193 1195 72 (parallel [
            (set (reg:DI 597 [ _511 ])
                (mult:DI (reg:DI 685 [ stride.25_662 ])
                    (reg:DI 596 [ _510 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":138 -1
     (nil))
(insn 1195 1194 1196 72 (parallel [
            (set (reg:DI 598 [ _512 ])
                (plus:DI (reg:DI 691 [ offset.26_669 ])
                    (reg:DI 597 [ _511 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":138 -1
     (nil))
(insn 1196 1195 1197 72 (set (reg:SI 991)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])) "../src/bnsolv.f":138 -1
     (nil))
(insn 1197 1196 1198 72 (set (reg:DI 599 [ _513 ])
        (sign_extend:DI (reg:SI 991))) "../src/bnsolv.f":138 -1
     (nil))
(insn 1198 1197 1199 72 (parallel [
            (set (reg:DI 600 [ _514 ])
                (mult:DI (reg:DI 683 [ stride.23_658 ])
                    (reg:DI 599 [ _513 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":138 -1
     (nil))
(insn 1199 1198 1200 72 (parallel [
            (set (reg:DI 601 [ _515 ])
                (plus:DI (reg:DI 598 [ _512 ])
                    (reg:DI 600 [ _514 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":138 -1
     (nil))
(insn 1200 1199 1201 72 (set (reg:SI 992)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 kpiv+0 S4 A32])) "../src/bnsolv.f":138 -1
     (nil))
(insn 1201 1200 1202 72 (set (reg:DI 602 [ _516 ])
        (sign_extend:DI (reg:SI 992))) "../src/bnsolv.f":138 -1
     (nil))
(insn 1202 1201 1203 72 (parallel [
            (set (reg:DI 603 [ _517 ])
                (plus:DI (reg:DI 601 [ _515 ])
                    (reg:DI 602 [ _516 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":138 -1
     (nil))
(insn 1203 1202 1204 72 (set (reg:SF 604 [ _518 ])
        (minus:SF (reg:SF 583 [ _497 ])
            (reg:SF 594 [ _508 ]))) "../src/bnsolv.f":138 -1
     (nil))
(insn 1204 1203 1205 72 (set (reg/f:DI 993)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -672 [0xfffffffffffffd60])) [10 r+0 S8 A64])) "../src/bnsolv.f":138 -1
     (nil))
(insn 1205 1204 1206 72 (set (mem:SF (plus:DI (mult:DI (reg:DI 603 [ _517 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 993)) [3 *r_693(D) S4 A32])
        (reg:SF 604 [ _518 ])) "../src/bnsolv.f":138 -1
     (nil))
(insn 1206 1205 1208 72 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":137 -1
     (nil))
(jump_insn 1208 1206 1209 72 (set (pc)
        (label_ref 1207)) "../src/bnsolv.f":137 -1
     (nil)
 -> 1207)
;;  succ:       71 (DFS_BACK)

(barrier 1209 1208 1210)
;; basic block 73, loop depth 3, count 0, freq 0, maybe hot
;;  prev block 72, next block 74, flags: (NEW, REACHABLE, RTL)
;;  pred:       71
(code_label 1210 1209 1211 73 42 (nil) [1 uses])
(note 1211 1210 1212 73 [bb 73] NOTE_INSN_BASIC_BLOCK)
(insn 1212 1211 1214 73 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [1 k+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [1 k+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":132 -1
     (nil))
(jump_insn 1214 1212 1215 73 (set (pc)
        (label_ref 1213)) "../src/bnsolv.f":132 -1
     (nil)
 -> 1213)
;;  succ:       66 (DFS_BACK)

(barrier 1215 1214 1216)
;; basic block 74, loop depth 2, count 0, freq 0, maybe hot
;;  prev block 73, next block 75, flags: (NEW, REACHABLE, RTL)
;;  pred:       66
(code_label 1216 1215 1217 74 39 (nil) [1 uses])
(note 1217 1216 1218 74 [bb 74] NOTE_INSN_BASIC_BLOCK)
(insn 1218 1217 1220 74 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -12 [0xfffffffffffffff4])) [1 kpiv+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -12 [0xfffffffffffffff4])) [1 kpiv+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":130 -1
     (nil))
(jump_insn 1220 1218 1221 74 (set (pc)
        (label_ref 1219)) "../src/bnsolv.f":130 -1
     (nil)
 -> 1219)
;;  succ:       64 (DFS_BACK)

(barrier 1221 1220 1222)
;; basic block 75, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 74, next block 76, flags: (NEW, REACHABLE, RTL)
;;  pred:       64
(code_label 1222 1221 1223 75 38 (nil) [1 uses])
(note 1223 1222 1224 75 [bb 75] NOTE_INSN_BASIC_BLOCK)
(insn 1224 1223 1225 75 (set (reg:SI 605 [ i.87_519 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [1 i+0 S4 A64])) "../src/bnsolv.f":37 -1
     (nil))
(insn 1225 1224 1226 75 (parallel [
            (set (reg:SI 606 [ _520 ])
                (plus:SI (reg:SI 605 [ i.87_519 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":37 -1
     (nil))
(insn 1226 1225 1228 75 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [1 i+0 S4 A64])
        (reg:SI 606 [ _520 ])) "../src/bnsolv.f":37 -1
     (nil))
(jump_insn 1228 1226 1229 75 (set (pc)
        (label_ref 1227)) "../src/bnsolv.f":37 -1
     (nil)
 -> 1227)
;;  succ:       4 (DFS_BACK)

(barrier 1229 1228 1230)
;; basic block 76, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 75, next block 77, flags: (NEW, REACHABLE, RTL)
;;  pred:       4
(code_label 1230 1229 1231 76 2 (nil) [1 uses])
(note 1231 1230 1232 76 [bb 76] NOTE_INSN_BASIC_BLOCK)
(insn 1232 1231 1233 76 (set (reg/f:DI 994)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -688 [0xfffffffffffffd50])) [11 n+0 S8 A64])) "../src/bnsolv.f":145 -1
     (nil))
(insn 1233 1232 1234 76 (set (reg:SI 607 [ _521 ])
        (mem:SI (reg/f:DI 994) [1 *n_622(D)+0 S4 A32])) "../src/bnsolv.f":145 -1
     (nil))
(insn 1234 1233 1235 76 (parallel [
            (set (reg:SI 738 [ _810 ])
                (plus:SI (reg:SI 607 [ _521 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":145 -1
     (nil))
(insn 1235 1234 1348 76 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [1 i+0 S4 A64])
        (reg:SI 738 [ _810 ])) "../src/bnsolv.f":145 -1
     (nil))
;;  succ:       77 (FALLTHRU)

;; basic block 77, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 76, next block 78, flags: (NEW, REACHABLE, RTL)
;;  pred:       76 (FALLTHRU)
;;              87 (DFS_BACK)
(code_label 1348 1235 1236 77 54 (nil) [1 uses])
(note 1236 1348 1237 77 [bb 77] NOTE_INSN_BASIC_BLOCK)
(insn 1237 1236 1238 77 (set (reg:SI 608 [ i.88_522 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [1 i+0 S4 A64])) "../src/bnsolv.f":145 -1
     (nil))
(insn 1238 1237 1239 77 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 608 [ i.88_522 ])
            (const_int 0 [0]))) "../src/bnsolv.f":145 -1
     (nil))
(insn 1239 1238 1240 77 (set (reg:QI 739 [ _812 ])
        (le:QI (reg:CCNO 17 flags)
            (const_int 0 [0]))) "../src/bnsolv.f":145 -1
     (nil))
(insn 1240 1239 1241 77 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 739 [ _812 ])
            (const_int 0 [0]))) "../src/bnsolv.f":145 -1
     (nil))
(jump_insn 1241 1240 1242 77 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1351)
            (pc))) "../src/bnsolv.f":145 -1
     (nil)
 -> 1351)
;;  succ:       88
;;              78 (FALLTHRU)

;; basic block 78, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 77, next block 79, flags: (NEW, REACHABLE, RTL)
;;  pred:       77 (FALLTHRU)
(note 1242 1241 1243 78 [bb 78] NOTE_INSN_BASIC_BLOCK)
(insn 1243 1242 1244 78 (set (reg:SI 609 [ i.89_523 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [1 i+0 S4 A64])) "../src/bnsolv.f":146 -1
     (nil))
(insn 1244 1243 1245 78 (parallel [
            (set (reg:SI 995)
                (plus:SI (reg:SI 609 [ i.89_523 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":146 -1
     (nil))
(insn 1245 1244 1246 78 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -148 [0xffffffffffffff6c])) [1 ip+0 S4 A32])
        (reg:SI 995)) "../src/bnsolv.f":146 -1
     (nil))
(insn 1246 1245 1247 78 (set (reg/f:DI 996)
        (mem/f/c:DI (reg/f:DI 81 virtual-incoming-args) [11 nrhs+0 S8 A64])) "../src/bnsolv.f":147 -1
     (nil))
(insn 1247 1246 1248 78 (set (reg:SI 740 [ _814 ])
        (mem:SI (reg/f:DI 996) [1 *nrhs_689(D)+0 S4 A32])) "../src/bnsolv.f":147 -1
     (nil))
(insn 1248 1247 1340 78 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])
        (const_int 1 [0x1])) "../src/bnsolv.f":147 -1
     (nil))
;;  succ:       79 (FALLTHRU)

;; basic block 79, loop depth 2, count 0, freq 0, maybe hot
;;  prev block 78, next block 80, flags: (NEW, REACHABLE, RTL)
;;  pred:       78 (FALLTHRU)
;;              86 (DFS_BACK)
(code_label 1340 1248 1249 79 53 (nil) [1 uses])
(note 1249 1340 1250 79 [bb 79] NOTE_INSN_BASIC_BLOCK)
(insn 1250 1249 1251 79 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])
            (reg:SI 740 [ _814 ]))) "../src/bnsolv.f":147 -1
     (nil))
(insn 1251 1250 1252 79 (set (reg:QI 741 [ _816 ])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "../src/bnsolv.f":147 -1
     (nil))
(insn 1252 1251 1253 79 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 741 [ _816 ])
            (const_int 0 [0]))) "../src/bnsolv.f":147 -1
     (nil))
(jump_insn 1253 1252 1254 79 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1343)
            (pc))) "../src/bnsolv.f":147 -1
     (nil)
 -> 1343)
;;  succ:       87
;;              80 (FALLTHRU)

;; basic block 80, loop depth 2, count 0, freq 0, maybe hot
;;  prev block 79, next block 81, flags: (NEW, REACHABLE, RTL)
;;  pred:       79 (FALLTHRU)
(note 1254 1253 1255 80 [bb 80] NOTE_INSN_BASIC_BLOCK)
(insn 1255 1254 1256 80 (set (reg/f:DI 997)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -680 [0xfffffffffffffd58])) [11 nb+0 S8 A64])) "../src/bnsolv.f":148 -1
     (nil))
(insn 1256 1255 1257 80 (set (reg:SI 742 [ _817 ])
        (mem:SI (reg/f:DI 997) [1 *nb_615(D)+0 S4 A32])) "../src/bnsolv.f":148 -1
     (nil))
(insn 1257 1256 1334 80 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 k+0 S4 A32])
        (const_int 1 [0x1])) "../src/bnsolv.f":148 -1
     (nil))
;;  succ:       81 (FALLTHRU)

;; basic block 81, loop depth 3, count 0, freq 0, maybe hot
;;  prev block 80, next block 82, flags: (NEW, REACHABLE, RTL)
;;  pred:       80 (FALLTHRU)
;;              85 (DFS_BACK)
(code_label 1334 1257 1258 81 52 (nil) [1 uses])
(note 1258 1334 1259 81 [bb 81] NOTE_INSN_BASIC_BLOCK)
(insn 1259 1258 1260 81 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [1 k+0 S4 A32])
            (reg:SI 742 [ _817 ]))) "../src/bnsolv.f":148 -1
     (nil))
(insn 1260 1259 1261 81 (set (reg:QI 743 [ _819 ])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "../src/bnsolv.f":148 -1
     (nil))
(insn 1261 1260 1262 81 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 743 [ _819 ])
            (const_int 0 [0]))) "../src/bnsolv.f":148 -1
     (nil))
(jump_insn 1262 1261 1263 81 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1337)
            (pc))) "../src/bnsolv.f":148 -1
     (nil)
 -> 1337)
;;  succ:       86
;;              82 (FALLTHRU)

;; basic block 82, loop depth 3, count 0, freq 0, maybe hot
;;  prev block 81, next block 83, flags: (NEW, REACHABLE, RTL)
;;  pred:       81 (FALLTHRU)
(note 1263 1262 1264 82 [bb 82] NOTE_INSN_BASIC_BLOCK)
(insn 1264 1263 1265 82 (set (reg/f:DI 998)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -680 [0xfffffffffffffd58])) [11 nb+0 S8 A64])) "../src/bnsolv.f":149 -1
     (nil))
(insn 1265 1264 1266 82 (set (reg:SI 744 [ _820 ])
        (mem:SI (reg/f:DI 998) [1 *nb_615(D)+0 S4 A32])) "../src/bnsolv.f":149 -1
     (nil))
(insn 1266 1265 1328 82 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 j+0 S4 A32])
        (const_int 1 [0x1])) "../src/bnsolv.f":149 -1
     (nil))
;;  succ:       83 (FALLTHRU)

;; basic block 83, loop depth 4, count 0, freq 0, maybe hot
;;  prev block 82, next block 84, flags: (NEW, REACHABLE, RTL)
;;  pred:       82 (FALLTHRU)
;;              84 (DFS_BACK)
(code_label 1328 1266 1267 83 51 (nil) [1 uses])
(note 1267 1328 1268 83 [bb 83] NOTE_INSN_BASIC_BLOCK)
(insn 1268 1267 1269 83 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 j+0 S4 A32])
            (reg:SI 744 [ _820 ]))) "../src/bnsolv.f":149 -1
     (nil))
(insn 1269 1268 1270 83 (set (reg:QI 745 [ _822 ])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "../src/bnsolv.f":149 -1
     (nil))
(insn 1270 1269 1271 83 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 745 [ _822 ])
            (const_int 0 [0]))) "../src/bnsolv.f":149 -1
     (nil))
(jump_insn 1271 1270 1272 83 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1331)
            (pc))) "../src/bnsolv.f":149 -1
     (nil)
 -> 1331)
;;  succ:       85
;;              84 (FALLTHRU)

;; basic block 84, loop depth 4, count 0, freq 0, maybe hot
;;  prev block 83, next block 85, flags: (NEW, REACHABLE, RTL)
;;  pred:       83 (FALLTHRU)
(note 1272 1271 1273 84 [bb 84] NOTE_INSN_BASIC_BLOCK)
(insn 1273 1272 1274 84 (set (reg:SI 610 [ i.90_524 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [1 i+0 S4 A64])) "../src/bnsolv.f":150 -1
     (nil))
(insn 1274 1273 1275 84 (set (reg:DI 611 [ _525 ])
        (sign_extend:DI (reg:SI 610 [ i.90_524 ]))) "../src/bnsolv.f":150 -1
     (nil))
(insn 1275 1274 1276 84 (parallel [
            (set (reg:DI 612 [ _526 ])
                (mult:DI (reg:DI 685 [ stride.25_662 ])
                    (reg:DI 611 [ _525 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":150 -1
     (nil))
(insn 1276 1275 1277 84 (parallel [
            (set (reg:DI 613 [ _527 ])
                (plus:DI (reg:DI 691 [ offset.26_669 ])
                    (reg:DI 612 [ _526 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":150 -1
     (nil))
(insn 1277 1276 1278 84 (set (reg:SI 999)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])) "../src/bnsolv.f":150 -1
     (nil))
(insn 1278 1277 1279 84 (set (reg:DI 614 [ _528 ])
        (sign_extend:DI (reg:SI 999))) "../src/bnsolv.f":150 -1
     (nil))
(insn 1279 1278 1280 84 (parallel [
            (set (reg:DI 615 [ _529 ])
                (mult:DI (reg:DI 683 [ stride.23_658 ])
                    (reg:DI 614 [ _528 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":150 -1
     (nil))
(insn 1280 1279 1281 84 (parallel [
            (set (reg:DI 616 [ _530 ])
                (plus:DI (reg:DI 613 [ _527 ])
                    (reg:DI 615 [ _529 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":150 -1
     (nil))
(insn 1281 1280 1282 84 (set (reg:SI 1000)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 k+0 S4 A32])) "../src/bnsolv.f":150 -1
     (nil))
(insn 1282 1281 1283 84 (set (reg:DI 617 [ _531 ])
        (sign_extend:DI (reg:SI 1000))) "../src/bnsolv.f":150 -1
     (nil))
(insn 1283 1282 1284 84 (parallel [
            (set (reg:DI 618 [ _532 ])
                (plus:DI (reg:DI 616 [ _530 ])
                    (reg:DI 617 [ _531 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":150 -1
     (nil))
(insn 1284 1283 1285 84 (set (reg/f:DI 1001)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -672 [0xfffffffffffffd60])) [10 r+0 S8 A64])) "../src/bnsolv.f":150 -1
     (nil))
(insn 1285 1284 1286 84 (set (reg:SF 619 [ _533 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 618 [ _532 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 1001)) [3 *r_693(D) S4 A32])) "../src/bnsolv.f":150 -1
     (nil))
(insn 1286 1285 1287 84 (set (reg:SI 1002)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -148 [0xffffffffffffff6c])) [1 ip+0 S4 A32])) "../src/bnsolv.f":150 -1
     (nil))
(insn 1287 1286 1288 84 (set (reg:DI 620 [ _534 ])
        (sign_extend:DI (reg:SI 1002))) "../src/bnsolv.f":150 -1
     (nil))
(insn 1288 1287 1289 84 (parallel [
            (set (reg:DI 621 [ _535 ])
                (mult:DI (reg:DI 685 [ stride.25_662 ])
                    (reg:DI 620 [ _534 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":150 -1
     (nil))
(insn 1289 1288 1290 84 (parallel [
            (set (reg:DI 622 [ _536 ])
                (plus:DI (reg:DI 691 [ offset.26_669 ])
                    (reg:DI 621 [ _535 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":150 -1
     (nil))
(insn 1290 1289 1291 84 (set (reg:SI 1003)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])) "../src/bnsolv.f":150 -1
     (nil))
(insn 1291 1290 1292 84 (set (reg:DI 623 [ _537 ])
        (sign_extend:DI (reg:SI 1003))) "../src/bnsolv.f":150 -1
     (nil))
(insn 1292 1291 1293 84 (parallel [
            (set (reg:DI 624 [ _538 ])
                (mult:DI (reg:DI 683 [ stride.23_658 ])
                    (reg:DI 623 [ _537 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":150 -1
     (nil))
(insn 1293 1292 1294 84 (parallel [
            (set (reg:DI 625 [ _539 ])
                (plus:DI (reg:DI 622 [ _536 ])
                    (reg:DI 624 [ _538 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":150 -1
     (nil))
(insn 1294 1293 1295 84 (set (reg:SI 1004)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 j+0 S4 A32])) "../src/bnsolv.f":150 -1
     (nil))
(insn 1295 1294 1296 84 (set (reg:DI 626 [ _540 ])
        (sign_extend:DI (reg:SI 1004))) "../src/bnsolv.f":150 -1
     (nil))
(insn 1296 1295 1297 84 (parallel [
            (set (reg:DI 627 [ _541 ])
                (plus:DI (reg:DI 625 [ _539 ])
                    (reg:DI 626 [ _540 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":150 -1
     (nil))
(insn 1297 1296 1298 84 (set (reg/f:DI 1005)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -672 [0xfffffffffffffd60])) [10 r+0 S8 A64])) "../src/bnsolv.f":150 -1
     (nil))
(insn 1298 1297 1299 84 (set (reg:SF 628 [ _542 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 627 [ _541 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 1005)) [3 *r_693(D) S4 A32])) "../src/bnsolv.f":150 -1
     (nil))
(insn 1299 1298 1300 84 (set (reg:SI 629 [ i.91_543 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [1 i+0 S4 A64])) "../src/bnsolv.f":150 -1
     (nil))
(insn 1300 1299 1301 84 (set (reg:DI 630 [ _544 ])
        (sign_extend:DI (reg:SI 629 [ i.91_543 ]))) "../src/bnsolv.f":150 -1
     (nil))
(insn 1301 1300 1302 84 (parallel [
            (set (reg:DI 631 [ _545 ])
                (mult:DI (reg:DI 675 [ stride.18_648 ])
                    (reg:DI 630 [ _544 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":150 -1
     (nil))
(insn 1302 1301 1303 84 (parallel [
            (set (reg:DI 632 [ _546 ])
                (plus:DI (reg:DI 681 [ offset.19_655 ])
                    (reg:DI 631 [ _545 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":150 -1
     (nil))
(insn 1303 1302 1304 84 (set (reg:SI 1006)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 j+0 S4 A32])) "../src/bnsolv.f":150 -1
     (nil))
(insn 1304 1303 1305 84 (set (reg:DI 633 [ _547 ])
        (sign_extend:DI (reg:SI 1006))) "../src/bnsolv.f":150 -1
     (nil))
(insn 1305 1304 1306 84 (parallel [
            (set (reg:DI 634 [ _548 ])
                (mult:DI (reg:DI 673 [ stride.16_645 ])
                    (reg:DI 633 [ _547 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":150 -1
     (nil))
(insn 1306 1305 1307 84 (parallel [
            (set (reg:DI 635 [ _549 ])
                (plus:DI (reg:DI 632 [ _546 ])
                    (reg:DI 634 [ _548 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":150 -1
     (nil))
(insn 1307 1306 1308 84 (set (reg:SI 1007)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 k+0 S4 A32])) "../src/bnsolv.f":150 -1
     (nil))
(insn 1308 1307 1309 84 (set (reg:DI 636 [ _550 ])
        (sign_extend:DI (reg:SI 1007))) "../src/bnsolv.f":150 -1
     (nil))
(insn 1309 1308 1310 84 (parallel [
            (set (reg:DI 637 [ _551 ])
                (plus:DI (reg:DI 635 [ _549 ])
                    (reg:DI 636 [ _550 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":150 -1
     (nil))
(insn 1310 1309 1311 84 (set (reg/f:DI 1008)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -664 [0xfffffffffffffd68])) [10 c+0 S8 A64])) "../src/bnsolv.f":150 -1
     (nil))
(insn 1311 1310 1312 84 (set (reg:SF 638 [ _552 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 637 [ _551 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 1008)) [3 *c_686(D) S4 A32])) "../src/bnsolv.f":150 -1
     (nil))
(insn 1312 1311 1313 84 (set (reg:SF 639 [ _553 ])
        (mult:SF (reg:SF 628 [ _542 ])
            (reg:SF 638 [ _552 ]))) "../src/bnsolv.f":150 -1
     (nil))
(insn 1313 1312 1314 84 (set (reg:SI 640 [ i.92_554 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [1 i+0 S4 A64])) "../src/bnsolv.f":150 -1
     (nil))
(insn 1314 1313 1315 84 (set (reg:DI 641 [ _555 ])
        (sign_extend:DI (reg:SI 640 [ i.92_554 ]))) "../src/bnsolv.f":150 -1
     (nil))
(insn 1315 1314 1316 84 (parallel [
            (set (reg:DI 642 [ _556 ])
                (mult:DI (reg:DI 685 [ stride.25_662 ])
                    (reg:DI 641 [ _555 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":150 -1
     (nil))
(insn 1316 1315 1317 84 (parallel [
            (set (reg:DI 643 [ _557 ])
                (plus:DI (reg:DI 691 [ offset.26_669 ])
                    (reg:DI 642 [ _556 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":150 -1
     (nil))
(insn 1317 1316 1318 84 (set (reg:SI 1009)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])) "../src/bnsolv.f":150 -1
     (nil))
(insn 1318 1317 1319 84 (set (reg:DI 644 [ _558 ])
        (sign_extend:DI (reg:SI 1009))) "../src/bnsolv.f":150 -1
     (nil))
(insn 1319 1318 1320 84 (parallel [
            (set (reg:DI 645 [ _559 ])
                (mult:DI (reg:DI 683 [ stride.23_658 ])
                    (reg:DI 644 [ _558 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":150 -1
     (nil))
(insn 1320 1319 1321 84 (parallel [
            (set (reg:DI 646 [ _560 ])
                (plus:DI (reg:DI 643 [ _557 ])
                    (reg:DI 645 [ _559 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":150 -1
     (nil))
(insn 1321 1320 1322 84 (set (reg:SI 1010)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 k+0 S4 A32])) "../src/bnsolv.f":150 -1
     (nil))
(insn 1322 1321 1323 84 (set (reg:DI 647 [ _561 ])
        (sign_extend:DI (reg:SI 1010))) "../src/bnsolv.f":150 -1
     (nil))
(insn 1323 1322 1324 84 (parallel [
            (set (reg:DI 648 [ _562 ])
                (plus:DI (reg:DI 646 [ _560 ])
                    (reg:DI 647 [ _561 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":150 -1
     (nil))
(insn 1324 1323 1325 84 (set (reg:SF 649 [ _563 ])
        (minus:SF (reg:SF 619 [ _533 ])
            (reg:SF 639 [ _553 ]))) "../src/bnsolv.f":150 -1
     (nil))
(insn 1325 1324 1326 84 (set (reg/f:DI 1011)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -672 [0xfffffffffffffd60])) [10 r+0 S8 A64])) "../src/bnsolv.f":150 -1
     (nil))
(insn 1326 1325 1327 84 (set (mem:SF (plus:DI (mult:DI (reg:DI 648 [ _562 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 1011)) [3 *r_693(D) S4 A32])
        (reg:SF 649 [ _563 ])) "../src/bnsolv.f":150 -1
     (nil))
(insn 1327 1326 1329 84 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [1 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [1 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":149 -1
     (nil))
(jump_insn 1329 1327 1330 84 (set (pc)
        (label_ref 1328)) "../src/bnsolv.f":149 -1
     (nil)
 -> 1328)
;;  succ:       83 (DFS_BACK)

(barrier 1330 1329 1331)
;; basic block 85, loop depth 3, count 0, freq 0, maybe hot
;;  prev block 84, next block 86, flags: (NEW, REACHABLE, RTL)
;;  pred:       83
(code_label 1331 1330 1332 85 50 (nil) [1 uses])
(note 1332 1331 1333 85 [bb 85] NOTE_INSN_BASIC_BLOCK)
(insn 1333 1332 1335 85 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [1 k+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [1 k+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":148 -1
     (nil))
(jump_insn 1335 1333 1336 85 (set (pc)
        (label_ref 1334)) "../src/bnsolv.f":148 -1
     (nil)
 -> 1334)
;;  succ:       81 (DFS_BACK)

(barrier 1336 1335 1337)
;; basic block 86, loop depth 2, count 0, freq 0, maybe hot
;;  prev block 85, next block 87, flags: (NEW, REACHABLE, RTL)
;;  pred:       81
(code_label 1337 1336 1338 86 49 (nil) [1 uses])
(note 1338 1337 1339 86 [bb 86] NOTE_INSN_BASIC_BLOCK)
(insn 1339 1338 1341 86 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -20 [0xffffffffffffffec])) [1 l+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":147 -1
     (nil))
(jump_insn 1341 1339 1342 86 (set (pc)
        (label_ref 1340)) "../src/bnsolv.f":147 -1
     (nil)
 -> 1340)
;;  succ:       79 (DFS_BACK)

(barrier 1342 1341 1343)
;; basic block 87, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 86, next block 88, flags: (NEW, REACHABLE, RTL)
;;  pred:       79
(code_label 1343 1342 1344 87 48 (nil) [1 uses])
(note 1344 1343 1345 87 [bb 87] NOTE_INSN_BASIC_BLOCK)
(insn 1345 1344 1346 87 (set (reg:SI 650 [ i.93_564 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [1 i+0 S4 A64])) "../src/bnsolv.f":145 -1
     (nil))
(insn 1346 1345 1347 87 (parallel [
            (set (reg:SI 651 [ _565 ])
                (plus:SI (reg:SI 650 [ i.93_564 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":145 -1
     (nil))
(insn 1347 1346 1349 87 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [1 i+0 S4 A64])
        (reg:SI 651 [ _565 ])) "../src/bnsolv.f":145 -1
     (nil))
(jump_insn 1349 1347 1350 87 (set (pc)
        (label_ref 1348)) "../src/bnsolv.f":145 -1
     (nil)
 -> 1348)
;;  succ:       77 (DFS_BACK)

(barrier 1350 1349 1351)
;; basic block 88, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 87, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       77
(code_label 1351 1350 1352 88 47 (nil) [1 uses])
(note 1352 1351 1366 88 [bb 88] NOTE_INSN_BASIC_BLOCK)
(insn 1366 1352 0 88 (const_int 0 [0]) "../src/bnsolv.f":156 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)

