
;; Function bnsolv (bnsolv_, funcdef_no=0, decl_uid=3499, cgraph_uid=0, symbol_order=0)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=752, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 20 to 7 (offset=688, prev_offset=0)
Can eliminate 20 to 6 (offset=-48, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 3:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 4:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 5:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 6:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 7:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 11:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 12:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 13:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 14:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 15:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 17:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 16:  (0) r {*cmpdi_ccno_1}
            0 Non input pseudo reload: reject++
            3 Dying matched operand reload: reject++
          alt=0,overall=8,losers=1,rld_nregs=2
            0 Non input pseudo reload: reject++
            2 Dying matched operand reload: reject++
          alt=1,overall=8,losers=1,rld_nregs=2
	 Choosing alt 0 in insn 18:  (0) =r  (2) rm  (3) 0 {*movdicc_noc}
      Creating newreg=1012 from oldreg=748, assigning class GENERAL_REGS to r1012
   18: r1012:DI={(flags:CCGOC>=0)?r652:DI:r1012:DI}
      REG_DEAD r748:DI
      REG_DEAD r652:DI
      REG_DEAD flags:CCGOC
    Inserting insn reload before:
 1495: r1012:DI=r748:DI
    Inserting insn reload after:
 1496: r653:DI=r1012:DI

            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=5,overall=2,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 1496:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 19:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 20:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 21:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 22:  (0) m  (1) re {*movdi_internal}
            1 Non pseudo reload: reject++
            alt=0: Bad operand -- refuse
            1 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 2 in insn 23:  (0) r  (1) 0  (2) mr {*muldi3_1}
      Creating newreg=1013 from oldreg=654, assigning class GENERAL_REGS to r1013
   23: {r1013:DI=r1013:DI*[frame:DI-0x58];clobber flags:CC;}
      REG_UNUSED flags:CC
    Inserting insn reload before:
 1497: r1013:DI=r653:DI
    Inserting insn reload after:
 1498: r654:DI=r1013:DI

            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=3,overall=2,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1497:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 25:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 24:  (0) r {*cmpdi_ccno_1}
            0 Non input pseudo reload: reject++
            3 Dying matched operand reload: reject++
          alt=0,overall=8,losers=1,rld_nregs=2
            0 Non input pseudo reload: reject++
            2 Dying matched operand reload: reject++
          alt=1,overall=8,losers=1,rld_nregs=2
	 Choosing alt 0 in insn 26:  (0) =r  (2) rm  (3) 0 {*movdicc_noc}
      Creating newreg=1014 from oldreg=751, assigning class GENERAL_REGS to r1014
   26: r1014:DI={(flags:CCGOC>=0)?r654:DI:r1014:DI}
      REG_DEAD r751:DI
      REG_DEAD r654:DI
      REG_DEAD flags:CCGOC
    Inserting insn reload before:
 1499: r1014:DI=r751:DI
    Inserting insn reload after:
 1500: r655:DI=r1014:DI

            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=5,overall=2,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 1500:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 27:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 28:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 29:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 30:  (0) m  (1) re {*movdi_internal}
            1 Non pseudo reload: reject++
            alt=0: Bad operand -- refuse
            1 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 2 in insn 31:  (0) r  (1) 0  (2) mr {*muldi3_1}
      Creating newreg=1015 from oldreg=656, assigning class GENERAL_REGS to r1015
   31: {r1015:DI=r1015:DI*[frame:DI-0x60];clobber flags:CC;}
      REG_UNUSED flags:CC
    Inserting insn reload before:
 1501: r1015:DI=r655:DI
    Inserting insn reload after:
 1502: r656:DI=r1015:DI

            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=3,overall=2,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1501:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 33:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 32:  (0) r {*cmpdi_ccno_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 34:  (0) r  (2) 0  (3) rm {*movdicc_noc}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 37:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 38:  (0) r  (1) Z {*movdi_internal}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 42:  (0) =rm  (1) 0 {*one_cmpldi2_1}
      Creating newreg=1016 from oldreg=93, assigning class GENERAL_REGS to r1016
   42: r1016:DI=!r1016:DI
    Inserting insn reload before:
 1503: r1016:DI=r653:DI
    Inserting insn reload after:
 1504: r93:DI=r1016:DI

            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=3,overall=2,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1503:  (0) r  (1) rem {*movdi_internal}
            0 Non pseudo reload: reject++
          alt=0,overall=19,losers=3,rld_nregs=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            2 Non pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=2
	 Choosing alt 1 in insn 43:  (0) r  (1) 0  (2) rm {*subdi_1}
      Creating newreg=1017 from oldreg=93, assigning class GENERAL_REGS to r1017
      Creating newreg=1018 from oldreg=655, assigning class GENERAL_REGS to r1018
      Making reload reg 1018 for reg 655 optional
   43: {r1017:DI=r1017:DI-r1018:DI;clobber flags:CC;}
      REG_DEAD r93:DI
      REG_UNUSED flags:CC
    Inserting insn reload before:
 1505: r1017:DI=r93:DI
 1507: r1018:DI=r655:DI
    Inserting insn reload after:
 1506: r661:DI=r1017:DI

            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=5,overall=2,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 1506:  (0) m  (1) re {*movdi_internal}
            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=3,overall=2,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1507:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 44:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 45:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 46:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 47:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 48:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 50:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 49:  (0) r {*cmpdi_ccno_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 51:  (0) =r  (2) rm  (3) 0 {*movdicc_noc}
      Creating newreg=1019 from oldreg=757, assigning class GENERAL_REGS to r1019
   51: r1019:DI={(flags:CCGOC>=0)?r662:DI:r1019:DI}
      REG_DEAD r757:DI
      REG_DEAD r662:DI
      REG_DEAD flags:CCGOC
    Inserting insn reload before:
 1508: r1019:DI=r757:DI
    Inserting insn reload after:
 1509: r663:DI=r1019:DI

            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 52:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 53:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 54:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 55:  (0) m  (1) re {*movdi_internal}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 2 in insn 56:  (0) r  (1) 0  (2) mr {*muldi3_1}
      Creating newreg=1020 from oldreg=664, assigning class GENERAL_REGS to r1020
   56: {r1020:DI=r1020:DI*[frame:DI-0x70];clobber flags:CC;}
      REG_UNUSED flags:CC
    Inserting insn reload before:
 1510: r1020:DI=r663:DI
    Inserting insn reload after:
 1511: r664:DI=r1020:DI

          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 58:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 57:  (0) r {*cmpdi_ccno_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 59:  (0) =r  (2) rm  (3) 0 {*movdicc_noc}
      Creating newreg=1021 from oldreg=760, assigning class GENERAL_REGS to r1021
   59: r1021:DI={(flags:CCGOC>=0)?r664:DI:r1021:DI}
      REG_DEAD r760:DI
      REG_DEAD r664:DI
      REG_DEAD flags:CCGOC
    Inserting insn reload before:
 1512: r1021:DI=r760:DI
    Inserting insn reload after:
 1513: r665:DI=r1021:DI

            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 60:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 61:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 62:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 63:  (0) m  (1) re {*movdi_internal}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 2 in insn 64:  (0) r  (1) 0  (2) mr {*muldi3_1}
      Creating newreg=1022 from oldreg=666, assigning class GENERAL_REGS to r1022
   64: {r1022:DI=r1022:DI*[frame:DI-0x78];clobber flags:CC;}
      REG_UNUSED flags:CC
    Inserting insn reload before:
 1514: r1022:DI=r665:DI
    Inserting insn reload after:
 1515: r666:DI=r1022:DI

          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 66:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 65:  (0) r {*cmpdi_ccno_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 67:  (0) r  (2) 0  (3) rm {*movdicc_noc}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 70:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 71:  (0) r  (1) Z {*movdi_internal}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 75:  (0) =rm  (1) 0 {*one_cmpldi2_1}
      Creating newreg=1023 from oldreg=100, assigning class GENERAL_REGS to r1023
   75: r1023:DI=!r1023:DI
    Inserting insn reload before:
 1516: r1023:DI=r663:DI
    Inserting insn reload after:
 1517: r100:DI=r1023:DI

          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 76:  (0) =rm  (1) 0  (2) re {*subdi_1}
      Creating newreg=1024 from oldreg=100, assigning class GENERAL_REGS to r1024
   76: {r1024:DI=r1024:DI-r665:DI;clobber flags:CC;}
      REG_DEAD r100:DI
      REG_UNUSED flags:CC
    Inserting insn reload before:
 1518: r1024:DI=r100:DI
    Inserting insn reload after:
 1519: r671:DI=r1024:DI

            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 77:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 78:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 79:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 80:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 81:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 83:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 82:  (0) r {*cmpdi_ccno_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 84:  (0) =r  (2) rm  (3) 0 {*movdicc_noc}
      Creating newreg=1025 from oldreg=766, assigning class GENERAL_REGS to r1025
   84: r1025:DI={(flags:CCGOC>=0)?r672:DI:r1025:DI}
      REG_DEAD r766:DI
      REG_DEAD r672:DI
      REG_DEAD flags:CCGOC
    Inserting insn reload before:
 1520: r1025:DI=r766:DI
    Inserting insn reload after:
 1521: r673:DI=r1025:DI

            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 85:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 86:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 87:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 88:  (0) m  (1) re {*movdi_internal}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 2 in insn 89:  (0) r  (1) 0  (2) mr {*muldi3_1}
      Creating newreg=1026 from oldreg=674, assigning class GENERAL_REGS to r1026
   89: {r1026:DI=r1026:DI*[frame:DI-0x88];clobber flags:CC;}
      REG_UNUSED flags:CC
    Inserting insn reload before:
 1522: r1026:DI=r673:DI
    Inserting insn reload after:
 1523: r674:DI=r1026:DI

          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 91:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 90:  (0) r {*cmpdi_ccno_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 92:  (0) =r  (2) rm  (3) 0 {*movdicc_noc}
      Creating newreg=1027 from oldreg=769, assigning class GENERAL_REGS to r1027
   92: r1027:DI={(flags:CCGOC>=0)?r674:DI:r1027:DI}
      REG_DEAD r769:DI
      REG_DEAD r674:DI
      REG_DEAD flags:CCGOC
    Inserting insn reload before:
 1524: r1027:DI=r769:DI
    Inserting insn reload after:
 1525: r675:DI=r1027:DI

            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 93:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 94:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 95:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 96:  (0) m  (1) re {*movdi_internal}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 2 in insn 97:  (0) r  (1) 0  (2) mr {*muldi3_1}
      Creating newreg=1028 from oldreg=676, assigning class GENERAL_REGS to r1028
   97: {r1028:DI=r1028:DI*[frame:DI-0x90];clobber flags:CC;}
      REG_UNUSED flags:CC
    Inserting insn reload before:
 1526: r1028:DI=r675:DI
    Inserting insn reload after:
 1527: r676:DI=r1028:DI

          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 99:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 98:  (0) r {*cmpdi_ccno_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 100:  (0) r  (2) 0  (3) rm {*movdicc_noc}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 103:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 104:  (0) r  (1) Z {*movdi_internal}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 108:  (0) =rm  (1) 0 {*one_cmpldi2_1}
      Creating newreg=1029 from oldreg=107, assigning class GENERAL_REGS to r1029
  108: r1029:DI=!r1029:DI
    Inserting insn reload before:
 1528: r1029:DI=r673:DI
    Inserting insn reload after:
 1529: r107:DI=r1029:DI

          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 109:  (0) =rm  (1) 0  (2) re {*subdi_1}
      Creating newreg=1030 from oldreg=107, assigning class GENERAL_REGS to r1030
  109: {r1030:DI=r1030:DI-r675:DI;clobber flags:CC;}
      REG_DEAD r107:DI
      REG_UNUSED flags:CC
    Inserting insn reload before:
 1530: r1030:DI=r107:DI
    Inserting insn reload after:
 1531: r681:DI=r1030:DI

            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 110:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 111:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 112:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 113:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 114:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 116:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 115:  (0) r {*cmpdi_ccno_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 117:  (0) =r  (2) rm  (3) 0 {*movdicc_noc}
      Creating newreg=1031 from oldreg=775, assigning class GENERAL_REGS to r1031
  117: r1031:DI={(flags:CCGOC>=0)?r682:DI:r1031:DI}
      REG_DEAD r775:DI
      REG_DEAD r682:DI
      REG_DEAD flags:CCGOC
    Inserting insn reload before:
 1532: r1031:DI=r775:DI
    Inserting insn reload after:
 1533: r683:DI=r1031:DI

            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 118:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 119:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 120:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 121:  (0) m  (1) re {*movdi_internal}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 2 in insn 122:  (0) r  (1) 0  (2) mr {*muldi3_1}
      Creating newreg=1032 from oldreg=684, assigning class GENERAL_REGS to r1032
  122: {r1032:DI=r1032:DI*[frame:DI-0xa0];clobber flags:CC;}
      REG_UNUSED flags:CC
    Inserting insn reload before:
 1534: r1032:DI=r683:DI
    Inserting insn reload after:
 1535: r684:DI=r1032:DI

          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 124:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 123:  (0) r {*cmpdi_ccno_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 125:  (0) =r  (2) rm  (3) 0 {*movdicc_noc}
      Creating newreg=1033 from oldreg=778, assigning class GENERAL_REGS to r1033
  125: r1033:DI={(flags:CCGOC>=0)?r684:DI:r1033:DI}
      REG_DEAD r778:DI
      REG_DEAD r684:DI
      REG_DEAD flags:CCGOC
    Inserting insn reload before:
 1536: r1033:DI=r778:DI
    Inserting insn reload after:
 1537: r685:DI=r1033:DI

            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 126:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 127:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 128:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 129:  (0) m  (1) re {*movdi_internal}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 2 in insn 130:  (0) r  (1) 0  (2) mr {*muldi3_1}
      Creating newreg=1034 from oldreg=686, assigning class GENERAL_REGS to r1034
  130: {r1034:DI=r1034:DI*[frame:DI-0xa8];clobber flags:CC;}
      REG_UNUSED flags:CC
    Inserting insn reload before:
 1538: r1034:DI=r685:DI
    Inserting insn reload after:
 1539: r686:DI=r1034:DI

          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 132:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 131:  (0) r {*cmpdi_ccno_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 133:  (0) r  (2) 0  (3) rm {*movdicc_noc}
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=607,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 136:  (0) m  (1) re {*movdi_internal}
            0 Non input pseudo reload: reject++
          alt=2,overall=7,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
          alt=3,overall=7,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
          alt=4,overall=7,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 137:  (0) m  (1) re {*movdi_internal}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 141:  (0) =rm  (1) 0 {*one_cmpldi2_1}
      Creating newreg=1035 from oldreg=114, assigning class GENERAL_REGS to r1035
  141: r1035:DI=!r1035:DI
    Inserting insn reload before:
 1540: r1035:DI=r683:DI
    Inserting insn reload after:
 1541: r114:DI=r1035:DI

          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 142:  (0) =rm  (1) 0  (2) re {*subdi_1}
      Creating newreg=1036 from oldreg=114, assigning class GENERAL_REGS to r1036
  142: {r1036:DI=r1036:DI-r685:DI;clobber flags:CC;}
      REG_DEAD r114:DI
      REG_UNUSED flags:CC
    Inserting insn reload before:
 1542: r1036:DI=r114:DI
    Inserting insn reload after:
 1543: r691:DI=r1036:DI

            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 143:  (0) r  (1) rem {*movdi_internal}
            0 Non input pseudo reload: reject++
          alt=0,overall=7,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=2,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=3,overall=8,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=17,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=5,overall=14,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=6,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=7,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=8,overall=8,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=9,overall=11,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            alt=10,overall=13,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=12,overall=14,losers=1 -- refuse
            alt=13: Bad operand -- refuse
            alt=14: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=15: Bad operand -- refuse
	 Choosing alt 0 in insn 144:  (0) =r  (1) g {*movsi_internal}
      Creating newreg=1037 from oldreg=692, assigning class GENERAL_REGS to r1037
  144: r1037:SI=[r782:DI]
      REG_DEAD r782:DI
    Inserting insn reload after:
 1544: r692:SI=r1037:SI

            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=608,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=1,overall=2,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1544:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 145:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 147:  (0) =r  (1) g {*movsi_internal}
            0 Non pseudo reload: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 148:  (0) rm  (1) re {*cmpsi_1}
      Creating newreg=1038 from oldreg=692, assigning class GENERAL_REGS to r1038
      Making reload reg 1038 for reg 692 optional
  148: flags:CCGC=cmp(r1038:SI,r115:SI)
      REG_DEAD r115:SI
    Inserting insn reload before:
 1545: r1038:SI=r692:SI

            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1545:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 149:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 150:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 153:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 154:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 155:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 156:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 157:  (0) rm  (1) re {*cmpsi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 160:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 161:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 162:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 164:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 165:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 166:  (0) q {*cmpqi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 169:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 170:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 171:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 173:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 174:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 175:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 178:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 179:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            1 Non pseudo reload: reject++
            alt=0: Bad operand -- refuse
            1 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            2 Non pseudo reload: reject++
          alt=2,overall=1,losers=0,rld_nregs=0
  Commutative operand exchange in insn 180
	 Choosing alt 2 in insn 180:  (0) r  (1) 0  (2) mr {*muldi3_1}
      Creating newreg=1039 from oldreg=655, assigning class GENERAL_REGS to r1039
      Making reload reg 1039 for reg 655 optional
  180: {r120:DI=r119:DI*r1039:DI;clobber flags:CC;}
      REG_DEAD r119:DI
      REG_UNUSED flags:CC
    Inserting insn reload before:
 1546: r1039:DI=r655:DI

            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=3,overall=2,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1546:  (0) r  (1) rem {*movdi_internal}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
            alt=2,overall=12,losers=2 -- refuse
          alt=3,overall=6,losers=1,rld_nregs=1
            2 Non pseudo reload: reject++
            alt=0,overall=7,losers=1 -- refuse
            alt=1,overall=12,losers=2 -- refuse
            2 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
          alt=3,overall=6,losers=1,rld_nregs=1
	 Choosing alt 3 in insn 181:  (0) r  (1) r  (2) le {*adddi_1}
      Creating newreg=1040 from oldreg=661, assigning class GENERAL_REGS to r1040
  181: {r121:DI=r1040:DI+r120:DI;clobber flags:CC;}
      REG_DEAD r120:DI
      REG_UNUSED flags:CC
    Inserting insn reload before:
 1547: r1040:DI=r661:DI

            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=3,overall=2,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1547:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 182:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 183:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            1 Non pseudo reload: reject++
            alt=0: Bad operand -- refuse
            1 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            2 Non pseudo reload: reject++
          alt=2,overall=1,losers=0,rld_nregs=0
  Commutative operand exchange in insn 184
	 Choosing alt 2 in insn 184:  (0) r  (1) 0  (2) mr {*muldi3_1}
      Creating newreg=1041 from oldreg=653, assigning class GENERAL_REGS to r1041
      Making reload reg 1041 for reg 653 optional
  184: {r123:DI=r122:DI*r1041:DI;clobber flags:CC;}
      REG_DEAD r122:DI
      REG_UNUSED flags:CC
    Inserting insn reload before:
 1548: r1041:DI=r653:DI

            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=3,overall=2,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1548:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 185:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 186:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 187:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 188:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 189:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 190:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 191:  (0) m  (1) v {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 192:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 193:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 194:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 196:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 197:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 198:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 201:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 202:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 203
	 Choosing alt 2 in insn 203:  (0) r  (1) 0  (2) mr {*muldi3_1}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
            2 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 204:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 205:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 206:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 207
	 Choosing alt 2 in insn 207:  (0) r  (1) 0  (2) mr {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 208:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 209:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 210:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 211:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 212:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 213:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 214:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 215:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 216
	 Choosing alt 2 in insn 216:  (0) r  (1) 0  (2) mr {*muldi3_1}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
            2 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 217:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 218:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 219:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 220
	 Choosing alt 2 in insn 220:  (0) r  (1) 0  (2) mr {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 221:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 222:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 223:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 224:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 225:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 226:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 227:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 228:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 229:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 230
	 Choosing alt 2 in insn 230:  (0) r  (1) 0  (2) mr {*muldi3_1}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
            2 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 231:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 232:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 233:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 234
	 Choosing alt 2 in insn 234:  (0) r  (1) 0  (2) mr {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 235:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 236:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 237:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 238:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=2,overall=6,losers=1,rld_nregs=1
	 Choosing alt 2 in insn 239:  (0) x  (1) 0  (2) xm {*fop_sf_1}
      Creating newreg=1042 from oldreg=136, assigning class SSE_REGS to r1042
  239: r1042:SF=r1042:SF-r146:SF
      REG_DEAD r146:SF
      REG_DEAD r136:SF
    Inserting insn reload before:
 1549: r1042:SF=r136:SF
    Inserting insn reload after:
 1550: r156:SF=r1042:SF

            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 240:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 241:  (0) m  (1) v {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 242:  (0) rm  (1) 0  (2) re {*addsi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 248:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 249:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 250:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 252:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 253:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 254:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 257:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 258:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 259
	 Choosing alt 2 in insn 259:  (0) r  (1) 0  (2) mr {*muldi3_1}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
            2 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 260:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 261:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 262:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 263
	 Choosing alt 2 in insn 263:  (0) r  (1) 0  (2) mr {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 264:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 265:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 266:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 267:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 268:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 269:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 270:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 271:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 272
	 Choosing alt 2 in insn 272:  (0) r  (1) 0  (2) mr {*muldi3_1}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
            2 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 273:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 274:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 275:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 276
	 Choosing alt 2 in insn 276:  (0) r  (1) 0  (2) mr {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 277:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 278:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 279:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 280:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 281:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 282:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 283:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 284:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 285:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 286
	 Choosing alt 2 in insn 286:  (0) r  (1) 0  (2) mr {*muldi3_1}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
            2 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 287:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 288:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 289:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 290
	 Choosing alt 2 in insn 290:  (0) r  (1) 0  (2) mr {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 291:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 292:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 293:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 294:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=2,overall=6,losers=1,rld_nregs=1
	 Choosing alt 2 in insn 295:  (0) x  (1) 0  (2) xm {*fop_sf_1}
      Creating newreg=1043 from oldreg=166, assigning class SSE_REGS to r1043
  295: r1043:SF=r1043:SF-r176:SF
      REG_DEAD r176:SF
      REG_DEAD r166:SF
    Inserting insn reload before:
 1551: r1043:SF=r166:SF
    Inserting insn reload after:
 1552: r186:SF=r1043:SF

            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 296:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 297:  (0) m  (1) v {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 298:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 304:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 310:  (0) rm  (1) 0  (2) re {*addsi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 316:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 317:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 318:  (0) r  (1) r  (2) le {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 319:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 321:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 322:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 323:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 329:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 330:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 331:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 332:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 333:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 334:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 335:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 336:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 337:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 339:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 340:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 341:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 344:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 345:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 346
	 Choosing alt 2 in insn 346:  (0) r  (1) 0  (2) mr {*muldi3_1}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
            2 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 347:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 348:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 349:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 350
	 Choosing alt 2 in insn 350:  (0) r  (1) 0  (2) mr {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 351:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 352:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 353:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 354:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 355:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 356:  (0) v  (1) m {*movsf_internal}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 357:  (0) v  (1) vm {movv4sf_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 358:  (0) Yv  (1) Yv  (2) 0 {*absnegsf2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 359:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 360:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 361
	 Choosing alt 2 in insn 361:  (0) r  (1) 0  (2) mr {*muldi3_1}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
            2 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 362:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 363:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 364:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 365
	 Choosing alt 2 in insn 365:  (0) r  (1) 0  (2) mr {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 366:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 367:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 368:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 369:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 370:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 371:  (0) v  (1) m {*movsf_internal}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 372:  (0) v  (1) vm {movv4sf_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 373:  (0) Yv  (1) Yv  (2) 0 {*absnegsf2}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 374:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 375:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 376:  (0) v  (1) vm {*cmpiusf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 379:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 380:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 383:  (0) rm  (1) 0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 389:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 390:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 391
	 Choosing alt 2 in insn 391:  (0) r  (1) 0  (2) mr {*muldi3_1}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
            2 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 392:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 393:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 394:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 395
	 Choosing alt 2 in insn 395:  (0) r  (1) 0  (2) mr {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 396:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 397:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 398:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 399:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 400:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 401:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 402:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 403:  (0) v  (1) vm {*cmpiusf}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 405:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 406:  (0) v  (1) vm {*cmpiusf}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 412:  (0) r  (1) i {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 413:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 414:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 415:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 416:  (0) m  (1) re {*movsi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 417:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 419:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 420:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 421:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 422:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 424:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 425:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 426:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 427:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 430:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 431:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 433:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 434:  (0) =r  (1) g {*movsi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 435:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 436:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 440:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 441:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 442
	 Choosing alt 2 in insn 442:  (0) r  (1) 0  (2) mr {*muldi3_1}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
            2 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 443:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 444:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 445:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 446
	 Choosing alt 2 in insn 446:  (0) r  (1) 0  (2) mr {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 447:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 448:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 449:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 450:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 451:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 452:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 453:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 454:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 455:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 456:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 457:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 458
	 Choosing alt 2 in insn 458:  (0) r  (1) 0  (2) mr {*muldi3_1}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
            2 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 459:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 460:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 461:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 462
	 Choosing alt 2 in insn 462:  (0) r  (1) 0  (2) mr {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 463:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 464:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 465:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
            alt=2,overall=6,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 466:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 467:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 468:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 469
	 Choosing alt 2 in insn 469:  (0) r  (1) 0  (2) mr {*muldi3_1}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
            2 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 470:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 471:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 472:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 473
	 Choosing alt 2 in insn 473:  (0) r  (1) 0  (2) mr {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 474:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 475:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 476:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 477:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 478:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 479:  (0) v  (1) m {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 480:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 481:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 482:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 483:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 484:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 485:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 487:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 488:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 489:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 492:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 493:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 494
	 Choosing alt 2 in insn 494:  (0) r  (1) 0  (2) mr {*muldi3_1}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
            2 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 495:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 496:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 497:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 498
	 Choosing alt 2 in insn 498:  (0) r  (1) 0  (2) mr {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 499:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 500:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 501:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 502:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 503:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 504:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 505:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 506
	 Choosing alt 1 in insn 506:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 507:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 508:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 509:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 510
	 Choosing alt 2 in insn 510:  (0) r  (1) 0  (2) mr {*muldi3_1}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
            2 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 511:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 512:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 513:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 514
	 Choosing alt 2 in insn 514:  (0) r  (1) 0  (2) mr {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 515:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 516:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 517:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
            alt=2,overall=6,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 518:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 519:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 520:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 521
	 Choosing alt 2 in insn 521:  (0) r  (1) 0  (2) mr {*muldi3_1}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
            2 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 522:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 523:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 524:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 525
	 Choosing alt 2 in insn 525:  (0) r  (1) 0  (2) mr {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 526:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 527:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 528:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 529:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 530:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 531:  (0) v  (1) m {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 532:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 533:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 534:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 535:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 536
	 Choosing alt 2 in insn 536:  (0) r  (1) 0  (2) mr {*muldi3_1}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
            2 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 537:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 538:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 539:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 540
	 Choosing alt 2 in insn 540:  (0) r  (1) 0  (2) mr {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 541:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 542:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 543:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 544:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 545:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 546:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 547:  (0) m  (1) v {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 548:  (0) rm  (1) 0  (2) re {*addsi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 554:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 555:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 556:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 558:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 559:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 560:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 563:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 564:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 565
	 Choosing alt 2 in insn 565:  (0) r  (1) 0  (2) mr {*muldi3_1}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
            2 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 566:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 567:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 568:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 569
	 Choosing alt 2 in insn 569:  (0) r  (1) 0  (2) mr {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 570:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 571:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 572:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 573:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 574:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 575:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 576:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 577
	 Choosing alt 1 in insn 577:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 578:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 579:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 580:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 581
	 Choosing alt 2 in insn 581:  (0) r  (1) 0  (2) mr {*muldi3_1}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
            2 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 582:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 583:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 584:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 585
	 Choosing alt 2 in insn 585:  (0) r  (1) 0  (2) mr {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 586:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 587:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 588:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
            alt=2,overall=6,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 589:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 590:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 591:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 592
	 Choosing alt 2 in insn 592:  (0) r  (1) 0  (2) mr {*muldi3_1}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
            2 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 593:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 594:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 595:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 596
	 Choosing alt 2 in insn 596:  (0) r  (1) 0  (2) mr {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 597:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 598:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 599:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 600:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 601:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 602:  (0) v  (1) m {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 603:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 604:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 605:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 606:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 607
	 Choosing alt 2 in insn 607:  (0) r  (1) 0  (2) mr {*muldi3_1}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
            2 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 608:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 609:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 610:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 611
	 Choosing alt 2 in insn 611:  (0) r  (1) 0  (2) mr {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 612:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 613:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 614:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 615:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 616:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 617:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 618:  (0) m  (1) v {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 619:  (0) rm  (1) 0  (2) re {*addsi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 625:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 626:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 627:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 629:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 630:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 631:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 634:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 635:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 636
	 Choosing alt 2 in insn 636:  (0) r  (1) 0  (2) mr {*muldi3_1}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
            2 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 637:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 638:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 639:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 640
	 Choosing alt 2 in insn 640:  (0) r  (1) 0  (2) mr {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 641:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 642:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 643:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 644:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 645:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 646:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 647:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 648
	 Choosing alt 1 in insn 648:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 649:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 650:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 651:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 652
	 Choosing alt 2 in insn 652:  (0) r  (1) 0  (2) mr {*muldi3_1}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
            2 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 653:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 654:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 655:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 656
	 Choosing alt 2 in insn 656:  (0) r  (1) 0  (2) mr {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 657:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 658:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 659:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
            alt=2,overall=6,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 660:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 661:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 662:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 663
	 Choosing alt 2 in insn 663:  (0) r  (1) 0  (2) mr {*muldi3_1}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
            2 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 664:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 665:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 666:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 667
	 Choosing alt 2 in insn 667:  (0) r  (1) 0  (2) mr {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 668:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 669:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 670:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 671:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 672:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 673:  (0) v  (1) m {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 674:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 675:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 676:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 677:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 678
	 Choosing alt 2 in insn 678:  (0) r  (1) 0  (2) mr {*muldi3_1}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
            2 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 679:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 680:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 681:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 682
	 Choosing alt 2 in insn 682:  (0) r  (1) 0  (2) mr {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 683:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 684:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 685:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 686:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 687:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 688:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 689:  (0) m  (1) v {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 690:  (0) rm  (1) 0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 696:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 697:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 698:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 699:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 701:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 702:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 703:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 706:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 707:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 708
	 Choosing alt 2 in insn 708:  (0) r  (1) 0  (2) mr {*muldi3_1}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
            2 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 709:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 710:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 711:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 712
	 Choosing alt 2 in insn 712:  (0) r  (1) 0  (2) mr {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 713:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 714:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 715:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 716:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 717:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 718:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 719:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 720:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 721:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 722:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 723:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 725:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 726:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 727:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 730:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 731:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 732
	 Choosing alt 2 in insn 732:  (0) r  (1) 0  (2) mr {*muldi3_1}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
            2 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 733:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 734:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 735:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 736
	 Choosing alt 2 in insn 736:  (0) r  (1) 0  (2) mr {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 737:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 738:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 739:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 740:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 741:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 742:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 743:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 744:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 745
	 Choosing alt 2 in insn 745:  (0) r  (1) 0  (2) mr {*muldi3_1}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
            2 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 746:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 747:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 748:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 749
	 Choosing alt 2 in insn 749:  (0) r  (1) 0  (2) mr {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 750:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 751:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 752:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 753:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 754:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 755:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 756:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 757:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 758:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 759
	 Choosing alt 2 in insn 759:  (0) r  (1) 0  (2) mr {*muldi3_1}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
            2 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 760:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 761:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 762:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 763
	 Choosing alt 2 in insn 763:  (0) r  (1) 0  (2) mr {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 764:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 765:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 766:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 767:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=2,overall=6,losers=1,rld_nregs=1
	 Choosing alt 2 in insn 768:  (0) x  (1) 0  (2) xm {*fop_sf_1}
      Creating newreg=1044 from oldreg=381, assigning class SSE_REGS to r1044
  768: r1044:SF=r1044:SF-r392:SF
      REG_DEAD r392:SF
      REG_DEAD r381:SF
    Inserting insn reload before:
 1553: r1044:SF=r381:SF
    Inserting insn reload after:
 1554: r402:SF=r1044:SF

            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 769:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 770:  (0) m  (1) v {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 771:  (0) rm  (1) 0  (2) re {*addsi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 777:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 778:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 779:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 781:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 782:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 783:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 786:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 787:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 788
	 Choosing alt 2 in insn 788:  (0) r  (1) 0  (2) mr {*muldi3_1}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
            2 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 789:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 790:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 791:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 792
	 Choosing alt 2 in insn 792:  (0) r  (1) 0  (2) mr {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 793:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 794:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 795:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 796:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 797:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 798:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 799:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 800:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 801
	 Choosing alt 2 in insn 801:  (0) r  (1) 0  (2) mr {*muldi3_1}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
            2 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 802:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 803:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 804:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 805
	 Choosing alt 2 in insn 805:  (0) r  (1) 0  (2) mr {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 806:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 807:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 808:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 809:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 810:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 811:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 812:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 813:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 814:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 815
	 Choosing alt 2 in insn 815:  (0) r  (1) 0  (2) mr {*muldi3_1}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
            2 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 816:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 817:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 818:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 819
	 Choosing alt 2 in insn 819:  (0) r  (1) 0  (2) mr {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 820:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 821:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 822:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 823:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=2,overall=6,losers=1,rld_nregs=1
	 Choosing alt 2 in insn 824:  (0) x  (1) 0  (2) xm {*fop_sf_1}
      Creating newreg=1045 from oldreg=412, assigning class SSE_REGS to r1045
  824: r1045:SF=r1045:SF-r423:SF
      REG_DEAD r423:SF
      REG_DEAD r412:SF
    Inserting insn reload before:
 1555: r1045:SF=r412:SF
    Inserting insn reload after:
 1556: r433:SF=r1045:SF

            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 825:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 826:  (0) m  (1) v {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 827:  (0) rm  (1) 0  (2) re {*addsi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 833:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 834:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 835:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 837:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 838:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 839:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 842:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 843:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 844
	 Choosing alt 2 in insn 844:  (0) r  (1) 0  (2) mr {*muldi3_1}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
            2 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 845:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 846:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 847:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 848
	 Choosing alt 2 in insn 848:  (0) r  (1) 0  (2) mr {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 849:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 850:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 851:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 852:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 853:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 854:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 855:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 856:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 857
	 Choosing alt 2 in insn 857:  (0) r  (1) 0  (2) mr {*muldi3_1}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
            2 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 858:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 859:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 860:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 861
	 Choosing alt 2 in insn 861:  (0) r  (1) 0  (2) mr {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 862:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 863:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 864:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 865:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 866:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 867:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 868:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 869:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 870:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 871
	 Choosing alt 2 in insn 871:  (0) r  (1) 0  (2) mr {*muldi3_1}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
            2 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 872:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 873:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 874:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 875
	 Choosing alt 2 in insn 875:  (0) r  (1) 0  (2) mr {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 876:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 877:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 878:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 879:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=2,overall=6,losers=1,rld_nregs=1
	 Choosing alt 2 in insn 880:  (0) x  (1) 0  (2) xm {*fop_sf_1}
      Creating newreg=1046 from oldreg=443, assigning class SSE_REGS to r1046
  880: r1046:SF=r1046:SF-r454:SF
      REG_DEAD r454:SF
      REG_DEAD r443:SF
    Inserting insn reload before:
 1557: r1046:SF=r443:SF
    Inserting insn reload after:
 1558: r464:SF=r1046:SF

            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 881:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 882:  (0) m  (1) v {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 883:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 889:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 895:  (0) rm  (1) 0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 901:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 902:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 903
	 Choosing alt 2 in insn 903:  (0) r  (1) 0  (2) mr {*muldi3_1}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
            2 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 904:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 905:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 906:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 907:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 908
	 Choosing alt 2 in insn 908:  (0) r  (1) 0  (2) mr {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 909:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 910:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 911:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 912:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 913:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 914:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 915:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 916:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 917:  (0) v  (1) vm {*cmpiusf}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 919:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 920:  (0) v  (1) vm {*cmpiusf}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 926:  (0) r  (1) i {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 927:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 928:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 929:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 930:  (0) m  (1) re {*movsi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 931:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 933:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 934:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 935:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 936:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 938:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 939:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 940:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 941:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 944:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 945:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 947:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 948:  (0) =r  (1) g {*movsi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 949:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 950:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 954:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 955:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 956
	 Choosing alt 2 in insn 956:  (0) r  (1) 0  (2) mr {*muldi3_1}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
            2 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 957:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 958:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 959:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 960:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 961
	 Choosing alt 2 in insn 961:  (0) r  (1) 0  (2) mr {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 962:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 963:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 964:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 965:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 966:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 967:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 968:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 969:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 970:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 971:  (0) m  (1) v {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 972:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 973:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 974:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 976:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 977:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 978:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 981:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 982:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 983
	 Choosing alt 2 in insn 983:  (0) r  (1) 0  (2) mr {*muldi3_1}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
            2 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 984:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 985:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 986:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 987
	 Choosing alt 2 in insn 987:  (0) r  (1) 0  (2) mr {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 988:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 989:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 990:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 991:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 992:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 993:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 994:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 995:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 996:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 997
	 Choosing alt 2 in insn 997:  (0) r  (1) 0  (2) mr {*muldi3_1}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
            2 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 998:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 999:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1000:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1001
	 Choosing alt 2 in insn 1001:  (0) r  (1) 0  (2) mr {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1002:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1003:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1004:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1005:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1006:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1007:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1008:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1009:  (0) m  (1) v {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 1010:  (0) rm  (1) 0  (2) re {*addsi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1016:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1017:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1018:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1020:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1021:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1022:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1025:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1026:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1027
	 Choosing alt 2 in insn 1027:  (0) r  (1) 0  (2) mr {*muldi3_1}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
            2 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1028:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1029:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1030:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1031
	 Choosing alt 2 in insn 1031:  (0) r  (1) 0  (2) mr {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1032:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1033:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1034:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1035:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1036:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1037:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1038:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1039:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1040:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1041
	 Choosing alt 2 in insn 1041:  (0) r  (1) 0  (2) mr {*muldi3_1}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
            2 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1042:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1043:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1044:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1045
	 Choosing alt 2 in insn 1045:  (0) r  (1) 0  (2) mr {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1046:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1047:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1048:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1049:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1050:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1051:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1052:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1053:  (0) m  (1) v {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 1054:  (0) rm  (1) 0  (2) re {*addsi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1060:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1061:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1062:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1063:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1065:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1066:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1067:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1073:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1074:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1075:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1076:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1077:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1078:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1079:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1081:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1082:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1083:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1086:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1087:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1088
	 Choosing alt 2 in insn 1088:  (0) r  (1) 0  (2) mr {*muldi3_1}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
            2 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1089:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1090:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1091:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1092
	 Choosing alt 2 in insn 1092:  (0) r  (1) 0  (2) mr {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1093:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1094:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1095:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1096:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1097:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1098:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1099:  (0) m  (1) v {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1100:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1101:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1102:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1104:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1105:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1106:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1109:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1110:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1111
	 Choosing alt 2 in insn 1111:  (0) r  (1) 0  (2) mr {*muldi3_1}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
            2 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1112:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1113:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1114:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1115
	 Choosing alt 2 in insn 1115:  (0) r  (1) 0  (2) mr {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1116:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1117:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1118:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1119:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1120:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1121:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1122:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1123:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1124
	 Choosing alt 2 in insn 1124:  (0) r  (1) 0  (2) mr {*muldi3_1}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
            2 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1125:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1126:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1127:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1128
	 Choosing alt 2 in insn 1128:  (0) r  (1) 0  (2) mr {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1129:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1130:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1131:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1132:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1133:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1134:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1135:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1136:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1137:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1138
	 Choosing alt 2 in insn 1138:  (0) r  (1) 0  (2) mr {*muldi3_1}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
            2 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1139:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1140:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1141:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1142
	 Choosing alt 2 in insn 1142:  (0) r  (1) 0  (2) mr {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1143:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1144:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1145:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1146:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=2,overall=6,losers=1,rld_nregs=1
	 Choosing alt 2 in insn 1147:  (0) x  (1) 0  (2) xm {*fop_sf_1}
      Creating newreg=1047 from oldreg=552, assigning class SSE_REGS to r1047
 1147: r1047:SF=r1047:SF-r563:SF
      REG_DEAD r563:SF
      REG_DEAD r552:SF
    Inserting insn reload before:
 1559: r1047:SF=r552:SF
    Inserting insn reload after:
 1560: r573:SF=r1047:SF

            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1148:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1149:  (0) m  (1) v {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 1150:  (0) rm  (1) 0  (2) re {*addsi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1156:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1157:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1158:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1160:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1161:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1162:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1165:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1166:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1167
	 Choosing alt 2 in insn 1167:  (0) r  (1) 0  (2) mr {*muldi3_1}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
            2 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1168:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1169:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1170:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1171
	 Choosing alt 2 in insn 1171:  (0) r  (1) 0  (2) mr {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1172:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1173:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1174:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1175:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1176:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1177:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1178:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1179:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1180
	 Choosing alt 2 in insn 1180:  (0) r  (1) 0  (2) mr {*muldi3_1}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
            2 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1181:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1182:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1183:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1184
	 Choosing alt 2 in insn 1184:  (0) r  (1) 0  (2) mr {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1185:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1186:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1187:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1188:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1189:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1190:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1191:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1192:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1193:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1194
	 Choosing alt 2 in insn 1194:  (0) r  (1) 0  (2) mr {*muldi3_1}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
            2 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1195:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1196:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1197:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1198
	 Choosing alt 2 in insn 1198:  (0) r  (1) 0  (2) mr {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1199:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1200:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1201:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1202:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=2,overall=6,losers=1,rld_nregs=1
	 Choosing alt 2 in insn 1203:  (0) x  (1) 0  (2) xm {*fop_sf_1}
      Creating newreg=1048 from oldreg=583, assigning class SSE_REGS to r1048
 1203: r1048:SF=r1048:SF-r594:SF
      REG_DEAD r594:SF
      REG_DEAD r583:SF
    Inserting insn reload before:
 1561: r1048:SF=r583:SF
    Inserting insn reload after:
 1562: r604:SF=r1048:SF

            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1204:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1205:  (0) m  (1) v {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 1206:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 1212:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 1218:  (0) rm  (1) 0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1224:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1225:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1226:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1232:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1233:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1234:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1235:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1237:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1238:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1239:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1240:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1243:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1244:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1245:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1246:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1247:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1248:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1250:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1251:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1252:  (0) q {*cmpqi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1255:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1256:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1257:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1259:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1260:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1261:  (0) q {*cmpqi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1264:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1265:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1266:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1268:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1269:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1270:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1273:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1274:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1275
	 Choosing alt 2 in insn 1275:  (0) r  (1) 0  (2) mr {*muldi3_1}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
            2 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1276:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1277:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1278:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1279
	 Choosing alt 2 in insn 1279:  (0) r  (1) 0  (2) mr {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1280:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1281:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1282:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1283:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1284:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1285:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1286:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1287:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1288
	 Choosing alt 2 in insn 1288:  (0) r  (1) 0  (2) mr {*muldi3_1}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
            2 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1289:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1290:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1291:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1292
	 Choosing alt 2 in insn 1292:  (0) r  (1) 0  (2) mr {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1293:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1294:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1295:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1296:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1297:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1298:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1299:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1300:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1301
	 Choosing alt 2 in insn 1301:  (0) r  (1) 0  (2) mr {*muldi3_1}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
            2 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1302:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1303:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1304:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1305
	 Choosing alt 2 in insn 1305:  (0) r  (1) 0  (2) mr {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1306:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1307:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1308:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1309:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1310:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1311:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1312
	 Choosing alt 1 in insn 1312:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1313:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1314:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1315
	 Choosing alt 2 in insn 1315:  (0) r  (1) 0  (2) mr {*muldi3_1}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
            2 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1316:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1317:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1318:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1319
	 Choosing alt 2 in insn 1319:  (0) r  (1) 0  (2) mr {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1320:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1321:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1322:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1323:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=2,overall=6,losers=1,rld_nregs=1
	 Choosing alt 2 in insn 1324:  (0) x  (1) 0  (2) xm {*fop_sf_1}
      Creating newreg=1049 from oldreg=619, assigning class SSE_REGS to r1049
 1324: r1049:SF=r1049:SF-r639:SF
      REG_DEAD r639:SF
      REG_DEAD r619:SF
    Inserting insn reload before:
 1563: r1049:SF=r619:SF
    Inserting insn reload after:
 1564: r649:SF=r1049:SF

            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1325:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1326:  (0) m  (1) v {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 1327:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 1333:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 1339:  (0) rm  (1) 0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1345:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1346:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1347:  (0) m  (1) re {*movsi_internal}
	   Spilling non-eliminable hard regs: 6

********** Inheritance #1: **********

EBB 2
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=1050 from oldreg=655, assigning class GENERAL_REGS to inheritance r1050
    Original reg change 655->1050 (bb2):
 1501: r1015:DI=r1050:DI
    Add inheritance<-original before:
 1565: r1050:DI=r655:DI

    Inheritance reuse change 655->1050 (bb2):
 1507: r1018:DI=r1050:DI
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=1051 from oldreg=655, assigning class GENERAL_REGS to inheritance r1051
    Original reg change 655->1051 (bb2):
 1500: r1051:DI=r1014:DI
    Add original<-inheritance after:
 1566: r655:DI=r1051:DI

    Inheritance reuse change 655->1051 (bb2):
 1565: r1050:DI=r1051:DI
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=1052 from oldreg=653, assigning class GENERAL_REGS to inheritance r1052
    Original reg change 653->1052 (bb2):
 1497: r1013:DI=r1052:DI
    Add inheritance<-original before:
 1567: r1052:DI=r653:DI

    Inheritance reuse change 653->1052 (bb2):
 1503: r1016:DI=r1052:DI
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=1053 from oldreg=653, assigning class GENERAL_REGS to inheritance r1053
    Original reg change 653->1053 (bb2):
 1496: r1053:DI=r1012:DI
    Add original<-inheritance after:
 1568: r653:DI=r1053:DI

    Inheritance reuse change 653->1053 (bb2):
 1567: r1052:DI=r1053:DI
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
EBB 3
EBB 4
EBB 5
EBB 6
EBB 7
EBB 8
EBB 9
EBB 10
EBB 11
EBB 87
EBB 12
EBB 13
EBB 14
EBB 88
EBB 15
EBB 86
EBB 16
EBB 85
EBB 17
EBB 18
EBB 19
EBB 20
EBB 21
EBB 92 22
EBB 91
EBB 23
EBB 90
EBB 24
EBB 25
EBB 26
EBB 27
EBB 28
EBB 29
EBB 93
EBB 30
EBB 31
EBB 32
EBB 94
EBB 33
EBB 34
EBB 35
EBB 95
EBB 36
EBB 37
EBB 38
EBB 39
EBB 40
EBB 97
EBB 41
EBB 42
EBB 43
EBB 98
EBB 44
EBB 45
EBB 46
EBB 99
EBB 47
EBB 96
EBB 48
EBB 89
EBB 49
EBB 50
EBB 51
EBB 52
EBB 53
EBB 54
EBB 100
EBB 55
EBB 56
EBB 57
EBB 101
EBB 58
EBB 59
EBB 60
EBB 61
EBB 62
EBB 63
EBB 64
EBB 104
EBB 65
EBB 66
EBB 67
EBB 105
EBB 68
EBB 103
EBB 69
EBB 102
EBB 70
EBB 84
EBB 71
EBB 72
EBB 73
EBB 74
EBB 75
EBB 76
EBB 77
EBB 78
EBB 79
EBB 109
EBB 80
EBB 108
EBB 81
EBB 107
EBB 82
EBB 106
EBB 83

********** Pseudo live ranges #1: **********

  BB 26
   Insn 436: point = 0, n_alt = 0
   Insn 435: point = 0, n_alt = 2
   Insn 434: point = 0, n_alt = 0
   Insn 433: point = 0, n_alt = 0
   Insn 432: point = 0, n_alt = -1
   Insn 431: point = 1, n_alt = 3
   Insn 430: point = 2, n_alt = 0
   Insn 429: point = 2, n_alt = -1
   Insn 428: point = 3, n_alt = -1
   Insn 427: point = 4, n_alt = 0
   Insn 426: point = 4, n_alt = 3
   Insn 425: point = 5, n_alt = 3
   Insn 424: point = 6, n_alt = 0
   Insn 423: point = 6, n_alt = -1
   Insn 422: point = 7, n_alt = 4
   Insn 421: point = 7, n_alt = 0
   Insn 420: point = 7, n_alt = 3
   Insn 419: point = 8, n_alt = 0
   Insn 418: point = 8, n_alt = -1
   Insn 417: point = 9, n_alt = 3
   Insn 416: point = 10, n_alt = 1
   Insn 415: point = 10, n_alt = 1
   Insn 414: point = 10, n_alt = 1
   Insn 413: point = 10, n_alt = 5
   Insn 412: point = 11, n_alt = 4
  BB 51
   Insn 950: point = 12, n_alt = 0
   Insn 949: point = 12, n_alt = 2
   Insn 948: point = 12, n_alt = 0
   Insn 947: point = 12, n_alt = 0
   Insn 946: point = 12, n_alt = -1
   Insn 945: point = 13, n_alt = 3
   Insn 944: point = 14, n_alt = 0
   Insn 943: point = 14, n_alt = -1
   Insn 942: point = 15, n_alt = -1
   Insn 941: point = 16, n_alt = 0
   Insn 940: point = 16, n_alt = 3
   Insn 939: point = 17, n_alt = 3
   Insn 938: point = 18, n_alt = 0
   Insn 937: point = 18, n_alt = -1
   Insn 936: point = 19, n_alt = 4
   Insn 935: point = 19, n_alt = 0
   Insn 934: point = 19, n_alt = 3
   Insn 933: point = 20, n_alt = 0
   Insn 932: point = 20, n_alt = -1
   Insn 931: point = 21, n_alt = 3
   Insn 930: point = 22, n_alt = 1
   Insn 929: point = 22, n_alt = 1
   Insn 928: point = 22, n_alt = 1
   Insn 927: point = 22, n_alt = 5
   Insn 926: point = 23, n_alt = 4
  BB 83
   Insn 1366: point = 24, n_alt = -1
  BB 106
   Insn 1484: point = 24, n_alt = -1
  BB 72
   Insn 1241: point = 24, n_alt = -1
   Insn 1240: point = 24, n_alt = 0
   Insn 1239: point = 25, n_alt = 0
   Insn 1238: point = 26, n_alt = 0
   Insn 1237: point = 27, n_alt = 0
  BB 82
   Insn 1413: point = 29, n_alt = -1
   Insn 1347: point = 29, n_alt = 1
   Insn 1346: point = 30, n_alt = 0
   Insn 1345: point = 32, n_alt = 0
  BB 107
   Insn 1487: point = 34, n_alt = -1
  BB 74
   Insn 1253: point = 35, n_alt = -1
   Insn 1252: point = 35, n_alt = 0
   Insn 1251: point = 36, n_alt = 0
   Insn 1250: point = 37, n_alt = 0
  BB 81
   Insn 1411: point = 38, n_alt = -1
   Insn 1339: point = 38, n_alt = 1
  BB 108
   Insn 1490: point = 39, n_alt = -1
  BB 76
   Insn 1262: point = 40, n_alt = -1
   Insn 1261: point = 40, n_alt = 0
   Insn 1260: point = 41, n_alt = 0
   Insn 1259: point = 42, n_alt = 0
  BB 80
   Insn 1409: point = 43, n_alt = -1
   Insn 1333: point = 43, n_alt = 1
  BB 109
   Insn 1493: point = 44, n_alt = -1
  BB 78
   Insn 1271: point = 45, n_alt = -1
   Insn 1270: point = 45, n_alt = 0
   Insn 1269: point = 46, n_alt = 0
   Insn 1268: point = 47, n_alt = 0
  BB 79
   Insn 1407: point = 48, n_alt = -1
   Insn 1327: point = 48, n_alt = 1
   Insn 1326: point = 48, n_alt = 8
   Insn 1325: point = 49, n_alt = 3
   Insn 1564: point = 50, n_alt = -1
	Hard reg 21 is preferable by r1049 with profit 1
   Insn 1324: point = 52, n_alt = 2
   Insn 1563: point = 53, n_alt = -1
	Hard reg 21 is preferable by r1049 with profit 1
	Hard reg 22 is preferable by r1049 with profit 1
   Insn 1323: point = 55, n_alt = 0
   Insn 1322: point = 57, n_alt = 1
   Insn 1321: point = 59, n_alt = 0
   Insn 1320: point = 60, n_alt = 0
   Insn 1319: point = 62, n_alt = 2
   Insn 1318: point = 64, n_alt = 1
   Insn 1317: point = 66, n_alt = 0
   Insn 1316: point = 67, n_alt = 3
   Insn 1315: point = 69, n_alt = 2
   Insn 1314: point = 71, n_alt = 1
   Insn 1313: point = 73, n_alt = 0
   Insn 1312: point = 74, n_alt = 1
   Insn 1311: point = 76, n_alt = 7
   Insn 1310: point = 78, n_alt = 3
   Insn 1309: point = 79, n_alt = 0
   Insn 1308: point = 81, n_alt = 1
   Insn 1307: point = 83, n_alt = 0
   Insn 1306: point = 84, n_alt = 0
   Insn 1305: point = 86, n_alt = 2
   Insn 1304: point = 88, n_alt = 1
   Insn 1303: point = 90, n_alt = 0
   Insn 1302: point = 91, n_alt = 3
   Insn 1301: point = 93, n_alt = 2
   Insn 1300: point = 95, n_alt = 1
   Insn 1299: point = 97, n_alt = 0
   Insn 1298: point = 98, n_alt = 7
   Insn 1297: point = 100, n_alt = 3
   Insn 1296: point = 101, n_alt = 0
   Insn 1295: point = 103, n_alt = 1
   Insn 1294: point = 105, n_alt = 0
   Insn 1293: point = 106, n_alt = 0
   Insn 1292: point = 108, n_alt = 2
   Insn 1291: point = 110, n_alt = 1
   Insn 1290: point = 112, n_alt = 0
   Insn 1289: point = 113, n_alt = 3
   Insn 1288: point = 115, n_alt = 2
   Insn 1287: point = 117, n_alt = 1
   Insn 1286: point = 119, n_alt = 0
   Insn 1285: point = 120, n_alt = 7
   Insn 1284: point = 122, n_alt = 3
   Insn 1283: point = 123, n_alt = 0
   Insn 1282: point = 125, n_alt = 1
   Insn 1281: point = 127, n_alt = 0
   Insn 1280: point = 128, n_alt = 0
   Insn 1279: point = 130, n_alt = 2
   Insn 1278: point = 132, n_alt = 1
   Insn 1277: point = 134, n_alt = 0
   Insn 1276: point = 135, n_alt = 3
   Insn 1275: point = 137, n_alt = 2
   Insn 1274: point = 139, n_alt = 1
   Insn 1273: point = 141, n_alt = 0
  BB 77
   Insn 1266: point = 143, n_alt = 1
   Insn 1265: point = 143, n_alt = 0
   Insn 1264: point = 145, n_alt = 3
  BB 75
   Insn 1257: point = 147, n_alt = 1
   Insn 1256: point = 147, n_alt = 0
   Insn 1255: point = 149, n_alt = 3
  BB 73
   Insn 1248: point = 151, n_alt = 1
   Insn 1247: point = 151, n_alt = 0
   Insn 1246: point = 153, n_alt = 3
   Insn 1245: point = 154, n_alt = 1
   Insn 1244: point = 155, n_alt = 0
   Insn 1243: point = 157, n_alt = 0
  BB 71
   Insn 1235: point = 159, n_alt = 1
   Insn 1234: point = 160, n_alt = 0
   Insn 1233: point = 162, n_alt = 0
   Insn 1232: point = 164, n_alt = 3
  BB 84
   Insn 1417: point = 166, n_alt = -1
  BB 3
   Insn 151: point = 167, n_alt = -1
   Insn 150: point = 167, n_alt = 0
   Insn 149: point = 168, n_alt = 0
   Insn 148: point = 169, n_alt = 0
   Insn 1545: point = 170, n_alt = 0
   Insn 147: point = 171, n_alt = 0
  BB 70
   Insn 1405: point = 173, n_alt = -1
   Insn 1226: point = 173, n_alt = 1
   Insn 1225: point = 174, n_alt = 0
   Insn 1224: point = 176, n_alt = 0
  BB 102
   Insn 1472: point = 178, n_alt = -1
  BB 59
   Insn 1068: point = 179, n_alt = -1
   Insn 1067: point = 179, n_alt = 0
   Insn 1066: point = 180, n_alt = 0
   Insn 1065: point = 181, n_alt = 1
  BB 69
   Insn 1403: point = 182, n_alt = -1
   Insn 1218: point = 182, n_alt = 1
  BB 103
   Insn 1475: point = 183, n_alt = -1
  BB 61
   Insn 1084: point = 184, n_alt = -1
   Insn 1083: point = 184, n_alt = 0
   Insn 1082: point = 185, n_alt = 0
   Insn 1081: point = 186, n_alt = 0
  BB 68
   Insn 1401: point = 187, n_alt = -1
   Insn 1212: point = 187, n_alt = 1
  BB 105
   Insn 1481: point = 188, n_alt = -1
  BB 66
   Insn 1163: point = 189, n_alt = -1
   Insn 1162: point = 189, n_alt = 0
   Insn 1161: point = 190, n_alt = 0
   Insn 1160: point = 191, n_alt = 0
  BB 67
   Insn 1399: point = 192, n_alt = -1
   Insn 1206: point = 192, n_alt = 1
   Insn 1205: point = 192, n_alt = 8
   Insn 1204: point = 193, n_alt = 3
   Insn 1562: point = 194, n_alt = -1
	Hard reg 21 is preferable by r1048 with profit 1
   Insn 1203: point = 196, n_alt = 2
   Insn 1561: point = 197, n_alt = -1
	Hard reg 21 is preferable by r1048 with profit 1
	Hard reg 22 is preferable by r1048 with profit 1
   Insn 1202: point = 199, n_alt = 0
   Insn 1201: point = 201, n_alt = 0
   Insn 1200: point = 203, n_alt = 0
   Insn 1199: point = 204, n_alt = 0
   Insn 1198: point = 206, n_alt = 2
   Insn 1197: point = 208, n_alt = 0
   Insn 1196: point = 210, n_alt = 0
   Insn 1195: point = 211, n_alt = 3
   Insn 1194: point = 213, n_alt = 2
   Insn 1193: point = 215, n_alt = 0
   Insn 1192: point = 217, n_alt = 0
   Insn 1191: point = 218, n_alt = 1
   Insn 1190: point = 220, n_alt = 7
   Insn 1189: point = 222, n_alt = 3
   Insn 1188: point = 223, n_alt = 0
   Insn 1187: point = 225, n_alt = 0
   Insn 1186: point = 227, n_alt = 0
   Insn 1185: point = 228, n_alt = 0
   Insn 1184: point = 230, n_alt = 2
   Insn 1183: point = 232, n_alt = 0
   Insn 1182: point = 234, n_alt = 0
   Insn 1181: point = 235, n_alt = 3
   Insn 1180: point = 237, n_alt = 2
   Insn 1179: point = 239, n_alt = 0
   Insn 1178: point = 241, n_alt = 0
   Insn 1177: point = 242, n_alt = 7
   Insn 1176: point = 244, n_alt = 3
   Insn 1175: point = 245, n_alt = 0
   Insn 1174: point = 247, n_alt = 0
   Insn 1173: point = 249, n_alt = 0
   Insn 1172: point = 250, n_alt = 0
   Insn 1171: point = 252, n_alt = 2
   Insn 1170: point = 254, n_alt = 0
   Insn 1169: point = 256, n_alt = 0
   Insn 1168: point = 257, n_alt = 3
   Insn 1167: point = 259, n_alt = 2
   Insn 1166: point = 261, n_alt = 0
   Insn 1165: point = 263, n_alt = 0
  BB 65
   Insn 1158: point = 265, n_alt = 1
   Insn 1157: point = 265, n_alt = 0
   Insn 1156: point = 267, n_alt = 3
  BB 104
   Insn 1478: point = 269, n_alt = -1
  BB 63
   Insn 1107: point = 270, n_alt = -1
   Insn 1106: point = 270, n_alt = 0
   Insn 1105: point = 271, n_alt = 0
   Insn 1104: point = 272, n_alt = 0
  BB 64
   Insn 1397: point = 273, n_alt = -1
   Insn 1150: point = 273, n_alt = 1
   Insn 1149: point = 273, n_alt = 8
   Insn 1148: point = 274, n_alt = 3
   Insn 1560: point = 275, n_alt = -1
	Hard reg 21 is preferable by r1047 with profit 1
   Insn 1147: point = 277, n_alt = 2
   Insn 1559: point = 278, n_alt = -1
	Hard reg 21 is preferable by r1047 with profit 1
	Hard reg 22 is preferable by r1047 with profit 1
   Insn 1146: point = 280, n_alt = 0
   Insn 1145: point = 282, n_alt = 0
   Insn 1144: point = 284, n_alt = 0
   Insn 1143: point = 285, n_alt = 0
   Insn 1142: point = 287, n_alt = 2
   Insn 1141: point = 289, n_alt = 0
   Insn 1140: point = 291, n_alt = 0
   Insn 1139: point = 292, n_alt = 3
   Insn 1138: point = 294, n_alt = 2
   Insn 1137: point = 296, n_alt = 0
   Insn 1136: point = 298, n_alt = 0
   Insn 1135: point = 299, n_alt = 1
   Insn 1134: point = 301, n_alt = 7
   Insn 1133: point = 303, n_alt = 3
   Insn 1132: point = 304, n_alt = 0
   Insn 1131: point = 306, n_alt = 0
   Insn 1130: point = 308, n_alt = 0
   Insn 1129: point = 309, n_alt = 0
   Insn 1128: point = 311, n_alt = 2
   Insn 1127: point = 313, n_alt = 0
   Insn 1126: point = 315, n_alt = 0
   Insn 1125: point = 316, n_alt = 3
   Insn 1124: point = 318, n_alt = 2
   Insn 1123: point = 320, n_alt = 0
   Insn 1122: point = 322, n_alt = 0
   Insn 1121: point = 323, n_alt = 7
   Insn 1120: point = 325, n_alt = 3
   Insn 1119: point = 326, n_alt = 0
   Insn 1118: point = 328, n_alt = 0
   Insn 1117: point = 330, n_alt = 0
   Insn 1116: point = 331, n_alt = 0
   Insn 1115: point = 333, n_alt = 2
   Insn 1114: point = 335, n_alt = 0
   Insn 1113: point = 337, n_alt = 0
   Insn 1112: point = 338, n_alt = 3
   Insn 1111: point = 340, n_alt = 2
   Insn 1110: point = 342, n_alt = 0
   Insn 1109: point = 344, n_alt = 0
  BB 62
   Insn 1102: point = 346, n_alt = 1
   Insn 1101: point = 346, n_alt = 0
   Insn 1100: point = 348, n_alt = 3
   Insn 1099: point = 349, n_alt = 8
   Insn 1098: point = 350, n_alt = 7
   Insn 1097: point = 352, n_alt = 3
   Insn 1096: point = 353, n_alt = 0
   Insn 1095: point = 355, n_alt = 0
   Insn 1094: point = 357, n_alt = 0
   Insn 1093: point = 358, n_alt = 0
   Insn 1092: point = 360, n_alt = 2
   Insn 1091: point = 362, n_alt = 0
   Insn 1090: point = 364, n_alt = 0
   Insn 1089: point = 365, n_alt = 3
   Insn 1088: point = 367, n_alt = 2
   Insn 1087: point = 369, n_alt = 0
   Insn 1086: point = 371, n_alt = 0
  BB 60
   Insn 1079: point = 373, n_alt = 1
   Insn 1078: point = 374, n_alt = 0
   Insn 1077: point = 376, n_alt = 3
   Insn 1076: point = 377, n_alt = 0
   Insn 1075: point = 378, n_alt = 1
   Insn 1074: point = 379, n_alt = 0
   Insn 1073: point = 381, n_alt = 0
  BB 58
   Insn 1063: point = 383, n_alt = 1
   Insn 1062: point = 384, n_alt = 0
   Insn 1061: point = 386, n_alt = 0
   Insn 1060: point = 388, n_alt = 3
  BB 101
   Insn 1469: point = 390, n_alt = -1
  BB 56
   Insn 1023: point = 391, n_alt = -1
   Insn 1022: point = 391, n_alt = 0
   Insn 1021: point = 392, n_alt = 0
   Insn 1020: point = 393, n_alt = 0
  BB 57
   Insn 1395: point = 394, n_alt = -1
   Insn 1054: point = 394, n_alt = 1
   Insn 1053: point = 394, n_alt = 8
   Insn 1052: point = 395, n_alt = 3
   Insn 1051: point = 396, n_alt = 1
   Insn 1050: point = 398, n_alt = 0
   Insn 1049: point = 400, n_alt = 0
   Insn 1048: point = 402, n_alt = 0
   Insn 1047: point = 404, n_alt = 3
   Insn 1046: point = 405, n_alt = 0
   Insn 1045: point = 407, n_alt = 2
   Insn 1044: point = 409, n_alt = 0
   Insn 1043: point = 411, n_alt = 0
   Insn 1042: point = 412, n_alt = 3
   Insn 1041: point = 414, n_alt = 2
   Insn 1040: point = 416, n_alt = 0
   Insn 1039: point = 418, n_alt = 0
   Insn 1038: point = 419, n_alt = 7
   Insn 1037: point = 421, n_alt = 3
   Insn 1036: point = 422, n_alt = 0
   Insn 1035: point = 424, n_alt = 0
   Insn 1034: point = 426, n_alt = 0
   Insn 1033: point = 428, n_alt = 3
   Insn 1032: point = 429, n_alt = 0
   Insn 1031: point = 431, n_alt = 2
   Insn 1030: point = 433, n_alt = 0
   Insn 1029: point = 435, n_alt = 0
   Insn 1028: point = 436, n_alt = 3
   Insn 1027: point = 438, n_alt = 2
   Insn 1026: point = 440, n_alt = 0
   Insn 1025: point = 442, n_alt = 0
  BB 55
   Insn 1018: point = 444, n_alt = 1
   Insn 1017: point = 444, n_alt = 0
   Insn 1016: point = 446, n_alt = 3
  BB 100
   Insn 1466: point = 448, n_alt = -1
  BB 53
   Insn 979: point = 449, n_alt = -1
   Insn 978: point = 449, n_alt = 0
   Insn 977: point = 450, n_alt = 0
   Insn 976: point = 451, n_alt = 0
  BB 54
   Insn 1393: point = 452, n_alt = -1
   Insn 1010: point = 452, n_alt = 1
   Insn 1009: point = 452, n_alt = 8
   Insn 1008: point = 453, n_alt = 3
   Insn 1007: point = 454, n_alt = 1
   Insn 1006: point = 456, n_alt = 0
   Insn 1005: point = 458, n_alt = 0
   Insn 1004: point = 460, n_alt = 0
   Insn 1003: point = 462, n_alt = 3
   Insn 1002: point = 463, n_alt = 0
   Insn 1001: point = 465, n_alt = 2
   Insn 1000: point = 467, n_alt = 0
   Insn 999: point = 469, n_alt = 0
   Insn 998: point = 470, n_alt = 3
   Insn 997: point = 472, n_alt = 2
   Insn 996: point = 474, n_alt = 0
   Insn 995: point = 476, n_alt = 0
   Insn 994: point = 477, n_alt = 7
   Insn 993: point = 479, n_alt = 3
   Insn 992: point = 480, n_alt = 0
   Insn 991: point = 482, n_alt = 0
   Insn 990: point = 484, n_alt = 0
   Insn 989: point = 486, n_alt = 3
   Insn 988: point = 487, n_alt = 0
   Insn 987: point = 489, n_alt = 2
   Insn 986: point = 491, n_alt = 0
   Insn 985: point = 493, n_alt = 0
   Insn 984: point = 494, n_alt = 3
   Insn 983: point = 496, n_alt = 2
   Insn 982: point = 498, n_alt = 0
   Insn 981: point = 500, n_alt = 0
  BB 52
   Insn 974: point = 502, n_alt = 1
   Insn 973: point = 502, n_alt = 0
   Insn 972: point = 504, n_alt = 3
   Insn 971: point = 505, n_alt = 8
   Insn 970: point = 506, n_alt = 2
   Insn 969: point = 508, n_alt = 7
   Insn 968: point = 509, n_alt = 7
   Insn 967: point = 511, n_alt = 3
   Insn 966: point = 512, n_alt = 0
   Insn 965: point = 514, n_alt = 0
   Insn 964: point = 516, n_alt = 0
   Insn 963: point = 518, n_alt = 3
   Insn 962: point = 519, n_alt = 0
   Insn 961: point = 521, n_alt = 2
   Insn 960: point = 523, n_alt = 0
   Insn 959: point = 525, n_alt = 0
   Insn 958: point = 527, n_alt = 3
   Insn 957: point = 528, n_alt = 3
   Insn 956: point = 530, n_alt = 2
   Insn 955: point = 532, n_alt = 0
   Insn 954: point = 534, n_alt = 0
  BB 50
   Insn 921: point = 536, n_alt = -1
   Insn 920: point = 536, n_alt = 1
   Insn 919: point = 537, n_alt = 7
  BB 49
   Insn 918: point = 539, n_alt = -1
   Insn 917: point = 539, n_alt = 1
   Insn 916: point = 540, n_alt = 7
   Insn 915: point = 541, n_alt = 7
   Insn 914: point = 543, n_alt = 3
   Insn 913: point = 544, n_alt = 0
   Insn 912: point = 546, n_alt = 0
   Insn 911: point = 548, n_alt = 0
   Insn 910: point = 550, n_alt = 3
   Insn 909: point = 551, n_alt = 0
   Insn 908: point = 553, n_alt = 2
   Insn 907: point = 555, n_alt = 0
   Insn 906: point = 557, n_alt = 0
   Insn 905: point = 559, n_alt = 3
   Insn 904: point = 560, n_alt = 3
   Insn 903: point = 562, n_alt = 2
   Insn 902: point = 564, n_alt = 0
   Insn 901: point = 566, n_alt = 0
  BB 89
   Insn 1432: point = 568, n_alt = -1
  BB 18
   Insn 324: point = 569, n_alt = -1
   Insn 323: point = 569, n_alt = 0
   Insn 322: point = 570, n_alt = 0
   Insn 321: point = 571, n_alt = 0
  BB 48
   Insn 1391: point = 572, n_alt = -1
   Insn 895: point = 572, n_alt = 1
  BB 96
   Insn 1454: point = 573, n_alt = -1
  BB 37
   Insn 704: point = 574, n_alt = -1
   Insn 703: point = 574, n_alt = 0
   Insn 702: point = 575, n_alt = 0
   Insn 701: point = 576, n_alt = 0
  BB 47
   Insn 1389: point = 577, n_alt = -1
   Insn 889: point = 577, n_alt = 1
  BB 99
   Insn 1463: point = 578, n_alt = -1
  BB 45
   Insn 840: point = 579, n_alt = -1
   Insn 839: point = 579, n_alt = 0
   Insn 838: point = 580, n_alt = 0
   Insn 837: point = 581, n_alt = 0
  BB 46
   Insn 1387: point = 582, n_alt = -1
   Insn 883: point = 582, n_alt = 1
   Insn 882: point = 582, n_alt = 8
   Insn 881: point = 583, n_alt = 3
   Insn 1558: point = 584, n_alt = -1
	Hard reg 21 is preferable by r1046 with profit 1
   Insn 880: point = 586, n_alt = 2
   Insn 1557: point = 587, n_alt = -1
	Hard reg 21 is preferable by r1046 with profit 1
	Hard reg 22 is preferable by r1046 with profit 1
   Insn 879: point = 589, n_alt = 0
   Insn 878: point = 591, n_alt = 0
   Insn 877: point = 593, n_alt = 0
   Insn 876: point = 594, n_alt = 0
   Insn 875: point = 596, n_alt = 2
   Insn 874: point = 598, n_alt = 0
   Insn 873: point = 600, n_alt = 0
   Insn 872: point = 601, n_alt = 3
   Insn 871: point = 603, n_alt = 2
   Insn 870: point = 605, n_alt = 0
   Insn 869: point = 607, n_alt = 0
   Insn 868: point = 608, n_alt = 1
   Insn 867: point = 610, n_alt = 7
   Insn 866: point = 612, n_alt = 3
   Insn 865: point = 613, n_alt = 0
   Insn 864: point = 615, n_alt = 0
   Insn 863: point = 617, n_alt = 0
   Insn 862: point = 618, n_alt = 0
   Insn 861: point = 620, n_alt = 2
   Insn 860: point = 622, n_alt = 0
   Insn 859: point = 624, n_alt = 0
   Insn 858: point = 625, n_alt = 3
   Insn 857: point = 627, n_alt = 2
   Insn 856: point = 629, n_alt = 0
   Insn 855: point = 631, n_alt = 0
   Insn 854: point = 632, n_alt = 7
   Insn 853: point = 634, n_alt = 3
   Insn 852: point = 635, n_alt = 0
   Insn 851: point = 637, n_alt = 0
   Insn 850: point = 639, n_alt = 0
   Insn 849: point = 640, n_alt = 0
   Insn 848: point = 642, n_alt = 2
   Insn 847: point = 644, n_alt = 0
   Insn 846: point = 646, n_alt = 0
   Insn 845: point = 647, n_alt = 3
   Insn 844: point = 649, n_alt = 2
   Insn 843: point = 651, n_alt = 0
   Insn 842: point = 653, n_alt = 0
  BB 44
   Insn 835: point = 655, n_alt = 1
   Insn 834: point = 655, n_alt = 0
   Insn 833: point = 657, n_alt = 3
  BB 98
   Insn 1460: point = 659, n_alt = -1
  BB 42
   Insn 784: point = 660, n_alt = -1
   Insn 783: point = 660, n_alt = 0
   Insn 782: point = 661, n_alt = 0
   Insn 781: point = 662, n_alt = 0
  BB 43
   Insn 1385: point = 663, n_alt = -1
   Insn 827: point = 663, n_alt = 1
   Insn 826: point = 663, n_alt = 8
   Insn 825: point = 664, n_alt = 3
   Insn 1556: point = 665, n_alt = -1
	Hard reg 21 is preferable by r1045 with profit 1
   Insn 824: point = 667, n_alt = 2
   Insn 1555: point = 668, n_alt = -1
	Hard reg 21 is preferable by r1045 with profit 1
	Hard reg 22 is preferable by r1045 with profit 1
   Insn 823: point = 670, n_alt = 0
   Insn 822: point = 672, n_alt = 0
   Insn 821: point = 674, n_alt = 0
   Insn 820: point = 675, n_alt = 0
   Insn 819: point = 677, n_alt = 2
   Insn 818: point = 679, n_alt = 0
   Insn 817: point = 681, n_alt = 0
   Insn 816: point = 682, n_alt = 3
   Insn 815: point = 684, n_alt = 2
   Insn 814: point = 686, n_alt = 0
   Insn 813: point = 688, n_alt = 0
   Insn 812: point = 689, n_alt = 1
   Insn 811: point = 691, n_alt = 7
   Insn 810: point = 693, n_alt = 3
   Insn 809: point = 694, n_alt = 0
   Insn 808: point = 696, n_alt = 0
   Insn 807: point = 698, n_alt = 0
   Insn 806: point = 699, n_alt = 0
   Insn 805: point = 701, n_alt = 2
   Insn 804: point = 703, n_alt = 0
   Insn 803: point = 705, n_alt = 0
   Insn 802: point = 706, n_alt = 3
   Insn 801: point = 708, n_alt = 2
   Insn 800: point = 710, n_alt = 0
   Insn 799: point = 712, n_alt = 0
   Insn 798: point = 713, n_alt = 7
   Insn 797: point = 715, n_alt = 3
   Insn 796: point = 716, n_alt = 0
   Insn 795: point = 718, n_alt = 0
   Insn 794: point = 720, n_alt = 0
   Insn 793: point = 721, n_alt = 0
   Insn 792: point = 723, n_alt = 2
   Insn 791: point = 725, n_alt = 0
   Insn 790: point = 727, n_alt = 0
   Insn 789: point = 728, n_alt = 3
   Insn 788: point = 730, n_alt = 2
   Insn 787: point = 732, n_alt = 0
   Insn 786: point = 734, n_alt = 0
  BB 41
   Insn 779: point = 736, n_alt = 1
   Insn 778: point = 736, n_alt = 0
   Insn 777: point = 738, n_alt = 3
  BB 97
   Insn 1457: point = 740, n_alt = -1
  BB 39
   Insn 728: point = 741, n_alt = -1
   Insn 727: point = 741, n_alt = 0
   Insn 726: point = 742, n_alt = 0
   Insn 725: point = 743, n_alt = 0
  BB 40
   Insn 1383: point = 744, n_alt = -1
   Insn 771: point = 744, n_alt = 1
   Insn 770: point = 744, n_alt = 8
   Insn 769: point = 745, n_alt = 3
   Insn 1554: point = 746, n_alt = -1
	Hard reg 21 is preferable by r1044 with profit 1
   Insn 768: point = 748, n_alt = 2
   Insn 1553: point = 749, n_alt = -1
	Hard reg 21 is preferable by r1044 with profit 1
	Hard reg 22 is preferable by r1044 with profit 1
   Insn 767: point = 751, n_alt = 0
   Insn 766: point = 753, n_alt = 0
   Insn 765: point = 755, n_alt = 0
   Insn 764: point = 756, n_alt = 0
   Insn 763: point = 758, n_alt = 2
   Insn 762: point = 760, n_alt = 0
   Insn 761: point = 762, n_alt = 0
   Insn 760: point = 763, n_alt = 3
   Insn 759: point = 765, n_alt = 2
   Insn 758: point = 767, n_alt = 0
   Insn 757: point = 769, n_alt = 0
   Insn 756: point = 770, n_alt = 1
   Insn 755: point = 772, n_alt = 7
   Insn 754: point = 774, n_alt = 3
   Insn 753: point = 775, n_alt = 0
   Insn 752: point = 777, n_alt = 0
   Insn 751: point = 779, n_alt = 0
   Insn 750: point = 780, n_alt = 0
   Insn 749: point = 782, n_alt = 2
   Insn 748: point = 784, n_alt = 0
   Insn 747: point = 786, n_alt = 0
   Insn 746: point = 787, n_alt = 3
   Insn 745: point = 789, n_alt = 2
   Insn 744: point = 791, n_alt = 0
   Insn 743: point = 793, n_alt = 0
   Insn 742: point = 794, n_alt = 7
   Insn 741: point = 796, n_alt = 3
   Insn 740: point = 797, n_alt = 0
   Insn 739: point = 799, n_alt = 0
   Insn 738: point = 801, n_alt = 0
   Insn 737: point = 802, n_alt = 0
   Insn 736: point = 804, n_alt = 2
   Insn 735: point = 806, n_alt = 0
   Insn 734: point = 808, n_alt = 0
   Insn 733: point = 809, n_alt = 3
   Insn 732: point = 811, n_alt = 2
   Insn 731: point = 813, n_alt = 0
   Insn 730: point = 815, n_alt = 0
  BB 38
   Insn 723: point = 817, n_alt = 1
   Insn 722: point = 818, n_alt = 0
   Insn 721: point = 820, n_alt = 3
   Insn 720: point = 821, n_alt = 0
   Insn 719: point = 822, n_alt = 8
   Insn 718: point = 823, n_alt = 7
   Insn 717: point = 825, n_alt = 3
   Insn 716: point = 826, n_alt = 0
   Insn 715: point = 828, n_alt = 0
   Insn 714: point = 830, n_alt = 0
   Insn 713: point = 831, n_alt = 0
   Insn 712: point = 833, n_alt = 2
   Insn 711: point = 835, n_alt = 0
   Insn 710: point = 837, n_alt = 0
   Insn 709: point = 838, n_alt = 3
   Insn 708: point = 840, n_alt = 2
   Insn 707: point = 842, n_alt = 0
   Insn 706: point = 844, n_alt = 0
  BB 36
   Insn 699: point = 846, n_alt = 1
   Insn 698: point = 847, n_alt = 0
   Insn 697: point = 849, n_alt = 3
   Insn 696: point = 850, n_alt = 0
  BB 95
   Insn 1451: point = 852, n_alt = -1
  BB 34
   Insn 632: point = 853, n_alt = -1
   Insn 631: point = 853, n_alt = 0
   Insn 630: point = 854, n_alt = 0
   Insn 629: point = 855, n_alt = 0
  BB 35
   Insn 1381: point = 856, n_alt = -1
   Insn 690: point = 856, n_alt = 1
   Insn 689: point = 856, n_alt = 8
   Insn 688: point = 857, n_alt = 7
   Insn 687: point = 858, n_alt = 3
   Insn 686: point = 859, n_alt = 0
   Insn 685: point = 861, n_alt = 0
   Insn 684: point = 863, n_alt = 0
   Insn 683: point = 864, n_alt = 0
   Insn 682: point = 866, n_alt = 2
   Insn 681: point = 868, n_alt = 0
   Insn 680: point = 870, n_alt = 0
   Insn 679: point = 871, n_alt = 3
   Insn 678: point = 873, n_alt = 2
   Insn 677: point = 875, n_alt = 0
   Insn 676: point = 877, n_alt = 0
   Insn 675: point = 878, n_alt = 8
   Insn 674: point = 879, n_alt = 3
   Insn 673: point = 880, n_alt = 7
   Insn 672: point = 882, n_alt = 3
   Insn 671: point = 883, n_alt = 0
   Insn 670: point = 885, n_alt = 0
   Insn 669: point = 887, n_alt = 0
   Insn 668: point = 888, n_alt = 0
   Insn 667: point = 890, n_alt = 2
   Insn 666: point = 892, n_alt = 0
   Insn 665: point = 894, n_alt = 0
   Insn 664: point = 895, n_alt = 3
   Insn 663: point = 897, n_alt = 2
   Insn 662: point = 899, n_alt = 0
   Insn 661: point = 901, n_alt = 0
   Insn 660: point = 902, n_alt = 3
   Insn 659: point = 904, n_alt = 0
   Insn 658: point = 906, n_alt = 0
   Insn 657: point = 907, n_alt = 0
   Insn 656: point = 909, n_alt = 2
   Insn 655: point = 911, n_alt = 0
   Insn 654: point = 913, n_alt = 0
   Insn 653: point = 914, n_alt = 3
   Insn 652: point = 916, n_alt = 2
   Insn 651: point = 918, n_alt = 0
   Insn 650: point = 920, n_alt = 0
   Insn 649: point = 921, n_alt = 8
   Insn 648: point = 922, n_alt = 1
   Insn 647: point = 924, n_alt = 7
   Insn 646: point = 925, n_alt = 7
   Insn 645: point = 927, n_alt = 3
   Insn 644: point = 928, n_alt = 0
   Insn 643: point = 930, n_alt = 0
   Insn 642: point = 932, n_alt = 0
   Insn 641: point = 933, n_alt = 0
   Insn 640: point = 935, n_alt = 2
   Insn 639: point = 937, n_alt = 0
   Insn 638: point = 939, n_alt = 0
   Insn 637: point = 940, n_alt = 3
   Insn 636: point = 942, n_alt = 2
   Insn 635: point = 944, n_alt = 0
   Insn 634: point = 946, n_alt = 0
  BB 33
   Insn 627: point = 948, n_alt = 1
   Insn 626: point = 948, n_alt = 0
   Insn 625: point = 950, n_alt = 3
  BB 94
   Insn 1448: point = 952, n_alt = -1
  BB 31
   Insn 561: point = 953, n_alt = -1
   Insn 560: point = 953, n_alt = 0
   Insn 559: point = 954, n_alt = 0
   Insn 558: point = 955, n_alt = 0
  BB 32
   Insn 1379: point = 956, n_alt = -1
   Insn 619: point = 956, n_alt = 1
   Insn 618: point = 956, n_alt = 8
   Insn 617: point = 957, n_alt = 7
   Insn 616: point = 958, n_alt = 3
   Insn 615: point = 959, n_alt = 0
   Insn 614: point = 961, n_alt = 0
   Insn 613: point = 963, n_alt = 0
   Insn 612: point = 964, n_alt = 0
   Insn 611: point = 966, n_alt = 2
   Insn 610: point = 968, n_alt = 0
   Insn 609: point = 970, n_alt = 0
   Insn 608: point = 971, n_alt = 3
   Insn 607: point = 973, n_alt = 2
   Insn 606: point = 975, n_alt = 0
   Insn 605: point = 977, n_alt = 0
   Insn 604: point = 978, n_alt = 8
   Insn 603: point = 979, n_alt = 3
   Insn 602: point = 980, n_alt = 7
   Insn 601: point = 982, n_alt = 3
   Insn 600: point = 983, n_alt = 0
   Insn 599: point = 985, n_alt = 0
   Insn 598: point = 987, n_alt = 0
   Insn 597: point = 988, n_alt = 0
   Insn 596: point = 990, n_alt = 2
   Insn 595: point = 992, n_alt = 0
   Insn 594: point = 994, n_alt = 0
   Insn 593: point = 995, n_alt = 3
   Insn 592: point = 997, n_alt = 2
   Insn 591: point = 999, n_alt = 0
   Insn 590: point = 1001, n_alt = 0
   Insn 589: point = 1002, n_alt = 3
   Insn 588: point = 1004, n_alt = 0
   Insn 587: point = 1006, n_alt = 0
   Insn 586: point = 1007, n_alt = 0
   Insn 585: point = 1009, n_alt = 2
   Insn 584: point = 1011, n_alt = 0
   Insn 583: point = 1013, n_alt = 0
   Insn 582: point = 1014, n_alt = 3
   Insn 581: point = 1016, n_alt = 2
   Insn 580: point = 1018, n_alt = 0
   Insn 579: point = 1020, n_alt = 0
   Insn 578: point = 1021, n_alt = 8
   Insn 577: point = 1022, n_alt = 1
   Insn 576: point = 1024, n_alt = 7
   Insn 575: point = 1025, n_alt = 7
   Insn 574: point = 1027, n_alt = 3
   Insn 573: point = 1028, n_alt = 0
   Insn 572: point = 1030, n_alt = 0
   Insn 571: point = 1032, n_alt = 0
   Insn 570: point = 1033, n_alt = 0
   Insn 569: point = 1035, n_alt = 2
   Insn 568: point = 1037, n_alt = 0
   Insn 567: point = 1039, n_alt = 0
   Insn 566: point = 1040, n_alt = 3
   Insn 565: point = 1042, n_alt = 2
   Insn 564: point = 1044, n_alt = 0
   Insn 563: point = 1046, n_alt = 0
  BB 30
   Insn 556: point = 1048, n_alt = 1
   Insn 555: point = 1048, n_alt = 0
   Insn 554: point = 1050, n_alt = 3
  BB 93
   Insn 1445: point = 1052, n_alt = -1
  BB 28
   Insn 490: point = 1053, n_alt = -1
   Insn 489: point = 1053, n_alt = 0
   Insn 488: point = 1054, n_alt = 0
   Insn 487: point = 1055, n_alt = 0
  BB 29
   Insn 1377: point = 1056, n_alt = -1
   Insn 548: point = 1056, n_alt = 1
   Insn 547: point = 1056, n_alt = 8
   Insn 546: point = 1057, n_alt = 7
   Insn 545: point = 1058, n_alt = 3
   Insn 544: point = 1059, n_alt = 0
   Insn 543: point = 1061, n_alt = 0
   Insn 542: point = 1063, n_alt = 0
   Insn 541: point = 1064, n_alt = 0
   Insn 540: point = 1066, n_alt = 2
   Insn 539: point = 1068, n_alt = 0
   Insn 538: point = 1070, n_alt = 0
   Insn 537: point = 1071, n_alt = 3
   Insn 536: point = 1073, n_alt = 2
   Insn 535: point = 1075, n_alt = 0
   Insn 534: point = 1077, n_alt = 0
   Insn 533: point = 1078, n_alt = 8
   Insn 532: point = 1079, n_alt = 3
   Insn 531: point = 1080, n_alt = 7
   Insn 530: point = 1082, n_alt = 3
   Insn 529: point = 1083, n_alt = 0
   Insn 528: point = 1085, n_alt = 0
   Insn 527: point = 1087, n_alt = 0
   Insn 526: point = 1088, n_alt = 0
   Insn 525: point = 1090, n_alt = 2
   Insn 524: point = 1092, n_alt = 0
   Insn 523: point = 1094, n_alt = 0
   Insn 522: point = 1095, n_alt = 3
   Insn 521: point = 1097, n_alt = 2
   Insn 520: point = 1099, n_alt = 0
   Insn 519: point = 1101, n_alt = 0
   Insn 518: point = 1102, n_alt = 3
   Insn 517: point = 1104, n_alt = 0
   Insn 516: point = 1106, n_alt = 0
   Insn 515: point = 1107, n_alt = 0
   Insn 514: point = 1109, n_alt = 2
   Insn 513: point = 1111, n_alt = 0
   Insn 512: point = 1113, n_alt = 0
   Insn 511: point = 1114, n_alt = 3
   Insn 510: point = 1116, n_alt = 2
   Insn 509: point = 1118, n_alt = 0
   Insn 508: point = 1120, n_alt = 0
   Insn 507: point = 1121, n_alt = 8
   Insn 506: point = 1122, n_alt = 1
   Insn 505: point = 1124, n_alt = 7
   Insn 504: point = 1125, n_alt = 7
   Insn 503: point = 1127, n_alt = 3
   Insn 502: point = 1128, n_alt = 0
   Insn 501: point = 1130, n_alt = 0
   Insn 500: point = 1132, n_alt = 0
   Insn 499: point = 1133, n_alt = 0
   Insn 498: point = 1135, n_alt = 2
   Insn 497: point = 1137, n_alt = 0
   Insn 496: point = 1139, n_alt = 0
   Insn 495: point = 1140, n_alt = 3
   Insn 494: point = 1142, n_alt = 2
   Insn 493: point = 1144, n_alt = 0
   Insn 492: point = 1146, n_alt = 0
  BB 27
   Insn 485: point = 1148, n_alt = 1
   Insn 484: point = 1149, n_alt = 0
   Insn 483: point = 1151, n_alt = 3
   Insn 482: point = 1152, n_alt = 0
   Insn 481: point = 1153, n_alt = 8
   Insn 480: point = 1154, n_alt = 3
   Insn 479: point = 1155, n_alt = 7
   Insn 478: point = 1157, n_alt = 3
   Insn 477: point = 1158, n_alt = 0
   Insn 476: point = 1160, n_alt = 0
   Insn 475: point = 1162, n_alt = 0
   Insn 474: point = 1163, n_alt = 0
   Insn 473: point = 1165, n_alt = 2
   Insn 472: point = 1167, n_alt = 0
   Insn 471: point = 1169, n_alt = 0
   Insn 470: point = 1170, n_alt = 3
   Insn 469: point = 1172, n_alt = 2
   Insn 468: point = 1174, n_alt = 0
   Insn 467: point = 1176, n_alt = 0
   Insn 466: point = 1177, n_alt = 3
   Insn 465: point = 1179, n_alt = 0
   Insn 464: point = 1181, n_alt = 0
   Insn 463: point = 1182, n_alt = 0
   Insn 462: point = 1184, n_alt = 2
   Insn 461: point = 1186, n_alt = 0
   Insn 460: point = 1188, n_alt = 0
   Insn 459: point = 1189, n_alt = 3
   Insn 458: point = 1191, n_alt = 2
   Insn 457: point = 1193, n_alt = 0
   Insn 456: point = 1195, n_alt = 0
   Insn 455: point = 1196, n_alt = 8
   Insn 454: point = 1197, n_alt = 2
   Insn 453: point = 1199, n_alt = 7
   Insn 452: point = 1200, n_alt = 7
   Insn 451: point = 1202, n_alt = 3
   Insn 450: point = 1203, n_alt = 0
   Insn 449: point = 1205, n_alt = 0
   Insn 448: point = 1207, n_alt = 0
   Insn 447: point = 1208, n_alt = 0
   Insn 446: point = 1210, n_alt = 2
   Insn 445: point = 1212, n_alt = 0
   Insn 444: point = 1214, n_alt = 0
   Insn 443: point = 1215, n_alt = 3
   Insn 442: point = 1217, n_alt = 2
   Insn 441: point = 1219, n_alt = 0
   Insn 440: point = 1221, n_alt = 0
  BB 25
   Insn 407: point = 1223, n_alt = -1
   Insn 406: point = 1223, n_alt = 1
   Insn 405: point = 1224, n_alt = 7
  BB 24
   Insn 404: point = 1226, n_alt = -1
   Insn 403: point = 1226, n_alt = 1
   Insn 402: point = 1227, n_alt = 7
   Insn 401: point = 1228, n_alt = 7
   Insn 400: point = 1230, n_alt = 3
   Insn 399: point = 1231, n_alt = 0
   Insn 398: point = 1233, n_alt = 0
   Insn 397: point = 1235, n_alt = 0
   Insn 396: point = 1236, n_alt = 0
   Insn 395: point = 1238, n_alt = 2
   Insn 394: point = 1240, n_alt = 0
   Insn 393: point = 1242, n_alt = 0
   Insn 392: point = 1243, n_alt = 3
   Insn 391: point = 1245, n_alt = 2
   Insn 390: point = 1247, n_alt = 0
   Insn 389: point = 1249, n_alt = 0
  BB 90
   Insn 1435: point = 1251, n_alt = -1
  BB 20
   Insn 342: point = 1252, n_alt = -1
   Insn 341: point = 1252, n_alt = 0
   Insn 340: point = 1253, n_alt = 0
   Insn 339: point = 1254, n_alt = 0
  BB 23
   Insn 1375: point = 1255, n_alt = -1
   Insn 383: point = 1255, n_alt = 1
  BB 22
   Insn 1436: point = 1256, n_alt = -1
   Insn 380: point = 1256, n_alt = 1
   Insn 379: point = 1257, n_alt = 0
  BB 92
   Insn 1442: point = 1259, n_alt = -1
  BB 91
   Insn 1440: point = 1260, n_alt = -1
  BB 21
   Insn 377: point = 1261, n_alt = -1
   Insn 376: point = 1261, n_alt = 1
   Insn 375: point = 1262, n_alt = 7
   Insn 374: point = 1263, n_alt = 2
   Insn 373: point = 1265, n_alt = 1
   Insn 372: point = 1267, n_alt = 2
   Insn 371: point = 1268, n_alt = 7
   Insn 370: point = 1270, n_alt = 3
   Insn 369: point = 1271, n_alt = 0
   Insn 368: point = 1273, n_alt = 0
   Insn 367: point = 1275, n_alt = 0
   Insn 366: point = 1276, n_alt = 0
   Insn 365: point = 1278, n_alt = 2
   Insn 364: point = 1280, n_alt = 0
   Insn 363: point = 1282, n_alt = 0
   Insn 362: point = 1283, n_alt = 3
   Insn 361: point = 1285, n_alt = 2
   Insn 360: point = 1287, n_alt = 0
   Insn 359: point = 1289, n_alt = 0
   Insn 358: point = 1290, n_alt = 1
   Insn 357: point = 1292, n_alt = 2
   Insn 356: point = 1293, n_alt = 7
   Insn 355: point = 1295, n_alt = 3
   Insn 354: point = 1296, n_alt = 0
   Insn 353: point = 1298, n_alt = 0
   Insn 352: point = 1300, n_alt = 0
   Insn 351: point = 1301, n_alt = 0
   Insn 350: point = 1303, n_alt = 2
   Insn 349: point = 1305, n_alt = 0
   Insn 348: point = 1307, n_alt = 0
   Insn 347: point = 1308, n_alt = 3
   Insn 346: point = 1310, n_alt = 2
   Insn 345: point = 1312, n_alt = 0
   Insn 344: point = 1314, n_alt = 0
  BB 19
   Insn 337: point = 1316, n_alt = 1
   Insn 336: point = 1317, n_alt = 0
   Insn 335: point = 1319, n_alt = 3
   Insn 334: point = 1320, n_alt = 0
   Insn 333: point = 1321, n_alt = 1
   Insn 332: point = 1322, n_alt = 0
   Insn 331: point = 1323, n_alt = 1
   Insn 330: point = 1324, n_alt = 0
   Insn 329: point = 1326, n_alt = 0
  BB 17
   Insn 319: point = 1328, n_alt = 1
   Insn 318: point = 1328, n_alt = 3
   Insn 317: point = 1330, n_alt = 0
   Insn 316: point = 1332, n_alt = 3
  BB 85
   Insn 1420: point = 1334, n_alt = -1
  BB 6
   Insn 167: point = 1335, n_alt = -1
   Insn 166: point = 1335, n_alt = 0
   Insn 165: point = 1336, n_alt = 0
   Insn 164: point = 1337, n_alt = 0
  BB 16
   Insn 1373: point = 1338, n_alt = -1
   Insn 310: point = 1338, n_alt = 1
  BB 86
   Insn 1423: point = 1339, n_alt = -1
  BB 8
   Insn 176: point = 1340, n_alt = -1
   Insn 175: point = 1340, n_alt = 0
   Insn 174: point = 1341, n_alt = 0
   Insn 173: point = 1342, n_alt = 0
  BB 15
   Insn 1371: point = 1343, n_alt = -1
   Insn 304: point = 1343, n_alt = 1
  BB 88
   Insn 1429: point = 1344, n_alt = -1
  BB 13
   Insn 255: point = 1345, n_alt = -1
   Insn 254: point = 1345, n_alt = 0
   Insn 253: point = 1346, n_alt = 0
   Insn 252: point = 1347, n_alt = 0
  BB 14
   Insn 1369: point = 1348, n_alt = -1
   Insn 298: point = 1348, n_alt = 1
   Insn 297: point = 1348, n_alt = 8
   Insn 296: point = 1349, n_alt = 3
   Insn 1552: point = 1350, n_alt = -1
	Hard reg 21 is preferable by r1043 with profit 1
   Insn 295: point = 1352, n_alt = 2
   Insn 1551: point = 1353, n_alt = -1
	Hard reg 21 is preferable by r1043 with profit 1
	Hard reg 22 is preferable by r1043 with profit 1
   Insn 294: point = 1355, n_alt = 0
   Insn 293: point = 1357, n_alt = 0
   Insn 292: point = 1359, n_alt = 0
   Insn 291: point = 1360, n_alt = 0
   Insn 290: point = 1362, n_alt = 2
   Insn 289: point = 1364, n_alt = 0
   Insn 288: point = 1366, n_alt = 0
   Insn 287: point = 1367, n_alt = 3
   Insn 286: point = 1369, n_alt = 2
   Insn 285: point = 1371, n_alt = 0
   Insn 284: point = 1373, n_alt = 0
   Insn 283: point = 1374, n_alt = 1
   Insn 282: point = 1376, n_alt = 7
   Insn 281: point = 1378, n_alt = 3
   Insn 280: point = 1379, n_alt = 0
   Insn 279: point = 1381, n_alt = 0
   Insn 278: point = 1383, n_alt = 0
   Insn 277: point = 1384, n_alt = 0
   Insn 276: point = 1386, n_alt = 2
   Insn 275: point = 1388, n_alt = 0
   Insn 274: point = 1390, n_alt = 0
   Insn 273: point = 1391, n_alt = 3
   Insn 272: point = 1393, n_alt = 2
   Insn 271: point = 1395, n_alt = 0
   Insn 270: point = 1397, n_alt = 0
   Insn 269: point = 1398, n_alt = 7
   Insn 268: point = 1400, n_alt = 3
   Insn 267: point = 1401, n_alt = 0
   Insn 266: point = 1403, n_alt = 0
   Insn 265: point = 1405, n_alt = 0
   Insn 264: point = 1406, n_alt = 0
   Insn 263: point = 1408, n_alt = 2
   Insn 262: point = 1410, n_alt = 0
   Insn 261: point = 1412, n_alt = 0
   Insn 260: point = 1413, n_alt = 3
   Insn 259: point = 1415, n_alt = 2
   Insn 258: point = 1417, n_alt = 0
   Insn 257: point = 1419, n_alt = 0
  BB 12
   Insn 250: point = 1421, n_alt = 1
   Insn 249: point = 1421, n_alt = 0
   Insn 248: point = 1423, n_alt = 3
  BB 87
   Insn 1426: point = 1425, n_alt = -1
  BB 10
   Insn 199: point = 1426, n_alt = -1
   Insn 198: point = 1426, n_alt = 0
   Insn 197: point = 1427, n_alt = 0
   Insn 196: point = 1428, n_alt = 0
  BB 11
   Insn 1367: point = 1429, n_alt = -1
   Insn 242: point = 1429, n_alt = 1
   Insn 241: point = 1429, n_alt = 8
   Insn 240: point = 1430, n_alt = 3
   Insn 1550: point = 1431, n_alt = -1
	Hard reg 21 is preferable by r1042 with profit 1
   Insn 239: point = 1433, n_alt = 2
   Insn 1549: point = 1434, n_alt = -1
	Hard reg 21 is preferable by r1042 with profit 1
	Hard reg 22 is preferable by r1042 with profit 1
   Insn 238: point = 1436, n_alt = 0
   Insn 237: point = 1438, n_alt = 0
   Insn 236: point = 1440, n_alt = 0
   Insn 235: point = 1441, n_alt = 0
   Insn 234: point = 1443, n_alt = 2
   Insn 233: point = 1445, n_alt = 0
   Insn 232: point = 1447, n_alt = 0
   Insn 231: point = 1448, n_alt = 3
   Insn 230: point = 1450, n_alt = 2
   Insn 229: point = 1452, n_alt = 0
   Insn 228: point = 1454, n_alt = 0
   Insn 227: point = 1455, n_alt = 1
   Insn 226: point = 1457, n_alt = 7
   Insn 225: point = 1459, n_alt = 3
   Insn 224: point = 1460, n_alt = 0
   Insn 223: point = 1462, n_alt = 0
   Insn 222: point = 1464, n_alt = 0
   Insn 221: point = 1465, n_alt = 0
   Insn 220: point = 1467, n_alt = 2
   Insn 219: point = 1469, n_alt = 0
   Insn 218: point = 1471, n_alt = 0
   Insn 217: point = 1472, n_alt = 3
   Insn 216: point = 1474, n_alt = 2
   Insn 215: point = 1476, n_alt = 0
   Insn 214: point = 1478, n_alt = 0
   Insn 213: point = 1479, n_alt = 7
   Insn 212: point = 1481, n_alt = 3
   Insn 211: point = 1482, n_alt = 0
   Insn 210: point = 1484, n_alt = 0
   Insn 209: point = 1486, n_alt = 0
   Insn 208: point = 1487, n_alt = 0
   Insn 207: point = 1489, n_alt = 2
   Insn 206: point = 1491, n_alt = 0
   Insn 205: point = 1493, n_alt = 0
   Insn 204: point = 1494, n_alt = 3
   Insn 203: point = 1496, n_alt = 2
   Insn 202: point = 1498, n_alt = 0
   Insn 201: point = 1500, n_alt = 0
  BB 9
   Insn 194: point = 1502, n_alt = 1
   Insn 193: point = 1502, n_alt = 0
   Insn 192: point = 1504, n_alt = 3
   Insn 191: point = 1505, n_alt = 8
   Insn 190: point = 1506, n_alt = 7
   Insn 189: point = 1508, n_alt = 3
   Insn 188: point = 1509, n_alt = 0
   Insn 187: point = 1511, n_alt = 0
   Insn 186: point = 1513, n_alt = 0
   Insn 185: point = 1514, n_alt = 0
   Insn 184: point = 1516, n_alt = 2
   Insn 1548: point = 1518, n_alt = 3
   Insn 183: point = 1519, n_alt = 0
   Insn 182: point = 1521, n_alt = 0
   Insn 181: point = 1522, n_alt = 3
   Insn 1547: point = 1524, n_alt = 3
   Insn 180: point = 1525, n_alt = 2
   Insn 1546: point = 1527, n_alt = 3
   Insn 179: point = 1528, n_alt = 0
   Insn 178: point = 1530, n_alt = 0
  BB 7
   Insn 171: point = 1532, n_alt = 1
   Insn 170: point = 1532, n_alt = 0
   Insn 169: point = 1534, n_alt = 3
  BB 5
   Insn 162: point = 1536, n_alt = 1
   Insn 161: point = 1536, n_alt = 0
   Insn 160: point = 1538, n_alt = 3
  BB 4
   Insn 158: point = 1540, n_alt = -1
   Insn 157: point = 1540, n_alt = 0
   Insn 156: point = 1541, n_alt = 0
   Insn 155: point = 1542, n_alt = 1
   Insn 154: point = 1543, n_alt = 0
   Insn 153: point = 1545, n_alt = 0
  BB 2
   Insn 145: point = 1547, n_alt = 1
   Insn 1544: point = 1547, n_alt = 1
   Insn 144: point = 1549, n_alt = 0
   Insn 143: point = 1551, n_alt = 3
   Insn 1543: point = 1552, n_alt = -1
	Hard reg 39 is preferable by r1036 with profit 1
   Insn 142: point = 1554, n_alt = 0
   Insn 1542: point = 1554, n_alt = -1
	Hard reg 39 is preferable by r1036 with profit 1
	Hard reg 0 is preferable by r1036 with profit 1
   Insn 1541: point = 1556, n_alt = -1
	Hard reg 0 is preferable by r1035 with profit 1
   Insn 141: point = 1558, n_alt = 0
   Insn 1540: point = 1558, n_alt = -1
   Insn 137: point = 1559, n_alt = 5
   Insn 136: point = 1560, n_alt = 5
   Insn 135: point = 1561, n_alt = -1
   Insn 133: point = 1563, n_alt = 1
   Insn 131: point = 1565, n_alt = 0
   Insn 132: point = 1565, n_alt = 2
   Insn 1539: point = 1566, n_alt = -1
	Hard reg 0 is preferable by r1034 with profit 1
   Insn 130: point = 1568, n_alt = 2
   Insn 1538: point = 1568, n_alt = -1
   Insn 129: point = 1569, n_alt = 5
   Insn 128: point = 1570, n_alt = 0
   Insn 127: point = 1572, n_alt = 0
   Insn 126: point = 1574, n_alt = 3
   Insn 1537: point = 1575, n_alt = -1
	Hard reg 38 is preferable by r1033 with profit 1
   Insn 125: point = 1577, n_alt = 0
   Insn 1536: point = 1578, n_alt = -1
	Hard reg 38 is preferable by r1033 with profit 1
	Hard reg 1 is preferable by r1033 with profit 1
   Insn 123: point = 1580, n_alt = 0
   Insn 124: point = 1580, n_alt = 2
   Insn 1535: point = 1581, n_alt = -1
	Hard reg 0 is preferable by r1032 with profit 1
   Insn 122: point = 1583, n_alt = 2
   Insn 1534: point = 1583, n_alt = -1
   Insn 121: point = 1584, n_alt = 5
   Insn 120: point = 1585, n_alt = 0
   Insn 119: point = 1587, n_alt = 0
   Insn 118: point = 1589, n_alt = 3
   Insn 1533: point = 1590, n_alt = -1
	Hard reg 37 is preferable by r1031 with profit 1
   Insn 117: point = 1592, n_alt = 0
   Insn 1532: point = 1593, n_alt = -1
	Hard reg 37 is preferable by r1031 with profit 1
	Hard reg 1 is preferable by r1031 with profit 1
   Insn 115: point = 1595, n_alt = 0
   Insn 116: point = 1595, n_alt = 2
   Insn 114: point = 1596, n_alt = 3
   Insn 113: point = 1597, n_alt = 5
   Insn 112: point = 1598, n_alt = 0
   Insn 111: point = 1600, n_alt = 0
   Insn 110: point = 1602, n_alt = 3
   Insn 1531: point = 1603, n_alt = -1
	Hard reg 43 is preferable by r1030 with profit 1
   Insn 109: point = 1605, n_alt = 0
   Insn 1530: point = 1605, n_alt = -1
	Hard reg 43 is preferable by r1030 with profit 1
	Hard reg 0 is preferable by r1030 with profit 1
   Insn 1529: point = 1607, n_alt = -1
	Hard reg 0 is preferable by r1029 with profit 1
   Insn 108: point = 1609, n_alt = 0
   Insn 1528: point = 1609, n_alt = -1
   Insn 104: point = 1610, n_alt = 2
   Insn 103: point = 1611, n_alt = 3
   Insn 102: point = 1612, n_alt = -1
   Insn 100: point = 1614, n_alt = 1
   Insn 98: point = 1616, n_alt = 0
   Insn 99: point = 1616, n_alt = 2
   Insn 1527: point = 1617, n_alt = -1
	Hard reg 0 is preferable by r1028 with profit 1
   Insn 97: point = 1619, n_alt = 2
   Insn 1526: point = 1619, n_alt = -1
   Insn 96: point = 1620, n_alt = 5
   Insn 95: point = 1621, n_alt = 0
   Insn 94: point = 1623, n_alt = 0
   Insn 93: point = 1625, n_alt = 3
   Insn 1525: point = 1626, n_alt = -1
	Hard reg 42 is preferable by r1027 with profit 1
   Insn 92: point = 1628, n_alt = 0
   Insn 1524: point = 1629, n_alt = -1
	Hard reg 42 is preferable by r1027 with profit 1
	Hard reg 1 is preferable by r1027 with profit 1
   Insn 90: point = 1631, n_alt = 0
   Insn 91: point = 1631, n_alt = 2
   Insn 1523: point = 1632, n_alt = -1
	Hard reg 0 is preferable by r1026 with profit 1
   Insn 89: point = 1634, n_alt = 2
   Insn 1522: point = 1634, n_alt = -1
   Insn 88: point = 1635, n_alt = 5
   Insn 87: point = 1636, n_alt = 0
   Insn 86: point = 1638, n_alt = 0
   Insn 85: point = 1640, n_alt = 3
   Insn 1521: point = 1641, n_alt = -1
	Hard reg 41 is preferable by r1025 with profit 1
   Insn 84: point = 1643, n_alt = 0
   Insn 1520: point = 1644, n_alt = -1
	Hard reg 41 is preferable by r1025 with profit 1
	Hard reg 1 is preferable by r1025 with profit 1
   Insn 82: point = 1646, n_alt = 0
   Insn 83: point = 1646, n_alt = 2
   Insn 81: point = 1647, n_alt = 3
   Insn 80: point = 1648, n_alt = 5
   Insn 79: point = 1649, n_alt = 0
   Insn 78: point = 1651, n_alt = 0
   Insn 77: point = 1653, n_alt = 3
   Insn 1519: point = 1654, n_alt = -1
	Hard reg 3 is preferable by r1024 with profit 1
   Insn 76: point = 1656, n_alt = 0
   Insn 1518: point = 1656, n_alt = -1
	Hard reg 3 is preferable by r1024 with profit 1
	Hard reg 0 is preferable by r1024 with profit 1
   Insn 1517: point = 1658, n_alt = -1
	Hard reg 0 is preferable by r1023 with profit 1
   Insn 75: point = 1660, n_alt = 0
   Insn 1516: point = 1660, n_alt = -1
   Insn 71: point = 1661, n_alt = 2
   Insn 70: point = 1662, n_alt = 3
   Insn 69: point = 1663, n_alt = -1
   Insn 67: point = 1665, n_alt = 1
   Insn 65: point = 1667, n_alt = 0
   Insn 66: point = 1667, n_alt = 2
   Insn 1515: point = 1668, n_alt = -1
	Hard reg 0 is preferable by r1022 with profit 1
   Insn 64: point = 1670, n_alt = 2
   Insn 1514: point = 1670, n_alt = -1
   Insn 63: point = 1671, n_alt = 5
   Insn 62: point = 1672, n_alt = 0
   Insn 61: point = 1674, n_alt = 0
   Insn 60: point = 1676, n_alt = 3
   Insn 1513: point = 1677, n_alt = -1
	Hard reg 5 is preferable by r1021 with profit 1
   Insn 59: point = 1679, n_alt = 0
   Insn 1512: point = 1680, n_alt = -1
	Hard reg 5 is preferable by r1021 with profit 1
	Hard reg 1 is preferable by r1021 with profit 1
   Insn 57: point = 1682, n_alt = 0
   Insn 58: point = 1682, n_alt = 2
   Insn 1511: point = 1683, n_alt = -1
	Hard reg 0 is preferable by r1020 with profit 1
   Insn 56: point = 1685, n_alt = 2
   Insn 1510: point = 1685, n_alt = -1
   Insn 55: point = 1686, n_alt = 5
   Insn 54: point = 1687, n_alt = 0
   Insn 53: point = 1689, n_alt = 0
   Insn 52: point = 1691, n_alt = 3
   Insn 1509: point = 1692, n_alt = -1
	Hard reg 4 is preferable by r1019 with profit 1
   Insn 51: point = 1694, n_alt = 0
   Insn 1508: point = 1695, n_alt = -1
	Hard reg 4 is preferable by r1019 with profit 1
	Hard reg 1 is preferable by r1019 with profit 1
   Insn 49: point = 1697, n_alt = 0
   Insn 50: point = 1697, n_alt = 2
   Insn 48: point = 1698, n_alt = 3
   Insn 47: point = 1699, n_alt = 5
   Insn 46: point = 1700, n_alt = 0
   Insn 45: point = 1702, n_alt = 0
   Insn 44: point = 1704, n_alt = 3
   Insn 1506: point = 1705, n_alt = 5
   Insn 43: point = 1707, n_alt = 1
   Insn 1507: point = 1708, n_alt = 3
	   Creating copy r1018<-r1050@1
   Insn 1505: point = 1710, n_alt = -1
	Hard reg 0 is preferable by r1017 with profit 1
   Insn 1504: point = 1712, n_alt = -1
	Hard reg 0 is preferable by r1016 with profit 1
   Insn 42: point = 1714, n_alt = 0
   Insn 1503: point = 1714, n_alt = 3
	   Creating copy r1016<-r1052@1
   Insn 38: point = 1716, n_alt = 2
   Insn 37: point = 1717, n_alt = 3
   Insn 36: point = 1718, n_alt = -1
   Insn 34: point = 1720, n_alt = 1
   Insn 32: point = 1722, n_alt = 0
   Insn 33: point = 1722, n_alt = 2
   Insn 1502: point = 1723, n_alt = -1
	Hard reg 0 is preferable by r1015 with profit 1
   Insn 31: point = 1725, n_alt = 2
   Insn 1501: point = 1725, n_alt = 3
	   Creating copy r1015<-r1050@1
   Insn 1565: point = 1726, n_alt = -1
	   Creating copy r1050<-r1051@1
   Insn 30: point = 1728, n_alt = 5
   Insn 29: point = 1729, n_alt = 0
   Insn 28: point = 1731, n_alt = 0
   Insn 27: point = 1733, n_alt = 3
   Insn 1566: point = 1734, n_alt = -1
   Insn 1500: point = 1735, n_alt = 5
	   Creating copy r1014->r1051@1
   Insn 26: point = 1737, n_alt = 0
   Insn 1499: point = 1738, n_alt = -1
	Hard reg 1 is preferable by r1014 with profit 1
   Insn 24: point = 1740, n_alt = 0
   Insn 25: point = 1740, n_alt = 2
   Insn 1498: point = 1741, n_alt = -1
	Hard reg 0 is preferable by r1013 with profit 1
   Insn 23: point = 1743, n_alt = 2
   Insn 1497: point = 1743, n_alt = 3
	   Creating copy r1013<-r1052@1
   Insn 1567: point = 1744, n_alt = -1
	   Creating copy r1052<-r1053@1
   Insn 22: point = 1746, n_alt = 5
   Insn 21: point = 1747, n_alt = 0
   Insn 20: point = 1749, n_alt = 0
   Insn 19: point = 1751, n_alt = 3
   Insn 1568: point = 1752, n_alt = -1
   Insn 1496: point = 1753, n_alt = 5
	   Creating copy r1012->r1053@1
   Insn 18: point = 1755, n_alt = 0
   Insn 1495: point = 1756, n_alt = -1
	Hard reg 1 is preferable by r1012 with profit 1
   Insn 16: point = 1758, n_alt = 0
   Insn 17: point = 1758, n_alt = 2
   Insn 15: point = 1759, n_alt = 3
   Insn 14: point = 1760, n_alt = 5
   Insn 13: point = 1761, n_alt = 0
   Insn 12: point = 1763, n_alt = 0
   Insn 11: point = 1765, n_alt = 3
   Insn 7: point = 1766, n_alt = 5
   Insn 6: point = 1766, n_alt = 5
   Insn 5: point = 1766, n_alt = 5
   Insn 4: point = 1766, n_alt = 5
   Insn 3: point = 1766, n_alt = 5
   Insn 2: point = 1766, n_alt = 5
 r87: [1762..1763]
 r88: [1748..1749]
 r89: [1730..1731]
 r90: [1717..1718]
 r91: [1716..1766]
 r93: [1711..1712]
 r94: [1701..1702]
 r95: [1688..1689]
 r96: [1673..1674]
 r97: [1662..1663]
 r98: [1661..1766]
 r100: [1657..1658]
 r101: [1650..1651]
 r102: [1637..1638]
 r103: [1622..1623]
 r104: [1611..1612]
 r105: [1610..1766]
 r107: [1606..1607]
 r108: [1599..1600]
 r109: [1586..1587]
 r110: [1571..1572]
 r111: [1560..1561]
 r112: [1559..1766]
 r114: [1555..1556]
 r115: [169..171]
 r116: [1544..1545]
 r117: [1540..1541]
 r118: [1529..1530]
 r119: [1526..1528]
 r120: [1523..1525]
 r121: [1515..1522]
 r122: [1517..1519]
 r123: [1515..1516]
 r124: [1510..1514]
 r125: [1510..1511]
 r126: [1507..1509]
 r127: [1499..1500]
 r128: [1497..1498]
 r129: [1495..1496]
 r130: [1488..1494]
 r131: [1490..1491]
 r132: [1488..1489]
 r133: [1483..1487]
 r134: [1483..1484]
 r135: [1480..1482]
 r136: [1435..1479]
 r137: [1475..1476]
 r138: [1473..1474]
 r139: [1466..1472]
 r140: [1468..1469]
 r141: [1466..1467]
 r142: [1461..1465]
 r143: [1461..1462]
 r144: [1458..1460]
 r145: [1456..1457]
 r146: [1433..1455]
 r147: [1453..1454]
 r148: [1451..1452]
 r149: [1449..1450]
 r150: [1442..1448]
 r151: [1444..1445]
 r152: [1442..1443]
 r153: [1437..1441]
 r154: [1437..1438]
 r155: [1429..1436]
 r156: [1429..1431]
 r157: [1418..1419]
 r158: [1416..1417]
 r159: [1414..1415]
 r160: [1407..1413]
 r161: [1409..1410]
 r162: [1407..1408]
 r163: [1402..1406]
 r164: [1402..1403]
 r165: [1399..1401]
 r166: [1354..1398]
 r167: [1394..1395]
 r168: [1392..1393]
 r169: [1385..1391]
 r170: [1387..1388]
 r171: [1385..1386]
 r172: [1380..1384]
 r173: [1380..1381]
 r174: [1377..1379]
 r175: [1375..1376]
 r176: [1352..1374]
 r177: [1372..1373]
 r178: [1370..1371]
 r179: [1368..1369]
 r180: [1361..1367]
 r181: [1363..1364]
 r182: [1361..1362]
 r183: [1356..1360]
 r184: [1356..1357]
 r185: [1348..1355]
 r186: [1348..1350]
 r187: [1329..1330]
 r188: [1313..1314]
 r189: [1311..1312]
 r190: [1309..1310]
 r191: [1302..1308]
 r192: [1304..1305]
 r193: [1302..1303]
 r194: [1297..1301]
 r195: [1297..1298]
 r196: [1294..1296]
 r197: [1291..1293]
 r198: [1264..1290]
 r199: [1288..1289]
 r200: [1286..1287]
 r201: [1284..1285]
 r202: [1277..1283]
 r203: [1279..1280]
 r204: [1277..1278]
 r205: [1272..1276]
 r206: [1272..1273]
 r207: [1269..1271]
 r208: [1266..1268]
 r209: [1264..1265]
 r210: [1248..1249]
 r211: [1246..1247]
 r212: [1244..1245]
 r213: [1237..1243]
 r214: [1239..1240]
 r215: [1237..1238]
 r216: [1232..1236]
 r217: [1232..1233]
 r218: [1229..1231]
 r219: [1223..1228]
 r220: [1220..1221]
 r221: [1218..1219]
 r222: [1216..1217]
 r223: [1209..1215]
 r224: [1211..1212]
 r225: [1209..1210]
 r226: [1204..1208]
 r227: [1204..1205]
 r228: [1201..1203]
 r229: [1198..1200]
 r230: [1194..1195]
 r231: [1192..1193]
 r232: [1190..1191]
 r233: [1183..1189]
 r234: [1185..1186]
 r235: [1183..1184]
 r236: [1178..1182]
 r237: [1178..1179]
 r238: [1156..1177]
 r239: [1175..1176]
 r240: [1173..1174]
 r241: [1171..1172]
 r242: [1164..1170]
 r243: [1166..1167]
 r244: [1164..1165]
 r245: [1159..1163]
 r246: [1159..1160]
 r247: [1153..1158]
 r248: [1153..1155]
 r249: [1145..1146]
 r250: [1143..1144]
 r251: [1141..1142]
 r252: [1134..1140]
 r253: [1136..1137]
 r254: [1134..1135]
 r255: [1129..1133]
 r256: [1129..1130]
 r257: [1126..1128]
 r258: [1123..1125]
 r259: [1119..1120]
 r260: [1117..1118]
 r261: [1115..1116]
 r262: [1108..1114]
 r263: [1110..1111]
 r264: [1108..1109]
 r265: [1103..1107]
 r266: [1103..1104]
 r267: [1081..1102]
 r268: [1100..1101]
 r269: [1098..1099]
 r270: [1096..1097]
 r271: [1089..1095]
 r272: [1091..1092]
 r273: [1089..1090]
 r274: [1084..1088]
 r275: [1084..1085]
 r276: [1078..1083]
 r277: [1078..1080]
 r278: [1076..1077]
 r279: [1074..1075]
 r280: [1072..1073]
 r281: [1065..1071]
 r282: [1067..1068]
 r283: [1065..1066]
 r284: [1060..1064]
 r285: [1060..1061]
 r286: [1056..1059]
 r287: [1045..1046]
 r288: [1043..1044]
 r289: [1041..1042]
 r290: [1034..1040]
 r291: [1036..1037]
 r292: [1034..1035]
 r293: [1029..1033]
 r294: [1029..1030]
 r295: [1026..1028]
 r296: [1023..1025]
 r297: [1019..1020]
 r298: [1017..1018]
 r299: [1015..1016]
 r300: [1008..1014]
 r301: [1010..1011]
 r302: [1008..1009]
 r303: [1003..1007]
 r304: [1003..1004]
 r305: [981..1002]
 r306: [1000..1001]
 r307: [998..999]
 r308: [996..997]
 r309: [989..995]
 r310: [991..992]
 r311: [989..990]
 r312: [984..988]
 r313: [984..985]
 r314: [978..983]
 r315: [978..980]
 r316: [976..977]
 r317: [974..975]
 r318: [972..973]
 r319: [965..971]
 r320: [967..968]
 r321: [965..966]
 r322: [960..964]
 r323: [960..961]
 r324: [956..959]
 r325: [945..946]
 r326: [943..944]
 r327: [941..942]
 r328: [934..940]
 r329: [936..937]
 r330: [934..935]
 r331: [929..933]
 r332: [929..930]
 r333: [926..928]
 r334: [923..925]
 r335: [919..920]
 r336: [917..918]
 r337: [915..916]
 r338: [908..914]
 r339: [910..911]
 r340: [908..909]
 r341: [903..907]
 r342: [903..904]
 r343: [881..902]
 r344: [900..901]
 r345: [898..899]
 r346: [896..897]
 r347: [889..895]
 r348: [891..892]
 r349: [889..890]
 r350: [884..888]
 r351: [884..885]
 r352: [878..883]
 r353: [878..880]
 r354: [876..877]
 r355: [874..875]
 r356: [872..873]
 r357: [865..871]
 r358: [867..868]
 r359: [865..866]
 r360: [860..864]
 r361: [860..861]
 r362: [856..859]
 r363: [843..844]
 r364: [841..842]
 r365: [839..840]
 r366: [832..838]
 r367: [834..835]
 r368: [832..833]
 r369: [827..831]
 r370: [827..828]
 r371: [824..826]
 r372: [814..815]
 r373: [812..813]
 r374: [810..811]
 r375: [803..809]
 r376: [805..806]
 r377: [803..804]
 r378: [798..802]
 r379: [798..799]
 r380: [795..797]
 r381: [750..794]
 r382: [792..793]
 r383: [790..791]
 r384: [788..789]
 r385: [781..787]
 r386: [783..784]
 r387: [781..782]
 r388: [776..780]
 r389: [776..777]
 r390: [773..775]
 r391: [771..772]
 r392: [748..770]
 r393: [768..769]
 r394: [766..767]
 r395: [764..765]
 r396: [757..763]
 r397: [759..760]
 r398: [757..758]
 r399: [752..756]
 r400: [752..753]
 r401: [744..751]
 r402: [744..746]
 r403: [733..734]
 r404: [731..732]
 r405: [729..730]
 r406: [722..728]
 r407: [724..725]
 r408: [722..723]
 r409: [717..721]
 r410: [717..718]
 r411: [714..716]
 r412: [669..713]
 r413: [711..712]
 r414: [709..710]
 r415: [707..708]
 r416: [700..706]
 r417: [702..703]
 r418: [700..701]
 r419: [695..699]
 r420: [695..696]
 r421: [692..694]
 r422: [690..691]
 r423: [667..689]
 r424: [687..688]
 r425: [685..686]
 r426: [683..684]
 r427: [676..682]
 r428: [678..679]
 r429: [676..677]
 r430: [671..675]
 r431: [671..672]
 r432: [663..670]
 r433: [663..665]
 r434: [652..653]
 r435: [650..651]
 r436: [648..649]
 r437: [641..647]
 r438: [643..644]
 r439: [641..642]
 r440: [636..640]
 r441: [636..637]
 r442: [633..635]
 r443: [588..632]
 r444: [630..631]
 r445: [628..629]
 r446: [626..627]
 r447: [619..625]
 r448: [621..622]
 r449: [619..620]
 r450: [614..618]
 r451: [614..615]
 r452: [611..613]
 r453: [609..610]
 r454: [586..608]
 r455: [606..607]
 r456: [604..605]
 r457: [602..603]
 r458: [595..601]
 r459: [597..598]
 r460: [595..596]
 r461: [590..594]
 r462: [590..591]
 r463: [582..589]
 r464: [582..584]
 r465: [565..566]
 r466: [563..564]
 r467: [561..562]
 r468: [552..560]
 r469: [556..557]
 r470: [554..555]
 r471: [552..553]
 r472: [545..551]
 r473: [547..548]
 r474: [545..546]
 r475: [542..544]
 r476: [536..541]
 r477: [533..534]
 r478: [531..532]
 r479: [529..530]
 r480: [520..528]
 r481: [524..525]
 r482: [522..523]
 r483: [520..521]
 r484: [513..519]
 r485: [515..516]
 r486: [513..514]
 r487: [510..512]
 r488: [507..509]
 r489: [499..500]
 r490: [497..498]
 r491: [495..496]
 r492: [488..494]
 r493: [490..491]
 r494: [488..489]
 r495: [481..487]
 r496: [483..484]
 r497: [481..482]
 r498: [478..480]
 r499: [455..477]
 r500: [475..476]
 r501: [473..474]
 r502: [471..472]
 r503: [464..470]
 r504: [466..467]
 r505: [464..465]
 r506: [457..463]
 r507: [459..460]
 r508: [457..458]
 r509: [452..456]
 r510: [452..454]
 r511: [441..442]
 r512: [439..440]
 r513: [437..438]
 r514: [430..436]
 r515: [432..433]
 r516: [430..431]
 r517: [423..429]
 r518: [425..426]
 r519: [423..424]
 r520: [420..422]
 r521: [397..419]
 r522: [417..418]
 r523: [415..416]
 r524: [413..414]
 r525: [406..412]
 r526: [408..409]
 r527: [406..407]
 r528: [399..405]
 r529: [401..402]
 r530: [399..400]
 r531: [394..398]
 r532: [394..396]
 r533: [385..386]
 r534: [370..371]
 r535: [368..369]
 r536: [366..367]
 r537: [359..365]
 r538: [361..362]
 r539: [359..360]
 r540: [354..358]
 r541: [354..355]
 r542: [351..353]
 r543: [343..344]
 r544: [341..342]
 r545: [339..340]
 r546: [332..338]
 r547: [334..335]
 r548: [332..333]
 r549: [327..331]
 r550: [327..328]
 r551: [324..326]
 r552: [279..323]
 r553: [321..322]
 r554: [319..320]
 r555: [317..318]
 r556: [310..316]
 r557: [312..313]
 r558: [310..311]
 r559: [305..309]
 r560: [305..306]
 r561: [302..304]
 r562: [300..301]
 r563: [277..299]
 r564: [297..298]
 r565: [295..296]
 r566: [293..294]
 r567: [286..292]
 r568: [288..289]
 r569: [286..287]
 r570: [281..285]
 r571: [281..282]
 r572: [273..280]
 r573: [273..275]
 r574: [262..263]
 r575: [260..261]
 r576: [258..259]
 r577: [251..257]
 r578: [253..254]
 r579: [251..252]
 r580: [246..250]
 r581: [246..247]
 r582: [243..245]
 r583: [198..242]
 r584: [240..241]
 r585: [238..239]
 r586: [236..237]
 r587: [229..235]
 r588: [231..232]
 r589: [229..230]
 r590: [224..228]
 r591: [224..225]
 r592: [221..223]
 r593: [219..220]
 r594: [196..218]
 r595: [216..217]
 r596: [214..215]
 r597: [212..213]
 r598: [205..211]
 r599: [207..208]
 r600: [205..206]
 r601: [200..204]
 r602: [200..201]
 r603: [192..199]
 r604: [192..194]
 r605: [175..176]
 r606: [173..174]
 r607: [161..162]
 r608: [26..27]
 r609: [156..157]
 r610: [140..141]
 r611: [138..139]
 r612: [136..137]
 r613: [129..135]
 r614: [131..132]
 r615: [129..130]
 r616: [124..128]
 r617: [124..125]
 r618: [121..123]
 r619: [54..120]
 r620: [116..117]
 r621: [114..115]
 r622: [107..113]
 r623: [109..110]
 r624: [107..108]
 r625: [102..106]
 r626: [102..103]
 r627: [99..101]
 r628: [75..98]
 r629: [96..97]
 r630: [94..95]
 r631: [92..93]
 r632: [85..91]
 r633: [87..88]
 r634: [85..86]
 r635: [80..84]
 r636: [80..81]
 r637: [77..79]
 r638: [75..76]
 r639: [52..74]
 r640: [72..73]
 r641: [70..71]
 r642: [68..69]
 r643: [61..67]
 r644: [63..64]
 r645: [61..62]
 r646: [56..60]
 r647: [56..57]
 r648: [48..55]
 r649: [48..50]
 r650: [31..32]
 r651: [29..30]
 r652: [1755..1759]
 r653: [167..1752]
 r654: [1737..1741]
 r655: [167..1734]
 r656: [1721..1723]
 r657: [1719..1720]
 r661: [167..1705]
 r662: [1694..1698]
 r663: [167..1692]
 r664: [1679..1683]
 r665: [167..1677]
 r666: [1666..1668]
 r667: [1664..1665]
 r671: [167..1654]
 r672: [1643..1647]
 r673: [24..1641]
 r674: [1628..1632]
 r675: [24..1626]
 r676: [1615..1617]
 r677: [1613..1614]
 r681: [24..1603]
 r682: [1592..1596]
 r683: [24..1590]
 r684: [1577..1581]
 r685: [24..1575]
 r686: [1564..1566]
 r687: [1562..1563]
 r691: [24..1552]
 r692: [167..1547]
 r693: [167..168]
 r694: [1335..1536]
 r695: [1335..1336]
 r696: [1340..1532]
 r697: [1340..1341]
 r698: [1426..1502]
 r699: [1426..1427]
 r700: [1345..1421]
 r701: [1345..1346]
 r702: [569..1328]
 r703: [569..570]
 r704: [1316..1320]
 r705: [1252..1317]
 r706: [1252..1253]
 r707: [1261..1263]
 r708: [1148..1152]
 r709: [1053..1149]
 r710: [1053..1054]
 r711: [953..1048]
 r712: [953..954]
 r713: [853..948]
 r714: [853..854]
 r715: [846..850]
 r716: [574..847]
 r717: [574..575]
 r718: [817..821]
 r719: [741..818]
 r720: [741..742]
 r721: [660..736]
 r722: [660..661]
 r723: [579..655]
 r724: [579..580]
 r725: [449..502]
 r726: [449..450]
 r727: [391..444]
 r728: [391..392]
 r729: [383..384]
 r730: [179..180]
 r731: [373..377]
 r732: [184..374]
 r733: [184..185]
 r734: [270..346]
 r735: [270..271]
 r736: [189..265]
 r737: [189..190]
 r738: [159..160]
 r739: [24..25]
 r740: [35..151]
 r741: [35..36]
 r742: [40..147]
 r743: [40..41]
 r744: [45..143]
 r745: [45..46]
 r746: [1764..1765]
 r747: [1760..1761]
 r748: [1757..1758]
 r749: [1750..1751]
 r750: [1746..1747]
 r751: [1739..1740]
 r752: [1732..1733]
 r753: [1728..1729]
 r754: [1721..1722]
 r755: [1703..1704]
 r756: [1699..1700]
 r757: [1696..1697]
 r758: [1690..1691]
 r759: [1686..1687]
 r760: [1681..1682]
 r761: [1675..1676]
 r762: [1671..1672]
 r763: [1666..1667]
 r764: [1652..1653]
 r765: [1648..1649]
 r766: [1645..1646]
 r767: [1639..1640]
 r768: [1635..1636]
 r769: [1630..1631]
 r770: [1624..1625]
 r771: [1620..1621]
 r772: [1615..1616]
 r773: [1601..1602]
 r774: [1597..1598]
 r775: [1594..1595]
 r776: [1588..1589]
 r777: [1584..1585]
 r778: [1579..1580]
 r779: [1573..1574]
 r780: [1569..1570]
 r781: [1564..1565]
 r782: [1550..1551]
 r783: [1542..1543]
 r784: [1537..1538]
 r785: [1533..1534]
 r786: [1520..1521]
 r787: [1512..1513]
 r788: [1507..1508]
 r789: [1505..1506]
 r790: [1503..1504]
 r791: [1492..1493]
 r792: [1485..1486]
 r793: [1480..1481]
 r794: [1477..1478]
 r795: [1470..1471]
 r796: [1463..1464]
 r797: [1458..1459]
 r798: [1446..1447]
 r799: [1439..1440]
 r800: [1429..1430]
 r801: [1422..1423]
 r802: [1411..1412]
 r803: [1404..1405]
 r804: [1399..1400]
 r805: [1396..1397]
 r806: [1389..1390]
 r807: [1382..1383]
 r808: [1377..1378]
 r809: [1365..1366]
 r810: [1358..1359]
 r811: [1348..1349]
 r812: [1331..1332]
 r815: [1323..1324]
 r816: [1325..1326]
 r817: [1321..1322]
 r818: [1318..1319]
 r819: [1306..1307]
 r820: [1299..1300]
 r821: [1294..1295]
 r822: [1291..1292]
 r823: [1281..1282]
 r824: [1274..1275]
 r825: [1269..1270]
 r826: [1266..1267]
 r827: [1261..1262]
 r828: [1256..1257]
 r829: [1241..1242]
 r830: [1234..1235]
 r831: [1229..1230]
 r832: [1226..1227]
 r833: [1223..1224]
 r834: [10..11]
 r835: [8..9]
 r836: [6..7]
 r837: [3..5]
 r838: [2..4]
 r839: [0..1]
 r840: [1213..1214]
 r841: [1206..1207]
 r842: [1201..1202]
 r843: [1196..1197]
 r844: [1198..1199]
 r845: [1187..1188]
 r846: [1180..1181]
 r847: [1168..1169]
 r848: [1161..1162]
 r849: [1156..1157]
 r850: [1153..1154]
 r851: [1150..1151]
 r852: [1138..1139]
 r853: [1131..1132]
 r854: [1126..1127]
 r855: [1121..1122]
 r856: [1123..1124]
 r857: [1112..1113]
 r858: [1105..1106]
 r859: [1093..1094]
 r860: [1086..1087]
 r861: [1081..1082]
 r862: [1078..1079]
 r863: [1069..1070]
 r864: [1062..1063]
 r865: [1056..1058]
 r866: [1056..1057]
 r867: [1049..1050]
 r868: [1038..1039]
 r869: [1031..1032]
 r870: [1026..1027]
 r871: [1021..1022]
 r872: [1023..1024]
 r873: [1012..1013]
 r874: [1005..1006]
 r875: [993..994]
 r876: [986..987]
 r877: [981..982]
 r878: [978..979]
 r879: [969..970]
 r880: [962..963]
 r881: [956..958]
 r882: [956..957]
 r883: [949..950]
 r884: [938..939]
 r885: [931..932]
 r886: [926..927]
 r887: [921..922]
 r888: [923..924]
 r889: [912..913]
 r890: [905..906]
 r891: [893..894]
 r892: [886..887]
 r893: [881..882]
 r894: [878..879]
 r895: [869..870]
 r896: [862..863]
 r897: [856..858]
 r898: [856..857]
 r899: [848..849]
 r900: [836..837]
 r901: [829..830]
 r902: [824..825]
 r903: [822..823]
 r904: [819..820]
 r905: [807..808]
 r906: [800..801]
 r907: [795..796]
 r908: [785..786]
 r909: [778..779]
 r910: [773..774]
 r911: [761..762]
 r912: [754..755]
 r913: [744..745]
 r914: [737..738]
 r915: [726..727]
 r916: [719..720]
 r917: [714..715]
 r918: [704..705]
 r919: [697..698]
 r920: [692..693]
 r921: [680..681]
 r922: [673..674]
 r923: [663..664]
 r924: [656..657]
 r925: [645..646]
 r926: [638..639]
 r927: [633..634]
 r928: [623..624]
 r929: [616..617]
 r930: [611..612]
 r931: [599..600]
 r932: [592..593]
 r933: [582..583]
 r934: [558..559]
 r935: [549..550]
 r936: [542..543]
 r937: [539..540]
 r938: [536..537]
 r939: [22..23]
 r940: [20..21]
 r941: [18..19]
 r942: [15..17]
 r943: [14..16]
 r944: [12..13]
 r945: [526..527]
 r946: [517..518]
 r947: [510..511]
 r948: [505..506]
 r949: [507..508]
 r950: [503..504]
 r951: [492..493]
 r952: [485..486]
 r953: [478..479]
 r954: [468..469]
 r955: [461..462]
 r956: [452..453]
 r957: [445..446]
 r958: [434..435]
 r959: [427..428]
 r960: [420..421]
 r961: [410..411]
 r962: [403..404]
 r963: [394..395]
 r964: [387..388]
 r967: [378..379]
 r968: [380..381]
 r969: [375..376]
 r970: [363..364]
 r971: [356..357]
 r972: [351..352]
 r973: [349..350]
 r974: [347..348]
 r975: [336..337]
 r976: [329..330]
 r977: [324..325]
 r978: [314..315]
 r979: [307..308]
 r980: [302..303]
 r981: [290..291]
 r982: [283..284]
 r983: [273..274]
 r984: [266..267]
 r985: [255..256]
 r986: [248..249]
 r987: [243..244]
 r988: [233..234]
 r989: [226..227]
 r990: [221..222]
 r991: [209..210]
 r992: [202..203]
 r993: [192..193]
 r994: [163..164]
 r995: [154..155]
 r996: [152..153]
 r997: [148..149]
 r998: [144..145]
 r999: [133..134]
 r1000: [126..127]
 r1001: [121..122]
 r1002: [118..119]
 r1003: [111..112]
 r1004: [104..105]
 r1005: [99..100]
 r1006: [89..90]
 r1007: [82..83]
 r1008: [77..78]
 r1009: [65..66]
 r1010: [58..59]
 r1011: [48..49]
 r1012: [1754..1756]
 r1013: [1742..1743]
 r1014: [1736..1738]
 r1015: [1724..1725]
 r1016: [1713..1714]
 r1017: [1706..1710]
 r1018: [1707..1708]
 r1019: [1693..1695]
 r1020: [1684..1685]
 r1021: [1678..1680]
 r1022: [1669..1670]
 r1023: [1659..1660]
 r1024: [1655..1656]
 r1025: [1642..1644]
 r1026: [1633..1634]
 r1027: [1627..1629]
 r1028: [1618..1619]
 r1029: [1608..1609]
 r1030: [1604..1605]
 r1031: [1591..1593]
 r1032: [1582..1583]
 r1033: [1576..1578]
 r1034: [1567..1568]
 r1035: [1557..1558]
 r1036: [1553..1554]
 r1037: [1548..1549]
 r1038: [169..170]
 r1039: [1526..1527]
 r1040: [1523..1524]
 r1041: [1517..1518]
 r1042: [1432..1434]
 r1043: [1351..1353]
 r1044: [747..749]
 r1045: [666..668]
 r1046: [585..587]
 r1047: [276..278]
 r1048: [195..197]
 r1049: [51..53]
 r1050: [1709..1726]
 r1051: [1727..1735]
 r1052: [1715..1744]
 r1053: [1745..1753]
Compressing live ranges: from 1767 to 1388 - 78%
Ranges after the compression:
 r87: [1384..1385]
 r88: [1374..1375]
 r89: [1362..1363]
 r90: [1352..1353]
 r91: [1352..1387]
 r93: [1348..1349]
 r94: [1340..1341]
 r95: [1330..1331]
 r96: [1318..1319]
 r97: [1308..1309]
 r98: [1308..1387]
 r100: [1304..1305]
 r101: [1298..1299]
 r102: [1288..1289]
 r103: [1276..1277]
 r104: [1266..1267]
 r105: [1266..1387]
 r107: [1262..1263]
 r108: [1256..1257]
 r109: [1246..1247]
 r110: [1234..1235]
 r111: [1224..1225]
 r112: [1224..1387]
 r114: [1220..1221]
 r115: [130..131]
 r116: [1212..1213]
 r117: [1208..1209]
 r118: [1202..1203]
 r119: [1200..1201]
 r120: [1198..1199]
 r121: [1192..1197]
 r122: [1194..1195]
 r123: [1192..1193]
 r124: [1188..1191]
 r125: [1188..1189]
 r126: [1186..1187]
 r127: [1180..1181]
 r128: [1178..1179]
 r129: [1176..1177]
 r130: [1170..1175]
 r131: [1172..1173]
 r132: [1170..1171]
 r133: [1166..1169]
 r134: [1166..1167]
 r135: [1164..1165]
 r136: [1126..1163]
 r137: [1160..1161]
 r138: [1158..1159]
 r139: [1152..1157]
 r140: [1154..1155]
 r141: [1152..1153]
 r142: [1148..1151]
 r143: [1148..1149]
 r144: [1146..1147]
 r145: [1144..1145]
 r146: [1124..1143]
 r147: [1142..1143]
 r148: [1140..1141]
 r149: [1138..1139]
 r150: [1132..1137]
 r151: [1134..1135]
 r152: [1132..1133]
 r153: [1128..1131]
 r154: [1128..1129]
 r155: [1122..1127]
 r156: [1122..1123]
 r157: [1116..1117]
 r158: [1114..1115]
 r159: [1112..1113]
 r160: [1106..1111]
 r161: [1108..1109]
 r162: [1106..1107]
 r163: [1102..1105]
 r164: [1102..1103]
 r165: [1100..1101]
 r166: [1062..1099]
 r167: [1096..1097]
 r168: [1094..1095]
 r169: [1088..1093]
 r170: [1090..1091]
 r171: [1088..1089]
 r172: [1084..1087]
 r173: [1084..1085]
 r174: [1082..1083]
 r175: [1080..1081]
 r176: [1060..1079]
 r177: [1078..1079]
 r178: [1076..1077]
 r179: [1074..1075]
 r180: [1068..1073]
 r181: [1070..1071]
 r182: [1068..1069]
 r183: [1064..1067]
 r184: [1064..1065]
 r185: [1058..1063]
 r186: [1058..1059]
 r187: [1048..1049]
 r188: [1036..1037]
 r189: [1034..1035]
 r190: [1032..1033]
 r191: [1026..1031]
 r192: [1028..1029]
 r193: [1026..1027]
 r194: [1022..1025]
 r195: [1022..1023]
 r196: [1020..1021]
 r197: [1018..1019]
 r198: [996..1017]
 r199: [1016..1017]
 r200: [1014..1015]
 r201: [1012..1013]
 r202: [1006..1011]
 r203: [1008..1009]
 r204: [1006..1007]
 r205: [1002..1005]
 r206: [1002..1003]
 r207: [1000..1001]
 r208: [998..999]
 r209: [996..997]
 r210: [988..989]
 r211: [986..987]
 r212: [984..985]
 r213: [978..983]
 r214: [980..981]
 r215: [978..979]
 r216: [974..977]
 r217: [974..975]
 r218: [972..973]
 r219: [968..971]
 r220: [966..967]
 r221: [964..965]
 r222: [962..963]
 r223: [956..961]
 r224: [958..959]
 r225: [956..957]
 r226: [952..955]
 r227: [952..953]
 r228: [950..951]
 r229: [948..949]
 r230: [944..945]
 r231: [942..943]
 r232: [940..941]
 r233: [934..939]
 r234: [936..937]
 r235: [934..935]
 r236: [930..933]
 r237: [930..931]
 r238: [912..929]
 r239: [928..929]
 r240: [926..927]
 r241: [924..925]
 r242: [918..923]
 r243: [920..921]
 r244: [918..919]
 r245: [914..917]
 r246: [914..915]
 r247: [910..913]
 r248: [910..911]
 r249: [904..905]
 r250: [902..903]
 r251: [900..901]
 r252: [894..899]
 r253: [896..897]
 r254: [894..895]
 r255: [890..893]
 r256: [890..891]
 r257: [888..889]
 r258: [886..887]
 r259: [882..883]
 r260: [880..881]
 r261: [878..879]
 r262: [872..877]
 r263: [874..875]
 r264: [872..873]
 r265: [868..871]
 r266: [868..869]
 r267: [850..867]
 r268: [866..867]
 r269: [864..865]
 r270: [862..863]
 r271: [856..861]
 r272: [858..859]
 r273: [856..857]
 r274: [852..855]
 r275: [852..853]
 r276: [848..851]
 r277: [848..849]
 r278: [846..847]
 r279: [844..845]
 r280: [842..843]
 r281: [836..841]
 r282: [838..839]
 r283: [836..837]
 r284: [832..835]
 r285: [832..833]
 r286: [830..831]
 r287: [824..825]
 r288: [822..823]
 r289: [820..821]
 r290: [814..819]
 r291: [816..817]
 r292: [814..815]
 r293: [810..813]
 r294: [810..811]
 r295: [808..809]
 r296: [806..807]
 r297: [802..803]
 r298: [800..801]
 r299: [798..799]
 r300: [792..797]
 r301: [794..795]
 r302: [792..793]
 r303: [788..791]
 r304: [788..789]
 r305: [770..787]
 r306: [786..787]
 r307: [784..785]
 r308: [782..783]
 r309: [776..781]
 r310: [778..779]
 r311: [776..777]
 r312: [772..775]
 r313: [772..773]
 r314: [768..771]
 r315: [768..769]
 r316: [766..767]
 r317: [764..765]
 r318: [762..763]
 r319: [756..761]
 r320: [758..759]
 r321: [756..757]
 r322: [752..755]
 r323: [752..753]
 r324: [750..751]
 r325: [744..745]
 r326: [742..743]
 r327: [740..741]
 r328: [734..739]
 r329: [736..737]
 r330: [734..735]
 r331: [730..733]
 r332: [730..731]
 r333: [728..729]
 r334: [726..727]
 r335: [722..723]
 r336: [720..721]
 r337: [718..719]
 r338: [712..717]
 r339: [714..715]
 r340: [712..713]
 r341: [708..711]
 r342: [708..709]
 r343: [690..707]
 r344: [706..707]
 r345: [704..705]
 r346: [702..703]
 r347: [696..701]
 r348: [698..699]
 r349: [696..697]
 r350: [692..695]
 r351: [692..693]
 r352: [688..691]
 r353: [688..689]
 r354: [686..687]
 r355: [684..685]
 r356: [682..683]
 r357: [676..681]
 r358: [678..679]
 r359: [676..677]
 r360: [672..675]
 r361: [672..673]
 r362: [670..671]
 r363: [662..663]
 r364: [660..661]
 r365: [658..659]
 r366: [652..657]
 r367: [654..655]
 r368: [652..653]
 r369: [648..651]
 r370: [648..649]
 r371: [646..647]
 r372: [638..639]
 r373: [636..637]
 r374: [634..635]
 r375: [628..633]
 r376: [630..631]
 r377: [628..629]
 r378: [624..627]
 r379: [624..625]
 r380: [622..623]
 r381: [584..621]
 r382: [620..621]
 r383: [618..619]
 r384: [616..617]
 r385: [610..615]
 r386: [612..613]
 r387: [610..611]
 r388: [606..609]
 r389: [606..607]
 r390: [604..605]
 r391: [602..603]
 r392: [582..601]
 r393: [600..601]
 r394: [598..599]
 r395: [596..597]
 r396: [590..595]
 r397: [592..593]
 r398: [590..591]
 r399: [586..589]
 r400: [586..587]
 r401: [580..585]
 r402: [580..581]
 r403: [574..575]
 r404: [572..573]
 r405: [570..571]
 r406: [564..569]
 r407: [566..567]
 r408: [564..565]
 r409: [560..563]
 r410: [560..561]
 r411: [558..559]
 r412: [520..557]
 r413: [556..557]
 r414: [554..555]
 r415: [552..553]
 r416: [546..551]
 r417: [548..549]
 r418: [546..547]
 r419: [542..545]
 r420: [542..543]
 r421: [540..541]
 r422: [538..539]
 r423: [518..537]
 r424: [536..537]
 r425: [534..535]
 r426: [532..533]
 r427: [526..531]
 r428: [528..529]
 r429: [526..527]
 r430: [522..525]
 r431: [522..523]
 r432: [516..521]
 r433: [516..517]
 r434: [510..511]
 r435: [508..509]
 r436: [506..507]
 r437: [500..505]
 r438: [502..503]
 r439: [500..501]
 r440: [496..499]
 r441: [496..497]
 r442: [494..495]
 r443: [456..493]
 r444: [492..493]
 r445: [490..491]
 r446: [488..489]
 r447: [482..487]
 r448: [484..485]
 r449: [482..483]
 r450: [478..481]
 r451: [478..479]
 r452: [476..477]
 r453: [474..475]
 r454: [454..473]
 r455: [472..473]
 r456: [470..471]
 r457: [468..469]
 r458: [462..467]
 r459: [464..465]
 r460: [462..463]
 r461: [458..461]
 r462: [458..459]
 r463: [452..457]
 r464: [452..453]
 r465: [444..445]
 r466: [442..443]
 r467: [440..441]
 r468: [432..439]
 r469: [436..437]
 r470: [434..435]
 r471: [432..433]
 r472: [426..431]
 r473: [428..429]
 r474: [426..427]
 r475: [424..425]
 r476: [420..423]
 r477: [418..419]
 r478: [416..417]
 r479: [414..415]
 r480: [406..413]
 r481: [410..411]
 r482: [408..409]
 r483: [406..407]
 r484: [400..405]
 r485: [402..403]
 r486: [400..401]
 r487: [398..399]
 r488: [396..397]
 r489: [390..391]
 r490: [388..389]
 r491: [386..387]
 r492: [380..385]
 r493: [382..383]
 r494: [380..381]
 r495: [374..379]
 r496: [376..377]
 r497: [374..375]
 r498: [372..373]
 r499: [352..371]
 r500: [370..371]
 r501: [368..369]
 r502: [366..367]
 r503: [360..365]
 r504: [362..363]
 r505: [360..361]
 r506: [354..359]
 r507: [356..357]
 r508: [354..355]
 r509: [350..353]
 r510: [350..351]
 r511: [344..345]
 r512: [342..343]
 r513: [340..341]
 r514: [334..339]
 r515: [336..337]
 r516: [334..335]
 r517: [328..333]
 r518: [330..331]
 r519: [328..329]
 r520: [326..327]
 r521: [306..325]
 r522: [324..325]
 r523: [322..323]
 r524: [320..321]
 r525: [314..319]
 r526: [316..317]
 r527: [314..315]
 r528: [308..313]
 r529: [310..311]
 r530: [308..309]
 r531: [304..307]
 r532: [304..305]
 r533: [298..299]
 r534: [286..287]
 r535: [284..285]
 r536: [282..283]
 r537: [276..281]
 r538: [278..279]
 r539: [276..277]
 r540: [272..275]
 r541: [272..273]
 r542: [270..271]
 r543: [264..265]
 r544: [262..263]
 r545: [260..261]
 r546: [254..259]
 r547: [256..257]
 r548: [254..255]
 r549: [250..253]
 r550: [250..251]
 r551: [248..249]
 r552: [210..247]
 r553: [246..247]
 r554: [244..245]
 r555: [242..243]
 r556: [236..241]
 r557: [238..239]
 r558: [236..237]
 r559: [232..235]
 r560: [232..233]
 r561: [230..231]
 r562: [228..229]
 r563: [208..227]
 r564: [226..227]
 r565: [224..225]
 r566: [222..223]
 r567: [216..221]
 r568: [218..219]
 r569: [216..217]
 r570: [212..215]
 r571: [212..213]
 r572: [206..211]
 r573: [206..207]
 r574: [200..201]
 r575: [198..199]
 r576: [196..197]
 r577: [190..195]
 r578: [192..193]
 r579: [190..191]
 r580: [186..189]
 r581: [186..187]
 r582: [184..185]
 r583: [146..183]
 r584: [182..183]
 r585: [180..181]
 r586: [178..179]
 r587: [172..177]
 r588: [174..175]
 r589: [172..173]
 r590: [168..171]
 r591: [168..169]
 r592: [166..167]
 r593: [164..165]
 r594: [144..163]
 r595: [162..163]
 r596: [160..161]
 r597: [158..159]
 r598: [152..157]
 r599: [154..155]
 r600: [152..153]
 r601: [148..151]
 r602: [148..149]
 r603: [142..147]
 r604: [142..143]
 r605: [134..135]
 r606: [132..133]
 r607: [124..125]
 r608: [22..23]
 r609: [120..121]
 r610: [110..111]
 r611: [108..109]
 r612: [106..107]
 r613: [100..105]
 r614: [102..103]
 r615: [100..101]
 r616: [96..99]
 r617: [96..97]
 r618: [94..95]
 r619: [38..93]
 r620: [90..91]
 r621: [88..89]
 r622: [82..87]
 r623: [84..85]
 r624: [82..83]
 r625: [78..81]
 r626: [78..79]
 r627: [76..77]
 r628: [56..75]
 r629: [74..75]
 r630: [72..73]
 r631: [70..71]
 r632: [64..69]
 r633: [66..67]
 r634: [64..65]
 r635: [60..63]
 r636: [60..61]
 r637: [58..59]
 r638: [56..57]
 r639: [36..55]
 r640: [54..55]
 r641: [52..53]
 r642: [50..51]
 r643: [44..49]
 r644: [46..47]
 r645: [44..45]
 r646: [40..43]
 r647: [40..41]
 r648: [34..39]
 r649: [34..35]
 r650: [26..27]
 r651: [24..25]
 r652: [1378..1381]
 r653: [128..1377]
 r654: [1366..1369]
 r655: [128..1365]
 r656: [1356..1357]
 r657: [1354..1355]
 r661: [128..1343]
 r662: [1334..1337]
 r663: [128..1333]
 r664: [1322..1325]
 r665: [128..1321]
 r666: [1312..1313]
 r667: [1310..1311]
 r671: [128..1301]
 r672: [1292..1295]
 r673: [20..1291]
 r674: [1280..1283]
 r675: [20..1279]
 r676: [1270..1271]
 r677: [1268..1269]
 r681: [20..1259]
 r682: [1250..1253]
 r683: [20..1249]
 r684: [1238..1241]
 r685: [20..1237]
 r686: [1228..1229]
 r687: [1226..1227]
 r691: [20..1217]
 r692: [128..1213]
 r693: [128..129]
 r694: [1052..1205]
 r695: [1052..1053]
 r696: [1054..1203]
 r697: [1054..1055]
 r698: [1120..1181]
 r699: [1120..1121]
 r700: [1056..1117]
 r701: [1056..1057]
 r702: [446..1047]
 r703: [446..447]
 r704: [1038..1041]
 r705: [990..1039]
 r706: [990..991]
 r707: [994..995]
 r708: [906..909]
 r709: [828..907]
 r710: [828..829]
 r711: [748..825]
 r712: [748..749]
 r713: [668..745]
 r714: [668..669]
 r715: [664..667]
 r716: [448..665]
 r717: [448..449]
 r718: [640..643]
 r719: [578..641]
 r720: [578..579]
 r721: [514..575]
 r722: [514..515]
 r723: [450..511]
 r724: [450..451]
 r725: [348..391]
 r726: [348..349]
 r727: [302..345]
 r728: [302..303]
 r729: [296..297]
 r730: [136..137]
 r731: [288..291]
 r732: [138..289]
 r733: [138..139]
 r734: [204..265]
 r735: [204..205]
 r736: [140..201]
 r737: [140..141]
 r738: [122..123]
 r739: [20..21]
 r740: [28..115]
 r741: [28..29]
 r742: [30..113]
 r743: [30..31]
 r744: [32..111]
 r745: [32..33]
 r746: [1386..1387]
 r747: [1382..1383]
 r748: [1380..1381]
 r749: [1376..1377]
 r750: [1372..1373]
 r751: [1368..1369]
 r752: [1364..1365]
 r753: [1360..1361]
 r754: [1356..1357]
 r755: [1342..1343]
 r756: [1338..1339]
 r757: [1336..1337]
 r758: [1332..1333]
 r759: [1328..1329]
 r760: [1324..1325]
 r761: [1320..1321]
 r762: [1316..1317]
 r763: [1312..1313]
 r764: [1300..1301]
 r765: [1296..1297]
 r766: [1294..1295]
 r767: [1290..1291]
 r768: [1286..1287]
 r769: [1282..1283]
 r770: [1278..1279]
 r771: [1274..1275]
 r772: [1270..1271]
 r773: [1258..1259]
 r774: [1254..1255]
 r775: [1252..1253]
 r776: [1248..1249]
 r777: [1244..1245]
 r778: [1240..1241]
 r779: [1236..1237]
 r780: [1232..1233]
 r781: [1228..1229]
 r782: [1216..1217]
 r783: [1210..1211]
 r784: [1206..1207]
 r785: [1204..1205]
 r786: [1196..1197]
 r787: [1190..1191]
 r788: [1186..1187]
 r789: [1184..1185]
 r790: [1182..1183]
 r791: [1174..1175]
 r792: [1168..1169]
 r793: [1164..1165]
 r794: [1162..1163]
 r795: [1156..1157]
 r796: [1150..1151]
 r797: [1146..1147]
 r798: [1136..1137]
 r799: [1130..1131]
 r800: [1122..1123]
 r801: [1118..1119]
 r802: [1110..1111]
 r803: [1104..1105]
 r804: [1100..1101]
 r805: [1098..1099]
 r806: [1092..1093]
 r807: [1086..1087]
 r808: [1082..1083]
 r809: [1072..1073]
 r810: [1066..1067]
 r811: [1058..1059]
 r812: [1050..1051]
 r815: [1044..1045]
 r816: [1046..1047]
 r817: [1042..1043]
 r818: [1040..1041]
 r819: [1030..1031]
 r820: [1024..1025]
 r821: [1020..1021]
 r822: [1018..1019]
 r823: [1010..1011]
 r824: [1004..1005]
 r825: [1000..1001]
 r826: [998..999]
 r827: [994..995]
 r828: [992..993]
 r829: [982..983]
 r830: [976..977]
 r831: [972..973]
 r832: [970..971]
 r833: [968..969]
 r834: [8..9]
 r835: [6..7]
 r836: [4..5]
 r837: [2..3]
 r838: [2..3]
 r839: [0..1]
 r840: [960..961]
 r841: [954..955]
 r842: [950..951]
 r843: [946..947]
 r844: [948..949]
 r845: [938..939]
 r846: [932..933]
 r847: [922..923]
 r848: [916..917]
 r849: [912..913]
 r850: [910..911]
 r851: [908..909]
 r852: [898..899]
 r853: [892..893]
 r854: [888..889]
 r855: [884..885]
 r856: [886..887]
 r857: [876..877]
 r858: [870..871]
 r859: [860..861]
 r860: [854..855]
 r861: [850..851]
 r862: [848..849]
 r863: [840..841]
 r864: [834..835]
 r865: [830..831]
 r866: [830..831]
 r867: [826..827]
 r868: [818..819]
 r869: [812..813]
 r870: [808..809]
 r871: [804..805]
 r872: [806..807]
 r873: [796..797]
 r874: [790..791]
 r875: [780..781]
 r876: [774..775]
 r877: [770..771]
 r878: [768..769]
 r879: [760..761]
 r880: [754..755]
 r881: [750..751]
 r882: [750..751]
 r883: [746..747]
 r884: [738..739]
 r885: [732..733]
 r886: [728..729]
 r887: [724..725]
 r888: [726..727]
 r889: [716..717]
 r890: [710..711]
 r891: [700..701]
 r892: [694..695]
 r893: [690..691]
 r894: [688..689]
 r895: [680..681]
 r896: [674..675]
 r897: [670..671]
 r898: [670..671]
 r899: [666..667]
 r900: [656..657]
 r901: [650..651]
 r902: [646..647]
 r903: [644..645]
 r904: [642..643]
 r905: [632..633]
 r906: [626..627]
 r907: [622..623]
 r908: [614..615]
 r909: [608..609]
 r910: [604..605]
 r911: [594..595]
 r912: [588..589]
 r913: [580..581]
 r914: [576..577]
 r915: [568..569]
 r916: [562..563]
 r917: [558..559]
 r918: [550..551]
 r919: [544..545]
 r920: [540..541]
 r921: [530..531]
 r922: [524..525]
 r923: [516..517]
 r924: [512..513]
 r925: [504..505]
 r926: [498..499]
 r927: [494..495]
 r928: [486..487]
 r929: [480..481]
 r930: [476..477]
 r931: [466..467]
 r932: [460..461]
 r933: [452..453]
 r934: [438..439]
 r935: [430..431]
 r936: [424..425]
 r937: [422..423]
 r938: [420..421]
 r939: [18..19]
 r940: [16..17]
 r941: [14..15]
 r942: [12..13]
 r943: [12..13]
 r944: [10..11]
 r945: [412..413]
 r946: [404..405]
 r947: [398..399]
 r948: [394..395]
 r949: [396..397]
 r950: [392..393]
 r951: [384..385]
 r952: [378..379]
 r953: [372..373]
 r954: [364..365]
 r955: [358..359]
 r956: [350..351]
 r957: [346..347]
 r958: [338..339]
 r959: [332..333]
 r960: [326..327]
 r961: [318..319]
 r962: [312..313]
 r963: [304..305]
 r964: [300..301]
 r967: [292..293]
 r968: [294..295]
 r969: [290..291]
 r970: [280..281]
 r971: [274..275]
 r972: [270..271]
 r973: [268..269]
 r974: [266..267]
 r975: [258..259]
 r976: [252..253]
 r977: [248..249]
 r978: [240..241]
 r979: [234..235]
 r980: [230..231]
 r981: [220..221]
 r982: [214..215]
 r983: [206..207]
 r984: [202..203]
 r985: [194..195]
 r986: [188..189]
 r987: [184..185]
 r988: [176..177]
 r989: [170..171]
 r990: [166..167]
 r991: [156..157]
 r992: [150..151]
 r993: [142..143]
 r994: [126..127]
 r995: [118..119]
 r996: [116..117]
 r997: [114..115]
 r998: [112..113]
 r999: [104..105]
 r1000: [98..99]
 r1001: [94..95]
 r1002: [92..93]
 r1003: [86..87]
 r1004: [80..81]
 r1005: [76..77]
 r1006: [68..69]
 r1007: [62..63]
 r1008: [58..59]
 r1009: [48..49]
 r1010: [42..43]
 r1011: [34..35]
 r1012: [1378..1379]
 r1013: [1370..1371]
 r1014: [1366..1367]
 r1015: [1358..1359]
 r1016: [1350..1351]
 r1017: [1344..1347]
 r1018: [1344..1345]
 r1019: [1334..1335]
 r1020: [1326..1327]
 r1021: [1322..1323]
 r1022: [1314..1315]
 r1023: [1306..1307]
 r1024: [1302..1303]
 r1025: [1292..1293]
 r1026: [1284..1285]
 r1027: [1280..1281]
 r1028: [1272..1273]
 r1029: [1264..1265]
 r1030: [1260..1261]
 r1031: [1250..1251]
 r1032: [1242..1243]
 r1033: [1238..1239]
 r1034: [1230..1231]
 r1035: [1222..1223]
 r1036: [1218..1219]
 r1037: [1214..1215]
 r1038: [130..131]
 r1039: [1200..1201]
 r1040: [1198..1199]
 r1041: [1194..1195]
 r1042: [1124..1125]
 r1043: [1060..1061]
 r1044: [582..583]
 r1045: [518..519]
 r1046: [454..455]
 r1047: [208..209]
 r1048: [144..145]
 r1049: [36..37]
 r1050: [1346..1359]
 r1051: [1360..1365]
 r1052: [1352..1371]
 r1053: [1372..1377]

********** Assignment #1: **********

	 Assigning to 1052 (cl=GENERAL_REGS, orig=653, freq=3, tfirst=1012, tfreq=7)...
	   Assign 3 to inheritance r1052 (freq=3)
	Hard reg 3 is preferable by r1053 with profit 1
	Hard reg 1 is preferable by r1012 with profit 1
	Hard reg 3 is preferable by r1012 with profit 1
	Hard reg 0 is preferable by r1013 with profit 1
	Hard reg 3 is preferable by r1013 with profit 1
	Hard reg 0 is preferable by r1016 with profit 1
	Hard reg 3 is preferable by r1016 with profit 1
	 Assigning to 1053 (cl=GENERAL_REGS, orig=653, freq=3, tfirst=1012, tfreq=7)...
	   Assign 3 to inheritance r1053 (freq=3)
	Hard reg 3 is preferable by r1012 with profit 2
	Hard reg 1 is preferable by r1012 with profit 1
	 Assigning to 1012 (cl=GENERAL_REGS, orig=748, freq=3, tfirst=1012, tfreq=7)...
	   Assign 3 to reload r1012 (freq=3)
	 Assigning to 1013 (cl=GENERAL_REGS, orig=654, freq=3, tfirst=1012, tfreq=7)...
	   Assign 0 to reload r1013 (freq=3)
	 Assigning to 1016 (cl=GENERAL_REGS, orig=93, freq=3, tfirst=1012, tfreq=7)...
	   Assign 0 to reload r1016 (freq=3)
	 Assigning to 1050 (cl=GENERAL_REGS, orig=655, freq=3, tfirst=1014, tfreq=6)...
	   Assign 4 to inheritance r1050 (freq=3)
	Hard reg 4 is preferable by r1051 with profit 1
	Hard reg 1 is preferable by r1014 with profit 1
	Hard reg 4 is preferable by r1014 with profit 1
	Hard reg 0 is preferable by r1015 with profit 1
	Hard reg 4 is preferable by r1015 with profit 1
	Hard reg 4 is preferable by r1018 with profit 1
	 Assigning to 1051 (cl=GENERAL_REGS, orig=655, freq=3, tfirst=1014, tfreq=6)...
	   Assign 4 to inheritance r1051 (freq=3)
	Hard reg 4 is preferable by r1014 with profit 2
	Hard reg 1 is preferable by r1014 with profit 1
	 Assigning to 1014 (cl=GENERAL_REGS, orig=751, freq=3, tfirst=1014, tfreq=6)...
	   Assign 4 to reload r1014 (freq=3)
	 Assigning to 1015 (cl=GENERAL_REGS, orig=656, freq=3, tfirst=1014, tfreq=6)...
	   Assign 0 to reload r1015 (freq=3)
	 Assigning to 1018 (cl=GENERAL_REGS, orig=655, freq=2, tfirst=1014, tfreq=6)...
	   Assign 4 to optional reload r1018 (freq=2)
	 Assigning to 1017 (cl=GENERAL_REGS, orig=93, freq=3, tfirst=1017, tfreq=3)...
	   Assign 0 to reload r1017 (freq=3)
	 Assigning to 1019 (cl=GENERAL_REGS, orig=757, freq=3, tfirst=1019, tfreq=3)...
	   Assign 4 to reload r1019 (freq=3)
	 Assigning to 1020 (cl=GENERAL_REGS, orig=664, freq=3, tfirst=1020, tfreq=3)...
	   Assign 0 to reload r1020 (freq=3)
	 Assigning to 1021 (cl=GENERAL_REGS, orig=760, freq=3, tfirst=1021, tfreq=3)...
	   Assign 5 to reload r1021 (freq=3)
	 Assigning to 1022 (cl=GENERAL_REGS, orig=666, freq=3, tfirst=1022, tfreq=3)...
	   Assign 0 to reload r1022 (freq=3)
	 Assigning to 1023 (cl=GENERAL_REGS, orig=100, freq=3, tfirst=1023, tfreq=3)...
	   Assign 0 to reload r1023 (freq=3)
	 Assigning to 1024 (cl=GENERAL_REGS, orig=100, freq=3, tfirst=1024, tfreq=3)...
	   Assign 0 to reload r1024 (freq=3)
	 Assigning to 1025 (cl=GENERAL_REGS, orig=766, freq=3, tfirst=1025, tfreq=3)...
	   Assign 1 to reload r1025 (freq=3)
	 Assigning to 1026 (cl=GENERAL_REGS, orig=674, freq=3, tfirst=1026, tfreq=3)...
	   Assign 0 to reload r1026 (freq=3)
	 Assigning to 1027 (cl=GENERAL_REGS, orig=769, freq=3, tfirst=1027, tfreq=3)...
	   Assign 1 to reload r1027 (freq=3)
	 Assigning to 1028 (cl=GENERAL_REGS, orig=676, freq=3, tfirst=1028, tfreq=3)...
	   Assign 0 to reload r1028 (freq=3)
	 Assigning to 1029 (cl=GENERAL_REGS, orig=107, freq=3, tfirst=1029, tfreq=3)...
	   Assign 0 to reload r1029 (freq=3)
	 Assigning to 1030 (cl=GENERAL_REGS, orig=107, freq=3, tfirst=1030, tfreq=3)...
	   Assign 0 to reload r1030 (freq=3)
	 Assigning to 1031 (cl=GENERAL_REGS, orig=775, freq=3, tfirst=1031, tfreq=3)...
	   Assign 1 to reload r1031 (freq=3)
	 Assigning to 1032 (cl=GENERAL_REGS, orig=684, freq=3, tfirst=1032, tfreq=3)...
	   Assign 0 to reload r1032 (freq=3)
	 Assigning to 1033 (cl=GENERAL_REGS, orig=778, freq=3, tfirst=1033, tfreq=3)...
	   Assign 1 to reload r1033 (freq=3)
	 Assigning to 1034 (cl=GENERAL_REGS, orig=686, freq=3, tfirst=1034, tfreq=3)...
	   Assign 0 to reload r1034 (freq=3)
	 Assigning to 1035 (cl=GENERAL_REGS, orig=114, freq=3, tfirst=1035, tfreq=3)...
	   Assign 0 to reload r1035 (freq=3)
	 Assigning to 1036 (cl=GENERAL_REGS, orig=114, freq=3, tfirst=1036, tfreq=3)...
	   Assign 0 to reload r1036 (freq=3)
	 Assigning to 1037 (cl=GENERAL_REGS, orig=692, freq=2, tfirst=1037, tfreq=2)...
	   Assign 0 to reload r1037 (freq=2)
	 Assigning to 1038 (cl=GENERAL_REGS, orig=692, freq=2, tfirst=1038, tfreq=2)...
	   Assign 2 to optional reload r1038 (freq=2)
	 Assigning to 1039 (cl=GENERAL_REGS, orig=655, freq=2, tfirst=1039, tfreq=2)...
	   Assign 2 to optional reload r1039 (freq=2)
	 Assigning to 1040 (cl=GENERAL_REGS, orig=661, freq=2, tfirst=1040, tfreq=2)...
	   Assign 2 to reload r1040 (freq=2)
	 Assigning to 1041 (cl=GENERAL_REGS, orig=653, freq=2, tfirst=1041, tfreq=2)...
	   Assign 2 to optional reload r1041 (freq=2)
	 Assigning to 1042 (cl=SSE_REGS, orig=136, freq=3, tfirst=1042, tfreq=3)...
	   Assign 22 to reload r1042 (freq=3)
	 Assigning to 1043 (cl=SSE_REGS, orig=166, freq=3, tfirst=1043, tfreq=3)...
	   Assign 22 to reload r1043 (freq=3)
	 Assigning to 1044 (cl=SSE_REGS, orig=381, freq=3, tfirst=1044, tfreq=3)...
	   Assign 22 to reload r1044 (freq=3)
	 Assigning to 1045 (cl=SSE_REGS, orig=412, freq=3, tfirst=1045, tfreq=3)...
	   Assign 22 to reload r1045 (freq=3)
	 Assigning to 1046 (cl=SSE_REGS, orig=443, freq=3, tfirst=1046, tfreq=3)...
	   Assign 22 to reload r1046 (freq=3)
	 Assigning to 1047 (cl=SSE_REGS, orig=552, freq=3, tfirst=1047, tfreq=3)...
	   Assign 22 to reload r1047 (freq=3)
	 Assigning to 1048 (cl=SSE_REGS, orig=583, freq=3, tfirst=1048, tfreq=3)...
	   Assign 22 to reload r1048 (freq=3)
	 Assigning to 1049 (cl=SSE_REGS, orig=619, freq=3, tfirst=1049, tfreq=3)...
	   Assign 22 to reload r1049 (freq=3)
  Reassigning non-reload pseudos

********** Undoing inheritance #1: **********

Inherit 4 out of 4 (100.00%)
Keep optional reload reg 1018
Remove optional reload reg 1038
  Restoring original insn:
  148: flags:CCGC=cmp(r692:SI,r115:SI)
      REG_DEAD r692:SI
      REG_DEAD r115:SI
  Deleting move 1545
 1545: r1038:SI=r692:SI
deleting insn with uid = 1545.
Remove optional reload reg 1039
  Restoring original insn:
  180: {r120:DI=r119:DI*r655:DI;clobber flags:CC;}
      REG_DEAD r655:DI
      REG_DEAD r119:DI
      REG_UNUSED flags:CC
  Deleting move 1546
 1546: r1039:DI=r655:DI
deleting insn with uid = 1546.
Remove optional reload reg 1041
  Restoring original insn:
  184: {r123:DI=r122:DI*r653:DI;clobber flags:CC;}
      REG_DEAD r653:DI
      REG_DEAD r122:DI
      REG_UNUSED flags:CC
  Deleting move 1548
 1548: r1041:DI=r653:DI
deleting insn with uid = 1548.

********** Local #2: **********

	   Spilling non-eliminable hard regs: 6
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            2 Non pseudo reload: reject++
          alt=2,overall=1,losers=0,rld_nregs=0
            1 Non pseudo reload: reject++
            alt=0: Bad operand -- refuse
            1 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            alt=2,overall=6,losers=1 -- refuse
	 Choosing alt 2 in insn 184:  (0) r  (1) 0  (2) mr {*muldi3_1}
      Creating newreg=1054 from oldreg=653, assigning class GENERAL_REGS to r1054
      Making reload reg 1054 for reg 653 optional
  184: {r123:DI=r122:DI*r1054:DI;clobber flags:CC;}
      REG_DEAD r653:DI
      REG_DEAD r122:DI
      REG_UNUSED flags:CC
    Inserting insn reload before:
 1569: r1054:DI=r653:DI

            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=3,overall=2,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1569:  (0) r  (1) rem {*movdi_internal}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            2 Non pseudo reload: reject++
          alt=2,overall=1,losers=0,rld_nregs=0
            1 Non pseudo reload: reject++
            alt=0: Bad operand -- refuse
            1 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            alt=2,overall=6,losers=1 -- refuse
	 Choosing alt 2 in insn 180:  (0) r  (1) 0  (2) mr {*muldi3_1}
      Creating newreg=1055 from oldreg=655, assigning class GENERAL_REGS to r1055
      Making reload reg 1055 for reg 655 optional
  180: {r120:DI=r119:DI*r1055:DI;clobber flags:CC;}
      REG_DEAD r655:DI
      REG_DEAD r119:DI
      REG_UNUSED flags:CC
    Inserting insn reload before:
 1570: r1055:DI=r655:DI

            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=3,overall=2,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1570:  (0) r  (1) rem {*movdi_internal}
            0 Non pseudo reload: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 148:  (0) rm  (1) re {*cmpsi_1}
      Creating newreg=1056 from oldreg=692, assigning class GENERAL_REGS to r1056
      Making reload reg 1056 for reg 692 optional
  148: flags:CCGC=cmp(r1056:SI,r115:SI)
      REG_DEAD r692:SI
      REG_DEAD r115:SI
    Inserting insn reload before:
 1571: r1056:SI=r692:SI

            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1571:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 43:  (0) =rm  (1) 0  (2) re {*subdi_1}
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=607,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 1568:  (0) m  (1) re {*movdi_internal}
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=607,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 1566:  (0) m  (1) re {*movdi_internal}
	   Spilling non-eliminable hard regs: 6

********** Inheritance #2: **********

EBB 2
EBB 3
EBB 4
EBB 5
EBB 6
EBB 7
EBB 8
EBB 9
EBB 10
EBB 11
EBB 87
EBB 12
EBB 13
EBB 14
EBB 88
EBB 15
EBB 86
EBB 16
EBB 85
EBB 17
EBB 18
EBB 19
EBB 20
EBB 21
EBB 92 22
EBB 91
EBB 23
EBB 90
EBB 24
EBB 25
EBB 26
EBB 27
EBB 28
EBB 29
EBB 93
EBB 30
EBB 31
EBB 32
EBB 94
EBB 33
EBB 34
EBB 35
EBB 95
EBB 36
EBB 37
EBB 38
EBB 39
EBB 40
EBB 97
EBB 41
EBB 42
EBB 43
EBB 98
EBB 44
EBB 45
EBB 46
EBB 99
EBB 47
EBB 96
EBB 48
EBB 89
EBB 49
EBB 50
EBB 51
EBB 52
EBB 53
EBB 54
EBB 100
EBB 55
EBB 56
EBB 57
EBB 101
EBB 58
EBB 59
EBB 60
EBB 61
EBB 62
EBB 63
EBB 64
EBB 104
EBB 65
EBB 66
EBB 67
EBB 105
EBB 68
EBB 103
EBB 69
EBB 102
EBB 70
EBB 84
EBB 71
EBB 72
EBB 73
EBB 74
EBB 75
EBB 76
EBB 77
EBB 78
EBB 79
EBB 109
EBB 80
EBB 108
EBB 81
EBB 107
EBB 82
EBB 106
EBB 83

********** Pseudo live ranges #2: **********

  BB 26
   Insn 436: point = 0, n_alt = 0
   Insn 435: point = 0, n_alt = 2
   Insn 434: point = 0, n_alt = 0
   Insn 433: point = 0, n_alt = 0
   Insn 432: point = 0, n_alt = -1
   Insn 431: point = 1, n_alt = 3
   Insn 430: point = 2, n_alt = 0
   Insn 429: point = 2, n_alt = -1
   Insn 428: point = 3, n_alt = -1
   Insn 427: point = 4, n_alt = 0
   Insn 426: point = 4, n_alt = 3
   Insn 425: point = 5, n_alt = 3
   Insn 424: point = 6, n_alt = 0
   Insn 423: point = 6, n_alt = -1
   Insn 422: point = 7, n_alt = 4
   Insn 421: point = 7, n_alt = 0
   Insn 420: point = 7, n_alt = 3
   Insn 419: point = 8, n_alt = 0
   Insn 418: point = 8, n_alt = -1
   Insn 417: point = 9, n_alt = 3
   Insn 416: point = 10, n_alt = 1
   Insn 415: point = 10, n_alt = 1
   Insn 414: point = 10, n_alt = 1
   Insn 413: point = 10, n_alt = 5
   Insn 412: point = 11, n_alt = 4
  BB 51
   Insn 950: point = 12, n_alt = 0
   Insn 949: point = 12, n_alt = 2
   Insn 948: point = 12, n_alt = 0
   Insn 947: point = 12, n_alt = 0
   Insn 946: point = 12, n_alt = -1
   Insn 945: point = 13, n_alt = 3
   Insn 944: point = 14, n_alt = 0
   Insn 943: point = 14, n_alt = -1
   Insn 942: point = 15, n_alt = -1
   Insn 941: point = 16, n_alt = 0
   Insn 940: point = 16, n_alt = 3
   Insn 939: point = 17, n_alt = 3
   Insn 938: point = 18, n_alt = 0
   Insn 937: point = 18, n_alt = -1
   Insn 936: point = 19, n_alt = 4
   Insn 935: point = 19, n_alt = 0
   Insn 934: point = 19, n_alt = 3
   Insn 933: point = 20, n_alt = 0
   Insn 932: point = 20, n_alt = -1
   Insn 931: point = 21, n_alt = 3
   Insn 930: point = 22, n_alt = 1
   Insn 929: point = 22, n_alt = 1
   Insn 928: point = 22, n_alt = 1
   Insn 927: point = 22, n_alt = 5
   Insn 926: point = 23, n_alt = 4
  BB 83
   Insn 1366: point = 24, n_alt = -1
  BB 106
   Insn 1484: point = 24, n_alt = -1
  BB 72
   Insn 1241: point = 24, n_alt = -1
   Insn 1240: point = 24, n_alt = 0
   Insn 1239: point = 25, n_alt = 0
   Insn 1238: point = 26, n_alt = 0
   Insn 1237: point = 27, n_alt = 0
  BB 82
   Insn 1413: point = 29, n_alt = -1
   Insn 1347: point = 29, n_alt = 1
   Insn 1346: point = 30, n_alt = 0
   Insn 1345: point = 32, n_alt = 0
  BB 107
   Insn 1487: point = 34, n_alt = -1
  BB 74
   Insn 1253: point = 35, n_alt = -1
   Insn 1252: point = 35, n_alt = 0
   Insn 1251: point = 36, n_alt = 0
   Insn 1250: point = 37, n_alt = 0
  BB 81
   Insn 1411: point = 38, n_alt = -1
   Insn 1339: point = 38, n_alt = 1
  BB 108
   Insn 1490: point = 39, n_alt = -1
  BB 76
   Insn 1262: point = 40, n_alt = -1
   Insn 1261: point = 40, n_alt = 0
   Insn 1260: point = 41, n_alt = 0
   Insn 1259: point = 42, n_alt = 0
  BB 80
   Insn 1409: point = 43, n_alt = -1
   Insn 1333: point = 43, n_alt = 1
  BB 109
   Insn 1493: point = 44, n_alt = -1
  BB 78
   Insn 1271: point = 45, n_alt = -1
   Insn 1270: point = 45, n_alt = 0
   Insn 1269: point = 46, n_alt = 0
   Insn 1268: point = 47, n_alt = 0
  BB 79
   Insn 1407: point = 48, n_alt = -1
   Insn 1327: point = 48, n_alt = 1
   Insn 1326: point = 48, n_alt = 8
   Insn 1325: point = 49, n_alt = 3
   Insn 1564: point = 50, n_alt = -1
	Hard reg 21 is preferable by r1049 with profit 1
   Insn 1324: point = 52, n_alt = 2
   Insn 1563: point = 53, n_alt = -1
	Hard reg 21 is preferable by r1049 with profit 1
	Hard reg 22 is preferable by r1049 with profit 1
   Insn 1323: point = 55, n_alt = 0
   Insn 1322: point = 57, n_alt = 1
   Insn 1321: point = 59, n_alt = 0
   Insn 1320: point = 60, n_alt = 0
   Insn 1319: point = 62, n_alt = 2
   Insn 1318: point = 64, n_alt = 1
   Insn 1317: point = 66, n_alt = 0
   Insn 1316: point = 67, n_alt = 3
   Insn 1315: point = 69, n_alt = 2
   Insn 1314: point = 71, n_alt = 1
   Insn 1313: point = 73, n_alt = 0
   Insn 1312: point = 74, n_alt = 1
   Insn 1311: point = 76, n_alt = 7
   Insn 1310: point = 78, n_alt = 3
   Insn 1309: point = 79, n_alt = 0
   Insn 1308: point = 81, n_alt = 1
   Insn 1307: point = 83, n_alt = 0
   Insn 1306: point = 84, n_alt = 0
   Insn 1305: point = 86, n_alt = 2
   Insn 1304: point = 88, n_alt = 1
   Insn 1303: point = 90, n_alt = 0
   Insn 1302: point = 91, n_alt = 3
   Insn 1301: point = 93, n_alt = 2
   Insn 1300: point = 95, n_alt = 1
   Insn 1299: point = 97, n_alt = 0
   Insn 1298: point = 98, n_alt = 7
   Insn 1297: point = 100, n_alt = 3
   Insn 1296: point = 101, n_alt = 0
   Insn 1295: point = 103, n_alt = 1
   Insn 1294: point = 105, n_alt = 0
   Insn 1293: point = 106, n_alt = 0
   Insn 1292: point = 108, n_alt = 2
   Insn 1291: point = 110, n_alt = 1
   Insn 1290: point = 112, n_alt = 0
   Insn 1289: point = 113, n_alt = 3
   Insn 1288: point = 115, n_alt = 2
   Insn 1287: point = 117, n_alt = 1
   Insn 1286: point = 119, n_alt = 0
   Insn 1285: point = 120, n_alt = 7
   Insn 1284: point = 122, n_alt = 3
   Insn 1283: point = 123, n_alt = 0
   Insn 1282: point = 125, n_alt = 1
   Insn 1281: point = 127, n_alt = 0
   Insn 1280: point = 128, n_alt = 0
   Insn 1279: point = 130, n_alt = 2
   Insn 1278: point = 132, n_alt = 1
   Insn 1277: point = 134, n_alt = 0
   Insn 1276: point = 135, n_alt = 3
   Insn 1275: point = 137, n_alt = 2
   Insn 1274: point = 139, n_alt = 1
   Insn 1273: point = 141, n_alt = 0
  BB 77
   Insn 1266: point = 143, n_alt = 1
   Insn 1265: point = 143, n_alt = 0
   Insn 1264: point = 145, n_alt = 3
  BB 75
   Insn 1257: point = 147, n_alt = 1
   Insn 1256: point = 147, n_alt = 0
   Insn 1255: point = 149, n_alt = 3
  BB 73
   Insn 1248: point = 151, n_alt = 1
   Insn 1247: point = 151, n_alt = 0
   Insn 1246: point = 153, n_alt = 3
   Insn 1245: point = 154, n_alt = 1
   Insn 1244: point = 155, n_alt = 0
   Insn 1243: point = 157, n_alt = 0
  BB 71
   Insn 1235: point = 159, n_alt = 1
   Insn 1234: point = 160, n_alt = 0
   Insn 1233: point = 162, n_alt = 0
   Insn 1232: point = 164, n_alt = 3
  BB 84
   Insn 1417: point = 166, n_alt = -1
  BB 3
   Insn 151: point = 167, n_alt = -1
   Insn 150: point = 167, n_alt = 0
   Insn 149: point = 168, n_alt = 0
   Insn 148: point = 169, n_alt = 0
   Insn 1571: point = 170, n_alt = 0
   Insn 147: point = 171, n_alt = 0
  BB 70
   Insn 1405: point = 173, n_alt = -1
   Insn 1226: point = 173, n_alt = 1
   Insn 1225: point = 174, n_alt = 0
   Insn 1224: point = 176, n_alt = 0
  BB 102
   Insn 1472: point = 178, n_alt = -1
  BB 59
   Insn 1068: point = 179, n_alt = -1
   Insn 1067: point = 179, n_alt = 0
   Insn 1066: point = 180, n_alt = 0
   Insn 1065: point = 181, n_alt = 1
  BB 69
   Insn 1403: point = 182, n_alt = -1
   Insn 1218: point = 182, n_alt = 1
  BB 103
   Insn 1475: point = 183, n_alt = -1
  BB 61
   Insn 1084: point = 184, n_alt = -1
   Insn 1083: point = 184, n_alt = 0
   Insn 1082: point = 185, n_alt = 0
   Insn 1081: point = 186, n_alt = 0
  BB 68
   Insn 1401: point = 187, n_alt = -1
   Insn 1212: point = 187, n_alt = 1
  BB 105
   Insn 1481: point = 188, n_alt = -1
  BB 66
   Insn 1163: point = 189, n_alt = -1
   Insn 1162: point = 189, n_alt = 0
   Insn 1161: point = 190, n_alt = 0
   Insn 1160: point = 191, n_alt = 0
  BB 67
   Insn 1399: point = 192, n_alt = -1
   Insn 1206: point = 192, n_alt = 1
   Insn 1205: point = 192, n_alt = 8
   Insn 1204: point = 193, n_alt = 3
   Insn 1562: point = 194, n_alt = -1
	Hard reg 21 is preferable by r1048 with profit 1
   Insn 1203: point = 196, n_alt = 2
   Insn 1561: point = 197, n_alt = -1
	Hard reg 21 is preferable by r1048 with profit 1
	Hard reg 22 is preferable by r1048 with profit 1
   Insn 1202: point = 199, n_alt = 0
   Insn 1201: point = 201, n_alt = 0
   Insn 1200: point = 203, n_alt = 0
   Insn 1199: point = 204, n_alt = 0
   Insn 1198: point = 206, n_alt = 2
   Insn 1197: point = 208, n_alt = 0
   Insn 1196: point = 210, n_alt = 0
   Insn 1195: point = 211, n_alt = 3
   Insn 1194: point = 213, n_alt = 2
   Insn 1193: point = 215, n_alt = 0
   Insn 1192: point = 217, n_alt = 0
   Insn 1191: point = 218, n_alt = 1
   Insn 1190: point = 220, n_alt = 7
   Insn 1189: point = 222, n_alt = 3
   Insn 1188: point = 223, n_alt = 0
   Insn 1187: point = 225, n_alt = 0
   Insn 1186: point = 227, n_alt = 0
   Insn 1185: point = 228, n_alt = 0
   Insn 1184: point = 230, n_alt = 2
   Insn 1183: point = 232, n_alt = 0
   Insn 1182: point = 234, n_alt = 0
   Insn 1181: point = 235, n_alt = 3
   Insn 1180: point = 237, n_alt = 2
   Insn 1179: point = 239, n_alt = 0
   Insn 1178: point = 241, n_alt = 0
   Insn 1177: point = 242, n_alt = 7
   Insn 1176: point = 244, n_alt = 3
   Insn 1175: point = 245, n_alt = 0
   Insn 1174: point = 247, n_alt = 0
   Insn 1173: point = 249, n_alt = 0
   Insn 1172: point = 250, n_alt = 0
   Insn 1171: point = 252, n_alt = 2
   Insn 1170: point = 254, n_alt = 0
   Insn 1169: point = 256, n_alt = 0
   Insn 1168: point = 257, n_alt = 3
   Insn 1167: point = 259, n_alt = 2
   Insn 1166: point = 261, n_alt = 0
   Insn 1165: point = 263, n_alt = 0
  BB 65
   Insn 1158: point = 265, n_alt = 1
   Insn 1157: point = 265, n_alt = 0
   Insn 1156: point = 267, n_alt = 3
  BB 104
   Insn 1478: point = 269, n_alt = -1
  BB 63
   Insn 1107: point = 270, n_alt = -1
   Insn 1106: point = 270, n_alt = 0
   Insn 1105: point = 271, n_alt = 0
   Insn 1104: point = 272, n_alt = 0
  BB 64
   Insn 1397: point = 273, n_alt = -1
   Insn 1150: point = 273, n_alt = 1
   Insn 1149: point = 273, n_alt = 8
   Insn 1148: point = 274, n_alt = 3
   Insn 1560: point = 275, n_alt = -1
	Hard reg 21 is preferable by r1047 with profit 1
   Insn 1147: point = 277, n_alt = 2
   Insn 1559: point = 278, n_alt = -1
	Hard reg 21 is preferable by r1047 with profit 1
	Hard reg 22 is preferable by r1047 with profit 1
   Insn 1146: point = 280, n_alt = 0
   Insn 1145: point = 282, n_alt = 0
   Insn 1144: point = 284, n_alt = 0
   Insn 1143: point = 285, n_alt = 0
   Insn 1142: point = 287, n_alt = 2
   Insn 1141: point = 289, n_alt = 0
   Insn 1140: point = 291, n_alt = 0
   Insn 1139: point = 292, n_alt = 3
   Insn 1138: point = 294, n_alt = 2
   Insn 1137: point = 296, n_alt = 0
   Insn 1136: point = 298, n_alt = 0
   Insn 1135: point = 299, n_alt = 1
   Insn 1134: point = 301, n_alt = 7
   Insn 1133: point = 303, n_alt = 3
   Insn 1132: point = 304, n_alt = 0
   Insn 1131: point = 306, n_alt = 0
   Insn 1130: point = 308, n_alt = 0
   Insn 1129: point = 309, n_alt = 0
   Insn 1128: point = 311, n_alt = 2
   Insn 1127: point = 313, n_alt = 0
   Insn 1126: point = 315, n_alt = 0
   Insn 1125: point = 316, n_alt = 3
   Insn 1124: point = 318, n_alt = 2
   Insn 1123: point = 320, n_alt = 0
   Insn 1122: point = 322, n_alt = 0
   Insn 1121: point = 323, n_alt = 7
   Insn 1120: point = 325, n_alt = 3
   Insn 1119: point = 326, n_alt = 0
   Insn 1118: point = 328, n_alt = 0
   Insn 1117: point = 330, n_alt = 0
   Insn 1116: point = 331, n_alt = 0
   Insn 1115: point = 333, n_alt = 2
   Insn 1114: point = 335, n_alt = 0
   Insn 1113: point = 337, n_alt = 0
   Insn 1112: point = 338, n_alt = 3
   Insn 1111: point = 340, n_alt = 2
   Insn 1110: point = 342, n_alt = 0
   Insn 1109: point = 344, n_alt = 0
  BB 62
   Insn 1102: point = 346, n_alt = 1
   Insn 1101: point = 346, n_alt = 0
   Insn 1100: point = 348, n_alt = 3
   Insn 1099: point = 349, n_alt = 8
   Insn 1098: point = 350, n_alt = 7
   Insn 1097: point = 352, n_alt = 3
   Insn 1096: point = 353, n_alt = 0
   Insn 1095: point = 355, n_alt = 0
   Insn 1094: point = 357, n_alt = 0
   Insn 1093: point = 358, n_alt = 0
   Insn 1092: point = 360, n_alt = 2
   Insn 1091: point = 362, n_alt = 0
   Insn 1090: point = 364, n_alt = 0
   Insn 1089: point = 365, n_alt = 3
   Insn 1088: point = 367, n_alt = 2
   Insn 1087: point = 369, n_alt = 0
   Insn 1086: point = 371, n_alt = 0
  BB 60
   Insn 1079: point = 373, n_alt = 1
   Insn 1078: point = 374, n_alt = 0
   Insn 1077: point = 376, n_alt = 3
   Insn 1076: point = 377, n_alt = 0
   Insn 1075: point = 378, n_alt = 1
   Insn 1074: point = 379, n_alt = 0
   Insn 1073: point = 381, n_alt = 0
  BB 58
   Insn 1063: point = 383, n_alt = 1
   Insn 1062: point = 384, n_alt = 0
   Insn 1061: point = 386, n_alt = 0
   Insn 1060: point = 388, n_alt = 3
  BB 101
   Insn 1469: point = 390, n_alt = -1
  BB 56
   Insn 1023: point = 391, n_alt = -1
   Insn 1022: point = 391, n_alt = 0
   Insn 1021: point = 392, n_alt = 0
   Insn 1020: point = 393, n_alt = 0
  BB 57
   Insn 1395: point = 394, n_alt = -1
   Insn 1054: point = 394, n_alt = 1
   Insn 1053: point = 394, n_alt = 8
   Insn 1052: point = 395, n_alt = 3
   Insn 1051: point = 396, n_alt = 1
   Insn 1050: point = 398, n_alt = 0
   Insn 1049: point = 400, n_alt = 0
   Insn 1048: point = 402, n_alt = 0
   Insn 1047: point = 404, n_alt = 3
   Insn 1046: point = 405, n_alt = 0
   Insn 1045: point = 407, n_alt = 2
   Insn 1044: point = 409, n_alt = 0
   Insn 1043: point = 411, n_alt = 0
   Insn 1042: point = 412, n_alt = 3
   Insn 1041: point = 414, n_alt = 2
   Insn 1040: point = 416, n_alt = 0
   Insn 1039: point = 418, n_alt = 0
   Insn 1038: point = 419, n_alt = 7
   Insn 1037: point = 421, n_alt = 3
   Insn 1036: point = 422, n_alt = 0
   Insn 1035: point = 424, n_alt = 0
   Insn 1034: point = 426, n_alt = 0
   Insn 1033: point = 428, n_alt = 3
   Insn 1032: point = 429, n_alt = 0
   Insn 1031: point = 431, n_alt = 2
   Insn 1030: point = 433, n_alt = 0
   Insn 1029: point = 435, n_alt = 0
   Insn 1028: point = 436, n_alt = 3
   Insn 1027: point = 438, n_alt = 2
   Insn 1026: point = 440, n_alt = 0
   Insn 1025: point = 442, n_alt = 0
  BB 55
   Insn 1018: point = 444, n_alt = 1
   Insn 1017: point = 444, n_alt = 0
   Insn 1016: point = 446, n_alt = 3
  BB 100
   Insn 1466: point = 448, n_alt = -1
  BB 53
   Insn 979: point = 449, n_alt = -1
   Insn 978: point = 449, n_alt = 0
   Insn 977: point = 450, n_alt = 0
   Insn 976: point = 451, n_alt = 0
  BB 54
   Insn 1393: point = 452, n_alt = -1
   Insn 1010: point = 452, n_alt = 1
   Insn 1009: point = 452, n_alt = 8
   Insn 1008: point = 453, n_alt = 3
   Insn 1007: point = 454, n_alt = 1
   Insn 1006: point = 456, n_alt = 0
   Insn 1005: point = 458, n_alt = 0
   Insn 1004: point = 460, n_alt = 0
   Insn 1003: point = 462, n_alt = 3
   Insn 1002: point = 463, n_alt = 0
   Insn 1001: point = 465, n_alt = 2
   Insn 1000: point = 467, n_alt = 0
   Insn 999: point = 469, n_alt = 0
   Insn 998: point = 470, n_alt = 3
   Insn 997: point = 472, n_alt = 2
   Insn 996: point = 474, n_alt = 0
   Insn 995: point = 476, n_alt = 0
   Insn 994: point = 477, n_alt = 7
   Insn 993: point = 479, n_alt = 3
   Insn 992: point = 480, n_alt = 0
   Insn 991: point = 482, n_alt = 0
   Insn 990: point = 484, n_alt = 0
   Insn 989: point = 486, n_alt = 3
   Insn 988: point = 487, n_alt = 0
   Insn 987: point = 489, n_alt = 2
   Insn 986: point = 491, n_alt = 0
   Insn 985: point = 493, n_alt = 0
   Insn 984: point = 494, n_alt = 3
   Insn 983: point = 496, n_alt = 2
   Insn 982: point = 498, n_alt = 0
   Insn 981: point = 500, n_alt = 0
  BB 52
   Insn 974: point = 502, n_alt = 1
   Insn 973: point = 502, n_alt = 0
   Insn 972: point = 504, n_alt = 3
   Insn 971: point = 505, n_alt = 8
   Insn 970: point = 506, n_alt = 2
   Insn 969: point = 508, n_alt = 7
   Insn 968: point = 509, n_alt = 7
   Insn 967: point = 511, n_alt = 3
   Insn 966: point = 512, n_alt = 0
   Insn 965: point = 514, n_alt = 0
   Insn 964: point = 516, n_alt = 0
   Insn 963: point = 518, n_alt = 3
   Insn 962: point = 519, n_alt = 0
   Insn 961: point = 521, n_alt = 2
   Insn 960: point = 523, n_alt = 0
   Insn 959: point = 525, n_alt = 0
   Insn 958: point = 527, n_alt = 3
   Insn 957: point = 528, n_alt = 3
   Insn 956: point = 530, n_alt = 2
   Insn 955: point = 532, n_alt = 0
   Insn 954: point = 534, n_alt = 0
  BB 50
   Insn 921: point = 536, n_alt = -1
   Insn 920: point = 536, n_alt = 1
   Insn 919: point = 537, n_alt = 7
  BB 49
   Insn 918: point = 539, n_alt = -1
   Insn 917: point = 539, n_alt = 1
   Insn 916: point = 540, n_alt = 7
   Insn 915: point = 541, n_alt = 7
   Insn 914: point = 543, n_alt = 3
   Insn 913: point = 544, n_alt = 0
   Insn 912: point = 546, n_alt = 0
   Insn 911: point = 548, n_alt = 0
   Insn 910: point = 550, n_alt = 3
   Insn 909: point = 551, n_alt = 0
   Insn 908: point = 553, n_alt = 2
   Insn 907: point = 555, n_alt = 0
   Insn 906: point = 557, n_alt = 0
   Insn 905: point = 559, n_alt = 3
   Insn 904: point = 560, n_alt = 3
   Insn 903: point = 562, n_alt = 2
   Insn 902: point = 564, n_alt = 0
   Insn 901: point = 566, n_alt = 0
  BB 89
   Insn 1432: point = 568, n_alt = -1
  BB 18
   Insn 324: point = 569, n_alt = -1
   Insn 323: point = 569, n_alt = 0
   Insn 322: point = 570, n_alt = 0
   Insn 321: point = 571, n_alt = 0
  BB 48
   Insn 1391: point = 572, n_alt = -1
   Insn 895: point = 572, n_alt = 1
  BB 96
   Insn 1454: point = 573, n_alt = -1
  BB 37
   Insn 704: point = 574, n_alt = -1
   Insn 703: point = 574, n_alt = 0
   Insn 702: point = 575, n_alt = 0
   Insn 701: point = 576, n_alt = 0
  BB 47
   Insn 1389: point = 577, n_alt = -1
   Insn 889: point = 577, n_alt = 1
  BB 99
   Insn 1463: point = 578, n_alt = -1
  BB 45
   Insn 840: point = 579, n_alt = -1
   Insn 839: point = 579, n_alt = 0
   Insn 838: point = 580, n_alt = 0
   Insn 837: point = 581, n_alt = 0
  BB 46
   Insn 1387: point = 582, n_alt = -1
   Insn 883: point = 582, n_alt = 1
   Insn 882: point = 582, n_alt = 8
   Insn 881: point = 583, n_alt = 3
   Insn 1558: point = 584, n_alt = -1
	Hard reg 21 is preferable by r1046 with profit 1
   Insn 880: point = 586, n_alt = 2
   Insn 1557: point = 587, n_alt = -1
	Hard reg 21 is preferable by r1046 with profit 1
	Hard reg 22 is preferable by r1046 with profit 1
   Insn 879: point = 589, n_alt = 0
   Insn 878: point = 591, n_alt = 0
   Insn 877: point = 593, n_alt = 0
   Insn 876: point = 594, n_alt = 0
   Insn 875: point = 596, n_alt = 2
   Insn 874: point = 598, n_alt = 0
   Insn 873: point = 600, n_alt = 0
   Insn 872: point = 601, n_alt = 3
   Insn 871: point = 603, n_alt = 2
   Insn 870: point = 605, n_alt = 0
   Insn 869: point = 607, n_alt = 0
   Insn 868: point = 608, n_alt = 1
   Insn 867: point = 610, n_alt = 7
   Insn 866: point = 612, n_alt = 3
   Insn 865: point = 613, n_alt = 0
   Insn 864: point = 615, n_alt = 0
   Insn 863: point = 617, n_alt = 0
   Insn 862: point = 618, n_alt = 0
   Insn 861: point = 620, n_alt = 2
   Insn 860: point = 622, n_alt = 0
   Insn 859: point = 624, n_alt = 0
   Insn 858: point = 625, n_alt = 3
   Insn 857: point = 627, n_alt = 2
   Insn 856: point = 629, n_alt = 0
   Insn 855: point = 631, n_alt = 0
   Insn 854: point = 632, n_alt = 7
   Insn 853: point = 634, n_alt = 3
   Insn 852: point = 635, n_alt = 0
   Insn 851: point = 637, n_alt = 0
   Insn 850: point = 639, n_alt = 0
   Insn 849: point = 640, n_alt = 0
   Insn 848: point = 642, n_alt = 2
   Insn 847: point = 644, n_alt = 0
   Insn 846: point = 646, n_alt = 0
   Insn 845: point = 647, n_alt = 3
   Insn 844: point = 649, n_alt = 2
   Insn 843: point = 651, n_alt = 0
   Insn 842: point = 653, n_alt = 0
  BB 44
   Insn 835: point = 655, n_alt = 1
   Insn 834: point = 655, n_alt = 0
   Insn 833: point = 657, n_alt = 3
  BB 98
   Insn 1460: point = 659, n_alt = -1
  BB 42
   Insn 784: point = 660, n_alt = -1
   Insn 783: point = 660, n_alt = 0
   Insn 782: point = 661, n_alt = 0
   Insn 781: point = 662, n_alt = 0
  BB 43
   Insn 1385: point = 663, n_alt = -1
   Insn 827: point = 663, n_alt = 1
   Insn 826: point = 663, n_alt = 8
   Insn 825: point = 664, n_alt = 3
   Insn 1556: point = 665, n_alt = -1
	Hard reg 21 is preferable by r1045 with profit 1
   Insn 824: point = 667, n_alt = 2
   Insn 1555: point = 668, n_alt = -1
	Hard reg 21 is preferable by r1045 with profit 1
	Hard reg 22 is preferable by r1045 with profit 1
   Insn 823: point = 670, n_alt = 0
   Insn 822: point = 672, n_alt = 0
   Insn 821: point = 674, n_alt = 0
   Insn 820: point = 675, n_alt = 0
   Insn 819: point = 677, n_alt = 2
   Insn 818: point = 679, n_alt = 0
   Insn 817: point = 681, n_alt = 0
   Insn 816: point = 682, n_alt = 3
   Insn 815: point = 684, n_alt = 2
   Insn 814: point = 686, n_alt = 0
   Insn 813: point = 688, n_alt = 0
   Insn 812: point = 689, n_alt = 1
   Insn 811: point = 691, n_alt = 7
   Insn 810: point = 693, n_alt = 3
   Insn 809: point = 694, n_alt = 0
   Insn 808: point = 696, n_alt = 0
   Insn 807: point = 698, n_alt = 0
   Insn 806: point = 699, n_alt = 0
   Insn 805: point = 701, n_alt = 2
   Insn 804: point = 703, n_alt = 0
   Insn 803: point = 705, n_alt = 0
   Insn 802: point = 706, n_alt = 3
   Insn 801: point = 708, n_alt = 2
   Insn 800: point = 710, n_alt = 0
   Insn 799: point = 712, n_alt = 0
   Insn 798: point = 713, n_alt = 7
   Insn 797: point = 715, n_alt = 3
   Insn 796: point = 716, n_alt = 0
   Insn 795: point = 718, n_alt = 0
   Insn 794: point = 720, n_alt = 0
   Insn 793: point = 721, n_alt = 0
   Insn 792: point = 723, n_alt = 2
   Insn 791: point = 725, n_alt = 0
   Insn 790: point = 727, n_alt = 0
   Insn 789: point = 728, n_alt = 3
   Insn 788: point = 730, n_alt = 2
   Insn 787: point = 732, n_alt = 0
   Insn 786: point = 734, n_alt = 0
  BB 41
   Insn 779: point = 736, n_alt = 1
   Insn 778: point = 736, n_alt = 0
   Insn 777: point = 738, n_alt = 3
  BB 97
   Insn 1457: point = 740, n_alt = -1
  BB 39
   Insn 728: point = 741, n_alt = -1
   Insn 727: point = 741, n_alt = 0
   Insn 726: point = 742, n_alt = 0
   Insn 725: point = 743, n_alt = 0
  BB 40
   Insn 1383: point = 744, n_alt = -1
   Insn 771: point = 744, n_alt = 1
   Insn 770: point = 744, n_alt = 8
   Insn 769: point = 745, n_alt = 3
   Insn 1554: point = 746, n_alt = -1
	Hard reg 21 is preferable by r1044 with profit 1
   Insn 768: point = 748, n_alt = 2
   Insn 1553: point = 749, n_alt = -1
	Hard reg 21 is preferable by r1044 with profit 1
	Hard reg 22 is preferable by r1044 with profit 1
   Insn 767: point = 751, n_alt = 0
   Insn 766: point = 753, n_alt = 0
   Insn 765: point = 755, n_alt = 0
   Insn 764: point = 756, n_alt = 0
   Insn 763: point = 758, n_alt = 2
   Insn 762: point = 760, n_alt = 0
   Insn 761: point = 762, n_alt = 0
   Insn 760: point = 763, n_alt = 3
   Insn 759: point = 765, n_alt = 2
   Insn 758: point = 767, n_alt = 0
   Insn 757: point = 769, n_alt = 0
   Insn 756: point = 770, n_alt = 1
   Insn 755: point = 772, n_alt = 7
   Insn 754: point = 774, n_alt = 3
   Insn 753: point = 775, n_alt = 0
   Insn 752: point = 777, n_alt = 0
   Insn 751: point = 779, n_alt = 0
   Insn 750: point = 780, n_alt = 0
   Insn 749: point = 782, n_alt = 2
   Insn 748: point = 784, n_alt = 0
   Insn 747: point = 786, n_alt = 0
   Insn 746: point = 787, n_alt = 3
   Insn 745: point = 789, n_alt = 2
   Insn 744: point = 791, n_alt = 0
   Insn 743: point = 793, n_alt = 0
   Insn 742: point = 794, n_alt = 7
   Insn 741: point = 796, n_alt = 3
   Insn 740: point = 797, n_alt = 0
   Insn 739: point = 799, n_alt = 0
   Insn 738: point = 801, n_alt = 0
   Insn 737: point = 802, n_alt = 0
   Insn 736: point = 804, n_alt = 2
   Insn 735: point = 806, n_alt = 0
   Insn 734: point = 808, n_alt = 0
   Insn 733: point = 809, n_alt = 3
   Insn 732: point = 811, n_alt = 2
   Insn 731: point = 813, n_alt = 0
   Insn 730: point = 815, n_alt = 0
  BB 38
   Insn 723: point = 817, n_alt = 1
   Insn 722: point = 818, n_alt = 0
   Insn 721: point = 820, n_alt = 3
   Insn 720: point = 821, n_alt = 0
   Insn 719: point = 822, n_alt = 8
   Insn 718: point = 823, n_alt = 7
   Insn 717: point = 825, n_alt = 3
   Insn 716: point = 826, n_alt = 0
   Insn 715: point = 828, n_alt = 0
   Insn 714: point = 830, n_alt = 0
   Insn 713: point = 831, n_alt = 0
   Insn 712: point = 833, n_alt = 2
   Insn 711: point = 835, n_alt = 0
   Insn 710: point = 837, n_alt = 0
   Insn 709: point = 838, n_alt = 3
   Insn 708: point = 840, n_alt = 2
   Insn 707: point = 842, n_alt = 0
   Insn 706: point = 844, n_alt = 0
  BB 36
   Insn 699: point = 846, n_alt = 1
   Insn 698: point = 847, n_alt = 0
   Insn 697: point = 849, n_alt = 3
   Insn 696: point = 850, n_alt = 0
  BB 95
   Insn 1451: point = 852, n_alt = -1
  BB 34
   Insn 632: point = 853, n_alt = -1
   Insn 631: point = 853, n_alt = 0
   Insn 630: point = 854, n_alt = 0
   Insn 629: point = 855, n_alt = 0
  BB 35
   Insn 1381: point = 856, n_alt = -1
   Insn 690: point = 856, n_alt = 1
   Insn 689: point = 856, n_alt = 8
   Insn 688: point = 857, n_alt = 7
   Insn 687: point = 858, n_alt = 3
   Insn 686: point = 859, n_alt = 0
   Insn 685: point = 861, n_alt = 0
   Insn 684: point = 863, n_alt = 0
   Insn 683: point = 864, n_alt = 0
   Insn 682: point = 866, n_alt = 2
   Insn 681: point = 868, n_alt = 0
   Insn 680: point = 870, n_alt = 0
   Insn 679: point = 871, n_alt = 3
   Insn 678: point = 873, n_alt = 2
   Insn 677: point = 875, n_alt = 0
   Insn 676: point = 877, n_alt = 0
   Insn 675: point = 878, n_alt = 8
   Insn 674: point = 879, n_alt = 3
   Insn 673: point = 880, n_alt = 7
   Insn 672: point = 882, n_alt = 3
   Insn 671: point = 883, n_alt = 0
   Insn 670: point = 885, n_alt = 0
   Insn 669: point = 887, n_alt = 0
   Insn 668: point = 888, n_alt = 0
   Insn 667: point = 890, n_alt = 2
   Insn 666: point = 892, n_alt = 0
   Insn 665: point = 894, n_alt = 0
   Insn 664: point = 895, n_alt = 3
   Insn 663: point = 897, n_alt = 2
   Insn 662: point = 899, n_alt = 0
   Insn 661: point = 901, n_alt = 0
   Insn 660: point = 902, n_alt = 3
   Insn 659: point = 904, n_alt = 0
   Insn 658: point = 906, n_alt = 0
   Insn 657: point = 907, n_alt = 0
   Insn 656: point = 909, n_alt = 2
   Insn 655: point = 911, n_alt = 0
   Insn 654: point = 913, n_alt = 0
   Insn 653: point = 914, n_alt = 3
   Insn 652: point = 916, n_alt = 2
   Insn 651: point = 918, n_alt = 0
   Insn 650: point = 920, n_alt = 0
   Insn 649: point = 921, n_alt = 8
   Insn 648: point = 922, n_alt = 1
   Insn 647: point = 924, n_alt = 7
   Insn 646: point = 925, n_alt = 7
   Insn 645: point = 927, n_alt = 3
   Insn 644: point = 928, n_alt = 0
   Insn 643: point = 930, n_alt = 0
   Insn 642: point = 932, n_alt = 0
   Insn 641: point = 933, n_alt = 0
   Insn 640: point = 935, n_alt = 2
   Insn 639: point = 937, n_alt = 0
   Insn 638: point = 939, n_alt = 0
   Insn 637: point = 940, n_alt = 3
   Insn 636: point = 942, n_alt = 2
   Insn 635: point = 944, n_alt = 0
   Insn 634: point = 946, n_alt = 0
  BB 33
   Insn 627: point = 948, n_alt = 1
   Insn 626: point = 948, n_alt = 0
   Insn 625: point = 950, n_alt = 3
  BB 94
   Insn 1448: point = 952, n_alt = -1
  BB 31
   Insn 561: point = 953, n_alt = -1
   Insn 560: point = 953, n_alt = 0
   Insn 559: point = 954, n_alt = 0
   Insn 558: point = 955, n_alt = 0
  BB 32
   Insn 1379: point = 956, n_alt = -1
   Insn 619: point = 956, n_alt = 1
   Insn 618: point = 956, n_alt = 8
   Insn 617: point = 957, n_alt = 7
   Insn 616: point = 958, n_alt = 3
   Insn 615: point = 959, n_alt = 0
   Insn 614: point = 961, n_alt = 0
   Insn 613: point = 963, n_alt = 0
   Insn 612: point = 964, n_alt = 0
   Insn 611: point = 966, n_alt = 2
   Insn 610: point = 968, n_alt = 0
   Insn 609: point = 970, n_alt = 0
   Insn 608: point = 971, n_alt = 3
   Insn 607: point = 973, n_alt = 2
   Insn 606: point = 975, n_alt = 0
   Insn 605: point = 977, n_alt = 0
   Insn 604: point = 978, n_alt = 8
   Insn 603: point = 979, n_alt = 3
   Insn 602: point = 980, n_alt = 7
   Insn 601: point = 982, n_alt = 3
   Insn 600: point = 983, n_alt = 0
   Insn 599: point = 985, n_alt = 0
   Insn 598: point = 987, n_alt = 0
   Insn 597: point = 988, n_alt = 0
   Insn 596: point = 990, n_alt = 2
   Insn 595: point = 992, n_alt = 0
   Insn 594: point = 994, n_alt = 0
   Insn 593: point = 995, n_alt = 3
   Insn 592: point = 997, n_alt = 2
   Insn 591: point = 999, n_alt = 0
   Insn 590: point = 1001, n_alt = 0
   Insn 589: point = 1002, n_alt = 3
   Insn 588: point = 1004, n_alt = 0
   Insn 587: point = 1006, n_alt = 0
   Insn 586: point = 1007, n_alt = 0
   Insn 585: point = 1009, n_alt = 2
   Insn 584: point = 1011, n_alt = 0
   Insn 583: point = 1013, n_alt = 0
   Insn 582: point = 1014, n_alt = 3
   Insn 581: point = 1016, n_alt = 2
   Insn 580: point = 1018, n_alt = 0
   Insn 579: point = 1020, n_alt = 0
   Insn 578: point = 1021, n_alt = 8
   Insn 577: point = 1022, n_alt = 1
   Insn 576: point = 1024, n_alt = 7
   Insn 575: point = 1025, n_alt = 7
   Insn 574: point = 1027, n_alt = 3
   Insn 573: point = 1028, n_alt = 0
   Insn 572: point = 1030, n_alt = 0
   Insn 571: point = 1032, n_alt = 0
   Insn 570: point = 1033, n_alt = 0
   Insn 569: point = 1035, n_alt = 2
   Insn 568: point = 1037, n_alt = 0
   Insn 567: point = 1039, n_alt = 0
   Insn 566: point = 1040, n_alt = 3
   Insn 565: point = 1042, n_alt = 2
   Insn 564: point = 1044, n_alt = 0
   Insn 563: point = 1046, n_alt = 0
  BB 30
   Insn 556: point = 1048, n_alt = 1
   Insn 555: point = 1048, n_alt = 0
   Insn 554: point = 1050, n_alt = 3
  BB 93
   Insn 1445: point = 1052, n_alt = -1
  BB 28
   Insn 490: point = 1053, n_alt = -1
   Insn 489: point = 1053, n_alt = 0
   Insn 488: point = 1054, n_alt = 0
   Insn 487: point = 1055, n_alt = 0
  BB 29
   Insn 1377: point = 1056, n_alt = -1
   Insn 548: point = 1056, n_alt = 1
   Insn 547: point = 1056, n_alt = 8
   Insn 546: point = 1057, n_alt = 7
   Insn 545: point = 1058, n_alt = 3
   Insn 544: point = 1059, n_alt = 0
   Insn 543: point = 1061, n_alt = 0
   Insn 542: point = 1063, n_alt = 0
   Insn 541: point = 1064, n_alt = 0
   Insn 540: point = 1066, n_alt = 2
   Insn 539: point = 1068, n_alt = 0
   Insn 538: point = 1070, n_alt = 0
   Insn 537: point = 1071, n_alt = 3
   Insn 536: point = 1073, n_alt = 2
   Insn 535: point = 1075, n_alt = 0
   Insn 534: point = 1077, n_alt = 0
   Insn 533: point = 1078, n_alt = 8
   Insn 532: point = 1079, n_alt = 3
   Insn 531: point = 1080, n_alt = 7
   Insn 530: point = 1082, n_alt = 3
   Insn 529: point = 1083, n_alt = 0
   Insn 528: point = 1085, n_alt = 0
   Insn 527: point = 1087, n_alt = 0
   Insn 526: point = 1088, n_alt = 0
   Insn 525: point = 1090, n_alt = 2
   Insn 524: point = 1092, n_alt = 0
   Insn 523: point = 1094, n_alt = 0
   Insn 522: point = 1095, n_alt = 3
   Insn 521: point = 1097, n_alt = 2
   Insn 520: point = 1099, n_alt = 0
   Insn 519: point = 1101, n_alt = 0
   Insn 518: point = 1102, n_alt = 3
   Insn 517: point = 1104, n_alt = 0
   Insn 516: point = 1106, n_alt = 0
   Insn 515: point = 1107, n_alt = 0
   Insn 514: point = 1109, n_alt = 2
   Insn 513: point = 1111, n_alt = 0
   Insn 512: point = 1113, n_alt = 0
   Insn 511: point = 1114, n_alt = 3
   Insn 510: point = 1116, n_alt = 2
   Insn 509: point = 1118, n_alt = 0
   Insn 508: point = 1120, n_alt = 0
   Insn 507: point = 1121, n_alt = 8
   Insn 506: point = 1122, n_alt = 1
   Insn 505: point = 1124, n_alt = 7
   Insn 504: point = 1125, n_alt = 7
   Insn 503: point = 1127, n_alt = 3
   Insn 502: point = 1128, n_alt = 0
   Insn 501: point = 1130, n_alt = 0
   Insn 500: point = 1132, n_alt = 0
   Insn 499: point = 1133, n_alt = 0
   Insn 498: point = 1135, n_alt = 2
   Insn 497: point = 1137, n_alt = 0
   Insn 496: point = 1139, n_alt = 0
   Insn 495: point = 1140, n_alt = 3
   Insn 494: point = 1142, n_alt = 2
   Insn 493: point = 1144, n_alt = 0
   Insn 492: point = 1146, n_alt = 0
  BB 27
   Insn 485: point = 1148, n_alt = 1
   Insn 484: point = 1149, n_alt = 0
   Insn 483: point = 1151, n_alt = 3
   Insn 482: point = 1152, n_alt = 0
   Insn 481: point = 1153, n_alt = 8
   Insn 480: point = 1154, n_alt = 3
   Insn 479: point = 1155, n_alt = 7
   Insn 478: point = 1157, n_alt = 3
   Insn 477: point = 1158, n_alt = 0
   Insn 476: point = 1160, n_alt = 0
   Insn 475: point = 1162, n_alt = 0
   Insn 474: point = 1163, n_alt = 0
   Insn 473: point = 1165, n_alt = 2
   Insn 472: point = 1167, n_alt = 0
   Insn 471: point = 1169, n_alt = 0
   Insn 470: point = 1170, n_alt = 3
   Insn 469: point = 1172, n_alt = 2
   Insn 468: point = 1174, n_alt = 0
   Insn 467: point = 1176, n_alt = 0
   Insn 466: point = 1177, n_alt = 3
   Insn 465: point = 1179, n_alt = 0
   Insn 464: point = 1181, n_alt = 0
   Insn 463: point = 1182, n_alt = 0
   Insn 462: point = 1184, n_alt = 2
   Insn 461: point = 1186, n_alt = 0
   Insn 460: point = 1188, n_alt = 0
   Insn 459: point = 1189, n_alt = 3
   Insn 458: point = 1191, n_alt = 2
   Insn 457: point = 1193, n_alt = 0
   Insn 456: point = 1195, n_alt = 0
   Insn 455: point = 1196, n_alt = 8
   Insn 454: point = 1197, n_alt = 2
   Insn 453: point = 1199, n_alt = 7
   Insn 452: point = 1200, n_alt = 7
   Insn 451: point = 1202, n_alt = 3
   Insn 450: point = 1203, n_alt = 0
   Insn 449: point = 1205, n_alt = 0
   Insn 448: point = 1207, n_alt = 0
   Insn 447: point = 1208, n_alt = 0
   Insn 446: point = 1210, n_alt = 2
   Insn 445: point = 1212, n_alt = 0
   Insn 444: point = 1214, n_alt = 0
   Insn 443: point = 1215, n_alt = 3
   Insn 442: point = 1217, n_alt = 2
   Insn 441: point = 1219, n_alt = 0
   Insn 440: point = 1221, n_alt = 0
  BB 25
   Insn 407: point = 1223, n_alt = -1
   Insn 406: point = 1223, n_alt = 1
   Insn 405: point = 1224, n_alt = 7
  BB 24
   Insn 404: point = 1226, n_alt = -1
   Insn 403: point = 1226, n_alt = 1
   Insn 402: point = 1227, n_alt = 7
   Insn 401: point = 1228, n_alt = 7
   Insn 400: point = 1230, n_alt = 3
   Insn 399: point = 1231, n_alt = 0
   Insn 398: point = 1233, n_alt = 0
   Insn 397: point = 1235, n_alt = 0
   Insn 396: point = 1236, n_alt = 0
   Insn 395: point = 1238, n_alt = 2
   Insn 394: point = 1240, n_alt = 0
   Insn 393: point = 1242, n_alt = 0
   Insn 392: point = 1243, n_alt = 3
   Insn 391: point = 1245, n_alt = 2
   Insn 390: point = 1247, n_alt = 0
   Insn 389: point = 1249, n_alt = 0
  BB 90
   Insn 1435: point = 1251, n_alt = -1
  BB 20
   Insn 342: point = 1252, n_alt = -1
   Insn 341: point = 1252, n_alt = 0
   Insn 340: point = 1253, n_alt = 0
   Insn 339: point = 1254, n_alt = 0
  BB 23
   Insn 1375: point = 1255, n_alt = -1
   Insn 383: point = 1255, n_alt = 1
  BB 22
   Insn 1436: point = 1256, n_alt = -1
   Insn 380: point = 1256, n_alt = 1
   Insn 379: point = 1257, n_alt = 0
  BB 92
   Insn 1442: point = 1259, n_alt = -1
  BB 91
   Insn 1440: point = 1260, n_alt = -1
  BB 21
   Insn 377: point = 1261, n_alt = -1
   Insn 376: point = 1261, n_alt = 1
   Insn 375: point = 1262, n_alt = 7
   Insn 374: point = 1263, n_alt = 2
   Insn 373: point = 1265, n_alt = 1
   Insn 372: point = 1267, n_alt = 2
   Insn 371: point = 1268, n_alt = 7
   Insn 370: point = 1270, n_alt = 3
   Insn 369: point = 1271, n_alt = 0
   Insn 368: point = 1273, n_alt = 0
   Insn 367: point = 1275, n_alt = 0
   Insn 366: point = 1276, n_alt = 0
   Insn 365: point = 1278, n_alt = 2
   Insn 364: point = 1280, n_alt = 0
   Insn 363: point = 1282, n_alt = 0
   Insn 362: point = 1283, n_alt = 3
   Insn 361: point = 1285, n_alt = 2
   Insn 360: point = 1287, n_alt = 0
   Insn 359: point = 1289, n_alt = 0
   Insn 358: point = 1290, n_alt = 1
   Insn 357: point = 1292, n_alt = 2
   Insn 356: point = 1293, n_alt = 7
   Insn 355: point = 1295, n_alt = 3
   Insn 354: point = 1296, n_alt = 0
   Insn 353: point = 1298, n_alt = 0
   Insn 352: point = 1300, n_alt = 0
   Insn 351: point = 1301, n_alt = 0
   Insn 350: point = 1303, n_alt = 2
   Insn 349: point = 1305, n_alt = 0
   Insn 348: point = 1307, n_alt = 0
   Insn 347: point = 1308, n_alt = 3
   Insn 346: point = 1310, n_alt = 2
   Insn 345: point = 1312, n_alt = 0
   Insn 344: point = 1314, n_alt = 0
  BB 19
   Insn 337: point = 1316, n_alt = 1
   Insn 336: point = 1317, n_alt = 0
   Insn 335: point = 1319, n_alt = 3
   Insn 334: point = 1320, n_alt = 0
   Insn 333: point = 1321, n_alt = 1
   Insn 332: point = 1322, n_alt = 0
   Insn 331: point = 1323, n_alt = 1
   Insn 330: point = 1324, n_alt = 0
   Insn 329: point = 1326, n_alt = 0
  BB 17
   Insn 319: point = 1328, n_alt = 1
   Insn 318: point = 1328, n_alt = 3
   Insn 317: point = 1330, n_alt = 0
   Insn 316: point = 1332, n_alt = 3
  BB 85
   Insn 1420: point = 1334, n_alt = -1
  BB 6
   Insn 167: point = 1335, n_alt = -1
   Insn 166: point = 1335, n_alt = 0
   Insn 165: point = 1336, n_alt = 0
   Insn 164: point = 1337, n_alt = 0
  BB 16
   Insn 1373: point = 1338, n_alt = -1
   Insn 310: point = 1338, n_alt = 1
  BB 86
   Insn 1423: point = 1339, n_alt = -1
  BB 8
   Insn 176: point = 1340, n_alt = -1
   Insn 175: point = 1340, n_alt = 0
   Insn 174: point = 1341, n_alt = 0
   Insn 173: point = 1342, n_alt = 0
  BB 15
   Insn 1371: point = 1343, n_alt = -1
   Insn 304: point = 1343, n_alt = 1
  BB 88
   Insn 1429: point = 1344, n_alt = -1
  BB 13
   Insn 255: point = 1345, n_alt = -1
   Insn 254: point = 1345, n_alt = 0
   Insn 253: point = 1346, n_alt = 0
   Insn 252: point = 1347, n_alt = 0
  BB 14
   Insn 1369: point = 1348, n_alt = -1
   Insn 298: point = 1348, n_alt = 1
   Insn 297: point = 1348, n_alt = 8
   Insn 296: point = 1349, n_alt = 3
   Insn 1552: point = 1350, n_alt = -1
	Hard reg 21 is preferable by r1043 with profit 1
   Insn 295: point = 1352, n_alt = 2
   Insn 1551: point = 1353, n_alt = -1
	Hard reg 21 is preferable by r1043 with profit 1
	Hard reg 22 is preferable by r1043 with profit 1
   Insn 294: point = 1355, n_alt = 0
   Insn 293: point = 1357, n_alt = 0
   Insn 292: point = 1359, n_alt = 0
   Insn 291: point = 1360, n_alt = 0
   Insn 290: point = 1362, n_alt = 2
   Insn 289: point = 1364, n_alt = 0
   Insn 288: point = 1366, n_alt = 0
   Insn 287: point = 1367, n_alt = 3
   Insn 286: point = 1369, n_alt = 2
   Insn 285: point = 1371, n_alt = 0
   Insn 284: point = 1373, n_alt = 0
   Insn 283: point = 1374, n_alt = 1
   Insn 282: point = 1376, n_alt = 7
   Insn 281: point = 1378, n_alt = 3
   Insn 280: point = 1379, n_alt = 0
   Insn 279: point = 1381, n_alt = 0
   Insn 278: point = 1383, n_alt = 0
   Insn 277: point = 1384, n_alt = 0
   Insn 276: point = 1386, n_alt = 2
   Insn 275: point = 1388, n_alt = 0
   Insn 274: point = 1390, n_alt = 0
   Insn 273: point = 1391, n_alt = 3
   Insn 272: point = 1393, n_alt = 2
   Insn 271: point = 1395, n_alt = 0
   Insn 270: point = 1397, n_alt = 0
   Insn 269: point = 1398, n_alt = 7
   Insn 268: point = 1400, n_alt = 3
   Insn 267: point = 1401, n_alt = 0
   Insn 266: point = 1403, n_alt = 0
   Insn 265: point = 1405, n_alt = 0
   Insn 264: point = 1406, n_alt = 0
   Insn 263: point = 1408, n_alt = 2
   Insn 262: point = 1410, n_alt = 0
   Insn 261: point = 1412, n_alt = 0
   Insn 260: point = 1413, n_alt = 3
   Insn 259: point = 1415, n_alt = 2
   Insn 258: point = 1417, n_alt = 0
   Insn 257: point = 1419, n_alt = 0
  BB 12
   Insn 250: point = 1421, n_alt = 1
   Insn 249: point = 1421, n_alt = 0
   Insn 248: point = 1423, n_alt = 3
  BB 87
   Insn 1426: point = 1425, n_alt = -1
  BB 10
   Insn 199: point = 1426, n_alt = -1
   Insn 198: point = 1426, n_alt = 0
   Insn 197: point = 1427, n_alt = 0
   Insn 196: point = 1428, n_alt = 0
  BB 11
   Insn 1367: point = 1429, n_alt = -1
   Insn 242: point = 1429, n_alt = 1
   Insn 241: point = 1429, n_alt = 8
   Insn 240: point = 1430, n_alt = 3
   Insn 1550: point = 1431, n_alt = -1
	Hard reg 21 is preferable by r1042 with profit 1
   Insn 239: point = 1433, n_alt = 2
   Insn 1549: point = 1434, n_alt = -1
	Hard reg 21 is preferable by r1042 with profit 1
	Hard reg 22 is preferable by r1042 with profit 1
   Insn 238: point = 1436, n_alt = 0
   Insn 237: point = 1438, n_alt = 0
   Insn 236: point = 1440, n_alt = 0
   Insn 235: point = 1441, n_alt = 0
   Insn 234: point = 1443, n_alt = 2
   Insn 233: point = 1445, n_alt = 0
   Insn 232: point = 1447, n_alt = 0
   Insn 231: point = 1448, n_alt = 3
   Insn 230: point = 1450, n_alt = 2
   Insn 229: point = 1452, n_alt = 0
   Insn 228: point = 1454, n_alt = 0
   Insn 227: point = 1455, n_alt = 1
   Insn 226: point = 1457, n_alt = 7
   Insn 225: point = 1459, n_alt = 3
   Insn 224: point = 1460, n_alt = 0
   Insn 223: point = 1462, n_alt = 0
   Insn 222: point = 1464, n_alt = 0
   Insn 221: point = 1465, n_alt = 0
   Insn 220: point = 1467, n_alt = 2
   Insn 219: point = 1469, n_alt = 0
   Insn 218: point = 1471, n_alt = 0
   Insn 217: point = 1472, n_alt = 3
   Insn 216: point = 1474, n_alt = 2
   Insn 215: point = 1476, n_alt = 0
   Insn 214: point = 1478, n_alt = 0
   Insn 213: point = 1479, n_alt = 7
   Insn 212: point = 1481, n_alt = 3
   Insn 211: point = 1482, n_alt = 0
   Insn 210: point = 1484, n_alt = 0
   Insn 209: point = 1486, n_alt = 0
   Insn 208: point = 1487, n_alt = 0
   Insn 207: point = 1489, n_alt = 2
   Insn 206: point = 1491, n_alt = 0
   Insn 205: point = 1493, n_alt = 0
   Insn 204: point = 1494, n_alt = 3
   Insn 203: point = 1496, n_alt = 2
   Insn 202: point = 1498, n_alt = 0
   Insn 201: point = 1500, n_alt = 0
  BB 9
   Insn 194: point = 1502, n_alt = 1
   Insn 193: point = 1502, n_alt = 0
   Insn 192: point = 1504, n_alt = 3
   Insn 191: point = 1505, n_alt = 8
   Insn 190: point = 1506, n_alt = 7
   Insn 189: point = 1508, n_alt = 3
   Insn 188: point = 1509, n_alt = 0
   Insn 187: point = 1511, n_alt = 0
   Insn 186: point = 1513, n_alt = 0
   Insn 185: point = 1514, n_alt = 0
   Insn 184: point = 1516, n_alt = 2
   Insn 1569: point = 1518, n_alt = 3
   Insn 183: point = 1519, n_alt = 0
   Insn 182: point = 1521, n_alt = 0
   Insn 181: point = 1522, n_alt = 3
   Insn 1547: point = 1524, n_alt = 3
   Insn 180: point = 1525, n_alt = 2
   Insn 1570: point = 1527, n_alt = 3
   Insn 179: point = 1528, n_alt = 0
   Insn 178: point = 1530, n_alt = 0
  BB 7
   Insn 171: point = 1532, n_alt = 1
   Insn 170: point = 1532, n_alt = 0
   Insn 169: point = 1534, n_alt = 3
  BB 5
   Insn 162: point = 1536, n_alt = 1
   Insn 161: point = 1536, n_alt = 0
   Insn 160: point = 1538, n_alt = 3
  BB 4
   Insn 158: point = 1540, n_alt = -1
   Insn 157: point = 1540, n_alt = 0
   Insn 156: point = 1541, n_alt = 0
   Insn 155: point = 1542, n_alt = 1
   Insn 154: point = 1543, n_alt = 0
   Insn 153: point = 1545, n_alt = 0
  BB 2
   Insn 145: point = 1547, n_alt = 1
   Insn 1544: point = 1547, n_alt = 1
   Insn 144: point = 1549, n_alt = 0
   Insn 143: point = 1551, n_alt = 3
   Insn 1543: point = 1552, n_alt = -1
	Hard reg 39 is preferable by r1036 with profit 1
   Insn 142: point = 1554, n_alt = 0
   Insn 1542: point = 1554, n_alt = -1
	Hard reg 39 is preferable by r1036 with profit 1
	Hard reg 0 is preferable by r1036 with profit 1
   Insn 1541: point = 1556, n_alt = -1
	Hard reg 0 is preferable by r1035 with profit 1
   Insn 141: point = 1558, n_alt = 0
   Insn 1540: point = 1558, n_alt = -1
   Insn 137: point = 1559, n_alt = 5
   Insn 136: point = 1560, n_alt = 5
   Insn 135: point = 1561, n_alt = -1
   Insn 133: point = 1563, n_alt = 1
   Insn 131: point = 1565, n_alt = 0
   Insn 132: point = 1565, n_alt = 2
   Insn 1539: point = 1566, n_alt = -1
	Hard reg 0 is preferable by r1034 with profit 1
   Insn 130: point = 1568, n_alt = 2
   Insn 1538: point = 1568, n_alt = -1
   Insn 129: point = 1569, n_alt = 5
   Insn 128: point = 1570, n_alt = 0
   Insn 127: point = 1572, n_alt = 0
   Insn 126: point = 1574, n_alt = 3
   Insn 1537: point = 1575, n_alt = -1
	Hard reg 38 is preferable by r1033 with profit 1
   Insn 125: point = 1577, n_alt = 0
   Insn 1536: point = 1578, n_alt = -1
	Hard reg 38 is preferable by r1033 with profit 1
	Hard reg 1 is preferable by r1033 with profit 1
   Insn 123: point = 1580, n_alt = 0
   Insn 124: point = 1580, n_alt = 2
   Insn 1535: point = 1581, n_alt = -1
	Hard reg 0 is preferable by r1032 with profit 1
   Insn 122: point = 1583, n_alt = 2
   Insn 1534: point = 1583, n_alt = -1
   Insn 121: point = 1584, n_alt = 5
   Insn 120: point = 1585, n_alt = 0
   Insn 119: point = 1587, n_alt = 0
   Insn 118: point = 1589, n_alt = 3
   Insn 1533: point = 1590, n_alt = -1
	Hard reg 37 is preferable by r1031 with profit 1
   Insn 117: point = 1592, n_alt = 0
   Insn 1532: point = 1593, n_alt = -1
	Hard reg 37 is preferable by r1031 with profit 1
	Hard reg 1 is preferable by r1031 with profit 1
   Insn 115: point = 1595, n_alt = 0
   Insn 116: point = 1595, n_alt = 2
   Insn 114: point = 1596, n_alt = 3
   Insn 113: point = 1597, n_alt = 5
   Insn 112: point = 1598, n_alt = 0
   Insn 111: point = 1600, n_alt = 0
   Insn 110: point = 1602, n_alt = 3
   Insn 1531: point = 1603, n_alt = -1
	Hard reg 43 is preferable by r1030 with profit 1
   Insn 109: point = 1605, n_alt = 0
   Insn 1530: point = 1605, n_alt = -1
	Hard reg 43 is preferable by r1030 with profit 1
	Hard reg 0 is preferable by r1030 with profit 1
   Insn 1529: point = 1607, n_alt = -1
	Hard reg 0 is preferable by r1029 with profit 1
   Insn 108: point = 1609, n_alt = 0
   Insn 1528: point = 1609, n_alt = -1
   Insn 104: point = 1610, n_alt = 2
   Insn 103: point = 1611, n_alt = 3
   Insn 102: point = 1612, n_alt = -1
   Insn 100: point = 1614, n_alt = 1
   Insn 98: point = 1616, n_alt = 0
   Insn 99: point = 1616, n_alt = 2
   Insn 1527: point = 1617, n_alt = -1
	Hard reg 0 is preferable by r1028 with profit 1
   Insn 97: point = 1619, n_alt = 2
   Insn 1526: point = 1619, n_alt = -1
   Insn 96: point = 1620, n_alt = 5
   Insn 95: point = 1621, n_alt = 0
   Insn 94: point = 1623, n_alt = 0
   Insn 93: point = 1625, n_alt = 3
   Insn 1525: point = 1626, n_alt = -1
	Hard reg 42 is preferable by r1027 with profit 1
   Insn 92: point = 1628, n_alt = 0
   Insn 1524: point = 1629, n_alt = -1
	Hard reg 42 is preferable by r1027 with profit 1
	Hard reg 1 is preferable by r1027 with profit 1
   Insn 90: point = 1631, n_alt = 0
   Insn 91: point = 1631, n_alt = 2
   Insn 1523: point = 1632, n_alt = -1
	Hard reg 0 is preferable by r1026 with profit 1
   Insn 89: point = 1634, n_alt = 2
   Insn 1522: point = 1634, n_alt = -1
   Insn 88: point = 1635, n_alt = 5
   Insn 87: point = 1636, n_alt = 0
   Insn 86: point = 1638, n_alt = 0
   Insn 85: point = 1640, n_alt = 3
   Insn 1521: point = 1641, n_alt = -1
	Hard reg 41 is preferable by r1025 with profit 1
   Insn 84: point = 1643, n_alt = 0
   Insn 1520: point = 1644, n_alt = -1
	Hard reg 41 is preferable by r1025 with profit 1
	Hard reg 1 is preferable by r1025 with profit 1
   Insn 82: point = 1646, n_alt = 0
   Insn 83: point = 1646, n_alt = 2
   Insn 81: point = 1647, n_alt = 3
   Insn 80: point = 1648, n_alt = 5
   Insn 79: point = 1649, n_alt = 0
   Insn 78: point = 1651, n_alt = 0
   Insn 77: point = 1653, n_alt = 3
   Insn 1519: point = 1654, n_alt = -1
	Hard reg 3 is preferable by r1024 with profit 1
   Insn 76: point = 1656, n_alt = 0
   Insn 1518: point = 1656, n_alt = -1
	Hard reg 3 is preferable by r1024 with profit 1
	Hard reg 0 is preferable by r1024 with profit 1
   Insn 1517: point = 1658, n_alt = -1
	Hard reg 0 is preferable by r1023 with profit 1
   Insn 75: point = 1660, n_alt = 0
   Insn 1516: point = 1660, n_alt = -1
   Insn 71: point = 1661, n_alt = 2
   Insn 70: point = 1662, n_alt = 3
   Insn 69: point = 1663, n_alt = -1
   Insn 67: point = 1665, n_alt = 1
   Insn 65: point = 1667, n_alt = 0
   Insn 66: point = 1667, n_alt = 2
   Insn 1515: point = 1668, n_alt = -1
	Hard reg 0 is preferable by r1022 with profit 1
   Insn 64: point = 1670, n_alt = 2
   Insn 1514: point = 1670, n_alt = -1
   Insn 63: point = 1671, n_alt = 5
   Insn 62: point = 1672, n_alt = 0
   Insn 61: point = 1674, n_alt = 0
   Insn 60: point = 1676, n_alt = 3
   Insn 1513: point = 1677, n_alt = -1
	Hard reg 5 is preferable by r1021 with profit 1
   Insn 59: point = 1679, n_alt = 0
   Insn 1512: point = 1680, n_alt = -1
	Hard reg 5 is preferable by r1021 with profit 1
	Hard reg 1 is preferable by r1021 with profit 1
   Insn 57: point = 1682, n_alt = 0
   Insn 58: point = 1682, n_alt = 2
   Insn 1511: point = 1683, n_alt = -1
	Hard reg 0 is preferable by r1020 with profit 1
   Insn 56: point = 1685, n_alt = 2
   Insn 1510: point = 1685, n_alt = -1
   Insn 55: point = 1686, n_alt = 5
   Insn 54: point = 1687, n_alt = 0
   Insn 53: point = 1689, n_alt = 0
   Insn 52: point = 1691, n_alt = 3
   Insn 1509: point = 1692, n_alt = -1
	Hard reg 4 is preferable by r1019 with profit 1
   Insn 51: point = 1694, n_alt = 0
   Insn 1508: point = 1695, n_alt = -1
	Hard reg 4 is preferable by r1019 with profit 1
	Hard reg 1 is preferable by r1019 with profit 1
   Insn 49: point = 1697, n_alt = 0
   Insn 50: point = 1697, n_alt = 2
   Insn 48: point = 1698, n_alt = 3
   Insn 47: point = 1699, n_alt = 5
   Insn 46: point = 1700, n_alt = 0
   Insn 45: point = 1702, n_alt = 0
   Insn 44: point = 1704, n_alt = 3
   Insn 1506: point = 1705, n_alt = 5
   Insn 43: point = 1707, n_alt = 0
   Insn 1507: point = 1708, n_alt = -1
	   Creating copy r1018<-r1050@1
   Insn 1505: point = 1710, n_alt = -1
	Hard reg 0 is preferable by r1017 with profit 1
   Insn 1504: point = 1712, n_alt = -1
	Hard reg 0 is preferable by r1016 with profit 1
   Insn 42: point = 1714, n_alt = 0
   Insn 1503: point = 1714, n_alt = -1
	   Creating copy r1016<-r1052@1
   Insn 38: point = 1716, n_alt = 2
   Insn 37: point = 1717, n_alt = 3
   Insn 36: point = 1718, n_alt = -1
   Insn 34: point = 1720, n_alt = 1
   Insn 32: point = 1722, n_alt = 0
   Insn 33: point = 1722, n_alt = 2
   Insn 1502: point = 1723, n_alt = -1
	Hard reg 0 is preferable by r1015 with profit 1
   Insn 31: point = 1725, n_alt = 2
   Insn 1501: point = 1725, n_alt = -1
	   Creating copy r1015<-r1050@1
   Insn 1565: point = 1726, n_alt = -1
	   Creating copy r1050<-r1051@1
   Insn 30: point = 1728, n_alt = 5
   Insn 29: point = 1729, n_alt = 0
   Insn 28: point = 1731, n_alt = 0
   Insn 27: point = 1733, n_alt = 3
   Insn 1566: point = 1734, n_alt = 5
   Insn 1500: point = 1735, n_alt = -1
	   Creating copy r1014->r1051@1
   Insn 26: point = 1737, n_alt = 0
   Insn 1499: point = 1738, n_alt = -1
	Hard reg 1 is preferable by r1014 with profit 1
   Insn 24: point = 1740, n_alt = 0
   Insn 25: point = 1740, n_alt = 2
   Insn 1498: point = 1741, n_alt = -1
	Hard reg 0 is preferable by r1013 with profit 1
   Insn 23: point = 1743, n_alt = 2
   Insn 1497: point = 1743, n_alt = -1
	   Creating copy r1013<-r1052@1
   Insn 1567: point = 1744, n_alt = -1
	   Creating copy r1052<-r1053@1
   Insn 22: point = 1746, n_alt = 5
   Insn 21: point = 1747, n_alt = 0
   Insn 20: point = 1749, n_alt = 0
   Insn 19: point = 1751, n_alt = 3
   Insn 1568: point = 1752, n_alt = 5
   Insn 1496: point = 1753, n_alt = -1
	   Creating copy r1012->r1053@1
   Insn 18: point = 1755, n_alt = 0
   Insn 1495: point = 1756, n_alt = -1
	Hard reg 1 is preferable by r1012 with profit 1
   Insn 16: point = 1758, n_alt = 0
   Insn 17: point = 1758, n_alt = 2
   Insn 15: point = 1759, n_alt = 3
   Insn 14: point = 1760, n_alt = 5
   Insn 13: point = 1761, n_alt = 0
   Insn 12: point = 1763, n_alt = 0
   Insn 11: point = 1765, n_alt = 3
   Insn 7: point = 1766, n_alt = 5
   Insn 6: point = 1766, n_alt = 5
   Insn 5: point = 1766, n_alt = 5
   Insn 4: point = 1766, n_alt = 5
   Insn 3: point = 1766, n_alt = 5
   Insn 2: point = 1766, n_alt = 5
 r87: [1762..1763]
 r88: [1748..1749]
 r89: [1730..1731]
 r90: [1717..1718]
 r91: [1716..1766]
 r93: [1711..1712]
 r94: [1701..1702]
 r95: [1688..1689]
 r96: [1673..1674]
 r97: [1662..1663]
 r98: [1661..1766]
 r100: [1657..1658]
 r101: [1650..1651]
 r102: [1637..1638]
 r103: [1622..1623]
 r104: [1611..1612]
 r105: [1610..1766]
 r107: [1606..1607]
 r108: [1599..1600]
 r109: [1586..1587]
 r110: [1571..1572]
 r111: [1560..1561]
 r112: [1559..1766]
 r114: [1555..1556]
 r115: [169..171]
 r116: [1544..1545]
 r117: [1540..1541]
 r118: [1529..1530]
 r119: [1526..1528]
 r120: [1523..1525]
 r121: [1515..1522]
 r122: [1517..1519]
 r123: [1515..1516]
 r124: [1510..1514]
 r125: [1510..1511]
 r126: [1507..1509]
 r127: [1499..1500]
 r128: [1497..1498]
 r129: [1495..1496]
 r130: [1488..1494]
 r131: [1490..1491]
 r132: [1488..1489]
 r133: [1483..1487]
 r134: [1483..1484]
 r135: [1480..1482]
 r136: [1435..1479]
 r137: [1475..1476]
 r138: [1473..1474]
 r139: [1466..1472]
 r140: [1468..1469]
 r141: [1466..1467]
 r142: [1461..1465]
 r143: [1461..1462]
 r144: [1458..1460]
 r145: [1456..1457]
 r146: [1433..1455]
 r147: [1453..1454]
 r148: [1451..1452]
 r149: [1449..1450]
 r150: [1442..1448]
 r151: [1444..1445]
 r152: [1442..1443]
 r153: [1437..1441]
 r154: [1437..1438]
 r155: [1429..1436]
 r156: [1429..1431]
 r157: [1418..1419]
 r158: [1416..1417]
 r159: [1414..1415]
 r160: [1407..1413]
 r161: [1409..1410]
 r162: [1407..1408]
 r163: [1402..1406]
 r164: [1402..1403]
 r165: [1399..1401]
 r166: [1354..1398]
 r167: [1394..1395]
 r168: [1392..1393]
 r169: [1385..1391]
 r170: [1387..1388]
 r171: [1385..1386]
 r172: [1380..1384]
 r173: [1380..1381]
 r174: [1377..1379]
 r175: [1375..1376]
 r176: [1352..1374]
 r177: [1372..1373]
 r178: [1370..1371]
 r179: [1368..1369]
 r180: [1361..1367]
 r181: [1363..1364]
 r182: [1361..1362]
 r183: [1356..1360]
 r184: [1356..1357]
 r185: [1348..1355]
 r186: [1348..1350]
 r187: [1329..1330]
 r188: [1313..1314]
 r189: [1311..1312]
 r190: [1309..1310]
 r191: [1302..1308]
 r192: [1304..1305]
 r193: [1302..1303]
 r194: [1297..1301]
 r195: [1297..1298]
 r196: [1294..1296]
 r197: [1291..1293]
 r198: [1264..1290]
 r199: [1288..1289]
 r200: [1286..1287]
 r201: [1284..1285]
 r202: [1277..1283]
 r203: [1279..1280]
 r204: [1277..1278]
 r205: [1272..1276]
 r206: [1272..1273]
 r207: [1269..1271]
 r208: [1266..1268]
 r209: [1264..1265]
 r210: [1248..1249]
 r211: [1246..1247]
 r212: [1244..1245]
 r213: [1237..1243]
 r214: [1239..1240]
 r215: [1237..1238]
 r216: [1232..1236]
 r217: [1232..1233]
 r218: [1229..1231]
 r219: [1223..1228]
 r220: [1220..1221]
 r221: [1218..1219]
 r222: [1216..1217]
 r223: [1209..1215]
 r224: [1211..1212]
 r225: [1209..1210]
 r226: [1204..1208]
 r227: [1204..1205]
 r228: [1201..1203]
 r229: [1198..1200]
 r230: [1194..1195]
 r231: [1192..1193]
 r232: [1190..1191]
 r233: [1183..1189]
 r234: [1185..1186]
 r235: [1183..1184]
 r236: [1178..1182]
 r237: [1178..1179]
 r238: [1156..1177]
 r239: [1175..1176]
 r240: [1173..1174]
 r241: [1171..1172]
 r242: [1164..1170]
 r243: [1166..1167]
 r244: [1164..1165]
 r245: [1159..1163]
 r246: [1159..1160]
 r247: [1153..1158]
 r248: [1153..1155]
 r249: [1145..1146]
 r250: [1143..1144]
 r251: [1141..1142]
 r252: [1134..1140]
 r253: [1136..1137]
 r254: [1134..1135]
 r255: [1129..1133]
 r256: [1129..1130]
 r257: [1126..1128]
 r258: [1123..1125]
 r259: [1119..1120]
 r260: [1117..1118]
 r261: [1115..1116]
 r262: [1108..1114]
 r263: [1110..1111]
 r264: [1108..1109]
 r265: [1103..1107]
 r266: [1103..1104]
 r267: [1081..1102]
 r268: [1100..1101]
 r269: [1098..1099]
 r270: [1096..1097]
 r271: [1089..1095]
 r272: [1091..1092]
 r273: [1089..1090]
 r274: [1084..1088]
 r275: [1084..1085]
 r276: [1078..1083]
 r277: [1078..1080]
 r278: [1076..1077]
 r279: [1074..1075]
 r280: [1072..1073]
 r281: [1065..1071]
 r282: [1067..1068]
 r283: [1065..1066]
 r284: [1060..1064]
 r285: [1060..1061]
 r286: [1056..1059]
 r287: [1045..1046]
 r288: [1043..1044]
 r289: [1041..1042]
 r290: [1034..1040]
 r291: [1036..1037]
 r292: [1034..1035]
 r293: [1029..1033]
 r294: [1029..1030]
 r295: [1026..1028]
 r296: [1023..1025]
 r297: [1019..1020]
 r298: [1017..1018]
 r299: [1015..1016]
 r300: [1008..1014]
 r301: [1010..1011]
 r302: [1008..1009]
 r303: [1003..1007]
 r304: [1003..1004]
 r305: [981..1002]
 r306: [1000..1001]
 r307: [998..999]
 r308: [996..997]
 r309: [989..995]
 r310: [991..992]
 r311: [989..990]
 r312: [984..988]
 r313: [984..985]
 r314: [978..983]
 r315: [978..980]
 r316: [976..977]
 r317: [974..975]
 r318: [972..973]
 r319: [965..971]
 r320: [967..968]
 r321: [965..966]
 r322: [960..964]
 r323: [960..961]
 r324: [956..959]
 r325: [945..946]
 r326: [943..944]
 r327: [941..942]
 r328: [934..940]
 r329: [936..937]
 r330: [934..935]
 r331: [929..933]
 r332: [929..930]
 r333: [926..928]
 r334: [923..925]
 r335: [919..920]
 r336: [917..918]
 r337: [915..916]
 r338: [908..914]
 r339: [910..911]
 r340: [908..909]
 r341: [903..907]
 r342: [903..904]
 r343: [881..902]
 r344: [900..901]
 r345: [898..899]
 r346: [896..897]
 r347: [889..895]
 r348: [891..892]
 r349: [889..890]
 r350: [884..888]
 r351: [884..885]
 r352: [878..883]
 r353: [878..880]
 r354: [876..877]
 r355: [874..875]
 r356: [872..873]
 r357: [865..871]
 r358: [867..868]
 r359: [865..866]
 r360: [860..864]
 r361: [860..861]
 r362: [856..859]
 r363: [843..844]
 r364: [841..842]
 r365: [839..840]
 r366: [832..838]
 r367: [834..835]
 r368: [832..833]
 r369: [827..831]
 r370: [827..828]
 r371: [824..826]
 r372: [814..815]
 r373: [812..813]
 r374: [810..811]
 r375: [803..809]
 r376: [805..806]
 r377: [803..804]
 r378: [798..802]
 r379: [798..799]
 r380: [795..797]
 r381: [750..794]
 r382: [792..793]
 r383: [790..791]
 r384: [788..789]
 r385: [781..787]
 r386: [783..784]
 r387: [781..782]
 r388: [776..780]
 r389: [776..777]
 r390: [773..775]
 r391: [771..772]
 r392: [748..770]
 r393: [768..769]
 r394: [766..767]
 r395: [764..765]
 r396: [757..763]
 r397: [759..760]
 r398: [757..758]
 r399: [752..756]
 r400: [752..753]
 r401: [744..751]
 r402: [744..746]
 r403: [733..734]
 r404: [731..732]
 r405: [729..730]
 r406: [722..728]
 r407: [724..725]
 r408: [722..723]
 r409: [717..721]
 r410: [717..718]
 r411: [714..716]
 r412: [669..713]
 r413: [711..712]
 r414: [709..710]
 r415: [707..708]
 r416: [700..706]
 r417: [702..703]
 r418: [700..701]
 r419: [695..699]
 r420: [695..696]
 r421: [692..694]
 r422: [690..691]
 r423: [667..689]
 r424: [687..688]
 r425: [685..686]
 r426: [683..684]
 r427: [676..682]
 r428: [678..679]
 r429: [676..677]
 r430: [671..675]
 r431: [671..672]
 r432: [663..670]
 r433: [663..665]
 r434: [652..653]
 r435: [650..651]
 r436: [648..649]
 r437: [641..647]
 r438: [643..644]
 r439: [641..642]
 r440: [636..640]
 r441: [636..637]
 r442: [633..635]
 r443: [588..632]
 r444: [630..631]
 r445: [628..629]
 r446: [626..627]
 r447: [619..625]
 r448: [621..622]
 r449: [619..620]
 r450: [614..618]
 r451: [614..615]
 r452: [611..613]
 r453: [609..610]
 r454: [586..608]
 r455: [606..607]
 r456: [604..605]
 r457: [602..603]
 r458: [595..601]
 r459: [597..598]
 r460: [595..596]
 r461: [590..594]
 r462: [590..591]
 r463: [582..589]
 r464: [582..584]
 r465: [565..566]
 r466: [563..564]
 r467: [561..562]
 r468: [552..560]
 r469: [556..557]
 r470: [554..555]
 r471: [552..553]
 r472: [545..551]
 r473: [547..548]
 r474: [545..546]
 r475: [542..544]
 r476: [536..541]
 r477: [533..534]
 r478: [531..532]
 r479: [529..530]
 r480: [520..528]
 r481: [524..525]
 r482: [522..523]
 r483: [520..521]
 r484: [513..519]
 r485: [515..516]
 r486: [513..514]
 r487: [510..512]
 r488: [507..509]
 r489: [499..500]
 r490: [497..498]
 r491: [495..496]
 r492: [488..494]
 r493: [490..491]
 r494: [488..489]
 r495: [481..487]
 r496: [483..484]
 r497: [481..482]
 r498: [478..480]
 r499: [455..477]
 r500: [475..476]
 r501: [473..474]
 r502: [471..472]
 r503: [464..470]
 r504: [466..467]
 r505: [464..465]
 r506: [457..463]
 r507: [459..460]
 r508: [457..458]
 r509: [452..456]
 r510: [452..454]
 r511: [441..442]
 r512: [439..440]
 r513: [437..438]
 r514: [430..436]
 r515: [432..433]
 r516: [430..431]
 r517: [423..429]
 r518: [425..426]
 r519: [423..424]
 r520: [420..422]
 r521: [397..419]
 r522: [417..418]
 r523: [415..416]
 r524: [413..414]
 r525: [406..412]
 r526: [408..409]
 r527: [406..407]
 r528: [399..405]
 r529: [401..402]
 r530: [399..400]
 r531: [394..398]
 r532: [394..396]
 r533: [385..386]
 r534: [370..371]
 r535: [368..369]
 r536: [366..367]
 r537: [359..365]
 r538: [361..362]
 r539: [359..360]
 r540: [354..358]
 r541: [354..355]
 r542: [351..353]
 r543: [343..344]
 r544: [341..342]
 r545: [339..340]
 r546: [332..338]
 r547: [334..335]
 r548: [332..333]
 r549: [327..331]
 r550: [327..328]
 r551: [324..326]
 r552: [279..323]
 r553: [321..322]
 r554: [319..320]
 r555: [317..318]
 r556: [310..316]
 r557: [312..313]
 r558: [310..311]
 r559: [305..309]
 r560: [305..306]
 r561: [302..304]
 r562: [300..301]
 r563: [277..299]
 r564: [297..298]
 r565: [295..296]
 r566: [293..294]
 r567: [286..292]
 r568: [288..289]
 r569: [286..287]
 r570: [281..285]
 r571: [281..282]
 r572: [273..280]
 r573: [273..275]
 r574: [262..263]
 r575: [260..261]
 r576: [258..259]
 r577: [251..257]
 r578: [253..254]
 r579: [251..252]
 r580: [246..250]
 r581: [246..247]
 r582: [243..245]
 r583: [198..242]
 r584: [240..241]
 r585: [238..239]
 r586: [236..237]
 r587: [229..235]
 r588: [231..232]
 r589: [229..230]
 r590: [224..228]
 r591: [224..225]
 r592: [221..223]
 r593: [219..220]
 r594: [196..218]
 r595: [216..217]
 r596: [214..215]
 r597: [212..213]
 r598: [205..211]
 r599: [207..208]
 r600: [205..206]
 r601: [200..204]
 r602: [200..201]
 r603: [192..199]
 r604: [192..194]
 r605: [175..176]
 r606: [173..174]
 r607: [161..162]
 r608: [26..27]
 r609: [156..157]
 r610: [140..141]
 r611: [138..139]
 r612: [136..137]
 r613: [129..135]
 r614: [131..132]
 r615: [129..130]
 r616: [124..128]
 r617: [124..125]
 r618: [121..123]
 r619: [54..120]
 r620: [116..117]
 r621: [114..115]
 r622: [107..113]
 r623: [109..110]
 r624: [107..108]
 r625: [102..106]
 r626: [102..103]
 r627: [99..101]
 r628: [75..98]
 r629: [96..97]
 r630: [94..95]
 r631: [92..93]
 r632: [85..91]
 r633: [87..88]
 r634: [85..86]
 r635: [80..84]
 r636: [80..81]
 r637: [77..79]
 r638: [75..76]
 r639: [52..74]
 r640: [72..73]
 r641: [70..71]
 r642: [68..69]
 r643: [61..67]
 r644: [63..64]
 r645: [61..62]
 r646: [56..60]
 r647: [56..57]
 r648: [48..55]
 r649: [48..50]
 r650: [31..32]
 r651: [29..30]
 r652: [1755..1759]
 r653: [167..1752]
 r654: [1737..1741]
 r655: [167..1734]
 r656: [1721..1723]
 r657: [1719..1720]
 r661: [167..1705]
 r662: [1694..1698]
 r663: [167..1692]
 r664: [1679..1683]
 r665: [167..1677]
 r666: [1666..1668]
 r667: [1664..1665]
 r671: [167..1654]
 r672: [1643..1647]
 r673: [24..1641]
 r674: [1628..1632]
 r675: [24..1626]
 r676: [1615..1617]
 r677: [1613..1614]
 r681: [24..1603]
 r682: [1592..1596]
 r683: [24..1590]
 r684: [1577..1581]
 r685: [24..1575]
 r686: [1564..1566]
 r687: [1562..1563]
 r691: [24..1552]
 r692: [167..1547]
 r693: [167..168]
 r694: [1335..1536]
 r695: [1335..1336]
 r696: [1340..1532]
 r697: [1340..1341]
 r698: [1426..1502]
 r699: [1426..1427]
 r700: [1345..1421]
 r701: [1345..1346]
 r702: [569..1328]
 r703: [569..570]
 r704: [1316..1320]
 r705: [1252..1317]
 r706: [1252..1253]
 r707: [1261..1263]
 r708: [1148..1152]
 r709: [1053..1149]
 r710: [1053..1054]
 r711: [953..1048]
 r712: [953..954]
 r713: [853..948]
 r714: [853..854]
 r715: [846..850]
 r716: [574..847]
 r717: [574..575]
 r718: [817..821]
 r719: [741..818]
 r720: [741..742]
 r721: [660..736]
 r722: [660..661]
 r723: [579..655]
 r724: [579..580]
 r725: [449..502]
 r726: [449..450]
 r727: [391..444]
 r728: [391..392]
 r729: [383..384]
 r730: [179..180]
 r731: [373..377]
 r732: [184..374]
 r733: [184..185]
 r734: [270..346]
 r735: [270..271]
 r736: [189..265]
 r737: [189..190]
 r738: [159..160]
 r739: [24..25]
 r740: [35..151]
 r741: [35..36]
 r742: [40..147]
 r743: [40..41]
 r744: [45..143]
 r745: [45..46]
 r746: [1764..1765]
 r747: [1760..1761]
 r748: [1757..1758]
 r749: [1750..1751]
 r750: [1746..1747]
 r751: [1739..1740]
 r752: [1732..1733]
 r753: [1728..1729]
 r754: [1721..1722]
 r755: [1703..1704]
 r756: [1699..1700]
 r757: [1696..1697]
 r758: [1690..1691]
 r759: [1686..1687]
 r760: [1681..1682]
 r761: [1675..1676]
 r762: [1671..1672]
 r763: [1666..1667]
 r764: [1652..1653]
 r765: [1648..1649]
 r766: [1645..1646]
 r767: [1639..1640]
 r768: [1635..1636]
 r769: [1630..1631]
 r770: [1624..1625]
 r771: [1620..1621]
 r772: [1615..1616]
 r773: [1601..1602]
 r774: [1597..1598]
 r775: [1594..1595]
 r776: [1588..1589]
 r777: [1584..1585]
 r778: [1579..1580]
 r779: [1573..1574]
 r780: [1569..1570]
 r781: [1564..1565]
 r782: [1550..1551]
 r783: [1542..1543]
 r784: [1537..1538]
 r785: [1533..1534]
 r786: [1520..1521]
 r787: [1512..1513]
 r788: [1507..1508]
 r789: [1505..1506]
 r790: [1503..1504]
 r791: [1492..1493]
 r792: [1485..1486]
 r793: [1480..1481]
 r794: [1477..1478]
 r795: [1470..1471]
 r796: [1463..1464]
 r797: [1458..1459]
 r798: [1446..1447]
 r799: [1439..1440]
 r800: [1429..1430]
 r801: [1422..1423]
 r802: [1411..1412]
 r803: [1404..1405]
 r804: [1399..1400]
 r805: [1396..1397]
 r806: [1389..1390]
 r807: [1382..1383]
 r808: [1377..1378]
 r809: [1365..1366]
 r810: [1358..1359]
 r811: [1348..1349]
 r812: [1331..1332]
 r815: [1323..1324]
 r816: [1325..1326]
 r817: [1321..1322]
 r818: [1318..1319]
 r819: [1306..1307]
 r820: [1299..1300]
 r821: [1294..1295]
 r822: [1291..1292]
 r823: [1281..1282]
 r824: [1274..1275]
 r825: [1269..1270]
 r826: [1266..1267]
 r827: [1261..1262]
 r828: [1256..1257]
 r829: [1241..1242]
 r830: [1234..1235]
 r831: [1229..1230]
 r832: [1226..1227]
 r833: [1223..1224]
 r834: [10..11]
 r835: [8..9]
 r836: [6..7]
 r837: [3..5]
 r838: [2..4]
 r839: [0..1]
 r840: [1213..1214]
 r841: [1206..1207]
 r842: [1201..1202]
 r843: [1196..1197]
 r844: [1198..1199]
 r845: [1187..1188]
 r846: [1180..1181]
 r847: [1168..1169]
 r848: [1161..1162]
 r849: [1156..1157]
 r850: [1153..1154]
 r851: [1150..1151]
 r852: [1138..1139]
 r853: [1131..1132]
 r854: [1126..1127]
 r855: [1121..1122]
 r856: [1123..1124]
 r857: [1112..1113]
 r858: [1105..1106]
 r859: [1093..1094]
 r860: [1086..1087]
 r861: [1081..1082]
 r862: [1078..1079]
 r863: [1069..1070]
 r864: [1062..1063]
 r865: [1056..1058]
 r866: [1056..1057]
 r867: [1049..1050]
 r868: [1038..1039]
 r869: [1031..1032]
 r870: [1026..1027]
 r871: [1021..1022]
 r872: [1023..1024]
 r873: [1012..1013]
 r874: [1005..1006]
 r875: [993..994]
 r876: [986..987]
 r877: [981..982]
 r878: [978..979]
 r879: [969..970]
 r880: [962..963]
 r881: [956..958]
 r882: [956..957]
 r883: [949..950]
 r884: [938..939]
 r885: [931..932]
 r886: [926..927]
 r887: [921..922]
 r888: [923..924]
 r889: [912..913]
 r890: [905..906]
 r891: [893..894]
 r892: [886..887]
 r893: [881..882]
 r894: [878..879]
 r895: [869..870]
 r896: [862..863]
 r897: [856..858]
 r898: [856..857]
 r899: [848..849]
 r900: [836..837]
 r901: [829..830]
 r902: [824..825]
 r903: [822..823]
 r904: [819..820]
 r905: [807..808]
 r906: [800..801]
 r907: [795..796]
 r908: [785..786]
 r909: [778..779]
 r910: [773..774]
 r911: [761..762]
 r912: [754..755]
 r913: [744..745]
 r914: [737..738]
 r915: [726..727]
 r916: [719..720]
 r917: [714..715]
 r918: [704..705]
 r919: [697..698]
 r920: [692..693]
 r921: [680..681]
 r922: [673..674]
 r923: [663..664]
 r924: [656..657]
 r925: [645..646]
 r926: [638..639]
 r927: [633..634]
 r928: [623..624]
 r929: [616..617]
 r930: [611..612]
 r931: [599..600]
 r932: [592..593]
 r933: [582..583]
 r934: [558..559]
 r935: [549..550]
 r936: [542..543]
 r937: [539..540]
 r938: [536..537]
 r939: [22..23]
 r940: [20..21]
 r941: [18..19]
 r942: [15..17]
 r943: [14..16]
 r944: [12..13]
 r945: [526..527]
 r946: [517..518]
 r947: [510..511]
 r948: [505..506]
 r949: [507..508]
 r950: [503..504]
 r951: [492..493]
 r952: [485..486]
 r953: [478..479]
 r954: [468..469]
 r955: [461..462]
 r956: [452..453]
 r957: [445..446]
 r958: [434..435]
 r959: [427..428]
 r960: [420..421]
 r961: [410..411]
 r962: [403..404]
 r963: [394..395]
 r964: [387..388]
 r967: [378..379]
 r968: [380..381]
 r969: [375..376]
 r970: [363..364]
 r971: [356..357]
 r972: [351..352]
 r973: [349..350]
 r974: [347..348]
 r975: [336..337]
 r976: [329..330]
 r977: [324..325]
 r978: [314..315]
 r979: [307..308]
 r980: [302..303]
 r981: [290..291]
 r982: [283..284]
 r983: [273..274]
 r984: [266..267]
 r985: [255..256]
 r986: [248..249]
 r987: [243..244]
 r988: [233..234]
 r989: [226..227]
 r990: [221..222]
 r991: [209..210]
 r992: [202..203]
 r993: [192..193]
 r994: [163..164]
 r995: [154..155]
 r996: [152..153]
 r997: [148..149]
 r998: [144..145]
 r999: [133..134]
 r1000: [126..127]
 r1001: [121..122]
 r1002: [118..119]
 r1003: [111..112]
 r1004: [104..105]
 r1005: [99..100]
 r1006: [89..90]
 r1007: [82..83]
 r1008: [77..78]
 r1009: [65..66]
 r1010: [58..59]
 r1011: [48..49]
 r1012: [1754..1756]
 r1013: [1742..1743]
 r1014: [1736..1738]
 r1015: [1724..1725]
 r1016: [1713..1714]
 r1017: [1706..1710]
 r1018: [1707..1708]
 r1019: [1693..1695]
 r1020: [1684..1685]
 r1021: [1678..1680]
 r1022: [1669..1670]
 r1023: [1659..1660]
 r1024: [1655..1656]
 r1025: [1642..1644]
 r1026: [1633..1634]
 r1027: [1627..1629]
 r1028: [1618..1619]
 r1029: [1608..1609]
 r1030: [1604..1605]
 r1031: [1591..1593]
 r1032: [1582..1583]
 r1033: [1576..1578]
 r1034: [1567..1568]
 r1035: [1557..1558]
 r1036: [1553..1554]
 r1037: [1548..1549]
 r1040: [1523..1524]
 r1042: [1432..1434]
 r1043: [1351..1353]
 r1044: [747..749]
 r1045: [666..668]
 r1046: [585..587]
 r1047: [276..278]
 r1048: [195..197]
 r1049: [51..53]
 r1050: [1709..1726]
 r1051: [1727..1735]
 r1052: [1715..1744]
 r1053: [1745..1753]
 r1054: [1517..1518]
 r1055: [1526..1527]
 r1056: [169..170]
Compressing live ranges: from 1767 to 1388 - 78%
Ranges after the compression:
 r87: [1384..1385]
 r88: [1374..1375]
 r89: [1362..1363]
 r90: [1352..1353]
 r91: [1352..1387]
 r93: [1348..1349]
 r94: [1340..1341]
 r95: [1330..1331]
 r96: [1318..1319]
 r97: [1308..1309]
 r98: [1308..1387]
 r100: [1304..1305]
 r101: [1298..1299]
 r102: [1288..1289]
 r103: [1276..1277]
 r104: [1266..1267]
 r105: [1266..1387]
 r107: [1262..1263]
 r108: [1256..1257]
 r109: [1246..1247]
 r110: [1234..1235]
 r111: [1224..1225]
 r112: [1224..1387]
 r114: [1220..1221]
 r115: [130..131]
 r116: [1212..1213]
 r117: [1208..1209]
 r118: [1202..1203]
 r119: [1200..1201]
 r120: [1198..1199]
 r121: [1192..1197]
 r122: [1194..1195]
 r123: [1192..1193]
 r124: [1188..1191]
 r125: [1188..1189]
 r126: [1186..1187]
 r127: [1180..1181]
 r128: [1178..1179]
 r129: [1176..1177]
 r130: [1170..1175]
 r131: [1172..1173]
 r132: [1170..1171]
 r133: [1166..1169]
 r134: [1166..1167]
 r135: [1164..1165]
 r136: [1126..1163]
 r137: [1160..1161]
 r138: [1158..1159]
 r139: [1152..1157]
 r140: [1154..1155]
 r141: [1152..1153]
 r142: [1148..1151]
 r143: [1148..1149]
 r144: [1146..1147]
 r145: [1144..1145]
 r146: [1124..1143]
 r147: [1142..1143]
 r148: [1140..1141]
 r149: [1138..1139]
 r150: [1132..1137]
 r151: [1134..1135]
 r152: [1132..1133]
 r153: [1128..1131]
 r154: [1128..1129]
 r155: [1122..1127]
 r156: [1122..1123]
 r157: [1116..1117]
 r158: [1114..1115]
 r159: [1112..1113]
 r160: [1106..1111]
 r161: [1108..1109]
 r162: [1106..1107]
 r163: [1102..1105]
 r164: [1102..1103]
 r165: [1100..1101]
 r166: [1062..1099]
 r167: [1096..1097]
 r168: [1094..1095]
 r169: [1088..1093]
 r170: [1090..1091]
 r171: [1088..1089]
 r172: [1084..1087]
 r173: [1084..1085]
 r174: [1082..1083]
 r175: [1080..1081]
 r176: [1060..1079]
 r177: [1078..1079]
 r178: [1076..1077]
 r179: [1074..1075]
 r180: [1068..1073]
 r181: [1070..1071]
 r182: [1068..1069]
 r183: [1064..1067]
 r184: [1064..1065]
 r185: [1058..1063]
 r186: [1058..1059]
 r187: [1048..1049]
 r188: [1036..1037]
 r189: [1034..1035]
 r190: [1032..1033]
 r191: [1026..1031]
 r192: [1028..1029]
 r193: [1026..1027]
 r194: [1022..1025]
 r195: [1022..1023]
 r196: [1020..1021]
 r197: [1018..1019]
 r198: [996..1017]
 r199: [1016..1017]
 r200: [1014..1015]
 r201: [1012..1013]
 r202: [1006..1011]
 r203: [1008..1009]
 r204: [1006..1007]
 r205: [1002..1005]
 r206: [1002..1003]
 r207: [1000..1001]
 r208: [998..999]
 r209: [996..997]
 r210: [988..989]
 r211: [986..987]
 r212: [984..985]
 r213: [978..983]
 r214: [980..981]
 r215: [978..979]
 r216: [974..977]
 r217: [974..975]
 r218: [972..973]
 r219: [968..971]
 r220: [966..967]
 r221: [964..965]
 r222: [962..963]
 r223: [956..961]
 r224: [958..959]
 r225: [956..957]
 r226: [952..955]
 r227: [952..953]
 r228: [950..951]
 r229: [948..949]
 r230: [944..945]
 r231: [942..943]
 r232: [940..941]
 r233: [934..939]
 r234: [936..937]
 r235: [934..935]
 r236: [930..933]
 r237: [930..931]
 r238: [912..929]
 r239: [928..929]
 r240: [926..927]
 r241: [924..925]
 r242: [918..923]
 r243: [920..921]
 r244: [918..919]
 r245: [914..917]
 r246: [914..915]
 r247: [910..913]
 r248: [910..911]
 r249: [904..905]
 r250: [902..903]
 r251: [900..901]
 r252: [894..899]
 r253: [896..897]
 r254: [894..895]
 r255: [890..893]
 r256: [890..891]
 r257: [888..889]
 r258: [886..887]
 r259: [882..883]
 r260: [880..881]
 r261: [878..879]
 r262: [872..877]
 r263: [874..875]
 r264: [872..873]
 r265: [868..871]
 r266: [868..869]
 r267: [850..867]
 r268: [866..867]
 r269: [864..865]
 r270: [862..863]
 r271: [856..861]
 r272: [858..859]
 r273: [856..857]
 r274: [852..855]
 r275: [852..853]
 r276: [848..851]
 r277: [848..849]
 r278: [846..847]
 r279: [844..845]
 r280: [842..843]
 r281: [836..841]
 r282: [838..839]
 r283: [836..837]
 r284: [832..835]
 r285: [832..833]
 r286: [830..831]
 r287: [824..825]
 r288: [822..823]
 r289: [820..821]
 r290: [814..819]
 r291: [816..817]
 r292: [814..815]
 r293: [810..813]
 r294: [810..811]
 r295: [808..809]
 r296: [806..807]
 r297: [802..803]
 r298: [800..801]
 r299: [798..799]
 r300: [792..797]
 r301: [794..795]
 r302: [792..793]
 r303: [788..791]
 r304: [788..789]
 r305: [770..787]
 r306: [786..787]
 r307: [784..785]
 r308: [782..783]
 r309: [776..781]
 r310: [778..779]
 r311: [776..777]
 r312: [772..775]
 r313: [772..773]
 r314: [768..771]
 r315: [768..769]
 r316: [766..767]
 r317: [764..765]
 r318: [762..763]
 r319: [756..761]
 r320: [758..759]
 r321: [756..757]
 r322: [752..755]
 r323: [752..753]
 r324: [750..751]
 r325: [744..745]
 r326: [742..743]
 r327: [740..741]
 r328: [734..739]
 r329: [736..737]
 r330: [734..735]
 r331: [730..733]
 r332: [730..731]
 r333: [728..729]
 r334: [726..727]
 r335: [722..723]
 r336: [720..721]
 r337: [718..719]
 r338: [712..717]
 r339: [714..715]
 r340: [712..713]
 r341: [708..711]
 r342: [708..709]
 r343: [690..707]
 r344: [706..707]
 r345: [704..705]
 r346: [702..703]
 r347: [696..701]
 r348: [698..699]
 r349: [696..697]
 r350: [692..695]
 r351: [692..693]
 r352: [688..691]
 r353: [688..689]
 r354: [686..687]
 r355: [684..685]
 r356: [682..683]
 r357: [676..681]
 r358: [678..679]
 r359: [676..677]
 r360: [672..675]
 r361: [672..673]
 r362: [670..671]
 r363: [662..663]
 r364: [660..661]
 r365: [658..659]
 r366: [652..657]
 r367: [654..655]
 r368: [652..653]
 r369: [648..651]
 r370: [648..649]
 r371: [646..647]
 r372: [638..639]
 r373: [636..637]
 r374: [634..635]
 r375: [628..633]
 r376: [630..631]
 r377: [628..629]
 r378: [624..627]
 r379: [624..625]
 r380: [622..623]
 r381: [584..621]
 r382: [620..621]
 r383: [618..619]
 r384: [616..617]
 r385: [610..615]
 r386: [612..613]
 r387: [610..611]
 r388: [606..609]
 r389: [606..607]
 r390: [604..605]
 r391: [602..603]
 r392: [582..601]
 r393: [600..601]
 r394: [598..599]
 r395: [596..597]
 r396: [590..595]
 r397: [592..593]
 r398: [590..591]
 r399: [586..589]
 r400: [586..587]
 r401: [580..585]
 r402: [580..581]
 r403: [574..575]
 r404: [572..573]
 r405: [570..571]
 r406: [564..569]
 r407: [566..567]
 r408: [564..565]
 r409: [560..563]
 r410: [560..561]
 r411: [558..559]
 r412: [520..557]
 r413: [556..557]
 r414: [554..555]
 r415: [552..553]
 r416: [546..551]
 r417: [548..549]
 r418: [546..547]
 r419: [542..545]
 r420: [542..543]
 r421: [540..541]
 r422: [538..539]
 r423: [518..537]
 r424: [536..537]
 r425: [534..535]
 r426: [532..533]
 r427: [526..531]
 r428: [528..529]
 r429: [526..527]
 r430: [522..525]
 r431: [522..523]
 r432: [516..521]
 r433: [516..517]
 r434: [510..511]
 r435: [508..509]
 r436: [506..507]
 r437: [500..505]
 r438: [502..503]
 r439: [500..501]
 r440: [496..499]
 r441: [496..497]
 r442: [494..495]
 r443: [456..493]
 r444: [492..493]
 r445: [490..491]
 r446: [488..489]
 r447: [482..487]
 r448: [484..485]
 r449: [482..483]
 r450: [478..481]
 r451: [478..479]
 r452: [476..477]
 r453: [474..475]
 r454: [454..473]
 r455: [472..473]
 r456: [470..471]
 r457: [468..469]
 r458: [462..467]
 r459: [464..465]
 r460: [462..463]
 r461: [458..461]
 r462: [458..459]
 r463: [452..457]
 r464: [452..453]
 r465: [444..445]
 r466: [442..443]
 r467: [440..441]
 r468: [432..439]
 r469: [436..437]
 r470: [434..435]
 r471: [432..433]
 r472: [426..431]
 r473: [428..429]
 r474: [426..427]
 r475: [424..425]
 r476: [420..423]
 r477: [418..419]
 r478: [416..417]
 r479: [414..415]
 r480: [406..413]
 r481: [410..411]
 r482: [408..409]
 r483: [406..407]
 r484: [400..405]
 r485: [402..403]
 r486: [400..401]
 r487: [398..399]
 r488: [396..397]
 r489: [390..391]
 r490: [388..389]
 r491: [386..387]
 r492: [380..385]
 r493: [382..383]
 r494: [380..381]
 r495: [374..379]
 r496: [376..377]
 r497: [374..375]
 r498: [372..373]
 r499: [352..371]
 r500: [370..371]
 r501: [368..369]
 r502: [366..367]
 r503: [360..365]
 r504: [362..363]
 r505: [360..361]
 r506: [354..359]
 r507: [356..357]
 r508: [354..355]
 r509: [350..353]
 r510: [350..351]
 r511: [344..345]
 r512: [342..343]
 r513: [340..341]
 r514: [334..339]
 r515: [336..337]
 r516: [334..335]
 r517: [328..333]
 r518: [330..331]
 r519: [328..329]
 r520: [326..327]
 r521: [306..325]
 r522: [324..325]
 r523: [322..323]
 r524: [320..321]
 r525: [314..319]
 r526: [316..317]
 r527: [314..315]
 r528: [308..313]
 r529: [310..311]
 r530: [308..309]
 r531: [304..307]
 r532: [304..305]
 r533: [298..299]
 r534: [286..287]
 r535: [284..285]
 r536: [282..283]
 r537: [276..281]
 r538: [278..279]
 r539: [276..277]
 r540: [272..275]
 r541: [272..273]
 r542: [270..271]
 r543: [264..265]
 r544: [262..263]
 r545: [260..261]
 r546: [254..259]
 r547: [256..257]
 r548: [254..255]
 r549: [250..253]
 r550: [250..251]
 r551: [248..249]
 r552: [210..247]
 r553: [246..247]
 r554: [244..245]
 r555: [242..243]
 r556: [236..241]
 r557: [238..239]
 r558: [236..237]
 r559: [232..235]
 r560: [232..233]
 r561: [230..231]
 r562: [228..229]
 r563: [208..227]
 r564: [226..227]
 r565: [224..225]
 r566: [222..223]
 r567: [216..221]
 r568: [218..219]
 r569: [216..217]
 r570: [212..215]
 r571: [212..213]
 r572: [206..211]
 r573: [206..207]
 r574: [200..201]
 r575: [198..199]
 r576: [196..197]
 r577: [190..195]
 r578: [192..193]
 r579: [190..191]
 r580: [186..189]
 r581: [186..187]
 r582: [184..185]
 r583: [146..183]
 r584: [182..183]
 r585: [180..181]
 r586: [178..179]
 r587: [172..177]
 r588: [174..175]
 r589: [172..173]
 r590: [168..171]
 r591: [168..169]
 r592: [166..167]
 r593: [164..165]
 r594: [144..163]
 r595: [162..163]
 r596: [160..161]
 r597: [158..159]
 r598: [152..157]
 r599: [154..155]
 r600: [152..153]
 r601: [148..151]
 r602: [148..149]
 r603: [142..147]
 r604: [142..143]
 r605: [134..135]
 r606: [132..133]
 r607: [124..125]
 r608: [22..23]
 r609: [120..121]
 r610: [110..111]
 r611: [108..109]
 r612: [106..107]
 r613: [100..105]
 r614: [102..103]
 r615: [100..101]
 r616: [96..99]
 r617: [96..97]
 r618: [94..95]
 r619: [38..93]
 r620: [90..91]
 r621: [88..89]
 r622: [82..87]
 r623: [84..85]
 r624: [82..83]
 r625: [78..81]
 r626: [78..79]
 r627: [76..77]
 r628: [56..75]
 r629: [74..75]
 r630: [72..73]
 r631: [70..71]
 r632: [64..69]
 r633: [66..67]
 r634: [64..65]
 r635: [60..63]
 r636: [60..61]
 r637: [58..59]
 r638: [56..57]
 r639: [36..55]
 r640: [54..55]
 r641: [52..53]
 r642: [50..51]
 r643: [44..49]
 r644: [46..47]
 r645: [44..45]
 r646: [40..43]
 r647: [40..41]
 r648: [34..39]
 r649: [34..35]
 r650: [26..27]
 r651: [24..25]
 r652: [1378..1381]
 r653: [128..1377]
 r654: [1366..1369]
 r655: [128..1365]
 r656: [1356..1357]
 r657: [1354..1355]
 r661: [128..1343]
 r662: [1334..1337]
 r663: [128..1333]
 r664: [1322..1325]
 r665: [128..1321]
 r666: [1312..1313]
 r667: [1310..1311]
 r671: [128..1301]
 r672: [1292..1295]
 r673: [20..1291]
 r674: [1280..1283]
 r675: [20..1279]
 r676: [1270..1271]
 r677: [1268..1269]
 r681: [20..1259]
 r682: [1250..1253]
 r683: [20..1249]
 r684: [1238..1241]
 r685: [20..1237]
 r686: [1228..1229]
 r687: [1226..1227]
 r691: [20..1217]
 r692: [128..1213]
 r693: [128..129]
 r694: [1052..1205]
 r695: [1052..1053]
 r696: [1054..1203]
 r697: [1054..1055]
 r698: [1120..1181]
 r699: [1120..1121]
 r700: [1056..1117]
 r701: [1056..1057]
 r702: [446..1047]
 r703: [446..447]
 r704: [1038..1041]
 r705: [990..1039]
 r706: [990..991]
 r707: [994..995]
 r708: [906..909]
 r709: [828..907]
 r710: [828..829]
 r711: [748..825]
 r712: [748..749]
 r713: [668..745]
 r714: [668..669]
 r715: [664..667]
 r716: [448..665]
 r717: [448..449]
 r718: [640..643]
 r719: [578..641]
 r720: [578..579]
 r721: [514..575]
 r722: [514..515]
 r723: [450..511]
 r724: [450..451]
 r725: [348..391]
 r726: [348..349]
 r727: [302..345]
 r728: [302..303]
 r729: [296..297]
 r730: [136..137]
 r731: [288..291]
 r732: [138..289]
 r733: [138..139]
 r734: [204..265]
 r735: [204..205]
 r736: [140..201]
 r737: [140..141]
 r738: [122..123]
 r739: [20..21]
 r740: [28..115]
 r741: [28..29]
 r742: [30..113]
 r743: [30..31]
 r744: [32..111]
 r745: [32..33]
 r746: [1386..1387]
 r747: [1382..1383]
 r748: [1380..1381]
 r749: [1376..1377]
 r750: [1372..1373]
 r751: [1368..1369]
 r752: [1364..1365]
 r753: [1360..1361]
 r754: [1356..1357]
 r755: [1342..1343]
 r756: [1338..1339]
 r757: [1336..1337]
 r758: [1332..1333]
 r759: [1328..1329]
 r760: [1324..1325]
 r761: [1320..1321]
 r762: [1316..1317]
 r763: [1312..1313]
 r764: [1300..1301]
 r765: [1296..1297]
 r766: [1294..1295]
 r767: [1290..1291]
 r768: [1286..1287]
 r769: [1282..1283]
 r770: [1278..1279]
 r771: [1274..1275]
 r772: [1270..1271]
 r773: [1258..1259]
 r774: [1254..1255]
 r775: [1252..1253]
 r776: [1248..1249]
 r777: [1244..1245]
 r778: [1240..1241]
 r779: [1236..1237]
 r780: [1232..1233]
 r781: [1228..1229]
 r782: [1216..1217]
 r783: [1210..1211]
 r784: [1206..1207]
 r785: [1204..1205]
 r786: [1196..1197]
 r787: [1190..1191]
 r788: [1186..1187]
 r789: [1184..1185]
 r790: [1182..1183]
 r791: [1174..1175]
 r792: [1168..1169]
 r793: [1164..1165]
 r794: [1162..1163]
 r795: [1156..1157]
 r796: [1150..1151]
 r797: [1146..1147]
 r798: [1136..1137]
 r799: [1130..1131]
 r800: [1122..1123]
 r801: [1118..1119]
 r802: [1110..1111]
 r803: [1104..1105]
 r804: [1100..1101]
 r805: [1098..1099]
 r806: [1092..1093]
 r807: [1086..1087]
 r808: [1082..1083]
 r809: [1072..1073]
 r810: [1066..1067]
 r811: [1058..1059]
 r812: [1050..1051]
 r815: [1044..1045]
 r816: [1046..1047]
 r817: [1042..1043]
 r818: [1040..1041]
 r819: [1030..1031]
 r820: [1024..1025]
 r821: [1020..1021]
 r822: [1018..1019]
 r823: [1010..1011]
 r824: [1004..1005]
 r825: [1000..1001]
 r826: [998..999]
 r827: [994..995]
 r828: [992..993]
 r829: [982..983]
 r830: [976..977]
 r831: [972..973]
 r832: [970..971]
 r833: [968..969]
 r834: [8..9]
 r835: [6..7]
 r836: [4..5]
 r837: [2..3]
 r838: [2..3]
 r839: [0..1]
 r840: [960..961]
 r841: [954..955]
 r842: [950..951]
 r843: [946..947]
 r844: [948..949]
 r845: [938..939]
 r846: [932..933]
 r847: [922..923]
 r848: [916..917]
 r849: [912..913]
 r850: [910..911]
 r851: [908..909]
 r852: [898..899]
 r853: [892..893]
 r854: [888..889]
 r855: [884..885]
 r856: [886..887]
 r857: [876..877]
 r858: [870..871]
 r859: [860..861]
 r860: [854..855]
 r861: [850..851]
 r862: [848..849]
 r863: [840..841]
 r864: [834..835]
 r865: [830..831]
 r866: [830..831]
 r867: [826..827]
 r868: [818..819]
 r869: [812..813]
 r870: [808..809]
 r871: [804..805]
 r872: [806..807]
 r873: [796..797]
 r874: [790..791]
 r875: [780..781]
 r876: [774..775]
 r877: [770..771]
 r878: [768..769]
 r879: [760..761]
 r880: [754..755]
 r881: [750..751]
 r882: [750..751]
 r883: [746..747]
 r884: [738..739]
 r885: [732..733]
 r886: [728..729]
 r887: [724..725]
 r888: [726..727]
 r889: [716..717]
 r890: [710..711]
 r891: [700..701]
 r892: [694..695]
 r893: [690..691]
 r894: [688..689]
 r895: [680..681]
 r896: [674..675]
 r897: [670..671]
 r898: [670..671]
 r899: [666..667]
 r900: [656..657]
 r901: [650..651]
 r902: [646..647]
 r903: [644..645]
 r904: [642..643]
 r905: [632..633]
 r906: [626..627]
 r907: [622..623]
 r908: [614..615]
 r909: [608..609]
 r910: [604..605]
 r911: [594..595]
 r912: [588..589]
 r913: [580..581]
 r914: [576..577]
 r915: [568..569]
 r916: [562..563]
 r917: [558..559]
 r918: [550..551]
 r919: [544..545]
 r920: [540..541]
 r921: [530..531]
 r922: [524..525]
 r923: [516..517]
 r924: [512..513]
 r925: [504..505]
 r926: [498..499]
 r927: [494..495]
 r928: [486..487]
 r929: [480..481]
 r930: [476..477]
 r931: [466..467]
 r932: [460..461]
 r933: [452..453]
 r934: [438..439]
 r935: [430..431]
 r936: [424..425]
 r937: [422..423]
 r938: [420..421]
 r939: [18..19]
 r940: [16..17]
 r941: [14..15]
 r942: [12..13]
 r943: [12..13]
 r944: [10..11]
 r945: [412..413]
 r946: [404..405]
 r947: [398..399]
 r948: [394..395]
 r949: [396..397]
 r950: [392..393]
 r951: [384..385]
 r952: [378..379]
 r953: [372..373]
 r954: [364..365]
 r955: [358..359]
 r956: [350..351]
 r957: [346..347]
 r958: [338..339]
 r959: [332..333]
 r960: [326..327]
 r961: [318..319]
 r962: [312..313]
 r963: [304..305]
 r964: [300..301]
 r967: [292..293]
 r968: [294..295]
 r969: [290..291]
 r970: [280..281]
 r971: [274..275]
 r972: [270..271]
 r973: [268..269]
 r974: [266..267]
 r975: [258..259]
 r976: [252..253]
 r977: [248..249]
 r978: [240..241]
 r979: [234..235]
 r980: [230..231]
 r981: [220..221]
 r982: [214..215]
 r983: [206..207]
 r984: [202..203]
 r985: [194..195]
 r986: [188..189]
 r987: [184..185]
 r988: [176..177]
 r989: [170..171]
 r990: [166..167]
 r991: [156..157]
 r992: [150..151]
 r993: [142..143]
 r994: [126..127]
 r995: [118..119]
 r996: [116..117]
 r997: [114..115]
 r998: [112..113]
 r999: [104..105]
 r1000: [98..99]
 r1001: [94..95]
 r1002: [92..93]
 r1003: [86..87]
 r1004: [80..81]
 r1005: [76..77]
 r1006: [68..69]
 r1007: [62..63]
 r1008: [58..59]
 r1009: [48..49]
 r1010: [42..43]
 r1011: [34..35]
 r1012: [1378..1379]
 r1013: [1370..1371]
 r1014: [1366..1367]
 r1015: [1358..1359]
 r1016: [1350..1351]
 r1017: [1344..1347]
 r1018: [1344..1345]
 r1019: [1334..1335]
 r1020: [1326..1327]
 r1021: [1322..1323]
 r1022: [1314..1315]
 r1023: [1306..1307]
 r1024: [1302..1303]
 r1025: [1292..1293]
 r1026: [1284..1285]
 r1027: [1280..1281]
 r1028: [1272..1273]
 r1029: [1264..1265]
 r1030: [1260..1261]
 r1031: [1250..1251]
 r1032: [1242..1243]
 r1033: [1238..1239]
 r1034: [1230..1231]
 r1035: [1222..1223]
 r1036: [1218..1219]
 r1037: [1214..1215]
 r1040: [1198..1199]
 r1042: [1124..1125]
 r1043: [1060..1061]
 r1044: [582..583]
 r1045: [518..519]
 r1046: [454..455]
 r1047: [208..209]
 r1048: [144..145]
 r1049: [36..37]
 r1050: [1346..1359]
 r1051: [1360..1365]
 r1052: [1352..1371]
 r1053: [1372..1377]
 r1054: [1194..1195]
 r1055: [1200..1201]
 r1056: [130..131]

********** Assignment #2: **********

	 Assigning to 1054 (cl=GENERAL_REGS, orig=653, freq=2, tfirst=1054, tfreq=2)...
	   Assign 2 to optional reload r1054 (freq=2)
	 Assigning to 1055 (cl=GENERAL_REGS, orig=655, freq=2, tfirst=1055, tfreq=2)...
	   Assign 2 to optional reload r1055 (freq=2)
	 Assigning to 1056 (cl=GENERAL_REGS, orig=692, freq=2, tfirst=1056, tfreq=2)...
	   Assign 2 to optional reload r1056 (freq=2)
  Reassigning non-reload pseudos

********** Undoing inheritance #2: **********

Keep optional reload reg 1018
Keep optional reload reg 1038
Keep optional reload reg 1039
Keep optional reload reg 1041
Remove optional reload reg 1054
  Restoring original insn:
  184: {r123:DI=r122:DI*r653:DI;clobber flags:CC;}
      REG_DEAD r653:DI
      REG_DEAD r122:DI
      REG_UNUSED flags:CC
  Deleting move 1569
 1569: r1054:DI=r653:DI
deleting insn with uid = 1569.
Remove optional reload reg 1055
  Restoring original insn:
  180: {r120:DI=r119:DI*r655:DI;clobber flags:CC;}
      REG_DEAD r655:DI
      REG_DEAD r119:DI
      REG_UNUSED flags:CC
  Deleting move 1570
 1570: r1055:DI=r655:DI
deleting insn with uid = 1570.
Remove optional reload reg 1056
  Restoring original insn:
  148: flags:CCGC=cmp(r692:SI,r115:SI)
      REG_DEAD r692:SI
      REG_DEAD r115:SI
  Deleting move 1571
 1571: r1056:SI=r692:SI
deleting insn with uid = 1571.

********** Local #3: **********

	   Spilling non-eliminable hard regs: 6
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            2 Non pseudo reload: reject++
          alt=2,overall=1,losers=0,rld_nregs=0
            1 Non pseudo reload: reject++
            alt=0: Bad operand -- refuse
            1 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            alt=2,overall=6,losers=1 -- refuse
	 Choosing alt 2 in insn 184:  (0) r  (1) 0  (2) mr {*muldi3_1}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            2 Non pseudo reload: reject++
          alt=2,overall=1,losers=0,rld_nregs=0
            1 Non pseudo reload: reject++
            alt=0: Bad operand -- refuse
            1 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            alt=2,overall=6,losers=1 -- refuse
	 Choosing alt 2 in insn 180:  (0) r  (1) 0  (2) mr {*muldi3_1}
            0 Non pseudo reload: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 148:  (0) rm  (1) re {*cmpsi_1}
	   Spilling non-eliminable hard regs: 6

********** Pseudo live ranges #3: **********

  BB 26
   Insn 436: point = 0, n_alt = 0
   Insn 435: point = 0, n_alt = 2
   Insn 434: point = 0, n_alt = 0
   Insn 433: point = 0, n_alt = 0
   Insn 432: point = 0, n_alt = -1
   Insn 431: point = 1, n_alt = 3
   Insn 430: point = 2, n_alt = 0
   Insn 429: point = 2, n_alt = -1
   Insn 428: point = 3, n_alt = -1
   Insn 427: point = 4, n_alt = 0
   Insn 426: point = 4, n_alt = 3
   Insn 425: point = 5, n_alt = 3
   Insn 424: point = 6, n_alt = 0
   Insn 423: point = 6, n_alt = -1
   Insn 422: point = 7, n_alt = 4
   Insn 421: point = 7, n_alt = 0
   Insn 420: point = 7, n_alt = 3
   Insn 419: point = 8, n_alt = 0
   Insn 418: point = 8, n_alt = -1
   Insn 417: point = 9, n_alt = 3
   Insn 416: point = 10, n_alt = 1
   Insn 415: point = 10, n_alt = 1
   Insn 414: point = 10, n_alt = 1
   Insn 413: point = 10, n_alt = 5
   Insn 412: point = 11, n_alt = 4
  BB 51
   Insn 950: point = 12, n_alt = 0
   Insn 949: point = 12, n_alt = 2
   Insn 948: point = 12, n_alt = 0
   Insn 947: point = 12, n_alt = 0
   Insn 946: point = 12, n_alt = -1
   Insn 945: point = 13, n_alt = 3
   Insn 944: point = 14, n_alt = 0
   Insn 943: point = 14, n_alt = -1
   Insn 942: point = 15, n_alt = -1
   Insn 941: point = 16, n_alt = 0
   Insn 940: point = 16, n_alt = 3
   Insn 939: point = 17, n_alt = 3
   Insn 938: point = 18, n_alt = 0
   Insn 937: point = 18, n_alt = -1
   Insn 936: point = 19, n_alt = 4
   Insn 935: point = 19, n_alt = 0
   Insn 934: point = 19, n_alt = 3
   Insn 933: point = 20, n_alt = 0
   Insn 932: point = 20, n_alt = -1
   Insn 931: point = 21, n_alt = 3
   Insn 930: point = 22, n_alt = 1
   Insn 929: point = 22, n_alt = 1
   Insn 928: point = 22, n_alt = 1
   Insn 927: point = 22, n_alt = 5
   Insn 926: point = 23, n_alt = 4
  BB 83
   Insn 1366: point = 24, n_alt = -1
  BB 106
   Insn 1484: point = 24, n_alt = -1
  BB 72
   Insn 1241: point = 24, n_alt = -1
   Insn 1240: point = 24, n_alt = 0
   Insn 1239: point = 25, n_alt = 0
   Insn 1238: point = 26, n_alt = 0
   Insn 1237: point = 27, n_alt = 0
  BB 82
   Insn 1413: point = 29, n_alt = -1
   Insn 1347: point = 29, n_alt = 1
   Insn 1346: point = 30, n_alt = 0
   Insn 1345: point = 32, n_alt = 0
  BB 107
   Insn 1487: point = 34, n_alt = -1
  BB 74
   Insn 1253: point = 35, n_alt = -1
   Insn 1252: point = 35, n_alt = 0
   Insn 1251: point = 36, n_alt = 0
   Insn 1250: point = 37, n_alt = 0
  BB 81
   Insn 1411: point = 38, n_alt = -1
   Insn 1339: point = 38, n_alt = 1
  BB 108
   Insn 1490: point = 39, n_alt = -1
  BB 76
   Insn 1262: point = 40, n_alt = -1
   Insn 1261: point = 40, n_alt = 0
   Insn 1260: point = 41, n_alt = 0
   Insn 1259: point = 42, n_alt = 0
  BB 80
   Insn 1409: point = 43, n_alt = -1
   Insn 1333: point = 43, n_alt = 1
  BB 109
   Insn 1493: point = 44, n_alt = -1
  BB 78
   Insn 1271: point = 45, n_alt = -1
   Insn 1270: point = 45, n_alt = 0
   Insn 1269: point = 46, n_alt = 0
   Insn 1268: point = 47, n_alt = 0
  BB 79
   Insn 1407: point = 48, n_alt = -1
   Insn 1327: point = 48, n_alt = 1
   Insn 1326: point = 48, n_alt = 8
   Insn 1325: point = 49, n_alt = 3
   Insn 1564: point = 50, n_alt = -1
   Insn 1324: point = 52, n_alt = 2
   Insn 1563: point = 53, n_alt = -1
   Insn 1323: point = 55, n_alt = 0
   Insn 1322: point = 57, n_alt = 1
   Insn 1321: point = 59, n_alt = 0
   Insn 1320: point = 60, n_alt = 0
   Insn 1319: point = 62, n_alt = 2
   Insn 1318: point = 64, n_alt = 1
   Insn 1317: point = 66, n_alt = 0
   Insn 1316: point = 67, n_alt = 3
   Insn 1315: point = 69, n_alt = 2
   Insn 1314: point = 71, n_alt = 1
   Insn 1313: point = 73, n_alt = 0
   Insn 1312: point = 74, n_alt = 1
   Insn 1311: point = 76, n_alt = 7
   Insn 1310: point = 78, n_alt = 3
   Insn 1309: point = 79, n_alt = 0
   Insn 1308: point = 81, n_alt = 1
   Insn 1307: point = 83, n_alt = 0
   Insn 1306: point = 84, n_alt = 0
   Insn 1305: point = 86, n_alt = 2
   Insn 1304: point = 88, n_alt = 1
   Insn 1303: point = 90, n_alt = 0
   Insn 1302: point = 91, n_alt = 3
   Insn 1301: point = 93, n_alt = 2
   Insn 1300: point = 95, n_alt = 1
   Insn 1299: point = 97, n_alt = 0
   Insn 1298: point = 98, n_alt = 7
   Insn 1297: point = 100, n_alt = 3
   Insn 1296: point = 101, n_alt = 0
   Insn 1295: point = 103, n_alt = 1
   Insn 1294: point = 105, n_alt = 0
   Insn 1293: point = 106, n_alt = 0
   Insn 1292: point = 108, n_alt = 2
   Insn 1291: point = 110, n_alt = 1
   Insn 1290: point = 112, n_alt = 0
   Insn 1289: point = 113, n_alt = 3
   Insn 1288: point = 115, n_alt = 2
   Insn 1287: point = 117, n_alt = 1
   Insn 1286: point = 119, n_alt = 0
   Insn 1285: point = 120, n_alt = 7
   Insn 1284: point = 122, n_alt = 3
   Insn 1283: point = 123, n_alt = 0
   Insn 1282: point = 125, n_alt = 1
   Insn 1281: point = 127, n_alt = 0
   Insn 1280: point = 128, n_alt = 0
   Insn 1279: point = 130, n_alt = 2
   Insn 1278: point = 132, n_alt = 1
   Insn 1277: point = 134, n_alt = 0
   Insn 1276: point = 135, n_alt = 3
   Insn 1275: point = 137, n_alt = 2
   Insn 1274: point = 139, n_alt = 1
   Insn 1273: point = 141, n_alt = 0
  BB 77
   Insn 1266: point = 143, n_alt = 1
   Insn 1265: point = 143, n_alt = 0
   Insn 1264: point = 145, n_alt = 3
  BB 75
   Insn 1257: point = 147, n_alt = 1
   Insn 1256: point = 147, n_alt = 0
   Insn 1255: point = 149, n_alt = 3
  BB 73
   Insn 1248: point = 151, n_alt = 1
   Insn 1247: point = 151, n_alt = 0
   Insn 1246: point = 153, n_alt = 3
   Insn 1245: point = 154, n_alt = 1
   Insn 1244: point = 155, n_alt = 0
   Insn 1243: point = 157, n_alt = 0
  BB 71
   Insn 1235: point = 159, n_alt = 1
   Insn 1234: point = 160, n_alt = 0
   Insn 1233: point = 162, n_alt = 0
   Insn 1232: point = 164, n_alt = 3
  BB 84
   Insn 1417: point = 166, n_alt = -1
  BB 3
   Insn 151: point = 167, n_alt = -1
   Insn 150: point = 167, n_alt = 0
   Insn 149: point = 168, n_alt = 0
   Insn 148: point = 169, n_alt = 0
   Insn 147: point = 170, n_alt = 0
  BB 70
   Insn 1405: point = 172, n_alt = -1
   Insn 1226: point = 172, n_alt = 1
   Insn 1225: point = 173, n_alt = 0
   Insn 1224: point = 175, n_alt = 0
  BB 102
   Insn 1472: point = 177, n_alt = -1
  BB 59
   Insn 1068: point = 178, n_alt = -1
   Insn 1067: point = 178, n_alt = 0
   Insn 1066: point = 179, n_alt = 0
   Insn 1065: point = 180, n_alt = 1
  BB 69
   Insn 1403: point = 181, n_alt = -1
   Insn 1218: point = 181, n_alt = 1
  BB 103
   Insn 1475: point = 182, n_alt = -1
  BB 61
   Insn 1084: point = 183, n_alt = -1
   Insn 1083: point = 183, n_alt = 0
   Insn 1082: point = 184, n_alt = 0
   Insn 1081: point = 185, n_alt = 0
  BB 68
   Insn 1401: point = 186, n_alt = -1
   Insn 1212: point = 186, n_alt = 1
  BB 105
   Insn 1481: point = 187, n_alt = -1
  BB 66
   Insn 1163: point = 188, n_alt = -1
   Insn 1162: point = 188, n_alt = 0
   Insn 1161: point = 189, n_alt = 0
   Insn 1160: point = 190, n_alt = 0
  BB 67
   Insn 1399: point = 191, n_alt = -1
   Insn 1206: point = 191, n_alt = 1
   Insn 1205: point = 191, n_alt = 8
   Insn 1204: point = 192, n_alt = 3
   Insn 1562: point = 193, n_alt = -1
   Insn 1203: point = 195, n_alt = 2
   Insn 1561: point = 196, n_alt = -1
   Insn 1202: point = 198, n_alt = 0
   Insn 1201: point = 200, n_alt = 0
   Insn 1200: point = 202, n_alt = 0
   Insn 1199: point = 203, n_alt = 0
   Insn 1198: point = 205, n_alt = 2
   Insn 1197: point = 207, n_alt = 0
   Insn 1196: point = 209, n_alt = 0
   Insn 1195: point = 210, n_alt = 3
   Insn 1194: point = 212, n_alt = 2
   Insn 1193: point = 214, n_alt = 0
   Insn 1192: point = 216, n_alt = 0
   Insn 1191: point = 217, n_alt = 1
   Insn 1190: point = 219, n_alt = 7
   Insn 1189: point = 221, n_alt = 3
   Insn 1188: point = 222, n_alt = 0
   Insn 1187: point = 224, n_alt = 0
   Insn 1186: point = 226, n_alt = 0
   Insn 1185: point = 227, n_alt = 0
   Insn 1184: point = 229, n_alt = 2
   Insn 1183: point = 231, n_alt = 0
   Insn 1182: point = 233, n_alt = 0
   Insn 1181: point = 234, n_alt = 3
   Insn 1180: point = 236, n_alt = 2
   Insn 1179: point = 238, n_alt = 0
   Insn 1178: point = 240, n_alt = 0
   Insn 1177: point = 241, n_alt = 7
   Insn 1176: point = 243, n_alt = 3
   Insn 1175: point = 244, n_alt = 0
   Insn 1174: point = 246, n_alt = 0
   Insn 1173: point = 248, n_alt = 0
   Insn 1172: point = 249, n_alt = 0
   Insn 1171: point = 251, n_alt = 2
   Insn 1170: point = 253, n_alt = 0
   Insn 1169: point = 255, n_alt = 0
   Insn 1168: point = 256, n_alt = 3
   Insn 1167: point = 258, n_alt = 2
   Insn 1166: point = 260, n_alt = 0
   Insn 1165: point = 262, n_alt = 0
  BB 65
   Insn 1158: point = 264, n_alt = 1
   Insn 1157: point = 264, n_alt = 0
   Insn 1156: point = 266, n_alt = 3
  BB 104
   Insn 1478: point = 268, n_alt = -1
  BB 63
   Insn 1107: point = 269, n_alt = -1
   Insn 1106: point = 269, n_alt = 0
   Insn 1105: point = 270, n_alt = 0
   Insn 1104: point = 271, n_alt = 0
  BB 64
   Insn 1397: point = 272, n_alt = -1
   Insn 1150: point = 272, n_alt = 1
   Insn 1149: point = 272, n_alt = 8
   Insn 1148: point = 273, n_alt = 3
   Insn 1560: point = 274, n_alt = -1
   Insn 1147: point = 276, n_alt = 2
   Insn 1559: point = 277, n_alt = -1
   Insn 1146: point = 279, n_alt = 0
   Insn 1145: point = 281, n_alt = 0
   Insn 1144: point = 283, n_alt = 0
   Insn 1143: point = 284, n_alt = 0
   Insn 1142: point = 286, n_alt = 2
   Insn 1141: point = 288, n_alt = 0
   Insn 1140: point = 290, n_alt = 0
   Insn 1139: point = 291, n_alt = 3
   Insn 1138: point = 293, n_alt = 2
   Insn 1137: point = 295, n_alt = 0
   Insn 1136: point = 297, n_alt = 0
   Insn 1135: point = 298, n_alt = 1
   Insn 1134: point = 300, n_alt = 7
   Insn 1133: point = 302, n_alt = 3
   Insn 1132: point = 303, n_alt = 0
   Insn 1131: point = 305, n_alt = 0
   Insn 1130: point = 307, n_alt = 0
   Insn 1129: point = 308, n_alt = 0
   Insn 1128: point = 310, n_alt = 2
   Insn 1127: point = 312, n_alt = 0
   Insn 1126: point = 314, n_alt = 0
   Insn 1125: point = 315, n_alt = 3
   Insn 1124: point = 317, n_alt = 2
   Insn 1123: point = 319, n_alt = 0
   Insn 1122: point = 321, n_alt = 0
   Insn 1121: point = 322, n_alt = 7
   Insn 1120: point = 324, n_alt = 3
   Insn 1119: point = 325, n_alt = 0
   Insn 1118: point = 327, n_alt = 0
   Insn 1117: point = 329, n_alt = 0
   Insn 1116: point = 330, n_alt = 0
   Insn 1115: point = 332, n_alt = 2
   Insn 1114: point = 334, n_alt = 0
   Insn 1113: point = 336, n_alt = 0
   Insn 1112: point = 337, n_alt = 3
   Insn 1111: point = 339, n_alt = 2
   Insn 1110: point = 341, n_alt = 0
   Insn 1109: point = 343, n_alt = 0
  BB 62
   Insn 1102: point = 345, n_alt = 1
   Insn 1101: point = 345, n_alt = 0
   Insn 1100: point = 347, n_alt = 3
   Insn 1099: point = 348, n_alt = 8
   Insn 1098: point = 349, n_alt = 7
   Insn 1097: point = 351, n_alt = 3
   Insn 1096: point = 352, n_alt = 0
   Insn 1095: point = 354, n_alt = 0
   Insn 1094: point = 356, n_alt = 0
   Insn 1093: point = 357, n_alt = 0
   Insn 1092: point = 359, n_alt = 2
   Insn 1091: point = 361, n_alt = 0
   Insn 1090: point = 363, n_alt = 0
   Insn 1089: point = 364, n_alt = 3
   Insn 1088: point = 366, n_alt = 2
   Insn 1087: point = 368, n_alt = 0
   Insn 1086: point = 370, n_alt = 0
  BB 60
   Insn 1079: point = 372, n_alt = 1
   Insn 1078: point = 373, n_alt = 0
   Insn 1077: point = 375, n_alt = 3
   Insn 1076: point = 376, n_alt = 0
   Insn 1075: point = 377, n_alt = 1
   Insn 1074: point = 378, n_alt = 0
   Insn 1073: point = 380, n_alt = 0
  BB 58
   Insn 1063: point = 382, n_alt = 1
   Insn 1062: point = 383, n_alt = 0
   Insn 1061: point = 385, n_alt = 0
   Insn 1060: point = 387, n_alt = 3
  BB 101
   Insn 1469: point = 389, n_alt = -1
  BB 56
   Insn 1023: point = 390, n_alt = -1
   Insn 1022: point = 390, n_alt = 0
   Insn 1021: point = 391, n_alt = 0
   Insn 1020: point = 392, n_alt = 0
  BB 57
   Insn 1395: point = 393, n_alt = -1
   Insn 1054: point = 393, n_alt = 1
   Insn 1053: point = 393, n_alt = 8
   Insn 1052: point = 394, n_alt = 3
   Insn 1051: point = 395, n_alt = 1
   Insn 1050: point = 397, n_alt = 0
   Insn 1049: point = 399, n_alt = 0
   Insn 1048: point = 401, n_alt = 0
   Insn 1047: point = 403, n_alt = 3
   Insn 1046: point = 404, n_alt = 0
   Insn 1045: point = 406, n_alt = 2
   Insn 1044: point = 408, n_alt = 0
   Insn 1043: point = 410, n_alt = 0
   Insn 1042: point = 411, n_alt = 3
   Insn 1041: point = 413, n_alt = 2
   Insn 1040: point = 415, n_alt = 0
   Insn 1039: point = 417, n_alt = 0
   Insn 1038: point = 418, n_alt = 7
   Insn 1037: point = 420, n_alt = 3
   Insn 1036: point = 421, n_alt = 0
   Insn 1035: point = 423, n_alt = 0
   Insn 1034: point = 425, n_alt = 0
   Insn 1033: point = 427, n_alt = 3
   Insn 1032: point = 428, n_alt = 0
   Insn 1031: point = 430, n_alt = 2
   Insn 1030: point = 432, n_alt = 0
   Insn 1029: point = 434, n_alt = 0
   Insn 1028: point = 435, n_alt = 3
   Insn 1027: point = 437, n_alt = 2
   Insn 1026: point = 439, n_alt = 0
   Insn 1025: point = 441, n_alt = 0
  BB 55
   Insn 1018: point = 443, n_alt = 1
   Insn 1017: point = 443, n_alt = 0
   Insn 1016: point = 445, n_alt = 3
  BB 100
   Insn 1466: point = 447, n_alt = -1
  BB 53
   Insn 979: point = 448, n_alt = -1
   Insn 978: point = 448, n_alt = 0
   Insn 977: point = 449, n_alt = 0
   Insn 976: point = 450, n_alt = 0
  BB 54
   Insn 1393: point = 451, n_alt = -1
   Insn 1010: point = 451, n_alt = 1
   Insn 1009: point = 451, n_alt = 8
   Insn 1008: point = 452, n_alt = 3
   Insn 1007: point = 453, n_alt = 1
   Insn 1006: point = 455, n_alt = 0
   Insn 1005: point = 457, n_alt = 0
   Insn 1004: point = 459, n_alt = 0
   Insn 1003: point = 461, n_alt = 3
   Insn 1002: point = 462, n_alt = 0
   Insn 1001: point = 464, n_alt = 2
   Insn 1000: point = 466, n_alt = 0
   Insn 999: point = 468, n_alt = 0
   Insn 998: point = 469, n_alt = 3
   Insn 997: point = 471, n_alt = 2
   Insn 996: point = 473, n_alt = 0
   Insn 995: point = 475, n_alt = 0
   Insn 994: point = 476, n_alt = 7
   Insn 993: point = 478, n_alt = 3
   Insn 992: point = 479, n_alt = 0
   Insn 991: point = 481, n_alt = 0
   Insn 990: point = 483, n_alt = 0
   Insn 989: point = 485, n_alt = 3
   Insn 988: point = 486, n_alt = 0
   Insn 987: point = 488, n_alt = 2
   Insn 986: point = 490, n_alt = 0
   Insn 985: point = 492, n_alt = 0
   Insn 984: point = 493, n_alt = 3
   Insn 983: point = 495, n_alt = 2
   Insn 982: point = 497, n_alt = 0
   Insn 981: point = 499, n_alt = 0
  BB 52
   Insn 974: point = 501, n_alt = 1
   Insn 973: point = 501, n_alt = 0
   Insn 972: point = 503, n_alt = 3
   Insn 971: point = 504, n_alt = 8
   Insn 970: point = 505, n_alt = 2
   Insn 969: point = 507, n_alt = 7
   Insn 968: point = 508, n_alt = 7
   Insn 967: point = 510, n_alt = 3
   Insn 966: point = 511, n_alt = 0
   Insn 965: point = 513, n_alt = 0
   Insn 964: point = 515, n_alt = 0
   Insn 963: point = 517, n_alt = 3
   Insn 962: point = 518, n_alt = 0
   Insn 961: point = 520, n_alt = 2
   Insn 960: point = 522, n_alt = 0
   Insn 959: point = 524, n_alt = 0
   Insn 958: point = 526, n_alt = 3
   Insn 957: point = 527, n_alt = 3
   Insn 956: point = 529, n_alt = 2
   Insn 955: point = 531, n_alt = 0
   Insn 954: point = 533, n_alt = 0
  BB 50
   Insn 921: point = 535, n_alt = -1
   Insn 920: point = 535, n_alt = 1
   Insn 919: point = 536, n_alt = 7
  BB 49
   Insn 918: point = 538, n_alt = -1
   Insn 917: point = 538, n_alt = 1
   Insn 916: point = 539, n_alt = 7
   Insn 915: point = 540, n_alt = 7
   Insn 914: point = 542, n_alt = 3
   Insn 913: point = 543, n_alt = 0
   Insn 912: point = 545, n_alt = 0
   Insn 911: point = 547, n_alt = 0
   Insn 910: point = 549, n_alt = 3
   Insn 909: point = 550, n_alt = 0
   Insn 908: point = 552, n_alt = 2
   Insn 907: point = 554, n_alt = 0
   Insn 906: point = 556, n_alt = 0
   Insn 905: point = 558, n_alt = 3
   Insn 904: point = 559, n_alt = 3
   Insn 903: point = 561, n_alt = 2
   Insn 902: point = 563, n_alt = 0
   Insn 901: point = 565, n_alt = 0
  BB 89
   Insn 1432: point = 567, n_alt = -1
  BB 18
   Insn 324: point = 568, n_alt = -1
   Insn 323: point = 568, n_alt = 0
   Insn 322: point = 569, n_alt = 0
   Insn 321: point = 570, n_alt = 0
  BB 48
   Insn 1391: point = 571, n_alt = -1
   Insn 895: point = 571, n_alt = 1
  BB 96
   Insn 1454: point = 572, n_alt = -1
  BB 37
   Insn 704: point = 573, n_alt = -1
   Insn 703: point = 573, n_alt = 0
   Insn 702: point = 574, n_alt = 0
   Insn 701: point = 575, n_alt = 0
  BB 47
   Insn 1389: point = 576, n_alt = -1
   Insn 889: point = 576, n_alt = 1
  BB 99
   Insn 1463: point = 577, n_alt = -1
  BB 45
   Insn 840: point = 578, n_alt = -1
   Insn 839: point = 578, n_alt = 0
   Insn 838: point = 579, n_alt = 0
   Insn 837: point = 580, n_alt = 0
  BB 46
   Insn 1387: point = 581, n_alt = -1
   Insn 883: point = 581, n_alt = 1
   Insn 882: point = 581, n_alt = 8
   Insn 881: point = 582, n_alt = 3
   Insn 1558: point = 583, n_alt = -1
   Insn 880: point = 585, n_alt = 2
   Insn 1557: point = 586, n_alt = -1
   Insn 879: point = 588, n_alt = 0
   Insn 878: point = 590, n_alt = 0
   Insn 877: point = 592, n_alt = 0
   Insn 876: point = 593, n_alt = 0
   Insn 875: point = 595, n_alt = 2
   Insn 874: point = 597, n_alt = 0
   Insn 873: point = 599, n_alt = 0
   Insn 872: point = 600, n_alt = 3
   Insn 871: point = 602, n_alt = 2
   Insn 870: point = 604, n_alt = 0
   Insn 869: point = 606, n_alt = 0
   Insn 868: point = 607, n_alt = 1
   Insn 867: point = 609, n_alt = 7
   Insn 866: point = 611, n_alt = 3
   Insn 865: point = 612, n_alt = 0
   Insn 864: point = 614, n_alt = 0
   Insn 863: point = 616, n_alt = 0
   Insn 862: point = 617, n_alt = 0
   Insn 861: point = 619, n_alt = 2
   Insn 860: point = 621, n_alt = 0
   Insn 859: point = 623, n_alt = 0
   Insn 858: point = 624, n_alt = 3
   Insn 857: point = 626, n_alt = 2
   Insn 856: point = 628, n_alt = 0
   Insn 855: point = 630, n_alt = 0
   Insn 854: point = 631, n_alt = 7
   Insn 853: point = 633, n_alt = 3
   Insn 852: point = 634, n_alt = 0
   Insn 851: point = 636, n_alt = 0
   Insn 850: point = 638, n_alt = 0
   Insn 849: point = 639, n_alt = 0
   Insn 848: point = 641, n_alt = 2
   Insn 847: point = 643, n_alt = 0
   Insn 846: point = 645, n_alt = 0
   Insn 845: point = 646, n_alt = 3
   Insn 844: point = 648, n_alt = 2
   Insn 843: point = 650, n_alt = 0
   Insn 842: point = 652, n_alt = 0
  BB 44
   Insn 835: point = 654, n_alt = 1
   Insn 834: point = 654, n_alt = 0
   Insn 833: point = 656, n_alt = 3
  BB 98
   Insn 1460: point = 658, n_alt = -1
  BB 42
   Insn 784: point = 659, n_alt = -1
   Insn 783: point = 659, n_alt = 0
   Insn 782: point = 660, n_alt = 0
   Insn 781: point = 661, n_alt = 0
  BB 43
   Insn 1385: point = 662, n_alt = -1
   Insn 827: point = 662, n_alt = 1
   Insn 826: point = 662, n_alt = 8
   Insn 825: point = 663, n_alt = 3
   Insn 1556: point = 664, n_alt = -1
   Insn 824: point = 666, n_alt = 2
   Insn 1555: point = 667, n_alt = -1
   Insn 823: point = 669, n_alt = 0
   Insn 822: point = 671, n_alt = 0
   Insn 821: point = 673, n_alt = 0
   Insn 820: point = 674, n_alt = 0
   Insn 819: point = 676, n_alt = 2
   Insn 818: point = 678, n_alt = 0
   Insn 817: point = 680, n_alt = 0
   Insn 816: point = 681, n_alt = 3
   Insn 815: point = 683, n_alt = 2
   Insn 814: point = 685, n_alt = 0
   Insn 813: point = 687, n_alt = 0
   Insn 812: point = 688, n_alt = 1
   Insn 811: point = 690, n_alt = 7
   Insn 810: point = 692, n_alt = 3
   Insn 809: point = 693, n_alt = 0
   Insn 808: point = 695, n_alt = 0
   Insn 807: point = 697, n_alt = 0
   Insn 806: point = 698, n_alt = 0
   Insn 805: point = 700, n_alt = 2
   Insn 804: point = 702, n_alt = 0
   Insn 803: point = 704, n_alt = 0
   Insn 802: point = 705, n_alt = 3
   Insn 801: point = 707, n_alt = 2
   Insn 800: point = 709, n_alt = 0
   Insn 799: point = 711, n_alt = 0
   Insn 798: point = 712, n_alt = 7
   Insn 797: point = 714, n_alt = 3
   Insn 796: point = 715, n_alt = 0
   Insn 795: point = 717, n_alt = 0
   Insn 794: point = 719, n_alt = 0
   Insn 793: point = 720, n_alt = 0
   Insn 792: point = 722, n_alt = 2
   Insn 791: point = 724, n_alt = 0
   Insn 790: point = 726, n_alt = 0
   Insn 789: point = 727, n_alt = 3
   Insn 788: point = 729, n_alt = 2
   Insn 787: point = 731, n_alt = 0
   Insn 786: point = 733, n_alt = 0
  BB 41
   Insn 779: point = 735, n_alt = 1
   Insn 778: point = 735, n_alt = 0
   Insn 777: point = 737, n_alt = 3
  BB 97
   Insn 1457: point = 739, n_alt = -1
  BB 39
   Insn 728: point = 740, n_alt = -1
   Insn 727: point = 740, n_alt = 0
   Insn 726: point = 741, n_alt = 0
   Insn 725: point = 742, n_alt = 0
  BB 40
   Insn 1383: point = 743, n_alt = -1
   Insn 771: point = 743, n_alt = 1
   Insn 770: point = 743, n_alt = 8
   Insn 769: point = 744, n_alt = 3
   Insn 1554: point = 745, n_alt = -1
   Insn 768: point = 747, n_alt = 2
   Insn 1553: point = 748, n_alt = -1
   Insn 767: point = 750, n_alt = 0
   Insn 766: point = 752, n_alt = 0
   Insn 765: point = 754, n_alt = 0
   Insn 764: point = 755, n_alt = 0
   Insn 763: point = 757, n_alt = 2
   Insn 762: point = 759, n_alt = 0
   Insn 761: point = 761, n_alt = 0
   Insn 760: point = 762, n_alt = 3
   Insn 759: point = 764, n_alt = 2
   Insn 758: point = 766, n_alt = 0
   Insn 757: point = 768, n_alt = 0
   Insn 756: point = 769, n_alt = 1
   Insn 755: point = 771, n_alt = 7
   Insn 754: point = 773, n_alt = 3
   Insn 753: point = 774, n_alt = 0
   Insn 752: point = 776, n_alt = 0
   Insn 751: point = 778, n_alt = 0
   Insn 750: point = 779, n_alt = 0
   Insn 749: point = 781, n_alt = 2
   Insn 748: point = 783, n_alt = 0
   Insn 747: point = 785, n_alt = 0
   Insn 746: point = 786, n_alt = 3
   Insn 745: point = 788, n_alt = 2
   Insn 744: point = 790, n_alt = 0
   Insn 743: point = 792, n_alt = 0
   Insn 742: point = 793, n_alt = 7
   Insn 741: point = 795, n_alt = 3
   Insn 740: point = 796, n_alt = 0
   Insn 739: point = 798, n_alt = 0
   Insn 738: point = 800, n_alt = 0
   Insn 737: point = 801, n_alt = 0
   Insn 736: point = 803, n_alt = 2
   Insn 735: point = 805, n_alt = 0
   Insn 734: point = 807, n_alt = 0
   Insn 733: point = 808, n_alt = 3
   Insn 732: point = 810, n_alt = 2
   Insn 731: point = 812, n_alt = 0
   Insn 730: point = 814, n_alt = 0
  BB 38
   Insn 723: point = 816, n_alt = 1
   Insn 722: point = 817, n_alt = 0
   Insn 721: point = 819, n_alt = 3
   Insn 720: point = 820, n_alt = 0
   Insn 719: point = 821, n_alt = 8
   Insn 718: point = 822, n_alt = 7
   Insn 717: point = 824, n_alt = 3
   Insn 716: point = 825, n_alt = 0
   Insn 715: point = 827, n_alt = 0
   Insn 714: point = 829, n_alt = 0
   Insn 713: point = 830, n_alt = 0
   Insn 712: point = 832, n_alt = 2
   Insn 711: point = 834, n_alt = 0
   Insn 710: point = 836, n_alt = 0
   Insn 709: point = 837, n_alt = 3
   Insn 708: point = 839, n_alt = 2
   Insn 707: point = 841, n_alt = 0
   Insn 706: point = 843, n_alt = 0
  BB 36
   Insn 699: point = 845, n_alt = 1
   Insn 698: point = 846, n_alt = 0
   Insn 697: point = 848, n_alt = 3
   Insn 696: point = 849, n_alt = 0
  BB 95
   Insn 1451: point = 851, n_alt = -1
  BB 34
   Insn 632: point = 852, n_alt = -1
   Insn 631: point = 852, n_alt = 0
   Insn 630: point = 853, n_alt = 0
   Insn 629: point = 854, n_alt = 0
  BB 35
   Insn 1381: point = 855, n_alt = -1
   Insn 690: point = 855, n_alt = 1
   Insn 689: point = 855, n_alt = 8
   Insn 688: point = 856, n_alt = 7
   Insn 687: point = 857, n_alt = 3
   Insn 686: point = 858, n_alt = 0
   Insn 685: point = 860, n_alt = 0
   Insn 684: point = 862, n_alt = 0
   Insn 683: point = 863, n_alt = 0
   Insn 682: point = 865, n_alt = 2
   Insn 681: point = 867, n_alt = 0
   Insn 680: point = 869, n_alt = 0
   Insn 679: point = 870, n_alt = 3
   Insn 678: point = 872, n_alt = 2
   Insn 677: point = 874, n_alt = 0
   Insn 676: point = 876, n_alt = 0
   Insn 675: point = 877, n_alt = 8
   Insn 674: point = 878, n_alt = 3
   Insn 673: point = 879, n_alt = 7
   Insn 672: point = 881, n_alt = 3
   Insn 671: point = 882, n_alt = 0
   Insn 670: point = 884, n_alt = 0
   Insn 669: point = 886, n_alt = 0
   Insn 668: point = 887, n_alt = 0
   Insn 667: point = 889, n_alt = 2
   Insn 666: point = 891, n_alt = 0
   Insn 665: point = 893, n_alt = 0
   Insn 664: point = 894, n_alt = 3
   Insn 663: point = 896, n_alt = 2
   Insn 662: point = 898, n_alt = 0
   Insn 661: point = 900, n_alt = 0
   Insn 660: point = 901, n_alt = 3
   Insn 659: point = 903, n_alt = 0
   Insn 658: point = 905, n_alt = 0
   Insn 657: point = 906, n_alt = 0
   Insn 656: point = 908, n_alt = 2
   Insn 655: point = 910, n_alt = 0
   Insn 654: point = 912, n_alt = 0
   Insn 653: point = 913, n_alt = 3
   Insn 652: point = 915, n_alt = 2
   Insn 651: point = 917, n_alt = 0
   Insn 650: point = 919, n_alt = 0
   Insn 649: point = 920, n_alt = 8
   Insn 648: point = 921, n_alt = 1
   Insn 647: point = 923, n_alt = 7
   Insn 646: point = 924, n_alt = 7
   Insn 645: point = 926, n_alt = 3
   Insn 644: point = 927, n_alt = 0
   Insn 643: point = 929, n_alt = 0
   Insn 642: point = 931, n_alt = 0
   Insn 641: point = 932, n_alt = 0
   Insn 640: point = 934, n_alt = 2
   Insn 639: point = 936, n_alt = 0
   Insn 638: point = 938, n_alt = 0
   Insn 637: point = 939, n_alt = 3
   Insn 636: point = 941, n_alt = 2
   Insn 635: point = 943, n_alt = 0
   Insn 634: point = 945, n_alt = 0
  BB 33
   Insn 627: point = 947, n_alt = 1
   Insn 626: point = 947, n_alt = 0
   Insn 625: point = 949, n_alt = 3
  BB 94
   Insn 1448: point = 951, n_alt = -1
  BB 31
   Insn 561: point = 952, n_alt = -1
   Insn 560: point = 952, n_alt = 0
   Insn 559: point = 953, n_alt = 0
   Insn 558: point = 954, n_alt = 0
  BB 32
   Insn 1379: point = 955, n_alt = -1
   Insn 619: point = 955, n_alt = 1
   Insn 618: point = 955, n_alt = 8
   Insn 617: point = 956, n_alt = 7
   Insn 616: point = 957, n_alt = 3
   Insn 615: point = 958, n_alt = 0
   Insn 614: point = 960, n_alt = 0
   Insn 613: point = 962, n_alt = 0
   Insn 612: point = 963, n_alt = 0
   Insn 611: point = 965, n_alt = 2
   Insn 610: point = 967, n_alt = 0
   Insn 609: point = 969, n_alt = 0
   Insn 608: point = 970, n_alt = 3
   Insn 607: point = 972, n_alt = 2
   Insn 606: point = 974, n_alt = 0
   Insn 605: point = 976, n_alt = 0
   Insn 604: point = 977, n_alt = 8
   Insn 603: point = 978, n_alt = 3
   Insn 602: point = 979, n_alt = 7
   Insn 601: point = 981, n_alt = 3
   Insn 600: point = 982, n_alt = 0
   Insn 599: point = 984, n_alt = 0
   Insn 598: point = 986, n_alt = 0
   Insn 597: point = 987, n_alt = 0
   Insn 596: point = 989, n_alt = 2
   Insn 595: point = 991, n_alt = 0
   Insn 594: point = 993, n_alt = 0
   Insn 593: point = 994, n_alt = 3
   Insn 592: point = 996, n_alt = 2
   Insn 591: point = 998, n_alt = 0
   Insn 590: point = 1000, n_alt = 0
   Insn 589: point = 1001, n_alt = 3
   Insn 588: point = 1003, n_alt = 0
   Insn 587: point = 1005, n_alt = 0
   Insn 586: point = 1006, n_alt = 0
   Insn 585: point = 1008, n_alt = 2
   Insn 584: point = 1010, n_alt = 0
   Insn 583: point = 1012, n_alt = 0
   Insn 582: point = 1013, n_alt = 3
   Insn 581: point = 1015, n_alt = 2
   Insn 580: point = 1017, n_alt = 0
   Insn 579: point = 1019, n_alt = 0
   Insn 578: point = 1020, n_alt = 8
   Insn 577: point = 1021, n_alt = 1
   Insn 576: point = 1023, n_alt = 7
   Insn 575: point = 1024, n_alt = 7
   Insn 574: point = 1026, n_alt = 3
   Insn 573: point = 1027, n_alt = 0
   Insn 572: point = 1029, n_alt = 0
   Insn 571: point = 1031, n_alt = 0
   Insn 570: point = 1032, n_alt = 0
   Insn 569: point = 1034, n_alt = 2
   Insn 568: point = 1036, n_alt = 0
   Insn 567: point = 1038, n_alt = 0
   Insn 566: point = 1039, n_alt = 3
   Insn 565: point = 1041, n_alt = 2
   Insn 564: point = 1043, n_alt = 0
   Insn 563: point = 1045, n_alt = 0
  BB 30
   Insn 556: point = 1047, n_alt = 1
   Insn 555: point = 1047, n_alt = 0
   Insn 554: point = 1049, n_alt = 3
  BB 93
   Insn 1445: point = 1051, n_alt = -1
  BB 28
   Insn 490: point = 1052, n_alt = -1
   Insn 489: point = 1052, n_alt = 0
   Insn 488: point = 1053, n_alt = 0
   Insn 487: point = 1054, n_alt = 0
  BB 29
   Insn 1377: point = 1055, n_alt = -1
   Insn 548: point = 1055, n_alt = 1
   Insn 547: point = 1055, n_alt = 8
   Insn 546: point = 1056, n_alt = 7
   Insn 545: point = 1057, n_alt = 3
   Insn 544: point = 1058, n_alt = 0
   Insn 543: point = 1060, n_alt = 0
   Insn 542: point = 1062, n_alt = 0
   Insn 541: point = 1063, n_alt = 0
   Insn 540: point = 1065, n_alt = 2
   Insn 539: point = 1067, n_alt = 0
   Insn 538: point = 1069, n_alt = 0
   Insn 537: point = 1070, n_alt = 3
   Insn 536: point = 1072, n_alt = 2
   Insn 535: point = 1074, n_alt = 0
   Insn 534: point = 1076, n_alt = 0
   Insn 533: point = 1077, n_alt = 8
   Insn 532: point = 1078, n_alt = 3
   Insn 531: point = 1079, n_alt = 7
   Insn 530: point = 1081, n_alt = 3
   Insn 529: point = 1082, n_alt = 0
   Insn 528: point = 1084, n_alt = 0
   Insn 527: point = 1086, n_alt = 0
   Insn 526: point = 1087, n_alt = 0
   Insn 525: point = 1089, n_alt = 2
   Insn 524: point = 1091, n_alt = 0
   Insn 523: point = 1093, n_alt = 0
   Insn 522: point = 1094, n_alt = 3
   Insn 521: point = 1096, n_alt = 2
   Insn 520: point = 1098, n_alt = 0
   Insn 519: point = 1100, n_alt = 0
   Insn 518: point = 1101, n_alt = 3
   Insn 517: point = 1103, n_alt = 0
   Insn 516: point = 1105, n_alt = 0
   Insn 515: point = 1106, n_alt = 0
   Insn 514: point = 1108, n_alt = 2
   Insn 513: point = 1110, n_alt = 0
   Insn 512: point = 1112, n_alt = 0
   Insn 511: point = 1113, n_alt = 3
   Insn 510: point = 1115, n_alt = 2
   Insn 509: point = 1117, n_alt = 0
   Insn 508: point = 1119, n_alt = 0
   Insn 507: point = 1120, n_alt = 8
   Insn 506: point = 1121, n_alt = 1
   Insn 505: point = 1123, n_alt = 7
   Insn 504: point = 1124, n_alt = 7
   Insn 503: point = 1126, n_alt = 3
   Insn 502: point = 1127, n_alt = 0
   Insn 501: point = 1129, n_alt = 0
   Insn 500: point = 1131, n_alt = 0
   Insn 499: point = 1132, n_alt = 0
   Insn 498: point = 1134, n_alt = 2
   Insn 497: point = 1136, n_alt = 0
   Insn 496: point = 1138, n_alt = 0
   Insn 495: point = 1139, n_alt = 3
   Insn 494: point = 1141, n_alt = 2
   Insn 493: point = 1143, n_alt = 0
   Insn 492: point = 1145, n_alt = 0
  BB 27
   Insn 485: point = 1147, n_alt = 1
   Insn 484: point = 1148, n_alt = 0
   Insn 483: point = 1150, n_alt = 3
   Insn 482: point = 1151, n_alt = 0
   Insn 481: point = 1152, n_alt = 8
   Insn 480: point = 1153, n_alt = 3
   Insn 479: point = 1154, n_alt = 7
   Insn 478: point = 1156, n_alt = 3
   Insn 477: point = 1157, n_alt = 0
   Insn 476: point = 1159, n_alt = 0
   Insn 475: point = 1161, n_alt = 0
   Insn 474: point = 1162, n_alt = 0
   Insn 473: point = 1164, n_alt = 2
   Insn 472: point = 1166, n_alt = 0
   Insn 471: point = 1168, n_alt = 0
   Insn 470: point = 1169, n_alt = 3
   Insn 469: point = 1171, n_alt = 2
   Insn 468: point = 1173, n_alt = 0
   Insn 467: point = 1175, n_alt = 0
   Insn 466: point = 1176, n_alt = 3
   Insn 465: point = 1178, n_alt = 0
   Insn 464: point = 1180, n_alt = 0
   Insn 463: point = 1181, n_alt = 0
   Insn 462: point = 1183, n_alt = 2
   Insn 461: point = 1185, n_alt = 0
   Insn 460: point = 1187, n_alt = 0
   Insn 459: point = 1188, n_alt = 3
   Insn 458: point = 1190, n_alt = 2
   Insn 457: point = 1192, n_alt = 0
   Insn 456: point = 1194, n_alt = 0
   Insn 455: point = 1195, n_alt = 8
   Insn 454: point = 1196, n_alt = 2
   Insn 453: point = 1198, n_alt = 7
   Insn 452: point = 1199, n_alt = 7
   Insn 451: point = 1201, n_alt = 3
   Insn 450: point = 1202, n_alt = 0
   Insn 449: point = 1204, n_alt = 0
   Insn 448: point = 1206, n_alt = 0
   Insn 447: point = 1207, n_alt = 0
   Insn 446: point = 1209, n_alt = 2
   Insn 445: point = 1211, n_alt = 0
   Insn 444: point = 1213, n_alt = 0
   Insn 443: point = 1214, n_alt = 3
   Insn 442: point = 1216, n_alt = 2
   Insn 441: point = 1218, n_alt = 0
   Insn 440: point = 1220, n_alt = 0
  BB 25
   Insn 407: point = 1222, n_alt = -1
   Insn 406: point = 1222, n_alt = 1
   Insn 405: point = 1223, n_alt = 7
  BB 24
   Insn 404: point = 1225, n_alt = -1
   Insn 403: point = 1225, n_alt = 1
   Insn 402: point = 1226, n_alt = 7
   Insn 401: point = 1227, n_alt = 7
   Insn 400: point = 1229, n_alt = 3
   Insn 399: point = 1230, n_alt = 0
   Insn 398: point = 1232, n_alt = 0
   Insn 397: point = 1234, n_alt = 0
   Insn 396: point = 1235, n_alt = 0
   Insn 395: point = 1237, n_alt = 2
   Insn 394: point = 1239, n_alt = 0
   Insn 393: point = 1241, n_alt = 0
   Insn 392: point = 1242, n_alt = 3
   Insn 391: point = 1244, n_alt = 2
   Insn 390: point = 1246, n_alt = 0
   Insn 389: point = 1248, n_alt = 0
  BB 90
   Insn 1435: point = 1250, n_alt = -1
  BB 20
   Insn 342: point = 1251, n_alt = -1
   Insn 341: point = 1251, n_alt = 0
   Insn 340: point = 1252, n_alt = 0
   Insn 339: point = 1253, n_alt = 0
  BB 23
   Insn 1375: point = 1254, n_alt = -1
   Insn 383: point = 1254, n_alt = 1
  BB 22
   Insn 1436: point = 1255, n_alt = -1
   Insn 380: point = 1255, n_alt = 1
   Insn 379: point = 1256, n_alt = 0
  BB 92
   Insn 1442: point = 1258, n_alt = -1
  BB 91
   Insn 1440: point = 1259, n_alt = -1
  BB 21
   Insn 377: point = 1260, n_alt = -1
   Insn 376: point = 1260, n_alt = 1
   Insn 375: point = 1261, n_alt = 7
   Insn 374: point = 1262, n_alt = 2
   Insn 373: point = 1264, n_alt = 1
   Insn 372: point = 1266, n_alt = 2
   Insn 371: point = 1267, n_alt = 7
   Insn 370: point = 1269, n_alt = 3
   Insn 369: point = 1270, n_alt = 0
   Insn 368: point = 1272, n_alt = 0
   Insn 367: point = 1274, n_alt = 0
   Insn 366: point = 1275, n_alt = 0
   Insn 365: point = 1277, n_alt = 2
   Insn 364: point = 1279, n_alt = 0
   Insn 363: point = 1281, n_alt = 0
   Insn 362: point = 1282, n_alt = 3
   Insn 361: point = 1284, n_alt = 2
   Insn 360: point = 1286, n_alt = 0
   Insn 359: point = 1288, n_alt = 0
   Insn 358: point = 1289, n_alt = 1
   Insn 357: point = 1291, n_alt = 2
   Insn 356: point = 1292, n_alt = 7
   Insn 355: point = 1294, n_alt = 3
   Insn 354: point = 1295, n_alt = 0
   Insn 353: point = 1297, n_alt = 0
   Insn 352: point = 1299, n_alt = 0
   Insn 351: point = 1300, n_alt = 0
   Insn 350: point = 1302, n_alt = 2
   Insn 349: point = 1304, n_alt = 0
   Insn 348: point = 1306, n_alt = 0
   Insn 347: point = 1307, n_alt = 3
   Insn 346: point = 1309, n_alt = 2
   Insn 345: point = 1311, n_alt = 0
   Insn 344: point = 1313, n_alt = 0
  BB 19
   Insn 337: point = 1315, n_alt = 1
   Insn 336: point = 1316, n_alt = 0
   Insn 335: point = 1318, n_alt = 3
   Insn 334: point = 1319, n_alt = 0
   Insn 333: point = 1320, n_alt = 1
   Insn 332: point = 1321, n_alt = 0
   Insn 331: point = 1322, n_alt = 1
   Insn 330: point = 1323, n_alt = 0
   Insn 329: point = 1325, n_alt = 0
  BB 17
   Insn 319: point = 1327, n_alt = 1
   Insn 318: point = 1327, n_alt = 3
   Insn 317: point = 1329, n_alt = 0
   Insn 316: point = 1331, n_alt = 3
  BB 85
   Insn 1420: point = 1333, n_alt = -1
  BB 6
   Insn 167: point = 1334, n_alt = -1
   Insn 166: point = 1334, n_alt = 0
   Insn 165: point = 1335, n_alt = 0
   Insn 164: point = 1336, n_alt = 0
  BB 16
   Insn 1373: point = 1337, n_alt = -1
   Insn 310: point = 1337, n_alt = 1
  BB 86
   Insn 1423: point = 1338, n_alt = -1
  BB 8
   Insn 176: point = 1339, n_alt = -1
   Insn 175: point = 1339, n_alt = 0
   Insn 174: point = 1340, n_alt = 0
   Insn 173: point = 1341, n_alt = 0
  BB 15
   Insn 1371: point = 1342, n_alt = -1
   Insn 304: point = 1342, n_alt = 1
  BB 88
   Insn 1429: point = 1343, n_alt = -1
  BB 13
   Insn 255: point = 1344, n_alt = -1
   Insn 254: point = 1344, n_alt = 0
   Insn 253: point = 1345, n_alt = 0
   Insn 252: point = 1346, n_alt = 0
  BB 14
   Insn 1369: point = 1347, n_alt = -1
   Insn 298: point = 1347, n_alt = 1
   Insn 297: point = 1347, n_alt = 8
   Insn 296: point = 1348, n_alt = 3
   Insn 1552: point = 1349, n_alt = -1
   Insn 295: point = 1351, n_alt = 2
   Insn 1551: point = 1352, n_alt = -1
   Insn 294: point = 1354, n_alt = 0
   Insn 293: point = 1356, n_alt = 0
   Insn 292: point = 1358, n_alt = 0
   Insn 291: point = 1359, n_alt = 0
   Insn 290: point = 1361, n_alt = 2
   Insn 289: point = 1363, n_alt = 0
   Insn 288: point = 1365, n_alt = 0
   Insn 287: point = 1366, n_alt = 3
   Insn 286: point = 1368, n_alt = 2
   Insn 285: point = 1370, n_alt = 0
   Insn 284: point = 1372, n_alt = 0
   Insn 283: point = 1373, n_alt = 1
   Insn 282: point = 1375, n_alt = 7
   Insn 281: point = 1377, n_alt = 3
   Insn 280: point = 1378, n_alt = 0
   Insn 279: point = 1380, n_alt = 0
   Insn 278: point = 1382, n_alt = 0
   Insn 277: point = 1383, n_alt = 0
   Insn 276: point = 1385, n_alt = 2
   Insn 275: point = 1387, n_alt = 0
   Insn 274: point = 1389, n_alt = 0
   Insn 273: point = 1390, n_alt = 3
   Insn 272: point = 1392, n_alt = 2
   Insn 271: point = 1394, n_alt = 0
   Insn 270: point = 1396, n_alt = 0
   Insn 269: point = 1397, n_alt = 7
   Insn 268: point = 1399, n_alt = 3
   Insn 267: point = 1400, n_alt = 0
   Insn 266: point = 1402, n_alt = 0
   Insn 265: point = 1404, n_alt = 0
   Insn 264: point = 1405, n_alt = 0
   Insn 263: point = 1407, n_alt = 2
   Insn 262: point = 1409, n_alt = 0
   Insn 261: point = 1411, n_alt = 0
   Insn 260: point = 1412, n_alt = 3
   Insn 259: point = 1414, n_alt = 2
   Insn 258: point = 1416, n_alt = 0
   Insn 257: point = 1418, n_alt = 0
  BB 12
   Insn 250: point = 1420, n_alt = 1
   Insn 249: point = 1420, n_alt = 0
   Insn 248: point = 1422, n_alt = 3
  BB 87
   Insn 1426: point = 1424, n_alt = -1
  BB 10
   Insn 199: point = 1425, n_alt = -1
   Insn 198: point = 1425, n_alt = 0
   Insn 197: point = 1426, n_alt = 0
   Insn 196: point = 1427, n_alt = 0
  BB 11
   Insn 1367: point = 1428, n_alt = -1
   Insn 242: point = 1428, n_alt = 1
   Insn 241: point = 1428, n_alt = 8
   Insn 240: point = 1429, n_alt = 3
   Insn 1550: point = 1430, n_alt = -1
   Insn 239: point = 1432, n_alt = 2
   Insn 1549: point = 1433, n_alt = -1
   Insn 238: point = 1435, n_alt = 0
   Insn 237: point = 1437, n_alt = 0
   Insn 236: point = 1439, n_alt = 0
   Insn 235: point = 1440, n_alt = 0
   Insn 234: point = 1442, n_alt = 2
   Insn 233: point = 1444, n_alt = 0
   Insn 232: point = 1446, n_alt = 0
   Insn 231: point = 1447, n_alt = 3
   Insn 230: point = 1449, n_alt = 2
   Insn 229: point = 1451, n_alt = 0
   Insn 228: point = 1453, n_alt = 0
   Insn 227: point = 1454, n_alt = 1
   Insn 226: point = 1456, n_alt = 7
   Insn 225: point = 1458, n_alt = 3
   Insn 224: point = 1459, n_alt = 0
   Insn 223: point = 1461, n_alt = 0
   Insn 222: point = 1463, n_alt = 0
   Insn 221: point = 1464, n_alt = 0
   Insn 220: point = 1466, n_alt = 2
   Insn 219: point = 1468, n_alt = 0
   Insn 218: point = 1470, n_alt = 0
   Insn 217: point = 1471, n_alt = 3
   Insn 216: point = 1473, n_alt = 2
   Insn 215: point = 1475, n_alt = 0
   Insn 214: point = 1477, n_alt = 0
   Insn 213: point = 1478, n_alt = 7
   Insn 212: point = 1480, n_alt = 3
   Insn 211: point = 1481, n_alt = 0
   Insn 210: point = 1483, n_alt = 0
   Insn 209: point = 1485, n_alt = 0
   Insn 208: point = 1486, n_alt = 0
   Insn 207: point = 1488, n_alt = 2
   Insn 206: point = 1490, n_alt = 0
   Insn 205: point = 1492, n_alt = 0
   Insn 204: point = 1493, n_alt = 3
   Insn 203: point = 1495, n_alt = 2
   Insn 202: point = 1497, n_alt = 0
   Insn 201: point = 1499, n_alt = 0
  BB 9
   Insn 194: point = 1501, n_alt = 1
   Insn 193: point = 1501, n_alt = 0
   Insn 192: point = 1503, n_alt = 3
   Insn 191: point = 1504, n_alt = 8
   Insn 190: point = 1505, n_alt = 7
   Insn 189: point = 1507, n_alt = 3
   Insn 188: point = 1508, n_alt = 0
   Insn 187: point = 1510, n_alt = 0
   Insn 186: point = 1512, n_alt = 0
   Insn 185: point = 1513, n_alt = 0
   Insn 184: point = 1515, n_alt = 2
   Insn 183: point = 1517, n_alt = 0
   Insn 182: point = 1519, n_alt = 0
   Insn 181: point = 1520, n_alt = 3
   Insn 1547: point = 1522, n_alt = 3
   Insn 180: point = 1523, n_alt = 2
   Insn 179: point = 1525, n_alt = 0
   Insn 178: point = 1527, n_alt = 0
  BB 7
   Insn 171: point = 1529, n_alt = 1
   Insn 170: point = 1529, n_alt = 0
   Insn 169: point = 1531, n_alt = 3
  BB 5
   Insn 162: point = 1533, n_alt = 1
   Insn 161: point = 1533, n_alt = 0
   Insn 160: point = 1535, n_alt = 3
  BB 4
   Insn 158: point = 1537, n_alt = -1
   Insn 157: point = 1537, n_alt = 0
   Insn 156: point = 1538, n_alt = 0
   Insn 155: point = 1539, n_alt = 1
   Insn 154: point = 1540, n_alt = 0
   Insn 153: point = 1542, n_alt = 0
  BB 2
   Insn 145: point = 1544, n_alt = 1
   Insn 1544: point = 1544, n_alt = 1
   Insn 144: point = 1546, n_alt = 0
   Insn 143: point = 1548, n_alt = 3
   Insn 1543: point = 1549, n_alt = -1
   Insn 142: point = 1551, n_alt = 0
   Insn 1542: point = 1551, n_alt = -1
   Insn 1541: point = 1553, n_alt = -1
   Insn 141: point = 1555, n_alt = 0
   Insn 1540: point = 1555, n_alt = -1
   Insn 137: point = 1556, n_alt = 5
   Insn 136: point = 1557, n_alt = 5
   Insn 135: point = 1558, n_alt = -1
   Insn 133: point = 1560, n_alt = 1
   Insn 131: point = 1562, n_alt = 0
   Insn 132: point = 1562, n_alt = 2
   Insn 1539: point = 1563, n_alt = -1
   Insn 130: point = 1565, n_alt = 2
   Insn 1538: point = 1565, n_alt = -1
   Insn 129: point = 1566, n_alt = 5
   Insn 128: point = 1567, n_alt = 0
   Insn 127: point = 1569, n_alt = 0
   Insn 126: point = 1571, n_alt = 3
   Insn 1537: point = 1572, n_alt = -1
   Insn 125: point = 1574, n_alt = 0
   Insn 1536: point = 1575, n_alt = -1
   Insn 123: point = 1577, n_alt = 0
   Insn 124: point = 1577, n_alt = 2
   Insn 1535: point = 1578, n_alt = -1
   Insn 122: point = 1580, n_alt = 2
   Insn 1534: point = 1580, n_alt = -1
   Insn 121: point = 1581, n_alt = 5
   Insn 120: point = 1582, n_alt = 0
   Insn 119: point = 1584, n_alt = 0
   Insn 118: point = 1586, n_alt = 3
   Insn 1533: point = 1587, n_alt = -1
   Insn 117: point = 1589, n_alt = 0
   Insn 1532: point = 1590, n_alt = -1
   Insn 115: point = 1592, n_alt = 0
   Insn 116: point = 1592, n_alt = 2
   Insn 114: point = 1593, n_alt = 3
   Insn 113: point = 1594, n_alt = 5
   Insn 112: point = 1595, n_alt = 0
   Insn 111: point = 1597, n_alt = 0
   Insn 110: point = 1599, n_alt = 3
   Insn 1531: point = 1600, n_alt = -1
   Insn 109: point = 1602, n_alt = 0
   Insn 1530: point = 1602, n_alt = -1
   Insn 1529: point = 1604, n_alt = -1
   Insn 108: point = 1606, n_alt = 0
   Insn 1528: point = 1606, n_alt = -1
   Insn 104: point = 1607, n_alt = 2
   Insn 103: point = 1608, n_alt = 3
   Insn 102: point = 1609, n_alt = -1
   Insn 100: point = 1611, n_alt = 1
   Insn 98: point = 1613, n_alt = 0
   Insn 99: point = 1613, n_alt = 2
   Insn 1527: point = 1614, n_alt = -1
   Insn 97: point = 1616, n_alt = 2
   Insn 1526: point = 1616, n_alt = -1
   Insn 96: point = 1617, n_alt = 5
   Insn 95: point = 1618, n_alt = 0
   Insn 94: point = 1620, n_alt = 0
   Insn 93: point = 1622, n_alt = 3
   Insn 1525: point = 1623, n_alt = -1
   Insn 92: point = 1625, n_alt = 0
   Insn 1524: point = 1626, n_alt = -1
   Insn 90: point = 1628, n_alt = 0
   Insn 91: point = 1628, n_alt = 2
   Insn 1523: point = 1629, n_alt = -1
   Insn 89: point = 1631, n_alt = 2
   Insn 1522: point = 1631, n_alt = -1
   Insn 88: point = 1632, n_alt = 5
   Insn 87: point = 1633, n_alt = 0
   Insn 86: point = 1635, n_alt = 0
   Insn 85: point = 1637, n_alt = 3
   Insn 1521: point = 1638, n_alt = -1
   Insn 84: point = 1640, n_alt = 0
   Insn 1520: point = 1641, n_alt = -1
   Insn 82: point = 1643, n_alt = 0
   Insn 83: point = 1643, n_alt = 2
   Insn 81: point = 1644, n_alt = 3
   Insn 80: point = 1645, n_alt = 5
   Insn 79: point = 1646, n_alt = 0
   Insn 78: point = 1648, n_alt = 0
   Insn 77: point = 1650, n_alt = 3
   Insn 1519: point = 1651, n_alt = -1
   Insn 76: point = 1653, n_alt = 0
   Insn 1518: point = 1653, n_alt = -1
   Insn 1517: point = 1655, n_alt = -1
   Insn 75: point = 1657, n_alt = 0
   Insn 1516: point = 1657, n_alt = -1
   Insn 71: point = 1658, n_alt = 2
   Insn 70: point = 1659, n_alt = 3
   Insn 69: point = 1660, n_alt = -1
   Insn 67: point = 1662, n_alt = 1
   Insn 65: point = 1664, n_alt = 0
   Insn 66: point = 1664, n_alt = 2
   Insn 1515: point = 1665, n_alt = -1
   Insn 64: point = 1667, n_alt = 2
   Insn 1514: point = 1667, n_alt = -1
   Insn 63: point = 1668, n_alt = 5
   Insn 62: point = 1669, n_alt = 0
   Insn 61: point = 1671, n_alt = 0
   Insn 60: point = 1673, n_alt = 3
   Insn 1513: point = 1674, n_alt = -1
   Insn 59: point = 1676, n_alt = 0
   Insn 1512: point = 1677, n_alt = -1
   Insn 57: point = 1679, n_alt = 0
   Insn 58: point = 1679, n_alt = 2
   Insn 1511: point = 1680, n_alt = -1
   Insn 56: point = 1682, n_alt = 2
   Insn 1510: point = 1682, n_alt = -1
   Insn 55: point = 1683, n_alt = 5
   Insn 54: point = 1684, n_alt = 0
   Insn 53: point = 1686, n_alt = 0
   Insn 52: point = 1688, n_alt = 3
   Insn 1509: point = 1689, n_alt = -1
   Insn 51: point = 1691, n_alt = 0
   Insn 1508: point = 1692, n_alt = -1
   Insn 49: point = 1694, n_alt = 0
   Insn 50: point = 1694, n_alt = 2
   Insn 48: point = 1695, n_alt = 3
   Insn 47: point = 1696, n_alt = 5
   Insn 46: point = 1697, n_alt = 0
   Insn 45: point = 1699, n_alt = 0
   Insn 44: point = 1701, n_alt = 3
   Insn 1506: point = 1702, n_alt = 5
   Insn 43: point = 1704, n_alt = 0
   Insn 1507: point = 1705, n_alt = -1
   Insn 1505: point = 1707, n_alt = -1
   Insn 1504: point = 1709, n_alt = -1
   Insn 42: point = 1711, n_alt = 0
   Insn 1503: point = 1711, n_alt = -1
   Insn 38: point = 1713, n_alt = 2
   Insn 37: point = 1714, n_alt = 3
   Insn 36: point = 1715, n_alt = -1
   Insn 34: point = 1717, n_alt = 1
   Insn 32: point = 1719, n_alt = 0
   Insn 33: point = 1719, n_alt = 2
   Insn 1502: point = 1720, n_alt = -1
   Insn 31: point = 1722, n_alt = 2
   Insn 1501: point = 1722, n_alt = -1
   Insn 1565: point = 1723, n_alt = -1
   Insn 30: point = 1725, n_alt = 5
   Insn 29: point = 1726, n_alt = 0
   Insn 28: point = 1728, n_alt = 0
   Insn 27: point = 1730, n_alt = 3
   Insn 1566: point = 1731, n_alt = 5
   Insn 1500: point = 1732, n_alt = -1
   Insn 26: point = 1734, n_alt = 0
   Insn 1499: point = 1735, n_alt = -1
   Insn 24: point = 1737, n_alt = 0
   Insn 25: point = 1737, n_alt = 2
   Insn 1498: point = 1738, n_alt = -1
   Insn 23: point = 1740, n_alt = 2
   Insn 1497: point = 1740, n_alt = -1
   Insn 1567: point = 1741, n_alt = -1
   Insn 22: point = 1743, n_alt = 5
   Insn 21: point = 1744, n_alt = 0
   Insn 20: point = 1746, n_alt = 0
   Insn 19: point = 1748, n_alt = 3
   Insn 1568: point = 1749, n_alt = 5
   Insn 1496: point = 1750, n_alt = -1
   Insn 18: point = 1752, n_alt = 0
   Insn 1495: point = 1753, n_alt = -1
   Insn 16: point = 1755, n_alt = 0
   Insn 17: point = 1755, n_alt = 2
   Insn 15: point = 1756, n_alt = 3
   Insn 14: point = 1757, n_alt = 5
   Insn 13: point = 1758, n_alt = 0
   Insn 12: point = 1760, n_alt = 0
   Insn 11: point = 1762, n_alt = 3
   Insn 7: point = 1763, n_alt = 5
   Insn 6: point = 1763, n_alt = 5
   Insn 5: point = 1763, n_alt = 5
   Insn 4: point = 1763, n_alt = 5
   Insn 3: point = 1763, n_alt = 5
   Insn 2: point = 1763, n_alt = 5
 r112: [1556..1763]
 r653: [167..1749]
 r655: [167..1731]
 r661: [167..1702]
 r692: [167..1544]
Compressing live ranges: from 1764 to 4 - 0%
Ranges after the compression:
 r112: [2..3]
 r653: [0..3]
 r655: [0..3]
 r661: [0..3]
 r692: [0..1]
  Slot 0 regnos (width = 0):	 112	 692
  Slot 1 regnos (width = 0):	 653
  Slot 2 regnos (width = 0):	 655
  Slot 3 regnos (width = 0):	 661
Changing spilled pseudos to memory in insn #1568
Changing spilled pseudos to memory in insn #1566
Changing spilled pseudos to memory in insn #1506
Changing spilled pseudos to memory in insn #136
Changing spilled pseudos to memory in insn #137
Changing spilled pseudos to memory in insn #1544
Changing spilled pseudos to memory in insn #148
Changing spilled pseudos to memory in insn #180
Changing spilled pseudos to memory in insn #1547
Changing spilled pseudos to memory in insn #184
	   Spilling non-eliminable hard regs: 6

********** Local #4: **********

	   Spilling non-eliminable hard regs: 6
Reusing alternative 2 for insn #184
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 184:  (0) r  (1) 0  (2) mr {*muldi3_1}
Reusing alternative 3 for insn #1547
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1547:  (0) r  (1) rem {*movdi_internal}
Reusing alternative 2 for insn #180
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 180:  (0) r  (1) 0  (2) mr {*muldi3_1}
Reusing alternative 0 for insn #148
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 148:  (0) rm  (1) re {*cmpsi_1}
Reusing alternative 1 for insn #1544
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1544:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 137:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 136:  (0) m  (1) re {*movdi_internal}
Reusing alternative 5 for insn #1506
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 1506:  (0) m  (1) re {*movdi_internal}
Reusing alternative 5 for insn #1566
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 1566:  (0) m  (1) re {*movdi_internal}
Reusing alternative 5 for insn #1568
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 1568:  (0) m  (1) re {*movdi_internal}
	   Spilling non-eliminable hard regs: 6

********** Pseudo live ranges #4: **********

  BB 26
   Insn 436: point = 0, n_alt = 0
   Insn 435: point = 0, n_alt = 2
   Insn 434: point = 0, n_alt = 0
   Insn 433: point = 0, n_alt = 0
   Insn 432: point = 0, n_alt = -1
   Insn 431: point = 1, n_alt = 3
   Insn 430: point = 2, n_alt = 0
   Insn 429: point = 2, n_alt = -1
   Insn 428: point = 3, n_alt = -1
   Insn 427: point = 4, n_alt = 0
   Insn 426: point = 4, n_alt = 3
   Insn 425: point = 5, n_alt = 3
   Insn 424: point = 6, n_alt = 0
   Insn 423: point = 6, n_alt = -1
   Insn 422: point = 7, n_alt = 4
   Insn 421: point = 7, n_alt = 0
   Insn 420: point = 7, n_alt = 3
   Insn 419: point = 8, n_alt = 0
   Insn 418: point = 8, n_alt = -1
   Insn 417: point = 9, n_alt = 3
   Insn 416: point = 10, n_alt = 1
   Insn 415: point = 10, n_alt = 1
   Insn 414: point = 10, n_alt = 1
   Insn 413: point = 10, n_alt = 5
   Insn 412: point = 11, n_alt = 4
  BB 51
   Insn 950: point = 12, n_alt = 0
   Insn 949: point = 12, n_alt = 2
   Insn 948: point = 12, n_alt = 0
   Insn 947: point = 12, n_alt = 0
   Insn 946: point = 12, n_alt = -1
   Insn 945: point = 13, n_alt = 3
   Insn 944: point = 14, n_alt = 0
   Insn 943: point = 14, n_alt = -1
   Insn 942: point = 15, n_alt = -1
   Insn 941: point = 16, n_alt = 0
   Insn 940: point = 16, n_alt = 3
   Insn 939: point = 17, n_alt = 3
   Insn 938: point = 18, n_alt = 0
   Insn 937: point = 18, n_alt = -1
   Insn 936: point = 19, n_alt = 4
   Insn 935: point = 19, n_alt = 0
   Insn 934: point = 19, n_alt = 3
   Insn 933: point = 20, n_alt = 0
   Insn 932: point = 20, n_alt = -1
   Insn 931: point = 21, n_alt = 3
   Insn 930: point = 22, n_alt = 1
   Insn 929: point = 22, n_alt = 1
   Insn 928: point = 22, n_alt = 1
   Insn 927: point = 22, n_alt = 5
   Insn 926: point = 23, n_alt = 4
  BB 83
   Insn 1366: point = 24, n_alt = -1
  BB 106
   Insn 1484: point = 24, n_alt = -1
  BB 72
   Insn 1241: point = 24, n_alt = -1
   Insn 1240: point = 24, n_alt = 0
   Insn 1239: point = 25, n_alt = 0
   Insn 1238: point = 26, n_alt = 0
   Insn 1237: point = 27, n_alt = 0
  BB 82
   Insn 1413: point = 29, n_alt = -1
   Insn 1347: point = 29, n_alt = 1
   Insn 1346: point = 30, n_alt = 0
   Insn 1345: point = 32, n_alt = 0
  BB 107
   Insn 1487: point = 34, n_alt = -1
  BB 74
   Insn 1253: point = 35, n_alt = -1
   Insn 1252: point = 35, n_alt = 0
   Insn 1251: point = 36, n_alt = 0
   Insn 1250: point = 37, n_alt = 0
  BB 81
   Insn 1411: point = 38, n_alt = -1
   Insn 1339: point = 38, n_alt = 1
  BB 108
   Insn 1490: point = 39, n_alt = -1
  BB 76
   Insn 1262: point = 40, n_alt = -1
   Insn 1261: point = 40, n_alt = 0
   Insn 1260: point = 41, n_alt = 0
   Insn 1259: point = 42, n_alt = 0
  BB 80
   Insn 1409: point = 43, n_alt = -1
   Insn 1333: point = 43, n_alt = 1
  BB 109
   Insn 1493: point = 44, n_alt = -1
  BB 78
   Insn 1271: point = 45, n_alt = -1
   Insn 1270: point = 45, n_alt = 0
   Insn 1269: point = 46, n_alt = 0
   Insn 1268: point = 47, n_alt = 0
  BB 79
   Insn 1407: point = 48, n_alt = -1
   Insn 1327: point = 48, n_alt = 1
   Insn 1326: point = 48, n_alt = 8
   Insn 1325: point = 49, n_alt = 3
   Insn 1564: point = 50, n_alt = -1
   Insn 1324: point = 52, n_alt = 2
   Insn 1563: point = 53, n_alt = -1
   Insn 1323: point = 55, n_alt = 0
   Insn 1322: point = 57, n_alt = 1
   Insn 1321: point = 59, n_alt = 0
   Insn 1320: point = 60, n_alt = 0
   Insn 1319: point = 62, n_alt = 2
   Insn 1318: point = 64, n_alt = 1
   Insn 1317: point = 66, n_alt = 0
   Insn 1316: point = 67, n_alt = 3
   Insn 1315: point = 69, n_alt = 2
   Insn 1314: point = 71, n_alt = 1
   Insn 1313: point = 73, n_alt = 0
   Insn 1312: point = 74, n_alt = 1
   Insn 1311: point = 76, n_alt = 7
   Insn 1310: point = 78, n_alt = 3
   Insn 1309: point = 79, n_alt = 0
   Insn 1308: point = 81, n_alt = 1
   Insn 1307: point = 83, n_alt = 0
   Insn 1306: point = 84, n_alt = 0
   Insn 1305: point = 86, n_alt = 2
   Insn 1304: point = 88, n_alt = 1
   Insn 1303: point = 90, n_alt = 0
   Insn 1302: point = 91, n_alt = 3
   Insn 1301: point = 93, n_alt = 2
   Insn 1300: point = 95, n_alt = 1
   Insn 1299: point = 97, n_alt = 0
   Insn 1298: point = 98, n_alt = 7
   Insn 1297: point = 100, n_alt = 3
   Insn 1296: point = 101, n_alt = 0
   Insn 1295: point = 103, n_alt = 1
   Insn 1294: point = 105, n_alt = 0
   Insn 1293: point = 106, n_alt = 0
   Insn 1292: point = 108, n_alt = 2
   Insn 1291: point = 110, n_alt = 1
   Insn 1290: point = 112, n_alt = 0
   Insn 1289: point = 113, n_alt = 3
   Insn 1288: point = 115, n_alt = 2
   Insn 1287: point = 117, n_alt = 1
   Insn 1286: point = 119, n_alt = 0
   Insn 1285: point = 120, n_alt = 7
   Insn 1284: point = 122, n_alt = 3
   Insn 1283: point = 123, n_alt = 0
   Insn 1282: point = 125, n_alt = 1
   Insn 1281: point = 127, n_alt = 0
   Insn 1280: point = 128, n_alt = 0
   Insn 1279: point = 130, n_alt = 2
   Insn 1278: point = 132, n_alt = 1
   Insn 1277: point = 134, n_alt = 0
   Insn 1276: point = 135, n_alt = 3
   Insn 1275: point = 137, n_alt = 2
   Insn 1274: point = 139, n_alt = 1
   Insn 1273: point = 141, n_alt = 0
  BB 77
   Insn 1266: point = 143, n_alt = 1
   Insn 1265: point = 143, n_alt = 0
   Insn 1264: point = 145, n_alt = 3
  BB 75
   Insn 1257: point = 147, n_alt = 1
   Insn 1256: point = 147, n_alt = 0
   Insn 1255: point = 149, n_alt = 3
  BB 73
   Insn 1248: point = 151, n_alt = 1
   Insn 1247: point = 151, n_alt = 0
   Insn 1246: point = 153, n_alt = 3
   Insn 1245: point = 154, n_alt = 1
   Insn 1244: point = 155, n_alt = 0
   Insn 1243: point = 157, n_alt = 0
  BB 71
   Insn 1235: point = 159, n_alt = 1
   Insn 1234: point = 160, n_alt = 0
   Insn 1233: point = 162, n_alt = 0
   Insn 1232: point = 164, n_alt = 3
  BB 84
   Insn 1417: point = 166, n_alt = -1
  BB 3
   Insn 151: point = 167, n_alt = -1
   Insn 150: point = 167, n_alt = 0
   Insn 149: point = 168, n_alt = 0
   Insn 148: point = 169, n_alt = 0
   Insn 147: point = 170, n_alt = 0
  BB 70
   Insn 1405: point = 172, n_alt = -1
   Insn 1226: point = 172, n_alt = 1
   Insn 1225: point = 173, n_alt = 0
   Insn 1224: point = 175, n_alt = 0
  BB 102
   Insn 1472: point = 177, n_alt = -1
  BB 59
   Insn 1068: point = 178, n_alt = -1
   Insn 1067: point = 178, n_alt = 0
   Insn 1066: point = 179, n_alt = 0
   Insn 1065: point = 180, n_alt = 1
  BB 69
   Insn 1403: point = 181, n_alt = -1
   Insn 1218: point = 181, n_alt = 1
  BB 103
   Insn 1475: point = 182, n_alt = -1
  BB 61
   Insn 1084: point = 183, n_alt = -1
   Insn 1083: point = 183, n_alt = 0
   Insn 1082: point = 184, n_alt = 0
   Insn 1081: point = 185, n_alt = 0
  BB 68
   Insn 1401: point = 186, n_alt = -1
   Insn 1212: point = 186, n_alt = 1
  BB 105
   Insn 1481: point = 187, n_alt = -1
  BB 66
   Insn 1163: point = 188, n_alt = -1
   Insn 1162: point = 188, n_alt = 0
   Insn 1161: point = 189, n_alt = 0
   Insn 1160: point = 190, n_alt = 0
  BB 67
   Insn 1399: point = 191, n_alt = -1
   Insn 1206: point = 191, n_alt = 1
   Insn 1205: point = 191, n_alt = 8
   Insn 1204: point = 192, n_alt = 3
   Insn 1562: point = 193, n_alt = -1
   Insn 1203: point = 195, n_alt = 2
   Insn 1561: point = 196, n_alt = -1
   Insn 1202: point = 198, n_alt = 0
   Insn 1201: point = 200, n_alt = 0
   Insn 1200: point = 202, n_alt = 0
   Insn 1199: point = 203, n_alt = 0
   Insn 1198: point = 205, n_alt = 2
   Insn 1197: point = 207, n_alt = 0
   Insn 1196: point = 209, n_alt = 0
   Insn 1195: point = 210, n_alt = 3
   Insn 1194: point = 212, n_alt = 2
   Insn 1193: point = 214, n_alt = 0
   Insn 1192: point = 216, n_alt = 0
   Insn 1191: point = 217, n_alt = 1
   Insn 1190: point = 219, n_alt = 7
   Insn 1189: point = 221, n_alt = 3
   Insn 1188: point = 222, n_alt = 0
   Insn 1187: point = 224, n_alt = 0
   Insn 1186: point = 226, n_alt = 0
   Insn 1185: point = 227, n_alt = 0
   Insn 1184: point = 229, n_alt = 2
   Insn 1183: point = 231, n_alt = 0
   Insn 1182: point = 233, n_alt = 0
   Insn 1181: point = 234, n_alt = 3
   Insn 1180: point = 236, n_alt = 2
   Insn 1179: point = 238, n_alt = 0
   Insn 1178: point = 240, n_alt = 0
   Insn 1177: point = 241, n_alt = 7
   Insn 1176: point = 243, n_alt = 3
   Insn 1175: point = 244, n_alt = 0
   Insn 1174: point = 246, n_alt = 0
   Insn 1173: point = 248, n_alt = 0
   Insn 1172: point = 249, n_alt = 0
   Insn 1171: point = 251, n_alt = 2
   Insn 1170: point = 253, n_alt = 0
   Insn 1169: point = 255, n_alt = 0
   Insn 1168: point = 256, n_alt = 3
   Insn 1167: point = 258, n_alt = 2
   Insn 1166: point = 260, n_alt = 0
   Insn 1165: point = 262, n_alt = 0
  BB 65
   Insn 1158: point = 264, n_alt = 1
   Insn 1157: point = 264, n_alt = 0
   Insn 1156: point = 266, n_alt = 3
  BB 104
   Insn 1478: point = 268, n_alt = -1
  BB 63
   Insn 1107: point = 269, n_alt = -1
   Insn 1106: point = 269, n_alt = 0
   Insn 1105: point = 270, n_alt = 0
   Insn 1104: point = 271, n_alt = 0
  BB 64
   Insn 1397: point = 272, n_alt = -1
   Insn 1150: point = 272, n_alt = 1
   Insn 1149: point = 272, n_alt = 8
   Insn 1148: point = 273, n_alt = 3
   Insn 1560: point = 274, n_alt = -1
   Insn 1147: point = 276, n_alt = 2
   Insn 1559: point = 277, n_alt = -1
   Insn 1146: point = 279, n_alt = 0
   Insn 1145: point = 281, n_alt = 0
   Insn 1144: point = 283, n_alt = 0
   Insn 1143: point = 284, n_alt = 0
   Insn 1142: point = 286, n_alt = 2
   Insn 1141: point = 288, n_alt = 0
   Insn 1140: point = 290, n_alt = 0
   Insn 1139: point = 291, n_alt = 3
   Insn 1138: point = 293, n_alt = 2
   Insn 1137: point = 295, n_alt = 0
   Insn 1136: point = 297, n_alt = 0
   Insn 1135: point = 298, n_alt = 1
   Insn 1134: point = 300, n_alt = 7
   Insn 1133: point = 302, n_alt = 3
   Insn 1132: point = 303, n_alt = 0
   Insn 1131: point = 305, n_alt = 0
   Insn 1130: point = 307, n_alt = 0
   Insn 1129: point = 308, n_alt = 0
   Insn 1128: point = 310, n_alt = 2
   Insn 1127: point = 312, n_alt = 0
   Insn 1126: point = 314, n_alt = 0
   Insn 1125: point = 315, n_alt = 3
   Insn 1124: point = 317, n_alt = 2
   Insn 1123: point = 319, n_alt = 0
   Insn 1122: point = 321, n_alt = 0
   Insn 1121: point = 322, n_alt = 7
   Insn 1120: point = 324, n_alt = 3
   Insn 1119: point = 325, n_alt = 0
   Insn 1118: point = 327, n_alt = 0
   Insn 1117: point = 329, n_alt = 0
   Insn 1116: point = 330, n_alt = 0
   Insn 1115: point = 332, n_alt = 2
   Insn 1114: point = 334, n_alt = 0
   Insn 1113: point = 336, n_alt = 0
   Insn 1112: point = 337, n_alt = 3
   Insn 1111: point = 339, n_alt = 2
   Insn 1110: point = 341, n_alt = 0
   Insn 1109: point = 343, n_alt = 0
  BB 62
   Insn 1102: point = 345, n_alt = 1
   Insn 1101: point = 345, n_alt = 0
   Insn 1100: point = 347, n_alt = 3
   Insn 1099: point = 348, n_alt = 8
   Insn 1098: point = 349, n_alt = 7
   Insn 1097: point = 351, n_alt = 3
   Insn 1096: point = 352, n_alt = 0
   Insn 1095: point = 354, n_alt = 0
   Insn 1094: point = 356, n_alt = 0
   Insn 1093: point = 357, n_alt = 0
   Insn 1092: point = 359, n_alt = 2
   Insn 1091: point = 361, n_alt = 0
   Insn 1090: point = 363, n_alt = 0
   Insn 1089: point = 364, n_alt = 3
   Insn 1088: point = 366, n_alt = 2
   Insn 1087: point = 368, n_alt = 0
   Insn 1086: point = 370, n_alt = 0
  BB 60
   Insn 1079: point = 372, n_alt = 1
   Insn 1078: point = 373, n_alt = 0
   Insn 1077: point = 375, n_alt = 3
   Insn 1076: point = 376, n_alt = 0
   Insn 1075: point = 377, n_alt = 1
   Insn 1074: point = 378, n_alt = 0
   Insn 1073: point = 380, n_alt = 0
  BB 58
   Insn 1063: point = 382, n_alt = 1
   Insn 1062: point = 383, n_alt = 0
   Insn 1061: point = 385, n_alt = 0
   Insn 1060: point = 387, n_alt = 3
  BB 101
   Insn 1469: point = 389, n_alt = -1
  BB 56
   Insn 1023: point = 390, n_alt = -1
   Insn 1022: point = 390, n_alt = 0
   Insn 1021: point = 391, n_alt = 0
   Insn 1020: point = 392, n_alt = 0
  BB 57
   Insn 1395: point = 393, n_alt = -1
   Insn 1054: point = 393, n_alt = 1
   Insn 1053: point = 393, n_alt = 8
   Insn 1052: point = 394, n_alt = 3
   Insn 1051: point = 395, n_alt = 1
   Insn 1050: point = 397, n_alt = 0
   Insn 1049: point = 399, n_alt = 0
   Insn 1048: point = 401, n_alt = 0
   Insn 1047: point = 403, n_alt = 3
   Insn 1046: point = 404, n_alt = 0
   Insn 1045: point = 406, n_alt = 2
   Insn 1044: point = 408, n_alt = 0
   Insn 1043: point = 410, n_alt = 0
   Insn 1042: point = 411, n_alt = 3
   Insn 1041: point = 413, n_alt = 2
   Insn 1040: point = 415, n_alt = 0
   Insn 1039: point = 417, n_alt = 0
   Insn 1038: point = 418, n_alt = 7
   Insn 1037: point = 420, n_alt = 3
   Insn 1036: point = 421, n_alt = 0
   Insn 1035: point = 423, n_alt = 0
   Insn 1034: point = 425, n_alt = 0
   Insn 1033: point = 427, n_alt = 3
   Insn 1032: point = 428, n_alt = 0
   Insn 1031: point = 430, n_alt = 2
   Insn 1030: point = 432, n_alt = 0
   Insn 1029: point = 434, n_alt = 0
   Insn 1028: point = 435, n_alt = 3
   Insn 1027: point = 437, n_alt = 2
   Insn 1026: point = 439, n_alt = 0
   Insn 1025: point = 441, n_alt = 0
  BB 55
   Insn 1018: point = 443, n_alt = 1
   Insn 1017: point = 443, n_alt = 0
   Insn 1016: point = 445, n_alt = 3
  BB 100
   Insn 1466: point = 447, n_alt = -1
  BB 53
   Insn 979: point = 448, n_alt = -1
   Insn 978: point = 448, n_alt = 0
   Insn 977: point = 449, n_alt = 0
   Insn 976: point = 450, n_alt = 0
  BB 54
   Insn 1393: point = 451, n_alt = -1
   Insn 1010: point = 451, n_alt = 1
   Insn 1009: point = 451, n_alt = 8
   Insn 1008: point = 452, n_alt = 3
   Insn 1007: point = 453, n_alt = 1
   Insn 1006: point = 455, n_alt = 0
   Insn 1005: point = 457, n_alt = 0
   Insn 1004: point = 459, n_alt = 0
   Insn 1003: point = 461, n_alt = 3
   Insn 1002: point = 462, n_alt = 0
   Insn 1001: point = 464, n_alt = 2
   Insn 1000: point = 466, n_alt = 0
   Insn 999: point = 468, n_alt = 0
   Insn 998: point = 469, n_alt = 3
   Insn 997: point = 471, n_alt = 2
   Insn 996: point = 473, n_alt = 0
   Insn 995: point = 475, n_alt = 0
   Insn 994: point = 476, n_alt = 7
   Insn 993: point = 478, n_alt = 3
   Insn 992: point = 479, n_alt = 0
   Insn 991: point = 481, n_alt = 0
   Insn 990: point = 483, n_alt = 0
   Insn 989: point = 485, n_alt = 3
   Insn 988: point = 486, n_alt = 0
   Insn 987: point = 488, n_alt = 2
   Insn 986: point = 490, n_alt = 0
   Insn 985: point = 492, n_alt = 0
   Insn 984: point = 493, n_alt = 3
   Insn 983: point = 495, n_alt = 2
   Insn 982: point = 497, n_alt = 0
   Insn 981: point = 499, n_alt = 0
  BB 52
   Insn 974: point = 501, n_alt = 1
   Insn 973: point = 501, n_alt = 0
   Insn 972: point = 503, n_alt = 3
   Insn 971: point = 504, n_alt = 8
   Insn 970: point = 505, n_alt = 2
   Insn 969: point = 507, n_alt = 7
   Insn 968: point = 508, n_alt = 7
   Insn 967: point = 510, n_alt = 3
   Insn 966: point = 511, n_alt = 0
   Insn 965: point = 513, n_alt = 0
   Insn 964: point = 515, n_alt = 0
   Insn 963: point = 517, n_alt = 3
   Insn 962: point = 518, n_alt = 0
   Insn 961: point = 520, n_alt = 2
   Insn 960: point = 522, n_alt = 0
   Insn 959: point = 524, n_alt = 0
   Insn 958: point = 526, n_alt = 3
   Insn 957: point = 527, n_alt = 3
   Insn 956: point = 529, n_alt = 2
   Insn 955: point = 531, n_alt = 0
   Insn 954: point = 533, n_alt = 0
  BB 50
   Insn 921: point = 535, n_alt = -1
   Insn 920: point = 535, n_alt = 1
   Insn 919: point = 536, n_alt = 7
  BB 49
   Insn 918: point = 538, n_alt = -1
   Insn 917: point = 538, n_alt = 1
   Insn 916: point = 539, n_alt = 7
   Insn 915: point = 540, n_alt = 7
   Insn 914: point = 542, n_alt = 3
   Insn 913: point = 543, n_alt = 0
   Insn 912: point = 545, n_alt = 0
   Insn 911: point = 547, n_alt = 0
   Insn 910: point = 549, n_alt = 3
   Insn 909: point = 550, n_alt = 0
   Insn 908: point = 552, n_alt = 2
   Insn 907: point = 554, n_alt = 0
   Insn 906: point = 556, n_alt = 0
   Insn 905: point = 558, n_alt = 3
   Insn 904: point = 559, n_alt = 3
   Insn 903: point = 561, n_alt = 2
   Insn 902: point = 563, n_alt = 0
   Insn 901: point = 565, n_alt = 0
  BB 89
   Insn 1432: point = 567, n_alt = -1
  BB 18
   Insn 324: point = 568, n_alt = -1
   Insn 323: point = 568, n_alt = 0
   Insn 322: point = 569, n_alt = 0
   Insn 321: point = 570, n_alt = 0
  BB 48
   Insn 1391: point = 571, n_alt = -1
   Insn 895: point = 571, n_alt = 1
  BB 96
   Insn 1454: point = 572, n_alt = -1
  BB 37
   Insn 704: point = 573, n_alt = -1
   Insn 703: point = 573, n_alt = 0
   Insn 702: point = 574, n_alt = 0
   Insn 701: point = 575, n_alt = 0
  BB 47
   Insn 1389: point = 576, n_alt = -1
   Insn 889: point = 576, n_alt = 1
  BB 99
   Insn 1463: point = 577, n_alt = -1
  BB 45
   Insn 840: point = 578, n_alt = -1
   Insn 839: point = 578, n_alt = 0
   Insn 838: point = 579, n_alt = 0
   Insn 837: point = 580, n_alt = 0
  BB 46
   Insn 1387: point = 581, n_alt = -1
   Insn 883: point = 581, n_alt = 1
   Insn 882: point = 581, n_alt = 8
   Insn 881: point = 582, n_alt = 3
   Insn 1558: point = 583, n_alt = -1
   Insn 880: point = 585, n_alt = 2
   Insn 1557: point = 586, n_alt = -1
   Insn 879: point = 588, n_alt = 0
   Insn 878: point = 590, n_alt = 0
   Insn 877: point = 592, n_alt = 0
   Insn 876: point = 593, n_alt = 0
   Insn 875: point = 595, n_alt = 2
   Insn 874: point = 597, n_alt = 0
   Insn 873: point = 599, n_alt = 0
   Insn 872: point = 600, n_alt = 3
   Insn 871: point = 602, n_alt = 2
   Insn 870: point = 604, n_alt = 0
   Insn 869: point = 606, n_alt = 0
   Insn 868: point = 607, n_alt = 1
   Insn 867: point = 609, n_alt = 7
   Insn 866: point = 611, n_alt = 3
   Insn 865: point = 612, n_alt = 0
   Insn 864: point = 614, n_alt = 0
   Insn 863: point = 616, n_alt = 0
   Insn 862: point = 617, n_alt = 0
   Insn 861: point = 619, n_alt = 2
   Insn 860: point = 621, n_alt = 0
   Insn 859: point = 623, n_alt = 0
   Insn 858: point = 624, n_alt = 3
   Insn 857: point = 626, n_alt = 2
   Insn 856: point = 628, n_alt = 0
   Insn 855: point = 630, n_alt = 0
   Insn 854: point = 631, n_alt = 7
   Insn 853: point = 633, n_alt = 3
   Insn 852: point = 634, n_alt = 0
   Insn 851: point = 636, n_alt = 0
   Insn 850: point = 638, n_alt = 0
   Insn 849: point = 639, n_alt = 0
   Insn 848: point = 641, n_alt = 2
   Insn 847: point = 643, n_alt = 0
   Insn 846: point = 645, n_alt = 0
   Insn 845: point = 646, n_alt = 3
   Insn 844: point = 648, n_alt = 2
   Insn 843: point = 650, n_alt = 0
   Insn 842: point = 652, n_alt = 0
  BB 44
   Insn 835: point = 654, n_alt = 1
   Insn 834: point = 654, n_alt = 0
   Insn 833: point = 656, n_alt = 3
  BB 98
   Insn 1460: point = 658, n_alt = -1
  BB 42
   Insn 784: point = 659, n_alt = -1
   Insn 783: point = 659, n_alt = 0
   Insn 782: point = 660, n_alt = 0
   Insn 781: point = 661, n_alt = 0
  BB 43
   Insn 1385: point = 662, n_alt = -1
   Insn 827: point = 662, n_alt = 1
   Insn 826: point = 662, n_alt = 8
   Insn 825: point = 663, n_alt = 3
   Insn 1556: point = 664, n_alt = -1
   Insn 824: point = 666, n_alt = 2
   Insn 1555: point = 667, n_alt = -1
   Insn 823: point = 669, n_alt = 0
   Insn 822: point = 671, n_alt = 0
   Insn 821: point = 673, n_alt = 0
   Insn 820: point = 674, n_alt = 0
   Insn 819: point = 676, n_alt = 2
   Insn 818: point = 678, n_alt = 0
   Insn 817: point = 680, n_alt = 0
   Insn 816: point = 681, n_alt = 3
   Insn 815: point = 683, n_alt = 2
   Insn 814: point = 685, n_alt = 0
   Insn 813: point = 687, n_alt = 0
   Insn 812: point = 688, n_alt = 1
   Insn 811: point = 690, n_alt = 7
   Insn 810: point = 692, n_alt = 3
   Insn 809: point = 693, n_alt = 0
   Insn 808: point = 695, n_alt = 0
   Insn 807: point = 697, n_alt = 0
   Insn 806: point = 698, n_alt = 0
   Insn 805: point = 700, n_alt = 2
   Insn 804: point = 702, n_alt = 0
   Insn 803: point = 704, n_alt = 0
   Insn 802: point = 705, n_alt = 3
   Insn 801: point = 707, n_alt = 2
   Insn 800: point = 709, n_alt = 0
   Insn 799: point = 711, n_alt = 0
   Insn 798: point = 712, n_alt = 7
   Insn 797: point = 714, n_alt = 3
   Insn 796: point = 715, n_alt = 0
   Insn 795: point = 717, n_alt = 0
   Insn 794: point = 719, n_alt = 0
   Insn 793: point = 720, n_alt = 0
   Insn 792: point = 722, n_alt = 2
   Insn 791: point = 724, n_alt = 0
   Insn 790: point = 726, n_alt = 0
   Insn 789: point = 727, n_alt = 3
   Insn 788: point = 729, n_alt = 2
   Insn 787: point = 731, n_alt = 0
   Insn 786: point = 733, n_alt = 0
  BB 41
   Insn 779: point = 735, n_alt = 1
   Insn 778: point = 735, n_alt = 0
   Insn 777: point = 737, n_alt = 3
  BB 97
   Insn 1457: point = 739, n_alt = -1
  BB 39
   Insn 728: point = 740, n_alt = -1
   Insn 727: point = 740, n_alt = 0
   Insn 726: point = 741, n_alt = 0
   Insn 725: point = 742, n_alt = 0
  BB 40
   Insn 1383: point = 743, n_alt = -1
   Insn 771: point = 743, n_alt = 1
   Insn 770: point = 743, n_alt = 8
   Insn 769: point = 744, n_alt = 3
   Insn 1554: point = 745, n_alt = -1
   Insn 768: point = 747, n_alt = 2
   Insn 1553: point = 748, n_alt = -1
   Insn 767: point = 750, n_alt = 0
   Insn 766: point = 752, n_alt = 0
   Insn 765: point = 754, n_alt = 0
   Insn 764: point = 755, n_alt = 0
   Insn 763: point = 757, n_alt = 2
   Insn 762: point = 759, n_alt = 0
   Insn 761: point = 761, n_alt = 0
   Insn 760: point = 762, n_alt = 3
   Insn 759: point = 764, n_alt = 2
   Insn 758: point = 766, n_alt = 0
   Insn 757: point = 768, n_alt = 0
   Insn 756: point = 769, n_alt = 1
   Insn 755: point = 771, n_alt = 7
   Insn 754: point = 773, n_alt = 3
   Insn 753: point = 774, n_alt = 0
   Insn 752: point = 776, n_alt = 0
   Insn 751: point = 778, n_alt = 0
   Insn 750: point = 779, n_alt = 0
   Insn 749: point = 781, n_alt = 2
   Insn 748: point = 783, n_alt = 0
   Insn 747: point = 785, n_alt = 0
   Insn 746: point = 786, n_alt = 3
   Insn 745: point = 788, n_alt = 2
   Insn 744: point = 790, n_alt = 0
   Insn 743: point = 792, n_alt = 0
   Insn 742: point = 793, n_alt = 7
   Insn 741: point = 795, n_alt = 3
   Insn 740: point = 796, n_alt = 0
   Insn 739: point = 798, n_alt = 0
   Insn 738: point = 800, n_alt = 0
   Insn 737: point = 801, n_alt = 0
   Insn 736: point = 803, n_alt = 2
   Insn 735: point = 805, n_alt = 0
   Insn 734: point = 807, n_alt = 0
   Insn 733: point = 808, n_alt = 3
   Insn 732: point = 810, n_alt = 2
   Insn 731: point = 812, n_alt = 0
   Insn 730: point = 814, n_alt = 0
  BB 38
   Insn 723: point = 816, n_alt = 1
   Insn 722: point = 817, n_alt = 0
   Insn 721: point = 819, n_alt = 3
   Insn 720: point = 820, n_alt = 0
   Insn 719: point = 821, n_alt = 8
   Insn 718: point = 822, n_alt = 7
   Insn 717: point = 824, n_alt = 3
   Insn 716: point = 825, n_alt = 0
   Insn 715: point = 827, n_alt = 0
   Insn 714: point = 829, n_alt = 0
   Insn 713: point = 830, n_alt = 0
   Insn 712: point = 832, n_alt = 2
   Insn 711: point = 834, n_alt = 0
   Insn 710: point = 836, n_alt = 0
   Insn 709: point = 837, n_alt = 3
   Insn 708: point = 839, n_alt = 2
   Insn 707: point = 841, n_alt = 0
   Insn 706: point = 843, n_alt = 0
  BB 36
   Insn 699: point = 845, n_alt = 1
   Insn 698: point = 846, n_alt = 0
   Insn 697: point = 848, n_alt = 3
   Insn 696: point = 849, n_alt = 0
  BB 95
   Insn 1451: point = 851, n_alt = -1
  BB 34
   Insn 632: point = 852, n_alt = -1
   Insn 631: point = 852, n_alt = 0
   Insn 630: point = 853, n_alt = 0
   Insn 629: point = 854, n_alt = 0
  BB 35
   Insn 1381: point = 855, n_alt = -1
   Insn 690: point = 855, n_alt = 1
   Insn 689: point = 855, n_alt = 8
   Insn 688: point = 856, n_alt = 7
   Insn 687: point = 857, n_alt = 3
   Insn 686: point = 858, n_alt = 0
   Insn 685: point = 860, n_alt = 0
   Insn 684: point = 862, n_alt = 0
   Insn 683: point = 863, n_alt = 0
   Insn 682: point = 865, n_alt = 2
   Insn 681: point = 867, n_alt = 0
   Insn 680: point = 869, n_alt = 0
   Insn 679: point = 870, n_alt = 3
   Insn 678: point = 872, n_alt = 2
   Insn 677: point = 874, n_alt = 0
   Insn 676: point = 876, n_alt = 0
   Insn 675: point = 877, n_alt = 8
   Insn 674: point = 878, n_alt = 3
   Insn 673: point = 879, n_alt = 7
   Insn 672: point = 881, n_alt = 3
   Insn 671: point = 882, n_alt = 0
   Insn 670: point = 884, n_alt = 0
   Insn 669: point = 886, n_alt = 0
   Insn 668: point = 887, n_alt = 0
   Insn 667: point = 889, n_alt = 2
   Insn 666: point = 891, n_alt = 0
   Insn 665: point = 893, n_alt = 0
   Insn 664: point = 894, n_alt = 3
   Insn 663: point = 896, n_alt = 2
   Insn 662: point = 898, n_alt = 0
   Insn 661: point = 900, n_alt = 0
   Insn 660: point = 901, n_alt = 3
   Insn 659: point = 903, n_alt = 0
   Insn 658: point = 905, n_alt = 0
   Insn 657: point = 906, n_alt = 0
   Insn 656: point = 908, n_alt = 2
   Insn 655: point = 910, n_alt = 0
   Insn 654: point = 912, n_alt = 0
   Insn 653: point = 913, n_alt = 3
   Insn 652: point = 915, n_alt = 2
   Insn 651: point = 917, n_alt = 0
   Insn 650: point = 919, n_alt = 0
   Insn 649: point = 920, n_alt = 8
   Insn 648: point = 921, n_alt = 1
   Insn 647: point = 923, n_alt = 7
   Insn 646: point = 924, n_alt = 7
   Insn 645: point = 926, n_alt = 3
   Insn 644: point = 927, n_alt = 0
   Insn 643: point = 929, n_alt = 0
   Insn 642: point = 931, n_alt = 0
   Insn 641: point = 932, n_alt = 0
   Insn 640: point = 934, n_alt = 2
   Insn 639: point = 936, n_alt = 0
   Insn 638: point = 938, n_alt = 0
   Insn 637: point = 939, n_alt = 3
   Insn 636: point = 941, n_alt = 2
   Insn 635: point = 943, n_alt = 0
   Insn 634: point = 945, n_alt = 0
  BB 33
   Insn 627: point = 947, n_alt = 1
   Insn 626: point = 947, n_alt = 0
   Insn 625: point = 949, n_alt = 3
  BB 94
   Insn 1448: point = 951, n_alt = -1
  BB 31
   Insn 561: point = 952, n_alt = -1
   Insn 560: point = 952, n_alt = 0
   Insn 559: point = 953, n_alt = 0
   Insn 558: point = 954, n_alt = 0
  BB 32
   Insn 1379: point = 955, n_alt = -1
   Insn 619: point = 955, n_alt = 1
   Insn 618: point = 955, n_alt = 8
   Insn 617: point = 956, n_alt = 7
   Insn 616: point = 957, n_alt = 3
   Insn 615: point = 958, n_alt = 0
   Insn 614: point = 960, n_alt = 0
   Insn 613: point = 962, n_alt = 0
   Insn 612: point = 963, n_alt = 0
   Insn 611: point = 965, n_alt = 2
   Insn 610: point = 967, n_alt = 0
   Insn 609: point = 969, n_alt = 0
   Insn 608: point = 970, n_alt = 3
   Insn 607: point = 972, n_alt = 2
   Insn 606: point = 974, n_alt = 0
   Insn 605: point = 976, n_alt = 0
   Insn 604: point = 977, n_alt = 8
   Insn 603: point = 978, n_alt = 3
   Insn 602: point = 979, n_alt = 7
   Insn 601: point = 981, n_alt = 3
   Insn 600: point = 982, n_alt = 0
   Insn 599: point = 984, n_alt = 0
   Insn 598: point = 986, n_alt = 0
   Insn 597: point = 987, n_alt = 0
   Insn 596: point = 989, n_alt = 2
   Insn 595: point = 991, n_alt = 0
   Insn 594: point = 993, n_alt = 0
   Insn 593: point = 994, n_alt = 3
   Insn 592: point = 996, n_alt = 2
   Insn 591: point = 998, n_alt = 0
   Insn 590: point = 1000, n_alt = 0
   Insn 589: point = 1001, n_alt = 3
   Insn 588: point = 1003, n_alt = 0
   Insn 587: point = 1005, n_alt = 0
   Insn 586: point = 1006, n_alt = 0
   Insn 585: point = 1008, n_alt = 2
   Insn 584: point = 1010, n_alt = 0
   Insn 583: point = 1012, n_alt = 0
   Insn 582: point = 1013, n_alt = 3
   Insn 581: point = 1015, n_alt = 2
   Insn 580: point = 1017, n_alt = 0
   Insn 579: point = 1019, n_alt = 0
   Insn 578: point = 1020, n_alt = 8
   Insn 577: point = 1021, n_alt = 1
   Insn 576: point = 1023, n_alt = 7
   Insn 575: point = 1024, n_alt = 7
   Insn 574: point = 1026, n_alt = 3
   Insn 573: point = 1027, n_alt = 0
   Insn 572: point = 1029, n_alt = 0
   Insn 571: point = 1031, n_alt = 0
   Insn 570: point = 1032, n_alt = 0
   Insn 569: point = 1034, n_alt = 2
   Insn 568: point = 1036, n_alt = 0
   Insn 567: point = 1038, n_alt = 0
   Insn 566: point = 1039, n_alt = 3
   Insn 565: point = 1041, n_alt = 2
   Insn 564: point = 1043, n_alt = 0
   Insn 563: point = 1045, n_alt = 0
  BB 30
   Insn 556: point = 1047, n_alt = 1
   Insn 555: point = 1047, n_alt = 0
   Insn 554: point = 1049, n_alt = 3
  BB 93
   Insn 1445: point = 1051, n_alt = -1
  BB 28
   Insn 490: point = 1052, n_alt = -1
   Insn 489: point = 1052, n_alt = 0
   Insn 488: point = 1053, n_alt = 0
   Insn 487: point = 1054, n_alt = 0
  BB 29
   Insn 1377: point = 1055, n_alt = -1
   Insn 548: point = 1055, n_alt = 1
   Insn 547: point = 1055, n_alt = 8
   Insn 546: point = 1056, n_alt = 7
   Insn 545: point = 1057, n_alt = 3
   Insn 544: point = 1058, n_alt = 0
   Insn 543: point = 1060, n_alt = 0
   Insn 542: point = 1062, n_alt = 0
   Insn 541: point = 1063, n_alt = 0
   Insn 540: point = 1065, n_alt = 2
   Insn 539: point = 1067, n_alt = 0
   Insn 538: point = 1069, n_alt = 0
   Insn 537: point = 1070, n_alt = 3
   Insn 536: point = 1072, n_alt = 2
   Insn 535: point = 1074, n_alt = 0
   Insn 534: point = 1076, n_alt = 0
   Insn 533: point = 1077, n_alt = 8
   Insn 532: point = 1078, n_alt = 3
   Insn 531: point = 1079, n_alt = 7
   Insn 530: point = 1081, n_alt = 3
   Insn 529: point = 1082, n_alt = 0
   Insn 528: point = 1084, n_alt = 0
   Insn 527: point = 1086, n_alt = 0
   Insn 526: point = 1087, n_alt = 0
   Insn 525: point = 1089, n_alt = 2
   Insn 524: point = 1091, n_alt = 0
   Insn 523: point = 1093, n_alt = 0
   Insn 522: point = 1094, n_alt = 3
   Insn 521: point = 1096, n_alt = 2
   Insn 520: point = 1098, n_alt = 0
   Insn 519: point = 1100, n_alt = 0
   Insn 518: point = 1101, n_alt = 3
   Insn 517: point = 1103, n_alt = 0
   Insn 516: point = 1105, n_alt = 0
   Insn 515: point = 1106, n_alt = 0
   Insn 514: point = 1108, n_alt = 2
   Insn 513: point = 1110, n_alt = 0
   Insn 512: point = 1112, n_alt = 0
   Insn 511: point = 1113, n_alt = 3
   Insn 510: point = 1115, n_alt = 2
   Insn 509: point = 1117, n_alt = 0
   Insn 508: point = 1119, n_alt = 0
   Insn 507: point = 1120, n_alt = 8
   Insn 506: point = 1121, n_alt = 1
   Insn 505: point = 1123, n_alt = 7
   Insn 504: point = 1124, n_alt = 7
   Insn 503: point = 1126, n_alt = 3
   Insn 502: point = 1127, n_alt = 0
   Insn 501: point = 1129, n_alt = 0
   Insn 500: point = 1131, n_alt = 0
   Insn 499: point = 1132, n_alt = 0
   Insn 498: point = 1134, n_alt = 2
   Insn 497: point = 1136, n_alt = 0
   Insn 496: point = 1138, n_alt = 0
   Insn 495: point = 1139, n_alt = 3
   Insn 494: point = 1141, n_alt = 2
   Insn 493: point = 1143, n_alt = 0
   Insn 492: point = 1145, n_alt = 0
  BB 27
   Insn 485: point = 1147, n_alt = 1
   Insn 484: point = 1148, n_alt = 0
   Insn 483: point = 1150, n_alt = 3
   Insn 482: point = 1151, n_alt = 0
   Insn 481: point = 1152, n_alt = 8
   Insn 480: point = 1153, n_alt = 3
   Insn 479: point = 1154, n_alt = 7
   Insn 478: point = 1156, n_alt = 3
   Insn 477: point = 1157, n_alt = 0
   Insn 476: point = 1159, n_alt = 0
   Insn 475: point = 1161, n_alt = 0
   Insn 474: point = 1162, n_alt = 0
   Insn 473: point = 1164, n_alt = 2
   Insn 472: point = 1166, n_alt = 0
   Insn 471: point = 1168, n_alt = 0
   Insn 470: point = 1169, n_alt = 3
   Insn 469: point = 1171, n_alt = 2
   Insn 468: point = 1173, n_alt = 0
   Insn 467: point = 1175, n_alt = 0
   Insn 466: point = 1176, n_alt = 3
   Insn 465: point = 1178, n_alt = 0
   Insn 464: point = 1180, n_alt = 0
   Insn 463: point = 1181, n_alt = 0
   Insn 462: point = 1183, n_alt = 2
   Insn 461: point = 1185, n_alt = 0
   Insn 460: point = 1187, n_alt = 0
   Insn 459: point = 1188, n_alt = 3
   Insn 458: point = 1190, n_alt = 2
   Insn 457: point = 1192, n_alt = 0
   Insn 456: point = 1194, n_alt = 0
   Insn 455: point = 1195, n_alt = 8
   Insn 454: point = 1196, n_alt = 2
   Insn 453: point = 1198, n_alt = 7
   Insn 452: point = 1199, n_alt = 7
   Insn 451: point = 1201, n_alt = 3
   Insn 450: point = 1202, n_alt = 0
   Insn 449: point = 1204, n_alt = 0
   Insn 448: point = 1206, n_alt = 0
   Insn 447: point = 1207, n_alt = 0
   Insn 446: point = 1209, n_alt = 2
   Insn 445: point = 1211, n_alt = 0
   Insn 444: point = 1213, n_alt = 0
   Insn 443: point = 1214, n_alt = 3
   Insn 442: point = 1216, n_alt = 2
   Insn 441: point = 1218, n_alt = 0
   Insn 440: point = 1220, n_alt = 0
  BB 25
   Insn 407: point = 1222, n_alt = -1
   Insn 406: point = 1222, n_alt = 1
   Insn 405: point = 1223, n_alt = 7
  BB 24
   Insn 404: point = 1225, n_alt = -1
   Insn 403: point = 1225, n_alt = 1
   Insn 402: point = 1226, n_alt = 7
   Insn 401: point = 1227, n_alt = 7
   Insn 400: point = 1229, n_alt = 3
   Insn 399: point = 1230, n_alt = 0
   Insn 398: point = 1232, n_alt = 0
   Insn 397: point = 1234, n_alt = 0
   Insn 396: point = 1235, n_alt = 0
   Insn 395: point = 1237, n_alt = 2
   Insn 394: point = 1239, n_alt = 0
   Insn 393: point = 1241, n_alt = 0
   Insn 392: point = 1242, n_alt = 3
   Insn 391: point = 1244, n_alt = 2
   Insn 390: point = 1246, n_alt = 0
   Insn 389: point = 1248, n_alt = 0
  BB 90
   Insn 1435: point = 1250, n_alt = -1
  BB 20
   Insn 342: point = 1251, n_alt = -1
   Insn 341: point = 1251, n_alt = 0
   Insn 340: point = 1252, n_alt = 0
   Insn 339: point = 1253, n_alt = 0
  BB 23
   Insn 1375: point = 1254, n_alt = -1
   Insn 383: point = 1254, n_alt = 1
  BB 22
   Insn 1436: point = 1255, n_alt = -1
   Insn 380: point = 1255, n_alt = 1
   Insn 379: point = 1256, n_alt = 0
  BB 92
   Insn 1442: point = 1258, n_alt = -1
  BB 91
   Insn 1440: point = 1259, n_alt = -1
  BB 21
   Insn 377: point = 1260, n_alt = -1
   Insn 376: point = 1260, n_alt = 1
   Insn 375: point = 1261, n_alt = 7
   Insn 374: point = 1262, n_alt = 2
   Insn 373: point = 1264, n_alt = 1
   Insn 372: point = 1266, n_alt = 2
   Insn 371: point = 1267, n_alt = 7
   Insn 370: point = 1269, n_alt = 3
   Insn 369: point = 1270, n_alt = 0
   Insn 368: point = 1272, n_alt = 0
   Insn 367: point = 1274, n_alt = 0
   Insn 366: point = 1275, n_alt = 0
   Insn 365: point = 1277, n_alt = 2
   Insn 364: point = 1279, n_alt = 0
   Insn 363: point = 1281, n_alt = 0
   Insn 362: point = 1282, n_alt = 3
   Insn 361: point = 1284, n_alt = 2
   Insn 360: point = 1286, n_alt = 0
   Insn 359: point = 1288, n_alt = 0
   Insn 358: point = 1289, n_alt = 1
   Insn 357: point = 1291, n_alt = 2
   Insn 356: point = 1292, n_alt = 7
   Insn 355: point = 1294, n_alt = 3
   Insn 354: point = 1295, n_alt = 0
   Insn 353: point = 1297, n_alt = 0
   Insn 352: point = 1299, n_alt = 0
   Insn 351: point = 1300, n_alt = 0
   Insn 350: point = 1302, n_alt = 2
   Insn 349: point = 1304, n_alt = 0
   Insn 348: point = 1306, n_alt = 0
   Insn 347: point = 1307, n_alt = 3
   Insn 346: point = 1309, n_alt = 2
   Insn 345: point = 1311, n_alt = 0
   Insn 344: point = 1313, n_alt = 0
  BB 19
   Insn 337: point = 1315, n_alt = 1
   Insn 336: point = 1316, n_alt = 0
   Insn 335: point = 1318, n_alt = 3
   Insn 334: point = 1319, n_alt = 0
   Insn 333: point = 1320, n_alt = 1
   Insn 332: point = 1321, n_alt = 0
   Insn 331: point = 1322, n_alt = 1
   Insn 330: point = 1323, n_alt = 0
   Insn 329: point = 1325, n_alt = 0
  BB 17
   Insn 319: point = 1327, n_alt = 1
   Insn 318: point = 1327, n_alt = 3
   Insn 317: point = 1329, n_alt = 0
   Insn 316: point = 1331, n_alt = 3
  BB 85
   Insn 1420: point = 1333, n_alt = -1
  BB 6
   Insn 167: point = 1334, n_alt = -1
   Insn 166: point = 1334, n_alt = 0
   Insn 165: point = 1335, n_alt = 0
   Insn 164: point = 1336, n_alt = 0
  BB 16
   Insn 1373: point = 1337, n_alt = -1
   Insn 310: point = 1337, n_alt = 1
  BB 86
   Insn 1423: point = 1338, n_alt = -1
  BB 8
   Insn 176: point = 1339, n_alt = -1
   Insn 175: point = 1339, n_alt = 0
   Insn 174: point = 1340, n_alt = 0
   Insn 173: point = 1341, n_alt = 0
  BB 15
   Insn 1371: point = 1342, n_alt = -1
   Insn 304: point = 1342, n_alt = 1
  BB 88
   Insn 1429: point = 1343, n_alt = -1
  BB 13
   Insn 255: point = 1344, n_alt = -1
   Insn 254: point = 1344, n_alt = 0
   Insn 253: point = 1345, n_alt = 0
   Insn 252: point = 1346, n_alt = 0
  BB 14
   Insn 1369: point = 1347, n_alt = -1
   Insn 298: point = 1347, n_alt = 1
   Insn 297: point = 1347, n_alt = 8
   Insn 296: point = 1348, n_alt = 3
   Insn 1552: point = 1349, n_alt = -1
   Insn 295: point = 1351, n_alt = 2
   Insn 1551: point = 1352, n_alt = -1
   Insn 294: point = 1354, n_alt = 0
   Insn 293: point = 1356, n_alt = 0
   Insn 292: point = 1358, n_alt = 0
   Insn 291: point = 1359, n_alt = 0
   Insn 290: point = 1361, n_alt = 2
   Insn 289: point = 1363, n_alt = 0
   Insn 288: point = 1365, n_alt = 0
   Insn 287: point = 1366, n_alt = 3
   Insn 286: point = 1368, n_alt = 2
   Insn 285: point = 1370, n_alt = 0
   Insn 284: point = 1372, n_alt = 0
   Insn 283: point = 1373, n_alt = 1
   Insn 282: point = 1375, n_alt = 7
   Insn 281: point = 1377, n_alt = 3
   Insn 280: point = 1378, n_alt = 0
   Insn 279: point = 1380, n_alt = 0
   Insn 278: point = 1382, n_alt = 0
   Insn 277: point = 1383, n_alt = 0
   Insn 276: point = 1385, n_alt = 2
   Insn 275: point = 1387, n_alt = 0
   Insn 274: point = 1389, n_alt = 0
   Insn 273: point = 1390, n_alt = 3
   Insn 272: point = 1392, n_alt = 2
   Insn 271: point = 1394, n_alt = 0
   Insn 270: point = 1396, n_alt = 0
   Insn 269: point = 1397, n_alt = 7
   Insn 268: point = 1399, n_alt = 3
   Insn 267: point = 1400, n_alt = 0
   Insn 266: point = 1402, n_alt = 0
   Insn 265: point = 1404, n_alt = 0
   Insn 264: point = 1405, n_alt = 0
   Insn 263: point = 1407, n_alt = 2
   Insn 262: point = 1409, n_alt = 0
   Insn 261: point = 1411, n_alt = 0
   Insn 260: point = 1412, n_alt = 3
   Insn 259: point = 1414, n_alt = 2
   Insn 258: point = 1416, n_alt = 0
   Insn 257: point = 1418, n_alt = 0
  BB 12
   Insn 250: point = 1420, n_alt = 1
   Insn 249: point = 1420, n_alt = 0
   Insn 248: point = 1422, n_alt = 3
  BB 87
   Insn 1426: point = 1424, n_alt = -1
  BB 10
   Insn 199: point = 1425, n_alt = -1
   Insn 198: point = 1425, n_alt = 0
   Insn 197: point = 1426, n_alt = 0
   Insn 196: point = 1427, n_alt = 0
  BB 11
   Insn 1367: point = 1428, n_alt = -1
   Insn 242: point = 1428, n_alt = 1
   Insn 241: point = 1428, n_alt = 8
   Insn 240: point = 1429, n_alt = 3
   Insn 1550: point = 1430, n_alt = -1
   Insn 239: point = 1432, n_alt = 2
   Insn 1549: point = 1433, n_alt = -1
   Insn 238: point = 1435, n_alt = 0
   Insn 237: point = 1437, n_alt = 0
   Insn 236: point = 1439, n_alt = 0
   Insn 235: point = 1440, n_alt = 0
   Insn 234: point = 1442, n_alt = 2
   Insn 233: point = 1444, n_alt = 0
   Insn 232: point = 1446, n_alt = 0
   Insn 231: point = 1447, n_alt = 3
   Insn 230: point = 1449, n_alt = 2
   Insn 229: point = 1451, n_alt = 0
   Insn 228: point = 1453, n_alt = 0
   Insn 227: point = 1454, n_alt = 1
   Insn 226: point = 1456, n_alt = 7
   Insn 225: point = 1458, n_alt = 3
   Insn 224: point = 1459, n_alt = 0
   Insn 223: point = 1461, n_alt = 0
   Insn 222: point = 1463, n_alt = 0
   Insn 221: point = 1464, n_alt = 0
   Insn 220: point = 1466, n_alt = 2
   Insn 219: point = 1468, n_alt = 0
   Insn 218: point = 1470, n_alt = 0
   Insn 217: point = 1471, n_alt = 3
   Insn 216: point = 1473, n_alt = 2
   Insn 215: point = 1475, n_alt = 0
   Insn 214: point = 1477, n_alt = 0
   Insn 213: point = 1478, n_alt = 7
   Insn 212: point = 1480, n_alt = 3
   Insn 211: point = 1481, n_alt = 0
   Insn 210: point = 1483, n_alt = 0
   Insn 209: point = 1485, n_alt = 0
   Insn 208: point = 1486, n_alt = 0
   Insn 207: point = 1488, n_alt = 2
   Insn 206: point = 1490, n_alt = 0
   Insn 205: point = 1492, n_alt = 0
   Insn 204: point = 1493, n_alt = 3
   Insn 203: point = 1495, n_alt = 2
   Insn 202: point = 1497, n_alt = 0
   Insn 201: point = 1499, n_alt = 0
  BB 9
   Insn 194: point = 1501, n_alt = 1
   Insn 193: point = 1501, n_alt = 0
   Insn 192: point = 1503, n_alt = 3
   Insn 191: point = 1504, n_alt = 8
   Insn 190: point = 1505, n_alt = 7
   Insn 189: point = 1507, n_alt = 3
   Insn 188: point = 1508, n_alt = 0
   Insn 187: point = 1510, n_alt = 0
   Insn 186: point = 1512, n_alt = 0
   Insn 185: point = 1513, n_alt = 0
   Insn 184: point = 1515, n_alt = 2
   Insn 183: point = 1517, n_alt = 0
   Insn 182: point = 1519, n_alt = 0
   Insn 181: point = 1520, n_alt = 3
   Insn 1547: point = 1522, n_alt = 3
   Insn 180: point = 1523, n_alt = 2
   Insn 179: point = 1525, n_alt = 0
   Insn 178: point = 1527, n_alt = 0
  BB 7
   Insn 171: point = 1529, n_alt = 1
   Insn 170: point = 1529, n_alt = 0
   Insn 169: point = 1531, n_alt = 3
  BB 5
   Insn 162: point = 1533, n_alt = 1
   Insn 161: point = 1533, n_alt = 0
   Insn 160: point = 1535, n_alt = 3
  BB 4
   Insn 158: point = 1537, n_alt = -1
   Insn 157: point = 1537, n_alt = 0
   Insn 156: point = 1538, n_alt = 0
   Insn 155: point = 1539, n_alt = 1
   Insn 154: point = 1540, n_alt = 0
   Insn 153: point = 1542, n_alt = 0
  BB 2
   Insn 145: point = 1544, n_alt = 1
   Insn 1544: point = 1544, n_alt = 1
   Insn 144: point = 1545, n_alt = 0
   Insn 143: point = 1547, n_alt = 3
   Insn 1543: point = 1548, n_alt = -1
   Insn 142: point = 1550, n_alt = 0
   Insn 1542: point = 1550, n_alt = -1
   Insn 1541: point = 1552, n_alt = -1
   Insn 141: point = 1554, n_alt = 0
   Insn 1540: point = 1554, n_alt = -1
   Insn 137: point = 1555, n_alt = 5
   Insn 136: point = 1555, n_alt = 5
   Insn 135: point = 1556, n_alt = -1
   Insn 133: point = 1558, n_alt = 1
   Insn 131: point = 1560, n_alt = 0
   Insn 132: point = 1560, n_alt = 2
   Insn 1539: point = 1561, n_alt = -1
   Insn 130: point = 1563, n_alt = 2
   Insn 1538: point = 1563, n_alt = -1
   Insn 129: point = 1564, n_alt = 5
   Insn 128: point = 1565, n_alt = 0
   Insn 127: point = 1567, n_alt = 0
   Insn 126: point = 1569, n_alt = 3
   Insn 1537: point = 1570, n_alt = -1
   Insn 125: point = 1572, n_alt = 0
   Insn 1536: point = 1573, n_alt = -1
   Insn 123: point = 1575, n_alt = 0
   Insn 124: point = 1575, n_alt = 2
   Insn 1535: point = 1576, n_alt = -1
   Insn 122: point = 1578, n_alt = 2
   Insn 1534: point = 1578, n_alt = -1
   Insn 121: point = 1579, n_alt = 5
   Insn 120: point = 1580, n_alt = 0
   Insn 119: point = 1582, n_alt = 0
   Insn 118: point = 1584, n_alt = 3
   Insn 1533: point = 1585, n_alt = -1
   Insn 117: point = 1587, n_alt = 0
   Insn 1532: point = 1588, n_alt = -1
   Insn 115: point = 1590, n_alt = 0
   Insn 116: point = 1590, n_alt = 2
   Insn 114: point = 1591, n_alt = 3
   Insn 113: point = 1592, n_alt = 5
   Insn 112: point = 1593, n_alt = 0
   Insn 111: point = 1595, n_alt = 0
   Insn 110: point = 1597, n_alt = 3
   Insn 1531: point = 1598, n_alt = -1
   Insn 109: point = 1600, n_alt = 0
   Insn 1530: point = 1600, n_alt = -1
   Insn 1529: point = 1602, n_alt = -1
   Insn 108: point = 1604, n_alt = 0
   Insn 1528: point = 1604, n_alt = -1
   Insn 104: point = 1605, n_alt = 2
   Insn 103: point = 1606, n_alt = 3
   Insn 102: point = 1607, n_alt = -1
   Insn 100: point = 1609, n_alt = 1
   Insn 98: point = 1611, n_alt = 0
   Insn 99: point = 1611, n_alt = 2
   Insn 1527: point = 1612, n_alt = -1
   Insn 97: point = 1614, n_alt = 2
   Insn 1526: point = 1614, n_alt = -1
   Insn 96: point = 1615, n_alt = 5
   Insn 95: point = 1616, n_alt = 0
   Insn 94: point = 1618, n_alt = 0
   Insn 93: point = 1620, n_alt = 3
   Insn 1525: point = 1621, n_alt = -1
   Insn 92: point = 1623, n_alt = 0
   Insn 1524: point = 1624, n_alt = -1
   Insn 90: point = 1626, n_alt = 0
   Insn 91: point = 1626, n_alt = 2
   Insn 1523: point = 1627, n_alt = -1
   Insn 89: point = 1629, n_alt = 2
   Insn 1522: point = 1629, n_alt = -1
   Insn 88: point = 1630, n_alt = 5
   Insn 87: point = 1631, n_alt = 0
   Insn 86: point = 1633, n_alt = 0
   Insn 85: point = 1635, n_alt = 3
   Insn 1521: point = 1636, n_alt = -1
   Insn 84: point = 1638, n_alt = 0
   Insn 1520: point = 1639, n_alt = -1
   Insn 82: point = 1641, n_alt = 0
   Insn 83: point = 1641, n_alt = 2
   Insn 81: point = 1642, n_alt = 3
   Insn 80: point = 1643, n_alt = 5
   Insn 79: point = 1644, n_alt = 0
   Insn 78: point = 1646, n_alt = 0
   Insn 77: point = 1648, n_alt = 3
   Insn 1519: point = 1649, n_alt = -1
   Insn 76: point = 1651, n_alt = 0
   Insn 1518: point = 1651, n_alt = -1
   Insn 1517: point = 1653, n_alt = -1
   Insn 75: point = 1655, n_alt = 0
   Insn 1516: point = 1655, n_alt = -1
   Insn 71: point = 1656, n_alt = 2
   Insn 70: point = 1657, n_alt = 3
   Insn 69: point = 1658, n_alt = -1
   Insn 67: point = 1660, n_alt = 1
   Insn 65: point = 1662, n_alt = 0
   Insn 66: point = 1662, n_alt = 2
   Insn 1515: point = 1663, n_alt = -1
   Insn 64: point = 1665, n_alt = 2
   Insn 1514: point = 1665, n_alt = -1
   Insn 63: point = 1666, n_alt = 5
   Insn 62: point = 1667, n_alt = 0
   Insn 61: point = 1669, n_alt = 0
   Insn 60: point = 1671, n_alt = 3
   Insn 1513: point = 1672, n_alt = -1
   Insn 59: point = 1674, n_alt = 0
   Insn 1512: point = 1675, n_alt = -1
   Insn 57: point = 1677, n_alt = 0
   Insn 58: point = 1677, n_alt = 2
   Insn 1511: point = 1678, n_alt = -1
   Insn 56: point = 1680, n_alt = 2
   Insn 1510: point = 1680, n_alt = -1
   Insn 55: point = 1681, n_alt = 5
   Insn 54: point = 1682, n_alt = 0
   Insn 53: point = 1684, n_alt = 0
   Insn 52: point = 1686, n_alt = 3
   Insn 1509: point = 1687, n_alt = -1
   Insn 51: point = 1689, n_alt = 0
   Insn 1508: point = 1690, n_alt = -1
   Insn 49: point = 1692, n_alt = 0
   Insn 50: point = 1692, n_alt = 2
   Insn 48: point = 1693, n_alt = 3
   Insn 47: point = 1694, n_alt = 5
   Insn 46: point = 1695, n_alt = 0
   Insn 45: point = 1697, n_alt = 0
   Insn 44: point = 1699, n_alt = 3
   Insn 1506: point = 1700, n_alt = 5
   Insn 43: point = 1701, n_alt = 0
   Insn 1507: point = 1702, n_alt = -1
   Insn 1505: point = 1704, n_alt = -1
   Insn 1504: point = 1706, n_alt = -1
   Insn 42: point = 1708, n_alt = 0
   Insn 1503: point = 1708, n_alt = -1
   Insn 38: point = 1710, n_alt = 2
   Insn 37: point = 1711, n_alt = 3
   Insn 36: point = 1712, n_alt = -1
   Insn 34: point = 1714, n_alt = 1
   Insn 32: point = 1716, n_alt = 0
   Insn 33: point = 1716, n_alt = 2
   Insn 1502: point = 1717, n_alt = -1
   Insn 31: point = 1719, n_alt = 2
   Insn 1501: point = 1719, n_alt = -1
   Insn 1565: point = 1720, n_alt = -1
   Insn 30: point = 1722, n_alt = 5
   Insn 29: point = 1723, n_alt = 0
   Insn 28: point = 1725, n_alt = 0
   Insn 27: point = 1727, n_alt = 3
   Insn 1566: point = 1728, n_alt = 5
   Insn 1500: point = 1728, n_alt = -1
   Insn 26: point = 1730, n_alt = 0
   Insn 1499: point = 1731, n_alt = -1
   Insn 24: point = 1733, n_alt = 0
   Insn 25: point = 1733, n_alt = 2
   Insn 1498: point = 1734, n_alt = -1
   Insn 23: point = 1736, n_alt = 2
   Insn 1497: point = 1736, n_alt = -1
   Insn 1567: point = 1737, n_alt = -1
   Insn 22: point = 1739, n_alt = 5
   Insn 21: point = 1740, n_alt = 0
   Insn 20: point = 1742, n_alt = 0
   Insn 19: point = 1744, n_alt = 3
   Insn 1568: point = 1745, n_alt = 5
   Insn 1496: point = 1745, n_alt = -1
   Insn 18: point = 1747, n_alt = 0
   Insn 1495: point = 1748, n_alt = -1
   Insn 16: point = 1750, n_alt = 0
   Insn 17: point = 1750, n_alt = 2
   Insn 15: point = 1751, n_alt = 3
   Insn 14: point = 1752, n_alt = 5
   Insn 13: point = 1753, n_alt = 0
   Insn 12: point = 1755, n_alt = 0
   Insn 11: point = 1757, n_alt = 3
   Insn 7: point = 1758, n_alt = 5
   Insn 6: point = 1758, n_alt = 5
   Insn 5: point = 1758, n_alt = 5
   Insn 4: point = 1758, n_alt = 5
   Insn 3: point = 1758, n_alt = 5
   Insn 2: point = 1758, n_alt = 5
 r87: [1754..1755]
 r88: [1741..1742]
 r89: [1724..1725]
 r90: [1711..1712]
 r91: [1710..1758]
 r93: [1705..1706]
 r94: [1696..1697]
 r95: [1683..1684]
 r96: [1668..1669]
 r97: [1657..1658]
 r98: [1656..1758]
 r100: [1652..1653]
 r101: [1645..1646]
 r102: [1632..1633]
 r103: [1617..1618]
 r104: [1606..1607]
 r105: [1605..1758]
 r107: [1601..1602]
 r108: [1594..1595]
 r109: [1581..1582]
 r110: [1566..1567]
 r111: [1555..1556]
 r114: [1551..1552]
 r115: [169..170]
 r116: [1541..1542]
 r117: [1537..1538]
 r118: [1526..1527]
 r119: [1524..1525]
 r120: [1521..1523]
 r121: [1514..1520]
 r122: [1516..1517]
 r123: [1514..1515]
 r124: [1509..1513]
 r125: [1509..1510]
 r126: [1506..1508]
 r127: [1498..1499]
 r128: [1496..1497]
 r129: [1494..1495]
 r130: [1487..1493]
 r131: [1489..1490]
 r132: [1487..1488]
 r133: [1482..1486]
 r134: [1482..1483]
 r135: [1479..1481]
 r136: [1434..1478]
 r137: [1474..1475]
 r138: [1472..1473]
 r139: [1465..1471]
 r140: [1467..1468]
 r141: [1465..1466]
 r142: [1460..1464]
 r143: [1460..1461]
 r144: [1457..1459]
 r145: [1455..1456]
 r146: [1432..1454]
 r147: [1452..1453]
 r148: [1450..1451]
 r149: [1448..1449]
 r150: [1441..1447]
 r151: [1443..1444]
 r152: [1441..1442]
 r153: [1436..1440]
 r154: [1436..1437]
 r155: [1428..1435]
 r156: [1428..1430]
 r157: [1417..1418]
 r158: [1415..1416]
 r159: [1413..1414]
 r160: [1406..1412]
 r161: [1408..1409]
 r162: [1406..1407]
 r163: [1401..1405]
 r164: [1401..1402]
 r165: [1398..1400]
 r166: [1353..1397]
 r167: [1393..1394]
 r168: [1391..1392]
 r169: [1384..1390]
 r170: [1386..1387]
 r171: [1384..1385]
 r172: [1379..1383]
 r173: [1379..1380]
 r174: [1376..1378]
 r175: [1374..1375]
 r176: [1351..1373]
 r177: [1371..1372]
 r178: [1369..1370]
 r179: [1367..1368]
 r180: [1360..1366]
 r181: [1362..1363]
 r182: [1360..1361]
 r183: [1355..1359]
 r184: [1355..1356]
 r185: [1347..1354]
 r186: [1347..1349]
 r187: [1328..1329]
 r188: [1312..1313]
 r189: [1310..1311]
 r190: [1308..1309]
 r191: [1301..1307]
 r192: [1303..1304]
 r193: [1301..1302]
 r194: [1296..1300]
 r195: [1296..1297]
 r196: [1293..1295]
 r197: [1290..1292]
 r198: [1263..1289]
 r199: [1287..1288]
 r200: [1285..1286]
 r201: [1283..1284]
 r202: [1276..1282]
 r203: [1278..1279]
 r204: [1276..1277]
 r205: [1271..1275]
 r206: [1271..1272]
 r207: [1268..1270]
 r208: [1265..1267]
 r209: [1263..1264]
 r210: [1247..1248]
 r211: [1245..1246]
 r212: [1243..1244]
 r213: [1236..1242]
 r214: [1238..1239]
 r215: [1236..1237]
 r216: [1231..1235]
 r217: [1231..1232]
 r218: [1228..1230]
 r219: [1222..1227]
 r220: [1219..1220]
 r221: [1217..1218]
 r222: [1215..1216]
 r223: [1208..1214]
 r224: [1210..1211]
 r225: [1208..1209]
 r226: [1203..1207]
 r227: [1203..1204]
 r228: [1200..1202]
 r229: [1197..1199]
 r230: [1193..1194]
 r231: [1191..1192]
 r232: [1189..1190]
 r233: [1182..1188]
 r234: [1184..1185]
 r235: [1182..1183]
 r236: [1177..1181]
 r237: [1177..1178]
 r238: [1155..1176]
 r239: [1174..1175]
 r240: [1172..1173]
 r241: [1170..1171]
 r242: [1163..1169]
 r243: [1165..1166]
 r244: [1163..1164]
 r245: [1158..1162]
 r246: [1158..1159]
 r247: [1152..1157]
 r248: [1152..1154]
 r249: [1144..1145]
 r250: [1142..1143]
 r251: [1140..1141]
 r252: [1133..1139]
 r253: [1135..1136]
 r254: [1133..1134]
 r255: [1128..1132]
 r256: [1128..1129]
 r257: [1125..1127]
 r258: [1122..1124]
 r259: [1118..1119]
 r260: [1116..1117]
 r261: [1114..1115]
 r262: [1107..1113]
 r263: [1109..1110]
 r264: [1107..1108]
 r265: [1102..1106]
 r266: [1102..1103]
 r267: [1080..1101]
 r268: [1099..1100]
 r269: [1097..1098]
 r270: [1095..1096]
 r271: [1088..1094]
 r272: [1090..1091]
 r273: [1088..1089]
 r274: [1083..1087]
 r275: [1083..1084]
 r276: [1077..1082]
 r277: [1077..1079]
 r278: [1075..1076]
 r279: [1073..1074]
 r280: [1071..1072]
 r281: [1064..1070]
 r282: [1066..1067]
 r283: [1064..1065]
 r284: [1059..1063]
 r285: [1059..1060]
 r286: [1055..1058]
 r287: [1044..1045]
 r288: [1042..1043]
 r289: [1040..1041]
 r290: [1033..1039]
 r291: [1035..1036]
 r292: [1033..1034]
 r293: [1028..1032]
 r294: [1028..1029]
 r295: [1025..1027]
 r296: [1022..1024]
 r297: [1018..1019]
 r298: [1016..1017]
 r299: [1014..1015]
 r300: [1007..1013]
 r301: [1009..1010]
 r302: [1007..1008]
 r303: [1002..1006]
 r304: [1002..1003]
 r305: [980..1001]
 r306: [999..1000]
 r307: [997..998]
 r308: [995..996]
 r309: [988..994]
 r310: [990..991]
 r311: [988..989]
 r312: [983..987]
 r313: [983..984]
 r314: [977..982]
 r315: [977..979]
 r316: [975..976]
 r317: [973..974]
 r318: [971..972]
 r319: [964..970]
 r320: [966..967]
 r321: [964..965]
 r322: [959..963]
 r323: [959..960]
 r324: [955..958]
 r325: [944..945]
 r326: [942..943]
 r327: [940..941]
 r328: [933..939]
 r329: [935..936]
 r330: [933..934]
 r331: [928..932]
 r332: [928..929]
 r333: [925..927]
 r334: [922..924]
 r335: [918..919]
 r336: [916..917]
 r337: [914..915]
 r338: [907..913]
 r339: [909..910]
 r340: [907..908]
 r341: [902..906]
 r342: [902..903]
 r343: [880..901]
 r344: [899..900]
 r345: [897..898]
 r346: [895..896]
 r347: [888..894]
 r348: [890..891]
 r349: [888..889]
 r350: [883..887]
 r351: [883..884]
 r352: [877..882]
 r353: [877..879]
 r354: [875..876]
 r355: [873..874]
 r356: [871..872]
 r357: [864..870]
 r358: [866..867]
 r359: [864..865]
 r360: [859..863]
 r361: [859..860]
 r362: [855..858]
 r363: [842..843]
 r364: [840..841]
 r365: [838..839]
 r366: [831..837]
 r367: [833..834]
 r368: [831..832]
 r369: [826..830]
 r370: [826..827]
 r371: [823..825]
 r372: [813..814]
 r373: [811..812]
 r374: [809..810]
 r375: [802..808]
 r376: [804..805]
 r377: [802..803]
 r378: [797..801]
 r379: [797..798]
 r380: [794..796]
 r381: [749..793]
 r382: [791..792]
 r383: [789..790]
 r384: [787..788]
 r385: [780..786]
 r386: [782..783]
 r387: [780..781]
 r388: [775..779]
 r389: [775..776]
 r390: [772..774]
 r391: [770..771]
 r392: [747..769]
 r393: [767..768]
 r394: [765..766]
 r395: [763..764]
 r396: [756..762]
 r397: [758..759]
 r398: [756..757]
 r399: [751..755]
 r400: [751..752]
 r401: [743..750]
 r402: [743..745]
 r403: [732..733]
 r404: [730..731]
 r405: [728..729]
 r406: [721..727]
 r407: [723..724]
 r408: [721..722]
 r409: [716..720]
 r410: [716..717]
 r411: [713..715]
 r412: [668..712]
 r413: [710..711]
 r414: [708..709]
 r415: [706..707]
 r416: [699..705]
 r417: [701..702]
 r418: [699..700]
 r419: [694..698]
 r420: [694..695]
 r421: [691..693]
 r422: [689..690]
 r423: [666..688]
 r424: [686..687]
 r425: [684..685]
 r426: [682..683]
 r427: [675..681]
 r428: [677..678]
 r429: [675..676]
 r430: [670..674]
 r431: [670..671]
 r432: [662..669]
 r433: [662..664]
 r434: [651..652]
 r435: [649..650]
 r436: [647..648]
 r437: [640..646]
 r438: [642..643]
 r439: [640..641]
 r440: [635..639]
 r441: [635..636]
 r442: [632..634]
 r443: [587..631]
 r444: [629..630]
 r445: [627..628]
 r446: [625..626]
 r447: [618..624]
 r448: [620..621]
 r449: [618..619]
 r450: [613..617]
 r451: [613..614]
 r452: [610..612]
 r453: [608..609]
 r454: [585..607]
 r455: [605..606]
 r456: [603..604]
 r457: [601..602]
 r458: [594..600]
 r459: [596..597]
 r460: [594..595]
 r461: [589..593]
 r462: [589..590]
 r463: [581..588]
 r464: [581..583]
 r465: [564..565]
 r466: [562..563]
 r467: [560..561]
 r468: [551..559]
 r469: [555..556]
 r470: [553..554]
 r471: [551..552]
 r472: [544..550]
 r473: [546..547]
 r474: [544..545]
 r475: [541..543]
 r476: [535..540]
 r477: [532..533]
 r478: [530..531]
 r479: [528..529]
 r480: [519..527]
 r481: [523..524]
 r482: [521..522]
 r483: [519..520]
 r484: [512..518]
 r485: [514..515]
 r486: [512..513]
 r487: [509..511]
 r488: [506..508]
 r489: [498..499]
 r490: [496..497]
 r491: [494..495]
 r492: [487..493]
 r493: [489..490]
 r494: [487..488]
 r495: [480..486]
 r496: [482..483]
 r497: [480..481]
 r498: [477..479]
 r499: [454..476]
 r500: [474..475]
 r501: [472..473]
 r502: [470..471]
 r503: [463..469]
 r504: [465..466]
 r505: [463..464]
 r506: [456..462]
 r507: [458..459]
 r508: [456..457]
 r509: [451..455]
 r510: [451..453]
 r511: [440..441]
 r512: [438..439]
 r513: [436..437]
 r514: [429..435]
 r515: [431..432]
 r516: [429..430]
 r517: [422..428]
 r518: [424..425]
 r519: [422..423]
 r520: [419..421]
 r521: [396..418]
 r522: [416..417]
 r523: [414..415]
 r524: [412..413]
 r525: [405..411]
 r526: [407..408]
 r527: [405..406]
 r528: [398..404]
 r529: [400..401]
 r530: [398..399]
 r531: [393..397]
 r532: [393..395]
 r533: [384..385]
 r534: [369..370]
 r535: [367..368]
 r536: [365..366]
 r537: [358..364]
 r538: [360..361]
 r539: [358..359]
 r540: [353..357]
 r541: [353..354]
 r542: [350..352]
 r543: [342..343]
 r544: [340..341]
 r545: [338..339]
 r546: [331..337]
 r547: [333..334]
 r548: [331..332]
 r549: [326..330]
 r550: [326..327]
 r551: [323..325]
 r552: [278..322]
 r553: [320..321]
 r554: [318..319]
 r555: [316..317]
 r556: [309..315]
 r557: [311..312]
 r558: [309..310]
 r559: [304..308]
 r560: [304..305]
 r561: [301..303]
 r562: [299..300]
 r563: [276..298]
 r564: [296..297]
 r565: [294..295]
 r566: [292..293]
 r567: [285..291]
 r568: [287..288]
 r569: [285..286]
 r570: [280..284]
 r571: [280..281]
 r572: [272..279]
 r573: [272..274]
 r574: [261..262]
 r575: [259..260]
 r576: [257..258]
 r577: [250..256]
 r578: [252..253]
 r579: [250..251]
 r580: [245..249]
 r581: [245..246]
 r582: [242..244]
 r583: [197..241]
 r584: [239..240]
 r585: [237..238]
 r586: [235..236]
 r587: [228..234]
 r588: [230..231]
 r589: [228..229]
 r590: [223..227]
 r591: [223..224]
 r592: [220..222]
 r593: [218..219]
 r594: [195..217]
 r595: [215..216]
 r596: [213..214]
 r597: [211..212]
 r598: [204..210]
 r599: [206..207]
 r600: [204..205]
 r601: [199..203]
 r602: [199..200]
 r603: [191..198]
 r604: [191..193]
 r605: [174..175]
 r606: [172..173]
 r607: [161..162]
 r608: [26..27]
 r609: [156..157]
 r610: [140..141]
 r611: [138..139]
 r612: [136..137]
 r613: [129..135]
 r614: [131..132]
 r615: [129..130]
 r616: [124..128]
 r617: [124..125]
 r618: [121..123]
 r619: [54..120]
 r620: [116..117]
 r621: [114..115]
 r622: [107..113]
 r623: [109..110]
 r624: [107..108]
 r625: [102..106]
 r626: [102..103]
 r627: [99..101]
 r628: [75..98]
 r629: [96..97]
 r630: [94..95]
 r631: [92..93]
 r632: [85..91]
 r633: [87..88]
 r634: [85..86]
 r635: [80..84]
 r636: [80..81]
 r637: [77..79]
 r638: [75..76]
 r639: [52..74]
 r640: [72..73]
 r641: [70..71]
 r642: [68..69]
 r643: [61..67]
 r644: [63..64]
 r645: [61..62]
 r646: [56..60]
 r647: [56..57]
 r648: [48..55]
 r649: [48..50]
 r650: [31..32]
 r651: [29..30]
 r652: [1747..1751]
 r654: [1730..1734]
 r656: [1715..1717]
 r657: [1713..1714]
 r662: [1689..1693]
 r663: [167..1687]
 r664: [1674..1678]
 r665: [167..1672]
 r666: [1661..1663]
 r667: [1659..1660]
 r671: [167..1649]
 r672: [1638..1642]
 r673: [24..1636]
 r674: [1623..1627]
 r675: [24..1621]
 r676: [1610..1612]
 r677: [1608..1609]
 r681: [24..1598]
 r682: [1587..1591]
 r683: [24..1585]
 r684: [1572..1576]
 r685: [24..1570]
 r686: [1559..1561]
 r687: [1557..1558]
 r691: [24..1548]
 r693: [167..168]
 r694: [1334..1533]
 r695: [1334..1335]
 r696: [1339..1529]
 r697: [1339..1340]
 r698: [1425..1501]
 r699: [1425..1426]
 r700: [1344..1420]
 r701: [1344..1345]
 r702: [568..1327]
 r703: [568..569]
 r704: [1315..1319]
 r705: [1251..1316]
 r706: [1251..1252]
 r707: [1260..1262]
 r708: [1147..1151]
 r709: [1052..1148]
 r710: [1052..1053]
 r711: [952..1047]
 r712: [952..953]
 r713: [852..947]
 r714: [852..853]
 r715: [845..849]
 r716: [573..846]
 r717: [573..574]
 r718: [816..820]
 r719: [740..817]
 r720: [740..741]
 r721: [659..735]
 r722: [659..660]
 r723: [578..654]
 r724: [578..579]
 r725: [448..501]
 r726: [448..449]
 r727: [390..443]
 r728: [390..391]
 r729: [382..383]
 r730: [178..179]
 r731: [372..376]
 r732: [183..373]
 r733: [183..184]
 r734: [269..345]
 r735: [269..270]
 r736: [188..264]
 r737: [188..189]
 r738: [159..160]
 r739: [24..25]
 r740: [35..151]
 r741: [35..36]
 r742: [40..147]
 r743: [40..41]
 r744: [45..143]
 r745: [45..46]
 r746: [1756..1757]
 r747: [1752..1753]
 r748: [1749..1750]
 r749: [1743..1744]
 r750: [1739..1740]
 r751: [1732..1733]
 r752: [1726..1727]
 r753: [1722..1723]
 r754: [1715..1716]
 r755: [1698..1699]
 r756: [1694..1695]
 r757: [1691..1692]
 r758: [1685..1686]
 r759: [1681..1682]
 r760: [1676..1677]
 r761: [1670..1671]
 r762: [1666..1667]
 r763: [1661..1662]
 r764: [1647..1648]
 r765: [1643..1644]
 r766: [1640..1641]
 r767: [1634..1635]
 r768: [1630..1631]
 r769: [1625..1626]
 r770: [1619..1620]
 r771: [1615..1616]
 r772: [1610..1611]
 r773: [1596..1597]
 r774: [1592..1593]
 r775: [1589..1590]
 r776: [1583..1584]
 r777: [1579..1580]
 r778: [1574..1575]
 r779: [1568..1569]
 r780: [1564..1565]
 r781: [1559..1560]
 r782: [1546..1547]
 r783: [1539..1540]
 r784: [1534..1535]
 r785: [1530..1531]
 r786: [1518..1519]
 r787: [1511..1512]
 r788: [1506..1507]
 r789: [1504..1505]
 r790: [1502..1503]
 r791: [1491..1492]
 r792: [1484..1485]
 r793: [1479..1480]
 r794: [1476..1477]
 r795: [1469..1470]
 r796: [1462..1463]
 r797: [1457..1458]
 r798: [1445..1446]
 r799: [1438..1439]
 r800: [1428..1429]
 r801: [1421..1422]
 r802: [1410..1411]
 r803: [1403..1404]
 r804: [1398..1399]
 r805: [1395..1396]
 r806: [1388..1389]
 r807: [1381..1382]
 r808: [1376..1377]
 r809: [1364..1365]
 r810: [1357..1358]
 r811: [1347..1348]
 r812: [1330..1331]
 r815: [1322..1323]
 r816: [1324..1325]
 r817: [1320..1321]
 r818: [1317..1318]
 r819: [1305..1306]
 r820: [1298..1299]
 r821: [1293..1294]
 r822: [1290..1291]
 r823: [1280..1281]
 r824: [1273..1274]
 r825: [1268..1269]
 r826: [1265..1266]
 r827: [1260..1261]
 r828: [1255..1256]
 r829: [1240..1241]
 r830: [1233..1234]
 r831: [1228..1229]
 r832: [1225..1226]
 r833: [1222..1223]
 r834: [10..11]
 r835: [8..9]
 r836: [6..7]
 r837: [3..5]
 r838: [2..4]
 r839: [0..1]
 r840: [1212..1213]
 r841: [1205..1206]
 r842: [1200..1201]
 r843: [1195..1196]
 r844: [1197..1198]
 r845: [1186..1187]
 r846: [1179..1180]
 r847: [1167..1168]
 r848: [1160..1161]
 r849: [1155..1156]
 r850: [1152..1153]
 r851: [1149..1150]
 r852: [1137..1138]
 r853: [1130..1131]
 r854: [1125..1126]
 r855: [1120..1121]
 r856: [1122..1123]
 r857: [1111..1112]
 r858: [1104..1105]
 r859: [1092..1093]
 r860: [1085..1086]
 r861: [1080..1081]
 r862: [1077..1078]
 r863: [1068..1069]
 r864: [1061..1062]
 r865: [1055..1057]
 r866: [1055..1056]
 r867: [1048..1049]
 r868: [1037..1038]
 r869: [1030..1031]
 r870: [1025..1026]
 r871: [1020..1021]
 r872: [1022..1023]
 r873: [1011..1012]
 r874: [1004..1005]
 r875: [992..993]
 r876: [985..986]
 r877: [980..981]
 r878: [977..978]
 r879: [968..969]
 r880: [961..962]
 r881: [955..957]
 r882: [955..956]
 r883: [948..949]
 r884: [937..938]
 r885: [930..931]
 r886: [925..926]
 r887: [920..921]
 r888: [922..923]
 r889: [911..912]
 r890: [904..905]
 r891: [892..893]
 r892: [885..886]
 r893: [880..881]
 r894: [877..878]
 r895: [868..869]
 r896: [861..862]
 r897: [855..857]
 r898: [855..856]
 r899: [847..848]
 r900: [835..836]
 r901: [828..829]
 r902: [823..824]
 r903: [821..822]
 r904: [818..819]
 r905: [806..807]
 r906: [799..800]
 r907: [794..795]
 r908: [784..785]
 r909: [777..778]
 r910: [772..773]
 r911: [760..761]
 r912: [753..754]
 r913: [743..744]
 r914: [736..737]
 r915: [725..726]
 r916: [718..719]
 r917: [713..714]
 r918: [703..704]
 r919: [696..697]
 r920: [691..692]
 r921: [679..680]
 r922: [672..673]
 r923: [662..663]
 r924: [655..656]
 r925: [644..645]
 r926: [637..638]
 r927: [632..633]
 r928: [622..623]
 r929: [615..616]
 r930: [610..611]
 r931: [598..599]
 r932: [591..592]
 r933: [581..582]
 r934: [557..558]
 r935: [548..549]
 r936: [541..542]
 r937: [538..539]
 r938: [535..536]
 r939: [22..23]
 r940: [20..21]
 r941: [18..19]
 r942: [15..17]
 r943: [14..16]
 r944: [12..13]
 r945: [525..526]
 r946: [516..517]
 r947: [509..510]
 r948: [504..505]
 r949: [506..507]
 r950: [502..503]
 r951: [491..492]
 r952: [484..485]
 r953: [477..478]
 r954: [467..468]
 r955: [460..461]
 r956: [451..452]
 r957: [444..445]
 r958: [433..434]
 r959: [426..427]
 r960: [419..420]
 r961: [409..410]
 r962: [402..403]
 r963: [393..394]
 r964: [386..387]
 r967: [377..378]
 r968: [379..380]
 r969: [374..375]
 r970: [362..363]
 r971: [355..356]
 r972: [350..351]
 r973: [348..349]
 r974: [346..347]
 r975: [335..336]
 r976: [328..329]
 r977: [323..324]
 r978: [313..314]
 r979: [306..307]
 r980: [301..302]
 r981: [289..290]
 r982: [282..283]
 r983: [272..273]
 r984: [265..266]
 r985: [254..255]
 r986: [247..248]
 r987: [242..243]
 r988: [232..233]
 r989: [225..226]
 r990: [220..221]
 r991: [208..209]
 r992: [201..202]
 r993: [191..192]
 r994: [163..164]
 r995: [154..155]
 r996: [152..153]
 r997: [148..149]
 r998: [144..145]
 r999: [133..134]
 r1000: [126..127]
 r1001: [121..122]
 r1002: [118..119]
 r1003: [111..112]
 r1004: [104..105]
 r1005: [99..100]
 r1006: [89..90]
 r1007: [82..83]
 r1008: [77..78]
 r1009: [65..66]
 r1010: [58..59]
 r1011: [48..49]
 r1012: [1746..1748]
 r1013: [1735..1736]
 r1014: [1729..1731]
 r1015: [1718..1719]
 r1016: [1707..1708]
 r1017: [1700..1704]
 r1018: [1701..1702]
 r1019: [1688..1690]
 r1020: [1679..1680]
 r1021: [1673..1675]
 r1022: [1664..1665]
 r1023: [1654..1655]
 r1024: [1650..1651]
 r1025: [1637..1639]
 r1026: [1628..1629]
 r1027: [1622..1624]
 r1028: [1613..1614]
 r1029: [1603..1604]
 r1030: [1599..1600]
 r1031: [1586..1588]
 r1032: [1577..1578]
 r1033: [1571..1573]
 r1034: [1562..1563]
 r1035: [1553..1554]
 r1036: [1549..1550]
 r1037: [1544..1545]
 r1040: [1521..1522]
 r1042: [1431..1433]
 r1043: [1350..1352]
 r1044: [746..748]
 r1045: [665..667]
 r1046: [584..586]
 r1047: [275..277]
 r1048: [194..196]
 r1049: [51..53]
 r1050: [1703..1720]
 r1051: [1721..1728]
 r1052: [1709..1737]
 r1053: [1738..1745]
Compressing live ranges: from 1759 to 1388 - 78%
Ranges after the compression:
 r87: [1384..1385]
 r88: [1374..1375]
 r89: [1362..1363]
 r90: [1352..1353]
 r91: [1352..1387]
 r93: [1348..1349]
 r94: [1340..1341]
 r95: [1330..1331]
 r96: [1318..1319]
 r97: [1308..1309]
 r98: [1308..1387]
 r100: [1304..1305]
 r101: [1298..1299]
 r102: [1288..1289]
 r103: [1276..1277]
 r104: [1266..1267]
 r105: [1266..1387]
 r107: [1262..1263]
 r108: [1256..1257]
 r109: [1246..1247]
 r110: [1234..1235]
 r111: [1224..1225]
 r114: [1220..1221]
 r115: [130..131]
 r116: [1212..1213]
 r117: [1208..1209]
 r118: [1202..1203]
 r119: [1200..1201]
 r120: [1198..1199]
 r121: [1192..1197]
 r122: [1194..1195]
 r123: [1192..1193]
 r124: [1188..1191]
 r125: [1188..1189]
 r126: [1186..1187]
 r127: [1180..1181]
 r128: [1178..1179]
 r129: [1176..1177]
 r130: [1170..1175]
 r131: [1172..1173]
 r132: [1170..1171]
 r133: [1166..1169]
 r134: [1166..1167]
 r135: [1164..1165]
 r136: [1126..1163]
 r137: [1160..1161]
 r138: [1158..1159]
 r139: [1152..1157]
 r140: [1154..1155]
 r141: [1152..1153]
 r142: [1148..1151]
 r143: [1148..1149]
 r144: [1146..1147]
 r145: [1144..1145]
 r146: [1124..1143]
 r147: [1142..1143]
 r148: [1140..1141]
 r149: [1138..1139]
 r150: [1132..1137]
 r151: [1134..1135]
 r152: [1132..1133]
 r153: [1128..1131]
 r154: [1128..1129]
 r155: [1122..1127]
 r156: [1122..1123]
 r157: [1116..1117]
 r158: [1114..1115]
 r159: [1112..1113]
 r160: [1106..1111]
 r161: [1108..1109]
 r162: [1106..1107]
 r163: [1102..1105]
 r164: [1102..1103]
 r165: [1100..1101]
 r166: [1062..1099]
 r167: [1096..1097]
 r168: [1094..1095]
 r169: [1088..1093]
 r170: [1090..1091]
 r171: [1088..1089]
 r172: [1084..1087]
 r173: [1084..1085]
 r174: [1082..1083]
 r175: [1080..1081]
 r176: [1060..1079]
 r177: [1078..1079]
 r178: [1076..1077]
 r179: [1074..1075]
 r180: [1068..1073]
 r181: [1070..1071]
 r182: [1068..1069]
 r183: [1064..1067]
 r184: [1064..1065]
 r185: [1058..1063]
 r186: [1058..1059]
 r187: [1048..1049]
 r188: [1036..1037]
 r189: [1034..1035]
 r190: [1032..1033]
 r191: [1026..1031]
 r192: [1028..1029]
 r193: [1026..1027]
 r194: [1022..1025]
 r195: [1022..1023]
 r196: [1020..1021]
 r197: [1018..1019]
 r198: [996..1017]
 r199: [1016..1017]
 r200: [1014..1015]
 r201: [1012..1013]
 r202: [1006..1011]
 r203: [1008..1009]
 r204: [1006..1007]
 r205: [1002..1005]
 r206: [1002..1003]
 r207: [1000..1001]
 r208: [998..999]
 r209: [996..997]
 r210: [988..989]
 r211: [986..987]
 r212: [984..985]
 r213: [978..983]
 r214: [980..981]
 r215: [978..979]
 r216: [974..977]
 r217: [974..975]
 r218: [972..973]
 r219: [968..971]
 r220: [966..967]
 r221: [964..965]
 r222: [962..963]
 r223: [956..961]
 r224: [958..959]
 r225: [956..957]
 r226: [952..955]
 r227: [952..953]
 r228: [950..951]
 r229: [948..949]
 r230: [944..945]
 r231: [942..943]
 r232: [940..941]
 r233: [934..939]
 r234: [936..937]
 r235: [934..935]
 r236: [930..933]
 r237: [930..931]
 r238: [912..929]
 r239: [928..929]
 r240: [926..927]
 r241: [924..925]
 r242: [918..923]
 r243: [920..921]
 r244: [918..919]
 r245: [914..917]
 r246: [914..915]
 r247: [910..913]
 r248: [910..911]
 r249: [904..905]
 r250: [902..903]
 r251: [900..901]
 r252: [894..899]
 r253: [896..897]
 r254: [894..895]
 r255: [890..893]
 r256: [890..891]
 r257: [888..889]
 r258: [886..887]
 r259: [882..883]
 r260: [880..881]
 r261: [878..879]
 r262: [872..877]
 r263: [874..875]
 r264: [872..873]
 r265: [868..871]
 r266: [868..869]
 r267: [850..867]
 r268: [866..867]
 r269: [864..865]
 r270: [862..863]
 r271: [856..861]
 r272: [858..859]
 r273: [856..857]
 r274: [852..855]
 r275: [852..853]
 r276: [848..851]
 r277: [848..849]
 r278: [846..847]
 r279: [844..845]
 r280: [842..843]
 r281: [836..841]
 r282: [838..839]
 r283: [836..837]
 r284: [832..835]
 r285: [832..833]
 r286: [830..831]
 r287: [824..825]
 r288: [822..823]
 r289: [820..821]
 r290: [814..819]
 r291: [816..817]
 r292: [814..815]
 r293: [810..813]
 r294: [810..811]
 r295: [808..809]
 r296: [806..807]
 r297: [802..803]
 r298: [800..801]
 r299: [798..799]
 r300: [792..797]
 r301: [794..795]
 r302: [792..793]
 r303: [788..791]
 r304: [788..789]
 r305: [770..787]
 r306: [786..787]
 r307: [784..785]
 r308: [782..783]
 r309: [776..781]
 r310: [778..779]
 r311: [776..777]
 r312: [772..775]
 r313: [772..773]
 r314: [768..771]
 r315: [768..769]
 r316: [766..767]
 r317: [764..765]
 r318: [762..763]
 r319: [756..761]
 r320: [758..759]
 r321: [756..757]
 r322: [752..755]
 r323: [752..753]
 r324: [750..751]
 r325: [744..745]
 r326: [742..743]
 r327: [740..741]
 r328: [734..739]
 r329: [736..737]
 r330: [734..735]
 r331: [730..733]
 r332: [730..731]
 r333: [728..729]
 r334: [726..727]
 r335: [722..723]
 r336: [720..721]
 r337: [718..719]
 r338: [712..717]
 r339: [714..715]
 r340: [712..713]
 r341: [708..711]
 r342: [708..709]
 r343: [690..707]
 r344: [706..707]
 r345: [704..705]
 r346: [702..703]
 r347: [696..701]
 r348: [698..699]
 r349: [696..697]
 r350: [692..695]
 r351: [692..693]
 r352: [688..691]
 r353: [688..689]
 r354: [686..687]
 r355: [684..685]
 r356: [682..683]
 r357: [676..681]
 r358: [678..679]
 r359: [676..677]
 r360: [672..675]
 r361: [672..673]
 r362: [670..671]
 r363: [662..663]
 r364: [660..661]
 r365: [658..659]
 r366: [652..657]
 r367: [654..655]
 r368: [652..653]
 r369: [648..651]
 r370: [648..649]
 r371: [646..647]
 r372: [638..639]
 r373: [636..637]
 r374: [634..635]
 r375: [628..633]
 r376: [630..631]
 r377: [628..629]
 r378: [624..627]
 r379: [624..625]
 r380: [622..623]
 r381: [584..621]
 r382: [620..621]
 r383: [618..619]
 r384: [616..617]
 r385: [610..615]
 r386: [612..613]
 r387: [610..611]
 r388: [606..609]
 r389: [606..607]
 r390: [604..605]
 r391: [602..603]
 r392: [582..601]
 r393: [600..601]
 r394: [598..599]
 r395: [596..597]
 r396: [590..595]
 r397: [592..593]
 r398: [590..591]
 r399: [586..589]
 r400: [586..587]
 r401: [580..585]
 r402: [580..581]
 r403: [574..575]
 r404: [572..573]
 r405: [570..571]
 r406: [564..569]
 r407: [566..567]
 r408: [564..565]
 r409: [560..563]
 r410: [560..561]
 r411: [558..559]
 r412: [520..557]
 r413: [556..557]
 r414: [554..555]
 r415: [552..553]
 r416: [546..551]
 r417: [548..549]
 r418: [546..547]
 r419: [542..545]
 r420: [542..543]
 r421: [540..541]
 r422: [538..539]
 r423: [518..537]
 r424: [536..537]
 r425: [534..535]
 r426: [532..533]
 r427: [526..531]
 r428: [528..529]
 r429: [526..527]
 r430: [522..525]
 r431: [522..523]
 r432: [516..521]
 r433: [516..517]
 r434: [510..511]
 r435: [508..509]
 r436: [506..507]
 r437: [500..505]
 r438: [502..503]
 r439: [500..501]
 r440: [496..499]
 r441: [496..497]
 r442: [494..495]
 r443: [456..493]
 r444: [492..493]
 r445: [490..491]
 r446: [488..489]
 r447: [482..487]
 r448: [484..485]
 r449: [482..483]
 r450: [478..481]
 r451: [478..479]
 r452: [476..477]
 r453: [474..475]
 r454: [454..473]
 r455: [472..473]
 r456: [470..471]
 r457: [468..469]
 r458: [462..467]
 r459: [464..465]
 r460: [462..463]
 r461: [458..461]
 r462: [458..459]
 r463: [452..457]
 r464: [452..453]
 r465: [444..445]
 r466: [442..443]
 r467: [440..441]
 r468: [432..439]
 r469: [436..437]
 r470: [434..435]
 r471: [432..433]
 r472: [426..431]
 r473: [428..429]
 r474: [426..427]
 r475: [424..425]
 r476: [420..423]
 r477: [418..419]
 r478: [416..417]
 r479: [414..415]
 r480: [406..413]
 r481: [410..411]
 r482: [408..409]
 r483: [406..407]
 r484: [400..405]
 r485: [402..403]
 r486: [400..401]
 r487: [398..399]
 r488: [396..397]
 r489: [390..391]
 r490: [388..389]
 r491: [386..387]
 r492: [380..385]
 r493: [382..383]
 r494: [380..381]
 r495: [374..379]
 r496: [376..377]
 r497: [374..375]
 r498: [372..373]
 r499: [352..371]
 r500: [370..371]
 r501: [368..369]
 r502: [366..367]
 r503: [360..365]
 r504: [362..363]
 r505: [360..361]
 r506: [354..359]
 r507: [356..357]
 r508: [354..355]
 r509: [350..353]
 r510: [350..351]
 r511: [344..345]
 r512: [342..343]
 r513: [340..341]
 r514: [334..339]
 r515: [336..337]
 r516: [334..335]
 r517: [328..333]
 r518: [330..331]
 r519: [328..329]
 r520: [326..327]
 r521: [306..325]
 r522: [324..325]
 r523: [322..323]
 r524: [320..321]
 r525: [314..319]
 r526: [316..317]
 r527: [314..315]
 r528: [308..313]
 r529: [310..311]
 r530: [308..309]
 r531: [304..307]
 r532: [304..305]
 r533: [298..299]
 r534: [286..287]
 r535: [284..285]
 r536: [282..283]
 r537: [276..281]
 r538: [278..279]
 r539: [276..277]
 r540: [272..275]
 r541: [272..273]
 r542: [270..271]
 r543: [264..265]
 r544: [262..263]
 r545: [260..261]
 r546: [254..259]
 r547: [256..257]
 r548: [254..255]
 r549: [250..253]
 r550: [250..251]
 r551: [248..249]
 r552: [210..247]
 r553: [246..247]
 r554: [244..245]
 r555: [242..243]
 r556: [236..241]
 r557: [238..239]
 r558: [236..237]
 r559: [232..235]
 r560: [232..233]
 r561: [230..231]
 r562: [228..229]
 r563: [208..227]
 r564: [226..227]
 r565: [224..225]
 r566: [222..223]
 r567: [216..221]
 r568: [218..219]
 r569: [216..217]
 r570: [212..215]
 r571: [212..213]
 r572: [206..211]
 r573: [206..207]
 r574: [200..201]
 r575: [198..199]
 r576: [196..197]
 r577: [190..195]
 r578: [192..193]
 r579: [190..191]
 r580: [186..189]
 r581: [186..187]
 r582: [184..185]
 r583: [146..183]
 r584: [182..183]
 r585: [180..181]
 r586: [178..179]
 r587: [172..177]
 r588: [174..175]
 r589: [172..173]
 r590: [168..171]
 r591: [168..169]
 r592: [166..167]
 r593: [164..165]
 r594: [144..163]
 r595: [162..163]
 r596: [160..161]
 r597: [158..159]
 r598: [152..157]
 r599: [154..155]
 r600: [152..153]
 r601: [148..151]
 r602: [148..149]
 r603: [142..147]
 r604: [142..143]
 r605: [134..135]
 r606: [132..133]
 r607: [124..125]
 r608: [22..23]
 r609: [120..121]
 r610: [110..111]
 r611: [108..109]
 r612: [106..107]
 r613: [100..105]
 r614: [102..103]
 r615: [100..101]
 r616: [96..99]
 r617: [96..97]
 r618: [94..95]
 r619: [38..93]
 r620: [90..91]
 r621: [88..89]
 r622: [82..87]
 r623: [84..85]
 r624: [82..83]
 r625: [78..81]
 r626: [78..79]
 r627: [76..77]
 r628: [56..75]
 r629: [74..75]
 r630: [72..73]
 r631: [70..71]
 r632: [64..69]
 r633: [66..67]
 r634: [64..65]
 r635: [60..63]
 r636: [60..61]
 r637: [58..59]
 r638: [56..57]
 r639: [36..55]
 r640: [54..55]
 r641: [52..53]
 r642: [50..51]
 r643: [44..49]
 r644: [46..47]
 r645: [44..45]
 r646: [40..43]
 r647: [40..41]
 r648: [34..39]
 r649: [34..35]
 r650: [26..27]
 r651: [24..25]
 r652: [1378..1381]
 r654: [1366..1369]
 r656: [1356..1357]
 r657: [1354..1355]
 r662: [1334..1337]
 r663: [128..1333]
 r664: [1322..1325]
 r665: [128..1321]
 r666: [1312..1313]
 r667: [1310..1311]
 r671: [128..1301]
 r672: [1292..1295]
 r673: [20..1291]
 r674: [1280..1283]
 r675: [20..1279]
 r676: [1270..1271]
 r677: [1268..1269]
 r681: [20..1259]
 r682: [1250..1253]
 r683: [20..1249]
 r684: [1238..1241]
 r685: [20..1237]
 r686: [1228..1229]
 r687: [1226..1227]
 r691: [20..1217]
 r693: [128..129]
 r694: [1052..1205]
 r695: [1052..1053]
 r696: [1054..1203]
 r697: [1054..1055]
 r698: [1120..1181]
 r699: [1120..1121]
 r700: [1056..1117]
 r701: [1056..1057]
 r702: [446..1047]
 r703: [446..447]
 r704: [1038..1041]
 r705: [990..1039]
 r706: [990..991]
 r707: [994..995]
 r708: [906..909]
 r709: [828..907]
 r710: [828..829]
 r711: [748..825]
 r712: [748..749]
 r713: [668..745]
 r714: [668..669]
 r715: [664..667]
 r716: [448..665]
 r717: [448..449]
 r718: [640..643]
 r719: [578..641]
 r720: [578..579]
 r721: [514..575]
 r722: [514..515]
 r723: [450..511]
 r724: [450..451]
 r725: [348..391]
 r726: [348..349]
 r727: [302..345]
 r728: [302..303]
 r729: [296..297]
 r730: [136..137]
 r731: [288..291]
 r732: [138..289]
 r733: [138..139]
 r734: [204..265]
 r735: [204..205]
 r736: [140..201]
 r737: [140..141]
 r738: [122..123]
 r739: [20..21]
 r740: [28..115]
 r741: [28..29]
 r742: [30..113]
 r743: [30..31]
 r744: [32..111]
 r745: [32..33]
 r746: [1386..1387]
 r747: [1382..1383]
 r748: [1380..1381]
 r749: [1376..1377]
 r750: [1372..1373]
 r751: [1368..1369]
 r752: [1364..1365]
 r753: [1360..1361]
 r754: [1356..1357]
 r755: [1342..1343]
 r756: [1338..1339]
 r757: [1336..1337]
 r758: [1332..1333]
 r759: [1328..1329]
 r760: [1324..1325]
 r761: [1320..1321]
 r762: [1316..1317]
 r763: [1312..1313]
 r764: [1300..1301]
 r765: [1296..1297]
 r766: [1294..1295]
 r767: [1290..1291]
 r768: [1286..1287]
 r769: [1282..1283]
 r770: [1278..1279]
 r771: [1274..1275]
 r772: [1270..1271]
 r773: [1258..1259]
 r774: [1254..1255]
 r775: [1252..1253]
 r776: [1248..1249]
 r777: [1244..1245]
 r778: [1240..1241]
 r779: [1236..1237]
 r780: [1232..1233]
 r781: [1228..1229]
 r782: [1216..1217]
 r783: [1210..1211]
 r784: [1206..1207]
 r785: [1204..1205]
 r786: [1196..1197]
 r787: [1190..1191]
 r788: [1186..1187]
 r789: [1184..1185]
 r790: [1182..1183]
 r791: [1174..1175]
 r792: [1168..1169]
 r793: [1164..1165]
 r794: [1162..1163]
 r795: [1156..1157]
 r796: [1150..1151]
 r797: [1146..1147]
 r798: [1136..1137]
 r799: [1130..1131]
 r800: [1122..1123]
 r801: [1118..1119]
 r802: [1110..1111]
 r803: [1104..1105]
 r804: [1100..1101]
 r805: [1098..1099]
 r806: [1092..1093]
 r807: [1086..1087]
 r808: [1082..1083]
 r809: [1072..1073]
 r810: [1066..1067]
 r811: [1058..1059]
 r812: [1050..1051]
 r815: [1044..1045]
 r816: [1046..1047]
 r817: [1042..1043]
 r818: [1040..1041]
 r819: [1030..1031]
 r820: [1024..1025]
 r821: [1020..1021]
 r822: [1018..1019]
 r823: [1010..1011]
 r824: [1004..1005]
 r825: [1000..1001]
 r826: [998..999]
 r827: [994..995]
 r828: [992..993]
 r829: [982..983]
 r830: [976..977]
 r831: [972..973]
 r832: [970..971]
 r833: [968..969]
 r834: [8..9]
 r835: [6..7]
 r836: [4..5]
 r837: [2..3]
 r838: [2..3]
 r839: [0..1]
 r840: [960..961]
 r841: [954..955]
 r842: [950..951]
 r843: [946..947]
 r844: [948..949]
 r845: [938..939]
 r846: [932..933]
 r847: [922..923]
 r848: [916..917]
 r849: [912..913]
 r850: [910..911]
 r851: [908..909]
 r852: [898..899]
 r853: [892..893]
 r854: [888..889]
 r855: [884..885]
 r856: [886..887]
 r857: [876..877]
 r858: [870..871]
 r859: [860..861]
 r860: [854..855]
 r861: [850..851]
 r862: [848..849]
 r863: [840..841]
 r864: [834..835]
 r865: [830..831]
 r866: [830..831]
 r867: [826..827]
 r868: [818..819]
 r869: [812..813]
 r870: [808..809]
 r871: [804..805]
 r872: [806..807]
 r873: [796..797]
 r874: [790..791]
 r875: [780..781]
 r876: [774..775]
 r877: [770..771]
 r878: [768..769]
 r879: [760..761]
 r880: [754..755]
 r881: [750..751]
 r882: [750..751]
 r883: [746..747]
 r884: [738..739]
 r885: [732..733]
 r886: [728..729]
 r887: [724..725]
 r888: [726..727]
 r889: [716..717]
 r890: [710..711]
 r891: [700..701]
 r892: [694..695]
 r893: [690..691]
 r894: [688..689]
 r895: [680..681]
 r896: [674..675]
 r897: [670..671]
 r898: [670..671]
 r899: [666..667]
 r900: [656..657]
 r901: [650..651]
 r902: [646..647]
 r903: [644..645]
 r904: [642..643]
 r905: [632..633]
 r906: [626..627]
 r907: [622..623]
 r908: [614..615]
 r909: [608..609]
 r910: [604..605]
 r911: [594..595]
 r912: [588..589]
 r913: [580..581]
 r914: [576..577]
 r915: [568..569]
 r916: [562..563]
 r917: [558..559]
 r918: [550..551]
 r919: [544..545]
 r920: [540..541]
 r921: [530..531]
 r922: [524..525]
 r923: [516..517]
 r924: [512..513]
 r925: [504..505]
 r926: [498..499]
 r927: [494..495]
 r928: [486..487]
 r929: [480..481]
 r930: [476..477]
 r931: [466..467]
 r932: [460..461]
 r933: [452..453]
 r934: [438..439]
 r935: [430..431]
 r936: [424..425]
 r937: [422..423]
 r938: [420..421]
 r939: [18..19]
 r940: [16..17]
 r941: [14..15]
 r942: [12..13]
 r943: [12..13]
 r944: [10..11]
 r945: [412..413]
 r946: [404..405]
 r947: [398..399]
 r948: [394..395]
 r949: [396..397]
 r950: [392..393]
 r951: [384..385]
 r952: [378..379]
 r953: [372..373]
 r954: [364..365]
 r955: [358..359]
 r956: [350..351]
 r957: [346..347]
 r958: [338..339]
 r959: [332..333]
 r960: [326..327]
 r961: [318..319]
 r962: [312..313]
 r963: [304..305]
 r964: [300..301]
 r967: [292..293]
 r968: [294..295]
 r969: [290..291]
 r970: [280..281]
 r971: [274..275]
 r972: [270..271]
 r973: [268..269]
 r974: [266..267]
 r975: [258..259]
 r976: [252..253]
 r977: [248..249]
 r978: [240..241]
 r979: [234..235]
 r980: [230..231]
 r981: [220..221]
 r982: [214..215]
 r983: [206..207]
 r984: [202..203]
 r985: [194..195]
 r986: [188..189]
 r987: [184..185]
 r988: [176..177]
 r989: [170..171]
 r990: [166..167]
 r991: [156..157]
 r992: [150..151]
 r993: [142..143]
 r994: [126..127]
 r995: [118..119]
 r996: [116..117]
 r997: [114..115]
 r998: [112..113]
 r999: [104..105]
 r1000: [98..99]
 r1001: [94..95]
 r1002: [92..93]
 r1003: [86..87]
 r1004: [80..81]
 r1005: [76..77]
 r1006: [68..69]
 r1007: [62..63]
 r1008: [58..59]
 r1009: [48..49]
 r1010: [42..43]
 r1011: [34..35]
 r1012: [1378..1379]
 r1013: [1370..1371]
 r1014: [1366..1367]
 r1015: [1358..1359]
 r1016: [1350..1351]
 r1017: [1344..1347]
 r1018: [1344..1345]
 r1019: [1334..1335]
 r1020: [1326..1327]
 r1021: [1322..1323]
 r1022: [1314..1315]
 r1023: [1306..1307]
 r1024: [1302..1303]
 r1025: [1292..1293]
 r1026: [1284..1285]
 r1027: [1280..1281]
 r1028: [1272..1273]
 r1029: [1264..1265]
 r1030: [1260..1261]
 r1031: [1250..1251]
 r1032: [1242..1243]
 r1033: [1238..1239]
 r1034: [1230..1231]
 r1035: [1222..1223]
 r1036: [1218..1219]
 r1037: [1214..1215]
 r1040: [1198..1199]
 r1042: [1124..1125]
 r1043: [1060..1061]
 r1044: [582..583]
 r1045: [518..519]
 r1046: [454..455]
 r1047: [208..209]
 r1048: [144..145]
 r1049: [36..37]
 r1050: [1346..1359]
 r1051: [1360..1365]
 r1052: [1352..1371]
 r1053: [1372..1377]

********** Assignment #3: **********


********** Local #5: **********

	   Spilling non-eliminable hard regs: 6
	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=800, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 20 to 7 (offset=736, prev_offset=0)
Can eliminate 20 to 6 (offset=-48, prev_offset=-48)
changing reg in insn 12
changing reg in insn 13
changing reg in insn 20
changing reg in insn 21
changing reg in insn 28
changing reg in insn 29
changing reg in insn 36
changing reg in insn 37
changing reg in insn 38
changing reg in insn 37
changing reg in insn 45
changing reg in insn 46
changing reg in insn 53
changing reg in insn 54
changing reg in insn 61
changing reg in insn 62
changing reg in insn 69
changing reg in insn 70
changing reg in insn 71
changing reg in insn 70
changing reg in insn 78
changing reg in insn 79
changing reg in insn 86
changing reg in insn 87
changing reg in insn 94
changing reg in insn 95
changing reg in insn 102
changing reg in insn 103
changing reg in insn 104
changing reg in insn 103
changing reg in insn 111
changing reg in insn 112
changing reg in insn 119
changing reg in insn 120
changing reg in insn 127
changing reg in insn 128
changing reg in insn 135
changing reg in insn 136
changing reg in insn 147
changing reg in insn 148
changing reg in insn 153
changing reg in insn 154
changing reg in insn 156
changing reg in insn 157
changing reg in insn 178
changing reg in insn 179
changing reg in insn 179
changing reg in insn 180
changing reg in insn 181
changing reg in insn 181
changing reg in insn 185
changing reg in insn 183
changing reg in insn 184
changing reg in insn 185
changing reg in insn 185
changing reg in insn 188
changing reg in insn 187
changing reg in insn 188
changing reg in insn 188
changing reg in insn 190
changing reg in insn 201
changing reg in insn 202
changing reg in insn 202
changing reg in insn 203
changing reg in insn 204
changing reg in insn 204
changing reg in insn 208
changing reg in insn 206
changing reg in insn 207
changing reg in insn 208
changing reg in insn 208
changing reg in insn 211
changing reg in insn 210
changing reg in insn 211
changing reg in insn 211
changing reg in insn 213
changing reg in insn 213
changing reg in insn 215
changing reg in insn 216
changing reg in insn 217
changing reg in insn 217
changing reg in insn 221
changing reg in insn 219
changing reg in insn 220
changing reg in insn 221
changing reg in insn 221
changing reg in insn 224
changing reg in insn 223
changing reg in insn 224
changing reg in insn 224
changing reg in insn 226
changing reg in insn 226
changing reg in insn 227
changing reg in insn 227
changing reg in insn 239
changing reg in insn 228
changing reg in insn 229
changing reg in insn 229
changing reg in insn 230
changing reg in insn 231
changing reg in insn 231
changing reg in insn 235
changing reg in insn 233
changing reg in insn 234
changing reg in insn 235
changing reg in insn 235
changing reg in insn 238
changing reg in insn 237
changing reg in insn 238
changing reg in insn 238
changing reg in insn 241
changing reg in insn 241
changing reg in insn 257
changing reg in insn 258
changing reg in insn 258
changing reg in insn 259
changing reg in insn 260
changing reg in insn 260
changing reg in insn 264
changing reg in insn 262
changing reg in insn 263
changing reg in insn 264
changing reg in insn 264
changing reg in insn 267
changing reg in insn 266
changing reg in insn 267
changing reg in insn 267
changing reg in insn 269
changing reg in insn 269
changing reg in insn 271
changing reg in insn 272
changing reg in insn 273
changing reg in insn 273
changing reg in insn 277
changing reg in insn 275
changing reg in insn 276
changing reg in insn 277
changing reg in insn 277
changing reg in insn 280
changing reg in insn 279
changing reg in insn 280
changing reg in insn 280
changing reg in insn 282
changing reg in insn 282
changing reg in insn 283
changing reg in insn 283
changing reg in insn 295
changing reg in insn 284
changing reg in insn 285
changing reg in insn 285
changing reg in insn 286
changing reg in insn 287
changing reg in insn 287
changing reg in insn 291
changing reg in insn 289
changing reg in insn 290
changing reg in insn 291
changing reg in insn 291
changing reg in insn 294
changing reg in insn 293
changing reg in insn 294
changing reg in insn 294
changing reg in insn 297
changing reg in insn 297
changing reg in insn 317
changing reg in insn 318
changing reg in insn 344
changing reg in insn 345
changing reg in insn 345
changing reg in insn 346
changing reg in insn 347
changing reg in insn 347
changing reg in insn 351
changing reg in insn 349
changing reg in insn 350
changing reg in insn 351
changing reg in insn 351
changing reg in insn 354
changing reg in insn 353
changing reg in insn 354
changing reg in insn 354
changing reg in insn 356
changing reg in insn 356
changing reg in insn 358
changing reg in insn 358
changing reg in insn 358
changing reg in insn 374
changing reg in insn 359
changing reg in insn 360
changing reg in insn 360
changing reg in insn 361
changing reg in insn 362
changing reg in insn 362
changing reg in insn 366
changing reg in insn 364
changing reg in insn 365
changing reg in insn 366
changing reg in insn 366
changing reg in insn 369
changing reg in insn 368
changing reg in insn 369
changing reg in insn 369
changing reg in insn 371
changing reg in insn 371
changing reg in insn 373
changing reg in insn 373
changing reg in insn 373
changing reg in insn 374
changing reg in insn 389
changing reg in insn 390
changing reg in insn 390
changing reg in insn 391
changing reg in insn 392
changing reg in insn 392
changing reg in insn 396
changing reg in insn 394
changing reg in insn 395
changing reg in insn 396
changing reg in insn 396
changing reg in insn 399
changing reg in insn 398
changing reg in insn 399
changing reg in insn 399
changing reg in insn 401
changing reg in insn 401
changing reg in insn 406
changing reg in insn 403
changing reg in insn 440
changing reg in insn 441
changing reg in insn 441
changing reg in insn 442
changing reg in insn 443
changing reg in insn 443
changing reg in insn 447
changing reg in insn 445
changing reg in insn 446
changing reg in insn 447
changing reg in insn 447
changing reg in insn 450
changing reg in insn 449
changing reg in insn 450
changing reg in insn 450
changing reg in insn 452
changing reg in insn 452
changing reg in insn 454
changing reg in insn 456
changing reg in insn 457
changing reg in insn 457
changing reg in insn 458
changing reg in insn 459
changing reg in insn 459
changing reg in insn 463
changing reg in insn 461
changing reg in insn 462
changing reg in insn 463
changing reg in insn 463
changing reg in insn 466
changing reg in insn 465
changing reg in insn 466
changing reg in insn 466
changing reg in insn 479
changing reg in insn 467
changing reg in insn 468
changing reg in insn 468
changing reg in insn 469
changing reg in insn 470
changing reg in insn 470
changing reg in insn 474
changing reg in insn 472
changing reg in insn 473
changing reg in insn 474
changing reg in insn 474
changing reg in insn 477
changing reg in insn 476
changing reg in insn 477
changing reg in insn 477
changing reg in insn 481
changing reg in insn 479
changing reg in insn 481
changing reg in insn 492
changing reg in insn 493
changing reg in insn 493
changing reg in insn 494
changing reg in insn 495
changing reg in insn 495
changing reg in insn 499
changing reg in insn 497
changing reg in insn 498
changing reg in insn 499
changing reg in insn 499
changing reg in insn 502
changing reg in insn 501
changing reg in insn 502
changing reg in insn 502
changing reg in insn 504
changing reg in insn 504
changing reg in insn 508
changing reg in insn 509
changing reg in insn 509
changing reg in insn 510
changing reg in insn 511
changing reg in insn 511
changing reg in insn 515
changing reg in insn 513
changing reg in insn 514
changing reg in insn 515
changing reg in insn 515
changing reg in insn 518
changing reg in insn 517
changing reg in insn 518
changing reg in insn 518
changing reg in insn 531
changing reg in insn 519
changing reg in insn 520
changing reg in insn 520
changing reg in insn 521
changing reg in insn 522
changing reg in insn 522
changing reg in insn 526
changing reg in insn 524
changing reg in insn 525
changing reg in insn 526
changing reg in insn 526
changing reg in insn 529
changing reg in insn 528
changing reg in insn 529
changing reg in insn 529
changing reg in insn 533
changing reg in insn 531
changing reg in insn 533
changing reg in insn 534
changing reg in insn 535
changing reg in insn 535
changing reg in insn 536
changing reg in insn 537
changing reg in insn 537
changing reg in insn 541
changing reg in insn 539
changing reg in insn 540
changing reg in insn 541
changing reg in insn 541
changing reg in insn 544
changing reg in insn 543
changing reg in insn 544
changing reg in insn 544
changing reg in insn 547
changing reg in insn 563
changing reg in insn 564
changing reg in insn 564
changing reg in insn 565
changing reg in insn 566
changing reg in insn 566
changing reg in insn 570
changing reg in insn 568
changing reg in insn 569
changing reg in insn 570
changing reg in insn 570
changing reg in insn 573
changing reg in insn 572
changing reg in insn 573
changing reg in insn 573
changing reg in insn 575
changing reg in insn 575
changing reg in insn 579
changing reg in insn 580
changing reg in insn 580
changing reg in insn 581
changing reg in insn 582
changing reg in insn 582
changing reg in insn 586
changing reg in insn 584
changing reg in insn 585
changing reg in insn 586
changing reg in insn 586
changing reg in insn 589
changing reg in insn 588
changing reg in insn 589
changing reg in insn 589
changing reg in insn 602
changing reg in insn 590
changing reg in insn 591
changing reg in insn 591
changing reg in insn 592
changing reg in insn 593
changing reg in insn 593
changing reg in insn 597
changing reg in insn 595
changing reg in insn 596
changing reg in insn 597
changing reg in insn 597
changing reg in insn 600
changing reg in insn 599
changing reg in insn 600
changing reg in insn 600
changing reg in insn 604
changing reg in insn 602
changing reg in insn 604
changing reg in insn 605
changing reg in insn 606
changing reg in insn 606
changing reg in insn 607
changing reg in insn 608
changing reg in insn 608
changing reg in insn 612
changing reg in insn 610
changing reg in insn 611
changing reg in insn 612
changing reg in insn 612
changing reg in insn 615
changing reg in insn 614
changing reg in insn 615
changing reg in insn 615
changing reg in insn 618
changing reg in insn 634
changing reg in insn 635
changing reg in insn 635
changing reg in insn 636
changing reg in insn 637
changing reg in insn 637
changing reg in insn 641
changing reg in insn 639
changing reg in insn 640
changing reg in insn 641
changing reg in insn 641
changing reg in insn 644
changing reg in insn 643
changing reg in insn 644
changing reg in insn 644
changing reg in insn 646
changing reg in insn 646
changing reg in insn 650
changing reg in insn 651
changing reg in insn 651
changing reg in insn 652
changing reg in insn 653
changing reg in insn 653
changing reg in insn 657
changing reg in insn 655
changing reg in insn 656
changing reg in insn 657
changing reg in insn 657
changing reg in insn 660
changing reg in insn 659
changing reg in insn 660
changing reg in insn 660
changing reg in insn 673
changing reg in insn 661
changing reg in insn 662
changing reg in insn 662
changing reg in insn 663
changing reg in insn 664
changing reg in insn 664
changing reg in insn 668
changing reg in insn 666
changing reg in insn 667
changing reg in insn 668
changing reg in insn 668
changing reg in insn 671
changing reg in insn 670
changing reg in insn 671
changing reg in insn 671
changing reg in insn 675
changing reg in insn 673
changing reg in insn 675
changing reg in insn 676
changing reg in insn 677
changing reg in insn 677
changing reg in insn 678
changing reg in insn 679
changing reg in insn 679
changing reg in insn 683
changing reg in insn 681
changing reg in insn 682
changing reg in insn 683
changing reg in insn 683
changing reg in insn 686
changing reg in insn 685
changing reg in insn 686
changing reg in insn 686
changing reg in insn 689
changing reg in insn 706
changing reg in insn 707
changing reg in insn 707
changing reg in insn 708
changing reg in insn 709
changing reg in insn 709
changing reg in insn 713
changing reg in insn 711
changing reg in insn 712
changing reg in insn 713
changing reg in insn 713
changing reg in insn 716
changing reg in insn 715
changing reg in insn 716
changing reg in insn 716
changing reg in insn 718
changing reg in insn 730
changing reg in insn 731
changing reg in insn 731
changing reg in insn 732
changing reg in insn 733
changing reg in insn 733
changing reg in insn 737
changing reg in insn 735
changing reg in insn 736
changing reg in insn 737
changing reg in insn 737
changing reg in insn 740
changing reg in insn 739
changing reg in insn 740
changing reg in insn 740
changing reg in insn 742
changing reg in insn 742
changing reg in insn 743
changing reg in insn 744
changing reg in insn 744
changing reg in insn 745
changing reg in insn 746
changing reg in insn 746
changing reg in insn 750
changing reg in insn 748
changing reg in insn 749
changing reg in insn 750
changing reg in insn 750
changing reg in insn 753
changing reg in insn 752
changing reg in insn 753
changing reg in insn 753
changing reg in insn 755
changing reg in insn 755
changing reg in insn 756
changing reg in insn 756
changing reg in insn 768
changing reg in insn 757
changing reg in insn 758
changing reg in insn 758
changing reg in insn 759
changing reg in insn 760
changing reg in insn 760
changing reg in insn 764
changing reg in insn 762
changing reg in insn 763
changing reg in insn 764
changing reg in insn 764
changing reg in insn 767
changing reg in insn 766
changing reg in insn 767
changing reg in insn 767
changing reg in insn 770
changing reg in insn 770
changing reg in insn 786
changing reg in insn 787
changing reg in insn 787
changing reg in insn 788
changing reg in insn 789
changing reg in insn 789
changing reg in insn 793
changing reg in insn 791
changing reg in insn 792
changing reg in insn 793
changing reg in insn 793
changing reg in insn 796
changing reg in insn 795
changing reg in insn 796
changing reg in insn 796
changing reg in insn 798
changing reg in insn 798
changing reg in insn 799
changing reg in insn 800
changing reg in insn 800
changing reg in insn 801
changing reg in insn 802
changing reg in insn 802
changing reg in insn 806
changing reg in insn 804
changing reg in insn 805
changing reg in insn 806
changing reg in insn 806
changing reg in insn 809
changing reg in insn 808
changing reg in insn 809
changing reg in insn 809
changing reg in insn 811
changing reg in insn 811
changing reg in insn 812
changing reg in insn 812
changing reg in insn 824
changing reg in insn 813
changing reg in insn 814
changing reg in insn 814
changing reg in insn 815
changing reg in insn 816
changing reg in insn 816
changing reg in insn 820
changing reg in insn 818
changing reg in insn 819
changing reg in insn 820
changing reg in insn 820
changing reg in insn 823
changing reg in insn 822
changing reg in insn 823
changing reg in insn 823
changing reg in insn 826
changing reg in insn 826
changing reg in insn 842
changing reg in insn 843
changing reg in insn 843
changing reg in insn 844
changing reg in insn 845
changing reg in insn 845
changing reg in insn 849
changing reg in insn 847
changing reg in insn 848
changing reg in insn 849
changing reg in insn 849
changing reg in insn 852
changing reg in insn 851
changing reg in insn 852
changing reg in insn 852
changing reg in insn 854
changing reg in insn 854
changing reg in insn 855
changing reg in insn 856
changing reg in insn 856
changing reg in insn 857
changing reg in insn 858
changing reg in insn 858
changing reg in insn 862
changing reg in insn 860
changing reg in insn 861
changing reg in insn 862
changing reg in insn 862
changing reg in insn 865
changing reg in insn 864
changing reg in insn 865
changing reg in insn 865
changing reg in insn 867
changing reg in insn 867
changing reg in insn 868
changing reg in insn 868
changing reg in insn 880
changing reg in insn 869
changing reg in insn 870
changing reg in insn 870
changing reg in insn 871
changing reg in insn 872
changing reg in insn 872
changing reg in insn 876
changing reg in insn 874
changing reg in insn 875
changing reg in insn 876
changing reg in insn 876
changing reg in insn 879
changing reg in insn 878
changing reg in insn 879
changing reg in insn 879
changing reg in insn 882
changing reg in insn 882
changing reg in insn 901
changing reg in insn 902
changing reg in insn 902
changing reg in insn 903
changing reg in insn 904
changing reg in insn 904
changing reg in insn 909
changing reg in insn 906
changing reg in insn 907
changing reg in insn 907
changing reg in insn 908
changing reg in insn 909
changing reg in insn 909
changing reg in insn 913
changing reg in insn 911
changing reg in insn 912
changing reg in insn 912
changing reg in insn 913
changing reg in insn 913
changing reg in insn 915
changing reg in insn 915
changing reg in insn 920
changing reg in insn 917
changing reg in insn 954
changing reg in insn 955
changing reg in insn 955
changing reg in insn 956
changing reg in insn 957
changing reg in insn 957
changing reg in insn 962
changing reg in insn 959
changing reg in insn 960
changing reg in insn 960
changing reg in insn 961
changing reg in insn 962
changing reg in insn 962
changing reg in insn 966
changing reg in insn 964
changing reg in insn 965
changing reg in insn 965
changing reg in insn 966
changing reg in insn 966
changing reg in insn 968
changing reg in insn 968
changing reg in insn 970
changing reg in insn 981
changing reg in insn 982
changing reg in insn 982
changing reg in insn 983
changing reg in insn 984
changing reg in insn 984
changing reg in insn 988
changing reg in insn 986
changing reg in insn 987
changing reg in insn 988
changing reg in insn 988
changing reg in insn 992
changing reg in insn 990
changing reg in insn 991
changing reg in insn 991
changing reg in insn 992
changing reg in insn 992
changing reg in insn 994
changing reg in insn 994
changing reg in insn 1007
changing reg in insn 995
changing reg in insn 996
changing reg in insn 996
changing reg in insn 997
changing reg in insn 998
changing reg in insn 998
changing reg in insn 1002
changing reg in insn 1000
changing reg in insn 1001
changing reg in insn 1002
changing reg in insn 1002
changing reg in insn 1006
changing reg in insn 1004
changing reg in insn 1005
changing reg in insn 1005
changing reg in insn 1006
changing reg in insn 1006
changing reg in insn 1009
changing reg in insn 1007
changing reg in insn 1009
changing reg in insn 1025
changing reg in insn 1026
changing reg in insn 1026
changing reg in insn 1027
changing reg in insn 1028
changing reg in insn 1028
changing reg in insn 1032
changing reg in insn 1030
changing reg in insn 1031
changing reg in insn 1032
changing reg in insn 1032
changing reg in insn 1036
changing reg in insn 1034
changing reg in insn 1035
changing reg in insn 1035
changing reg in insn 1036
changing reg in insn 1036
changing reg in insn 1038
changing reg in insn 1038
changing reg in insn 1051
changing reg in insn 1039
changing reg in insn 1040
changing reg in insn 1040
changing reg in insn 1041
changing reg in insn 1042
changing reg in insn 1042
changing reg in insn 1046
changing reg in insn 1044
changing reg in insn 1045
changing reg in insn 1046
changing reg in insn 1046
changing reg in insn 1050
changing reg in insn 1048
changing reg in insn 1049
changing reg in insn 1049
changing reg in insn 1050
changing reg in insn 1050
changing reg in insn 1053
changing reg in insn 1051
changing reg in insn 1053
changing reg in insn 1061
changing reg in insn 1062
changing reg in insn 1086
changing reg in insn 1087
changing reg in insn 1087
changing reg in insn 1088
changing reg in insn 1089
changing reg in insn 1089
changing reg in insn 1093
changing reg in insn 1091
changing reg in insn 1092
changing reg in insn 1093
changing reg in insn 1093
changing reg in insn 1096
changing reg in insn 1095
changing reg in insn 1096
changing reg in insn 1096
changing reg in insn 1098
changing reg in insn 1109
changing reg in insn 1110
changing reg in insn 1110
changing reg in insn 1111
changing reg in insn 1112
changing reg in insn 1112
changing reg in insn 1116
changing reg in insn 1114
changing reg in insn 1115
changing reg in insn 1116
changing reg in insn 1116
changing reg in insn 1119
changing reg in insn 1118
changing reg in insn 1119
changing reg in insn 1119
changing reg in insn 1121
changing reg in insn 1121
changing reg in insn 1122
changing reg in insn 1123
changing reg in insn 1123
changing reg in insn 1124
changing reg in insn 1125
changing reg in insn 1125
changing reg in insn 1129
changing reg in insn 1127
changing reg in insn 1128
changing reg in insn 1129
changing reg in insn 1129
changing reg in insn 1132
changing reg in insn 1131
changing reg in insn 1132
changing reg in insn 1132
changing reg in insn 1134
changing reg in insn 1134
changing reg in insn 1135
changing reg in insn 1135
changing reg in insn 1147
changing reg in insn 1136
changing reg in insn 1137
changing reg in insn 1137
changing reg in insn 1138
changing reg in insn 1139
changing reg in insn 1139
changing reg in insn 1143
changing reg in insn 1141
changing reg in insn 1142
changing reg in insn 1143
changing reg in insn 1143
changing reg in insn 1146
changing reg in insn 1145
changing reg in insn 1146
changing reg in insn 1146
changing reg in insn 1149
changing reg in insn 1149
changing reg in insn 1165
changing reg in insn 1166
changing reg in insn 1166
changing reg in insn 1167
changing reg in insn 1168
changing reg in insn 1168
changing reg in insn 1172
changing reg in insn 1170
changing reg in insn 1171
changing reg in insn 1172
changing reg in insn 1172
changing reg in insn 1175
changing reg in insn 1174
changing reg in insn 1175
changing reg in insn 1175
changing reg in insn 1177
changing reg in insn 1177
changing reg in insn 1178
changing reg in insn 1179
changing reg in insn 1179
changing reg in insn 1180
changing reg in insn 1181
changing reg in insn 1181
changing reg in insn 1185
changing reg in insn 1183
changing reg in insn 1184
changing reg in insn 1185
changing reg in insn 1185
changing reg in insn 1188
changing reg in insn 1187
changing reg in insn 1188
changing reg in insn 1188
changing reg in insn 1190
changing reg in insn 1190
changing reg in insn 1191
changing reg in insn 1191
changing reg in insn 1203
changing reg in insn 1192
changing reg in insn 1193
changing reg in insn 1193
changing reg in insn 1194
changing reg in insn 1195
changing reg in insn 1195
changing reg in insn 1199
changing reg in insn 1197
changing reg in insn 1198
changing reg in insn 1199
changing reg in insn 1199
changing reg in insn 1202
changing reg in insn 1201
changing reg in insn 1202
changing reg in insn 1202
changing reg in insn 1205
changing reg in insn 1205
changing reg in insn 1224
changing reg in insn 1225
changing reg in insn 1225
changing reg in insn 1226
changing reg in insn 1233
changing reg in insn 1234
changing reg in insn 1237
changing reg in insn 1238
changing reg in insn 1243
changing reg in insn 1244
changing reg in insn 1273
changing reg in insn 1274
changing reg in insn 1274
changing reg in insn 1275
changing reg in insn 1276
changing reg in insn 1276
changing reg in insn 1280
changing reg in insn 1278
changing reg in insn 1279
changing reg in insn 1280
changing reg in insn 1280
changing reg in insn 1283
changing reg in insn 1282
changing reg in insn 1283
changing reg in insn 1283
changing reg in insn 1285
changing reg in insn 1285
changing reg in insn 1287
changing reg in insn 1288
changing reg in insn 1289
changing reg in insn 1289
changing reg in insn 1293
changing reg in insn 1291
changing reg in insn 1292
changing reg in insn 1293
changing reg in insn 1293
changing reg in insn 1296
changing reg in insn 1295
changing reg in insn 1296
changing reg in insn 1296
changing reg in insn 1298
changing reg in insn 1298
changing reg in insn 1299
changing reg in insn 1300
changing reg in insn 1300
changing reg in insn 1301
changing reg in insn 1302
changing reg in insn 1302
changing reg in insn 1306
changing reg in insn 1304
changing reg in insn 1305
changing reg in insn 1306
changing reg in insn 1306
changing reg in insn 1309
changing reg in insn 1308
changing reg in insn 1309
changing reg in insn 1309
changing reg in insn 1311
changing reg in insn 1311
changing reg in insn 1312
changing reg in insn 1324
changing reg in insn 1313
changing reg in insn 1314
changing reg in insn 1314
changing reg in insn 1315
changing reg in insn 1316
changing reg in insn 1316
changing reg in insn 1320
changing reg in insn 1318
changing reg in insn 1319
changing reg in insn 1320
changing reg in insn 1320
changing reg in insn 1323
changing reg in insn 1322
changing reg in insn 1323
changing reg in insn 1323
changing reg in insn 1326
changing reg in insn 1326
changing reg in insn 1345
changing reg in insn 1346
changing reg in insn 1346
changing reg in insn 1347
changing reg in insn 15
changing reg in insn 18
changing reg in insn 16
changing reg in insn 26
changing reg in insn 24
changing reg in insn 34
changing reg in insn 32
changing reg in insn 34
changing reg in insn 36
changing reg in insn 48
changing reg in insn 51
changing reg in insn 49
changing reg in insn 59
changing reg in insn 57
changing reg in insn 76
changing reg in insn 67
changing reg in insn 65
changing reg in insn 67
changing reg in insn 69
changing reg in insn 1089
changing reg in insn 957
changing reg in insn 904
changing reg in insn 760
changing reg in insn 746
changing reg in insn 733
changing reg in insn 709
changing reg in insn 537
changing reg in insn 522
changing reg in insn 511
changing reg in insn 495
changing reg in insn 470
changing reg in insn 459
changing reg in insn 443
changing reg in insn 392
changing reg in insn 362
changing reg in insn 347
changing reg in insn 231
changing reg in insn 204
changing reg in insn 81
changing reg in insn 84
changing reg in insn 82
changing reg in insn 92
changing reg in insn 90
changing reg in insn 109
changing reg in insn 100
changing reg in insn 98
changing reg in insn 100
changing reg in insn 102
changing reg in insn 1302
changing reg in insn 1139
changing reg in insn 1125
changing reg in insn 1112
changing reg in insn 998
changing reg in insn 984
changing reg in insn 816
changing reg in insn 802
changing reg in insn 789
changing reg in insn 608
changing reg in insn 593
changing reg in insn 582
changing reg in insn 566
changing reg in insn 217
changing reg in insn 114
changing reg in insn 117
changing reg in insn 115
changing reg in insn 125
changing reg in insn 123
changing reg in insn 142
changing reg in insn 133
changing reg in insn 131
changing reg in insn 133
changing reg in insn 135
changing reg in insn 1316
changing reg in insn 1289
changing reg in insn 1276
changing reg in insn 1195
changing reg in insn 1181
changing reg in insn 1168
changing reg in insn 1042
changing reg in insn 1028
changing reg in insn 872
changing reg in insn 858
changing reg in insn 845
changing reg in insn 679
changing reg in insn 664
changing reg in insn 653
changing reg in insn 637
changing reg in insn 287
changing reg in insn 273
changing reg in insn 260
changing reg in insn 149
changing reg in insn 150
changing reg in insn 161
changing reg in insn 164
changing reg in insn 165
changing reg in insn 166
changing reg in insn 170
changing reg in insn 173
changing reg in insn 174
changing reg in insn 175
changing reg in insn 193
changing reg in insn 196
changing reg in insn 197
changing reg in insn 198
changing reg in insn 249
changing reg in insn 252
changing reg in insn 253
changing reg in insn 254
changing reg in insn 318
changing reg in insn 321
changing reg in insn 322
changing reg in insn 323
changing reg in insn 334
changing reg in insn 337
changing reg in insn 336
changing reg in insn 339
changing reg in insn 340
changing reg in insn 341
changing reg in insn 374
changing reg in insn 376
changing reg in insn 482
changing reg in insn 485
changing reg in insn 484
changing reg in insn 487
changing reg in insn 488
changing reg in insn 489
changing reg in insn 555
changing reg in insn 558
changing reg in insn 559
changing reg in insn 560
changing reg in insn 626
changing reg in insn 629
changing reg in insn 630
changing reg in insn 631
changing reg in insn 696
changing reg in insn 699
changing reg in insn 698
changing reg in insn 701
changing reg in insn 702
changing reg in insn 703
changing reg in insn 720
changing reg in insn 723
changing reg in insn 722
changing reg in insn 725
changing reg in insn 726
changing reg in insn 727
changing reg in insn 778
changing reg in insn 781
changing reg in insn 782
changing reg in insn 783
changing reg in insn 834
changing reg in insn 837
changing reg in insn 838
changing reg in insn 839
changing reg in insn 973
changing reg in insn 976
changing reg in insn 977
changing reg in insn 978
changing reg in insn 1017
changing reg in insn 1020
changing reg in insn 1021
changing reg in insn 1022
changing reg in insn 1062
changing reg in insn 1063
changing reg in insn 1066
changing reg in insn 1067
changing reg in insn 1076
changing reg in insn 1079
changing reg in insn 1078
changing reg in insn 1081
changing reg in insn 1082
changing reg in insn 1083
changing reg in insn 1101
changing reg in insn 1104
changing reg in insn 1105
changing reg in insn 1106
changing reg in insn 1157
changing reg in insn 1160
changing reg in insn 1161
changing reg in insn 1162
changing reg in insn 1234
changing reg in insn 1235
changing reg in insn 1239
changing reg in insn 1240
changing reg in insn 1247
changing reg in insn 1250
changing reg in insn 1251
changing reg in insn 1252
changing reg in insn 1256
changing reg in insn 1259
changing reg in insn 1260
changing reg in insn 1261
changing reg in insn 1265
changing reg in insn 1268
changing reg in insn 1269
changing reg in insn 1270
changing reg in insn 11
changing reg in insn 12
changing reg in insn 13
changing reg in insn 14
changing reg in insn 17
changing reg in insn 19
changing reg in insn 20
changing reg in insn 21
changing reg in insn 22
changing reg in insn 25
changing reg in insn 27
changing reg in insn 28
changing reg in insn 29
changing reg in insn 30
changing reg in insn 33
changing reg in insn 34
changing reg in insn 44
changing reg in insn 45
changing reg in insn 46
changing reg in insn 47
changing reg in insn 50
changing reg in insn 52
changing reg in insn 53
changing reg in insn 54
changing reg in insn 55
changing reg in insn 58
changing reg in insn 60
changing reg in insn 61
changing reg in insn 62
changing reg in insn 63
changing reg in insn 66
changing reg in insn 67
changing reg in insn 77
changing reg in insn 78
changing reg in insn 79
changing reg in insn 80
changing reg in insn 83
changing reg in insn 85
changing reg in insn 86
changing reg in insn 87
changing reg in insn 88
changing reg in insn 91
changing reg in insn 93
changing reg in insn 94
changing reg in insn 95
changing reg in insn 96
changing reg in insn 99
changing reg in insn 100
changing reg in insn 110
changing reg in insn 111
changing reg in insn 112
changing reg in insn 113
changing reg in insn 116
changing reg in insn 118
changing reg in insn 119
changing reg in insn 120
changing reg in insn 121
changing reg in insn 124
changing reg in insn 126
changing reg in insn 127
changing reg in insn 128
changing reg in insn 129
changing reg in insn 132
changing reg in insn 133
changing reg in insn 143
changing reg in insn 144
changing reg in insn 154
changing reg in insn 155
changing reg in insn 160
changing reg in insn 161
changing reg in insn 169
changing reg in insn 170
changing reg in insn 182
changing reg in insn 183
changing reg in insn 186
changing reg in insn 187
changing reg in insn 189
changing reg in insn 190
changing reg in insn 190
changing reg in insn 191
changing reg in insn 192
changing reg in insn 193
changing reg in insn 205
changing reg in insn 206
changing reg in insn 209
changing reg in insn 210
changing reg in insn 212
changing reg in insn 213
changing reg in insn 214
changing reg in insn 215
changing reg in insn 218
changing reg in insn 219
changing reg in insn 222
changing reg in insn 223
changing reg in insn 225
changing reg in insn 226
changing reg in insn 232
changing reg in insn 233
changing reg in insn 236
changing reg in insn 237
changing reg in insn 240
changing reg in insn 241
changing reg in insn 248
changing reg in insn 249
changing reg in insn 261
changing reg in insn 262
changing reg in insn 265
changing reg in insn 266
changing reg in insn 268
changing reg in insn 269
changing reg in insn 270
changing reg in insn 271
changing reg in insn 274
changing reg in insn 275
changing reg in insn 278
changing reg in insn 279
changing reg in insn 281
changing reg in insn 282
changing reg in insn 288
changing reg in insn 289
changing reg in insn 292
changing reg in insn 293
changing reg in insn 296
changing reg in insn 297
changing reg in insn 316
changing reg in insn 317
changing reg in insn 330
changing reg in insn 331
changing reg in insn 329
changing reg in insn 330
changing reg in insn 332
changing reg in insn 333
changing reg in insn 335
changing reg in insn 336
changing reg in insn 348
changing reg in insn 349
changing reg in insn 352
changing reg in insn 353
changing reg in insn 355
changing reg in insn 356
changing reg in insn 357
changing reg in insn 358
changing reg in insn 363
changing reg in insn 364
changing reg in insn 367
changing reg in insn 368
changing reg in insn 370
changing reg in insn 371
changing reg in insn 372
changing reg in insn 373
changing reg in insn 375
changing reg in insn 376
changing reg in insn 379
changing reg in insn 380
changing reg in insn 393
changing reg in insn 394
changing reg in insn 397
changing reg in insn 398
changing reg in insn 400
changing reg in insn 401
changing reg in insn 402
changing reg in insn 403
changing reg in insn 405
changing reg in insn 406
changing reg in insn 412
changing reg in insn 413
changing reg in insn 417
changing reg in insn 418
changing reg in insn 420
changing reg in insn 423
changing reg in insn 425
changing reg in insn 428
changing reg in insn 426
changing reg in insn 429
changing reg in insn 431
changing reg in insn 432
changing reg in insn 444
changing reg in insn 445
changing reg in insn 448
changing reg in insn 449
changing reg in insn 451
changing reg in insn 452
changing reg in insn 454
changing reg in insn 455
changing reg in insn 453
changing reg in insn 454
changing reg in insn 460
changing reg in insn 461
changing reg in insn 464
changing reg in insn 465
changing reg in insn 471
changing reg in insn 472
changing reg in insn 475
changing reg in insn 476
changing reg in insn 478
changing reg in insn 479
changing reg in insn 480
changing reg in insn 481
changing reg in insn 483
changing reg in insn 484
changing reg in insn 496
changing reg in insn 497
changing reg in insn 500
changing reg in insn 501
changing reg in insn 503
changing reg in insn 504
changing reg in insn 506
changing reg in insn 507
changing reg in insn 505
changing reg in insn 512
changing reg in insn 513
changing reg in insn 516
changing reg in insn 517
changing reg in insn 523
changing reg in insn 524
changing reg in insn 527
changing reg in insn 528
changing reg in insn 530
changing reg in insn 531
changing reg in insn 532
changing reg in insn 533
changing reg in insn 538
changing reg in insn 539
changing reg in insn 542
changing reg in insn 543
changing reg in insn 545
changing reg in insn 547
changing reg in insn 546
changing reg in insn 547
changing reg in insn 554
changing reg in insn 555
changing reg in insn 567
changing reg in insn 568
changing reg in insn 571
changing reg in insn 572
changing reg in insn 574
changing reg in insn 575
changing reg in insn 577
changing reg in insn 578
changing reg in insn 576
changing reg in insn 583
changing reg in insn 584
changing reg in insn 587
changing reg in insn 588
changing reg in insn 594
changing reg in insn 595
changing reg in insn 598
changing reg in insn 599
changing reg in insn 601
changing reg in insn 602
changing reg in insn 603
changing reg in insn 604
changing reg in insn 609
changing reg in insn 610
changing reg in insn 613
changing reg in insn 614
changing reg in insn 616
changing reg in insn 618
changing reg in insn 617
changing reg in insn 618
changing reg in insn 625
changing reg in insn 626
changing reg in insn 638
changing reg in insn 639
changing reg in insn 642
changing reg in insn 643
changing reg in insn 645
changing reg in insn 646
changing reg in insn 648
changing reg in insn 649
changing reg in insn 647
changing reg in insn 654
changing reg in insn 655
changing reg in insn 658
changing reg in insn 659
changing reg in insn 665
changing reg in insn 666
changing reg in insn 669
changing reg in insn 670
changing reg in insn 672
changing reg in insn 673
changing reg in insn 674
changing reg in insn 675
changing reg in insn 680
changing reg in insn 681
changing reg in insn 684
changing reg in insn 685
changing reg in insn 687
changing reg in insn 689
changing reg in insn 688
changing reg in insn 689
changing reg in insn 697
changing reg in insn 698
changing reg in insn 710
changing reg in insn 711
changing reg in insn 714
changing reg in insn 715
changing reg in insn 717
changing reg in insn 718
changing reg in insn 718
changing reg in insn 719
changing reg in insn 721
changing reg in insn 722
changing reg in insn 734
changing reg in insn 735
changing reg in insn 738
changing reg in insn 739
changing reg in insn 741
changing reg in insn 742
changing reg in insn 747
changing reg in insn 748
changing reg in insn 751
changing reg in insn 752
changing reg in insn 754
changing reg in insn 755
changing reg in insn 761
changing reg in insn 762
changing reg in insn 765
changing reg in insn 766
changing reg in insn 769
changing reg in insn 770
changing reg in insn 777
changing reg in insn 778
changing reg in insn 790
changing reg in insn 791
changing reg in insn 794
changing reg in insn 795
changing reg in insn 797
changing reg in insn 798
changing reg in insn 803
changing reg in insn 804
changing reg in insn 807
changing reg in insn 808
changing reg in insn 810
changing reg in insn 811
changing reg in insn 817
changing reg in insn 818
changing reg in insn 821
changing reg in insn 822
changing reg in insn 825
changing reg in insn 826
changing reg in insn 833
changing reg in insn 834
changing reg in insn 846
changing reg in insn 847
changing reg in insn 850
changing reg in insn 851
changing reg in insn 853
changing reg in insn 854
changing reg in insn 859
changing reg in insn 860
changing reg in insn 863
changing reg in insn 864
changing reg in insn 866
changing reg in insn 867
changing reg in insn 873
changing reg in insn 874
changing reg in insn 877
changing reg in insn 878
changing reg in insn 881
changing reg in insn 882
changing reg in insn 905
changing reg in insn 906
changing reg in insn 910
changing reg in insn 911
changing reg in insn 914
changing reg in insn 915
changing reg in insn 916
changing reg in insn 917
changing reg in insn 919
changing reg in insn 920
changing reg in insn 926
changing reg in insn 927
changing reg in insn 931
changing reg in insn 932
changing reg in insn 934
changing reg in insn 937
changing reg in insn 939
changing reg in insn 942
changing reg in insn 940
changing reg in insn 943
changing reg in insn 945
changing reg in insn 946
changing reg in insn 958
changing reg in insn 959
changing reg in insn 963
changing reg in insn 964
changing reg in insn 967
changing reg in insn 968
changing reg in insn 970
changing reg in insn 971
changing reg in insn 969
changing reg in insn 970
changing reg in insn 972
changing reg in insn 973
changing reg in insn 985
changing reg in insn 986
changing reg in insn 989
changing reg in insn 990
changing reg in insn 993
changing reg in insn 994
changing reg in insn 999
changing reg in insn 1000
changing reg in insn 1003
changing reg in insn 1004
changing reg in insn 1008
changing reg in insn 1009
changing reg in insn 1016
changing reg in insn 1017
changing reg in insn 1029
changing reg in insn 1030
changing reg in insn 1033
changing reg in insn 1034
changing reg in insn 1037
changing reg in insn 1038
changing reg in insn 1043
changing reg in insn 1044
changing reg in insn 1047
changing reg in insn 1048
changing reg in insn 1052
changing reg in insn 1053
changing reg in insn 1060
changing reg in insn 1061
changing reg in insn 1074
changing reg in insn 1075
changing reg in insn 1073
changing reg in insn 1074
changing reg in insn 1077
changing reg in insn 1078
changing reg in insn 1090
changing reg in insn 1091
changing reg in insn 1094
changing reg in insn 1095
changing reg in insn 1097
changing reg in insn 1098
changing reg in insn 1098
changing reg in insn 1099
changing reg in insn 1100
changing reg in insn 1101
changing reg in insn 1113
changing reg in insn 1114
changing reg in insn 1117
changing reg in insn 1118
changing reg in insn 1120
changing reg in insn 1121
changing reg in insn 1126
changing reg in insn 1127
changing reg in insn 1130
changing reg in insn 1131
changing reg in insn 1133
changing reg in insn 1134
changing reg in insn 1140
changing reg in insn 1141
changing reg in insn 1144
changing reg in insn 1145
changing reg in insn 1148
changing reg in insn 1149
changing reg in insn 1156
changing reg in insn 1157
changing reg in insn 1169
changing reg in insn 1170
changing reg in insn 1173
changing reg in insn 1174
changing reg in insn 1176
changing reg in insn 1177
changing reg in insn 1182
changing reg in insn 1183
changing reg in insn 1186
changing reg in insn 1187
changing reg in insn 1189
changing reg in insn 1190
changing reg in insn 1196
changing reg in insn 1197
changing reg in insn 1200
changing reg in insn 1201
changing reg in insn 1204
changing reg in insn 1205
changing reg in insn 1232
changing reg in insn 1233
changing reg in insn 1244
changing reg in insn 1245
changing reg in insn 1246
changing reg in insn 1247
changing reg in insn 1255
changing reg in insn 1256
changing reg in insn 1264
changing reg in insn 1265
changing reg in insn 1277
changing reg in insn 1278
changing reg in insn 1281
changing reg in insn 1282
changing reg in insn 1284
changing reg in insn 1285
changing reg in insn 1286
changing reg in insn 1287
changing reg in insn 1290
changing reg in insn 1291
changing reg in insn 1294
changing reg in insn 1295
changing reg in insn 1297
changing reg in insn 1298
changing reg in insn 1303
changing reg in insn 1304
changing reg in insn 1307
changing reg in insn 1308
changing reg in insn 1310
changing reg in insn 1311
changing reg in insn 1317
changing reg in insn 1318
changing reg in insn 1321
changing reg in insn 1322
changing reg in insn 1325
changing reg in insn 1326
deleting insn with uid = 1496.
deleting insn with uid = 1567.
deleting insn with uid = 1498.
deleting insn with uid = 1500.
deleting insn with uid = 1565.
deleting insn with uid = 1502.
deleting insn with uid = 36.
deleting insn with uid = 1504.
deleting insn with uid = 1505.
deleting insn with uid = 1507.
deleting insn with uid = 1509.
deleting insn with uid = 1511.
deleting insn with uid = 1513.
deleting insn with uid = 1515.
deleting insn with uid = 69.
deleting insn with uid = 1517.
deleting insn with uid = 1518.
deleting insn with uid = 1520.
deleting insn with uid = 1523.
deleting insn with uid = 1524.
deleting insn with uid = 1527.
deleting insn with uid = 102.
deleting insn with uid = 1529.
deleting insn with uid = 1530.
deleting insn with uid = 1532.
deleting insn with uid = 1535.
deleting insn with uid = 1536.
deleting insn with uid = 1539.
deleting insn with uid = 135.
deleting insn with uid = 1541.
deleting insn with uid = 1542.
deleting insn with uid = 1549.
deleting insn with uid = 1551.
deleting insn with uid = 1553.
deleting insn with uid = 1555.
deleting insn with uid = 1557.
deleting insn with uid = 1559.
deleting insn with uid = 1561.
deleting insn with uid = 1563.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 419.
verify found no changes in insn with uid = 424.
verify found no changes in insn with uid = 430.
verify found no changes in insn with uid = 433.
verify found no changes in insn with uid = 436.
verify found no changes in insn with uid = 933.
verify found no changes in insn with uid = 938.
verify found no changes in insn with uid = 944.
verify found no changes in insn with uid = 947.
verify found no changes in insn with uid = 950.


bnsolv

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 21 [xmm0] 22 [xmm1] 23 [xmm2] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;;  ref usage 	r0={600d,601u} r1={179d,169u} r2={67d,57u} r3={3d,23u} r4={22d,34u} r5={35d,45u} r6={1d,548u} r7={1d,119u} r8={10d} r9={10d} r10={10d} r11={10d} r12={10d} r13={10d} r14={10d} r15={10d} r17={391d,66u} r18={10d} r19={10d} r20={1d,1u,2e} r21={64d,55u} r22={40d,29u,1e} r23={13d,2u,1e} r24={11d} r25={11d} r26={11d} r27={11d} r28={11d} r29={10d} r30={10d} r31={10d} r32={10d} r33={10d} r34={10d} r35={10d} r36={10d} r37={12d,21u} r38={12d,21u} r39={12d,18u} r40={17d,6u} r41={2d,16u} r42={2d,16u} r43={2d,14u} r44={3d,2u} r45={10d} r46={10d} r47={10d} r48={10d} r49={10d} r50={10d} r51={10d} r52={10d} r53={10d} r54={10d} r55={10d} r56={10d} r57={10d} r58={10d} r59={10d} r60={10d} r61={10d} r62={10d} r63={10d} r64={10d} r65={10d} r66={10d} r67={10d} r68={10d} r69={10d} r70={10d} r71={10d} r72={10d} r73={10d} r74={10d} r75={10d} r76={10d} r77={10d} r78={10d} r79={10d} r80={10d} 
;;    total ref usage 3941{2074d,1863u,4e} in 1224{1214 regular + 10 call} insns.
(note 1 0 9 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9] 91 98 105
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9] 91 98 105 112
;; lr  def 	 17 [flags] 87 88 89 90 93 94 95 96 97 100 101 102 103 104 107 108 109 110 111 114 652 653 654 655 656 657 661 662 663 664 665 666 667 671 672 673 674 675 676 677 681 682 683 684 685 686 687 691 692 746 747 748 749 750 751 752 753 754 755 756 757 758 759 760 761 762 763 764 765 766 767 768 769 770 771 772 773 774 775 776 777 778 779 780 781 782
(note 9 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 9 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -696 [0xfffffffffffffd48])) [10 a+0 S8 A64])
        (reg:DI 5 di [ a ])) "../src/bnsolv.f":21 81 {*movdi_internal}
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -704 [0xfffffffffffffd40])) [10 b+0 S8 A64])
        (reg:DI 4 si [ b ])) "../src/bnsolv.f":21 81 {*movdi_internal}
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -712 [0xfffffffffffffd38])) [10 c+0 S8 A64])
        (reg:DI 1 dx [ c ])) "../src/bnsolv.f":21 81 {*movdi_internal}
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -720 [0xfffffffffffffd30])) [10 r+0 S8 A64])
        (reg:DI 2 cx [ r ])) "../src/bnsolv.f":21 81 {*movdi_internal}
     (nil))
(insn 6 5 7 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -728 [0xfffffffffffffd28])) [11 nb+0 S8 A64])
        (reg:DI 37 r8 [ nb ])) "../src/bnsolv.f":21 81 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -736 [0xfffffffffffffd20])) [11 n+0 S8 A64])
        (reg:DI 38 r9 [ n ])) "../src/bnsolv.f":21 81 {*movdi_internal}
     (nil))
(note 8 7 11 2 NOTE_INSN_FUNCTION_BEG)
(insn 11 8 12 2 (set (reg/f:DI 0 ax [746])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -728 [0xfffffffffffffd28])) [11 nb+0 S8 A64])) "../src/bnsolv.f":21 81 {*movdi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:SI 0 ax [orig:87 _1 ] [87])
        (mem:SI (reg/f:DI 0 ax [746]) [1 *nb_615(D)+0 S4 A32])) "../src/bnsolv.f":21 82 {*movsi_internal}
     (nil))
(insn 13 12 14 2 (set (reg:DI 0 ax [747])
        (sign_extend:DI (reg:SI 0 ax [orig:87 _1 ] [87]))) "../src/bnsolv.f":21 145 {*extendsidi2_rex64}
     (nil))
(insn 14 13 15 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -80 [0xffffffffffffffb0])) [2 ubound.7+0 S8 A64])
        (reg:DI 0 ax [747])) "../src/bnsolv.f":21 81 {*movdi_internal}
     (nil))
(insn 15 14 17 2 (set (reg:DI 0 ax [orig:652 stride.9_617 ] [652])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -80 [0xffffffffffffffb0])) [2 ubound.7+0 S8 A64])) "../src/bnsolv.f":21 81 {*movdi_internal}
     (nil))
(insn 17 15 16 2 (set (reg:DI 1 dx [748])
        (const_int 0 [0])) "../src/bnsolv.f":21 81 {*movdi_internal}
     (nil))
(insn 16 17 1495 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 0 ax [orig:652 stride.9_617 ] [652])
            (const_int 0 [0]))) "../src/bnsolv.f":21 4 {*cmpdi_ccno_1}
     (nil))
(insn 1495 16 18 2 (set (reg:DI 3 bx [748])
        (reg:DI 1 dx [748])) "../src/bnsolv.f":21 81 {*movdi_internal}
     (nil))
(insn 18 1495 1568 2 (set (reg:DI 3 bx [748])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 0 ax [orig:652 stride.9_617 ] [652])
            (reg:DI 3 bx [748]))) "../src/bnsolv.f":21 967 {*movdicc_noc}
     (nil))
(insn 1568 18 19 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -760 [0xfffffffffffffd08])) [13 %sfp+-712 S8 A64])
        (reg:DI 3 bx [orig:653 stride.9_618 ] [653])) "../src/bnsolv.f":21 81 {*movdi_internal}
     (nil))
(insn 19 1568 20 2 (set (reg/f:DI 0 ax [749])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -728 [0xfffffffffffffd28])) [11 nb+0 S8 A64])) "../src/bnsolv.f":21 81 {*movdi_internal}
     (nil))
(insn 20 19 21 2 (set (reg:SI 0 ax [orig:88 _2 ] [88])
        (mem:SI (reg/f:DI 0 ax [749]) [1 *nb_615(D)+0 S4 A32])) "../src/bnsolv.f":21 82 {*movsi_internal}
     (nil))
(insn 21 20 22 2 (set (reg:DI 0 ax [750])
        (sign_extend:DI (reg:SI 0 ax [orig:88 _2 ] [88]))) "../src/bnsolv.f":21 145 {*extendsidi2_rex64}
     (nil))
(insn 22 21 1497 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [2 ubound.8+0 S8 A64])
        (reg:DI 0 ax [750])) "../src/bnsolv.f":21 81 {*movdi_internal}
     (nil))
(insn 1497 22 23 2 (set (reg:DI 0 ax [orig:654 stride.11_620 ] [654])
        (reg:DI 3 bx [orig:653 stride.9_618 ] [653])) "../src/bnsolv.f":21 81 {*movdi_internal}
     (nil))
(insn 23 1497 25 2 (parallel [
            (set (reg:DI 0 ax [orig:654 stride.11_620 ] [654])
                (mult:DI (reg:DI 0 ax [orig:654 stride.11_620 ] [654])
                    (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                            (const_int -88 [0xffffffffffffffa8])) [2 ubound.8+0 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":21 329 {*muldi3_1}
     (nil))
(insn 25 23 24 2 (set (reg:DI 1 dx [751])
        (const_int 0 [0])) "../src/bnsolv.f":21 81 {*movdi_internal}
     (nil))
(insn 24 25 1499 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 0 ax [orig:654 stride.11_620 ] [654])
            (const_int 0 [0]))) "../src/bnsolv.f":21 4 {*cmpdi_ccno_1}
     (nil))
(insn 1499 24 26 2 (set (reg:DI 4 si [751])
        (reg:DI 1 dx [751])) "../src/bnsolv.f":21 81 {*movdi_internal}
     (nil))
(insn 26 1499 1566 2 (set (reg:DI 4 si [751])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 0 ax [orig:654 stride.11_620 ] [654])
            (reg:DI 4 si [751]))) "../src/bnsolv.f":21 967 {*movdicc_noc}
     (nil))
(insn 1566 26 27 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -768 [0xfffffffffffffd00])) [13 %sfp+-720 S8 A64])
        (reg:DI 4 si [orig:655 stride.11_621 ] [655])) "../src/bnsolv.f":21 81 {*movdi_internal}
     (nil))
(insn 27 1566 28 2 (set (reg/f:DI 0 ax [752])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -736 [0xfffffffffffffd20])) [11 n+0 S8 A64])) "../src/bnsolv.f":21 81 {*movdi_internal}
     (nil))
(insn 28 27 29 2 (set (reg:SI 0 ax [orig:89 _3 ] [89])
        (mem:SI (reg/f:DI 0 ax [752]) [1 *n_622(D)+0 S4 A32])) "../src/bnsolv.f":21 82 {*movsi_internal}
     (nil))
(insn 29 28 30 2 (set (reg:DI 0 ax [753])
        (sign_extend:DI (reg:SI 0 ax [orig:89 _3 ] [89]))) "../src/bnsolv.f":21 145 {*extendsidi2_rex64}
     (nil))
(insn 30 29 1501 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [2 ubound.10+0 S8 A64])
        (reg:DI 0 ax [753])) "../src/bnsolv.f":21 81 {*movdi_internal}
     (nil))
(insn 1501 30 31 2 (set (reg:DI 0 ax [orig:656 size.13_624 ] [656])
        (reg:DI 4 si [orig:655 stride.11_621 ] [655])) "../src/bnsolv.f":21 81 {*movdi_internal}
     (nil))
(insn 31 1501 33 2 (parallel [
            (set (reg:DI 0 ax [orig:656 size.13_624 ] [656])
                (mult:DI (reg:DI 0 ax [orig:656 size.13_624 ] [656])
                    (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                            (const_int -96 [0xffffffffffffffa0])) [2 ubound.10+0 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":21 329 {*muldi3_1}
     (nil))
(insn 33 31 32 2 (set (reg:DI 1 dx [754])
        (const_int 0 [0])) "../src/bnsolv.f":21 81 {*movdi_internal}
     (nil))
(insn 32 33 34 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 0 ax [orig:656 size.13_624 ] [656])
            (const_int 0 [0]))) "../src/bnsolv.f":21 4 {*cmpdi_ccno_1}
     (nil))
(insn 34 32 37 2 (set (reg:DI 0 ax [orig:657 size.13_625 ] [657])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 0 ax [orig:656 size.13_624 ] [656])
            (reg:DI 1 dx [754]))) "../src/bnsolv.f":21 967 {*movdicc_noc}
     (nil))
(insn 37 34 38 2 (set (reg:DI 43 r14 [orig:91 _5 ] [91])
        (reg:DI 0 ax [orig:90 size.30_4 ] [90])) "../src/bnsolv.f":21 81 {*movdi_internal}
     (nil))
(insn 38 37 1503 2 (set (reg:DI 44 r15 [ _5+8 ])
        (const_int 0 [0])) "../src/bnsolv.f":21 81 {*movdi_internal}
     (nil))
(insn 1503 38 42 2 (set (reg:DI 0 ax [orig:93 _7 ] [93])
        (reg:DI 3 bx [orig:653 stride.9_618 ] [653])) "../src/bnsolv.f":21 81 {*movdi_internal}
     (nil))
(insn 42 1503 43 2 (set (reg:DI 0 ax [orig:93 _7 ] [93])
        (not:DI (reg:DI 0 ax [orig:93 _7 ] [93]))) "../src/bnsolv.f":21 495 {*one_cmpldi2_1}
     (nil))
(insn 43 42 1506 2 (parallel [
            (set (reg:DI 0 ax [orig:93 _7 ] [93])
                (minus:DI (reg:DI 0 ax [orig:93 _7 ] [93])
                    (reg:DI 4 si [orig:655 stride.11_621 ] [655])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":21 274 {*subdi_1}
     (nil))
(insn 1506 43 44 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -776 [0xfffffffffffffcf8])) [13 %sfp+-728 S8 A64])
        (reg:DI 0 ax [orig:93 _7 ] [93])) "../src/bnsolv.f":21 81 {*movdi_internal}
     (nil))
(insn 44 1506 45 2 (set (reg/f:DI 0 ax [755])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -728 [0xfffffffffffffd28])) [11 nb+0 S8 A64])) "../src/bnsolv.f":21 81 {*movdi_internal}
     (nil))
(insn 45 44 46 2 (set (reg:SI 0 ax [orig:94 _8 ] [94])
        (mem:SI (reg/f:DI 0 ax [755]) [1 *nb_615(D)+0 S4 A32])) "../src/bnsolv.f":21 82 {*movsi_internal}
     (nil))
(insn 46 45 47 2 (set (reg:DI 0 ax [756])
        (sign_extend:DI (reg:SI 0 ax [orig:94 _8 ] [94]))) "../src/bnsolv.f":21 145 {*extendsidi2_rex64}
     (nil))
(insn 47 46 48 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [2 ubound.0+0 S8 A64])
        (reg:DI 0 ax [756])) "../src/bnsolv.f":21 81 {*movdi_internal}
     (nil))
(insn 48 47 50 2 (set (reg:DI 0 ax [orig:662 stride.2_631 ] [662])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [2 ubound.0+0 S8 A64])) "../src/bnsolv.f":21 81 {*movdi_internal}
     (nil))
(insn 50 48 49 2 (set (reg:DI 1 dx [757])
        (const_int 0 [0])) "../src/bnsolv.f":21 81 {*movdi_internal}
     (nil))
(insn 49 50 1508 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 0 ax [orig:662 stride.2_631 ] [662])
            (const_int 0 [0]))) "../src/bnsolv.f":21 4 {*cmpdi_ccno_1}
     (nil))
(insn 1508 49 51 2 (set (reg:DI 4 si [757])
        (reg:DI 1 dx [757])) "../src/bnsolv.f":21 81 {*movdi_internal}
     (nil))
(insn 51 1508 52 2 (set (reg:DI 4 si [757])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 0 ax [orig:662 stride.2_631 ] [662])
            (reg:DI 4 si [757]))) "../src/bnsolv.f":21 967 {*movdicc_noc}
     (nil))
(insn 52 51 53 2 (set (reg/f:DI 0 ax [758])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -728 [0xfffffffffffffd28])) [11 nb+0 S8 A64])) "../src/bnsolv.f":21 81 {*movdi_internal}
     (nil))
(insn 53 52 54 2 (set (reg:SI 0 ax [orig:95 _9 ] [95])
        (mem:SI (reg/f:DI 0 ax [758]) [1 *nb_615(D)+0 S4 A32])) "../src/bnsolv.f":21 82 {*movsi_internal}
     (nil))
(insn 54 53 55 2 (set (reg:DI 0 ax [759])
        (sign_extend:DI (reg:SI 0 ax [orig:95 _9 ] [95]))) "../src/bnsolv.f":21 145 {*extendsidi2_rex64}
     (nil))
(insn 55 54 1510 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [2 ubound.1+0 S8 A64])
        (reg:DI 0 ax [759])) "../src/bnsolv.f":21 81 {*movdi_internal}
     (nil))
(insn 1510 55 56 2 (set (reg:DI 0 ax [orig:664 stride.4_634 ] [664])
        (reg:DI 4 si [orig:663 stride.2_632 ] [663])) "../src/bnsolv.f":21 81 {*movdi_internal}
     (nil))
(insn 56 1510 58 2 (parallel [
            (set (reg:DI 0 ax [orig:664 stride.4_634 ] [664])
                (mult:DI (reg:DI 0 ax [orig:664 stride.4_634 ] [664])
                    (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                            (const_int -112 [0xffffffffffffff90])) [2 ubound.1+0 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":21 329 {*muldi3_1}
     (nil))
(insn 58 56 57 2 (set (reg:DI 1 dx [760])
        (const_int 0 [0])) "../src/bnsolv.f":21 81 {*movdi_internal}
     (nil))
(insn 57 58 1512 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 0 ax [orig:664 stride.4_634 ] [664])
            (const_int 0 [0]))) "../src/bnsolv.f":21 4 {*cmpdi_ccno_1}
     (nil))
(insn 1512 57 59 2 (set (reg:DI 5 di [760])
        (reg:DI 1 dx [760])) "../src/bnsolv.f":21 81 {*movdi_internal}
     (nil))
(insn 59 1512 60 2 (set (reg:DI 5 di [760])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 0 ax [orig:664 stride.4_634 ] [664])
            (reg:DI 5 di [760]))) "../src/bnsolv.f":21 967 {*movdicc_noc}
     (nil))
(insn 60 59 61 2 (set (reg/f:DI 0 ax [761])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -736 [0xfffffffffffffd20])) [11 n+0 S8 A64])) "../src/bnsolv.f":21 81 {*movdi_internal}
     (nil))
(insn 61 60 62 2 (set (reg:SI 0 ax [orig:96 _10 ] [96])
        (mem:SI (reg/f:DI 0 ax [761]) [1 *n_622(D)+0 S4 A32])) "../src/bnsolv.f":21 82 {*movsi_internal}
     (nil))
(insn 62 61 63 2 (set (reg:DI 0 ax [762])
        (sign_extend:DI (reg:SI 0 ax [orig:96 _10 ] [96]))) "../src/bnsolv.f":21 145 {*extendsidi2_rex64}
     (nil))
(insn 63 62 1514 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [2 ubound.3+0 S8 A64])
        (reg:DI 0 ax [762])) "../src/bnsolv.f":21 81 {*movdi_internal}
     (nil))
(insn 1514 63 64 2 (set (reg:DI 0 ax [orig:666 size.6_637 ] [666])
        (reg:DI 5 di [orig:665 stride.4_635 ] [665])) "../src/bnsolv.f":21 81 {*movdi_internal}
     (nil))
(insn 64 1514 66 2 (parallel [
            (set (reg:DI 0 ax [orig:666 size.6_637 ] [666])
                (mult:DI (reg:DI 0 ax [orig:666 size.6_637 ] [666])
                    (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                            (const_int -120 [0xffffffffffffff88])) [2 ubound.3+0 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":21 329 {*muldi3_1}
     (nil))
(insn 66 64 65 2 (set (reg:DI 1 dx [763])
        (const_int 0 [0])) "../src/bnsolv.f":21 81 {*movdi_internal}
     (nil))
(insn 65 66 67 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 0 ax [orig:666 size.6_637 ] [666])
            (const_int 0 [0]))) "../src/bnsolv.f":21 4 {*cmpdi_ccno_1}
     (nil))
(insn 67 65 70 2 (set (reg:DI 0 ax [orig:667 size.6_638 ] [667])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 0 ax [orig:666 size.6_637 ] [666])
            (reg:DI 1 dx [763]))) "../src/bnsolv.f":21 967 {*movdicc_noc}
     (nil))
(insn 70 67 71 2 (set (reg:DI 41 r12 [orig:98 _12 ] [98])
        (reg:DI 0 ax [orig:97 size.32_11 ] [97])) "../src/bnsolv.f":21 81 {*movdi_internal}
     (nil))
(insn 71 70 1516 2 (set (reg:DI 42 r13 [ _12+8 ])
        (const_int 0 [0])) "../src/bnsolv.f":21 81 {*movdi_internal}
     (nil))
(insn 1516 71 75 2 (set (reg:DI 0 ax [orig:100 _14 ] [100])
        (reg:DI 4 si [orig:663 stride.2_632 ] [663])) "../src/bnsolv.f":21 81 {*movdi_internal}
     (nil))
(insn 75 1516 76 2 (set (reg:DI 0 ax [orig:100 _14 ] [100])
        (not:DI (reg:DI 0 ax [orig:100 _14 ] [100]))) "../src/bnsolv.f":21 495 {*one_cmpldi2_1}
     (nil))
(insn 76 75 1519 2 (parallel [
            (set (reg:DI 0 ax [orig:100 _14 ] [100])
                (minus:DI (reg:DI 0 ax [orig:100 _14 ] [100])
                    (reg:DI 5 di [orig:665 stride.4_635 ] [665])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":21 274 {*subdi_1}
     (nil))
(insn 1519 76 77 2 (set (reg:DI 3 bx [orig:671 offset.5_642 ] [671])
        (reg:DI 0 ax [orig:100 _14 ] [100])) "../src/bnsolv.f":21 81 {*movdi_internal}
     (nil))
(insn 77 1519 78 2 (set (reg/f:DI 0 ax [764])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -728 [0xfffffffffffffd28])) [11 nb+0 S8 A64])) "../src/bnsolv.f":21 81 {*movdi_internal}
     (nil))
(insn 78 77 79 2 (set (reg:SI 0 ax [orig:101 _15 ] [101])
        (mem:SI (reg/f:DI 0 ax [764]) [1 *nb_615(D)+0 S4 A32])) "../src/bnsolv.f":21 82 {*movsi_internal}
     (nil))
(insn 79 78 80 2 (set (reg:DI 0 ax [765])
        (sign_extend:DI (reg:SI 0 ax [orig:101 _15 ] [101]))) "../src/bnsolv.f":21 145 {*extendsidi2_rex64}
     (nil))
(insn 80 79 81 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -128 [0xffffffffffffff80])) [2 ubound.14+0 S8 A64])
        (reg:DI 0 ax [765])) "../src/bnsolv.f":21 81 {*movdi_internal}
     (nil))
(insn 81 80 83 2 (set (reg:DI 0 ax [orig:672 stride.16_644 ] [672])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -128 [0xffffffffffffff80])) [2 ubound.14+0 S8 A64])) "../src/bnsolv.f":21 81 {*movdi_internal}
     (nil))
(insn 83 81 82 2 (set (reg:DI 1 dx [766])
        (const_int 0 [0])) "../src/bnsolv.f":21 81 {*movdi_internal}
     (nil))
(insn 82 83 84 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 0 ax [orig:672 stride.16_644 ] [672])
            (const_int 0 [0]))) "../src/bnsolv.f":21 4 {*cmpdi_ccno_1}
     (nil))
(insn 84 82 1521 2 (set (reg:DI 1 dx [766])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 0 ax [orig:672 stride.16_644 ] [672])
            (reg:DI 1 dx [766]))) "../src/bnsolv.f":21 967 {*movdicc_noc}
     (nil))
(insn 1521 84 85 2 (set (reg:DI 41 r12 [orig:673 stride.16_645 ] [673])
        (reg:DI 1 dx [766])) "../src/bnsolv.f":21 81 {*movdi_internal}
     (nil))
(insn 85 1521 86 2 (set (reg/f:DI 0 ax [767])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -728 [0xfffffffffffffd28])) [11 nb+0 S8 A64])) "../src/bnsolv.f":21 81 {*movdi_internal}
     (nil))
(insn 86 85 87 2 (set (reg:SI 0 ax [orig:102 _16 ] [102])
        (mem:SI (reg/f:DI 0 ax [767]) [1 *nb_615(D)+0 S4 A32])) "../src/bnsolv.f":21 82 {*movsi_internal}
     (nil))
(insn 87 86 88 2 (set (reg:DI 0 ax [768])
        (sign_extend:DI (reg:SI 0 ax [orig:102 _16 ] [102]))) "../src/bnsolv.f":21 145 {*extendsidi2_rex64}
     (nil))
(insn 88 87 1522 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -136 [0xffffffffffffff78])) [2 ubound.15+0 S8 A64])
        (reg:DI 0 ax [768])) "../src/bnsolv.f":21 81 {*movdi_internal}
     (nil))
(insn 1522 88 89 2 (set (reg:DI 0 ax [orig:674 stride.18_647 ] [674])
        (reg:DI 41 r12 [orig:673 stride.16_645 ] [673])) "../src/bnsolv.f":21 81 {*movdi_internal}
     (nil))
(insn 89 1522 91 2 (parallel [
            (set (reg:DI 0 ax [orig:674 stride.18_647 ] [674])
                (mult:DI (reg:DI 0 ax [orig:674 stride.18_647 ] [674])
                    (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                            (const_int -136 [0xffffffffffffff78])) [2 ubound.15+0 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":21 329 {*muldi3_1}
     (nil))
(insn 91 89 90 2 (set (reg:DI 1 dx [769])
        (const_int 0 [0])) "../src/bnsolv.f":21 81 {*movdi_internal}
     (nil))
(insn 90 91 92 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 0 ax [orig:674 stride.18_647 ] [674])
            (const_int 0 [0]))) "../src/bnsolv.f":21 4 {*cmpdi_ccno_1}
     (nil))
(insn 92 90 1525 2 (set (reg:DI 1 dx [769])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 0 ax [orig:674 stride.18_647 ] [674])
            (reg:DI 1 dx [769]))) "../src/bnsolv.f":21 967 {*movdicc_noc}
     (nil))
(insn 1525 92 93 2 (set (reg:DI 42 r13 [orig:675 stride.18_648 ] [675])
        (reg:DI 1 dx [769])) "../src/bnsolv.f":21 81 {*movdi_internal}
     (nil))
(insn 93 1525 94 2 (set (reg/f:DI 0 ax [770])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -736 [0xfffffffffffffd20])) [11 n+0 S8 A64])) "../src/bnsolv.f":21 81 {*movdi_internal}
     (nil))
(insn 94 93 95 2 (set (reg:SI 0 ax [orig:103 _17 ] [103])
        (mem:SI (reg/f:DI 0 ax [770]) [1 *n_622(D)+0 S4 A32])) "../src/bnsolv.f":21 82 {*movsi_internal}
     (nil))
(insn 95 94 96 2 (set (reg:DI 0 ax [771])
        (sign_extend:DI (reg:SI 0 ax [orig:103 _17 ] [103]))) "../src/bnsolv.f":21 145 {*extendsidi2_rex64}
     (nil))
(insn 96 95 1526 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -144 [0xffffffffffffff70])) [2 ubound.17+0 S8 A64])
        (reg:DI 0 ax [771])) "../src/bnsolv.f":21 81 {*movdi_internal}
     (nil))
(insn 1526 96 97 2 (set (reg:DI 0 ax [orig:676 size.20_650 ] [676])
        (reg:DI 42 r13 [orig:675 stride.18_648 ] [675])) "../src/bnsolv.f":21 81 {*movdi_internal}
     (nil))
(insn 97 1526 99 2 (parallel [
            (set (reg:DI 0 ax [orig:676 size.20_650 ] [676])
                (mult:DI (reg:DI 0 ax [orig:676 size.20_650 ] [676])
                    (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                            (const_int -144 [0xffffffffffffff70])) [2 ubound.17+0 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":21 329 {*muldi3_1}
     (nil))
(insn 99 97 98 2 (set (reg:DI 1 dx [772])
        (const_int 0 [0])) "../src/bnsolv.f":21 81 {*movdi_internal}
     (nil))
(insn 98 99 100 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 0 ax [orig:676 size.20_650 ] [676])
            (const_int 0 [0]))) "../src/bnsolv.f":21 4 {*cmpdi_ccno_1}
     (nil))
(insn 100 98 103 2 (set (reg:DI 0 ax [orig:677 size.20_651 ] [677])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 0 ax [orig:676 size.20_650 ] [676])
            (reg:DI 1 dx [772]))) "../src/bnsolv.f":21 967 {*movdicc_noc}
     (nil))
(insn 103 100 104 2 (set (reg:DI 39 r10 [orig:105 _19 ] [105])
        (reg:DI 0 ax [orig:104 size.34_18 ] [104])) "../src/bnsolv.f":21 81 {*movdi_internal}
     (nil))
(insn 104 103 1528 2 (set (reg:DI 40 r11 [ _19+8 ])
        (const_int 0 [0])) "../src/bnsolv.f":21 81 {*movdi_internal}
     (nil))
(insn 1528 104 108 2 (set (reg:DI 0 ax [orig:107 _21 ] [107])
        (reg:DI 41 r12 [orig:673 stride.16_645 ] [673])) "../src/bnsolv.f":21 81 {*movdi_internal}
     (nil))
(insn 108 1528 109 2 (set (reg:DI 0 ax [orig:107 _21 ] [107])
        (not:DI (reg:DI 0 ax [orig:107 _21 ] [107]))) "../src/bnsolv.f":21 495 {*one_cmpldi2_1}
     (nil))
(insn 109 108 1531 2 (parallel [
            (set (reg:DI 0 ax [orig:107 _21 ] [107])
                (minus:DI (reg:DI 0 ax [orig:107 _21 ] [107])
                    (reg:DI 42 r13 [orig:675 stride.18_648 ] [675])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":21 274 {*subdi_1}
     (nil))
(insn 1531 109 110 2 (set (reg:DI 43 r14 [orig:681 offset.19_655 ] [681])
        (reg:DI 0 ax [orig:107 _21 ] [107])) "../src/bnsolv.f":21 81 {*movdi_internal}
     (nil))
(insn 110 1531 111 2 (set (reg/f:DI 0 ax [773])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -728 [0xfffffffffffffd28])) [11 nb+0 S8 A64])) "../src/bnsolv.f":21 81 {*movdi_internal}
     (nil))
(insn 111 110 112 2 (set (reg:SI 0 ax [orig:108 _22 ] [108])
        (mem:SI (reg/f:DI 0 ax [773]) [1 *nb_615(D)+0 S4 A32])) "../src/bnsolv.f":21 82 {*movsi_internal}
     (nil))
(insn 112 111 113 2 (set (reg:DI 0 ax [774])
        (sign_extend:DI (reg:SI 0 ax [orig:108 _22 ] [108]))) "../src/bnsolv.f":21 145 {*extendsidi2_rex64}
     (nil))
(insn 113 112 114 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -152 [0xffffffffffffff68])) [2 ubound.21+0 S8 A64])
        (reg:DI 0 ax [774])) "../src/bnsolv.f":21 81 {*movdi_internal}
     (nil))
(insn 114 113 116 2 (set (reg:DI 0 ax [orig:682 stride.23_657 ] [682])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -152 [0xffffffffffffff68])) [2 ubound.21+0 S8 A64])) "../src/bnsolv.f":21 81 {*movdi_internal}
     (nil))
(insn 116 114 115 2 (set (reg:DI 1 dx [775])
        (const_int 0 [0])) "../src/bnsolv.f":21 81 {*movdi_internal}
     (nil))
(insn 115 116 117 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 0 ax [orig:682 stride.23_657 ] [682])
            (const_int 0 [0]))) "../src/bnsolv.f":21 4 {*cmpdi_ccno_1}
     (nil))
(insn 117 115 1533 2 (set (reg:DI 1 dx [775])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 0 ax [orig:682 stride.23_657 ] [682])
            (reg:DI 1 dx [775]))) "../src/bnsolv.f":21 967 {*movdicc_noc}
     (nil))
(insn 1533 117 118 2 (set (reg:DI 37 r8 [orig:683 stride.23_658 ] [683])
        (reg:DI 1 dx [775])) "../src/bnsolv.f":21 81 {*movdi_internal}
     (nil))
(insn 118 1533 119 2 (set (reg/f:DI 0 ax [776])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 24 [0x18])) [11 nrmax+0 S8 A64])) "../src/bnsolv.f":21 81 {*movdi_internal}
     (nil))
(insn 119 118 120 2 (set (reg:SI 0 ax [orig:109 _23 ] [109])
        (mem:SI (reg/f:DI 0 ax [776]) [1 *nrmax_659(D)+0 S4 A32])) "../src/bnsolv.f":21 82 {*movsi_internal}
     (nil))
(insn 120 119 121 2 (set (reg:DI 0 ax [777])
        (sign_extend:DI (reg:SI 0 ax [orig:109 _23 ] [109]))) "../src/bnsolv.f":21 145 {*extendsidi2_rex64}
     (nil))
(insn 121 120 1534 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -160 [0xffffffffffffff60])) [2 ubound.22+0 S8 A64])
        (reg:DI 0 ax [777])) "../src/bnsolv.f":21 81 {*movdi_internal}
     (nil))
(insn 1534 121 122 2 (set (reg:DI 0 ax [orig:684 stride.25_661 ] [684])
        (reg:DI 37 r8 [orig:683 stride.23_658 ] [683])) "../src/bnsolv.f":21 81 {*movdi_internal}
     (nil))
(insn 122 1534 124 2 (parallel [
            (set (reg:DI 0 ax [orig:684 stride.25_661 ] [684])
                (mult:DI (reg:DI 0 ax [orig:684 stride.25_661 ] [684])
                    (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                            (const_int -160 [0xffffffffffffff60])) [2 ubound.22+0 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":21 329 {*muldi3_1}
     (nil))
(insn 124 122 123 2 (set (reg:DI 1 dx [778])
        (const_int 0 [0])) "../src/bnsolv.f":21 81 {*movdi_internal}
     (nil))
(insn 123 124 125 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 0 ax [orig:684 stride.25_661 ] [684])
            (const_int 0 [0]))) "../src/bnsolv.f":21 4 {*cmpdi_ccno_1}
     (nil))
(insn 125 123 1537 2 (set (reg:DI 1 dx [778])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 0 ax [orig:684 stride.25_661 ] [684])
            (reg:DI 1 dx [778]))) "../src/bnsolv.f":21 967 {*movdicc_noc}
     (nil))
(insn 1537 125 126 2 (set (reg:DI 38 r9 [orig:685 stride.25_662 ] [685])
        (reg:DI 1 dx [778])) "../src/bnsolv.f":21 81 {*movdi_internal}
     (nil))
(insn 126 1537 127 2 (set (reg/f:DI 0 ax [779])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -736 [0xfffffffffffffd20])) [11 n+0 S8 A64])) "../src/bnsolv.f":21 81 {*movdi_internal}
     (nil))
(insn 127 126 128 2 (set (reg:SI 0 ax [orig:110 _24 ] [110])
        (mem:SI (reg/f:DI 0 ax [779]) [1 *n_622(D)+0 S4 A32])) "../src/bnsolv.f":21 82 {*movsi_internal}
     (nil))
(insn 128 127 129 2 (set (reg:DI 0 ax [780])
        (sign_extend:DI (reg:SI 0 ax [orig:110 _24 ] [110]))) "../src/bnsolv.f":21 145 {*extendsidi2_rex64}
     (nil))
(insn 129 128 1538 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [2 ubound.24+0 S8 A64])
        (reg:DI 0 ax [780])) "../src/bnsolv.f":21 81 {*movdi_internal}
     (nil))
(insn 1538 129 130 2 (set (reg:DI 0 ax [orig:686 size.27_664 ] [686])
        (reg:DI 38 r9 [orig:685 stride.25_662 ] [685])) "../src/bnsolv.f":21 81 {*movdi_internal}
     (nil))
(insn 130 1538 132 2 (parallel [
            (set (reg:DI 0 ax [orig:686 size.27_664 ] [686])
                (mult:DI (reg:DI 0 ax [orig:686 size.27_664 ] [686])
                    (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                            (const_int -168 [0xffffffffffffff58])) [2 ubound.24+0 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":21 329 {*muldi3_1}
     (nil))
(insn 132 130 131 2 (set (reg:DI 1 dx [781])
        (const_int 0 [0])) "../src/bnsolv.f":21 81 {*movdi_internal}
     (nil))
(insn 131 132 133 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 0 ax [orig:686 size.27_664 ] [686])
            (const_int 0 [0]))) "../src/bnsolv.f":21 4 {*cmpdi_ccno_1}
     (nil))
(insn 133 131 136 2 (set (reg:DI 0 ax [orig:687 size.27_665 ] [687])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 0 ax [orig:686 size.27_664 ] [686])
            (reg:DI 1 dx [781]))) "../src/bnsolv.f":21 967 {*movdicc_noc}
     (nil))
(insn 136 133 137 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -752 [0xfffffffffffffd10])) [13 %sfp+-704 S8 A128])
        (reg:DI 0 ax [orig:111 size.36_25 ] [111])) "../src/bnsolv.f":21 81 {*movdi_internal}
     (nil))
(insn 137 136 1540 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -744 [0xfffffffffffffd18])) [13 %sfp+-696 S8 A64])
        (const_int 0 [0])) "../src/bnsolv.f":21 81 {*movdi_internal}
     (nil))
(insn 1540 137 141 2 (set (reg:DI 0 ax [orig:114 _28 ] [114])
        (reg:DI 37 r8 [orig:683 stride.23_658 ] [683])) "../src/bnsolv.f":21 81 {*movdi_internal}
     (nil))
(insn 141 1540 142 2 (set (reg:DI 0 ax [orig:114 _28 ] [114])
        (not:DI (reg:DI 0 ax [orig:114 _28 ] [114]))) "../src/bnsolv.f":21 495 {*one_cmpldi2_1}
     (nil))
(insn 142 141 1543 2 (parallel [
            (set (reg:DI 0 ax [orig:114 _28 ] [114])
                (minus:DI (reg:DI 0 ax [orig:114 _28 ] [114])
                    (reg:DI 38 r9 [orig:685 stride.25_662 ] [685])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":21 274 {*subdi_1}
     (nil))
(insn 1543 142 143 2 (set (reg:DI 39 r10 [orig:691 offset.26_669 ] [691])
        (reg:DI 0 ax [orig:114 _28 ] [114])) "../src/bnsolv.f":21 81 {*movdi_internal}
     (nil))
(insn 143 1543 144 2 (set (reg/f:DI 0 ax [782])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -736 [0xfffffffffffffd20])) [11 n+0 S8 A64])) "../src/bnsolv.f":37 81 {*movdi_internal}
     (nil))
(insn 144 143 1544 2 (set (reg:SI 0 ax [orig:692 _670 ] [692])
        (mem:SI (reg/f:DI 0 ax [782]) [1 *n_622(D)+0 S4 A32])) "../src/bnsolv.f":37 82 {*movsi_internal}
     (nil))
(insn 1544 144 145 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -752 [0xfffffffffffffd10])) [13 %sfp+-704 S4 A128])
        (reg:SI 0 ax [orig:692 _670 ] [692])) "../src/bnsolv.f":37 82 {*movsi_internal}
     (nil))
(insn 145 1544 1227 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [1 i+0 S4 A64])
        (const_int 1 [0x1])) "../src/bnsolv.f":37 82 {*movsi_internal}
     (nil))
;;  succ:       3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;;              70 [100.0%] 
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 692
;; lr  def 	 17 [flags] 115 693
(code_label 1227 145 146 3 46 (nil) [1 uses])
(note 146 1227 147 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 147 146 1545 3 (set (reg:SI 0 ax [orig:115 i.38_29 ] [115])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [1 i+0 S4 A64])) "../src/bnsolv.f":37 82 {*movsi_internal}
     (nil))
(note 1545 147 1571 3 NOTE_INSN_DELETED)
(note 1571 1545 148 3 NOTE_INSN_DELETED)
(insn 148 1571 149 3 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -752 [0xfffffffffffffd10])) [13 %sfp+-704 S4 A128])
            (reg:SI 0 ax [orig:115 i.38_29 ] [115]))) "../src/bnsolv.f":37 7 {*cmpsi_1}
     (nil))
(insn 149 148 150 3 (set (reg:QI 0 ax [orig:693 _672 ] [693])
        (lt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "../src/bnsolv.f":37 613 {*setcc_qi}
     (nil))
(insn 150 149 151 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:693 _672 ] [693])
            (const_int 0 [0]))) "../src/bnsolv.f":37 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 151 150 152 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1416)
            (pc))) "../src/bnsolv.f":37 617 {*jcc_1}
     (nil)
 -> 1416)
;;  succ:       84
;;              4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 116 117 783
(note 152 151 153 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 153 152 154 4 (set (reg:SI 0 ax [orig:116 i.39_30 ] [116])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [1 i+0 S4 A64])) "../src/bnsolv.f":39 82 {*movsi_internal}
     (nil))
(insn 154 153 155 4 (parallel [
            (set (reg:SI 0 ax [783])
                (plus:SI (reg:SI 0 ax [orig:116 i.39_30 ] [116])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":39 217 {*addsi_1}
     (nil))
(insn 155 154 156 4 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -172 [0xffffffffffffff54])) [1 im+0 S4 A32])
        (reg:SI 0 ax [783])) "../src/bnsolv.f":39 82 {*movsi_internal}
     (nil))
(insn 156 155 157 4 (set (reg:SI 0 ax [orig:117 i.40_31 ] [117])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [1 i+0 S4 A64])) "../src/bnsolv.f":42 82 {*movsi_internal}
     (nil))
(insn 157 156 158 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:117 i.40_31 ] [117])
            (const_int 1 [0x1]))) "../src/bnsolv.f":42 7 {*cmpsi_1}
     (nil))
(jump_insn 158 157 159 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1419)
            (pc))) "../src/bnsolv.f":42 617 {*jcc_1}
     (nil)
 -> 1419)
;;  succ:       85
;;              5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 694 784
(note 159 158 160 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 160 159 161 5 (set (reg/f:DI 0 ax [784])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -728 [0xfffffffffffffd28])) [11 nb+0 S8 A64])) "../src/bnsolv.f":45 81 {*movdi_internal}
     (nil))
(insn 161 160 162 5 (set (reg:SI 44 r15 [orig:694 _674 ] [694])
        (mem:SI (reg/f:DI 0 ax [784]) [1 *nb_615(D)+0 S4 A32])) "../src/bnsolv.f":45 82 {*movsi_internal}
     (nil))
(insn 162 161 311 5 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [1 k+0 S4 A32])
        (const_int 1 [0x1])) "../src/bnsolv.f":45 82 {*movsi_internal}
     (nil))
;;  succ:       6 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 694

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;;              16 [100.0%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 694
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 694
;; lr  def 	 17 [flags] 695
(code_label 311 162 163 6 10 (nil) [1 uses])
(note 163 311 164 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 164 163 165 6 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -56 [0xffffffffffffffc8])) [1 k+0 S4 A32])
            (reg:SI 44 r15 [orig:694 _674 ] [694]))) "../src/bnsolv.f":45 7 {*cmpsi_1}
     (nil))
(insn 165 164 166 6 (set (reg:QI 0 ax [orig:695 _676 ] [695])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "../src/bnsolv.f":45 613 {*setcc_qi}
     (nil))
(insn 166 165 167 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:695 _676 ] [695])
            (const_int 0 [0]))) "../src/bnsolv.f":45 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 167 166 168 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1419)
            (pc))) "../src/bnsolv.f":45 617 {*jcc_1}
     (nil)
 -> 1419)
;;  succ:       85
;;              7 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 694

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 694
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 696 785
(note 168 167 169 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 169 168 170 7 (set (reg/f:DI 0 ax [785])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -728 [0xfffffffffffffd28])) [11 nb+0 S8 A64])) "../src/bnsolv.f":46 81 {*movdi_internal}
     (nil))
(insn 170 169 171 7 (set (reg:SI 40 r11 [orig:696 _677 ] [696])
        (mem:SI (reg/f:DI 0 ax [785]) [1 *nb_615(D)+0 S4 A32])) "../src/bnsolv.f":46 82 {*movsi_internal}
     (nil))
(insn 171 170 305 7 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [1 j+0 S4 A32])
        (const_int 1 [0x1])) "../src/bnsolv.f":46 82 {*movsi_internal}
     (nil))
;;  succ:       8 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 694 696

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (RTL, MODIFIED)
;;  pred:       7 (FALLTHRU)
;;              15 [100.0%] 
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 694 696
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 696
;; lr  def 	 17 [flags] 697
(code_label 305 171 172 8 9 (nil) [1 uses])
(note 172 305 173 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 173 172 174 8 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -52 [0xffffffffffffffcc])) [1 j+0 S4 A32])
            (reg:SI 40 r11 [orig:696 _677 ] [696]))) "../src/bnsolv.f":46 7 {*cmpsi_1}
     (nil))
(insn 174 173 175 8 (set (reg:QI 0 ax [orig:697 _679 ] [697])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "../src/bnsolv.f":46 613 {*setcc_qi}
     (nil))
(insn 175 174 176 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:697 _679 ] [697])
            (const_int 0 [0]))) "../src/bnsolv.f":46 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 176 175 177 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1422)
            (pc))) "../src/bnsolv.f":46 617 {*jcc_1}
     (nil)
 -> 1422)
;;  succ:       86
;;              9 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 694 696

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 694 696
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 653 655 661
;; lr  def 	 17 [flags] 118 119 120 121 122 123 124 125 126 698 786 787 788 789 790
(note 177 176 178 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 178 177 179 9 (set (reg:SI 0 ax [orig:118 i.41_32 ] [118])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [1 i+0 S4 A64])) "../src/bnsolv.f":47 82 {*movsi_internal}
     (nil))
(insn 179 178 1546 9 (set (reg:DI 0 ax [orig:119 _33 ] [119])
        (sign_extend:DI (reg:SI 0 ax [orig:118 i.41_32 ] [118]))) "../src/bnsolv.f":47 145 {*extendsidi2_rex64}
     (nil))
(note 1546 179 1570 9 NOTE_INSN_DELETED)
(note 1570 1546 180 9 NOTE_INSN_DELETED)
(insn 180 1570 1547 9 (parallel [
            (set (reg:DI 0 ax [orig:120 _34 ] [120])
                (mult:DI (reg:DI 0 ax [orig:119 _33 ] [119])
                    (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                            (const_int -768 [0xfffffffffffffd00])) [13 %sfp+-720 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":47 329 {*muldi3_1}
     (nil))
(insn 1547 180 181 9 (set (reg:DI 2 cx [orig:661 offset.12_629 ] [661])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -776 [0xfffffffffffffcf8])) [13 %sfp+-728 S8 A64])) "../src/bnsolv.f":47 81 {*movdi_internal}
     (nil))
(insn 181 1547 182 9 (parallel [
            (set (reg:DI 1 dx [orig:121 _35 ] [121])
                (plus:DI (reg:DI 2 cx [orig:661 offset.12_629 ] [661])
                    (reg:DI 0 ax [orig:120 _34 ] [120])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":47 218 {*adddi_1}
     (nil))
(insn 182 181 183 9 (set (reg:SI 0 ax [786])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [1 j+0 S4 A32])) "../src/bnsolv.f":47 82 {*movsi_internal}
     (nil))
(insn 183 182 1548 9 (set (reg:DI 0 ax [orig:122 _36 ] [122])
        (sign_extend:DI (reg:SI 0 ax [786]))) "../src/bnsolv.f":47 145 {*extendsidi2_rex64}
     (nil))
(note 1548 183 1569 9 NOTE_INSN_DELETED)
(note 1569 1548 184 9 NOTE_INSN_DELETED)
(insn 184 1569 185 9 (parallel [
            (set (reg:DI 0 ax [orig:123 _37 ] [123])
                (mult:DI (reg:DI 0 ax [orig:122 _36 ] [122])
                    (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                            (const_int -760 [0xfffffffffffffd08])) [13 %sfp+-712 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":47 329 {*muldi3_1}
     (nil))
(insn 185 184 186 9 (parallel [
            (set (reg:DI 1 dx [orig:124 _38 ] [124])
                (plus:DI (reg:DI 1 dx [orig:121 _35 ] [121])
                    (reg:DI 0 ax [orig:123 _37 ] [123])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":47 218 {*adddi_1}
     (nil))
(insn 186 185 187 9 (set (reg:SI 0 ax [787])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [1 k+0 S4 A32])) "../src/bnsolv.f":47 82 {*movsi_internal}
     (nil))
(insn 187 186 188 9 (set (reg:DI 0 ax [orig:125 _39 ] [125])
        (sign_extend:DI (reg:SI 0 ax [787]))) "../src/bnsolv.f":47 145 {*extendsidi2_rex64}
     (nil))
(insn 188 187 189 9 (parallel [
            (set (reg:DI 1 dx [orig:126 _40 ] [126])
                (plus:DI (reg:DI 1 dx [orig:124 _38 ] [124])
                    (reg:DI 0 ax [orig:125 _39 ] [125])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":47 218 {*adddi_1}
     (nil))
(insn 189 188 190 9 (set (reg/f:DI 0 ax [788])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -704 [0xfffffffffffffd40])) [10 b+0 S8 A64])) "../src/bnsolv.f":47 81 {*movdi_internal}
     (nil))
(insn 190 189 191 9 (set (reg:SF 21 xmm0 [789])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:126 _40 ] [126])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [788])) [3 *b_680(D) S4 A32])) "../src/bnsolv.f":47 127 {*movsf_internal}
     (nil))
(insn 191 190 192 9 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -176 [0xffffffffffffff50])) [3 btmp+0 S4 A32])
        (reg:SF 21 xmm0 [789])) "../src/bnsolv.f":47 127 {*movsf_internal}
     (nil))
(insn 192 191 193 9 (set (reg/f:DI 0 ax [790])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -728 [0xfffffffffffffd28])) [11 nb+0 S8 A64])) "../src/bnsolv.f":48 81 {*movdi_internal}
     (nil))
(insn 193 192 194 9 (set (reg:SI 2 cx [orig:698 _682 ] [698])
        (mem:SI (reg/f:DI 0 ax [790]) [1 *nb_615(D)+0 S4 A32])) "../src/bnsolv.f":48 82 {*movsi_internal}
     (nil))
(insn 194 193 243 9 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -68 [0xffffffffffffffbc])) [1 l+0 S4 A32])
        (const_int 1 [0x1])) "../src/bnsolv.f":48 82 {*movsi_internal}
     (nil))
;;  succ:       10 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 694 696 698

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (RTL, MODIFIED)
;;  pred:       9 (FALLTHRU)
;;              11 [100.0%] 
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 694 696 698
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 698
;; lr  def 	 17 [flags] 699
(code_label 243 194 195 10 6 (nil) [1 uses])
(note 195 243 196 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 196 195 197 10 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -68 [0xffffffffffffffbc])) [1 l+0 S4 A32])
            (reg:SI 2 cx [orig:698 _682 ] [698]))) "../src/bnsolv.f":48 7 {*cmpsi_1}
     (nil))
(insn 197 196 198 10 (set (reg:QI 0 ax [orig:699 _684 ] [699])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "../src/bnsolv.f":48 613 {*setcc_qi}
     (nil))
(insn 198 197 199 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:699 _684 ] [699])
            (const_int 0 [0]))) "../src/bnsolv.f":48 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 199 198 200 10 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1425)
            (pc))) "../src/bnsolv.f":48 617 {*jcc_1}
     (nil)
 -> 1425)
;;  succ:       87
;;              11 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 694 696 698

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 87, flags: (RTL, MODIFIED)
;;  pred:       10 (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 694 696 698
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681
;; lr  def 	 17 [flags] 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 791 792 793 794 795 796 797 798 799 800
(note 200 199 201 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 201 200 202 11 (set (reg:SI 0 ax [orig:127 i.42_41 ] [127])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [1 i+0 S4 A64])) "../src/bnsolv.f":49 82 {*movsi_internal}
     (nil))
(insn 202 201 203 11 (set (reg:DI 0 ax [orig:128 _42 ] [128])
        (sign_extend:DI (reg:SI 0 ax [orig:127 i.42_41 ] [127]))) "../src/bnsolv.f":49 145 {*extendsidi2_rex64}
     (nil))
(insn 203 202 204 11 (parallel [
            (set (reg:DI 0 ax [orig:129 _43 ] [129])
                (mult:DI (reg:DI 0 ax [orig:128 _42 ] [128])
                    (reg:DI 5 di [orig:665 stride.4_635 ] [665])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":49 329 {*muldi3_1}
     (nil))
(insn 204 203 205 11 (parallel [
            (set (reg:DI 1 dx [orig:130 _44 ] [130])
                (plus:DI (reg:DI 3 bx [orig:671 offset.5_642 ] [671])
                    (reg:DI 0 ax [orig:129 _43 ] [129])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":49 218 {*adddi_1}
     (nil))
(insn 205 204 206 11 (set (reg:SI 0 ax [791])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -68 [0xffffffffffffffbc])) [1 l+0 S4 A32])) "../src/bnsolv.f":49 82 {*movsi_internal}
     (nil))
(insn 206 205 207 11 (set (reg:DI 0 ax [orig:131 _45 ] [131])
        (sign_extend:DI (reg:SI 0 ax [791]))) "../src/bnsolv.f":49 145 {*extendsidi2_rex64}
     (nil))
(insn 207 206 208 11 (parallel [
            (set (reg:DI 0 ax [orig:132 _46 ] [132])
                (mult:DI (reg:DI 0 ax [orig:131 _45 ] [131])
                    (reg:DI 4 si [orig:663 stride.2_632 ] [663])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":49 329 {*muldi3_1}
     (nil))
(insn 208 207 209 11 (parallel [
            (set (reg:DI 1 dx [orig:133 _47 ] [133])
                (plus:DI (reg:DI 1 dx [orig:130 _44 ] [130])
                    (reg:DI 0 ax [orig:132 _46 ] [132])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":49 218 {*adddi_1}
     (nil))
(insn 209 208 210 11 (set (reg:SI 0 ax [792])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [1 k+0 S4 A32])) "../src/bnsolv.f":49 82 {*movsi_internal}
     (nil))
(insn 210 209 211 11 (set (reg:DI 0 ax [orig:134 _48 ] [134])
        (sign_extend:DI (reg:SI 0 ax [792]))) "../src/bnsolv.f":49 145 {*extendsidi2_rex64}
     (nil))
(insn 211 210 212 11 (parallel [
            (set (reg:DI 1 dx [orig:135 _49 ] [135])
                (plus:DI (reg:DI 1 dx [orig:133 _47 ] [133])
                    (reg:DI 0 ax [orig:134 _48 ] [134])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":49 218 {*adddi_1}
     (nil))
(insn 212 211 213 11 (set (reg/f:DI 0 ax [793])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -696 [0xfffffffffffffd48])) [10 a+0 S8 A64])) "../src/bnsolv.f":49 81 {*movdi_internal}
     (nil))
(insn 213 212 214 11 (set (reg:SF 22 xmm1 [orig:136 _50 ] [136])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:135 _49 ] [135])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [793])) [3 *a_685(D) S4 A32])) "../src/bnsolv.f":49 127 {*movsf_internal}
     (nil))
(insn 214 213 215 11 (set (reg:SI 0 ax [794])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -172 [0xffffffffffffff54])) [1 im+0 S4 A32])) "../src/bnsolv.f":49 82 {*movsi_internal}
     (nil))
(insn 215 214 216 11 (set (reg:DI 0 ax [orig:137 _51 ] [137])
        (sign_extend:DI (reg:SI 0 ax [794]))) "../src/bnsolv.f":49 145 {*extendsidi2_rex64}
     (nil))
(insn 216 215 217 11 (parallel [
            (set (reg:DI 0 ax [orig:138 _52 ] [138])
                (mult:DI (reg:DI 0 ax [orig:137 _51 ] [137])
                    (reg:DI 42 r13 [orig:675 stride.18_648 ] [675])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":49 329 {*muldi3_1}
     (nil))
(insn 217 216 218 11 (parallel [
            (set (reg:DI 1 dx [orig:139 _53 ] [139])
                (plus:DI (reg:DI 43 r14 [orig:681 offset.19_655 ] [681])
                    (reg:DI 0 ax [orig:138 _52 ] [138])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":49 218 {*adddi_1}
     (nil))
(insn 218 217 219 11 (set (reg:SI 0 ax [795])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -68 [0xffffffffffffffbc])) [1 l+0 S4 A32])) "../src/bnsolv.f":49 82 {*movsi_internal}
     (nil))
(insn 219 218 220 11 (set (reg:DI 0 ax [orig:140 _54 ] [140])
        (sign_extend:DI (reg:SI 0 ax [795]))) "../src/bnsolv.f":49 145 {*extendsidi2_rex64}
     (nil))
(insn 220 219 221 11 (parallel [
            (set (reg:DI 0 ax [orig:141 _55 ] [141])
                (mult:DI (reg:DI 0 ax [orig:140 _54 ] [140])
                    (reg:DI 41 r12 [orig:673 stride.16_645 ] [673])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":49 329 {*muldi3_1}
     (nil))
(insn 221 220 222 11 (parallel [
            (set (reg:DI 1 dx [orig:142 _56 ] [142])
                (plus:DI (reg:DI 1 dx [orig:139 _53 ] [139])
                    (reg:DI 0 ax [orig:141 _55 ] [141])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":49 218 {*adddi_1}
     (nil))
(insn 222 221 223 11 (set (reg:SI 0 ax [796])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [1 j+0 S4 A32])) "../src/bnsolv.f":49 82 {*movsi_internal}
     (nil))
(insn 223 222 224 11 (set (reg:DI 0 ax [orig:143 _57 ] [143])
        (sign_extend:DI (reg:SI 0 ax [796]))) "../src/bnsolv.f":49 145 {*extendsidi2_rex64}
     (nil))
(insn 224 223 225 11 (parallel [
            (set (reg:DI 1 dx [orig:144 _58 ] [144])
                (plus:DI (reg:DI 1 dx [orig:142 _56 ] [142])
                    (reg:DI 0 ax [orig:143 _57 ] [143])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":49 218 {*adddi_1}
     (nil))
(insn 225 224 226 11 (set (reg/f:DI 0 ax [797])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -712 [0xfffffffffffffd38])) [10 c+0 S8 A64])) "../src/bnsolv.f":49 81 {*movdi_internal}
     (nil))
(insn 226 225 227 11 (set (reg:SF 21 xmm0 [orig:145 _59 ] [145])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:144 _58 ] [144])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [797])) [3 *c_686(D) S4 A32])) "../src/bnsolv.f":49 127 {*movsf_internal}
     (nil))
(insn 227 226 228 11 (set (reg:SF 21 xmm0 [orig:146 _60 ] [146])
        (mult:SF (reg:SF 21 xmm0 [orig:145 _59 ] [145])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -176 [0xffffffffffffff50])) [3 btmp+0 S4 A32]))) "../src/bnsolv.f":49 802 {*fop_sf_comm}
     (nil))
(insn 228 227 229 11 (set (reg:SI 0 ax [orig:147 i.43_61 ] [147])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [1 i+0 S4 A64])) "../src/bnsolv.f":49 82 {*movsi_internal}
     (nil))
(insn 229 228 230 11 (set (reg:DI 0 ax [orig:148 _62 ] [148])
        (sign_extend:DI (reg:SI 0 ax [orig:147 i.43_61 ] [147]))) "../src/bnsolv.f":49 145 {*extendsidi2_rex64}
     (nil))
(insn 230 229 231 11 (parallel [
            (set (reg:DI 0 ax [orig:149 _63 ] [149])
                (mult:DI (reg:DI 0 ax [orig:148 _62 ] [148])
                    (reg:DI 5 di [orig:665 stride.4_635 ] [665])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":49 329 {*muldi3_1}
     (nil))
(insn 231 230 232 11 (parallel [
            (set (reg:DI 1 dx [orig:150 _64 ] [150])
                (plus:DI (reg:DI 3 bx [orig:671 offset.5_642 ] [671])
                    (reg:DI 0 ax [orig:149 _63 ] [149])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":49 218 {*adddi_1}
     (nil))
(insn 232 231 233 11 (set (reg:SI 0 ax [798])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -68 [0xffffffffffffffbc])) [1 l+0 S4 A32])) "../src/bnsolv.f":49 82 {*movsi_internal}
     (nil))
(insn 233 232 234 11 (set (reg:DI 0 ax [orig:151 _65 ] [151])
        (sign_extend:DI (reg:SI 0 ax [798]))) "../src/bnsolv.f":49 145 {*extendsidi2_rex64}
     (nil))
(insn 234 233 235 11 (parallel [
            (set (reg:DI 0 ax [orig:152 _66 ] [152])
                (mult:DI (reg:DI 0 ax [orig:151 _65 ] [151])
                    (reg:DI 4 si [orig:663 stride.2_632 ] [663])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":49 329 {*muldi3_1}
     (nil))
(insn 235 234 236 11 (parallel [
            (set (reg:DI 1 dx [orig:153 _67 ] [153])
                (plus:DI (reg:DI 1 dx [orig:150 _64 ] [150])
                    (reg:DI 0 ax [orig:152 _66 ] [152])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":49 218 {*adddi_1}
     (nil))
(insn 236 235 237 11 (set (reg:SI 0 ax [799])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [1 k+0 S4 A32])) "../src/bnsolv.f":49 82 {*movsi_internal}
     (nil))
(insn 237 236 238 11 (set (reg:DI 0 ax [orig:154 _68 ] [154])
        (sign_extend:DI (reg:SI 0 ax [799]))) "../src/bnsolv.f":49 145 {*extendsidi2_rex64}
     (nil))
(insn 238 237 239 11 (parallel [
            (set (reg:DI 1 dx [orig:155 _69 ] [155])
                (plus:DI (reg:DI 1 dx [orig:153 _67 ] [153])
                    (reg:DI 0 ax [orig:154 _68 ] [154])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":49 218 {*adddi_1}
     (nil))
(insn 239 238 1550 11 (set (reg:SF 22 xmm1 [orig:136 _50 ] [136])
        (minus:SF (reg:SF 22 xmm1 [orig:136 _50 ] [136])
            (reg:SF 21 xmm0 [orig:146 _60 ] [146]))) "../src/bnsolv.f":49 805 {*fop_sf_1}
     (nil))
(insn 1550 239 240 11 (set (reg:SF 21 xmm0 [orig:156 _70 ] [156])
        (reg:SF 22 xmm1 [orig:136 _50 ] [136])) "../src/bnsolv.f":49 127 {*movsf_internal}
     (nil))
(insn 240 1550 241 11 (set (reg/f:DI 0 ax [800])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -696 [0xfffffffffffffd48])) [10 a+0 S8 A64])) "../src/bnsolv.f":49 81 {*movdi_internal}
     (nil))
(insn 241 240 242 11 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:155 _69 ] [155])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [800])) [3 *a_685(D) S4 A32])
        (reg:SF 21 xmm0 [orig:156 _70 ] [156])) "../src/bnsolv.f":49 127 {*movsf_internal}
     (nil))
(insn 242 241 1367 11 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -68 [0xffffffffffffffbc])) [1 l+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -68 [0xffffffffffffffbc])) [1 l+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":48 217 {*addsi_1}
     (nil))
(jump_insn 1367 242 1368 11 (set (pc)
        (label_ref 243)) "../src/bnsolv.f":48 649 {jump}
     (nil)
 -> 243)
;;  succ:       10 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 694 696 698

(barrier 1368 1367 1425)
;; basic block 87, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 12, flags: (RTL, MODIFIED)
;;  pred:       10
;; bb 87 artificial_defs: { }
;; bb 87 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 694 696
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 1425 1368 1424 87 61 (nil) [1 uses])
(note 1424 1425 1426 87 [bb 87] NOTE_INSN_BASIC_BLOCK)
(insn 1426 1424 246 87 (const_int 0 [0]) "../src/bnsolv.f":50 682 {nop}
     (nil))
;;  succ:       12 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 694 696

;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 87, next block 13, flags: (RTL, MODIFIED)
;;  pred:       87 [100.0%]  (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 694 696
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 700 801
(code_label 246 1426 247 12 5 (nil) [0 uses])
(note 247 246 248 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 248 247 249 12 (set (reg/f:DI 0 ax [801])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 16 [0x10])) [11 nrhs+0 S8 A64])) "../src/bnsolv.f":51 81 {*movdi_internal}
     (nil))
(insn 249 248 250 12 (set (reg:SI 2 cx [orig:700 _690 ] [700])
        (mem:SI (reg/f:DI 0 ax [801]) [1 *nrhs_689(D)+0 S4 A32])) "../src/bnsolv.f":51 82 {*movsi_internal}
     (nil))
(insn 250 249 299 12 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -68 [0xffffffffffffffbc])) [1 l+0 S4 A32])
        (const_int 1 [0x1])) "../src/bnsolv.f":51 82 {*movsi_internal}
     (nil))
;;  succ:       13 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 694 696 700

;; basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 14, flags: (RTL, MODIFIED)
;;  pred:       12 (FALLTHRU)
;;              14 [100.0%] 
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 694 696 700
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 700
;; lr  def 	 17 [flags] 701
(code_label 299 250 251 13 8 (nil) [1 uses])
(note 251 299 252 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 252 251 253 13 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -68 [0xffffffffffffffbc])) [1 l+0 S4 A32])
            (reg:SI 2 cx [orig:700 _690 ] [700]))) "../src/bnsolv.f":51 7 {*cmpsi_1}
     (nil))
(insn 253 252 254 13 (set (reg:QI 0 ax [orig:701 _692 ] [701])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "../src/bnsolv.f":51 613 {*setcc_qi}
     (nil))
(insn 254 253 255 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:701 _692 ] [701])
            (const_int 0 [0]))) "../src/bnsolv.f":51 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 255 254 256 13 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1428)
            (pc))) "../src/bnsolv.f":51 617 {*jcc_1}
     (nil)
 -> 1428)
;;  succ:       88
;;              14 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 694 696 700

;; basic block 14, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 13, next block 88, flags: (RTL, MODIFIED)
;;  pred:       13 (FALLTHRU)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 694 696 700
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 683 685 691
;; lr  def 	 17 [flags] 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 802 803 804 805 806 807 808 809 810 811
(note 256 255 257 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 257 256 258 14 (set (reg:SI 0 ax [orig:157 i.44_71 ] [157])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [1 i+0 S4 A64])) "../src/bnsolv.f":52 82 {*movsi_internal}
     (nil))
(insn 258 257 259 14 (set (reg:DI 0 ax [orig:158 _72 ] [158])
        (sign_extend:DI (reg:SI 0 ax [orig:157 i.44_71 ] [157]))) "../src/bnsolv.f":52 145 {*extendsidi2_rex64}
     (nil))
(insn 259 258 260 14 (parallel [
            (set (reg:DI 0 ax [orig:159 _73 ] [159])
                (mult:DI (reg:DI 0 ax [orig:158 _72 ] [158])
                    (reg:DI 38 r9 [orig:685 stride.25_662 ] [685])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":52 329 {*muldi3_1}
     (nil))
(insn 260 259 261 14 (parallel [
            (set (reg:DI 1 dx [orig:160 _74 ] [160])
                (plus:DI (reg:DI 39 r10 [orig:691 offset.26_669 ] [691])
                    (reg:DI 0 ax [orig:159 _73 ] [159])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":52 218 {*adddi_1}
     (nil))
(insn 261 260 262 14 (set (reg:SI 0 ax [802])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -68 [0xffffffffffffffbc])) [1 l+0 S4 A32])) "../src/bnsolv.f":52 82 {*movsi_internal}
     (nil))
(insn 262 261 263 14 (set (reg:DI 0 ax [orig:161 _75 ] [161])
        (sign_extend:DI (reg:SI 0 ax [802]))) "../src/bnsolv.f":52 145 {*extendsidi2_rex64}
     (nil))
(insn 263 262 264 14 (parallel [
            (set (reg:DI 0 ax [orig:162 _76 ] [162])
                (mult:DI (reg:DI 0 ax [orig:161 _75 ] [161])
                    (reg:DI 37 r8 [orig:683 stride.23_658 ] [683])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":52 329 {*muldi3_1}
     (nil))
(insn 264 263 265 14 (parallel [
            (set (reg:DI 1 dx [orig:163 _77 ] [163])
                (plus:DI (reg:DI 1 dx [orig:160 _74 ] [160])
                    (reg:DI 0 ax [orig:162 _76 ] [162])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":52 218 {*adddi_1}
     (nil))
(insn 265 264 266 14 (set (reg:SI 0 ax [803])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [1 k+0 S4 A32])) "../src/bnsolv.f":52 82 {*movsi_internal}
     (nil))
(insn 266 265 267 14 (set (reg:DI 0 ax [orig:164 _78 ] [164])
        (sign_extend:DI (reg:SI 0 ax [803]))) "../src/bnsolv.f":52 145 {*extendsidi2_rex64}
     (nil))
(insn 267 266 268 14 (parallel [
            (set (reg:DI 1 dx [orig:165 _79 ] [165])
                (plus:DI (reg:DI 1 dx [orig:163 _77 ] [163])
                    (reg:DI 0 ax [orig:164 _78 ] [164])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":52 218 {*adddi_1}
     (nil))
(insn 268 267 269 14 (set (reg/f:DI 0 ax [804])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -720 [0xfffffffffffffd30])) [10 r+0 S8 A64])) "../src/bnsolv.f":52 81 {*movdi_internal}
     (nil))
(insn 269 268 270 14 (set (reg:SF 22 xmm1 [orig:166 _80 ] [166])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:165 _79 ] [165])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [804])) [3 *r_693(D) S4 A32])) "../src/bnsolv.f":52 127 {*movsf_internal}
     (nil))
(insn 270 269 271 14 (set (reg:SI 0 ax [805])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -172 [0xffffffffffffff54])) [1 im+0 S4 A32])) "../src/bnsolv.f":52 82 {*movsi_internal}
     (nil))
(insn 271 270 272 14 (set (reg:DI 0 ax [orig:167 _81 ] [167])
        (sign_extend:DI (reg:SI 0 ax [805]))) "../src/bnsolv.f":52 145 {*extendsidi2_rex64}
     (nil))
(insn 272 271 273 14 (parallel [
            (set (reg:DI 0 ax [orig:168 _82 ] [168])
                (mult:DI (reg:DI 0 ax [orig:167 _81 ] [167])
                    (reg:DI 38 r9 [orig:685 stride.25_662 ] [685])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":52 329 {*muldi3_1}
     (nil))
(insn 273 272 274 14 (parallel [
            (set (reg:DI 1 dx [orig:169 _83 ] [169])
                (plus:DI (reg:DI 39 r10 [orig:691 offset.26_669 ] [691])
                    (reg:DI 0 ax [orig:168 _82 ] [168])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":52 218 {*adddi_1}
     (nil))
(insn 274 273 275 14 (set (reg:SI 0 ax [806])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -68 [0xffffffffffffffbc])) [1 l+0 S4 A32])) "../src/bnsolv.f":52 82 {*movsi_internal}
     (nil))
(insn 275 274 276 14 (set (reg:DI 0 ax [orig:170 _84 ] [170])
        (sign_extend:DI (reg:SI 0 ax [806]))) "../src/bnsolv.f":52 145 {*extendsidi2_rex64}
     (nil))
(insn 276 275 277 14 (parallel [
            (set (reg:DI 0 ax [orig:171 _85 ] [171])
                (mult:DI (reg:DI 0 ax [orig:170 _84 ] [170])
                    (reg:DI 37 r8 [orig:683 stride.23_658 ] [683])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":52 329 {*muldi3_1}
     (nil))
(insn 277 276 278 14 (parallel [
            (set (reg:DI 1 dx [orig:172 _86 ] [172])
                (plus:DI (reg:DI 1 dx [orig:169 _83 ] [169])
                    (reg:DI 0 ax [orig:171 _85 ] [171])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":52 218 {*adddi_1}
     (nil))
(insn 278 277 279 14 (set (reg:SI 0 ax [807])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [1 j+0 S4 A32])) "../src/bnsolv.f":52 82 {*movsi_internal}
     (nil))
(insn 279 278 280 14 (set (reg:DI 0 ax [orig:173 _87 ] [173])
        (sign_extend:DI (reg:SI 0 ax [807]))) "../src/bnsolv.f":52 145 {*extendsidi2_rex64}
     (nil))
(insn 280 279 281 14 (parallel [
            (set (reg:DI 1 dx [orig:174 _88 ] [174])
                (plus:DI (reg:DI 1 dx [orig:172 _86 ] [172])
                    (reg:DI 0 ax [orig:173 _87 ] [173])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":52 218 {*adddi_1}
     (nil))
(insn 281 280 282 14 (set (reg/f:DI 0 ax [808])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -720 [0xfffffffffffffd30])) [10 r+0 S8 A64])) "../src/bnsolv.f":52 81 {*movdi_internal}
     (nil))
(insn 282 281 283 14 (set (reg:SF 21 xmm0 [orig:175 _89 ] [175])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:174 _88 ] [174])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [808])) [3 *r_693(D) S4 A32])) "../src/bnsolv.f":52 127 {*movsf_internal}
     (nil))
(insn 283 282 284 14 (set (reg:SF 21 xmm0 [orig:176 _90 ] [176])
        (mult:SF (reg:SF 21 xmm0 [orig:175 _89 ] [175])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -176 [0xffffffffffffff50])) [3 btmp+0 S4 A32]))) "../src/bnsolv.f":52 802 {*fop_sf_comm}
     (nil))
(insn 284 283 285 14 (set (reg:SI 0 ax [orig:177 i.45_91 ] [177])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [1 i+0 S4 A64])) "../src/bnsolv.f":52 82 {*movsi_internal}
     (nil))
(insn 285 284 286 14 (set (reg:DI 0 ax [orig:178 _92 ] [178])
        (sign_extend:DI (reg:SI 0 ax [orig:177 i.45_91 ] [177]))) "../src/bnsolv.f":52 145 {*extendsidi2_rex64}
     (nil))
(insn 286 285 287 14 (parallel [
            (set (reg:DI 0 ax [orig:179 _93 ] [179])
                (mult:DI (reg:DI 0 ax [orig:178 _92 ] [178])
                    (reg:DI 38 r9 [orig:685 stride.25_662 ] [685])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":52 329 {*muldi3_1}
     (nil))
(insn 287 286 288 14 (parallel [
            (set (reg:DI 1 dx [orig:180 _94 ] [180])
                (plus:DI (reg:DI 39 r10 [orig:691 offset.26_669 ] [691])
                    (reg:DI 0 ax [orig:179 _93 ] [179])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":52 218 {*adddi_1}
     (nil))
(insn 288 287 289 14 (set (reg:SI 0 ax [809])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -68 [0xffffffffffffffbc])) [1 l+0 S4 A32])) "../src/bnsolv.f":52 82 {*movsi_internal}
     (nil))
(insn 289 288 290 14 (set (reg:DI 0 ax [orig:181 _95 ] [181])
        (sign_extend:DI (reg:SI 0 ax [809]))) "../src/bnsolv.f":52 145 {*extendsidi2_rex64}
     (nil))
(insn 290 289 291 14 (parallel [
            (set (reg:DI 0 ax [orig:182 _96 ] [182])
                (mult:DI (reg:DI 0 ax [orig:181 _95 ] [181])
                    (reg:DI 37 r8 [orig:683 stride.23_658 ] [683])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":52 329 {*muldi3_1}
     (nil))
(insn 291 290 292 14 (parallel [
            (set (reg:DI 1 dx [orig:183 _97 ] [183])
                (plus:DI (reg:DI 1 dx [orig:180 _94 ] [180])
                    (reg:DI 0 ax [orig:182 _96 ] [182])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":52 218 {*adddi_1}
     (nil))
(insn 292 291 293 14 (set (reg:SI 0 ax [810])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [1 k+0 S4 A32])) "../src/bnsolv.f":52 82 {*movsi_internal}
     (nil))
(insn 293 292 294 14 (set (reg:DI 0 ax [orig:184 _98 ] [184])
        (sign_extend:DI (reg:SI 0 ax [810]))) "../src/bnsolv.f":52 145 {*extendsidi2_rex64}
     (nil))
(insn 294 293 295 14 (parallel [
            (set (reg:DI 1 dx [orig:185 _99 ] [185])
                (plus:DI (reg:DI 1 dx [orig:183 _97 ] [183])
                    (reg:DI 0 ax [orig:184 _98 ] [184])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":52 218 {*adddi_1}
     (nil))
(insn 295 294 1552 14 (set (reg:SF 22 xmm1 [orig:166 _80 ] [166])
        (minus:SF (reg:SF 22 xmm1 [orig:166 _80 ] [166])
            (reg:SF 21 xmm0 [orig:176 _90 ] [176]))) "../src/bnsolv.f":52 805 {*fop_sf_1}
     (nil))
(insn 1552 295 296 14 (set (reg:SF 21 xmm0 [orig:186 _100 ] [186])
        (reg:SF 22 xmm1 [orig:166 _80 ] [166])) "../src/bnsolv.f":52 127 {*movsf_internal}
     (nil))
(insn 296 1552 297 14 (set (reg/f:DI 0 ax [811])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -720 [0xfffffffffffffd30])) [10 r+0 S8 A64])) "../src/bnsolv.f":52 81 {*movdi_internal}
     (nil))
(insn 297 296 298 14 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:185 _99 ] [185])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [811])) [3 *r_693(D) S4 A32])
        (reg:SF 21 xmm0 [orig:186 _100 ] [186])) "../src/bnsolv.f":52 127 {*movsf_internal}
     (nil))
(insn 298 297 1369 14 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -68 [0xffffffffffffffbc])) [1 l+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -68 [0xffffffffffffffbc])) [1 l+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":51 217 {*addsi_1}
     (nil))
(jump_insn 1369 298 1370 14 (set (pc)
        (label_ref 299)) "../src/bnsolv.f":51 649 {jump}
     (nil)
 -> 299)
;;  succ:       13 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 694 696 700

(barrier 1370 1369 1428)
;; basic block 88, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 14, next block 15, flags: (RTL, MODIFIED)
;;  pred:       13
;; bb 88 artificial_defs: { }
;; bb 88 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 694 696
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 1428 1370 1427 88 62 (nil) [1 uses])
(note 1427 1428 1429 88 [bb 88] NOTE_INSN_BASIC_BLOCK)
(insn 1429 1427 302 88 (const_int 0 [0]) "../src/bnsolv.f":53 682 {nop}
     (nil))
;;  succ:       15 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 694 696

;; basic block 15, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 88, next block 86, flags: (RTL, MODIFIED)
;;  pred:       88 [100.0%]  (FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 694 696
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 302 1429 303 15 7 (nil) [0 uses])
(note 303 302 304 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 304 303 1371 15 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -52 [0xffffffffffffffcc])) [1 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -52 [0xffffffffffffffcc])) [1 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":46 217 {*addsi_1}
     (nil))
(jump_insn 1371 304 1372 15 (set (pc)
        (label_ref 305)) "../src/bnsolv.f":46 649 {jump}
     (nil)
 -> 305)
;;  succ:       8 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 694 696

(barrier 1372 1371 1422)
;; basic block 86, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 15, next block 16, flags: (RTL, MODIFIED)
;;  pred:       8
;; bb 86 artificial_defs: { }
;; bb 86 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 694
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 1422 1372 1421 86 60 (nil) [1 uses])
(note 1421 1422 1423 86 [bb 86] NOTE_INSN_BASIC_BLOCK)
(insn 1423 1421 308 86 (const_int 0 [0]) "../src/bnsolv.f":54 682 {nop}
     (nil))
;;  succ:       16 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 694

;; basic block 16, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 86, next block 85, flags: (RTL, MODIFIED)
;;  pred:       86 [100.0%]  (FALLTHRU)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 694
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 308 1423 309 16 4 (nil) [0 uses])
(note 309 308 310 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 310 309 1373 16 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -56 [0xffffffffffffffc8])) [1 k+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -56 [0xffffffffffffffc8])) [1 k+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":45 217 {*addsi_1}
     (nil))
(jump_insn 1373 310 1374 16 (set (pc)
        (label_ref 311)) "../src/bnsolv.f":45 649 {jump}
     (nil)
 -> 311)
;;  succ:       6 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 694

(barrier 1374 1373 1419)
;; basic block 85, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 16, next block 17, flags: (RTL, MODIFIED)
;;  pred:       4
;;              6
;; bb 85 artificial_defs: { }
;; bb 85 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 1419 1374 1418 85 59 (nil) [2 uses])
(note 1418 1419 1420 85 [bb 85] NOTE_INSN_BASIC_BLOCK)
(insn 1420 1418 314 85 (const_int 0 [0]) "../src/bnsolv.f":55 682 {nop}
     (nil))
;;  succ:       17 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691

;; basic block 17, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 85, next block 18, flags: (RTL, MODIFIED)
;;  pred:       85 [100.0%]  (FALLTHRU)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 187 702 812
(code_label 314 1420 315 17 3 (nil) [0 uses])
(note 315 314 316 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 316 315 317 17 (set (reg/f:DI 0 ax [812])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -728 [0xfffffffffffffd28])) [11 nb+0 S8 A64])) "../src/bnsolv.f":61 81 {*movdi_internal}
     (nil))
(insn 317 316 318 17 (set (reg:SI 0 ax [orig:187 _101 ] [187])
        (mem:SI (reg/f:DI 0 ax [812]) [1 *nb_615(D)+0 S4 A32])) "../src/bnsolv.f":61 82 {*movsi_internal}
     (nil))
(insn 318 317 319 17 (parallel [
            (set (reg:SI 44 r15 [orig:702 _698 ] [702])
                (plus:SI (reg:SI 0 ax [orig:187 _101 ] [187])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":61 217 {*addsi_1}
     (nil))
(insn 319 318 896 17 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -60 [0xffffffffffffffc4])) [1 kpiv+0 S4 A32])
        (const_int 1 [0x1])) "../src/bnsolv.f":61 82 {*movsi_internal}
     (nil))
;;  succ:       18 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 702

;; basic block 18, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 17, next block 19, flags: (RTL, MODIFIED)
;;  pred:       17 (FALLTHRU)
;;              48 [100.0%] 
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 702
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 702
;; lr  def 	 17 [flags] 703
(code_label 896 319 320 18 31 (nil) [1 uses])
(note 320 896 321 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 321 320 322 18 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -60 [0xffffffffffffffc4])) [1 kpiv+0 S4 A32])
            (reg:SI 44 r15 [orig:702 _698 ] [702]))) "../src/bnsolv.f":61 7 {*cmpsi_1}
     (nil))
(insn 322 321 323 18 (set (reg:QI 0 ax [orig:703 _700 ] [703])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "../src/bnsolv.f":61 613 {*setcc_qi}
     (nil))
(insn 323 322 324 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:703 _700 ] [703])
            (const_int 0 [0]))) "../src/bnsolv.f":61 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 324 323 325 18 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1431)
            (pc))) "../src/bnsolv.f":61 617 {*jcc_1}
     (nil)
 -> 1431)
;;  succ:       89
;;              19 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 702

;; basic block 19, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 18, next block 20, flags: (RTL, MODIFIED)
;;  pred:       18 (FALLTHRU)
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 702
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 704 705 815 816 817 818
(note 325 324 329 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 329 325 330 19 (set (reg:SI 0 ax [816])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -60 [0xffffffffffffffc4])) [1 kpiv+0 S4 A32])) "../src/bnsolv.f":62 82 {*movsi_internal}
     (nil))
(insn 330 329 331 19 (parallel [
            (set (reg:SI 0 ax [815])
                (plus:SI (reg:SI 0 ax [816])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":62 217 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [1 kpiv+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 331 330 332 19 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -180 [0xffffffffffffff4c])) [1 kp1+0 S4 A32])
        (reg:SI 0 ax [815])) "../src/bnsolv.f":62 82 {*movsi_internal}
     (nil))
(insn 332 331 333 19 (set (reg:SI 0 ax [817])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -60 [0xffffffffffffffc4])) [1 kpiv+0 S4 A32])) "../src/bnsolv.f":65 82 {*movsi_internal}
     (nil))
(insn 333 332 334 19 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [1 kx+0 S4 A32])
        (reg:SI 0 ax [817])) "../src/bnsolv.f":65 82 {*movsi_internal}
     (nil))
(insn 334 333 335 19 (set (reg:SI 1 dx [orig:704 _703 ] [704])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -180 [0xffffffffffffff4c])) [1 kp1+0 S4 A32])) "../src/bnsolv.f":66 82 {*movsi_internal}
     (nil))
(insn 335 334 336 19 (set (reg/f:DI 0 ax [818])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -728 [0xfffffffffffffd28])) [11 nb+0 S8 A64])) "../src/bnsolv.f":66 81 {*movdi_internal}
     (nil))
(insn 336 335 337 19 (set (reg:SI 2 cx [orig:705 _704 ] [705])
        (mem:SI (reg/f:DI 0 ax [818]) [1 *nb_615(D)+0 S4 A32])) "../src/bnsolv.f":66 82 {*movsi_internal}
     (nil))
(insn 337 336 384 19 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [1 k+0 S4 A32])
        (reg:SI 1 dx [orig:704 _703 ] [704])) "../src/bnsolv.f":66 82 {*movsi_internal}
     (nil))
;;  succ:       20 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 702 705

;; basic block 20, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 19, next block 21, flags: (RTL, MODIFIED)
;;  pred:       19 (FALLTHRU)
;;              23 [100.0%] 
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 702 705
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 705
;; lr  def 	 17 [flags] 706
(code_label 384 337 338 20 14 (nil) [1 uses])
(note 338 384 339 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 339 338 340 20 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -56 [0xffffffffffffffc8])) [1 k+0 S4 A32])
            (reg:SI 2 cx [orig:705 _704 ] [705]))) "../src/bnsolv.f":66 7 {*cmpsi_1}
     (nil))
(insn 340 339 341 20 (set (reg:QI 0 ax [orig:706 _706 ] [706])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "../src/bnsolv.f":66 613 {*setcc_qi}
     (nil))
(insn 341 340 342 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:706 _706 ] [706])
            (const_int 0 [0]))) "../src/bnsolv.f":66 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 342 341 343 20 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1434)
            (pc))) "../src/bnsolv.f":66 617 {*jcc_1}
     (nil)
 -> 1434)
;;  succ:       90
;;              21 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 702 705

;; basic block 21, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 20, next block 92, flags: (RTL, MODIFIED)
;;  pred:       20 (FALLTHRU)
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 702 705
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671
;; lr  def 	 17 [flags] 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 707 819 820 821 822 823 824 825 826 827
(note 343 342 344 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 344 343 345 21 (set (reg:SI 0 ax [orig:188 i.46_102 ] [188])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [1 i+0 S4 A64])) "../src/bnsolv.f":67 82 {*movsi_internal}
     (nil))
(insn 345 344 346 21 (set (reg:DI 0 ax [orig:189 _103 ] [189])
        (sign_extend:DI (reg:SI 0 ax [orig:188 i.46_102 ] [188]))) "../src/bnsolv.f":67 145 {*extendsidi2_rex64}
     (nil))
(insn 346 345 347 21 (parallel [
            (set (reg:DI 0 ax [orig:190 _104 ] [190])
                (mult:DI (reg:DI 0 ax [orig:189 _103 ] [189])
                    (reg:DI 5 di [orig:665 stride.4_635 ] [665])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":67 329 {*muldi3_1}
     (nil))
(insn 347 346 348 21 (parallel [
            (set (reg:DI 1 dx [orig:191 _105 ] [191])
                (plus:DI (reg:DI 3 bx [orig:671 offset.5_642 ] [671])
                    (reg:DI 0 ax [orig:190 _104 ] [190])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":67 218 {*adddi_1}
     (nil))
(insn 348 347 349 21 (set (reg:SI 0 ax [819])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -60 [0xffffffffffffffc4])) [1 kpiv+0 S4 A32])) "../src/bnsolv.f":67 82 {*movsi_internal}
     (nil))
(insn 349 348 350 21 (set (reg:DI 0 ax [orig:192 _106 ] [192])
        (sign_extend:DI (reg:SI 0 ax [819]))) "../src/bnsolv.f":67 145 {*extendsidi2_rex64}
     (nil))
(insn 350 349 351 21 (parallel [
            (set (reg:DI 0 ax [orig:193 _107 ] [193])
                (mult:DI (reg:DI 0 ax [orig:192 _106 ] [192])
                    (reg:DI 4 si [orig:663 stride.2_632 ] [663])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":67 329 {*muldi3_1}
     (nil))
(insn 351 350 352 21 (parallel [
            (set (reg:DI 1 dx [orig:194 _108 ] [194])
                (plus:DI (reg:DI 1 dx [orig:191 _105 ] [191])
                    (reg:DI 0 ax [orig:193 _107 ] [193])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":67 218 {*adddi_1}
     (nil))
(insn 352 351 353 21 (set (reg:SI 0 ax [820])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [1 k+0 S4 A32])) "../src/bnsolv.f":67 82 {*movsi_internal}
     (nil))
(insn 353 352 354 21 (set (reg:DI 0 ax [orig:195 _109 ] [195])
        (sign_extend:DI (reg:SI 0 ax [820]))) "../src/bnsolv.f":67 145 {*extendsidi2_rex64}
     (nil))
(insn 354 353 355 21 (parallel [
            (set (reg:DI 1 dx [orig:196 _110 ] [196])
                (plus:DI (reg:DI 1 dx [orig:194 _108 ] [194])
                    (reg:DI 0 ax [orig:195 _109 ] [195])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":67 218 {*adddi_1}
     (nil))
(insn 355 354 356 21 (set (reg/f:DI 0 ax [821])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -696 [0xfffffffffffffd48])) [10 a+0 S8 A64])) "../src/bnsolv.f":67 81 {*movdi_internal}
     (nil))
(insn 356 355 357 21 (set (reg:SF 22 xmm1 [orig:197 _111 ] [197])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:196 _110 ] [196])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [821])) [3 *a_685(D) S4 A32])) "../src/bnsolv.f":67 127 {*movsf_internal}
     (nil))
(insn 357 356 358 21 (set (reg:V4SF 21 xmm0 [822])
        (mem/u/c:V4SF (symbol_ref/u:DI ("*lC0") [flags 0x2]) [3  S16 A128])) "../src/bnsolv.f":67 1225 {movv4sf_internal}
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF +QNaN [+QNaN])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 358 357 359 21 (parallel [
            (set (reg:SF 21 xmm0 [orig:198 _112 ] [198])
                (abs:SF (reg:SF 22 xmm1 [orig:197 _111 ] [197])))
            (use (reg:V4SF 21 xmm0 [822]))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":67 470 {*absnegsf2}
     (expr_list:REG_EQUAL (abs:SF (reg:SF 22 xmm1 [orig:197 _111 ] [197]))
        (nil)))
(insn 359 358 360 21 (set (reg:SI 0 ax [orig:199 i.47_113 ] [199])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [1 i+0 S4 A64])) "../src/bnsolv.f":67 82 {*movsi_internal}
     (nil))
(insn 360 359 361 21 (set (reg:DI 0 ax [orig:200 _114 ] [200])
        (sign_extend:DI (reg:SI 0 ax [orig:199 i.47_113 ] [199]))) "../src/bnsolv.f":67 145 {*extendsidi2_rex64}
     (nil))
(insn 361 360 362 21 (parallel [
            (set (reg:DI 0 ax [orig:201 _115 ] [201])
                (mult:DI (reg:DI 0 ax [orig:200 _114 ] [200])
                    (reg:DI 5 di [orig:665 stride.4_635 ] [665])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":67 329 {*muldi3_1}
     (nil))
(insn 362 361 363 21 (parallel [
            (set (reg:DI 1 dx [orig:202 _116 ] [202])
                (plus:DI (reg:DI 3 bx [orig:671 offset.5_642 ] [671])
                    (reg:DI 0 ax [orig:201 _115 ] [201])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":67 218 {*adddi_1}
     (nil))
(insn 363 362 364 21 (set (reg:SI 0 ax [823])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -60 [0xffffffffffffffc4])) [1 kpiv+0 S4 A32])) "../src/bnsolv.f":67 82 {*movsi_internal}
     (nil))
(insn 364 363 365 21 (set (reg:DI 0 ax [orig:203 _117 ] [203])
        (sign_extend:DI (reg:SI 0 ax [823]))) "../src/bnsolv.f":67 145 {*extendsidi2_rex64}
     (nil))
(insn 365 364 366 21 (parallel [
            (set (reg:DI 0 ax [orig:204 _118 ] [204])
                (mult:DI (reg:DI 0 ax [orig:203 _117 ] [203])
                    (reg:DI 4 si [orig:663 stride.2_632 ] [663])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":67 329 {*muldi3_1}
     (nil))
(insn 366 365 367 21 (parallel [
            (set (reg:DI 1 dx [orig:205 _119 ] [205])
                (plus:DI (reg:DI 1 dx [orig:202 _116 ] [202])
                    (reg:DI 0 ax [orig:204 _118 ] [204])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":67 218 {*adddi_1}
     (nil))
(insn 367 366 368 21 (set (reg:SI 0 ax [824])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [1 kx+0 S4 A32])) "../src/bnsolv.f":67 82 {*movsi_internal}
     (nil))
(insn 368 367 369 21 (set (reg:DI 0 ax [orig:206 _120 ] [206])
        (sign_extend:DI (reg:SI 0 ax [824]))) "../src/bnsolv.f":67 145 {*extendsidi2_rex64}
     (nil))
(insn 369 368 370 21 (parallel [
            (set (reg:DI 1 dx [orig:207 _121 ] [207])
                (plus:DI (reg:DI 1 dx [orig:205 _119 ] [205])
                    (reg:DI 0 ax [orig:206 _120 ] [206])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":67 218 {*adddi_1}
     (nil))
(insn 370 369 371 21 (set (reg/f:DI 0 ax [825])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -696 [0xfffffffffffffd48])) [10 a+0 S8 A64])) "../src/bnsolv.f":67 81 {*movdi_internal}
     (nil))
(insn 371 370 372 21 (set (reg:SF 23 xmm2 [orig:208 _122 ] [208])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:207 _121 ] [207])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [825])) [3 *a_685(D) S4 A32])) "../src/bnsolv.f":67 127 {*movsf_internal}
     (nil))
(insn 372 371 373 21 (set (reg:V4SF 22 xmm1 [826])
        (mem/u/c:V4SF (symbol_ref/u:DI ("*lC0") [flags 0x2]) [3  S16 A128])) "../src/bnsolv.f":67 1225 {movv4sf_internal}
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF +QNaN [+QNaN])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 373 372 374 21 (parallel [
            (set (reg:SF 22 xmm1 [orig:209 _123 ] [209])
                (abs:SF (reg:SF 23 xmm2 [orig:208 _122 ] [208])))
            (use (reg:V4SF 22 xmm1 [826]))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":67 470 {*absnegsf2}
     (expr_list:REG_EQUAL (abs:SF (reg:SF 23 xmm2 [orig:208 _122 ] [208]))
        (nil)))
(insn 374 373 375 21 (set (reg:SF 21 xmm0 [orig:707 _707 ] [707])
        (minus:SF (reg:SF 21 xmm0 [orig:198 _112 ] [198])
            (reg:SF 22 xmm1 [orig:209 _123 ] [209]))) "../src/bnsolv.f":67 805 {*fop_sf_1}
     (nil))
(insn 375 374 376 21 (set (reg:SF 22 xmm1 [827])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC1") [flags 0x2]) [3  S4 A32])) "../src/bnsolv.f":67 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 376 375 377 21 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 22 xmm1 [827])
            (reg:SF 21 xmm0 [orig:707 _707 ] [707]))) "../src/bnsolv.f":67 51 {*cmpiusf}
     (nil))
(jump_insn 377 376 1441 21 (set (pc)
        (if_then_else (ge (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1439)
            (pc))) "../src/bnsolv.f":67 617 {*jcc_1}
     (nil)
 -> 1439)
;;  succ:       91
;;              92 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 702 705

;; basic block 92, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 21, next block 22, flags: (RTL, MODIFIED)
;;  pred:       21 (FALLTHRU)
;; bb 92 artificial_defs: { }
;; bb 92 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 702 705
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 1441 377 1442 92 [bb 92] NOTE_INSN_BASIC_BLOCK)
(insn 1442 1441 378 92 (const_int 0 [0]) "../src/bnsolv.f":67 682 {nop}
     (nil))
;;  succ:       22 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 702 705

;; basic block 22, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 92, next block 91, flags: (RTL, MODIFIED)
;;  pred:       92 [100.0%]  (FALLTHRU)
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 702 705
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 828
(note 378 1442 379 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 379 378 380 22 (set (reg:SI 0 ax [828])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [1 k+0 S4 A32])) "../src/bnsolv.f":68 82 {*movsi_internal}
     (nil))
(insn 380 379 1436 22 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [1 kx+0 S4 A32])
        (reg:SI 0 ax [828])) "../src/bnsolv.f":68 82 {*movsi_internal}
     (nil))
(jump_insn 1436 380 1437 22 (set (pc)
        (label_ref 381)) 649 {jump}
     (nil)
 -> 381)
;;  succ:       23
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 702 705

(barrier 1437 1436 1439)
;; basic block 91, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 22, next block 23, flags: (RTL, MODIFIED)
;;  pred:       21
;; bb 91 artificial_defs: { }
;; bb 91 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 702 705
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 1439 1437 1438 91 65 (nil) [1 uses])
(note 1438 1439 1440 91 [bb 91] NOTE_INSN_BASIC_BLOCK)
(insn 1440 1438 381 91 (const_int 0 [0]) "../src/bnsolv.f":68 682 {nop}
     (nil))
;;  succ:       23 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 702 705

;; basic block 23, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 91, next block 90, flags: (RTL, MODIFIED)
;;  pred:       91 [100.0%]  (FALLTHRU)
;;              22
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 702 705
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 381 1440 382 23 13 (nil) [1 uses])
(note 382 381 383 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 383 382 1375 23 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -56 [0xffffffffffffffc8])) [1 k+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -56 [0xffffffffffffffc8])) [1 k+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":66 217 {*addsi_1}
     (nil))
(jump_insn 1375 383 1376 23 (set (pc)
        (label_ref 384)) "../src/bnsolv.f":66 649 {jump}
     (nil)
 -> 384)
;;  succ:       20 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 702 705

(barrier 1376 1375 1434)
;; basic block 90, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 23, next block 24, flags: (RTL, MODIFIED)
;;  pred:       20
;; bb 90 artificial_defs: { }
;; bb 90 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 702
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 1434 1376 1433 90 64 (nil) [1 uses])
(note 1433 1434 1435 90 [bb 90] NOTE_INSN_BASIC_BLOCK)
(insn 1435 1433 387 90 (const_int 0 [0]) "../src/bnsolv.f":69 682 {nop}
     (nil))
;;  succ:       24 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 702

;; basic block 24, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 90, next block 25, flags: (RTL, MODIFIED)
;;  pred:       90 [100.0%]  (FALLTHRU)
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 702
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671
;; lr  def 	 17 [flags] 210 211 212 213 214 215 216 217 218 219 829 830 831 832
(code_label 387 1435 388 24 12 (nil) [0 uses])
(note 388 387 389 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 389 388 390 24 (set (reg:SI 0 ax [orig:210 i.48_124 ] [210])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [1 i+0 S4 A64])) "../src/bnsolv.f":71 82 {*movsi_internal}
     (nil))
(insn 390 389 391 24 (set (reg:DI 0 ax [orig:211 _125 ] [211])
        (sign_extend:DI (reg:SI 0 ax [orig:210 i.48_124 ] [210]))) "../src/bnsolv.f":71 145 {*extendsidi2_rex64}
     (nil))
(insn 391 390 392 24 (parallel [
            (set (reg:DI 0 ax [orig:212 _126 ] [212])
                (mult:DI (reg:DI 0 ax [orig:211 _125 ] [211])
                    (reg:DI 5 di [orig:665 stride.4_635 ] [665])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":71 329 {*muldi3_1}
     (nil))
(insn 392 391 393 24 (parallel [
            (set (reg:DI 1 dx [orig:213 _127 ] [213])
                (plus:DI (reg:DI 3 bx [orig:671 offset.5_642 ] [671])
                    (reg:DI 0 ax [orig:212 _126 ] [212])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":71 218 {*adddi_1}
     (nil))
(insn 393 392 394 24 (set (reg:SI 0 ax [829])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -60 [0xffffffffffffffc4])) [1 kpiv+0 S4 A32])) "../src/bnsolv.f":71 82 {*movsi_internal}
     (nil))
(insn 394 393 395 24 (set (reg:DI 0 ax [orig:214 _128 ] [214])
        (sign_extend:DI (reg:SI 0 ax [829]))) "../src/bnsolv.f":71 145 {*extendsidi2_rex64}
     (nil))
(insn 395 394 396 24 (parallel [
            (set (reg:DI 0 ax [orig:215 _129 ] [215])
                (mult:DI (reg:DI 0 ax [orig:214 _128 ] [214])
                    (reg:DI 4 si [orig:663 stride.2_632 ] [663])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":71 329 {*muldi3_1}
     (nil))
(insn 396 395 397 24 (parallel [
            (set (reg:DI 1 dx [orig:216 _130 ] [216])
                (plus:DI (reg:DI 1 dx [orig:213 _127 ] [213])
                    (reg:DI 0 ax [orig:215 _129 ] [215])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":71 218 {*adddi_1}
     (nil))
(insn 397 396 398 24 (set (reg:SI 0 ax [830])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [1 kx+0 S4 A32])) "../src/bnsolv.f":71 82 {*movsi_internal}
     (nil))
(insn 398 397 399 24 (set (reg:DI 0 ax [orig:217 _131 ] [217])
        (sign_extend:DI (reg:SI 0 ax [830]))) "../src/bnsolv.f":71 145 {*extendsidi2_rex64}
     (nil))
(insn 399 398 400 24 (parallel [
            (set (reg:DI 1 dx [orig:218 _132 ] [218])
                (plus:DI (reg:DI 1 dx [orig:216 _130 ] [216])
                    (reg:DI 0 ax [orig:217 _131 ] [217])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":71 218 {*adddi_1}
     (nil))
(insn 400 399 401 24 (set (reg/f:DI 0 ax [831])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -696 [0xfffffffffffffd48])) [10 a+0 S8 A64])) "../src/bnsolv.f":71 81 {*movdi_internal}
     (nil))
(insn 401 400 402 24 (set (reg:SF 21 xmm0 [orig:219 _133 ] [219])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:218 _132 ] [218])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [831])) [3 *a_685(D) S4 A32])) "../src/bnsolv.f":71 127 {*movsf_internal}
     (nil))
(insn 402 401 403 24 (set (reg:SF 22 xmm1 [832])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC1") [flags 0x2]) [3  S4 A32])) "../src/bnsolv.f":71 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 403 402 404 24 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 21 xmm0 [orig:219 _133 ] [219])
            (reg:SF 22 xmm1 [832]))) "../src/bnsolv.f":71 51 {*cmpiusf}
     (nil))
(jump_insn 404 403 1358 24 (set (pc)
        (if_then_else (unordered (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref 438)
            (pc))) "../src/bnsolv.f":71 617 {*jcc_1}
     (nil)
 -> 438)
;;  succ:       27
;;              25 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 219 663 665 671 673 675 681 683 685 691 702

;; basic block 25, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 24, next block 26, flags: (RTL, MODIFIED)
;;  pred:       24 (FALLTHRU)
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 219 663 665 671 673 675 681 683 685 691 702
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 219
;; lr  def 	 17 [flags] 833
(note 1358 404 405 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 405 1358 406 25 (set (reg:SF 22 xmm1 [833])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC1") [flags 0x2]) [3  S4 A32])) "../src/bnsolv.f":71 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 406 405 407 25 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 21 xmm0 [orig:219 _133 ] [219])
            (reg:SF 22 xmm1 [833]))) "../src/bnsolv.f":71 51 {*cmpiusf}
     (nil))
(jump_insn 407 406 411 25 (set (pc)
        (if_then_else (ltgt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 438)
            (pc))) "../src/bnsolv.f":71 617 {*jcc_1}
     (nil)
 -> 438)
;;  succ:       26 (FALLTHRU)
;;              27
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 702

;; basic block 26, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 25, next block 27, flags: (RTL, MODIFIED)
;;  pred:       25 (FALLTHRU)
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 834 835 836 837 838 839
(note 411 407 412 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 412 411 413 26 (set (reg/f:DI 0 ax [834])
        (symbol_ref/f:DI ("*lC2") [flags 0x2]  <var_decl 0x143100ea0 *lC2>)) "../src/bnsolv.f":72 81 {*movdi_internal}
     (nil))
(insn 413 412 414 26 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -680 [0xfffffffffffffd58])) [6 dt_parm.28.common.filename+0 S8 A64])
        (reg/f:DI 0 ax [834])) "../src/bnsolv.f":72 81 {*movdi_internal}
     (nil))
(insn 414 413 415 26 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -672 [0xfffffffffffffd60])) [1 dt_parm.28.common.line+0 S4 A128])
        (const_int 72 [0x48])) "../src/bnsolv.f":72 82 {*movsi_internal}
     (nil))
(insn 415 414 416 26 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -688 [0xfffffffffffffd50])) [1 dt_parm.28.common.flags+0 S4 A128])
        (const_int 128 [0x80])) "../src/bnsolv.f":72 82 {*movsi_internal}
     (nil))
(insn 416 415 417 26 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -684 [0xfffffffffffffd54])) [1 dt_parm.28.common.unit+0 S4 A32])
        (const_int 6 [0x6])) "../src/bnsolv.f":72 82 {*movsi_internal}
     (nil))
(insn 417 416 418 26 (parallel [
            (set (reg:DI 0 ax [835])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -688 [0xfffffffffffffd50])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":72 218 {*adddi_1}
     (nil))
(insn 418 417 419 26 (set (reg:DI 5 di)
        (reg:DI 0 ax [835])) "../src/bnsolv.f":72 81 {*movdi_internal}
     (nil))
(call_insn 419 418 420 26 (call (mem:QI (symbol_ref:DI ("_gfortran_st_write") [flags 0x41]  <function_decl 0x1427e0800 _gfortran_st_write>) [0 _gfortran_st_write S1 A8])
        (const_int 0 [0])) "../src/bnsolv.f":72 655 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 420 419 421 26 (parallel [
            (set (reg:DI 0 ax [836])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -688 [0xfffffffffffffd50])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":72 218 {*adddi_1}
     (nil))
(insn 421 420 422 26 (set (reg:SI 1 dx)
        (const_int 22 [0x16])) "../src/bnsolv.f":72 82 {*movsi_internal}
     (nil))
(insn 422 421 423 26 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*lC3") [flags 0x2]  <var_decl 0x143100f30 *lC3>)) "../src/bnsolv.f":72 81 {*movdi_internal}
     (nil))
(insn 423 422 424 26 (set (reg:DI 5 di)
        (reg:DI 0 ax [836])) "../src/bnsolv.f":72 81 {*movdi_internal}
     (nil))
(call_insn 424 423 425 26 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_character_write") [flags 0x41]  <function_decl 0x1427d4900 _gfortran_transfer_character_write>) [0 _gfortran_transfer_character_write S1 A8])
        (const_int 0 [0])) "../src/bnsolv.f":72 655 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 425 424 426 26 (parallel [
            (set (reg:DI 2 cx [837])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -200 [0xffffffffffffff38])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":72 218 {*adddi_1}
     (nil))
(insn 426 425 427 26 (parallel [
            (set (reg:DI 0 ax [838])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -688 [0xfffffffffffffd50])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":72 218 {*adddi_1}
     (nil))
(insn 427 426 428 26 (set (reg:SI 1 dx)
        (const_int 4 [0x4])) "../src/bnsolv.f":72 82 {*movsi_internal}
     (nil))
(insn 428 427 429 26 (set (reg:DI 4 si)
        (reg:DI 2 cx [837])) "../src/bnsolv.f":72 81 {*movdi_internal}
     (nil))
(insn 429 428 430 26 (set (reg:DI 5 di)
        (reg:DI 0 ax [838])) "../src/bnsolv.f":72 81 {*movdi_internal}
     (nil))
(call_insn 430 429 431 26 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_integer_write") [flags 0x41]  <function_decl 0x1427d4500 _gfortran_transfer_integer_write>) [0 _gfortran_transfer_integer_write S1 A8])
        (const_int 0 [0])) "../src/bnsolv.f":72 655 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 431 430 432 26 (parallel [
            (set (reg:DI 0 ax [839])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -688 [0xfffffffffffffd50])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":72 218 {*adddi_1}
     (nil))
(insn 432 431 433 26 (set (reg:DI 5 di)
        (reg:DI 0 ax [839])) "../src/bnsolv.f":72 81 {*movdi_internal}
     (nil))
(call_insn 433 432 434 26 (call (mem:QI (symbol_ref:DI ("_gfortran_st_write_done") [flags 0x41]  <function_decl 0x1427e4300 _gfortran_st_write_done>) [0 _gfortran_st_write_done S1 A8])
        (const_int 0 [0])) "../src/bnsolv.f":72 655 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 434 433 435 26 (set (reg:SI 4 si)
        (const_int 0 [0])) "../src/bnsolv.f":73 82 {*movsi_internal}
     (nil))
(insn 435 434 436 26 (set (reg:DI 5 di)
        (const_int 0 [0])) "../src/bnsolv.f":73 81 {*movdi_internal}
     (nil))
(call_insn 436 435 437 26 (call (mem:QI (symbol_ref:DI ("_gfortran_stop_string") [flags 0x41]  <function_decl 0x1427c2200 _gfortran_stop_string>) [0 _gfortran_stop_string S1 A8])
        (const_int 0 [0])) "../src/bnsolv.f":73 655 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 437 436 438)
;; basic block 27, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 26, next block 28, flags: (RTL, MODIFIED)
;;  pred:       24
;;              25
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 702
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671
;; lr  def 	 17 [flags] 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 708 709 840 841 842 843 844 845 846 847 848 849 850 851
(code_label 438 437 439 27 15 (nil) [2 uses])
(note 439 438 440 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 440 439 441 27 (set (reg:SI 0 ax [orig:220 i.49_134 ] [220])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [1 i+0 S4 A64])) "../src/bnsolv.f":76 82 {*movsi_internal}
     (nil))
(insn 441 440 442 27 (set (reg:DI 0 ax [orig:221 _135 ] [221])
        (sign_extend:DI (reg:SI 0 ax [orig:220 i.49_134 ] [220]))) "../src/bnsolv.f":76 145 {*extendsidi2_rex64}
     (nil))
(insn 442 441 443 27 (parallel [
            (set (reg:DI 0 ax [orig:222 _136 ] [222])
                (mult:DI (reg:DI 0 ax [orig:221 _135 ] [221])
                    (reg:DI 5 di [orig:665 stride.4_635 ] [665])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":76 329 {*muldi3_1}
     (nil))
(insn 443 442 444 27 (parallel [
            (set (reg:DI 1 dx [orig:223 _137 ] [223])
                (plus:DI (reg:DI 3 bx [orig:671 offset.5_642 ] [671])
                    (reg:DI 0 ax [orig:222 _136 ] [222])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":76 218 {*adddi_1}
     (nil))
(insn 444 443 445 27 (set (reg:SI 0 ax [840])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -60 [0xffffffffffffffc4])) [1 kpiv+0 S4 A32])) "../src/bnsolv.f":76 82 {*movsi_internal}
     (nil))
(insn 445 444 446 27 (set (reg:DI 0 ax [orig:224 _138 ] [224])
        (sign_extend:DI (reg:SI 0 ax [840]))) "../src/bnsolv.f":76 145 {*extendsidi2_rex64}
     (nil))
(insn 446 445 447 27 (parallel [
            (set (reg:DI 0 ax [orig:225 _139 ] [225])
                (mult:DI (reg:DI 0 ax [orig:224 _138 ] [224])
                    (reg:DI 4 si [orig:663 stride.2_632 ] [663])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":76 329 {*muldi3_1}
     (nil))
(insn 447 446 448 27 (parallel [
            (set (reg:DI 1 dx [orig:226 _140 ] [226])
                (plus:DI (reg:DI 1 dx [orig:223 _137 ] [223])
                    (reg:DI 0 ax [orig:225 _139 ] [225])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":76 218 {*adddi_1}
     (nil))
(insn 448 447 449 27 (set (reg:SI 0 ax [841])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [1 kx+0 S4 A32])) "../src/bnsolv.f":76 82 {*movsi_internal}
     (nil))
(insn 449 448 450 27 (set (reg:DI 0 ax [orig:227 _141 ] [227])
        (sign_extend:DI (reg:SI 0 ax [841]))) "../src/bnsolv.f":76 145 {*extendsidi2_rex64}
     (nil))
(insn 450 449 451 27 (parallel [
            (set (reg:DI 1 dx [orig:228 _142 ] [228])
                (plus:DI (reg:DI 1 dx [orig:226 _140 ] [226])
                    (reg:DI 0 ax [orig:227 _141 ] [227])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":76 218 {*adddi_1}
     (nil))
(insn 451 450 452 27 (set (reg/f:DI 0 ax [842])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -696 [0xfffffffffffffd48])) [10 a+0 S8 A64])) "../src/bnsolv.f":76 81 {*movdi_internal}
     (nil))
(insn 452 451 453 27 (set (reg:SF 22 xmm1 [orig:229 _143 ] [229])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:228 _142 ] [228])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [842])) [3 *a_685(D) S4 A32])) "../src/bnsolv.f":76 127 {*movsf_internal}
     (nil))
(insn 453 452 454 27 (set (reg:SF 21 xmm0 [844])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC4") [flags 0x2]) [3  S4 A32])) "../src/bnsolv.f":76 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 454 453 455 27 (set (reg:SF 21 xmm0 [843])
        (div:SF (reg:SF 21 xmm0 [844])
            (reg:SF 22 xmm1 [orig:229 _143 ] [229]))) "../src/bnsolv.f":76 805 {*fop_sf_1}
     (nil))
(insn 455 454 456 27 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [3 pivot+0 S4 A32])
        (reg:SF 21 xmm0 [843])) "../src/bnsolv.f":76 127 {*movsf_internal}
     (nil))
(insn 456 455 457 27 (set (reg:SI 0 ax [orig:230 i.50_144 ] [230])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [1 i+0 S4 A64])) "../src/bnsolv.f":79 82 {*movsi_internal}
     (nil))
(insn 457 456 458 27 (set (reg:DI 0 ax [orig:231 _145 ] [231])
        (sign_extend:DI (reg:SI 0 ax [orig:230 i.50_144 ] [230]))) "../src/bnsolv.f":79 145 {*extendsidi2_rex64}
     (nil))
(insn 458 457 459 27 (parallel [
            (set (reg:DI 0 ax [orig:232 _146 ] [232])
                (mult:DI (reg:DI 0 ax [orig:231 _145 ] [231])
                    (reg:DI 5 di [orig:665 stride.4_635 ] [665])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":79 329 {*muldi3_1}
     (nil))
(insn 459 458 460 27 (parallel [
            (set (reg:DI 1 dx [orig:233 _147 ] [233])
                (plus:DI (reg:DI 3 bx [orig:671 offset.5_642 ] [671])
                    (reg:DI 0 ax [orig:232 _146 ] [232])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":79 218 {*adddi_1}
     (nil))
(insn 460 459 461 27 (set (reg:SI 0 ax [845])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -60 [0xffffffffffffffc4])) [1 kpiv+0 S4 A32])) "../src/bnsolv.f":79 82 {*movsi_internal}
     (nil))
(insn 461 460 462 27 (set (reg:DI 0 ax [orig:234 _148 ] [234])
        (sign_extend:DI (reg:SI 0 ax [845]))) "../src/bnsolv.f":79 145 {*extendsidi2_rex64}
     (nil))
(insn 462 461 463 27 (parallel [
            (set (reg:DI 0 ax [orig:235 _149 ] [235])
                (mult:DI (reg:DI 0 ax [orig:234 _148 ] [234])
                    (reg:DI 4 si [orig:663 stride.2_632 ] [663])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":79 329 {*muldi3_1}
     (nil))
(insn 463 462 464 27 (parallel [
            (set (reg:DI 1 dx [orig:236 _150 ] [236])
                (plus:DI (reg:DI 1 dx [orig:233 _147 ] [233])
                    (reg:DI 0 ax [orig:235 _149 ] [235])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":79 218 {*adddi_1}
     (nil))
(insn 464 463 465 27 (set (reg:SI 0 ax [846])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -60 [0xffffffffffffffc4])) [1 kpiv+0 S4 A32])) "../src/bnsolv.f":79 82 {*movsi_internal}
     (nil))
(insn 465 464 466 27 (set (reg:DI 0 ax [orig:237 _151 ] [237])
        (sign_extend:DI (reg:SI 0 ax [846]))) "../src/bnsolv.f":79 145 {*extendsidi2_rex64}
     (nil))
(insn 466 465 467 27 (parallel [
            (set (reg:DI 2 cx [orig:238 _152 ] [238])
                (plus:DI (reg:DI 1 dx [orig:236 _150 ] [236])
                    (reg:DI 0 ax [orig:237 _151 ] [237])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":79 218 {*adddi_1}
     (nil))
(insn 467 466 468 27 (set (reg:SI 0 ax [orig:239 i.51_153 ] [239])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [1 i+0 S4 A64])) "../src/bnsolv.f":79 82 {*movsi_internal}
     (nil))
(insn 468 467 469 27 (set (reg:DI 0 ax [orig:240 _154 ] [240])
        (sign_extend:DI (reg:SI 0 ax [orig:239 i.51_153 ] [239]))) "../src/bnsolv.f":79 145 {*extendsidi2_rex64}
     (nil))
(insn 469 468 470 27 (parallel [
            (set (reg:DI 0 ax [orig:241 _155 ] [241])
                (mult:DI (reg:DI 0 ax [orig:240 _154 ] [240])
                    (reg:DI 5 di [orig:665 stride.4_635 ] [665])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":79 329 {*muldi3_1}
     (nil))
(insn 470 469 471 27 (parallel [
            (set (reg:DI 1 dx [orig:242 _156 ] [242])
                (plus:DI (reg:DI 3 bx [orig:671 offset.5_642 ] [671])
                    (reg:DI 0 ax [orig:241 _155 ] [241])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":79 218 {*adddi_1}
     (nil))
(insn 471 470 472 27 (set (reg:SI 0 ax [847])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -60 [0xffffffffffffffc4])) [1 kpiv+0 S4 A32])) "../src/bnsolv.f":79 82 {*movsi_internal}
     (nil))
(insn 472 471 473 27 (set (reg:DI 0 ax [orig:243 _157 ] [243])
        (sign_extend:DI (reg:SI 0 ax [847]))) "../src/bnsolv.f":79 145 {*extendsidi2_rex64}
     (nil))
(insn 473 472 474 27 (parallel [
            (set (reg:DI 0 ax [orig:244 _158 ] [244])
                (mult:DI (reg:DI 0 ax [orig:243 _157 ] [243])
                    (reg:DI 4 si [orig:663 stride.2_632 ] [663])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":79 329 {*muldi3_1}
     (nil))
(insn 474 473 475 27 (parallel [
            (set (reg:DI 1 dx [orig:245 _159 ] [245])
                (plus:DI (reg:DI 1 dx [orig:242 _156 ] [242])
                    (reg:DI 0 ax [orig:244 _158 ] [244])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":79 218 {*adddi_1}
     (nil))
(insn 475 474 476 27 (set (reg:SI 0 ax [848])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [1 kx+0 S4 A32])) "../src/bnsolv.f":79 82 {*movsi_internal}
     (nil))
(insn 476 475 477 27 (set (reg:DI 0 ax [orig:246 _160 ] [246])
        (sign_extend:DI (reg:SI 0 ax [848]))) "../src/bnsolv.f":79 145 {*extendsidi2_rex64}
     (nil))
(insn 477 476 478 27 (parallel [
            (set (reg:DI 1 dx [orig:247 _161 ] [247])
                (plus:DI (reg:DI 1 dx [orig:245 _159 ] [245])
                    (reg:DI 0 ax [orig:246 _160 ] [246])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":79 218 {*adddi_1}
     (nil))
(insn 478 477 479 27 (set (reg/f:DI 0 ax [849])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -696 [0xfffffffffffffd48])) [10 a+0 S8 A64])) "../src/bnsolv.f":79 81 {*movdi_internal}
     (nil))
(insn 479 478 480 27 (set (reg:SF 21 xmm0 [orig:248 _162 ] [248])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:238 _152 ] [238])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [849])) [3 *a_685(D) S4 A32])) "../src/bnsolv.f":79 127 {*movsf_internal}
     (nil))
(insn 480 479 481 27 (set (reg/f:DI 0 ax [850])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -696 [0xfffffffffffffd48])) [10 a+0 S8 A64])) "../src/bnsolv.f":79 81 {*movdi_internal}
     (nil))
(insn 481 480 482 27 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:247 _161 ] [247])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [850])) [3 *a_685(D) S4 A32])
        (reg:SF 21 xmm0 [orig:248 _162 ] [248])) "../src/bnsolv.f":79 127 {*movsf_internal}
     (nil))
(insn 482 481 483 27 (set (reg:SI 1 dx [orig:708 _712 ] [708])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -180 [0xffffffffffffff4c])) [1 kp1+0 S4 A32])) "../src/bnsolv.f":82 82 {*movsi_internal}
     (nil))
(insn 483 482 484 27 (set (reg/f:DI 0 ax [851])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -728 [0xfffffffffffffd28])) [11 nb+0 S8 A64])) "../src/bnsolv.f":82 81 {*movdi_internal}
     (nil))
(insn 484 483 485 27 (set (reg:SI 40 r11 [orig:709 _713 ] [709])
        (mem:SI (reg/f:DI 0 ax [851]) [1 *nb_615(D)+0 S4 A32])) "../src/bnsolv.f":82 82 {*movsi_internal}
     (nil))
(insn 485 484 549 27 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -68 [0xffffffffffffffbc])) [1 l+0 S4 A32])
        (reg:SI 1 dx [orig:708 _712 ] [708])) "../src/bnsolv.f":82 82 {*movsi_internal}
     (nil))
;;  succ:       28 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 702 709

;; basic block 28, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 27, next block 29, flags: (RTL, MODIFIED)
;;  pred:       27 (FALLTHRU)
;;              29 [100.0%] 
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 702 709
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 709
;; lr  def 	 17 [flags] 710
(code_label 549 485 486 28 18 (nil) [1 uses])
(note 486 549 487 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 487 486 488 28 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -68 [0xffffffffffffffbc])) [1 l+0 S4 A32])
            (reg:SI 40 r11 [orig:709 _713 ] [709]))) "../src/bnsolv.f":82 7 {*cmpsi_1}
     (nil))
(insn 488 487 489 28 (set (reg:QI 0 ax [orig:710 _715 ] [710])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "../src/bnsolv.f":82 613 {*setcc_qi}
     (nil))
(insn 489 488 490 28 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:710 _715 ] [710])
            (const_int 0 [0]))) "../src/bnsolv.f":82 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 490 489 491 28 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1444)
            (pc))) "../src/bnsolv.f":82 617 {*jcc_1}
     (nil)
 -> 1444)
;;  succ:       93
;;              29 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 702 709

;; basic block 29, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 28, next block 93, flags: (RTL, MODIFIED)
;;  pred:       28 (FALLTHRU)
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 702 709
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671
;; lr  def 	 17 [flags] 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 852 853 854 855 856 857 858 859 860 861 862 863 864 865 866
(note 491 490 492 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 492 491 493 29 (set (reg:SI 0 ax [orig:249 i.52_163 ] [249])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [1 i+0 S4 A64])) "../src/bnsolv.f":83 82 {*movsi_internal}
     (nil))
(insn 493 492 494 29 (set (reg:DI 0 ax [orig:250 _164 ] [250])
        (sign_extend:DI (reg:SI 0 ax [orig:249 i.52_163 ] [249]))) "../src/bnsolv.f":83 145 {*extendsidi2_rex64}
     (nil))
(insn 494 493 495 29 (parallel [
            (set (reg:DI 0 ax [orig:251 _165 ] [251])
                (mult:DI (reg:DI 0 ax [orig:250 _164 ] [250])
                    (reg:DI 5 di [orig:665 stride.4_635 ] [665])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":83 329 {*muldi3_1}
     (nil))
(insn 495 494 496 29 (parallel [
            (set (reg:DI 1 dx [orig:252 _166 ] [252])
                (plus:DI (reg:DI 3 bx [orig:671 offset.5_642 ] [671])
                    (reg:DI 0 ax [orig:251 _165 ] [251])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":83 218 {*adddi_1}
     (nil))
(insn 496 495 497 29 (set (reg:SI 0 ax [852])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -68 [0xffffffffffffffbc])) [1 l+0 S4 A32])) "../src/bnsolv.f":83 82 {*movsi_internal}
     (nil))
(insn 497 496 498 29 (set (reg:DI 0 ax [orig:253 _167 ] [253])
        (sign_extend:DI (reg:SI 0 ax [852]))) "../src/bnsolv.f":83 145 {*extendsidi2_rex64}
     (nil))
(insn 498 497 499 29 (parallel [
            (set (reg:DI 0 ax [orig:254 _168 ] [254])
                (mult:DI (reg:DI 0 ax [orig:253 _167 ] [253])
                    (reg:DI 4 si [orig:663 stride.2_632 ] [663])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":83 329 {*muldi3_1}
     (nil))
(insn 499 498 500 29 (parallel [
            (set (reg:DI 1 dx [orig:255 _169 ] [255])
                (plus:DI (reg:DI 1 dx [orig:252 _166 ] [252])
                    (reg:DI 0 ax [orig:254 _168 ] [254])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":83 218 {*adddi_1}
     (nil))
(insn 500 499 501 29 (set (reg:SI 0 ax [853])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [1 kx+0 S4 A32])) "../src/bnsolv.f":83 82 {*movsi_internal}
     (nil))
(insn 501 500 502 29 (set (reg:DI 0 ax [orig:256 _170 ] [256])
        (sign_extend:DI (reg:SI 0 ax [853]))) "../src/bnsolv.f":83 145 {*extendsidi2_rex64}
     (nil))
(insn 502 501 503 29 (parallel [
            (set (reg:DI 1 dx [orig:257 _171 ] [257])
                (plus:DI (reg:DI 1 dx [orig:255 _169 ] [255])
                    (reg:DI 0 ax [orig:256 _170 ] [256])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":83 218 {*adddi_1}
     (nil))
(insn 503 502 504 29 (set (reg/f:DI 0 ax [854])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -696 [0xfffffffffffffd48])) [10 a+0 S8 A64])) "../src/bnsolv.f":83 81 {*movdi_internal}
     (nil))
(insn 504 503 505 29 (set (reg:SF 21 xmm0 [orig:258 _172 ] [258])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:257 _171 ] [257])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [854])) [3 *a_685(D) S4 A32])) "../src/bnsolv.f":83 127 {*movsf_internal}
     (nil))
(insn 505 504 506 29 (set (reg:SF 22 xmm1 [856])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [3 pivot+0 S4 A32])) "../src/bnsolv.f":83 127 {*movsf_internal}
     (nil))
(insn 506 505 507 29 (set (reg:SF 21 xmm0 [855])
        (mult:SF (reg:SF 21 xmm0 [orig:258 _172 ] [258])
            (reg:SF 22 xmm1 [856]))) "../src/bnsolv.f":83 802 {*fop_sf_comm}
     (nil))
(insn 507 506 508 29 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -188 [0xffffffffffffff44])) [3 temp+0 S4 A32])
        (reg:SF 21 xmm0 [855])) "../src/bnsolv.f":83 127 {*movsf_internal}
     (nil))
(insn 508 507 509 29 (set (reg:SI 0 ax [orig:259 i.53_173 ] [259])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [1 i+0 S4 A64])) "../src/bnsolv.f":84 82 {*movsi_internal}
     (nil))
(insn 509 508 510 29 (set (reg:DI 0 ax [orig:260 _174 ] [260])
        (sign_extend:DI (reg:SI 0 ax [orig:259 i.53_173 ] [259]))) "../src/bnsolv.f":84 145 {*extendsidi2_rex64}
     (nil))
(insn 510 509 511 29 (parallel [
            (set (reg:DI 0 ax [orig:261 _175 ] [261])
                (mult:DI (reg:DI 0 ax [orig:260 _174 ] [260])
                    (reg:DI 5 di [orig:665 stride.4_635 ] [665])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":84 329 {*muldi3_1}
     (nil))
(insn 511 510 512 29 (parallel [
            (set (reg:DI 1 dx [orig:262 _176 ] [262])
                (plus:DI (reg:DI 3 bx [orig:671 offset.5_642 ] [671])
                    (reg:DI 0 ax [orig:261 _175 ] [261])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":84 218 {*adddi_1}
     (nil))
(insn 512 511 513 29 (set (reg:SI 0 ax [857])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -68 [0xffffffffffffffbc])) [1 l+0 S4 A32])) "../src/bnsolv.f":84 82 {*movsi_internal}
     (nil))
(insn 513 512 514 29 (set (reg:DI 0 ax [orig:263 _177 ] [263])
        (sign_extend:DI (reg:SI 0 ax [857]))) "../src/bnsolv.f":84 145 {*extendsidi2_rex64}
     (nil))
(insn 514 513 515 29 (parallel [
            (set (reg:DI 0 ax [orig:264 _178 ] [264])
                (mult:DI (reg:DI 0 ax [orig:263 _177 ] [263])
                    (reg:DI 4 si [orig:663 stride.2_632 ] [663])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":84 329 {*muldi3_1}
     (nil))
(insn 515 514 516 29 (parallel [
            (set (reg:DI 1 dx [orig:265 _179 ] [265])
                (plus:DI (reg:DI 1 dx [orig:262 _176 ] [262])
                    (reg:DI 0 ax [orig:264 _178 ] [264])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":84 218 {*adddi_1}
     (nil))
(insn 516 515 517 29 (set (reg:SI 0 ax [858])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -60 [0xffffffffffffffc4])) [1 kpiv+0 S4 A32])) "../src/bnsolv.f":84 82 {*movsi_internal}
     (nil))
(insn 517 516 518 29 (set (reg:DI 0 ax [orig:266 _180 ] [266])
        (sign_extend:DI (reg:SI 0 ax [858]))) "../src/bnsolv.f":84 145 {*extendsidi2_rex64}
     (nil))
(insn 518 517 519 29 (parallel [
            (set (reg:DI 2 cx [orig:267 _181 ] [267])
                (plus:DI (reg:DI 1 dx [orig:265 _179 ] [265])
                    (reg:DI 0 ax [orig:266 _180 ] [266])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":84 218 {*adddi_1}
     (nil))
(insn 519 518 520 29 (set (reg:SI 0 ax [orig:268 i.54_182 ] [268])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [1 i+0 S4 A64])) "../src/bnsolv.f":84 82 {*movsi_internal}
     (nil))
(insn 520 519 521 29 (set (reg:DI 0 ax [orig:269 _183 ] [269])
        (sign_extend:DI (reg:SI 0 ax [orig:268 i.54_182 ] [268]))) "../src/bnsolv.f":84 145 {*extendsidi2_rex64}
     (nil))
(insn 521 520 522 29 (parallel [
            (set (reg:DI 0 ax [orig:270 _184 ] [270])
                (mult:DI (reg:DI 0 ax [orig:269 _183 ] [269])
                    (reg:DI 5 di [orig:665 stride.4_635 ] [665])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":84 329 {*muldi3_1}
     (nil))
(insn 522 521 523 29 (parallel [
            (set (reg:DI 1 dx [orig:271 _185 ] [271])
                (plus:DI (reg:DI 3 bx [orig:671 offset.5_642 ] [671])
                    (reg:DI 0 ax [orig:270 _184 ] [270])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":84 218 {*adddi_1}
     (nil))
(insn 523 522 524 29 (set (reg:SI 0 ax [859])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -68 [0xffffffffffffffbc])) [1 l+0 S4 A32])) "../src/bnsolv.f":84 82 {*movsi_internal}
     (nil))
(insn 524 523 525 29 (set (reg:DI 0 ax [orig:272 _186 ] [272])
        (sign_extend:DI (reg:SI 0 ax [859]))) "../src/bnsolv.f":84 145 {*extendsidi2_rex64}
     (nil))
(insn 525 524 526 29 (parallel [
            (set (reg:DI 0 ax [orig:273 _187 ] [273])
                (mult:DI (reg:DI 0 ax [orig:272 _186 ] [272])
                    (reg:DI 4 si [orig:663 stride.2_632 ] [663])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":84 329 {*muldi3_1}
     (nil))
(insn 526 525 527 29 (parallel [
            (set (reg:DI 1 dx [orig:274 _188 ] [274])
                (plus:DI (reg:DI 1 dx [orig:271 _185 ] [271])
                    (reg:DI 0 ax [orig:273 _187 ] [273])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":84 218 {*adddi_1}
     (nil))
(insn 527 526 528 29 (set (reg:SI 0 ax [860])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [1 kx+0 S4 A32])) "../src/bnsolv.f":84 82 {*movsi_internal}
     (nil))
(insn 528 527 529 29 (set (reg:DI 0 ax [orig:275 _189 ] [275])
        (sign_extend:DI (reg:SI 0 ax [860]))) "../src/bnsolv.f":84 145 {*extendsidi2_rex64}
     (nil))
(insn 529 528 530 29 (parallel [
            (set (reg:DI 1 dx [orig:276 _190 ] [276])
                (plus:DI (reg:DI 1 dx [orig:274 _188 ] [274])
                    (reg:DI 0 ax [orig:275 _189 ] [275])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":84 218 {*adddi_1}
     (nil))
(insn 530 529 531 29 (set (reg/f:DI 0 ax [861])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -696 [0xfffffffffffffd48])) [10 a+0 S8 A64])) "../src/bnsolv.f":84 81 {*movdi_internal}
     (nil))
(insn 531 530 532 29 (set (reg:SF 21 xmm0 [orig:277 _191 ] [277])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:267 _181 ] [267])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [861])) [3 *a_685(D) S4 A32])) "../src/bnsolv.f":84 127 {*movsf_internal}
     (nil))
(insn 532 531 533 29 (set (reg/f:DI 0 ax [862])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -696 [0xfffffffffffffd48])) [10 a+0 S8 A64])) "../src/bnsolv.f":84 81 {*movdi_internal}
     (nil))
(insn 533 532 534 29 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:276 _190 ] [276])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [862])) [3 *a_685(D) S4 A32])
        (reg:SF 21 xmm0 [orig:277 _191 ] [277])) "../src/bnsolv.f":84 127 {*movsf_internal}
     (nil))
(insn 534 533 535 29 (set (reg:SI 0 ax [orig:278 i.55_192 ] [278])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [1 i+0 S4 A64])) "../src/bnsolv.f":85 82 {*movsi_internal}
     (nil))
(insn 535 534 536 29 (set (reg:DI 0 ax [orig:279 _193 ] [279])
        (sign_extend:DI (reg:SI 0 ax [orig:278 i.55_192 ] [278]))) "../src/bnsolv.f":85 145 {*extendsidi2_rex64}
     (nil))
(insn 536 535 537 29 (parallel [
            (set (reg:DI 0 ax [orig:280 _194 ] [280])
                (mult:DI (reg:DI 0 ax [orig:279 _193 ] [279])
                    (reg:DI 5 di [orig:665 stride.4_635 ] [665])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":85 329 {*muldi3_1}
     (nil))
(insn 537 536 538 29 (parallel [
            (set (reg:DI 1 dx [orig:281 _195 ] [281])
                (plus:DI (reg:DI 3 bx [orig:671 offset.5_642 ] [671])
                    (reg:DI 0 ax [orig:280 _194 ] [280])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":85 218 {*adddi_1}
     (nil))
(insn 538 537 539 29 (set (reg:SI 0 ax [863])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -68 [0xffffffffffffffbc])) [1 l+0 S4 A32])) "../src/bnsolv.f":85 82 {*movsi_internal}
     (nil))
(insn 539 538 540 29 (set (reg:DI 0 ax [orig:282 _196 ] [282])
        (sign_extend:DI (reg:SI 0 ax [863]))) "../src/bnsolv.f":85 145 {*extendsidi2_rex64}
     (nil))
(insn 540 539 541 29 (parallel [
            (set (reg:DI 0 ax [orig:283 _197 ] [283])
                (mult:DI (reg:DI 0 ax [orig:282 _196 ] [282])
                    (reg:DI 4 si [orig:663 stride.2_632 ] [663])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":85 329 {*muldi3_1}
     (nil))
(insn 541 540 542 29 (parallel [
            (set (reg:DI 1 dx [orig:284 _198 ] [284])
                (plus:DI (reg:DI 1 dx [orig:281 _195 ] [281])
                    (reg:DI 0 ax [orig:283 _197 ] [283])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":85 218 {*adddi_1}
     (nil))
(insn 542 541 543 29 (set (reg:SI 0 ax [864])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -60 [0xffffffffffffffc4])) [1 kpiv+0 S4 A32])) "../src/bnsolv.f":85 82 {*movsi_internal}
     (nil))
(insn 543 542 544 29 (set (reg:DI 0 ax [orig:285 _199 ] [285])
        (sign_extend:DI (reg:SI 0 ax [864]))) "../src/bnsolv.f":85 145 {*extendsidi2_rex64}
     (nil))
(insn 544 543 545 29 (parallel [
            (set (reg:DI 1 dx [orig:286 _200 ] [286])
                (plus:DI (reg:DI 1 dx [orig:284 _198 ] [284])
                    (reg:DI 0 ax [orig:285 _199 ] [285])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":85 218 {*adddi_1}
     (nil))
(insn 545 544 546 29 (set (reg/f:DI 0 ax [865])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -696 [0xfffffffffffffd48])) [10 a+0 S8 A64])) "../src/bnsolv.f":85 81 {*movdi_internal}
     (nil))
(insn 546 545 547 29 (set (reg:SF 21 xmm0 [866])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -188 [0xffffffffffffff44])) [3 temp+0 S4 A32])) "../src/bnsolv.f":85 127 {*movsf_internal}
     (nil))
(insn 547 546 548 29 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:286 _200 ] [286])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [865])) [3 *a_685(D) S4 A32])
        (reg:SF 21 xmm0 [866])) "../src/bnsolv.f":85 127 {*movsf_internal}
     (nil))
(insn 548 547 1377 29 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -68 [0xffffffffffffffbc])) [1 l+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -68 [0xffffffffffffffbc])) [1 l+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":82 217 {*addsi_1}
     (nil))
(jump_insn 1377 548 1378 29 (set (pc)
        (label_ref 549)) "../src/bnsolv.f":82 649 {jump}
     (nil)
 -> 549)
;;  succ:       28 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 702 709

(barrier 1378 1377 1444)
;; basic block 93, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 29, next block 30, flags: (RTL, MODIFIED)
;;  pred:       28
;; bb 93 artificial_defs: { }
;; bb 93 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 702
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 1444 1378 1443 93 66 (nil) [1 uses])
(note 1443 1444 1445 93 [bb 93] NOTE_INSN_BASIC_BLOCK)
(insn 1445 1443 552 93 (const_int 0 [0]) "../src/bnsolv.f":86 682 {nop}
     (nil))
;;  succ:       30 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 702

;; basic block 30, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 93, next block 31, flags: (RTL, MODIFIED)
;;  pred:       93 [100.0%]  (FALLTHRU)
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 702
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 711 867
(code_label 552 1445 553 30 17 (nil) [0 uses])
(note 553 552 554 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 554 553 555 30 (set (reg/f:DI 0 ax [867])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -728 [0xfffffffffffffd28])) [11 nb+0 S8 A64])) "../src/bnsolv.f":88 81 {*movdi_internal}
     (nil))
(insn 555 554 556 30 (set (reg:SI 40 r11 [orig:711 _720 ] [711])
        (mem:SI (reg/f:DI 0 ax [867]) [1 *nb_615(D)+0 S4 A32])) "../src/bnsolv.f":88 82 {*movsi_internal}
     (nil))
(insn 556 555 620 30 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -68 [0xffffffffffffffbc])) [1 l+0 S4 A32])
        (const_int 1 [0x1])) "../src/bnsolv.f":88 82 {*movsi_internal}
     (nil))
;;  succ:       31 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 702 711

;; basic block 31, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 30, next block 32, flags: (RTL, MODIFIED)
;;  pred:       30 (FALLTHRU)
;;              32 [100.0%] 
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 702 711
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 711
;; lr  def 	 17 [flags] 712
(code_label 620 556 557 31 20 (nil) [1 uses])
(note 557 620 558 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 558 557 559 31 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -68 [0xffffffffffffffbc])) [1 l+0 S4 A32])
            (reg:SI 40 r11 [orig:711 _720 ] [711]))) "../src/bnsolv.f":88 7 {*cmpsi_1}
     (nil))
(insn 559 558 560 31 (set (reg:QI 0 ax [orig:712 _722 ] [712])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "../src/bnsolv.f":88 613 {*setcc_qi}
     (nil))
(insn 560 559 561 31 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:712 _722 ] [712])
            (const_int 0 [0]))) "../src/bnsolv.f":88 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 561 560 562 31 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1447)
            (pc))) "../src/bnsolv.f":88 617 {*jcc_1}
     (nil)
 -> 1447)
;;  succ:       94
;;              32 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 702 711

;; basic block 32, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 31, next block 94, flags: (RTL, MODIFIED)
;;  pred:       31 (FALLTHRU)
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 702 711
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 673 675 681
;; lr  def 	 17 [flags] 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 868 869 870 871 872 873 874 875 876 877 878 879 880 881 882
(note 562 561 563 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 563 562 564 32 (set (reg:SI 0 ax [orig:287 i.56_201 ] [287])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [1 i+0 S4 A64])) "../src/bnsolv.f":89 82 {*movsi_internal}
     (nil))
(insn 564 563 565 32 (set (reg:DI 0 ax [orig:288 _202 ] [288])
        (sign_extend:DI (reg:SI 0 ax [orig:287 i.56_201 ] [287]))) "../src/bnsolv.f":89 145 {*extendsidi2_rex64}
     (nil))
(insn 565 564 566 32 (parallel [
            (set (reg:DI 0 ax [orig:289 _203 ] [289])
                (mult:DI (reg:DI 0 ax [orig:288 _202 ] [288])
                    (reg:DI 42 r13 [orig:675 stride.18_648 ] [675])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":89 329 {*muldi3_1}
     (nil))
(insn 566 565 567 32 (parallel [
            (set (reg:DI 1 dx [orig:290 _204 ] [290])
                (plus:DI (reg:DI 43 r14 [orig:681 offset.19_655 ] [681])
                    (reg:DI 0 ax [orig:289 _203 ] [289])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":89 218 {*adddi_1}
     (nil))
(insn 567 566 568 32 (set (reg:SI 0 ax [868])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -68 [0xffffffffffffffbc])) [1 l+0 S4 A32])) "../src/bnsolv.f":89 82 {*movsi_internal}
     (nil))
(insn 568 567 569 32 (set (reg:DI 0 ax [orig:291 _205 ] [291])
        (sign_extend:DI (reg:SI 0 ax [868]))) "../src/bnsolv.f":89 145 {*extendsidi2_rex64}
     (nil))
(insn 569 568 570 32 (parallel [
            (set (reg:DI 0 ax [orig:292 _206 ] [292])
                (mult:DI (reg:DI 0 ax [orig:291 _205 ] [291])
                    (reg:DI 41 r12 [orig:673 stride.16_645 ] [673])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":89 329 {*muldi3_1}
     (nil))
(insn 570 569 571 32 (parallel [
            (set (reg:DI 1 dx [orig:293 _207 ] [293])
                (plus:DI (reg:DI 1 dx [orig:290 _204 ] [290])
                    (reg:DI 0 ax [orig:292 _206 ] [292])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":89 218 {*adddi_1}
     (nil))
(insn 571 570 572 32 (set (reg:SI 0 ax [869])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [1 kx+0 S4 A32])) "../src/bnsolv.f":89 82 {*movsi_internal}
     (nil))
(insn 572 571 573 32 (set (reg:DI 0 ax [orig:294 _208 ] [294])
        (sign_extend:DI (reg:SI 0 ax [869]))) "../src/bnsolv.f":89 145 {*extendsidi2_rex64}
     (nil))
(insn 573 572 574 32 (parallel [
            (set (reg:DI 1 dx [orig:295 _209 ] [295])
                (plus:DI (reg:DI 1 dx [orig:293 _207 ] [293])
                    (reg:DI 0 ax [orig:294 _208 ] [294])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":89 218 {*adddi_1}
     (nil))
(insn 574 573 575 32 (set (reg/f:DI 0 ax [870])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -712 [0xfffffffffffffd38])) [10 c+0 S8 A64])) "../src/bnsolv.f":89 81 {*movdi_internal}
     (nil))
(insn 575 574 576 32 (set (reg:SF 21 xmm0 [orig:296 _210 ] [296])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:295 _209 ] [295])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [870])) [3 *c_686(D) S4 A32])) "../src/bnsolv.f":89 127 {*movsf_internal}
     (nil))
(insn 576 575 577 32 (set (reg:SF 22 xmm1 [872])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [3 pivot+0 S4 A32])) "../src/bnsolv.f":89 127 {*movsf_internal}
     (nil))
(insn 577 576 578 32 (set (reg:SF 21 xmm0 [871])
        (mult:SF (reg:SF 21 xmm0 [orig:296 _210 ] [296])
            (reg:SF 22 xmm1 [872]))) "../src/bnsolv.f":89 802 {*fop_sf_comm}
     (nil))
(insn 578 577 579 32 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -188 [0xffffffffffffff44])) [3 temp+0 S4 A32])
        (reg:SF 21 xmm0 [871])) "../src/bnsolv.f":89 127 {*movsf_internal}
     (nil))
(insn 579 578 580 32 (set (reg:SI 0 ax [orig:297 i.57_211 ] [297])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [1 i+0 S4 A64])) "../src/bnsolv.f":90 82 {*movsi_internal}
     (nil))
(insn 580 579 581 32 (set (reg:DI 0 ax [orig:298 _212 ] [298])
        (sign_extend:DI (reg:SI 0 ax [orig:297 i.57_211 ] [297]))) "../src/bnsolv.f":90 145 {*extendsidi2_rex64}
     (nil))
(insn 581 580 582 32 (parallel [
            (set (reg:DI 0 ax [orig:299 _213 ] [299])
                (mult:DI (reg:DI 0 ax [orig:298 _212 ] [298])
                    (reg:DI 42 r13 [orig:675 stride.18_648 ] [675])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":90 329 {*muldi3_1}
     (nil))
(insn 582 581 583 32 (parallel [
            (set (reg:DI 1 dx [orig:300 _214 ] [300])
                (plus:DI (reg:DI 43 r14 [orig:681 offset.19_655 ] [681])
                    (reg:DI 0 ax [orig:299 _213 ] [299])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":90 218 {*adddi_1}
     (nil))
(insn 583 582 584 32 (set (reg:SI 0 ax [873])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -68 [0xffffffffffffffbc])) [1 l+0 S4 A32])) "../src/bnsolv.f":90 82 {*movsi_internal}
     (nil))
(insn 584 583 585 32 (set (reg:DI 0 ax [orig:301 _215 ] [301])
        (sign_extend:DI (reg:SI 0 ax [873]))) "../src/bnsolv.f":90 145 {*extendsidi2_rex64}
     (nil))
(insn 585 584 586 32 (parallel [
            (set (reg:DI 0 ax [orig:302 _216 ] [302])
                (mult:DI (reg:DI 0 ax [orig:301 _215 ] [301])
                    (reg:DI 41 r12 [orig:673 stride.16_645 ] [673])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":90 329 {*muldi3_1}
     (nil))
(insn 586 585 587 32 (parallel [
            (set (reg:DI 1 dx [orig:303 _217 ] [303])
                (plus:DI (reg:DI 1 dx [orig:300 _214 ] [300])
                    (reg:DI 0 ax [orig:302 _216 ] [302])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":90 218 {*adddi_1}
     (nil))
(insn 587 586 588 32 (set (reg:SI 0 ax [874])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -60 [0xffffffffffffffc4])) [1 kpiv+0 S4 A32])) "../src/bnsolv.f":90 82 {*movsi_internal}
     (nil))
(insn 588 587 589 32 (set (reg:DI 0 ax [orig:304 _218 ] [304])
        (sign_extend:DI (reg:SI 0 ax [874]))) "../src/bnsolv.f":90 145 {*extendsidi2_rex64}
     (nil))
(insn 589 588 590 32 (parallel [
            (set (reg:DI 2 cx [orig:305 _219 ] [305])
                (plus:DI (reg:DI 1 dx [orig:303 _217 ] [303])
                    (reg:DI 0 ax [orig:304 _218 ] [304])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":90 218 {*adddi_1}
     (nil))
(insn 590 589 591 32 (set (reg:SI 0 ax [orig:306 i.58_220 ] [306])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [1 i+0 S4 A64])) "../src/bnsolv.f":90 82 {*movsi_internal}
     (nil))
(insn 591 590 592 32 (set (reg:DI 0 ax [orig:307 _221 ] [307])
        (sign_extend:DI (reg:SI 0 ax [orig:306 i.58_220 ] [306]))) "../src/bnsolv.f":90 145 {*extendsidi2_rex64}
     (nil))
(insn 592 591 593 32 (parallel [
            (set (reg:DI 0 ax [orig:308 _222 ] [308])
                (mult:DI (reg:DI 0 ax [orig:307 _221 ] [307])
                    (reg:DI 42 r13 [orig:675 stride.18_648 ] [675])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":90 329 {*muldi3_1}
     (nil))
(insn 593 592 594 32 (parallel [
            (set (reg:DI 1 dx [orig:309 _223 ] [309])
                (plus:DI (reg:DI 43 r14 [orig:681 offset.19_655 ] [681])
                    (reg:DI 0 ax [orig:308 _222 ] [308])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":90 218 {*adddi_1}
     (nil))
(insn 594 593 595 32 (set (reg:SI 0 ax [875])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -68 [0xffffffffffffffbc])) [1 l+0 S4 A32])) "../src/bnsolv.f":90 82 {*movsi_internal}
     (nil))
(insn 595 594 596 32 (set (reg:DI 0 ax [orig:310 _224 ] [310])
        (sign_extend:DI (reg:SI 0 ax [875]))) "../src/bnsolv.f":90 145 {*extendsidi2_rex64}
     (nil))
(insn 596 595 597 32 (parallel [
            (set (reg:DI 0 ax [orig:311 _225 ] [311])
                (mult:DI (reg:DI 0 ax [orig:310 _224 ] [310])
                    (reg:DI 41 r12 [orig:673 stride.16_645 ] [673])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":90 329 {*muldi3_1}
     (nil))
(insn 597 596 598 32 (parallel [
            (set (reg:DI 1 dx [orig:312 _226 ] [312])
                (plus:DI (reg:DI 1 dx [orig:309 _223 ] [309])
                    (reg:DI 0 ax [orig:311 _225 ] [311])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":90 218 {*adddi_1}
     (nil))
(insn 598 597 599 32 (set (reg:SI 0 ax [876])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [1 kx+0 S4 A32])) "../src/bnsolv.f":90 82 {*movsi_internal}
     (nil))
(insn 599 598 600 32 (set (reg:DI 0 ax [orig:313 _227 ] [313])
        (sign_extend:DI (reg:SI 0 ax [876]))) "../src/bnsolv.f":90 145 {*extendsidi2_rex64}
     (nil))
(insn 600 599 601 32 (parallel [
            (set (reg:DI 1 dx [orig:314 _228 ] [314])
                (plus:DI (reg:DI 1 dx [orig:312 _226 ] [312])
                    (reg:DI 0 ax [orig:313 _227 ] [313])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":90 218 {*adddi_1}
     (nil))
(insn 601 600 602 32 (set (reg/f:DI 0 ax [877])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -712 [0xfffffffffffffd38])) [10 c+0 S8 A64])) "../src/bnsolv.f":90 81 {*movdi_internal}
     (nil))
(insn 602 601 603 32 (set (reg:SF 21 xmm0 [orig:315 _229 ] [315])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:305 _219 ] [305])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [877])) [3 *c_686(D) S4 A32])) "../src/bnsolv.f":90 127 {*movsf_internal}
     (nil))
(insn 603 602 604 32 (set (reg/f:DI 0 ax [878])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -712 [0xfffffffffffffd38])) [10 c+0 S8 A64])) "../src/bnsolv.f":90 81 {*movdi_internal}
     (nil))
(insn 604 603 605 32 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:314 _228 ] [314])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [878])) [3 *c_686(D) S4 A32])
        (reg:SF 21 xmm0 [orig:315 _229 ] [315])) "../src/bnsolv.f":90 127 {*movsf_internal}
     (nil))
(insn 605 604 606 32 (set (reg:SI 0 ax [orig:316 i.59_230 ] [316])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [1 i+0 S4 A64])) "../src/bnsolv.f":91 82 {*movsi_internal}
     (nil))
(insn 606 605 607 32 (set (reg:DI 0 ax [orig:317 _231 ] [317])
        (sign_extend:DI (reg:SI 0 ax [orig:316 i.59_230 ] [316]))) "../src/bnsolv.f":91 145 {*extendsidi2_rex64}
     (nil))
(insn 607 606 608 32 (parallel [
            (set (reg:DI 0 ax [orig:318 _232 ] [318])
                (mult:DI (reg:DI 0 ax [orig:317 _231 ] [317])
                    (reg:DI 42 r13 [orig:675 stride.18_648 ] [675])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":91 329 {*muldi3_1}
     (nil))
(insn 608 607 609 32 (parallel [
            (set (reg:DI 1 dx [orig:319 _233 ] [319])
                (plus:DI (reg:DI 43 r14 [orig:681 offset.19_655 ] [681])
                    (reg:DI 0 ax [orig:318 _232 ] [318])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":91 218 {*adddi_1}
     (nil))
(insn 609 608 610 32 (set (reg:SI 0 ax [879])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -68 [0xffffffffffffffbc])) [1 l+0 S4 A32])) "../src/bnsolv.f":91 82 {*movsi_internal}
     (nil))
(insn 610 609 611 32 (set (reg:DI 0 ax [orig:320 _234 ] [320])
        (sign_extend:DI (reg:SI 0 ax [879]))) "../src/bnsolv.f":91 145 {*extendsidi2_rex64}
     (nil))
(insn 611 610 612 32 (parallel [
            (set (reg:DI 0 ax [orig:321 _235 ] [321])
                (mult:DI (reg:DI 0 ax [orig:320 _234 ] [320])
                    (reg:DI 41 r12 [orig:673 stride.16_645 ] [673])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":91 329 {*muldi3_1}
     (nil))
(insn 612 611 613 32 (parallel [
            (set (reg:DI 1 dx [orig:322 _236 ] [322])
                (plus:DI (reg:DI 1 dx [orig:319 _233 ] [319])
                    (reg:DI 0 ax [orig:321 _235 ] [321])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":91 218 {*adddi_1}
     (nil))
(insn 613 612 614 32 (set (reg:SI 0 ax [880])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -60 [0xffffffffffffffc4])) [1 kpiv+0 S4 A32])) "../src/bnsolv.f":91 82 {*movsi_internal}
     (nil))
(insn 614 613 615 32 (set (reg:DI 0 ax [orig:323 _237 ] [323])
        (sign_extend:DI (reg:SI 0 ax [880]))) "../src/bnsolv.f":91 145 {*extendsidi2_rex64}
     (nil))
(insn 615 614 616 32 (parallel [
            (set (reg:DI 1 dx [orig:324 _238 ] [324])
                (plus:DI (reg:DI 1 dx [orig:322 _236 ] [322])
                    (reg:DI 0 ax [orig:323 _237 ] [323])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":91 218 {*adddi_1}
     (nil))
(insn 616 615 617 32 (set (reg/f:DI 0 ax [881])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -712 [0xfffffffffffffd38])) [10 c+0 S8 A64])) "../src/bnsolv.f":91 81 {*movdi_internal}
     (nil))
(insn 617 616 618 32 (set (reg:SF 21 xmm0 [882])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -188 [0xffffffffffffff44])) [3 temp+0 S4 A32])) "../src/bnsolv.f":91 127 {*movsf_internal}
     (nil))
(insn 618 617 619 32 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:324 _238 ] [324])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [881])) [3 *c_686(D) S4 A32])
        (reg:SF 21 xmm0 [882])) "../src/bnsolv.f":91 127 {*movsf_internal}
     (nil))
(insn 619 618 1379 32 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -68 [0xffffffffffffffbc])) [1 l+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -68 [0xffffffffffffffbc])) [1 l+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":88 217 {*addsi_1}
     (nil))
(jump_insn 1379 619 1380 32 (set (pc)
        (label_ref 620)) "../src/bnsolv.f":88 649 {jump}
     (nil)
 -> 620)
;;  succ:       31 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 702 711

(barrier 1380 1379 1447)
;; basic block 94, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 32, next block 33, flags: (RTL, MODIFIED)
;;  pred:       31
;; bb 94 artificial_defs: { }
;; bb 94 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 702
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 1447 1380 1446 94 67 (nil) [1 uses])
(note 1446 1447 1448 94 [bb 94] NOTE_INSN_BASIC_BLOCK)
(insn 1448 1446 623 94 (const_int 0 [0]) "../src/bnsolv.f":92 682 {nop}
     (nil))
;;  succ:       33 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 702

;; basic block 33, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 94, next block 34, flags: (RTL, MODIFIED)
;;  pred:       94 [100.0%]  (FALLTHRU)
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 702
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 713 883
(code_label 623 1448 624 33 19 (nil) [0 uses])
(note 624 623 625 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 625 624 626 33 (set (reg/f:DI 0 ax [883])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 16 [0x10])) [11 nrhs+0 S8 A64])) "../src/bnsolv.f":94 81 {*movdi_internal}
     (nil))
(insn 626 625 627 33 (set (reg:SI 40 r11 [orig:713 _727 ] [713])
        (mem:SI (reg/f:DI 0 ax [883]) [1 *nrhs_689(D)+0 S4 A32])) "../src/bnsolv.f":94 82 {*movsi_internal}
     (nil))
(insn 627 626 691 33 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -68 [0xffffffffffffffbc])) [1 l+0 S4 A32])
        (const_int 1 [0x1])) "../src/bnsolv.f":94 82 {*movsi_internal}
     (nil))
;;  succ:       34 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 702 713

;; basic block 34, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 33, next block 35, flags: (RTL, MODIFIED)
;;  pred:       33 (FALLTHRU)
;;              35 [100.0%] 
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 702 713
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 713
;; lr  def 	 17 [flags] 714
(code_label 691 627 628 34 22 (nil) [1 uses])
(note 628 691 629 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 629 628 630 34 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -68 [0xffffffffffffffbc])) [1 l+0 S4 A32])
            (reg:SI 40 r11 [orig:713 _727 ] [713]))) "../src/bnsolv.f":94 7 {*cmpsi_1}
     (nil))
(insn 630 629 631 34 (set (reg:QI 0 ax [orig:714 _729 ] [714])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "../src/bnsolv.f":94 613 {*setcc_qi}
     (nil))
(insn 631 630 632 34 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:714 _729 ] [714])
            (const_int 0 [0]))) "../src/bnsolv.f":94 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 632 631 633 34 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1450)
            (pc))) "../src/bnsolv.f":94 617 {*jcc_1}
     (nil)
 -> 1450)
;;  succ:       95
;;              35 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 702 713

;; basic block 35, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 34, next block 95, flags: (RTL, MODIFIED)
;;  pred:       34 (FALLTHRU)
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 702 713
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 683 685 691
;; lr  def 	 17 [flags] 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359 360 361 362 884 885 886 887 888 889 890 891 892 893 894 895 896 897 898
(note 633 632 634 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 634 633 635 35 (set (reg:SI 0 ax [orig:325 i.60_239 ] [325])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [1 i+0 S4 A64])) "../src/bnsolv.f":95 82 {*movsi_internal}
     (nil))
(insn 635 634 636 35 (set (reg:DI 0 ax [orig:326 _240 ] [326])
        (sign_extend:DI (reg:SI 0 ax [orig:325 i.60_239 ] [325]))) "../src/bnsolv.f":95 145 {*extendsidi2_rex64}
     (nil))
(insn 636 635 637 35 (parallel [
            (set (reg:DI 0 ax [orig:327 _241 ] [327])
                (mult:DI (reg:DI 0 ax [orig:326 _240 ] [326])
                    (reg:DI 38 r9 [orig:685 stride.25_662 ] [685])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":95 329 {*muldi3_1}
     (nil))
(insn 637 636 638 35 (parallel [
            (set (reg:DI 1 dx [orig:328 _242 ] [328])
                (plus:DI (reg:DI 39 r10 [orig:691 offset.26_669 ] [691])
                    (reg:DI 0 ax [orig:327 _241 ] [327])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":95 218 {*adddi_1}
     (nil))
(insn 638 637 639 35 (set (reg:SI 0 ax [884])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -68 [0xffffffffffffffbc])) [1 l+0 S4 A32])) "../src/bnsolv.f":95 82 {*movsi_internal}
     (nil))
(insn 639 638 640 35 (set (reg:DI 0 ax [orig:329 _243 ] [329])
        (sign_extend:DI (reg:SI 0 ax [884]))) "../src/bnsolv.f":95 145 {*extendsidi2_rex64}
     (nil))
(insn 640 639 641 35 (parallel [
            (set (reg:DI 0 ax [orig:330 _244 ] [330])
                (mult:DI (reg:DI 0 ax [orig:329 _243 ] [329])
                    (reg:DI 37 r8 [orig:683 stride.23_658 ] [683])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":95 329 {*muldi3_1}
     (nil))
(insn 641 640 642 35 (parallel [
            (set (reg:DI 1 dx [orig:331 _245 ] [331])
                (plus:DI (reg:DI 1 dx [orig:328 _242 ] [328])
                    (reg:DI 0 ax [orig:330 _244 ] [330])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":95 218 {*adddi_1}
     (nil))
(insn 642 641 643 35 (set (reg:SI 0 ax [885])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [1 kx+0 S4 A32])) "../src/bnsolv.f":95 82 {*movsi_internal}
     (nil))
(insn 643 642 644 35 (set (reg:DI 0 ax [orig:332 _246 ] [332])
        (sign_extend:DI (reg:SI 0 ax [885]))) "../src/bnsolv.f":95 145 {*extendsidi2_rex64}
     (nil))
(insn 644 643 645 35 (parallel [
            (set (reg:DI 1 dx [orig:333 _247 ] [333])
                (plus:DI (reg:DI 1 dx [orig:331 _245 ] [331])
                    (reg:DI 0 ax [orig:332 _246 ] [332])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":95 218 {*adddi_1}
     (nil))
(insn 645 644 646 35 (set (reg/f:DI 0 ax [886])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -720 [0xfffffffffffffd30])) [10 r+0 S8 A64])) "../src/bnsolv.f":95 81 {*movdi_internal}
     (nil))
(insn 646 645 647 35 (set (reg:SF 21 xmm0 [orig:334 _248 ] [334])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:333 _247 ] [333])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [886])) [3 *r_693(D) S4 A32])) "../src/bnsolv.f":95 127 {*movsf_internal}
     (nil))
(insn 647 646 648 35 (set (reg:SF 22 xmm1 [888])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [3 pivot+0 S4 A32])) "../src/bnsolv.f":95 127 {*movsf_internal}
     (nil))
(insn 648 647 649 35 (set (reg:SF 21 xmm0 [887])
        (mult:SF (reg:SF 21 xmm0 [orig:334 _248 ] [334])
            (reg:SF 22 xmm1 [888]))) "../src/bnsolv.f":95 802 {*fop_sf_comm}
     (nil))
(insn 649 648 650 35 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -188 [0xffffffffffffff44])) [3 temp+0 S4 A32])
        (reg:SF 21 xmm0 [887])) "../src/bnsolv.f":95 127 {*movsf_internal}
     (nil))
(insn 650 649 651 35 (set (reg:SI 0 ax [orig:335 i.61_249 ] [335])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [1 i+0 S4 A64])) "../src/bnsolv.f":96 82 {*movsi_internal}
     (nil))
(insn 651 650 652 35 (set (reg:DI 0 ax [orig:336 _250 ] [336])
        (sign_extend:DI (reg:SI 0 ax [orig:335 i.61_249 ] [335]))) "../src/bnsolv.f":96 145 {*extendsidi2_rex64}
     (nil))
(insn 652 651 653 35 (parallel [
            (set (reg:DI 0 ax [orig:337 _251 ] [337])
                (mult:DI (reg:DI 0 ax [orig:336 _250 ] [336])
                    (reg:DI 38 r9 [orig:685 stride.25_662 ] [685])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":96 329 {*muldi3_1}
     (nil))
(insn 653 652 654 35 (parallel [
            (set (reg:DI 1 dx [orig:338 _252 ] [338])
                (plus:DI (reg:DI 39 r10 [orig:691 offset.26_669 ] [691])
                    (reg:DI 0 ax [orig:337 _251 ] [337])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":96 218 {*adddi_1}
     (nil))
(insn 654 653 655 35 (set (reg:SI 0 ax [889])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -68 [0xffffffffffffffbc])) [1 l+0 S4 A32])) "../src/bnsolv.f":96 82 {*movsi_internal}
     (nil))
(insn 655 654 656 35 (set (reg:DI 0 ax [orig:339 _253 ] [339])
        (sign_extend:DI (reg:SI 0 ax [889]))) "../src/bnsolv.f":96 145 {*extendsidi2_rex64}
     (nil))
(insn 656 655 657 35 (parallel [
            (set (reg:DI 0 ax [orig:340 _254 ] [340])
                (mult:DI (reg:DI 0 ax [orig:339 _253 ] [339])
                    (reg:DI 37 r8 [orig:683 stride.23_658 ] [683])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":96 329 {*muldi3_1}
     (nil))
(insn 657 656 658 35 (parallel [
            (set (reg:DI 1 dx [orig:341 _255 ] [341])
                (plus:DI (reg:DI 1 dx [orig:338 _252 ] [338])
                    (reg:DI 0 ax [orig:340 _254 ] [340])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":96 218 {*adddi_1}
     (nil))
(insn 658 657 659 35 (set (reg:SI 0 ax [890])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -60 [0xffffffffffffffc4])) [1 kpiv+0 S4 A32])) "../src/bnsolv.f":96 82 {*movsi_internal}
     (nil))
(insn 659 658 660 35 (set (reg:DI 0 ax [orig:342 _256 ] [342])
        (sign_extend:DI (reg:SI 0 ax [890]))) "../src/bnsolv.f":96 145 {*extendsidi2_rex64}
     (nil))
(insn 660 659 661 35 (parallel [
            (set (reg:DI 2 cx [orig:343 _257 ] [343])
                (plus:DI (reg:DI 1 dx [orig:341 _255 ] [341])
                    (reg:DI 0 ax [orig:342 _256 ] [342])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":96 218 {*adddi_1}
     (nil))
(insn 661 660 662 35 (set (reg:SI 0 ax [orig:344 i.62_258 ] [344])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [1 i+0 S4 A64])) "../src/bnsolv.f":96 82 {*movsi_internal}
     (nil))
(insn 662 661 663 35 (set (reg:DI 0 ax [orig:345 _259 ] [345])
        (sign_extend:DI (reg:SI 0 ax [orig:344 i.62_258 ] [344]))) "../src/bnsolv.f":96 145 {*extendsidi2_rex64}
     (nil))
(insn 663 662 664 35 (parallel [
            (set (reg:DI 0 ax [orig:346 _260 ] [346])
                (mult:DI (reg:DI 0 ax [orig:345 _259 ] [345])
                    (reg:DI 38 r9 [orig:685 stride.25_662 ] [685])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":96 329 {*muldi3_1}
     (nil))
(insn 664 663 665 35 (parallel [
            (set (reg:DI 1 dx [orig:347 _261 ] [347])
                (plus:DI (reg:DI 39 r10 [orig:691 offset.26_669 ] [691])
                    (reg:DI 0 ax [orig:346 _260 ] [346])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":96 218 {*adddi_1}
     (nil))
(insn 665 664 666 35 (set (reg:SI 0 ax [891])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -68 [0xffffffffffffffbc])) [1 l+0 S4 A32])) "../src/bnsolv.f":96 82 {*movsi_internal}
     (nil))
(insn 666 665 667 35 (set (reg:DI 0 ax [orig:348 _262 ] [348])
        (sign_extend:DI (reg:SI 0 ax [891]))) "../src/bnsolv.f":96 145 {*extendsidi2_rex64}
     (nil))
(insn 667 666 668 35 (parallel [
            (set (reg:DI 0 ax [orig:349 _263 ] [349])
                (mult:DI (reg:DI 0 ax [orig:348 _262 ] [348])
                    (reg:DI 37 r8 [orig:683 stride.23_658 ] [683])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":96 329 {*muldi3_1}
     (nil))
(insn 668 667 669 35 (parallel [
            (set (reg:DI 1 dx [orig:350 _264 ] [350])
                (plus:DI (reg:DI 1 dx [orig:347 _261 ] [347])
                    (reg:DI 0 ax [orig:349 _263 ] [349])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":96 218 {*adddi_1}
     (nil))
(insn 669 668 670 35 (set (reg:SI 0 ax [892])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [1 kx+0 S4 A32])) "../src/bnsolv.f":96 82 {*movsi_internal}
     (nil))
(insn 670 669 671 35 (set (reg:DI 0 ax [orig:351 _265 ] [351])
        (sign_extend:DI (reg:SI 0 ax [892]))) "../src/bnsolv.f":96 145 {*extendsidi2_rex64}
     (nil))
(insn 671 670 672 35 (parallel [
            (set (reg:DI 1 dx [orig:352 _266 ] [352])
                (plus:DI (reg:DI 1 dx [orig:350 _264 ] [350])
                    (reg:DI 0 ax [orig:351 _265 ] [351])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":96 218 {*adddi_1}
     (nil))
(insn 672 671 673 35 (set (reg/f:DI 0 ax [893])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -720 [0xfffffffffffffd30])) [10 r+0 S8 A64])) "../src/bnsolv.f":96 81 {*movdi_internal}
     (nil))
(insn 673 672 674 35 (set (reg:SF 21 xmm0 [orig:353 _267 ] [353])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:343 _257 ] [343])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [893])) [3 *r_693(D) S4 A32])) "../src/bnsolv.f":96 127 {*movsf_internal}
     (nil))
(insn 674 673 675 35 (set (reg/f:DI 0 ax [894])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -720 [0xfffffffffffffd30])) [10 r+0 S8 A64])) "../src/bnsolv.f":96 81 {*movdi_internal}
     (nil))
(insn 675 674 676 35 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:352 _266 ] [352])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [894])) [3 *r_693(D) S4 A32])
        (reg:SF 21 xmm0 [orig:353 _267 ] [353])) "../src/bnsolv.f":96 127 {*movsf_internal}
     (nil))
(insn 676 675 677 35 (set (reg:SI 0 ax [orig:354 i.63_268 ] [354])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [1 i+0 S4 A64])) "../src/bnsolv.f":97 82 {*movsi_internal}
     (nil))
(insn 677 676 678 35 (set (reg:DI 0 ax [orig:355 _269 ] [355])
        (sign_extend:DI (reg:SI 0 ax [orig:354 i.63_268 ] [354]))) "../src/bnsolv.f":97 145 {*extendsidi2_rex64}
     (nil))
(insn 678 677 679 35 (parallel [
            (set (reg:DI 0 ax [orig:356 _270 ] [356])
                (mult:DI (reg:DI 0 ax [orig:355 _269 ] [355])
                    (reg:DI 38 r9 [orig:685 stride.25_662 ] [685])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":97 329 {*muldi3_1}
     (nil))
(insn 679 678 680 35 (parallel [
            (set (reg:DI 1 dx [orig:357 _271 ] [357])
                (plus:DI (reg:DI 39 r10 [orig:691 offset.26_669 ] [691])
                    (reg:DI 0 ax [orig:356 _270 ] [356])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":97 218 {*adddi_1}
     (nil))
(insn 680 679 681 35 (set (reg:SI 0 ax [895])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -68 [0xffffffffffffffbc])) [1 l+0 S4 A32])) "../src/bnsolv.f":97 82 {*movsi_internal}
     (nil))
(insn 681 680 682 35 (set (reg:DI 0 ax [orig:358 _272 ] [358])
        (sign_extend:DI (reg:SI 0 ax [895]))) "../src/bnsolv.f":97 145 {*extendsidi2_rex64}
     (nil))
(insn 682 681 683 35 (parallel [
            (set (reg:DI 0 ax [orig:359 _273 ] [359])
                (mult:DI (reg:DI 0 ax [orig:358 _272 ] [358])
                    (reg:DI 37 r8 [orig:683 stride.23_658 ] [683])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":97 329 {*muldi3_1}
     (nil))
(insn 683 682 684 35 (parallel [
            (set (reg:DI 1 dx [orig:360 _274 ] [360])
                (plus:DI (reg:DI 1 dx [orig:357 _271 ] [357])
                    (reg:DI 0 ax [orig:359 _273 ] [359])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":97 218 {*adddi_1}
     (nil))
(insn 684 683 685 35 (set (reg:SI 0 ax [896])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -60 [0xffffffffffffffc4])) [1 kpiv+0 S4 A32])) "../src/bnsolv.f":97 82 {*movsi_internal}
     (nil))
(insn 685 684 686 35 (set (reg:DI 0 ax [orig:361 _275 ] [361])
        (sign_extend:DI (reg:SI 0 ax [896]))) "../src/bnsolv.f":97 145 {*extendsidi2_rex64}
     (nil))
(insn 686 685 687 35 (parallel [
            (set (reg:DI 1 dx [orig:362 _276 ] [362])
                (plus:DI (reg:DI 1 dx [orig:360 _274 ] [360])
                    (reg:DI 0 ax [orig:361 _275 ] [361])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":97 218 {*adddi_1}
     (nil))
(insn 687 686 688 35 (set (reg/f:DI 0 ax [897])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -720 [0xfffffffffffffd30])) [10 r+0 S8 A64])) "../src/bnsolv.f":97 81 {*movdi_internal}
     (nil))
(insn 688 687 689 35 (set (reg:SF 21 xmm0 [898])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -188 [0xffffffffffffff44])) [3 temp+0 S4 A32])) "../src/bnsolv.f":97 127 {*movsf_internal}
     (nil))
(insn 689 688 690 35 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:362 _276 ] [362])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [897])) [3 *r_693(D) S4 A32])
        (reg:SF 21 xmm0 [898])) "../src/bnsolv.f":97 127 {*movsf_internal}
     (nil))
(insn 690 689 1381 35 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -68 [0xffffffffffffffbc])) [1 l+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -68 [0xffffffffffffffbc])) [1 l+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":94 217 {*addsi_1}
     (nil))
(jump_insn 1381 690 1382 35 (set (pc)
        (label_ref 691)) "../src/bnsolv.f":94 649 {jump}
     (nil)
 -> 691)
;;  succ:       34 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 702 713

(barrier 1382 1381 1450)
;; basic block 95, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 35, next block 36, flags: (RTL, MODIFIED)
;;  pred:       34
;; bb 95 artificial_defs: { }
;; bb 95 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 702
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 1450 1382 1449 95 68 (nil) [1 uses])
(note 1449 1450 1451 95 [bb 95] NOTE_INSN_BASIC_BLOCK)
(insn 1451 1449 694 95 (const_int 0 [0]) "../src/bnsolv.f":98 682 {nop}
     (nil))
;;  succ:       36 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 702

;; basic block 36, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 95, next block 37, flags: (RTL, MODIFIED)
;;  pred:       95 [100.0%]  (FALLTHRU)
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 702
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 715 716 899
(code_label 694 1451 695 36 21 (nil) [0 uses])
(note 695 694 696 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 696 695 697 36 (set (reg:SI 1 dx [orig:715 _734 ] [715])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -180 [0xffffffffffffff4c])) [1 kp1+0 S4 A32])) "../src/bnsolv.f":101 82 {*movsi_internal}
     (nil))
(insn 697 696 698 36 (set (reg/f:DI 0 ax [899])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -728 [0xfffffffffffffd28])) [11 nb+0 S8 A64])) "../src/bnsolv.f":101 81 {*movdi_internal}
     (nil))
(insn 698 697 699 36 (set (reg:SI 40 r11 [orig:716 _735 ] [716])
        (mem:SI (reg/f:DI 0 ax [899]) [1 *nb_615(D)+0 S4 A32])) "../src/bnsolv.f":101 82 {*movsi_internal}
     (nil))
(insn 699 698 890 36 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [1 k+0 S4 A32])
        (reg:SI 1 dx [orig:715 _734 ] [715])) "../src/bnsolv.f":101 82 {*movsi_internal}
     (nil))
;;  succ:       37 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 702 716

;; basic block 37, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 36, next block 38, flags: (RTL, MODIFIED)
;;  pred:       36 (FALLTHRU)
;;              47 [100.0%] 
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 702 716
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 716
;; lr  def 	 17 [flags] 717
(code_label 890 699 700 37 30 (nil) [1 uses])
(note 700 890 701 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 701 700 702 37 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -56 [0xffffffffffffffc8])) [1 k+0 S4 A32])
            (reg:SI 40 r11 [orig:716 _735 ] [716]))) "../src/bnsolv.f":101 7 {*cmpsi_1}
     (nil))
(insn 702 701 703 37 (set (reg:QI 0 ax [orig:717 _737 ] [717])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "../src/bnsolv.f":101 613 {*setcc_qi}
     (nil))
(insn 703 702 704 37 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:717 _737 ] [717])
            (const_int 0 [0]))) "../src/bnsolv.f":101 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 704 703 705 37 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1453)
            (pc))) "../src/bnsolv.f":101 617 {*jcc_1}
     (nil)
 -> 1453)
;;  succ:       96
;;              38 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 702 716

;; basic block 38, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 37, next block 39, flags: (RTL, MODIFIED)
;;  pred:       37 (FALLTHRU)
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 702 716
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671
;; lr  def 	 17 [flags] 363 364 365 366 367 368 369 370 371 718 719 900 901 902 903 904
(note 705 704 706 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 706 705 707 38 (set (reg:SI 0 ax [orig:363 i.64_277 ] [363])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [1 i+0 S4 A64])) "../src/bnsolv.f":102 82 {*movsi_internal}
     (nil))
(insn 707 706 708 38 (set (reg:DI 0 ax [orig:364 _278 ] [364])
        (sign_extend:DI (reg:SI 0 ax [orig:363 i.64_277 ] [363]))) "../src/bnsolv.f":102 145 {*extendsidi2_rex64}
     (nil))
(insn 708 707 709 38 (parallel [
            (set (reg:DI 0 ax [orig:365 _279 ] [365])
                (mult:DI (reg:DI 0 ax [orig:364 _278 ] [364])
                    (reg:DI 5 di [orig:665 stride.4_635 ] [665])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":102 329 {*muldi3_1}
     (nil))
(insn 709 708 710 38 (parallel [
            (set (reg:DI 1 dx [orig:366 _280 ] [366])
                (plus:DI (reg:DI 3 bx [orig:671 offset.5_642 ] [671])
                    (reg:DI 0 ax [orig:365 _279 ] [365])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":102 218 {*adddi_1}
     (nil))
(insn 710 709 711 38 (set (reg:SI 0 ax [900])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -60 [0xffffffffffffffc4])) [1 kpiv+0 S4 A32])) "../src/bnsolv.f":102 82 {*movsi_internal}
     (nil))
(insn 711 710 712 38 (set (reg:DI 0 ax [orig:367 _281 ] [367])
        (sign_extend:DI (reg:SI 0 ax [900]))) "../src/bnsolv.f":102 145 {*extendsidi2_rex64}
     (nil))
(insn 712 711 713 38 (parallel [
            (set (reg:DI 0 ax [orig:368 _282 ] [368])
                (mult:DI (reg:DI 0 ax [orig:367 _281 ] [367])
                    (reg:DI 4 si [orig:663 stride.2_632 ] [663])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":102 329 {*muldi3_1}
     (nil))
(insn 713 712 714 38 (parallel [
            (set (reg:DI 1 dx [orig:369 _283 ] [369])
                (plus:DI (reg:DI 1 dx [orig:366 _280 ] [366])
                    (reg:DI 0 ax [orig:368 _282 ] [368])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":102 218 {*adddi_1}
     (nil))
(insn 714 713 715 38 (set (reg:SI 0 ax [901])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [1 k+0 S4 A32])) "../src/bnsolv.f":102 82 {*movsi_internal}
     (nil))
(insn 715 714 716 38 (set (reg:DI 0 ax [orig:370 _284 ] [370])
        (sign_extend:DI (reg:SI 0 ax [901]))) "../src/bnsolv.f":102 145 {*extendsidi2_rex64}
     (nil))
(insn 716 715 717 38 (parallel [
            (set (reg:DI 1 dx [orig:371 _285 ] [371])
                (plus:DI (reg:DI 1 dx [orig:369 _283 ] [369])
                    (reg:DI 0 ax [orig:370 _284 ] [370])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":102 218 {*adddi_1}
     (nil))
(insn 717 716 718 38 (set (reg/f:DI 0 ax [902])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -696 [0xfffffffffffffd48])) [10 a+0 S8 A64])) "../src/bnsolv.f":102 81 {*movdi_internal}
     (nil))
(insn 718 717 719 38 (set (reg:SF 21 xmm0 [903])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:371 _285 ] [371])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [902])) [3 *a_685(D) S4 A32])) "../src/bnsolv.f":102 127 {*movsf_internal}
     (nil))
(insn 719 718 720 38 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [3 atmp+0 S4 A32])
        (reg:SF 21 xmm0 [903])) "../src/bnsolv.f":102 127 {*movsf_internal}
     (nil))
(insn 720 719 721 38 (set (reg:SI 1 dx [orig:718 _739 ] [718])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -180 [0xffffffffffffff4c])) [1 kp1+0 S4 A32])) "../src/bnsolv.f":103 82 {*movsi_internal}
     (nil))
(insn 721 720 722 38 (set (reg/f:DI 0 ax [904])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -728 [0xfffffffffffffd28])) [11 nb+0 S8 A64])) "../src/bnsolv.f":103 81 {*movdi_internal}
     (nil))
(insn 722 721 723 38 (set (reg:SI 2 cx [orig:719 _740 ] [719])
        (mem:SI (reg/f:DI 0 ax [904]) [1 *nb_615(D)+0 S4 A32])) "../src/bnsolv.f":103 82 {*movsi_internal}
     (nil))
(insn 723 722 772 38 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -68 [0xffffffffffffffbc])) [1 l+0 S4 A32])
        (reg:SI 1 dx [orig:718 _739 ] [718])) "../src/bnsolv.f":103 82 {*movsi_internal}
     (nil))
;;  succ:       39 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 702 716 719

;; basic block 39, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 38, next block 40, flags: (RTL, MODIFIED)
;;  pred:       38 (FALLTHRU)
;;              40 [100.0%] 
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 702 716 719
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 719
;; lr  def 	 17 [flags] 720
(code_label 772 723 724 39 25 (nil) [1 uses])
(note 724 772 725 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 725 724 726 39 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -68 [0xffffffffffffffbc])) [1 l+0 S4 A32])
            (reg:SI 2 cx [orig:719 _740 ] [719]))) "../src/bnsolv.f":103 7 {*cmpsi_1}
     (nil))
(insn 726 725 727 39 (set (reg:QI 0 ax [orig:720 _742 ] [720])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "../src/bnsolv.f":103 613 {*setcc_qi}
     (nil))
(insn 727 726 728 39 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:720 _742 ] [720])
            (const_int 0 [0]))) "../src/bnsolv.f":103 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 728 727 729 39 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1456)
            (pc))) "../src/bnsolv.f":103 617 {*jcc_1}
     (nil)
 -> 1456)
;;  succ:       97
;;              40 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 702 716 719

;; basic block 40, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 39, next block 97, flags: (RTL, MODIFIED)
;;  pred:       39 (FALLTHRU)
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 702 716 719
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671
;; lr  def 	 17 [flags] 372 373 374 375 376 377 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395 396 397 398 399 400 401 402 905 906 907 908 909 910 911 912 913
(note 729 728 730 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 730 729 731 40 (set (reg:SI 0 ax [orig:372 i.65_286 ] [372])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [1 i+0 S4 A64])) "../src/bnsolv.f":104 82 {*movsi_internal}
     (nil))
(insn 731 730 732 40 (set (reg:DI 0 ax [orig:373 _287 ] [373])
        (sign_extend:DI (reg:SI 0 ax [orig:372 i.65_286 ] [372]))) "../src/bnsolv.f":104 145 {*extendsidi2_rex64}
     (nil))
(insn 732 731 733 40 (parallel [
            (set (reg:DI 0 ax [orig:374 _288 ] [374])
                (mult:DI (reg:DI 0 ax [orig:373 _287 ] [373])
                    (reg:DI 5 di [orig:665 stride.4_635 ] [665])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":104 329 {*muldi3_1}
     (nil))
(insn 733 732 734 40 (parallel [
            (set (reg:DI 1 dx [orig:375 _289 ] [375])
                (plus:DI (reg:DI 3 bx [orig:671 offset.5_642 ] [671])
                    (reg:DI 0 ax [orig:374 _288 ] [374])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":104 218 {*adddi_1}
     (nil))
(insn 734 733 735 40 (set (reg:SI 0 ax [905])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -68 [0xffffffffffffffbc])) [1 l+0 S4 A32])) "../src/bnsolv.f":104 82 {*movsi_internal}
     (nil))
(insn 735 734 736 40 (set (reg:DI 0 ax [orig:376 _290 ] [376])
        (sign_extend:DI (reg:SI 0 ax [905]))) "../src/bnsolv.f":104 145 {*extendsidi2_rex64}
     (nil))
(insn 736 735 737 40 (parallel [
            (set (reg:DI 0 ax [orig:377 _291 ] [377])
                (mult:DI (reg:DI 0 ax [orig:376 _290 ] [376])
                    (reg:DI 4 si [orig:663 stride.2_632 ] [663])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":104 329 {*muldi3_1}
     (nil))
(insn 737 736 738 40 (parallel [
            (set (reg:DI 1 dx [orig:378 _292 ] [378])
                (plus:DI (reg:DI 1 dx [orig:375 _289 ] [375])
                    (reg:DI 0 ax [orig:377 _291 ] [377])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":104 218 {*adddi_1}
     (nil))
(insn 738 737 739 40 (set (reg:SI 0 ax [906])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [1 k+0 S4 A32])) "../src/bnsolv.f":104 82 {*movsi_internal}
     (nil))
(insn 739 738 740 40 (set (reg:DI 0 ax [orig:379 _293 ] [379])
        (sign_extend:DI (reg:SI 0 ax [906]))) "../src/bnsolv.f":104 145 {*extendsidi2_rex64}
     (nil))
(insn 740 739 741 40 (parallel [
            (set (reg:DI 1 dx [orig:380 _294 ] [380])
                (plus:DI (reg:DI 1 dx [orig:378 _292 ] [378])
                    (reg:DI 0 ax [orig:379 _293 ] [379])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":104 218 {*adddi_1}
     (nil))
(insn 741 740 742 40 (set (reg/f:DI 0 ax [907])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -696 [0xfffffffffffffd48])) [10 a+0 S8 A64])) "../src/bnsolv.f":104 81 {*movdi_internal}
     (nil))
(insn 742 741 743 40 (set (reg:SF 22 xmm1 [orig:381 _295 ] [381])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:380 _294 ] [380])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [907])) [3 *a_685(D) S4 A32])) "../src/bnsolv.f":104 127 {*movsf_internal}
     (nil))
(insn 743 742 744 40 (set (reg:SI 0 ax [orig:382 i.66_296 ] [382])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [1 i+0 S4 A64])) "../src/bnsolv.f":104 82 {*movsi_internal}
     (nil))
(insn 744 743 745 40 (set (reg:DI 0 ax [orig:383 _297 ] [383])
        (sign_extend:DI (reg:SI 0 ax [orig:382 i.66_296 ] [382]))) "../src/bnsolv.f":104 145 {*extendsidi2_rex64}
     (nil))
(insn 745 744 746 40 (parallel [
            (set (reg:DI 0 ax [orig:384 _298 ] [384])
                (mult:DI (reg:DI 0 ax [orig:383 _297 ] [383])
                    (reg:DI 5 di [orig:665 stride.4_635 ] [665])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":104 329 {*muldi3_1}
     (nil))
(insn 746 745 747 40 (parallel [
            (set (reg:DI 1 dx [orig:385 _299 ] [385])
                (plus:DI (reg:DI 3 bx [orig:671 offset.5_642 ] [671])
                    (reg:DI 0 ax [orig:384 _298 ] [384])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":104 218 {*adddi_1}
     (nil))
(insn 747 746 748 40 (set (reg:SI 0 ax [908])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -68 [0xffffffffffffffbc])) [1 l+0 S4 A32])) "../src/bnsolv.f":104 82 {*movsi_internal}
     (nil))
(insn 748 747 749 40 (set (reg:DI 0 ax [orig:386 _300 ] [386])
        (sign_extend:DI (reg:SI 0 ax [908]))) "../src/bnsolv.f":104 145 {*extendsidi2_rex64}
     (nil))
(insn 749 748 750 40 (parallel [
            (set (reg:DI 0 ax [orig:387 _301 ] [387])
                (mult:DI (reg:DI 0 ax [orig:386 _300 ] [386])
                    (reg:DI 4 si [orig:663 stride.2_632 ] [663])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":104 329 {*muldi3_1}
     (nil))
(insn 750 749 751 40 (parallel [
            (set (reg:DI 1 dx [orig:388 _302 ] [388])
                (plus:DI (reg:DI 1 dx [orig:385 _299 ] [385])
                    (reg:DI 0 ax [orig:387 _301 ] [387])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":104 218 {*adddi_1}
     (nil))
(insn 751 750 752 40 (set (reg:SI 0 ax [909])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -60 [0xffffffffffffffc4])) [1 kpiv+0 S4 A32])) "../src/bnsolv.f":104 82 {*movsi_internal}
     (nil))
(insn 752 751 753 40 (set (reg:DI 0 ax [orig:389 _303 ] [389])
        (sign_extend:DI (reg:SI 0 ax [909]))) "../src/bnsolv.f":104 145 {*extendsidi2_rex64}
     (nil))
(insn 753 752 754 40 (parallel [
            (set (reg:DI 1 dx [orig:390 _304 ] [390])
                (plus:DI (reg:DI 1 dx [orig:388 _302 ] [388])
                    (reg:DI 0 ax [orig:389 _303 ] [389])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":104 218 {*adddi_1}
     (nil))
(insn 754 753 755 40 (set (reg/f:DI 0 ax [910])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -696 [0xfffffffffffffd48])) [10 a+0 S8 A64])) "../src/bnsolv.f":104 81 {*movdi_internal}
     (nil))
(insn 755 754 756 40 (set (reg:SF 21 xmm0 [orig:391 _305 ] [391])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:390 _304 ] [390])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [910])) [3 *a_685(D) S4 A32])) "../src/bnsolv.f":104 127 {*movsf_internal}
     (nil))
(insn 756 755 757 40 (set (reg:SF 21 xmm0 [orig:392 _306 ] [392])
        (mult:SF (reg:SF 21 xmm0 [orig:391 _305 ] [391])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -192 [0xffffffffffffff40])) [3 atmp+0 S4 A32]))) "../src/bnsolv.f":104 802 {*fop_sf_comm}
     (nil))
(insn 757 756 758 40 (set (reg:SI 0 ax [orig:393 i.67_307 ] [393])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [1 i+0 S4 A64])) "../src/bnsolv.f":104 82 {*movsi_internal}
     (nil))
(insn 758 757 759 40 (set (reg:DI 0 ax [orig:394 _308 ] [394])
        (sign_extend:DI (reg:SI 0 ax [orig:393 i.67_307 ] [393]))) "../src/bnsolv.f":104 145 {*extendsidi2_rex64}
     (nil))
(insn 759 758 760 40 (parallel [
            (set (reg:DI 0 ax [orig:395 _309 ] [395])
                (mult:DI (reg:DI 0 ax [orig:394 _308 ] [394])
                    (reg:DI 5 di [orig:665 stride.4_635 ] [665])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":104 329 {*muldi3_1}
     (nil))
(insn 760 759 761 40 (parallel [
            (set (reg:DI 1 dx [orig:396 _310 ] [396])
                (plus:DI (reg:DI 3 bx [orig:671 offset.5_642 ] [671])
                    (reg:DI 0 ax [orig:395 _309 ] [395])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":104 218 {*adddi_1}
     (nil))
(insn 761 760 762 40 (set (reg:SI 0 ax [911])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -68 [0xffffffffffffffbc])) [1 l+0 S4 A32])) "../src/bnsolv.f":104 82 {*movsi_internal}
     (nil))
(insn 762 761 763 40 (set (reg:DI 0 ax [orig:397 _311 ] [397])
        (sign_extend:DI (reg:SI 0 ax [911]))) "../src/bnsolv.f":104 145 {*extendsidi2_rex64}
     (nil))
(insn 763 762 764 40 (parallel [
            (set (reg:DI 0 ax [orig:398 _312 ] [398])
                (mult:DI (reg:DI 0 ax [orig:397 _311 ] [397])
                    (reg:DI 4 si [orig:663 stride.2_632 ] [663])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":104 329 {*muldi3_1}
     (nil))
(insn 764 763 765 40 (parallel [
            (set (reg:DI 1 dx [orig:399 _313 ] [399])
                (plus:DI (reg:DI 1 dx [orig:396 _310 ] [396])
                    (reg:DI 0 ax [orig:398 _312 ] [398])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":104 218 {*adddi_1}
     (nil))
(insn 765 764 766 40 (set (reg:SI 0 ax [912])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [1 k+0 S4 A32])) "../src/bnsolv.f":104 82 {*movsi_internal}
     (nil))
(insn 766 765 767 40 (set (reg:DI 0 ax [orig:400 _314 ] [400])
        (sign_extend:DI (reg:SI 0 ax [912]))) "../src/bnsolv.f":104 145 {*extendsidi2_rex64}
     (nil))
(insn 767 766 768 40 (parallel [
            (set (reg:DI 1 dx [orig:401 _315 ] [401])
                (plus:DI (reg:DI 1 dx [orig:399 _313 ] [399])
                    (reg:DI 0 ax [orig:400 _314 ] [400])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":104 218 {*adddi_1}
     (nil))
(insn 768 767 1554 40 (set (reg:SF 22 xmm1 [orig:381 _295 ] [381])
        (minus:SF (reg:SF 22 xmm1 [orig:381 _295 ] [381])
            (reg:SF 21 xmm0 [orig:392 _306 ] [392]))) "../src/bnsolv.f":104 805 {*fop_sf_1}
     (nil))
(insn 1554 768 769 40 (set (reg:SF 21 xmm0 [orig:402 _316 ] [402])
        (reg:SF 22 xmm1 [orig:381 _295 ] [381])) "../src/bnsolv.f":104 127 {*movsf_internal}
     (nil))
(insn 769 1554 770 40 (set (reg/f:DI 0 ax [913])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -696 [0xfffffffffffffd48])) [10 a+0 S8 A64])) "../src/bnsolv.f":104 81 {*movdi_internal}
     (nil))
(insn 770 769 771 40 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:401 _315 ] [401])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [913])) [3 *a_685(D) S4 A32])
        (reg:SF 21 xmm0 [orig:402 _316 ] [402])) "../src/bnsolv.f":104 127 {*movsf_internal}
     (nil))
(insn 771 770 1383 40 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -68 [0xffffffffffffffbc])) [1 l+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -68 [0xffffffffffffffbc])) [1 l+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":103 217 {*addsi_1}
     (nil))
(jump_insn 1383 771 1384 40 (set (pc)
        (label_ref 772)) "../src/bnsolv.f":103 649 {jump}
     (nil)
 -> 772)
;;  succ:       39 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 702 716 719

(barrier 1384 1383 1456)
;; basic block 97, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 40, next block 41, flags: (RTL, MODIFIED)
;;  pred:       39
;; bb 97 artificial_defs: { }
;; bb 97 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 702 716
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 1456 1384 1455 97 70 (nil) [1 uses])
(note 1455 1456 1457 97 [bb 97] NOTE_INSN_BASIC_BLOCK)
(insn 1457 1455 775 97 (const_int 0 [0]) "../src/bnsolv.f":105 682 {nop}
     (nil))
;;  succ:       41 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 702 716

;; basic block 41, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 97, next block 42, flags: (RTL, MODIFIED)
;;  pred:       97 [100.0%]  (FALLTHRU)
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 702 716
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 721 914
(code_label 775 1457 776 41 24 (nil) [0 uses])
(note 776 775 777 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 777 776 778 41 (set (reg/f:DI 0 ax [914])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -728 [0xfffffffffffffd28])) [11 nb+0 S8 A64])) "../src/bnsolv.f":106 81 {*movdi_internal}
     (nil))
(insn 778 777 779 41 (set (reg:SI 2 cx [orig:721 _745 ] [721])
        (mem:SI (reg/f:DI 0 ax [914]) [1 *nb_615(D)+0 S4 A32])) "../src/bnsolv.f":106 82 {*movsi_internal}
     (nil))
(insn 779 778 828 41 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -68 [0xffffffffffffffbc])) [1 l+0 S4 A32])
        (const_int 1 [0x1])) "../src/bnsolv.f":106 82 {*movsi_internal}
     (nil))
;;  succ:       42 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 702 716 721

;; basic block 42, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 41, next block 43, flags: (RTL, MODIFIED)
;;  pred:       41 (FALLTHRU)
;;              43 [100.0%] 
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 702 716 721
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 721
;; lr  def 	 17 [flags] 722
(code_label 828 779 780 42 27 (nil) [1 uses])
(note 780 828 781 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 781 780 782 42 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -68 [0xffffffffffffffbc])) [1 l+0 S4 A32])
            (reg:SI 2 cx [orig:721 _745 ] [721]))) "../src/bnsolv.f":106 7 {*cmpsi_1}
     (nil))
(insn 782 781 783 42 (set (reg:QI 0 ax [orig:722 _747 ] [722])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "../src/bnsolv.f":106 613 {*setcc_qi}
     (nil))
(insn 783 782 784 42 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:722 _747 ] [722])
            (const_int 0 [0]))) "../src/bnsolv.f":106 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 784 783 785 42 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1459)
            (pc))) "../src/bnsolv.f":106 617 {*jcc_1}
     (nil)
 -> 1459)
;;  succ:       98
;;              43 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 702 716 721

;; basic block 43, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 42, next block 98, flags: (RTL, MODIFIED)
;;  pred:       42 (FALLTHRU)
;; bb 43 artificial_defs: { }
;; bb 43 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 702 716 721
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 673 675 681
;; lr  def 	 17 [flags] 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 419 420 421 422 423 424 425 426 427 428 429 430 431 432 433 915 916 917 918 919 920 921 922 923
(note 785 784 786 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 786 785 787 43 (set (reg:SI 0 ax [orig:403 i.68_317 ] [403])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [1 i+0 S4 A64])) "../src/bnsolv.f":107 82 {*movsi_internal}
     (nil))
(insn 787 786 788 43 (set (reg:DI 0 ax [orig:404 _318 ] [404])
        (sign_extend:DI (reg:SI 0 ax [orig:403 i.68_317 ] [403]))) "../src/bnsolv.f":107 145 {*extendsidi2_rex64}
     (nil))
(insn 788 787 789 43 (parallel [
            (set (reg:DI 0 ax [orig:405 _319 ] [405])
                (mult:DI (reg:DI 0 ax [orig:404 _318 ] [404])
                    (reg:DI 42 r13 [orig:675 stride.18_648 ] [675])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":107 329 {*muldi3_1}
     (nil))
(insn 789 788 790 43 (parallel [
            (set (reg:DI 1 dx [orig:406 _320 ] [406])
                (plus:DI (reg:DI 43 r14 [orig:681 offset.19_655 ] [681])
                    (reg:DI 0 ax [orig:405 _319 ] [405])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":107 218 {*adddi_1}
     (nil))
(insn 790 789 791 43 (set (reg:SI 0 ax [915])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -68 [0xffffffffffffffbc])) [1 l+0 S4 A32])) "../src/bnsolv.f":107 82 {*movsi_internal}
     (nil))
(insn 791 790 792 43 (set (reg:DI 0 ax [orig:407 _321 ] [407])
        (sign_extend:DI (reg:SI 0 ax [915]))) "../src/bnsolv.f":107 145 {*extendsidi2_rex64}
     (nil))
(insn 792 791 793 43 (parallel [
            (set (reg:DI 0 ax [orig:408 _322 ] [408])
                (mult:DI (reg:DI 0 ax [orig:407 _321 ] [407])
                    (reg:DI 41 r12 [orig:673 stride.16_645 ] [673])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":107 329 {*muldi3_1}
     (nil))
(insn 793 792 794 43 (parallel [
            (set (reg:DI 1 dx [orig:409 _323 ] [409])
                (plus:DI (reg:DI 1 dx [orig:406 _320 ] [406])
                    (reg:DI 0 ax [orig:408 _322 ] [408])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":107 218 {*adddi_1}
     (nil))
(insn 794 793 795 43 (set (reg:SI 0 ax [916])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [1 k+0 S4 A32])) "../src/bnsolv.f":107 82 {*movsi_internal}
     (nil))
(insn 795 794 796 43 (set (reg:DI 0 ax [orig:410 _324 ] [410])
        (sign_extend:DI (reg:SI 0 ax [916]))) "../src/bnsolv.f":107 145 {*extendsidi2_rex64}
     (nil))
(insn 796 795 797 43 (parallel [
            (set (reg:DI 1 dx [orig:411 _325 ] [411])
                (plus:DI (reg:DI 1 dx [orig:409 _323 ] [409])
                    (reg:DI 0 ax [orig:410 _324 ] [410])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":107 218 {*adddi_1}
     (nil))
(insn 797 796 798 43 (set (reg/f:DI 0 ax [917])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -712 [0xfffffffffffffd38])) [10 c+0 S8 A64])) "../src/bnsolv.f":107 81 {*movdi_internal}
     (nil))
(insn 798 797 799 43 (set (reg:SF 22 xmm1 [orig:412 _326 ] [412])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:411 _325 ] [411])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [917])) [3 *c_686(D) S4 A32])) "../src/bnsolv.f":107 127 {*movsf_internal}
     (nil))
(insn 799 798 800 43 (set (reg:SI 0 ax [orig:413 i.69_327 ] [413])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [1 i+0 S4 A64])) "../src/bnsolv.f":107 82 {*movsi_internal}
     (nil))
(insn 800 799 801 43 (set (reg:DI 0 ax [orig:414 _328 ] [414])
        (sign_extend:DI (reg:SI 0 ax [orig:413 i.69_327 ] [413]))) "../src/bnsolv.f":107 145 {*extendsidi2_rex64}
     (nil))
(insn 801 800 802 43 (parallel [
            (set (reg:DI 0 ax [orig:415 _329 ] [415])
                (mult:DI (reg:DI 0 ax [orig:414 _328 ] [414])
                    (reg:DI 42 r13 [orig:675 stride.18_648 ] [675])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":107 329 {*muldi3_1}
     (nil))
(insn 802 801 803 43 (parallel [
            (set (reg:DI 1 dx [orig:416 _330 ] [416])
                (plus:DI (reg:DI 43 r14 [orig:681 offset.19_655 ] [681])
                    (reg:DI 0 ax [orig:415 _329 ] [415])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":107 218 {*adddi_1}
     (nil))
(insn 803 802 804 43 (set (reg:SI 0 ax [918])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -68 [0xffffffffffffffbc])) [1 l+0 S4 A32])) "../src/bnsolv.f":107 82 {*movsi_internal}
     (nil))
(insn 804 803 805 43 (set (reg:DI 0 ax [orig:417 _331 ] [417])
        (sign_extend:DI (reg:SI 0 ax [918]))) "../src/bnsolv.f":107 145 {*extendsidi2_rex64}
     (nil))
(insn 805 804 806 43 (parallel [
            (set (reg:DI 0 ax [orig:418 _332 ] [418])
                (mult:DI (reg:DI 0 ax [orig:417 _331 ] [417])
                    (reg:DI 41 r12 [orig:673 stride.16_645 ] [673])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":107 329 {*muldi3_1}
     (nil))
(insn 806 805 807 43 (parallel [
            (set (reg:DI 1 dx [orig:419 _333 ] [419])
                (plus:DI (reg:DI 1 dx [orig:416 _330 ] [416])
                    (reg:DI 0 ax [orig:418 _332 ] [418])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":107 218 {*adddi_1}
     (nil))
(insn 807 806 808 43 (set (reg:SI 0 ax [919])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -60 [0xffffffffffffffc4])) [1 kpiv+0 S4 A32])) "../src/bnsolv.f":107 82 {*movsi_internal}
     (nil))
(insn 808 807 809 43 (set (reg:DI 0 ax [orig:420 _334 ] [420])
        (sign_extend:DI (reg:SI 0 ax [919]))) "../src/bnsolv.f":107 145 {*extendsidi2_rex64}
     (nil))
(insn 809 808 810 43 (parallel [
            (set (reg:DI 1 dx [orig:421 _335 ] [421])
                (plus:DI (reg:DI 1 dx [orig:419 _333 ] [419])
                    (reg:DI 0 ax [orig:420 _334 ] [420])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":107 218 {*adddi_1}
     (nil))
(insn 810 809 811 43 (set (reg/f:DI 0 ax [920])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -712 [0xfffffffffffffd38])) [10 c+0 S8 A64])) "../src/bnsolv.f":107 81 {*movdi_internal}
     (nil))
(insn 811 810 812 43 (set (reg:SF 21 xmm0 [orig:422 _336 ] [422])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:421 _335 ] [421])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [920])) [3 *c_686(D) S4 A32])) "../src/bnsolv.f":107 127 {*movsf_internal}
     (nil))
(insn 812 811 813 43 (set (reg:SF 21 xmm0 [orig:423 _337 ] [423])
        (mult:SF (reg:SF 21 xmm0 [orig:422 _336 ] [422])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -192 [0xffffffffffffff40])) [3 atmp+0 S4 A32]))) "../src/bnsolv.f":107 802 {*fop_sf_comm}
     (nil))
(insn 813 812 814 43 (set (reg:SI 0 ax [orig:424 i.70_338 ] [424])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [1 i+0 S4 A64])) "../src/bnsolv.f":107 82 {*movsi_internal}
     (nil))
(insn 814 813 815 43 (set (reg:DI 0 ax [orig:425 _339 ] [425])
        (sign_extend:DI (reg:SI 0 ax [orig:424 i.70_338 ] [424]))) "../src/bnsolv.f":107 145 {*extendsidi2_rex64}
     (nil))
(insn 815 814 816 43 (parallel [
            (set (reg:DI 0 ax [orig:426 _340 ] [426])
                (mult:DI (reg:DI 0 ax [orig:425 _339 ] [425])
                    (reg:DI 42 r13 [orig:675 stride.18_648 ] [675])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":107 329 {*muldi3_1}
     (nil))
(insn 816 815 817 43 (parallel [
            (set (reg:DI 1 dx [orig:427 _341 ] [427])
                (plus:DI (reg:DI 43 r14 [orig:681 offset.19_655 ] [681])
                    (reg:DI 0 ax [orig:426 _340 ] [426])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":107 218 {*adddi_1}
     (nil))
(insn 817 816 818 43 (set (reg:SI 0 ax [921])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -68 [0xffffffffffffffbc])) [1 l+0 S4 A32])) "../src/bnsolv.f":107 82 {*movsi_internal}
     (nil))
(insn 818 817 819 43 (set (reg:DI 0 ax [orig:428 _342 ] [428])
        (sign_extend:DI (reg:SI 0 ax [921]))) "../src/bnsolv.f":107 145 {*extendsidi2_rex64}
     (nil))
(insn 819 818 820 43 (parallel [
            (set (reg:DI 0 ax [orig:429 _343 ] [429])
                (mult:DI (reg:DI 0 ax [orig:428 _342 ] [428])
                    (reg:DI 41 r12 [orig:673 stride.16_645 ] [673])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":107 329 {*muldi3_1}
     (nil))
(insn 820 819 821 43 (parallel [
            (set (reg:DI 1 dx [orig:430 _344 ] [430])
                (plus:DI (reg:DI 1 dx [orig:427 _341 ] [427])
                    (reg:DI 0 ax [orig:429 _343 ] [429])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":107 218 {*adddi_1}
     (nil))
(insn 821 820 822 43 (set (reg:SI 0 ax [922])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [1 k+0 S4 A32])) "../src/bnsolv.f":107 82 {*movsi_internal}
     (nil))
(insn 822 821 823 43 (set (reg:DI 0 ax [orig:431 _345 ] [431])
        (sign_extend:DI (reg:SI 0 ax [922]))) "../src/bnsolv.f":107 145 {*extendsidi2_rex64}
     (nil))
(insn 823 822 824 43 (parallel [
            (set (reg:DI 1 dx [orig:432 _346 ] [432])
                (plus:DI (reg:DI 1 dx [orig:430 _344 ] [430])
                    (reg:DI 0 ax [orig:431 _345 ] [431])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":107 218 {*adddi_1}
     (nil))
(insn 824 823 1556 43 (set (reg:SF 22 xmm1 [orig:412 _326 ] [412])
        (minus:SF (reg:SF 22 xmm1 [orig:412 _326 ] [412])
            (reg:SF 21 xmm0 [orig:423 _337 ] [423]))) "../src/bnsolv.f":107 805 {*fop_sf_1}
     (nil))
(insn 1556 824 825 43 (set (reg:SF 21 xmm0 [orig:433 _347 ] [433])
        (reg:SF 22 xmm1 [orig:412 _326 ] [412])) "../src/bnsolv.f":107 127 {*movsf_internal}
     (nil))
(insn 825 1556 826 43 (set (reg/f:DI 0 ax [923])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -712 [0xfffffffffffffd38])) [10 c+0 S8 A64])) "../src/bnsolv.f":107 81 {*movdi_internal}
     (nil))
(insn 826 825 827 43 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:432 _346 ] [432])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [923])) [3 *c_686(D) S4 A32])
        (reg:SF 21 xmm0 [orig:433 _347 ] [433])) "../src/bnsolv.f":107 127 {*movsf_internal}
     (nil))
(insn 827 826 1385 43 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -68 [0xffffffffffffffbc])) [1 l+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -68 [0xffffffffffffffbc])) [1 l+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":106 217 {*addsi_1}
     (nil))
(jump_insn 1385 827 1386 43 (set (pc)
        (label_ref 828)) "../src/bnsolv.f":106 649 {jump}
     (nil)
 -> 828)
;;  succ:       42 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 702 716 721

(barrier 1386 1385 1459)
;; basic block 98, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 43, next block 44, flags: (RTL, MODIFIED)
;;  pred:       42
;; bb 98 artificial_defs: { }
;; bb 98 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 702 716
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 1459 1386 1458 98 71 (nil) [1 uses])
(note 1458 1459 1460 98 [bb 98] NOTE_INSN_BASIC_BLOCK)
(insn 1460 1458 831 98 (const_int 0 [0]) "../src/bnsolv.f":108 682 {nop}
     (nil))
;;  succ:       44 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 702 716

;; basic block 44, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 98, next block 45, flags: (RTL, MODIFIED)
;;  pred:       98 [100.0%]  (FALLTHRU)
;; bb 44 artificial_defs: { }
;; bb 44 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 702 716
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 723 924
(code_label 831 1460 832 44 26 (nil) [0 uses])
(note 832 831 833 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 833 832 834 44 (set (reg/f:DI 0 ax [924])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 16 [0x10])) [11 nrhs+0 S8 A64])) "../src/bnsolv.f":109 81 {*movdi_internal}
     (nil))
(insn 834 833 835 44 (set (reg:SI 2 cx [orig:723 _750 ] [723])
        (mem:SI (reg/f:DI 0 ax [924]) [1 *nrhs_689(D)+0 S4 A32])) "../src/bnsolv.f":109 82 {*movsi_internal}
     (nil))
(insn 835 834 884 44 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -68 [0xffffffffffffffbc])) [1 l+0 S4 A32])
        (const_int 1 [0x1])) "../src/bnsolv.f":109 82 {*movsi_internal}
     (nil))
;;  succ:       45 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 702 716 723

;; basic block 45, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 44, next block 46, flags: (RTL, MODIFIED)
;;  pred:       44 (FALLTHRU)
;;              46 [100.0%] 
;; bb 45 artificial_defs: { }
;; bb 45 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 702 716 723
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 723
;; lr  def 	 17 [flags] 724
(code_label 884 835 836 45 29 (nil) [1 uses])
(note 836 884 837 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 837 836 838 45 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -68 [0xffffffffffffffbc])) [1 l+0 S4 A32])
            (reg:SI 2 cx [orig:723 _750 ] [723]))) "../src/bnsolv.f":109 7 {*cmpsi_1}
     (nil))
(insn 838 837 839 45 (set (reg:QI 0 ax [orig:724 _752 ] [724])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "../src/bnsolv.f":109 613 {*setcc_qi}
     (nil))
(insn 839 838 840 45 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:724 _752 ] [724])
            (const_int 0 [0]))) "../src/bnsolv.f":109 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 840 839 841 45 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1462)
            (pc))) "../src/bnsolv.f":109 617 {*jcc_1}
     (nil)
 -> 1462)
;;  succ:       99
;;              46 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 702 716 723

;; basic block 46, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 45, next block 99, flags: (RTL, MODIFIED)
;;  pred:       45 (FALLTHRU)
;; bb 46 artificial_defs: { }
;; bb 46 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 702 716 723
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 683 685 691
;; lr  def 	 17 [flags] 434 435 436 437 438 439 440 441 442 443 444 445 446 447 448 449 450 451 452 453 454 455 456 457 458 459 460 461 462 463 464 925 926 927 928 929 930 931 932 933
(note 841 840 842 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 842 841 843 46 (set (reg:SI 0 ax [orig:434 i.71_348 ] [434])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [1 i+0 S4 A64])) "../src/bnsolv.f":110 82 {*movsi_internal}
     (nil))
(insn 843 842 844 46 (set (reg:DI 0 ax [orig:435 _349 ] [435])
        (sign_extend:DI (reg:SI 0 ax [orig:434 i.71_348 ] [434]))) "../src/bnsolv.f":110 145 {*extendsidi2_rex64}
     (nil))
(insn 844 843 845 46 (parallel [
            (set (reg:DI 0 ax [orig:436 _350 ] [436])
                (mult:DI (reg:DI 0 ax [orig:435 _349 ] [435])
                    (reg:DI 38 r9 [orig:685 stride.25_662 ] [685])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":110 329 {*muldi3_1}
     (nil))
(insn 845 844 846 46 (parallel [
            (set (reg:DI 1 dx [orig:437 _351 ] [437])
                (plus:DI (reg:DI 39 r10 [orig:691 offset.26_669 ] [691])
                    (reg:DI 0 ax [orig:436 _350 ] [436])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":110 218 {*adddi_1}
     (nil))
(insn 846 845 847 46 (set (reg:SI 0 ax [925])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -68 [0xffffffffffffffbc])) [1 l+0 S4 A32])) "../src/bnsolv.f":110 82 {*movsi_internal}
     (nil))
(insn 847 846 848 46 (set (reg:DI 0 ax [orig:438 _352 ] [438])
        (sign_extend:DI (reg:SI 0 ax [925]))) "../src/bnsolv.f":110 145 {*extendsidi2_rex64}
     (nil))
(insn 848 847 849 46 (parallel [
            (set (reg:DI 0 ax [orig:439 _353 ] [439])
                (mult:DI (reg:DI 0 ax [orig:438 _352 ] [438])
                    (reg:DI 37 r8 [orig:683 stride.23_658 ] [683])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":110 329 {*muldi3_1}
     (nil))
(insn 849 848 850 46 (parallel [
            (set (reg:DI 1 dx [orig:440 _354 ] [440])
                (plus:DI (reg:DI 1 dx [orig:437 _351 ] [437])
                    (reg:DI 0 ax [orig:439 _353 ] [439])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":110 218 {*adddi_1}
     (nil))
(insn 850 849 851 46 (set (reg:SI 0 ax [926])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [1 k+0 S4 A32])) "../src/bnsolv.f":110 82 {*movsi_internal}
     (nil))
(insn 851 850 852 46 (set (reg:DI 0 ax [orig:441 _355 ] [441])
        (sign_extend:DI (reg:SI 0 ax [926]))) "../src/bnsolv.f":110 145 {*extendsidi2_rex64}
     (nil))
(insn 852 851 853 46 (parallel [
            (set (reg:DI 1 dx [orig:442 _356 ] [442])
                (plus:DI (reg:DI 1 dx [orig:440 _354 ] [440])
                    (reg:DI 0 ax [orig:441 _355 ] [441])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":110 218 {*adddi_1}
     (nil))
(insn 853 852 854 46 (set (reg/f:DI 0 ax [927])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -720 [0xfffffffffffffd30])) [10 r+0 S8 A64])) "../src/bnsolv.f":110 81 {*movdi_internal}
     (nil))
(insn 854 853 855 46 (set (reg:SF 22 xmm1 [orig:443 _357 ] [443])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:442 _356 ] [442])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [927])) [3 *r_693(D) S4 A32])) "../src/bnsolv.f":110 127 {*movsf_internal}
     (nil))
(insn 855 854 856 46 (set (reg:SI 0 ax [orig:444 i.72_358 ] [444])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [1 i+0 S4 A64])) "../src/bnsolv.f":110 82 {*movsi_internal}
     (nil))
(insn 856 855 857 46 (set (reg:DI 0 ax [orig:445 _359 ] [445])
        (sign_extend:DI (reg:SI 0 ax [orig:444 i.72_358 ] [444]))) "../src/bnsolv.f":110 145 {*extendsidi2_rex64}
     (nil))
(insn 857 856 858 46 (parallel [
            (set (reg:DI 0 ax [orig:446 _360 ] [446])
                (mult:DI (reg:DI 0 ax [orig:445 _359 ] [445])
                    (reg:DI 38 r9 [orig:685 stride.25_662 ] [685])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":110 329 {*muldi3_1}
     (nil))
(insn 858 857 859 46 (parallel [
            (set (reg:DI 1 dx [orig:447 _361 ] [447])
                (plus:DI (reg:DI 39 r10 [orig:691 offset.26_669 ] [691])
                    (reg:DI 0 ax [orig:446 _360 ] [446])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":110 218 {*adddi_1}
     (nil))
(insn 859 858 860 46 (set (reg:SI 0 ax [928])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -68 [0xffffffffffffffbc])) [1 l+0 S4 A32])) "../src/bnsolv.f":110 82 {*movsi_internal}
     (nil))
(insn 860 859 861 46 (set (reg:DI 0 ax [orig:448 _362 ] [448])
        (sign_extend:DI (reg:SI 0 ax [928]))) "../src/bnsolv.f":110 145 {*extendsidi2_rex64}
     (nil))
(insn 861 860 862 46 (parallel [
            (set (reg:DI 0 ax [orig:449 _363 ] [449])
                (mult:DI (reg:DI 0 ax [orig:448 _362 ] [448])
                    (reg:DI 37 r8 [orig:683 stride.23_658 ] [683])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":110 329 {*muldi3_1}
     (nil))
(insn 862 861 863 46 (parallel [
            (set (reg:DI 1 dx [orig:450 _364 ] [450])
                (plus:DI (reg:DI 1 dx [orig:447 _361 ] [447])
                    (reg:DI 0 ax [orig:449 _363 ] [449])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":110 218 {*adddi_1}
     (nil))
(insn 863 862 864 46 (set (reg:SI 0 ax [929])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -60 [0xffffffffffffffc4])) [1 kpiv+0 S4 A32])) "../src/bnsolv.f":110 82 {*movsi_internal}
     (nil))
(insn 864 863 865 46 (set (reg:DI 0 ax [orig:451 _365 ] [451])
        (sign_extend:DI (reg:SI 0 ax [929]))) "../src/bnsolv.f":110 145 {*extendsidi2_rex64}
     (nil))
(insn 865 864 866 46 (parallel [
            (set (reg:DI 1 dx [orig:452 _366 ] [452])
                (plus:DI (reg:DI 1 dx [orig:450 _364 ] [450])
                    (reg:DI 0 ax [orig:451 _365 ] [451])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":110 218 {*adddi_1}
     (nil))
(insn 866 865 867 46 (set (reg/f:DI 0 ax [930])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -720 [0xfffffffffffffd30])) [10 r+0 S8 A64])) "../src/bnsolv.f":110 81 {*movdi_internal}
     (nil))
(insn 867 866 868 46 (set (reg:SF 21 xmm0 [orig:453 _367 ] [453])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:452 _366 ] [452])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [930])) [3 *r_693(D) S4 A32])) "../src/bnsolv.f":110 127 {*movsf_internal}
     (nil))
(insn 868 867 869 46 (set (reg:SF 21 xmm0 [orig:454 _368 ] [454])
        (mult:SF (reg:SF 21 xmm0 [orig:453 _367 ] [453])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -192 [0xffffffffffffff40])) [3 atmp+0 S4 A32]))) "../src/bnsolv.f":110 802 {*fop_sf_comm}
     (nil))
(insn 869 868 870 46 (set (reg:SI 0 ax [orig:455 i.73_369 ] [455])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [1 i+0 S4 A64])) "../src/bnsolv.f":110 82 {*movsi_internal}
     (nil))
(insn 870 869 871 46 (set (reg:DI 0 ax [orig:456 _370 ] [456])
        (sign_extend:DI (reg:SI 0 ax [orig:455 i.73_369 ] [455]))) "../src/bnsolv.f":110 145 {*extendsidi2_rex64}
     (nil))
(insn 871 870 872 46 (parallel [
            (set (reg:DI 0 ax [orig:457 _371 ] [457])
                (mult:DI (reg:DI 0 ax [orig:456 _370 ] [456])
                    (reg:DI 38 r9 [orig:685 stride.25_662 ] [685])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":110 329 {*muldi3_1}
     (nil))
(insn 872 871 873 46 (parallel [
            (set (reg:DI 1 dx [orig:458 _372 ] [458])
                (plus:DI (reg:DI 39 r10 [orig:691 offset.26_669 ] [691])
                    (reg:DI 0 ax [orig:457 _371 ] [457])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":110 218 {*adddi_1}
     (nil))
(insn 873 872 874 46 (set (reg:SI 0 ax [931])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -68 [0xffffffffffffffbc])) [1 l+0 S4 A32])) "../src/bnsolv.f":110 82 {*movsi_internal}
     (nil))
(insn 874 873 875 46 (set (reg:DI 0 ax [orig:459 _373 ] [459])
        (sign_extend:DI (reg:SI 0 ax [931]))) "../src/bnsolv.f":110 145 {*extendsidi2_rex64}
     (nil))
(insn 875 874 876 46 (parallel [
            (set (reg:DI 0 ax [orig:460 _374 ] [460])
                (mult:DI (reg:DI 0 ax [orig:459 _373 ] [459])
                    (reg:DI 37 r8 [orig:683 stride.23_658 ] [683])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":110 329 {*muldi3_1}
     (nil))
(insn 876 875 877 46 (parallel [
            (set (reg:DI 1 dx [orig:461 _375 ] [461])
                (plus:DI (reg:DI 1 dx [orig:458 _372 ] [458])
                    (reg:DI 0 ax [orig:460 _374 ] [460])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":110 218 {*adddi_1}
     (nil))
(insn 877 876 878 46 (set (reg:SI 0 ax [932])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [1 k+0 S4 A32])) "../src/bnsolv.f":110 82 {*movsi_internal}
     (nil))
(insn 878 877 879 46 (set (reg:DI 0 ax [orig:462 _376 ] [462])
        (sign_extend:DI (reg:SI 0 ax [932]))) "../src/bnsolv.f":110 145 {*extendsidi2_rex64}
     (nil))
(insn 879 878 880 46 (parallel [
            (set (reg:DI 1 dx [orig:463 _377 ] [463])
                (plus:DI (reg:DI 1 dx [orig:461 _375 ] [461])
                    (reg:DI 0 ax [orig:462 _376 ] [462])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":110 218 {*adddi_1}
     (nil))
(insn 880 879 1558 46 (set (reg:SF 22 xmm1 [orig:443 _357 ] [443])
        (minus:SF (reg:SF 22 xmm1 [orig:443 _357 ] [443])
            (reg:SF 21 xmm0 [orig:454 _368 ] [454]))) "../src/bnsolv.f":110 805 {*fop_sf_1}
     (nil))
(insn 1558 880 881 46 (set (reg:SF 21 xmm0 [orig:464 _378 ] [464])
        (reg:SF 22 xmm1 [orig:443 _357 ] [443])) "../src/bnsolv.f":110 127 {*movsf_internal}
     (nil))
(insn 881 1558 882 46 (set (reg/f:DI 0 ax [933])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -720 [0xfffffffffffffd30])) [10 r+0 S8 A64])) "../src/bnsolv.f":110 81 {*movdi_internal}
     (nil))
(insn 882 881 883 46 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:463 _377 ] [463])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [933])) [3 *r_693(D) S4 A32])
        (reg:SF 21 xmm0 [orig:464 _378 ] [464])) "../src/bnsolv.f":110 127 {*movsf_internal}
     (nil))
(insn 883 882 1387 46 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -68 [0xffffffffffffffbc])) [1 l+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -68 [0xffffffffffffffbc])) [1 l+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":109 217 {*addsi_1}
     (nil))
(jump_insn 1387 883 1388 46 (set (pc)
        (label_ref 884)) "../src/bnsolv.f":109 649 {jump}
     (nil)
 -> 884)
;;  succ:       45 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 702 716 723

(barrier 1388 1387 1462)
;; basic block 99, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 46, next block 47, flags: (RTL, MODIFIED)
;;  pred:       45
;; bb 99 artificial_defs: { }
;; bb 99 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 702 716
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 1462 1388 1461 99 72 (nil) [1 uses])
(note 1461 1462 1463 99 [bb 99] NOTE_INSN_BASIC_BLOCK)
(insn 1463 1461 887 99 (const_int 0 [0]) "../src/bnsolv.f":111 682 {nop}
     (nil))
;;  succ:       47 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 702 716

;; basic block 47, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 99, next block 96, flags: (RTL, MODIFIED)
;;  pred:       99 [100.0%]  (FALLTHRU)
;; bb 47 artificial_defs: { }
;; bb 47 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 702 716
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 887 1463 888 47 28 (nil) [0 uses])
(note 888 887 889 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 889 888 1389 47 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -56 [0xffffffffffffffc8])) [1 k+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -56 [0xffffffffffffffc8])) [1 k+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":101 217 {*addsi_1}
     (nil))
(jump_insn 1389 889 1390 47 (set (pc)
        (label_ref 890)) "../src/bnsolv.f":101 649 {jump}
     (nil)
 -> 890)
;;  succ:       37 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 702 716

(barrier 1390 1389 1453)
;; basic block 96, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 47, next block 48, flags: (RTL, MODIFIED)
;;  pred:       37
;; bb 96 artificial_defs: { }
;; bb 96 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 702
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 1453 1390 1452 96 69 (nil) [1 uses])
(note 1452 1453 1454 96 [bb 96] NOTE_INSN_BASIC_BLOCK)
(insn 1454 1452 893 96 (const_int 0 [0]) "../src/bnsolv.f":112 682 {nop}
     (nil))
;;  succ:       48 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 702

;; basic block 48, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 96, next block 89, flags: (RTL, MODIFIED)
;;  pred:       96 [100.0%]  (FALLTHRU)
;; bb 48 artificial_defs: { }
;; bb 48 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 702
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 893 1454 894 48 23 (nil) [0 uses])
(note 894 893 895 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(insn 895 894 1391 48 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -60 [0xffffffffffffffc4])) [1 kpiv+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -60 [0xffffffffffffffc4])) [1 kpiv+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":61 217 {*addsi_1}
     (nil))
(jump_insn 1391 895 1392 48 (set (pc)
        (label_ref 896)) "../src/bnsolv.f":61 649 {jump}
     (nil)
 -> 896)
;;  succ:       18 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 702

(barrier 1392 1391 1431)
;; basic block 89, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 48, next block 49, flags: (RTL, MODIFIED)
;;  pred:       18
;; bb 89 artificial_defs: { }
;; bb 89 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 1431 1392 1430 89 63 (nil) [1 uses])
(note 1430 1431 1432 89 [bb 89] NOTE_INSN_BASIC_BLOCK)
(insn 1432 1430 899 89 (const_int 0 [0]) "../src/bnsolv.f":114 682 {nop}
     (nil))
;;  succ:       49 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691

;; basic block 49, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 89, next block 50, flags: (RTL, MODIFIED)
;;  pred:       89 [100.0%]  (FALLTHRU)
;; bb 49 artificial_defs: { }
;; bb 49 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671
;; lr  def 	 17 [flags] 465 466 467 468 469 470 471 472 473 474 475 476 934 935 936 937
(code_label 899 1432 900 49 11 (nil) [0 uses])
(note 900 899 901 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(insn 901 900 902 49 (set (reg:SI 0 ax [orig:465 i.74_379 ] [465])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [1 i+0 S4 A64])) "../src/bnsolv.f":117 82 {*movsi_internal}
     (nil))
(insn 902 901 903 49 (set (reg:DI 0 ax [orig:466 _380 ] [466])
        (sign_extend:DI (reg:SI 0 ax [orig:465 i.74_379 ] [465]))) "../src/bnsolv.f":117 145 {*extendsidi2_rex64}
     (nil))
(insn 903 902 904 49 (parallel [
            (set (reg:DI 0 ax [orig:467 _381 ] [467])
                (mult:DI (reg:DI 0 ax [orig:466 _380 ] [466])
                    (reg:DI 5 di [orig:665 stride.4_635 ] [665])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":117 329 {*muldi3_1}
     (nil))
(insn 904 903 905 49 (parallel [
            (set (reg:DI 1 dx [orig:468 _382 ] [468])
                (plus:DI (reg:DI 3 bx [orig:671 offset.5_642 ] [671])
                    (reg:DI 0 ax [orig:467 _381 ] [467])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":117 218 {*adddi_1}
     (nil))
(insn 905 904 906 49 (set (reg/f:DI 0 ax [934])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -728 [0xfffffffffffffd28])) [11 nb+0 S8 A64])) "../src/bnsolv.f":117 81 {*movdi_internal}
     (nil))
(insn 906 905 907 49 (set (reg:SI 0 ax [orig:469 _383 ] [469])
        (mem:SI (reg/f:DI 0 ax [934]) [1 *nb_615(D)+0 S4 A32])) "../src/bnsolv.f":117 82 {*movsi_internal}
     (nil))
(insn 907 906 908 49 (set (reg:DI 0 ax [orig:470 _384 ] [470])
        (sign_extend:DI (reg:SI 0 ax [orig:469 _383 ] [469]))) "../src/bnsolv.f":117 145 {*extendsidi2_rex64}
     (nil))
(insn 908 907 909 49 (parallel [
            (set (reg:DI 0 ax [orig:471 _385 ] [471])
                (mult:DI (reg:DI 0 ax [orig:470 _384 ] [470])
                    (reg:DI 4 si [orig:663 stride.2_632 ] [663])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":117 329 {*muldi3_1}
     (nil))
(insn 909 908 910 49 (parallel [
            (set (reg:DI 1 dx [orig:472 _386 ] [472])
                (plus:DI (reg:DI 1 dx [orig:468 _382 ] [468])
                    (reg:DI 0 ax [orig:471 _385 ] [471])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":117 218 {*adddi_1}
     (nil))
(insn 910 909 911 49 (set (reg/f:DI 0 ax [935])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -728 [0xfffffffffffffd28])) [11 nb+0 S8 A64])) "../src/bnsolv.f":117 81 {*movdi_internal}
     (nil))
(insn 911 910 912 49 (set (reg:SI 0 ax [orig:473 _387 ] [473])
        (mem:SI (reg/f:DI 0 ax [935]) [1 *nb_615(D)+0 S4 A32])) "../src/bnsolv.f":117 82 {*movsi_internal}
     (nil))
(insn 912 911 913 49 (set (reg:DI 0 ax [orig:474 _388 ] [474])
        (sign_extend:DI (reg:SI 0 ax [orig:473 _387 ] [473]))) "../src/bnsolv.f":117 145 {*extendsidi2_rex64}
     (nil))
(insn 913 912 914 49 (parallel [
            (set (reg:DI 1 dx [orig:475 _389 ] [475])
                (plus:DI (reg:DI 1 dx [orig:472 _386 ] [472])
                    (reg:DI 0 ax [orig:474 _388 ] [474])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":117 218 {*adddi_1}
     (nil))
(insn 914 913 915 49 (set (reg/f:DI 0 ax [936])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -696 [0xfffffffffffffd48])) [10 a+0 S8 A64])) "../src/bnsolv.f":117 81 {*movdi_internal}
     (nil))
(insn 915 914 916 49 (set (reg:SF 21 xmm0 [orig:476 _390 ] [476])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:475 _389 ] [475])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [936])) [3 *a_685(D) S4 A32])) "../src/bnsolv.f":117 127 {*movsf_internal}
     (nil))
(insn 916 915 917 49 (set (reg:SF 22 xmm1 [937])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC1") [flags 0x2]) [3  S4 A32])) "../src/bnsolv.f":117 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 917 916 918 49 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 21 xmm0 [orig:476 _390 ] [476])
            (reg:SF 22 xmm1 [937]))) "../src/bnsolv.f":117 51 {*cmpiusf}
     (nil))
(jump_insn 918 917 1361 49 (set (pc)
        (if_then_else (unordered (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref 952)
            (pc))) "../src/bnsolv.f":117 617 {*jcc_1}
     (nil)
 -> 952)
;;  succ:       52
;;              50 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 476 663 665 671 673 675 681 683 685 691

;; basic block 50, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 49, next block 51, flags: (RTL, MODIFIED)
;;  pred:       49 (FALLTHRU)
;; bb 50 artificial_defs: { }
;; bb 50 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 476 663 665 671 673 675 681 683 685 691
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 476
;; lr  def 	 17 [flags] 938
(note 1361 918 919 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(insn 919 1361 920 50 (set (reg:SF 22 xmm1 [938])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC1") [flags 0x2]) [3  S4 A32])) "../src/bnsolv.f":117 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 920 919 921 50 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 21 xmm0 [orig:476 _390 ] [476])
            (reg:SF 22 xmm1 [938]))) "../src/bnsolv.f":117 51 {*cmpiusf}
     (nil))
(jump_insn 921 920 925 50 (set (pc)
        (if_then_else (ltgt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 952)
            (pc))) "../src/bnsolv.f":117 617 {*jcc_1}
     (nil)
 -> 952)
;;  succ:       51 (FALLTHRU)
;;              52
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691

;; basic block 51, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 50, next block 52, flags: (RTL, MODIFIED)
;;  pred:       50 (FALLTHRU)
;; bb 51 artificial_defs: { }
;; bb 51 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 939 940 941 942 943 944
(note 925 921 926 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(insn 926 925 927 51 (set (reg/f:DI 0 ax [939])
        (symbol_ref/f:DI ("*lC2") [flags 0x2]  <var_decl 0x143100ea0 *lC2>)) "../src/bnsolv.f":118 81 {*movdi_internal}
     (nil))
(insn 927 926 928 51 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -680 [0xfffffffffffffd58])) [6 dt_parm.29.common.filename+0 S8 A64])
        (reg/f:DI 0 ax [939])) "../src/bnsolv.f":118 81 {*movdi_internal}
     (nil))
(insn 928 927 929 51 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -672 [0xfffffffffffffd60])) [1 dt_parm.29.common.line+0 S4 A128])
        (const_int 118 [0x76])) "../src/bnsolv.f":118 82 {*movsi_internal}
     (nil))
(insn 929 928 930 51 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -688 [0xfffffffffffffd50])) [1 dt_parm.29.common.flags+0 S4 A128])
        (const_int 128 [0x80])) "../src/bnsolv.f":118 82 {*movsi_internal}
     (nil))
(insn 930 929 931 51 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -684 [0xfffffffffffffd54])) [1 dt_parm.29.common.unit+0 S4 A32])
        (const_int 6 [0x6])) "../src/bnsolv.f":118 82 {*movsi_internal}
     (nil))
(insn 931 930 932 51 (parallel [
            (set (reg:DI 0 ax [940])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -688 [0xfffffffffffffd50])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":118 218 {*adddi_1}
     (nil))
(insn 932 931 933 51 (set (reg:DI 5 di)
        (reg:DI 0 ax [940])) "../src/bnsolv.f":118 81 {*movdi_internal}
     (nil))
(call_insn 933 932 934 51 (call (mem:QI (symbol_ref:DI ("_gfortran_st_write") [flags 0x41]  <function_decl 0x1427e0800 _gfortran_st_write>) [0 _gfortran_st_write S1 A8])
        (const_int 0 [0])) "../src/bnsolv.f":118 655 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 934 933 935 51 (parallel [
            (set (reg:DI 0 ax [941])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -688 [0xfffffffffffffd50])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":118 218 {*adddi_1}
     (nil))
(insn 935 934 936 51 (set (reg:SI 1 dx)
        (const_int 22 [0x16])) "../src/bnsolv.f":118 82 {*movsi_internal}
     (nil))
(insn 936 935 937 51 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*lC3") [flags 0x2]  <var_decl 0x143100f30 *lC3>)) "../src/bnsolv.f":118 81 {*movdi_internal}
     (nil))
(insn 937 936 938 51 (set (reg:DI 5 di)
        (reg:DI 0 ax [941])) "../src/bnsolv.f":118 81 {*movdi_internal}
     (nil))
(call_insn 938 937 939 51 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_character_write") [flags 0x41]  <function_decl 0x1427d4900 _gfortran_transfer_character_write>) [0 _gfortran_transfer_character_write S1 A8])
        (const_int 0 [0])) "../src/bnsolv.f":118 655 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 939 938 940 51 (parallel [
            (set (reg:DI 2 cx [942])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -200 [0xffffffffffffff38])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":118 218 {*adddi_1}
     (nil))
(insn 940 939 941 51 (parallel [
            (set (reg:DI 0 ax [943])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -688 [0xfffffffffffffd50])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":118 218 {*adddi_1}
     (nil))
(insn 941 940 942 51 (set (reg:SI 1 dx)
        (const_int 4 [0x4])) "../src/bnsolv.f":118 82 {*movsi_internal}
     (nil))
(insn 942 941 943 51 (set (reg:DI 4 si)
        (reg:DI 2 cx [942])) "../src/bnsolv.f":118 81 {*movdi_internal}
     (nil))
(insn 943 942 944 51 (set (reg:DI 5 di)
        (reg:DI 0 ax [943])) "../src/bnsolv.f":118 81 {*movdi_internal}
     (nil))
(call_insn 944 943 945 51 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_integer_write") [flags 0x41]  <function_decl 0x1427d4500 _gfortran_transfer_integer_write>) [0 _gfortran_transfer_integer_write S1 A8])
        (const_int 0 [0])) "../src/bnsolv.f":118 655 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 945 944 946 51 (parallel [
            (set (reg:DI 0 ax [944])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -688 [0xfffffffffffffd50])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":118 218 {*adddi_1}
     (nil))
(insn 946 945 947 51 (set (reg:DI 5 di)
        (reg:DI 0 ax [944])) "../src/bnsolv.f":118 81 {*movdi_internal}
     (nil))
(call_insn 947 946 948 51 (call (mem:QI (symbol_ref:DI ("_gfortran_st_write_done") [flags 0x41]  <function_decl 0x1427e4300 _gfortran_st_write_done>) [0 _gfortran_st_write_done S1 A8])
        (const_int 0 [0])) "../src/bnsolv.f":118 655 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 948 947 949 51 (set (reg:SI 4 si)
        (const_int 0 [0])) "../src/bnsolv.f":119 82 {*movsi_internal}
     (nil))
(insn 949 948 950 51 (set (reg:DI 5 di)
        (const_int 0 [0])) "../src/bnsolv.f":119 81 {*movdi_internal}
     (nil))
(call_insn 950 949 951 51 (call (mem:QI (symbol_ref:DI ("_gfortran_stop_string") [flags 0x41]  <function_decl 0x1427c2200 _gfortran_stop_string>) [0 _gfortran_stop_string S1 A8])
        (const_int 0 [0])) "../src/bnsolv.f":119 655 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 951 950 952)
;; basic block 52, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 51, next block 53, flags: (RTL, MODIFIED)
;;  pred:       49
;;              50
;; bb 52 artificial_defs: { }
;; bb 52 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671
;; lr  def 	 17 [flags] 477 478 479 480 481 482 483 484 485 486 487 488 725 945 946 947 948 949 950
(code_label 952 951 953 52 32 (nil) [2 uses])
(note 953 952 954 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(insn 954 953 955 52 (set (reg:SI 0 ax [orig:477 i.75_391 ] [477])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [1 i+0 S4 A64])) "../src/bnsolv.f":121 82 {*movsi_internal}
     (nil))
(insn 955 954 956 52 (set (reg:DI 0 ax [orig:478 _392 ] [478])
        (sign_extend:DI (reg:SI 0 ax [orig:477 i.75_391 ] [477]))) "../src/bnsolv.f":121 145 {*extendsidi2_rex64}
     (nil))
(insn 956 955 957 52 (parallel [
            (set (reg:DI 0 ax [orig:479 _393 ] [479])
                (mult:DI (reg:DI 0 ax [orig:478 _392 ] [478])
                    (reg:DI 5 di [orig:665 stride.4_635 ] [665])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":121 329 {*muldi3_1}
     (nil))
(insn 957 956 958 52 (parallel [
            (set (reg:DI 1 dx [orig:480 _394 ] [480])
                (plus:DI (reg:DI 3 bx [orig:671 offset.5_642 ] [671])
                    (reg:DI 0 ax [orig:479 _393 ] [479])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":121 218 {*adddi_1}
     (nil))
(insn 958 957 959 52 (set (reg/f:DI 0 ax [945])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -728 [0xfffffffffffffd28])) [11 nb+0 S8 A64])) "../src/bnsolv.f":121 81 {*movdi_internal}
     (nil))
(insn 959 958 960 52 (set (reg:SI 0 ax [orig:481 _395 ] [481])
        (mem:SI (reg/f:DI 0 ax [945]) [1 *nb_615(D)+0 S4 A32])) "../src/bnsolv.f":121 82 {*movsi_internal}
     (nil))
(insn 960 959 961 52 (set (reg:DI 0 ax [orig:482 _396 ] [482])
        (sign_extend:DI (reg:SI 0 ax [orig:481 _395 ] [481]))) "../src/bnsolv.f":121 145 {*extendsidi2_rex64}
     (nil))
(insn 961 960 962 52 (parallel [
            (set (reg:DI 0 ax [orig:483 _397 ] [483])
                (mult:DI (reg:DI 0 ax [orig:482 _396 ] [482])
                    (reg:DI 4 si [orig:663 stride.2_632 ] [663])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":121 329 {*muldi3_1}
     (nil))
(insn 962 961 963 52 (parallel [
            (set (reg:DI 1 dx [orig:484 _398 ] [484])
                (plus:DI (reg:DI 1 dx [orig:480 _394 ] [480])
                    (reg:DI 0 ax [orig:483 _397 ] [483])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":121 218 {*adddi_1}
     (nil))
(insn 963 962 964 52 (set (reg/f:DI 0 ax [946])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -728 [0xfffffffffffffd28])) [11 nb+0 S8 A64])) "../src/bnsolv.f":121 81 {*movdi_internal}
     (nil))
(insn 964 963 965 52 (set (reg:SI 0 ax [orig:485 _399 ] [485])
        (mem:SI (reg/f:DI 0 ax [946]) [1 *nb_615(D)+0 S4 A32])) "../src/bnsolv.f":121 82 {*movsi_internal}
     (nil))
(insn 965 964 966 52 (set (reg:DI 0 ax [orig:486 _400 ] [486])
        (sign_extend:DI (reg:SI 0 ax [orig:485 _399 ] [485]))) "../src/bnsolv.f":121 145 {*extendsidi2_rex64}
     (nil))
(insn 966 965 967 52 (parallel [
            (set (reg:DI 1 dx [orig:487 _401 ] [487])
                (plus:DI (reg:DI 1 dx [orig:484 _398 ] [484])
                    (reg:DI 0 ax [orig:486 _400 ] [486])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":121 218 {*adddi_1}
     (nil))
(insn 967 966 968 52 (set (reg/f:DI 0 ax [947])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -696 [0xfffffffffffffd48])) [10 a+0 S8 A64])) "../src/bnsolv.f":121 81 {*movdi_internal}
     (nil))
(insn 968 967 969 52 (set (reg:SF 22 xmm1 [orig:488 _402 ] [488])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:487 _401 ] [487])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [947])) [3 *a_685(D) S4 A32])) "../src/bnsolv.f":121 127 {*movsf_internal}
     (nil))
(insn 969 968 970 52 (set (reg:SF 21 xmm0 [949])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC4") [flags 0x2]) [3  S4 A32])) "../src/bnsolv.f":121 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 970 969 971 52 (set (reg:SF 21 xmm0 [948])
        (div:SF (reg:SF 21 xmm0 [949])
            (reg:SF 22 xmm1 [orig:488 _402 ] [488]))) "../src/bnsolv.f":121 805 {*fop_sf_1}
     (nil))
(insn 971 970 972 52 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [3 pivot+0 S4 A32])
        (reg:SF 21 xmm0 [948])) "../src/bnsolv.f":121 127 {*movsf_internal}
     (nil))
(insn 972 971 973 52 (set (reg/f:DI 0 ax [950])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -728 [0xfffffffffffffd28])) [11 nb+0 S8 A64])) "../src/bnsolv.f":122 81 {*movdi_internal}
     (nil))
(insn 973 972 974 52 (set (reg:SI 2 cx [orig:725 _768 ] [725])
        (mem:SI (reg/f:DI 0 ax [950]) [1 *nb_615(D)+0 S4 A32])) "../src/bnsolv.f":122 82 {*movsi_internal}
     (nil))
(insn 974 973 1011 52 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -68 [0xffffffffffffffbc])) [1 l+0 S4 A32])
        (const_int 1 [0x1])) "../src/bnsolv.f":122 82 {*movsi_internal}
     (nil))
;;  succ:       53 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 725

;; basic block 53, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 52, next block 54, flags: (RTL, MODIFIED)
;;  pred:       52 (FALLTHRU)
;;              54 [100.0%] 
;; bb 53 artificial_defs: { }
;; bb 53 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 725
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 725
;; lr  def 	 17 [flags] 726
(code_label 1011 974 975 53 35 (nil) [1 uses])
(note 975 1011 976 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(insn 976 975 977 53 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -68 [0xffffffffffffffbc])) [1 l+0 S4 A32])
            (reg:SI 2 cx [orig:725 _768 ] [725]))) "../src/bnsolv.f":122 7 {*cmpsi_1}
     (nil))
(insn 977 976 978 53 (set (reg:QI 0 ax [orig:726 _770 ] [726])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "../src/bnsolv.f":122 613 {*setcc_qi}
     (nil))
(insn 978 977 979 53 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:726 _770 ] [726])
            (const_int 0 [0]))) "../src/bnsolv.f":122 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 979 978 980 53 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1465)
            (pc))) "../src/bnsolv.f":122 617 {*jcc_1}
     (nil)
 -> 1465)
;;  succ:       100
;;              54 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 725

;; basic block 54, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 53, next block 100, flags: (RTL, MODIFIED)
;;  pred:       53 (FALLTHRU)
;; bb 54 artificial_defs: { }
;; bb 54 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 725
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 673 675 681
;; lr  def 	 17 [flags] 489 490 491 492 493 494 495 496 497 498 499 500 501 502 503 504 505 506 507 508 509 510 951 952 953 954 955 956
(note 980 979 981 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(insn 981 980 982 54 (set (reg:SI 0 ax [orig:489 i.76_403 ] [489])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [1 i+0 S4 A64])) "../src/bnsolv.f":123 82 {*movsi_internal}
     (nil))
(insn 982 981 983 54 (set (reg:DI 0 ax [orig:490 _404 ] [490])
        (sign_extend:DI (reg:SI 0 ax [orig:489 i.76_403 ] [489]))) "../src/bnsolv.f":123 145 {*extendsidi2_rex64}
     (nil))
(insn 983 982 984 54 (parallel [
            (set (reg:DI 0 ax [orig:491 _405 ] [491])
                (mult:DI (reg:DI 0 ax [orig:490 _404 ] [490])
                    (reg:DI 42 r13 [orig:675 stride.18_648 ] [675])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":123 329 {*muldi3_1}
     (nil))
(insn 984 983 985 54 (parallel [
            (set (reg:DI 1 dx [orig:492 _406 ] [492])
                (plus:DI (reg:DI 43 r14 [orig:681 offset.19_655 ] [681])
                    (reg:DI 0 ax [orig:491 _405 ] [491])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":123 218 {*adddi_1}
     (nil))
(insn 985 984 986 54 (set (reg:SI 0 ax [951])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -68 [0xffffffffffffffbc])) [1 l+0 S4 A32])) "../src/bnsolv.f":123 82 {*movsi_internal}
     (nil))
(insn 986 985 987 54 (set (reg:DI 0 ax [orig:493 _407 ] [493])
        (sign_extend:DI (reg:SI 0 ax [951]))) "../src/bnsolv.f":123 145 {*extendsidi2_rex64}
     (nil))
(insn 987 986 988 54 (parallel [
            (set (reg:DI 0 ax [orig:494 _408 ] [494])
                (mult:DI (reg:DI 0 ax [orig:493 _407 ] [493])
                    (reg:DI 41 r12 [orig:673 stride.16_645 ] [673])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":123 329 {*muldi3_1}
     (nil))
(insn 988 987 989 54 (parallel [
            (set (reg:DI 1 dx [orig:495 _409 ] [495])
                (plus:DI (reg:DI 1 dx [orig:492 _406 ] [492])
                    (reg:DI 0 ax [orig:494 _408 ] [494])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":123 218 {*adddi_1}
     (nil))
(insn 989 988 990 54 (set (reg/f:DI 0 ax [952])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -728 [0xfffffffffffffd28])) [11 nb+0 S8 A64])) "../src/bnsolv.f":123 81 {*movdi_internal}
     (nil))
(insn 990 989 991 54 (set (reg:SI 0 ax [orig:496 _410 ] [496])
        (mem:SI (reg/f:DI 0 ax [952]) [1 *nb_615(D)+0 S4 A32])) "../src/bnsolv.f":123 82 {*movsi_internal}
     (nil))
(insn 991 990 992 54 (set (reg:DI 0 ax [orig:497 _411 ] [497])
        (sign_extend:DI (reg:SI 0 ax [orig:496 _410 ] [496]))) "../src/bnsolv.f":123 145 {*extendsidi2_rex64}
     (nil))
(insn 992 991 993 54 (parallel [
            (set (reg:DI 1 dx [orig:498 _412 ] [498])
                (plus:DI (reg:DI 1 dx [orig:495 _409 ] [495])
                    (reg:DI 0 ax [orig:497 _411 ] [497])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":123 218 {*adddi_1}
     (nil))
(insn 993 992 994 54 (set (reg/f:DI 0 ax [953])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -712 [0xfffffffffffffd38])) [10 c+0 S8 A64])) "../src/bnsolv.f":123 81 {*movdi_internal}
     (nil))
(insn 994 993 995 54 (set (reg:SF 21 xmm0 [orig:499 _413 ] [499])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:498 _412 ] [498])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [953])) [3 *c_686(D) S4 A32])) "../src/bnsolv.f":123 127 {*movsf_internal}
     (nil))
(insn 995 994 996 54 (set (reg:SI 0 ax [orig:500 i.77_414 ] [500])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [1 i+0 S4 A64])) "../src/bnsolv.f":123 82 {*movsi_internal}
     (nil))
(insn 996 995 997 54 (set (reg:DI 0 ax [orig:501 _415 ] [501])
        (sign_extend:DI (reg:SI 0 ax [orig:500 i.77_414 ] [500]))) "../src/bnsolv.f":123 145 {*extendsidi2_rex64}
     (nil))
(insn 997 996 998 54 (parallel [
            (set (reg:DI 0 ax [orig:502 _416 ] [502])
                (mult:DI (reg:DI 0 ax [orig:501 _415 ] [501])
                    (reg:DI 42 r13 [orig:675 stride.18_648 ] [675])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":123 329 {*muldi3_1}
     (nil))
(insn 998 997 999 54 (parallel [
            (set (reg:DI 1 dx [orig:503 _417 ] [503])
                (plus:DI (reg:DI 43 r14 [orig:681 offset.19_655 ] [681])
                    (reg:DI 0 ax [orig:502 _416 ] [502])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":123 218 {*adddi_1}
     (nil))
(insn 999 998 1000 54 (set (reg:SI 0 ax [954])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -68 [0xffffffffffffffbc])) [1 l+0 S4 A32])) "../src/bnsolv.f":123 82 {*movsi_internal}
     (nil))
(insn 1000 999 1001 54 (set (reg:DI 0 ax [orig:504 _418 ] [504])
        (sign_extend:DI (reg:SI 0 ax [954]))) "../src/bnsolv.f":123 145 {*extendsidi2_rex64}
     (nil))
(insn 1001 1000 1002 54 (parallel [
            (set (reg:DI 0 ax [orig:505 _419 ] [505])
                (mult:DI (reg:DI 0 ax [orig:504 _418 ] [504])
                    (reg:DI 41 r12 [orig:673 stride.16_645 ] [673])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":123 329 {*muldi3_1}
     (nil))
(insn 1002 1001 1003 54 (parallel [
            (set (reg:DI 1 dx [orig:506 _420 ] [506])
                (plus:DI (reg:DI 1 dx [orig:503 _417 ] [503])
                    (reg:DI 0 ax [orig:505 _419 ] [505])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":123 218 {*adddi_1}
     (nil))
(insn 1003 1002 1004 54 (set (reg/f:DI 0 ax [955])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -728 [0xfffffffffffffd28])) [11 nb+0 S8 A64])) "../src/bnsolv.f":123 81 {*movdi_internal}
     (nil))
(insn 1004 1003 1005 54 (set (reg:SI 0 ax [orig:507 _421 ] [507])
        (mem:SI (reg/f:DI 0 ax [955]) [1 *nb_615(D)+0 S4 A32])) "../src/bnsolv.f":123 82 {*movsi_internal}
     (nil))
(insn 1005 1004 1006 54 (set (reg:DI 0 ax [orig:508 _422 ] [508])
        (sign_extend:DI (reg:SI 0 ax [orig:507 _421 ] [507]))) "../src/bnsolv.f":123 145 {*extendsidi2_rex64}
     (nil))
(insn 1006 1005 1007 54 (parallel [
            (set (reg:DI 1 dx [orig:509 _423 ] [509])
                (plus:DI (reg:DI 1 dx [orig:506 _420 ] [506])
                    (reg:DI 0 ax [orig:508 _422 ] [508])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":123 218 {*adddi_1}
     (nil))
(insn 1007 1006 1008 54 (set (reg:SF 21 xmm0 [orig:510 _424 ] [510])
        (mult:SF (reg:SF 21 xmm0 [orig:499 _413 ] [499])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -184 [0xffffffffffffff48])) [3 pivot+0 S4 A32]))) "../src/bnsolv.f":123 802 {*fop_sf_comm}
     (nil))
(insn 1008 1007 1009 54 (set (reg/f:DI 0 ax [956])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -712 [0xfffffffffffffd38])) [10 c+0 S8 A64])) "../src/bnsolv.f":123 81 {*movdi_internal}
     (nil))
(insn 1009 1008 1010 54 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:509 _423 ] [509])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [956])) [3 *c_686(D) S4 A32])
        (reg:SF 21 xmm0 [orig:510 _424 ] [510])) "../src/bnsolv.f":123 127 {*movsf_internal}
     (nil))
(insn 1010 1009 1393 54 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -68 [0xffffffffffffffbc])) [1 l+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -68 [0xffffffffffffffbc])) [1 l+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":122 217 {*addsi_1}
     (nil))
(jump_insn 1393 1010 1394 54 (set (pc)
        (label_ref 1011)) "../src/bnsolv.f":122 649 {jump}
     (nil)
 -> 1011)
;;  succ:       53 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 725

(barrier 1394 1393 1465)
;; basic block 100, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 54, next block 55, flags: (RTL, MODIFIED)
;;  pred:       53
;; bb 100 artificial_defs: { }
;; bb 100 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 1465 1394 1464 100 73 (nil) [1 uses])
(note 1464 1465 1466 100 [bb 100] NOTE_INSN_BASIC_BLOCK)
(insn 1466 1464 1014 100 (const_int 0 [0]) "../src/bnsolv.f":124 682 {nop}
     (nil))
;;  succ:       55 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691

;; basic block 55, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 100, next block 56, flags: (RTL, MODIFIED)
;;  pred:       100 [100.0%]  (FALLTHRU)
;; bb 55 artificial_defs: { }
;; bb 55 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 727 957
(code_label 1014 1466 1015 55 34 (nil) [0 uses])
(note 1015 1014 1016 55 [bb 55] NOTE_INSN_BASIC_BLOCK)
(insn 1016 1015 1017 55 (set (reg/f:DI 0 ax [957])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 16 [0x10])) [11 nrhs+0 S8 A64])) "../src/bnsolv.f":125 81 {*movdi_internal}
     (nil))
(insn 1017 1016 1018 55 (set (reg:SI 2 cx [orig:727 _773 ] [727])
        (mem:SI (reg/f:DI 0 ax [957]) [1 *nrhs_689(D)+0 S4 A32])) "../src/bnsolv.f":125 82 {*movsi_internal}
     (nil))
(insn 1018 1017 1055 55 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -68 [0xffffffffffffffbc])) [1 l+0 S4 A32])
        (const_int 1 [0x1])) "../src/bnsolv.f":125 82 {*movsi_internal}
     (nil))
;;  succ:       56 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 727

;; basic block 56, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 55, next block 57, flags: (RTL, MODIFIED)
;;  pred:       55 (FALLTHRU)
;;              57 [100.0%] 
;; bb 56 artificial_defs: { }
;; bb 56 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 727
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 727
;; lr  def 	 17 [flags] 728
(code_label 1055 1018 1019 56 37 (nil) [1 uses])
(note 1019 1055 1020 56 [bb 56] NOTE_INSN_BASIC_BLOCK)
(insn 1020 1019 1021 56 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -68 [0xffffffffffffffbc])) [1 l+0 S4 A32])
            (reg:SI 2 cx [orig:727 _773 ] [727]))) "../src/bnsolv.f":125 7 {*cmpsi_1}
     (nil))
(insn 1021 1020 1022 56 (set (reg:QI 0 ax [orig:728 _775 ] [728])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "../src/bnsolv.f":125 613 {*setcc_qi}
     (nil))
(insn 1022 1021 1023 56 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:728 _775 ] [728])
            (const_int 0 [0]))) "../src/bnsolv.f":125 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 1023 1022 1024 56 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1468)
            (pc))) "../src/bnsolv.f":125 617 {*jcc_1}
     (nil)
 -> 1468)
;;  succ:       101
;;              57 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 727

;; basic block 57, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 56, next block 101, flags: (RTL, MODIFIED)
;;  pred:       56 (FALLTHRU)
;; bb 57 artificial_defs: { }
;; bb 57 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 727
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 683 685 691
;; lr  def 	 17 [flags] 511 512 513 514 515 516 517 518 519 520 521 522 523 524 525 526 527 528 529 530 531 532 958 959 960 961 962 963
(note 1024 1023 1025 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(insn 1025 1024 1026 57 (set (reg:SI 0 ax [orig:511 i.78_425 ] [511])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [1 i+0 S4 A64])) "../src/bnsolv.f":126 82 {*movsi_internal}
     (nil))
(insn 1026 1025 1027 57 (set (reg:DI 0 ax [orig:512 _426 ] [512])
        (sign_extend:DI (reg:SI 0 ax [orig:511 i.78_425 ] [511]))) "../src/bnsolv.f":126 145 {*extendsidi2_rex64}
     (nil))
(insn 1027 1026 1028 57 (parallel [
            (set (reg:DI 0 ax [orig:513 _427 ] [513])
                (mult:DI (reg:DI 0 ax [orig:512 _426 ] [512])
                    (reg:DI 38 r9 [orig:685 stride.25_662 ] [685])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":126 329 {*muldi3_1}
     (nil))
(insn 1028 1027 1029 57 (parallel [
            (set (reg:DI 1 dx [orig:514 _428 ] [514])
                (plus:DI (reg:DI 39 r10 [orig:691 offset.26_669 ] [691])
                    (reg:DI 0 ax [orig:513 _427 ] [513])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":126 218 {*adddi_1}
     (nil))
(insn 1029 1028 1030 57 (set (reg:SI 0 ax [958])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -68 [0xffffffffffffffbc])) [1 l+0 S4 A32])) "../src/bnsolv.f":126 82 {*movsi_internal}
     (nil))
(insn 1030 1029 1031 57 (set (reg:DI 0 ax [orig:515 _429 ] [515])
        (sign_extend:DI (reg:SI 0 ax [958]))) "../src/bnsolv.f":126 145 {*extendsidi2_rex64}
     (nil))
(insn 1031 1030 1032 57 (parallel [
            (set (reg:DI 0 ax [orig:516 _430 ] [516])
                (mult:DI (reg:DI 0 ax [orig:515 _429 ] [515])
                    (reg:DI 37 r8 [orig:683 stride.23_658 ] [683])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":126 329 {*muldi3_1}
     (nil))
(insn 1032 1031 1033 57 (parallel [
            (set (reg:DI 1 dx [orig:517 _431 ] [517])
                (plus:DI (reg:DI 1 dx [orig:514 _428 ] [514])
                    (reg:DI 0 ax [orig:516 _430 ] [516])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":126 218 {*adddi_1}
     (nil))
(insn 1033 1032 1034 57 (set (reg/f:DI 0 ax [959])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -728 [0xfffffffffffffd28])) [11 nb+0 S8 A64])) "../src/bnsolv.f":126 81 {*movdi_internal}
     (nil))
(insn 1034 1033 1035 57 (set (reg:SI 0 ax [orig:518 _432 ] [518])
        (mem:SI (reg/f:DI 0 ax [959]) [1 *nb_615(D)+0 S4 A32])) "../src/bnsolv.f":126 82 {*movsi_internal}
     (nil))
(insn 1035 1034 1036 57 (set (reg:DI 0 ax [orig:519 _433 ] [519])
        (sign_extend:DI (reg:SI 0 ax [orig:518 _432 ] [518]))) "../src/bnsolv.f":126 145 {*extendsidi2_rex64}
     (nil))
(insn 1036 1035 1037 57 (parallel [
            (set (reg:DI 1 dx [orig:520 _434 ] [520])
                (plus:DI (reg:DI 1 dx [orig:517 _431 ] [517])
                    (reg:DI 0 ax [orig:519 _433 ] [519])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":126 218 {*adddi_1}
     (nil))
(insn 1037 1036 1038 57 (set (reg/f:DI 0 ax [960])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -720 [0xfffffffffffffd30])) [10 r+0 S8 A64])) "../src/bnsolv.f":126 81 {*movdi_internal}
     (nil))
(insn 1038 1037 1039 57 (set (reg:SF 21 xmm0 [orig:521 _435 ] [521])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:520 _434 ] [520])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [960])) [3 *r_693(D) S4 A32])) "../src/bnsolv.f":126 127 {*movsf_internal}
     (nil))
(insn 1039 1038 1040 57 (set (reg:SI 0 ax [orig:522 i.79_436 ] [522])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [1 i+0 S4 A64])) "../src/bnsolv.f":126 82 {*movsi_internal}
     (nil))
(insn 1040 1039 1041 57 (set (reg:DI 0 ax [orig:523 _437 ] [523])
        (sign_extend:DI (reg:SI 0 ax [orig:522 i.79_436 ] [522]))) "../src/bnsolv.f":126 145 {*extendsidi2_rex64}
     (nil))
(insn 1041 1040 1042 57 (parallel [
            (set (reg:DI 0 ax [orig:524 _438 ] [524])
                (mult:DI (reg:DI 0 ax [orig:523 _437 ] [523])
                    (reg:DI 38 r9 [orig:685 stride.25_662 ] [685])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":126 329 {*muldi3_1}
     (nil))
(insn 1042 1041 1043 57 (parallel [
            (set (reg:DI 1 dx [orig:525 _439 ] [525])
                (plus:DI (reg:DI 39 r10 [orig:691 offset.26_669 ] [691])
                    (reg:DI 0 ax [orig:524 _438 ] [524])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":126 218 {*adddi_1}
     (nil))
(insn 1043 1042 1044 57 (set (reg:SI 0 ax [961])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -68 [0xffffffffffffffbc])) [1 l+0 S4 A32])) "../src/bnsolv.f":126 82 {*movsi_internal}
     (nil))
(insn 1044 1043 1045 57 (set (reg:DI 0 ax [orig:526 _440 ] [526])
        (sign_extend:DI (reg:SI 0 ax [961]))) "../src/bnsolv.f":126 145 {*extendsidi2_rex64}
     (nil))
(insn 1045 1044 1046 57 (parallel [
            (set (reg:DI 0 ax [orig:527 _441 ] [527])
                (mult:DI (reg:DI 0 ax [orig:526 _440 ] [526])
                    (reg:DI 37 r8 [orig:683 stride.23_658 ] [683])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":126 329 {*muldi3_1}
     (nil))
(insn 1046 1045 1047 57 (parallel [
            (set (reg:DI 1 dx [orig:528 _442 ] [528])
                (plus:DI (reg:DI 1 dx [orig:525 _439 ] [525])
                    (reg:DI 0 ax [orig:527 _441 ] [527])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":126 218 {*adddi_1}
     (nil))
(insn 1047 1046 1048 57 (set (reg/f:DI 0 ax [962])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -728 [0xfffffffffffffd28])) [11 nb+0 S8 A64])) "../src/bnsolv.f":126 81 {*movdi_internal}
     (nil))
(insn 1048 1047 1049 57 (set (reg:SI 0 ax [orig:529 _443 ] [529])
        (mem:SI (reg/f:DI 0 ax [962]) [1 *nb_615(D)+0 S4 A32])) "../src/bnsolv.f":126 82 {*movsi_internal}
     (nil))
(insn 1049 1048 1050 57 (set (reg:DI 0 ax [orig:530 _444 ] [530])
        (sign_extend:DI (reg:SI 0 ax [orig:529 _443 ] [529]))) "../src/bnsolv.f":126 145 {*extendsidi2_rex64}
     (nil))
(insn 1050 1049 1051 57 (parallel [
            (set (reg:DI 1 dx [orig:531 _445 ] [531])
                (plus:DI (reg:DI 1 dx [orig:528 _442 ] [528])
                    (reg:DI 0 ax [orig:530 _444 ] [530])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":126 218 {*adddi_1}
     (nil))
(insn 1051 1050 1052 57 (set (reg:SF 21 xmm0 [orig:532 _446 ] [532])
        (mult:SF (reg:SF 21 xmm0 [orig:521 _435 ] [521])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -184 [0xffffffffffffff48])) [3 pivot+0 S4 A32]))) "../src/bnsolv.f":126 802 {*fop_sf_comm}
     (nil))
(insn 1052 1051 1053 57 (set (reg/f:DI 0 ax [963])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -720 [0xfffffffffffffd30])) [10 r+0 S8 A64])) "../src/bnsolv.f":126 81 {*movdi_internal}
     (nil))
(insn 1053 1052 1054 57 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:531 _445 ] [531])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [963])) [3 *r_693(D) S4 A32])
        (reg:SF 21 xmm0 [orig:532 _446 ] [532])) "../src/bnsolv.f":126 127 {*movsf_internal}
     (nil))
(insn 1054 1053 1395 57 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -68 [0xffffffffffffffbc])) [1 l+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -68 [0xffffffffffffffbc])) [1 l+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":125 217 {*addsi_1}
     (nil))
(jump_insn 1395 1054 1396 57 (set (pc)
        (label_ref 1055)) "../src/bnsolv.f":125 649 {jump}
     (nil)
 -> 1055)
;;  succ:       56 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 727

(barrier 1396 1395 1468)
;; basic block 101, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 57, next block 58, flags: (RTL, MODIFIED)
;;  pred:       56
;; bb 101 artificial_defs: { }
;; bb 101 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 1468 1396 1467 101 74 (nil) [1 uses])
(note 1467 1468 1469 101 [bb 101] NOTE_INSN_BASIC_BLOCK)
(insn 1469 1467 1058 101 (const_int 0 [0]) "../src/bnsolv.f":127 682 {nop}
     (nil))
;;  succ:       58 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691

;; basic block 58, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 101, next block 59, flags: (RTL, MODIFIED)
;;  pred:       101 [100.0%]  (FALLTHRU)
;; bb 58 artificial_defs: { }
;; bb 58 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 533 729 964
(code_label 1058 1469 1059 58 36 (nil) [0 uses])
(note 1059 1058 1060 58 [bb 58] NOTE_INSN_BASIC_BLOCK)
(insn 1060 1059 1061 58 (set (reg/f:DI 0 ax [964])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -728 [0xfffffffffffffd28])) [11 nb+0 S8 A64])) "../src/bnsolv.f":130 81 {*movdi_internal}
     (nil))
(insn 1061 1060 1062 58 (set (reg:SI 0 ax [orig:533 _447 ] [533])
        (mem:SI (reg/f:DI 0 ax [964]) [1 *nb_615(D)+0 S4 A32])) "../src/bnsolv.f":130 82 {*movsi_internal}
     (nil))
(insn 1062 1061 1063 58 (parallel [
            (set (reg:SI 0 ax [orig:729 _778 ] [729])
                (plus:SI (reg:SI 0 ax [orig:533 _447 ] [533])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":130 217 {*addsi_1}
     (nil))
(insn 1063 1062 1219 58 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -60 [0xffffffffffffffc4])) [1 kpiv+0 S4 A32])
        (reg:SI 0 ax [orig:729 _778 ] [729])) "../src/bnsolv.f":130 82 {*movsi_internal}
     (nil))
;;  succ:       59 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691

;; basic block 59, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 58, next block 60, flags: (RTL, MODIFIED)
;;  pred:       58 (FALLTHRU)
;;              69 [100.0%] 
;; bb 59 artificial_defs: { }
;; bb 59 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 730
(code_label 1219 1063 1064 59 45 (nil) [1 uses])
(note 1064 1219 1065 59 [bb 59] NOTE_INSN_BASIC_BLOCK)
(insn 1065 1064 1066 59 (set (reg:CCNO 17 flags)
        (compare:CCNO (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -60 [0xffffffffffffffc4])) [1 kpiv+0 S4 A32])
            (const_int 0 [0]))) "../src/bnsolv.f":130 3 {*cmpsi_ccno_1}
     (nil))
(insn 1066 1065 1067 59 (set (reg:QI 0 ax [orig:730 _780 ] [730])
        (le:QI (reg:CCNO 17 flags)
            (const_int 0 [0]))) "../src/bnsolv.f":130 613 {*setcc_qi}
     (nil))
(insn 1067 1066 1068 59 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:730 _780 ] [730])
            (const_int 0 [0]))) "../src/bnsolv.f":130 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 1068 1067 1069 59 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1471)
            (pc))) "../src/bnsolv.f":130 617 {*jcc_1}
     (nil)
 -> 1471)
;;  succ:       102
;;              60 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691

;; basic block 60, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 59, next block 61, flags: (RTL, MODIFIED)
;;  pred:       59 (FALLTHRU)
;; bb 60 artificial_defs: { }
;; bb 60 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 731 732 967 968 969
(note 1069 1068 1073 60 [bb 60] NOTE_INSN_BASIC_BLOCK)
(insn 1073 1069 1074 60 (set (reg:SI 0 ax [968])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -60 [0xffffffffffffffc4])) [1 kpiv+0 S4 A32])) "../src/bnsolv.f":131 82 {*movsi_internal}
     (nil))
(insn 1074 1073 1075 60 (parallel [
            (set (reg:SI 0 ax [967])
                (plus:SI (reg:SI 0 ax [968])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":131 217 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [1 kpiv+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 1075 1074 1076 60 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -180 [0xffffffffffffff4c])) [1 kp1+0 S4 A32])
        (reg:SI 0 ax [967])) "../src/bnsolv.f":131 82 {*movsi_internal}
     (nil))
(insn 1076 1075 1077 60 (set (reg:SI 1 dx [orig:731 _782 ] [731])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -180 [0xffffffffffffff4c])) [1 kp1+0 S4 A32])) "../src/bnsolv.f":132 82 {*movsi_internal}
     (nil))
(insn 1077 1076 1078 60 (set (reg/f:DI 0 ax [969])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -728 [0xfffffffffffffd28])) [11 nb+0 S8 A64])) "../src/bnsolv.f":132 81 {*movdi_internal}
     (nil))
(insn 1078 1077 1079 60 (set (reg:SI 40 r11 [orig:732 _783 ] [732])
        (mem:SI (reg/f:DI 0 ax [969]) [1 *nb_615(D)+0 S4 A32])) "../src/bnsolv.f":132 82 {*movsi_internal}
     (nil))
(insn 1079 1078 1213 60 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [1 k+0 S4 A32])
        (reg:SI 1 dx [orig:731 _782 ] [731])) "../src/bnsolv.f":132 82 {*movsi_internal}
     (nil))
;;  succ:       61 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 732

;; basic block 61, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 60, next block 62, flags: (RTL, MODIFIED)
;;  pred:       60 (FALLTHRU)
;;              68 [100.0%] 
;; bb 61 artificial_defs: { }
;; bb 61 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 732
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 732
;; lr  def 	 17 [flags] 733
(code_label 1213 1079 1080 61 44 (nil) [1 uses])
(note 1080 1213 1081 61 [bb 61] NOTE_INSN_BASIC_BLOCK)
(insn 1081 1080 1082 61 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -56 [0xffffffffffffffc8])) [1 k+0 S4 A32])
            (reg:SI 40 r11 [orig:732 _783 ] [732]))) "../src/bnsolv.f":132 7 {*cmpsi_1}
     (nil))
(insn 1082 1081 1083 61 (set (reg:QI 0 ax [orig:733 _785 ] [733])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "../src/bnsolv.f":132 613 {*setcc_qi}
     (nil))
(insn 1083 1082 1084 61 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:733 _785 ] [733])
            (const_int 0 [0]))) "../src/bnsolv.f":132 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 1084 1083 1085 61 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1474)
            (pc))) "../src/bnsolv.f":132 617 {*jcc_1}
     (nil)
 -> 1474)
;;  succ:       103
;;              62 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 732

;; basic block 62, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 61, next block 63, flags: (RTL, MODIFIED)
;;  pred:       61 (FALLTHRU)
;; bb 62 artificial_defs: { }
;; bb 62 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 732
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671
;; lr  def 	 17 [flags] 534 535 536 537 538 539 540 541 542 734 970 971 972 973 974
(note 1085 1084 1086 62 [bb 62] NOTE_INSN_BASIC_BLOCK)
(insn 1086 1085 1087 62 (set (reg:SI 0 ax [orig:534 i.80_448 ] [534])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [1 i+0 S4 A64])) "../src/bnsolv.f":133 82 {*movsi_internal}
     (nil))
(insn 1087 1086 1088 62 (set (reg:DI 0 ax [orig:535 _449 ] [535])
        (sign_extend:DI (reg:SI 0 ax [orig:534 i.80_448 ] [534]))) "../src/bnsolv.f":133 145 {*extendsidi2_rex64}
     (nil))
(insn 1088 1087 1089 62 (parallel [
            (set (reg:DI 0 ax [orig:536 _450 ] [536])
                (mult:DI (reg:DI 0 ax [orig:535 _449 ] [535])
                    (reg:DI 5 di [orig:665 stride.4_635 ] [665])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":133 329 {*muldi3_1}
     (nil))
(insn 1089 1088 1090 62 (parallel [
            (set (reg:DI 1 dx [orig:537 _451 ] [537])
                (plus:DI (reg:DI 3 bx [orig:671 offset.5_642 ] [671])
                    (reg:DI 0 ax [orig:536 _450 ] [536])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":133 218 {*adddi_1}
     (nil))
(insn 1090 1089 1091 62 (set (reg:SI 0 ax [970])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [1 k+0 S4 A32])) "../src/bnsolv.f":133 82 {*movsi_internal}
     (nil))
(insn 1091 1090 1092 62 (set (reg:DI 0 ax [orig:538 _452 ] [538])
        (sign_extend:DI (reg:SI 0 ax [970]))) "../src/bnsolv.f":133 145 {*extendsidi2_rex64}
     (nil))
(insn 1092 1091 1093 62 (parallel [
            (set (reg:DI 0 ax [orig:539 _453 ] [539])
                (mult:DI (reg:DI 0 ax [orig:538 _452 ] [538])
                    (reg:DI 4 si [orig:663 stride.2_632 ] [663])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":133 329 {*muldi3_1}
     (nil))
(insn 1093 1092 1094 62 (parallel [
            (set (reg:DI 1 dx [orig:540 _454 ] [540])
                (plus:DI (reg:DI 1 dx [orig:537 _451 ] [537])
                    (reg:DI 0 ax [orig:539 _453 ] [539])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":133 218 {*adddi_1}
     (nil))
(insn 1094 1093 1095 62 (set (reg:SI 0 ax [971])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -60 [0xffffffffffffffc4])) [1 kpiv+0 S4 A32])) "../src/bnsolv.f":133 82 {*movsi_internal}
     (nil))
(insn 1095 1094 1096 62 (set (reg:DI 0 ax [orig:541 _455 ] [541])
        (sign_extend:DI (reg:SI 0 ax [971]))) "../src/bnsolv.f":133 145 {*extendsidi2_rex64}
     (nil))
(insn 1096 1095 1097 62 (parallel [
            (set (reg:DI 1 dx [orig:542 _456 ] [542])
                (plus:DI (reg:DI 1 dx [orig:540 _454 ] [540])
                    (reg:DI 0 ax [orig:541 _455 ] [541])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":133 218 {*adddi_1}
     (nil))
(insn 1097 1096 1098 62 (set (reg/f:DI 0 ax [972])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -696 [0xfffffffffffffd48])) [10 a+0 S8 A64])) "../src/bnsolv.f":133 81 {*movdi_internal}
     (nil))
(insn 1098 1097 1099 62 (set (reg:SF 21 xmm0 [973])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:542 _456 ] [542])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [972])) [3 *a_685(D) S4 A32])) "../src/bnsolv.f":133 127 {*movsf_internal}
     (nil))
(insn 1099 1098 1100 62 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [3 atmp+0 S4 A32])
        (reg:SF 21 xmm0 [973])) "../src/bnsolv.f":133 127 {*movsf_internal}
     (nil))
(insn 1100 1099 1101 62 (set (reg/f:DI 0 ax [974])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -728 [0xfffffffffffffd28])) [11 nb+0 S8 A64])) "../src/bnsolv.f":134 81 {*movdi_internal}
     (nil))
(insn 1101 1100 1102 62 (set (reg:SI 2 cx [orig:734 _787 ] [734])
        (mem:SI (reg/f:DI 0 ax [974]) [1 *nb_615(D)+0 S4 A32])) "../src/bnsolv.f":134 82 {*movsi_internal}
     (nil))
(insn 1102 1101 1151 62 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -68 [0xffffffffffffffbc])) [1 l+0 S4 A32])
        (const_int 1 [0x1])) "../src/bnsolv.f":134 82 {*movsi_internal}
     (nil))
;;  succ:       63 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 732 734

;; basic block 63, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 62, next block 64, flags: (RTL, MODIFIED)
;;  pred:       62 (FALLTHRU)
;;              64 [100.0%] 
;; bb 63 artificial_defs: { }
;; bb 63 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 732 734
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 734
;; lr  def 	 17 [flags] 735
(code_label 1151 1102 1103 63 41 (nil) [1 uses])
(note 1103 1151 1104 63 [bb 63] NOTE_INSN_BASIC_BLOCK)
(insn 1104 1103 1105 63 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -68 [0xffffffffffffffbc])) [1 l+0 S4 A32])
            (reg:SI 2 cx [orig:734 _787 ] [734]))) "../src/bnsolv.f":134 7 {*cmpsi_1}
     (nil))
(insn 1105 1104 1106 63 (set (reg:QI 0 ax [orig:735 _789 ] [735])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "../src/bnsolv.f":134 613 {*setcc_qi}
     (nil))
(insn 1106 1105 1107 63 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:735 _789 ] [735])
            (const_int 0 [0]))) "../src/bnsolv.f":134 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 1107 1106 1108 63 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1477)
            (pc))) "../src/bnsolv.f":134 617 {*jcc_1}
     (nil)
 -> 1477)
;;  succ:       104
;;              64 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 732 734

;; basic block 64, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 63, next block 104, flags: (RTL, MODIFIED)
;;  pred:       63 (FALLTHRU)
;; bb 64 artificial_defs: { }
;; bb 64 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 732 734
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 673 675 681
;; lr  def 	 17 [flags] 543 544 545 546 547 548 549 550 551 552 553 554 555 556 557 558 559 560 561 562 563 564 565 566 567 568 569 570 571 572 573 975 976 977 978 979 980 981 982 983
(note 1108 1107 1109 64 [bb 64] NOTE_INSN_BASIC_BLOCK)
(insn 1109 1108 1110 64 (set (reg:SI 0 ax [orig:543 i.81_457 ] [543])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [1 i+0 S4 A64])) "../src/bnsolv.f":135 82 {*movsi_internal}
     (nil))
(insn 1110 1109 1111 64 (set (reg:DI 0 ax [orig:544 _458 ] [544])
        (sign_extend:DI (reg:SI 0 ax [orig:543 i.81_457 ] [543]))) "../src/bnsolv.f":135 145 {*extendsidi2_rex64}
     (nil))
(insn 1111 1110 1112 64 (parallel [
            (set (reg:DI 0 ax [orig:545 _459 ] [545])
                (mult:DI (reg:DI 0 ax [orig:544 _458 ] [544])
                    (reg:DI 42 r13 [orig:675 stride.18_648 ] [675])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":135 329 {*muldi3_1}
     (nil))
(insn 1112 1111 1113 64 (parallel [
            (set (reg:DI 1 dx [orig:546 _460 ] [546])
                (plus:DI (reg:DI 43 r14 [orig:681 offset.19_655 ] [681])
                    (reg:DI 0 ax [orig:545 _459 ] [545])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":135 218 {*adddi_1}
     (nil))
(insn 1113 1112 1114 64 (set (reg:SI 0 ax [975])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -68 [0xffffffffffffffbc])) [1 l+0 S4 A32])) "../src/bnsolv.f":135 82 {*movsi_internal}
     (nil))
(insn 1114 1113 1115 64 (set (reg:DI 0 ax [orig:547 _461 ] [547])
        (sign_extend:DI (reg:SI 0 ax [975]))) "../src/bnsolv.f":135 145 {*extendsidi2_rex64}
     (nil))
(insn 1115 1114 1116 64 (parallel [
            (set (reg:DI 0 ax [orig:548 _462 ] [548])
                (mult:DI (reg:DI 0 ax [orig:547 _461 ] [547])
                    (reg:DI 41 r12 [orig:673 stride.16_645 ] [673])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":135 329 {*muldi3_1}
     (nil))
(insn 1116 1115 1117 64 (parallel [
            (set (reg:DI 1 dx [orig:549 _463 ] [549])
                (plus:DI (reg:DI 1 dx [orig:546 _460 ] [546])
                    (reg:DI 0 ax [orig:548 _462 ] [548])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":135 218 {*adddi_1}
     (nil))
(insn 1117 1116 1118 64 (set (reg:SI 0 ax [976])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -60 [0xffffffffffffffc4])) [1 kpiv+0 S4 A32])) "../src/bnsolv.f":135 82 {*movsi_internal}
     (nil))
(insn 1118 1117 1119 64 (set (reg:DI 0 ax [orig:550 _464 ] [550])
        (sign_extend:DI (reg:SI 0 ax [976]))) "../src/bnsolv.f":135 145 {*extendsidi2_rex64}
     (nil))
(insn 1119 1118 1120 64 (parallel [
            (set (reg:DI 1 dx [orig:551 _465 ] [551])
                (plus:DI (reg:DI 1 dx [orig:549 _463 ] [549])
                    (reg:DI 0 ax [orig:550 _464 ] [550])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":135 218 {*adddi_1}
     (nil))
(insn 1120 1119 1121 64 (set (reg/f:DI 0 ax [977])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -712 [0xfffffffffffffd38])) [10 c+0 S8 A64])) "../src/bnsolv.f":135 81 {*movdi_internal}
     (nil))
(insn 1121 1120 1122 64 (set (reg:SF 22 xmm1 [orig:552 _466 ] [552])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:551 _465 ] [551])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [977])) [3 *c_686(D) S4 A32])) "../src/bnsolv.f":135 127 {*movsf_internal}
     (nil))
(insn 1122 1121 1123 64 (set (reg:SI 0 ax [orig:553 i.82_467 ] [553])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [1 i+0 S4 A64])) "../src/bnsolv.f":135 82 {*movsi_internal}
     (nil))
(insn 1123 1122 1124 64 (set (reg:DI 0 ax [orig:554 _468 ] [554])
        (sign_extend:DI (reg:SI 0 ax [orig:553 i.82_467 ] [553]))) "../src/bnsolv.f":135 145 {*extendsidi2_rex64}
     (nil))
(insn 1124 1123 1125 64 (parallel [
            (set (reg:DI 0 ax [orig:555 _469 ] [555])
                (mult:DI (reg:DI 0 ax [orig:554 _468 ] [554])
                    (reg:DI 42 r13 [orig:675 stride.18_648 ] [675])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":135 329 {*muldi3_1}
     (nil))
(insn 1125 1124 1126 64 (parallel [
            (set (reg:DI 1 dx [orig:556 _470 ] [556])
                (plus:DI (reg:DI 43 r14 [orig:681 offset.19_655 ] [681])
                    (reg:DI 0 ax [orig:555 _469 ] [555])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":135 218 {*adddi_1}
     (nil))
(insn 1126 1125 1127 64 (set (reg:SI 0 ax [978])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -68 [0xffffffffffffffbc])) [1 l+0 S4 A32])) "../src/bnsolv.f":135 82 {*movsi_internal}
     (nil))
(insn 1127 1126 1128 64 (set (reg:DI 0 ax [orig:557 _471 ] [557])
        (sign_extend:DI (reg:SI 0 ax [978]))) "../src/bnsolv.f":135 145 {*extendsidi2_rex64}
     (nil))
(insn 1128 1127 1129 64 (parallel [
            (set (reg:DI 0 ax [orig:558 _472 ] [558])
                (mult:DI (reg:DI 0 ax [orig:557 _471 ] [557])
                    (reg:DI 41 r12 [orig:673 stride.16_645 ] [673])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":135 329 {*muldi3_1}
     (nil))
(insn 1129 1128 1130 64 (parallel [
            (set (reg:DI 1 dx [orig:559 _473 ] [559])
                (plus:DI (reg:DI 1 dx [orig:556 _470 ] [556])
                    (reg:DI 0 ax [orig:558 _472 ] [558])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":135 218 {*adddi_1}
     (nil))
(insn 1130 1129 1131 64 (set (reg:SI 0 ax [979])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [1 k+0 S4 A32])) "../src/bnsolv.f":135 82 {*movsi_internal}
     (nil))
(insn 1131 1130 1132 64 (set (reg:DI 0 ax [orig:560 _474 ] [560])
        (sign_extend:DI (reg:SI 0 ax [979]))) "../src/bnsolv.f":135 145 {*extendsidi2_rex64}
     (nil))
(insn 1132 1131 1133 64 (parallel [
            (set (reg:DI 1 dx [orig:561 _475 ] [561])
                (plus:DI (reg:DI 1 dx [orig:559 _473 ] [559])
                    (reg:DI 0 ax [orig:560 _474 ] [560])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":135 218 {*adddi_1}
     (nil))
(insn 1133 1132 1134 64 (set (reg/f:DI 0 ax [980])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -712 [0xfffffffffffffd38])) [10 c+0 S8 A64])) "../src/bnsolv.f":135 81 {*movdi_internal}
     (nil))
(insn 1134 1133 1135 64 (set (reg:SF 21 xmm0 [orig:562 _476 ] [562])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:561 _475 ] [561])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [980])) [3 *c_686(D) S4 A32])) "../src/bnsolv.f":135 127 {*movsf_internal}
     (nil))
(insn 1135 1134 1136 64 (set (reg:SF 21 xmm0 [orig:563 _477 ] [563])
        (mult:SF (reg:SF 21 xmm0 [orig:562 _476 ] [562])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -192 [0xffffffffffffff40])) [3 atmp+0 S4 A32]))) "../src/bnsolv.f":135 802 {*fop_sf_comm}
     (nil))
(insn 1136 1135 1137 64 (set (reg:SI 0 ax [orig:564 i.83_478 ] [564])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [1 i+0 S4 A64])) "../src/bnsolv.f":135 82 {*movsi_internal}
     (nil))
(insn 1137 1136 1138 64 (set (reg:DI 0 ax [orig:565 _479 ] [565])
        (sign_extend:DI (reg:SI 0 ax [orig:564 i.83_478 ] [564]))) "../src/bnsolv.f":135 145 {*extendsidi2_rex64}
     (nil))
(insn 1138 1137 1139 64 (parallel [
            (set (reg:DI 0 ax [orig:566 _480 ] [566])
                (mult:DI (reg:DI 0 ax [orig:565 _479 ] [565])
                    (reg:DI 42 r13 [orig:675 stride.18_648 ] [675])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":135 329 {*muldi3_1}
     (nil))
(insn 1139 1138 1140 64 (parallel [
            (set (reg:DI 1 dx [orig:567 _481 ] [567])
                (plus:DI (reg:DI 43 r14 [orig:681 offset.19_655 ] [681])
                    (reg:DI 0 ax [orig:566 _480 ] [566])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":135 218 {*adddi_1}
     (nil))
(insn 1140 1139 1141 64 (set (reg:SI 0 ax [981])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -68 [0xffffffffffffffbc])) [1 l+0 S4 A32])) "../src/bnsolv.f":135 82 {*movsi_internal}
     (nil))
(insn 1141 1140 1142 64 (set (reg:DI 0 ax [orig:568 _482 ] [568])
        (sign_extend:DI (reg:SI 0 ax [981]))) "../src/bnsolv.f":135 145 {*extendsidi2_rex64}
     (nil))
(insn 1142 1141 1143 64 (parallel [
            (set (reg:DI 0 ax [orig:569 _483 ] [569])
                (mult:DI (reg:DI 0 ax [orig:568 _482 ] [568])
                    (reg:DI 41 r12 [orig:673 stride.16_645 ] [673])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":135 329 {*muldi3_1}
     (nil))
(insn 1143 1142 1144 64 (parallel [
            (set (reg:DI 1 dx [orig:570 _484 ] [570])
                (plus:DI (reg:DI 1 dx [orig:567 _481 ] [567])
                    (reg:DI 0 ax [orig:569 _483 ] [569])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":135 218 {*adddi_1}
     (nil))
(insn 1144 1143 1145 64 (set (reg:SI 0 ax [982])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -60 [0xffffffffffffffc4])) [1 kpiv+0 S4 A32])) "../src/bnsolv.f":135 82 {*movsi_internal}
     (nil))
(insn 1145 1144 1146 64 (set (reg:DI 0 ax [orig:571 _485 ] [571])
        (sign_extend:DI (reg:SI 0 ax [982]))) "../src/bnsolv.f":135 145 {*extendsidi2_rex64}
     (nil))
(insn 1146 1145 1147 64 (parallel [
            (set (reg:DI 1 dx [orig:572 _486 ] [572])
                (plus:DI (reg:DI 1 dx [orig:570 _484 ] [570])
                    (reg:DI 0 ax [orig:571 _485 ] [571])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":135 218 {*adddi_1}
     (nil))
(insn 1147 1146 1560 64 (set (reg:SF 22 xmm1 [orig:552 _466 ] [552])
        (minus:SF (reg:SF 22 xmm1 [orig:552 _466 ] [552])
            (reg:SF 21 xmm0 [orig:563 _477 ] [563]))) "../src/bnsolv.f":135 805 {*fop_sf_1}
     (nil))
(insn 1560 1147 1148 64 (set (reg:SF 21 xmm0 [orig:573 _487 ] [573])
        (reg:SF 22 xmm1 [orig:552 _466 ] [552])) "../src/bnsolv.f":135 127 {*movsf_internal}
     (nil))
(insn 1148 1560 1149 64 (set (reg/f:DI 0 ax [983])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -712 [0xfffffffffffffd38])) [10 c+0 S8 A64])) "../src/bnsolv.f":135 81 {*movdi_internal}
     (nil))
(insn 1149 1148 1150 64 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:572 _486 ] [572])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [983])) [3 *c_686(D) S4 A32])
        (reg:SF 21 xmm0 [orig:573 _487 ] [573])) "../src/bnsolv.f":135 127 {*movsf_internal}
     (nil))
(insn 1150 1149 1397 64 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -68 [0xffffffffffffffbc])) [1 l+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -68 [0xffffffffffffffbc])) [1 l+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":134 217 {*addsi_1}
     (nil))
(jump_insn 1397 1150 1398 64 (set (pc)
        (label_ref 1151)) "../src/bnsolv.f":134 649 {jump}
     (nil)
 -> 1151)
;;  succ:       63 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 732 734

(barrier 1398 1397 1477)
;; basic block 104, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 64, next block 65, flags: (RTL, MODIFIED)
;;  pred:       63
;; bb 104 artificial_defs: { }
;; bb 104 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 732
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 1477 1398 1476 104 77 (nil) [1 uses])
(note 1476 1477 1478 104 [bb 104] NOTE_INSN_BASIC_BLOCK)
(insn 1478 1476 1154 104 (const_int 0 [0]) "../src/bnsolv.f":136 682 {nop}
     (nil))
;;  succ:       65 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 732

;; basic block 65, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 104, next block 66, flags: (RTL, MODIFIED)
;;  pred:       104 [100.0%]  (FALLTHRU)
;; bb 65 artificial_defs: { }
;; bb 65 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 732
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 736 984
(code_label 1154 1478 1155 65 40 (nil) [0 uses])
(note 1155 1154 1156 65 [bb 65] NOTE_INSN_BASIC_BLOCK)
(insn 1156 1155 1157 65 (set (reg/f:DI 0 ax [984])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 16 [0x10])) [11 nrhs+0 S8 A64])) "../src/bnsolv.f":137 81 {*movdi_internal}
     (nil))
(insn 1157 1156 1158 65 (set (reg:SI 2 cx [orig:736 _792 ] [736])
        (mem:SI (reg/f:DI 0 ax [984]) [1 *nrhs_689(D)+0 S4 A32])) "../src/bnsolv.f":137 82 {*movsi_internal}
     (nil))
(insn 1158 1157 1207 65 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -68 [0xffffffffffffffbc])) [1 l+0 S4 A32])
        (const_int 1 [0x1])) "../src/bnsolv.f":137 82 {*movsi_internal}
     (nil))
;;  succ:       66 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 732 736

;; basic block 66, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 65, next block 67, flags: (RTL, MODIFIED)
;;  pred:       65 (FALLTHRU)
;;              67 [100.0%] 
;; bb 66 artificial_defs: { }
;; bb 66 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 732 736
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 736
;; lr  def 	 17 [flags] 737
(code_label 1207 1158 1159 66 43 (nil) [1 uses])
(note 1159 1207 1160 66 [bb 66] NOTE_INSN_BASIC_BLOCK)
(insn 1160 1159 1161 66 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -68 [0xffffffffffffffbc])) [1 l+0 S4 A32])
            (reg:SI 2 cx [orig:736 _792 ] [736]))) "../src/bnsolv.f":137 7 {*cmpsi_1}
     (nil))
(insn 1161 1160 1162 66 (set (reg:QI 0 ax [orig:737 _794 ] [737])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "../src/bnsolv.f":137 613 {*setcc_qi}
     (nil))
(insn 1162 1161 1163 66 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:737 _794 ] [737])
            (const_int 0 [0]))) "../src/bnsolv.f":137 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 1163 1162 1164 66 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1480)
            (pc))) "../src/bnsolv.f":137 617 {*jcc_1}
     (nil)
 -> 1480)
;;  succ:       105
;;              67 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 732 736

;; basic block 67, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 66, next block 105, flags: (RTL, MODIFIED)
;;  pred:       66 (FALLTHRU)
;; bb 67 artificial_defs: { }
;; bb 67 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 732 736
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 683 685 691
;; lr  def 	 17 [flags] 574 575 576 577 578 579 580 581 582 583 584 585 586 587 588 589 590 591 592 593 594 595 596 597 598 599 600 601 602 603 604 985 986 987 988 989 990 991 992 993
(note 1164 1163 1165 67 [bb 67] NOTE_INSN_BASIC_BLOCK)
(insn 1165 1164 1166 67 (set (reg:SI 0 ax [orig:574 i.84_488 ] [574])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [1 i+0 S4 A64])) "../src/bnsolv.f":138 82 {*movsi_internal}
     (nil))
(insn 1166 1165 1167 67 (set (reg:DI 0 ax [orig:575 _489 ] [575])
        (sign_extend:DI (reg:SI 0 ax [orig:574 i.84_488 ] [574]))) "../src/bnsolv.f":138 145 {*extendsidi2_rex64}
     (nil))
(insn 1167 1166 1168 67 (parallel [
            (set (reg:DI 0 ax [orig:576 _490 ] [576])
                (mult:DI (reg:DI 0 ax [orig:575 _489 ] [575])
                    (reg:DI 38 r9 [orig:685 stride.25_662 ] [685])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":138 329 {*muldi3_1}
     (nil))
(insn 1168 1167 1169 67 (parallel [
            (set (reg:DI 1 dx [orig:577 _491 ] [577])
                (plus:DI (reg:DI 39 r10 [orig:691 offset.26_669 ] [691])
                    (reg:DI 0 ax [orig:576 _490 ] [576])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":138 218 {*adddi_1}
     (nil))
(insn 1169 1168 1170 67 (set (reg:SI 0 ax [985])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -68 [0xffffffffffffffbc])) [1 l+0 S4 A32])) "../src/bnsolv.f":138 82 {*movsi_internal}
     (nil))
(insn 1170 1169 1171 67 (set (reg:DI 0 ax [orig:578 _492 ] [578])
        (sign_extend:DI (reg:SI 0 ax [985]))) "../src/bnsolv.f":138 145 {*extendsidi2_rex64}
     (nil))
(insn 1171 1170 1172 67 (parallel [
            (set (reg:DI 0 ax [orig:579 _493 ] [579])
                (mult:DI (reg:DI 0 ax [orig:578 _492 ] [578])
                    (reg:DI 37 r8 [orig:683 stride.23_658 ] [683])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":138 329 {*muldi3_1}
     (nil))
(insn 1172 1171 1173 67 (parallel [
            (set (reg:DI 1 dx [orig:580 _494 ] [580])
                (plus:DI (reg:DI 1 dx [orig:577 _491 ] [577])
                    (reg:DI 0 ax [orig:579 _493 ] [579])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":138 218 {*adddi_1}
     (nil))
(insn 1173 1172 1174 67 (set (reg:SI 0 ax [986])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -60 [0xffffffffffffffc4])) [1 kpiv+0 S4 A32])) "../src/bnsolv.f":138 82 {*movsi_internal}
     (nil))
(insn 1174 1173 1175 67 (set (reg:DI 0 ax [orig:581 _495 ] [581])
        (sign_extend:DI (reg:SI 0 ax [986]))) "../src/bnsolv.f":138 145 {*extendsidi2_rex64}
     (nil))
(insn 1175 1174 1176 67 (parallel [
            (set (reg:DI 1 dx [orig:582 _496 ] [582])
                (plus:DI (reg:DI 1 dx [orig:580 _494 ] [580])
                    (reg:DI 0 ax [orig:581 _495 ] [581])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":138 218 {*adddi_1}
     (nil))
(insn 1176 1175 1177 67 (set (reg/f:DI 0 ax [987])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -720 [0xfffffffffffffd30])) [10 r+0 S8 A64])) "../src/bnsolv.f":138 81 {*movdi_internal}
     (nil))
(insn 1177 1176 1178 67 (set (reg:SF 22 xmm1 [orig:583 _497 ] [583])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:582 _496 ] [582])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [987])) [3 *r_693(D) S4 A32])) "../src/bnsolv.f":138 127 {*movsf_internal}
     (nil))
(insn 1178 1177 1179 67 (set (reg:SI 0 ax [orig:584 i.85_498 ] [584])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [1 i+0 S4 A64])) "../src/bnsolv.f":138 82 {*movsi_internal}
     (nil))
(insn 1179 1178 1180 67 (set (reg:DI 0 ax [orig:585 _499 ] [585])
        (sign_extend:DI (reg:SI 0 ax [orig:584 i.85_498 ] [584]))) "../src/bnsolv.f":138 145 {*extendsidi2_rex64}
     (nil))
(insn 1180 1179 1181 67 (parallel [
            (set (reg:DI 0 ax [orig:586 _500 ] [586])
                (mult:DI (reg:DI 0 ax [orig:585 _499 ] [585])
                    (reg:DI 38 r9 [orig:685 stride.25_662 ] [685])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":138 329 {*muldi3_1}
     (nil))
(insn 1181 1180 1182 67 (parallel [
            (set (reg:DI 1 dx [orig:587 _501 ] [587])
                (plus:DI (reg:DI 39 r10 [orig:691 offset.26_669 ] [691])
                    (reg:DI 0 ax [orig:586 _500 ] [586])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":138 218 {*adddi_1}
     (nil))
(insn 1182 1181 1183 67 (set (reg:SI 0 ax [988])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -68 [0xffffffffffffffbc])) [1 l+0 S4 A32])) "../src/bnsolv.f":138 82 {*movsi_internal}
     (nil))
(insn 1183 1182 1184 67 (set (reg:DI 0 ax [orig:588 _502 ] [588])
        (sign_extend:DI (reg:SI 0 ax [988]))) "../src/bnsolv.f":138 145 {*extendsidi2_rex64}
     (nil))
(insn 1184 1183 1185 67 (parallel [
            (set (reg:DI 0 ax [orig:589 _503 ] [589])
                (mult:DI (reg:DI 0 ax [orig:588 _502 ] [588])
                    (reg:DI 37 r8 [orig:683 stride.23_658 ] [683])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":138 329 {*muldi3_1}
     (nil))
(insn 1185 1184 1186 67 (parallel [
            (set (reg:DI 1 dx [orig:590 _504 ] [590])
                (plus:DI (reg:DI 1 dx [orig:587 _501 ] [587])
                    (reg:DI 0 ax [orig:589 _503 ] [589])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":138 218 {*adddi_1}
     (nil))
(insn 1186 1185 1187 67 (set (reg:SI 0 ax [989])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [1 k+0 S4 A32])) "../src/bnsolv.f":138 82 {*movsi_internal}
     (nil))
(insn 1187 1186 1188 67 (set (reg:DI 0 ax [orig:591 _505 ] [591])
        (sign_extend:DI (reg:SI 0 ax [989]))) "../src/bnsolv.f":138 145 {*extendsidi2_rex64}
     (nil))
(insn 1188 1187 1189 67 (parallel [
            (set (reg:DI 1 dx [orig:592 _506 ] [592])
                (plus:DI (reg:DI 1 dx [orig:590 _504 ] [590])
                    (reg:DI 0 ax [orig:591 _505 ] [591])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":138 218 {*adddi_1}
     (nil))
(insn 1189 1188 1190 67 (set (reg/f:DI 0 ax [990])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -720 [0xfffffffffffffd30])) [10 r+0 S8 A64])) "../src/bnsolv.f":138 81 {*movdi_internal}
     (nil))
(insn 1190 1189 1191 67 (set (reg:SF 21 xmm0 [orig:593 _507 ] [593])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:592 _506 ] [592])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [990])) [3 *r_693(D) S4 A32])) "../src/bnsolv.f":138 127 {*movsf_internal}
     (nil))
(insn 1191 1190 1192 67 (set (reg:SF 21 xmm0 [orig:594 _508 ] [594])
        (mult:SF (reg:SF 21 xmm0 [orig:593 _507 ] [593])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -192 [0xffffffffffffff40])) [3 atmp+0 S4 A32]))) "../src/bnsolv.f":138 802 {*fop_sf_comm}
     (nil))
(insn 1192 1191 1193 67 (set (reg:SI 0 ax [orig:595 i.86_509 ] [595])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [1 i+0 S4 A64])) "../src/bnsolv.f":138 82 {*movsi_internal}
     (nil))
(insn 1193 1192 1194 67 (set (reg:DI 0 ax [orig:596 _510 ] [596])
        (sign_extend:DI (reg:SI 0 ax [orig:595 i.86_509 ] [595]))) "../src/bnsolv.f":138 145 {*extendsidi2_rex64}
     (nil))
(insn 1194 1193 1195 67 (parallel [
            (set (reg:DI 0 ax [orig:597 _511 ] [597])
                (mult:DI (reg:DI 0 ax [orig:596 _510 ] [596])
                    (reg:DI 38 r9 [orig:685 stride.25_662 ] [685])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":138 329 {*muldi3_1}
     (nil))
(insn 1195 1194 1196 67 (parallel [
            (set (reg:DI 1 dx [orig:598 _512 ] [598])
                (plus:DI (reg:DI 39 r10 [orig:691 offset.26_669 ] [691])
                    (reg:DI 0 ax [orig:597 _511 ] [597])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":138 218 {*adddi_1}
     (nil))
(insn 1196 1195 1197 67 (set (reg:SI 0 ax [991])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -68 [0xffffffffffffffbc])) [1 l+0 S4 A32])) "../src/bnsolv.f":138 82 {*movsi_internal}
     (nil))
(insn 1197 1196 1198 67 (set (reg:DI 0 ax [orig:599 _513 ] [599])
        (sign_extend:DI (reg:SI 0 ax [991]))) "../src/bnsolv.f":138 145 {*extendsidi2_rex64}
     (nil))
(insn 1198 1197 1199 67 (parallel [
            (set (reg:DI 0 ax [orig:600 _514 ] [600])
                (mult:DI (reg:DI 0 ax [orig:599 _513 ] [599])
                    (reg:DI 37 r8 [orig:683 stride.23_658 ] [683])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":138 329 {*muldi3_1}
     (nil))
(insn 1199 1198 1200 67 (parallel [
            (set (reg:DI 1 dx [orig:601 _515 ] [601])
                (plus:DI (reg:DI 1 dx [orig:598 _512 ] [598])
                    (reg:DI 0 ax [orig:600 _514 ] [600])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":138 218 {*adddi_1}
     (nil))
(insn 1200 1199 1201 67 (set (reg:SI 0 ax [992])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -60 [0xffffffffffffffc4])) [1 kpiv+0 S4 A32])) "../src/bnsolv.f":138 82 {*movsi_internal}
     (nil))
(insn 1201 1200 1202 67 (set (reg:DI 0 ax [orig:602 _516 ] [602])
        (sign_extend:DI (reg:SI 0 ax [992]))) "../src/bnsolv.f":138 145 {*extendsidi2_rex64}
     (nil))
(insn 1202 1201 1203 67 (parallel [
            (set (reg:DI 1 dx [orig:603 _517 ] [603])
                (plus:DI (reg:DI 1 dx [orig:601 _515 ] [601])
                    (reg:DI 0 ax [orig:602 _516 ] [602])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":138 218 {*adddi_1}
     (nil))
(insn 1203 1202 1562 67 (set (reg:SF 22 xmm1 [orig:583 _497 ] [583])
        (minus:SF (reg:SF 22 xmm1 [orig:583 _497 ] [583])
            (reg:SF 21 xmm0 [orig:594 _508 ] [594]))) "../src/bnsolv.f":138 805 {*fop_sf_1}
     (nil))
(insn 1562 1203 1204 67 (set (reg:SF 21 xmm0 [orig:604 _518 ] [604])
        (reg:SF 22 xmm1 [orig:583 _497 ] [583])) "../src/bnsolv.f":138 127 {*movsf_internal}
     (nil))
(insn 1204 1562 1205 67 (set (reg/f:DI 0 ax [993])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -720 [0xfffffffffffffd30])) [10 r+0 S8 A64])) "../src/bnsolv.f":138 81 {*movdi_internal}
     (nil))
(insn 1205 1204 1206 67 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:603 _517 ] [603])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [993])) [3 *r_693(D) S4 A32])
        (reg:SF 21 xmm0 [orig:604 _518 ] [604])) "../src/bnsolv.f":138 127 {*movsf_internal}
     (nil))
(insn 1206 1205 1399 67 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -68 [0xffffffffffffffbc])) [1 l+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -68 [0xffffffffffffffbc])) [1 l+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":137 217 {*addsi_1}
     (nil))
(jump_insn 1399 1206 1400 67 (set (pc)
        (label_ref 1207)) "../src/bnsolv.f":137 649 {jump}
     (nil)
 -> 1207)
;;  succ:       66 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 732 736

(barrier 1400 1399 1480)
;; basic block 105, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 67, next block 68, flags: (RTL, MODIFIED)
;;  pred:       66
;; bb 105 artificial_defs: { }
;; bb 105 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 732
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 1480 1400 1479 105 78 (nil) [1 uses])
(note 1479 1480 1481 105 [bb 105] NOTE_INSN_BASIC_BLOCK)
(insn 1481 1479 1210 105 (const_int 0 [0]) "../src/bnsolv.f":139 682 {nop}
     (nil))
;;  succ:       68 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 732

;; basic block 68, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 105, next block 103, flags: (RTL, MODIFIED)
;;  pred:       105 [100.0%]  (FALLTHRU)
;; bb 68 artificial_defs: { }
;; bb 68 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 732
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 1210 1481 1211 68 42 (nil) [0 uses])
(note 1211 1210 1212 68 [bb 68] NOTE_INSN_BASIC_BLOCK)
(insn 1212 1211 1401 68 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -56 [0xffffffffffffffc8])) [1 k+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -56 [0xffffffffffffffc8])) [1 k+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":132 217 {*addsi_1}
     (nil))
(jump_insn 1401 1212 1402 68 (set (pc)
        (label_ref 1213)) "../src/bnsolv.f":132 649 {jump}
     (nil)
 -> 1213)
;;  succ:       61 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691 732

(barrier 1402 1401 1474)
;; basic block 103, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 68, next block 69, flags: (RTL, MODIFIED)
;;  pred:       61
;; bb 103 artificial_defs: { }
;; bb 103 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 1474 1402 1473 103 76 (nil) [1 uses])
(note 1473 1474 1475 103 [bb 103] NOTE_INSN_BASIC_BLOCK)
(insn 1475 1473 1216 103 (const_int 0 [0]) "../src/bnsolv.f":140 682 {nop}
     (nil))
;;  succ:       69 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691

;; basic block 69, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 103, next block 102, flags: (RTL, MODIFIED)
;;  pred:       103 [100.0%]  (FALLTHRU)
;; bb 69 artificial_defs: { }
;; bb 69 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 1216 1475 1217 69 39 (nil) [0 uses])
(note 1217 1216 1218 69 [bb 69] NOTE_INSN_BASIC_BLOCK)
(insn 1218 1217 1403 69 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -60 [0xffffffffffffffc4])) [1 kpiv+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -60 [0xffffffffffffffc4])) [1 kpiv+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":130 217 {*addsi_1}
     (nil))
(jump_insn 1403 1218 1404 69 (set (pc)
        (label_ref 1219)) "../src/bnsolv.f":130 649 {jump}
     (nil)
 -> 1219)
;;  succ:       59 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691

(barrier 1404 1403 1471)
;; basic block 102, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 69, next block 70, flags: (RTL, MODIFIED)
;;  pred:       59
;; bb 102 artificial_defs: { }
;; bb 102 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 1471 1404 1470 102 75 (nil) [1 uses])
(note 1470 1471 1472 102 [bb 102] NOTE_INSN_BASIC_BLOCK)
(insn 1472 1470 1222 102 (const_int 0 [0]) "../src/bnsolv.f":141 682 {nop}
     (nil))
;;  succ:       70 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691

;; basic block 70, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 102, next block 84, flags: (RTL, MODIFIED)
;;  pred:       102 [100.0%]  (FALLTHRU)
;; bb 70 artificial_defs: { }
;; bb 70 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 605 606
(code_label 1222 1472 1223 70 38 (nil) [0 uses])
(note 1223 1222 1224 70 [bb 70] NOTE_INSN_BASIC_BLOCK)
(insn 1224 1223 1225 70 (set (reg:SI 0 ax [orig:605 i.87_519 ] [605])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [1 i+0 S4 A64])) "../src/bnsolv.f":37 82 {*movsi_internal}
     (nil))
(insn 1225 1224 1226 70 (parallel [
            (set (reg:SI 0 ax [orig:606 _520 ] [606])
                (plus:SI (reg:SI 0 ax [orig:605 i.87_519 ] [605])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":37 217 {*addsi_1}
     (nil))
(insn 1226 1225 1405 70 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [1 i+0 S4 A64])
        (reg:SI 0 ax [orig:606 _520 ] [606])) "../src/bnsolv.f":37 82 {*movsi_internal}
     (nil))
(jump_insn 1405 1226 1406 70 (set (pc)
        (label_ref 1227)) "../src/bnsolv.f":37 649 {jump}
     (nil)
 -> 1227)
;;  succ:       3 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 663 665 671 673 675 681 683 685 691

(barrier 1406 1405 1416)
;; basic block 84, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 70, next block 71, flags: (RTL, MODIFIED)
;;  pred:       3
;; bb 84 artificial_defs: { }
;; bb 84 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 673 675 681 683 685 691
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 1416 1406 1415 84 58 (nil) [1 uses])
(note 1415 1416 1417 84 [bb 84] NOTE_INSN_BASIC_BLOCK)
(insn 1417 1415 1230 84 (const_int 0 [0]) "../src/bnsolv.f":142 682 {nop}
     (nil))
;;  succ:       71 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 673 675 681 683 685 691

;; basic block 71, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 84, next block 72, flags: (RTL, MODIFIED)
;;  pred:       84 [100.0%]  (FALLTHRU)
;; bb 71 artificial_defs: { }
;; bb 71 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 673 675 681 683 685 691
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 607 738 994
(code_label 1230 1417 1231 71 2 (nil) [0 uses])
(note 1231 1230 1232 71 [bb 71] NOTE_INSN_BASIC_BLOCK)
(insn 1232 1231 1233 71 (set (reg/f:DI 0 ax [994])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -736 [0xfffffffffffffd20])) [11 n+0 S8 A64])) "../src/bnsolv.f":145 81 {*movdi_internal}
     (nil))
(insn 1233 1232 1234 71 (set (reg:SI 0 ax [orig:607 _521 ] [607])
        (mem:SI (reg/f:DI 0 ax [994]) [1 *n_622(D)+0 S4 A32])) "../src/bnsolv.f":145 82 {*movsi_internal}
     (nil))
(insn 1234 1233 1235 71 (parallel [
            (set (reg:SI 0 ax [orig:738 _810 ] [738])
                (plus:SI (reg:SI 0 ax [orig:607 _521 ] [607])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":145 217 {*addsi_1}
     (nil))
(insn 1235 1234 1348 71 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [1 i+0 S4 A64])
        (reg:SI 0 ax [orig:738 _810 ] [738])) "../src/bnsolv.f":145 82 {*movsi_internal}
     (nil))
;;  succ:       72 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 673 675 681 683 685 691

;; basic block 72, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 71, next block 73, flags: (RTL, MODIFIED)
;;  pred:       71 (FALLTHRU)
;;              82 [100.0%] 
;; bb 72 artificial_defs: { }
;; bb 72 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 673 675 681 683 685 691
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 608 739
(code_label 1348 1235 1236 72 54 (nil) [1 uses])
(note 1236 1348 1237 72 [bb 72] NOTE_INSN_BASIC_BLOCK)
(insn 1237 1236 1238 72 (set (reg:SI 0 ax [orig:608 i.88_522 ] [608])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [1 i+0 S4 A64])) "../src/bnsolv.f":145 82 {*movsi_internal}
     (nil))
(insn 1238 1237 1239 72 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:608 i.88_522 ] [608])
            (const_int 0 [0]))) "../src/bnsolv.f":145 3 {*cmpsi_ccno_1}
     (nil))
(insn 1239 1238 1240 72 (set (reg:QI 0 ax [orig:739 _812 ] [739])
        (le:QI (reg:CCNO 17 flags)
            (const_int 0 [0]))) "../src/bnsolv.f":145 613 {*setcc_qi}
     (nil))
(insn 1240 1239 1241 72 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:739 _812 ] [739])
            (const_int 0 [0]))) "../src/bnsolv.f":145 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 1241 1240 1242 72 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1483)
            (pc))) "../src/bnsolv.f":145 617 {*jcc_1}
     (nil)
 -> 1483)
;;  succ:       106
;;              73 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 673 675 681 683 685 691

;; basic block 73, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 72, next block 74, flags: (RTL, MODIFIED)
;;  pred:       72 (FALLTHRU)
;; bb 73 artificial_defs: { }
;; bb 73 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 673 675 681 683 685 691
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 609 740 995 996
(note 1242 1241 1243 73 [bb 73] NOTE_INSN_BASIC_BLOCK)
(insn 1243 1242 1244 73 (set (reg:SI 0 ax [orig:609 i.89_523 ] [609])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [1 i+0 S4 A64])) "../src/bnsolv.f":146 82 {*movsi_internal}
     (nil))
(insn 1244 1243 1245 73 (parallel [
            (set (reg:SI 0 ax [995])
                (plus:SI (reg:SI 0 ax [orig:609 i.89_523 ] [609])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":146 217 {*addsi_1}
     (nil))
(insn 1245 1244 1246 73 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -196 [0xffffffffffffff3c])) [1 ip+0 S4 A32])
        (reg:SI 0 ax [995])) "../src/bnsolv.f":146 82 {*movsi_internal}
     (nil))
(insn 1246 1245 1247 73 (set (reg/f:DI 0 ax [996])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 16 [0x10])) [11 nrhs+0 S8 A64])) "../src/bnsolv.f":147 81 {*movdi_internal}
     (nil))
(insn 1247 1246 1248 73 (set (reg:SI 0 ax [orig:740 _814 ] [740])
        (mem:SI (reg/f:DI 0 ax [996]) [1 *nrhs_689(D)+0 S4 A32])) "../src/bnsolv.f":147 82 {*movsi_internal}
     (nil))
(insn 1248 1247 1340 73 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -68 [0xffffffffffffffbc])) [1 l+0 S4 A32])
        (const_int 1 [0x1])) "../src/bnsolv.f":147 82 {*movsi_internal}
     (nil))
;;  succ:       74 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 673 675 681 683 685 691 740

;; basic block 74, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 73, next block 75, flags: (RTL, MODIFIED)
;;  pred:       73 (FALLTHRU)
;;              81 [100.0%] 
;; bb 74 artificial_defs: { }
;; bb 74 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 673 675 681 683 685 691 740
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 740
;; lr  def 	 17 [flags] 741
(code_label 1340 1248 1249 74 53 (nil) [1 uses])
(note 1249 1340 1250 74 [bb 74] NOTE_INSN_BASIC_BLOCK)
(insn 1250 1249 1251 74 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -68 [0xffffffffffffffbc])) [1 l+0 S4 A32])
            (reg:SI 0 ax [orig:740 _814 ] [740]))) "../src/bnsolv.f":147 7 {*cmpsi_1}
     (nil))
(insn 1251 1250 1252 74 (set (reg:QI 1 dx [orig:741 _816 ] [741])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "../src/bnsolv.f":147 613 {*setcc_qi}
     (nil))
(insn 1252 1251 1253 74 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 1 dx [orig:741 _816 ] [741])
            (const_int 0 [0]))) "../src/bnsolv.f":147 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 1253 1252 1254 74 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1486)
            (pc))) "../src/bnsolv.f":147 617 {*jcc_1}
     (nil)
 -> 1486)
;;  succ:       107
;;              75 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 673 675 681 683 685 691 740

;; basic block 75, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 74, next block 76, flags: (RTL, MODIFIED)
;;  pred:       74 (FALLTHRU)
;; bb 75 artificial_defs: { }
;; bb 75 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 673 675 681 683 685 691 740
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 742 997
(note 1254 1253 1255 75 [bb 75] NOTE_INSN_BASIC_BLOCK)
(insn 1255 1254 1256 75 (set (reg/f:DI 1 dx [997])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -728 [0xfffffffffffffd28])) [11 nb+0 S8 A64])) "../src/bnsolv.f":148 81 {*movdi_internal}
     (nil))
(insn 1256 1255 1257 75 (set (reg:SI 1 dx [orig:742 _817 ] [742])
        (mem:SI (reg/f:DI 1 dx [997]) [1 *nb_615(D)+0 S4 A32])) "../src/bnsolv.f":148 82 {*movsi_internal}
     (nil))
(insn 1257 1256 1334 75 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [1 k+0 S4 A32])
        (const_int 1 [0x1])) "../src/bnsolv.f":148 82 {*movsi_internal}
     (nil))
;;  succ:       76 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 673 675 681 683 685 691 740 742

;; basic block 76, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 75, next block 77, flags: (RTL, MODIFIED)
;;  pred:       75 (FALLTHRU)
;;              80 [100.0%] 
;; bb 76 artificial_defs: { }
;; bb 76 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 673 675 681 683 685 691 740 742
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 742
;; lr  def 	 17 [flags] 743
(code_label 1334 1257 1258 76 52 (nil) [1 uses])
(note 1258 1334 1259 76 [bb 76] NOTE_INSN_BASIC_BLOCK)
(insn 1259 1258 1260 76 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -56 [0xffffffffffffffc8])) [1 k+0 S4 A32])
            (reg:SI 1 dx [orig:742 _817 ] [742]))) "../src/bnsolv.f":148 7 {*cmpsi_1}
     (nil))
(insn 1260 1259 1261 76 (set (reg:QI 2 cx [orig:743 _819 ] [743])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "../src/bnsolv.f":148 613 {*setcc_qi}
     (nil))
(insn 1261 1260 1262 76 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 2 cx [orig:743 _819 ] [743])
            (const_int 0 [0]))) "../src/bnsolv.f":148 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 1262 1261 1263 76 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1489)
            (pc))) "../src/bnsolv.f":148 617 {*jcc_1}
     (nil)
 -> 1489)
;;  succ:       108
;;              77 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 673 675 681 683 685 691 740 742

;; basic block 77, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 76, next block 78, flags: (RTL, MODIFIED)
;;  pred:       76 (FALLTHRU)
;; bb 77 artificial_defs: { }
;; bb 77 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 673 675 681 683 685 691 740 742
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 744 998
(note 1263 1262 1264 77 [bb 77] NOTE_INSN_BASIC_BLOCK)
(insn 1264 1263 1265 77 (set (reg/f:DI 2 cx [998])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -728 [0xfffffffffffffd28])) [11 nb+0 S8 A64])) "../src/bnsolv.f":149 81 {*movdi_internal}
     (nil))
(insn 1265 1264 1266 77 (set (reg:SI 4 si [orig:744 _820 ] [744])
        (mem:SI (reg/f:DI 2 cx [998]) [1 *nb_615(D)+0 S4 A32])) "../src/bnsolv.f":149 82 {*movsi_internal}
     (nil))
(insn 1266 1265 1328 77 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [1 j+0 S4 A32])
        (const_int 1 [0x1])) "../src/bnsolv.f":149 82 {*movsi_internal}
     (nil))
;;  succ:       78 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 673 675 681 683 685 691 740 742 744

;; basic block 78, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 77, next block 79, flags: (RTL, MODIFIED)
;;  pred:       77 (FALLTHRU)
;;              79 [100.0%] 
;; bb 78 artificial_defs: { }
;; bb 78 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 673 675 681 683 685 691 740 742 744
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 744
;; lr  def 	 17 [flags] 745
(code_label 1328 1266 1267 78 51 (nil) [1 uses])
(note 1267 1328 1268 78 [bb 78] NOTE_INSN_BASIC_BLOCK)
(insn 1268 1267 1269 78 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -52 [0xffffffffffffffcc])) [1 j+0 S4 A32])
            (reg:SI 4 si [orig:744 _820 ] [744]))) "../src/bnsolv.f":149 7 {*cmpsi_1}
     (nil))
(insn 1269 1268 1270 78 (set (reg:QI 2 cx [orig:745 _822 ] [745])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "../src/bnsolv.f":149 613 {*setcc_qi}
     (nil))
(insn 1270 1269 1271 78 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 2 cx [orig:745 _822 ] [745])
            (const_int 0 [0]))) "../src/bnsolv.f":149 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 1271 1270 1272 78 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1492)
            (pc))) "../src/bnsolv.f":149 617 {*jcc_1}
     (nil)
 -> 1492)
;;  succ:       109
;;              79 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 673 675 681 683 685 691 740 742 744

;; basic block 79, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 78, next block 109, flags: (RTL, MODIFIED)
;;  pred:       78 (FALLTHRU)
;; bb 79 artificial_defs: { }
;; bb 79 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 673 675 681 683 685 691 740 742 744
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 673 675 681 683 685 691
;; lr  def 	 17 [flags] 610 611 612 613 614 615 616 617 618 619 620 621 622 623 624 625 626 627 628 629 630 631 632 633 634 635 636 637 638 639 640 641 642 643 644 645 646 647 648 649 999 1000 1001 1002 1003 1004 1005 1006 1007 1008 1009 1010 1011
(note 1272 1271 1273 79 [bb 79] NOTE_INSN_BASIC_BLOCK)
(insn 1273 1272 1274 79 (set (reg:SI 2 cx [orig:610 i.90_524 ] [610])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [1 i+0 S4 A64])) "../src/bnsolv.f":150 82 {*movsi_internal}
     (nil))
(insn 1274 1273 1275 79 (set (reg:DI 2 cx [orig:611 _525 ] [611])
        (sign_extend:DI (reg:SI 2 cx [orig:610 i.90_524 ] [610]))) "../src/bnsolv.f":150 145 {*extendsidi2_rex64}
     (nil))
(insn 1275 1274 1276 79 (parallel [
            (set (reg:DI 2 cx [orig:612 _526 ] [612])
                (mult:DI (reg:DI 2 cx [orig:611 _525 ] [611])
                    (reg:DI 38 r9 [orig:685 stride.25_662 ] [685])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":150 329 {*muldi3_1}
     (nil))
(insn 1276 1275 1277 79 (parallel [
            (set (reg:DI 5 di [orig:613 _527 ] [613])
                (plus:DI (reg:DI 39 r10 [orig:691 offset.26_669 ] [691])
                    (reg:DI 2 cx [orig:612 _526 ] [612])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":150 218 {*adddi_1}
     (nil))
(insn 1277 1276 1278 79 (set (reg:SI 2 cx [999])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -68 [0xffffffffffffffbc])) [1 l+0 S4 A32])) "../src/bnsolv.f":150 82 {*movsi_internal}
     (nil))
(insn 1278 1277 1279 79 (set (reg:DI 2 cx [orig:614 _528 ] [614])
        (sign_extend:DI (reg:SI 2 cx [999]))) "../src/bnsolv.f":150 145 {*extendsidi2_rex64}
     (nil))
(insn 1279 1278 1280 79 (parallel [
            (set (reg:DI 2 cx [orig:615 _529 ] [615])
                (mult:DI (reg:DI 2 cx [orig:614 _528 ] [614])
                    (reg:DI 37 r8 [orig:683 stride.23_658 ] [683])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":150 329 {*muldi3_1}
     (nil))
(insn 1280 1279 1281 79 (parallel [
            (set (reg:DI 5 di [orig:616 _530 ] [616])
                (plus:DI (reg:DI 5 di [orig:613 _527 ] [613])
                    (reg:DI 2 cx [orig:615 _529 ] [615])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":150 218 {*adddi_1}
     (nil))
(insn 1281 1280 1282 79 (set (reg:SI 2 cx [1000])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [1 k+0 S4 A32])) "../src/bnsolv.f":150 82 {*movsi_internal}
     (nil))
(insn 1282 1281 1283 79 (set (reg:DI 2 cx [orig:617 _531 ] [617])
        (sign_extend:DI (reg:SI 2 cx [1000]))) "../src/bnsolv.f":150 145 {*extendsidi2_rex64}
     (nil))
(insn 1283 1282 1284 79 (parallel [
            (set (reg:DI 5 di [orig:618 _532 ] [618])
                (plus:DI (reg:DI 5 di [orig:616 _530 ] [616])
                    (reg:DI 2 cx [orig:617 _531 ] [617])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":150 218 {*adddi_1}
     (nil))
(insn 1284 1283 1285 79 (set (reg/f:DI 2 cx [1001])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -720 [0xfffffffffffffd30])) [10 r+0 S8 A64])) "../src/bnsolv.f":150 81 {*movdi_internal}
     (nil))
(insn 1285 1284 1286 79 (set (reg:SF 22 xmm1 [orig:619 _533 ] [619])
        (mem:SF (plus:DI (mult:DI (reg:DI 5 di [orig:618 _532 ] [618])
                    (const_int 4 [0x4]))
                (reg/f:DI 2 cx [1001])) [3 *r_693(D) S4 A32])) "../src/bnsolv.f":150 127 {*movsf_internal}
     (nil))
(insn 1286 1285 1287 79 (set (reg:SI 2 cx [1002])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -196 [0xffffffffffffff3c])) [1 ip+0 S4 A32])) "../src/bnsolv.f":150 82 {*movsi_internal}
     (nil))
(insn 1287 1286 1288 79 (set (reg:DI 2 cx [orig:620 _534 ] [620])
        (sign_extend:DI (reg:SI 2 cx [1002]))) "../src/bnsolv.f":150 145 {*extendsidi2_rex64}
     (nil))
(insn 1288 1287 1289 79 (parallel [
            (set (reg:DI 2 cx [orig:621 _535 ] [621])
                (mult:DI (reg:DI 2 cx [orig:620 _534 ] [620])
                    (reg:DI 38 r9 [orig:685 stride.25_662 ] [685])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":150 329 {*muldi3_1}
     (nil))
(insn 1289 1288 1290 79 (parallel [
            (set (reg:DI 5 di [orig:622 _536 ] [622])
                (plus:DI (reg:DI 39 r10 [orig:691 offset.26_669 ] [691])
                    (reg:DI 2 cx [orig:621 _535 ] [621])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":150 218 {*adddi_1}
     (nil))
(insn 1290 1289 1291 79 (set (reg:SI 2 cx [1003])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -68 [0xffffffffffffffbc])) [1 l+0 S4 A32])) "../src/bnsolv.f":150 82 {*movsi_internal}
     (nil))
(insn 1291 1290 1292 79 (set (reg:DI 2 cx [orig:623 _537 ] [623])
        (sign_extend:DI (reg:SI 2 cx [1003]))) "../src/bnsolv.f":150 145 {*extendsidi2_rex64}
     (nil))
(insn 1292 1291 1293 79 (parallel [
            (set (reg:DI 2 cx [orig:624 _538 ] [624])
                (mult:DI (reg:DI 2 cx [orig:623 _537 ] [623])
                    (reg:DI 37 r8 [orig:683 stride.23_658 ] [683])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":150 329 {*muldi3_1}
     (nil))
(insn 1293 1292 1294 79 (parallel [
            (set (reg:DI 5 di [orig:625 _539 ] [625])
                (plus:DI (reg:DI 5 di [orig:622 _536 ] [622])
                    (reg:DI 2 cx [orig:624 _538 ] [624])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":150 218 {*adddi_1}
     (nil))
(insn 1294 1293 1295 79 (set (reg:SI 2 cx [1004])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [1 j+0 S4 A32])) "../src/bnsolv.f":150 82 {*movsi_internal}
     (nil))
(insn 1295 1294 1296 79 (set (reg:DI 2 cx [orig:626 _540 ] [626])
        (sign_extend:DI (reg:SI 2 cx [1004]))) "../src/bnsolv.f":150 145 {*extendsidi2_rex64}
     (nil))
(insn 1296 1295 1297 79 (parallel [
            (set (reg:DI 5 di [orig:627 _541 ] [627])
                (plus:DI (reg:DI 5 di [orig:625 _539 ] [625])
                    (reg:DI 2 cx [orig:626 _540 ] [626])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":150 218 {*adddi_1}
     (nil))
(insn 1297 1296 1298 79 (set (reg/f:DI 2 cx [1005])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -720 [0xfffffffffffffd30])) [10 r+0 S8 A64])) "../src/bnsolv.f":150 81 {*movdi_internal}
     (nil))
(insn 1298 1297 1299 79 (set (reg:SF 23 xmm2 [orig:628 _542 ] [628])
        (mem:SF (plus:DI (mult:DI (reg:DI 5 di [orig:627 _541 ] [627])
                    (const_int 4 [0x4]))
                (reg/f:DI 2 cx [1005])) [3 *r_693(D) S4 A32])) "../src/bnsolv.f":150 127 {*movsf_internal}
     (nil))
(insn 1299 1298 1300 79 (set (reg:SI 2 cx [orig:629 i.91_543 ] [629])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [1 i+0 S4 A64])) "../src/bnsolv.f":150 82 {*movsi_internal}
     (nil))
(insn 1300 1299 1301 79 (set (reg:DI 2 cx [orig:630 _544 ] [630])
        (sign_extend:DI (reg:SI 2 cx [orig:629 i.91_543 ] [629]))) "../src/bnsolv.f":150 145 {*extendsidi2_rex64}
     (nil))
(insn 1301 1300 1302 79 (parallel [
            (set (reg:DI 2 cx [orig:631 _545 ] [631])
                (mult:DI (reg:DI 2 cx [orig:630 _544 ] [630])
                    (reg:DI 42 r13 [orig:675 stride.18_648 ] [675])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":150 329 {*muldi3_1}
     (nil))
(insn 1302 1301 1303 79 (parallel [
            (set (reg:DI 5 di [orig:632 _546 ] [632])
                (plus:DI (reg:DI 43 r14 [orig:681 offset.19_655 ] [681])
                    (reg:DI 2 cx [orig:631 _545 ] [631])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":150 218 {*adddi_1}
     (nil))
(insn 1303 1302 1304 79 (set (reg:SI 2 cx [1006])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [1 j+0 S4 A32])) "../src/bnsolv.f":150 82 {*movsi_internal}
     (nil))
(insn 1304 1303 1305 79 (set (reg:DI 2 cx [orig:633 _547 ] [633])
        (sign_extend:DI (reg:SI 2 cx [1006]))) "../src/bnsolv.f":150 145 {*extendsidi2_rex64}
     (nil))
(insn 1305 1304 1306 79 (parallel [
            (set (reg:DI 2 cx [orig:634 _548 ] [634])
                (mult:DI (reg:DI 2 cx [orig:633 _547 ] [633])
                    (reg:DI 41 r12 [orig:673 stride.16_645 ] [673])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":150 329 {*muldi3_1}
     (nil))
(insn 1306 1305 1307 79 (parallel [
            (set (reg:DI 5 di [orig:635 _549 ] [635])
                (plus:DI (reg:DI 5 di [orig:632 _546 ] [632])
                    (reg:DI 2 cx [orig:634 _548 ] [634])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":150 218 {*adddi_1}
     (nil))
(insn 1307 1306 1308 79 (set (reg:SI 2 cx [1007])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [1 k+0 S4 A32])) "../src/bnsolv.f":150 82 {*movsi_internal}
     (nil))
(insn 1308 1307 1309 79 (set (reg:DI 2 cx [orig:636 _550 ] [636])
        (sign_extend:DI (reg:SI 2 cx [1007]))) "../src/bnsolv.f":150 145 {*extendsidi2_rex64}
     (nil))
(insn 1309 1308 1310 79 (parallel [
            (set (reg:DI 5 di [orig:637 _551 ] [637])
                (plus:DI (reg:DI 5 di [orig:635 _549 ] [635])
                    (reg:DI 2 cx [orig:636 _550 ] [636])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":150 218 {*adddi_1}
     (nil))
(insn 1310 1309 1311 79 (set (reg/f:DI 2 cx [1008])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -712 [0xfffffffffffffd38])) [10 c+0 S8 A64])) "../src/bnsolv.f":150 81 {*movdi_internal}
     (nil))
(insn 1311 1310 1312 79 (set (reg:SF 21 xmm0 [orig:638 _552 ] [638])
        (mem:SF (plus:DI (mult:DI (reg:DI 5 di [orig:637 _551 ] [637])
                    (const_int 4 [0x4]))
                (reg/f:DI 2 cx [1008])) [3 *c_686(D) S4 A32])) "../src/bnsolv.f":150 127 {*movsf_internal}
     (nil))
(insn 1312 1311 1313 79 (set (reg:SF 21 xmm0 [orig:639 _553 ] [639])
        (mult:SF (reg:SF 21 xmm0 [orig:638 _552 ] [638])
            (reg:SF 23 xmm2 [orig:628 _542 ] [628]))) "../src/bnsolv.f":150 802 {*fop_sf_comm}
     (nil))
(insn 1313 1312 1314 79 (set (reg:SI 2 cx [orig:640 i.92_554 ] [640])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [1 i+0 S4 A64])) "../src/bnsolv.f":150 82 {*movsi_internal}
     (nil))
(insn 1314 1313 1315 79 (set (reg:DI 2 cx [orig:641 _555 ] [641])
        (sign_extend:DI (reg:SI 2 cx [orig:640 i.92_554 ] [640]))) "../src/bnsolv.f":150 145 {*extendsidi2_rex64}
     (nil))
(insn 1315 1314 1316 79 (parallel [
            (set (reg:DI 2 cx [orig:642 _556 ] [642])
                (mult:DI (reg:DI 2 cx [orig:641 _555 ] [641])
                    (reg:DI 38 r9 [orig:685 stride.25_662 ] [685])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":150 329 {*muldi3_1}
     (nil))
(insn 1316 1315 1317 79 (parallel [
            (set (reg:DI 5 di [orig:643 _557 ] [643])
                (plus:DI (reg:DI 39 r10 [orig:691 offset.26_669 ] [691])
                    (reg:DI 2 cx [orig:642 _556 ] [642])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":150 218 {*adddi_1}
     (nil))
(insn 1317 1316 1318 79 (set (reg:SI 2 cx [1009])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -68 [0xffffffffffffffbc])) [1 l+0 S4 A32])) "../src/bnsolv.f":150 82 {*movsi_internal}
     (nil))
(insn 1318 1317 1319 79 (set (reg:DI 2 cx [orig:644 _558 ] [644])
        (sign_extend:DI (reg:SI 2 cx [1009]))) "../src/bnsolv.f":150 145 {*extendsidi2_rex64}
     (nil))
(insn 1319 1318 1320 79 (parallel [
            (set (reg:DI 2 cx [orig:645 _559 ] [645])
                (mult:DI (reg:DI 2 cx [orig:644 _558 ] [644])
                    (reg:DI 37 r8 [orig:683 stride.23_658 ] [683])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":150 329 {*muldi3_1}
     (nil))
(insn 1320 1319 1321 79 (parallel [
            (set (reg:DI 5 di [orig:646 _560 ] [646])
                (plus:DI (reg:DI 5 di [orig:643 _557 ] [643])
                    (reg:DI 2 cx [orig:645 _559 ] [645])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":150 218 {*adddi_1}
     (nil))
(insn 1321 1320 1322 79 (set (reg:SI 2 cx [1010])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [1 k+0 S4 A32])) "../src/bnsolv.f":150 82 {*movsi_internal}
     (nil))
(insn 1322 1321 1323 79 (set (reg:DI 2 cx [orig:647 _561 ] [647])
        (sign_extend:DI (reg:SI 2 cx [1010]))) "../src/bnsolv.f":150 145 {*extendsidi2_rex64}
     (nil))
(insn 1323 1322 1324 79 (parallel [
            (set (reg:DI 5 di [orig:648 _562 ] [648])
                (plus:DI (reg:DI 5 di [orig:646 _560 ] [646])
                    (reg:DI 2 cx [orig:647 _561 ] [647])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":150 218 {*adddi_1}
     (nil))
(insn 1324 1323 1564 79 (set (reg:SF 22 xmm1 [orig:619 _533 ] [619])
        (minus:SF (reg:SF 22 xmm1 [orig:619 _533 ] [619])
            (reg:SF 21 xmm0 [orig:639 _553 ] [639]))) "../src/bnsolv.f":150 805 {*fop_sf_1}
     (nil))
(insn 1564 1324 1325 79 (set (reg:SF 21 xmm0 [orig:649 _563 ] [649])
        (reg:SF 22 xmm1 [orig:619 _533 ] [619])) "../src/bnsolv.f":150 127 {*movsf_internal}
     (nil))
(insn 1325 1564 1326 79 (set (reg/f:DI 2 cx [1011])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -720 [0xfffffffffffffd30])) [10 r+0 S8 A64])) "../src/bnsolv.f":150 81 {*movdi_internal}
     (nil))
(insn 1326 1325 1327 79 (set (mem:SF (plus:DI (mult:DI (reg:DI 5 di [orig:648 _562 ] [648])
                    (const_int 4 [0x4]))
                (reg/f:DI 2 cx [1011])) [3 *r_693(D) S4 A32])
        (reg:SF 21 xmm0 [orig:649 _563 ] [649])) "../src/bnsolv.f":150 127 {*movsf_internal}
     (nil))
(insn 1327 1326 1407 79 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -52 [0xffffffffffffffcc])) [1 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -52 [0xffffffffffffffcc])) [1 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":149 217 {*addsi_1}
     (nil))
(jump_insn 1407 1327 1408 79 (set (pc)
        (label_ref 1328)) "../src/bnsolv.f":149 649 {jump}
     (nil)
 -> 1328)
;;  succ:       78 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 673 675 681 683 685 691 740 742 744

(barrier 1408 1407 1492)
;; basic block 109, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 79, next block 80, flags: (RTL, MODIFIED)
;;  pred:       78
;; bb 109 artificial_defs: { }
;; bb 109 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 673 675 681 683 685 691 740 742
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 1492 1408 1491 109 82 (nil) [1 uses])
(note 1491 1492 1493 109 [bb 109] NOTE_INSN_BASIC_BLOCK)
(insn 1493 1491 1331 109 (const_int 0 [0]) "../src/bnsolv.f":151 682 {nop}
     (nil))
;;  succ:       80 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 673 675 681 683 685 691 740 742

;; basic block 80, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 109, next block 108, flags: (RTL, MODIFIED)
;;  pred:       109 [100.0%]  (FALLTHRU)
;; bb 80 artificial_defs: { }
;; bb 80 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 673 675 681 683 685 691 740 742
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 1331 1493 1332 80 50 (nil) [0 uses])
(note 1332 1331 1333 80 [bb 80] NOTE_INSN_BASIC_BLOCK)
(insn 1333 1332 1409 80 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -56 [0xffffffffffffffc8])) [1 k+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -56 [0xffffffffffffffc8])) [1 k+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":148 217 {*addsi_1}
     (nil))
(jump_insn 1409 1333 1410 80 (set (pc)
        (label_ref 1334)) "../src/bnsolv.f":148 649 {jump}
     (nil)
 -> 1334)
;;  succ:       76 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 673 675 681 683 685 691 740 742

(barrier 1410 1409 1489)
;; basic block 108, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 80, next block 81, flags: (RTL, MODIFIED)
;;  pred:       76
;; bb 108 artificial_defs: { }
;; bb 108 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 673 675 681 683 685 691 740
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 1489 1410 1488 108 81 (nil) [1 uses])
(note 1488 1489 1490 108 [bb 108] NOTE_INSN_BASIC_BLOCK)
(insn 1490 1488 1337 108 (const_int 0 [0]) "../src/bnsolv.f":152 682 {nop}
     (nil))
;;  succ:       81 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 673 675 681 683 685 691 740

;; basic block 81, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 108, next block 107, flags: (RTL, MODIFIED)
;;  pred:       108 [100.0%]  (FALLTHRU)
;; bb 81 artificial_defs: { }
;; bb 81 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 673 675 681 683 685 691 740
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 1337 1490 1338 81 49 (nil) [0 uses])
(note 1338 1337 1339 81 [bb 81] NOTE_INSN_BASIC_BLOCK)
(insn 1339 1338 1411 81 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -68 [0xffffffffffffffbc])) [1 l+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -68 [0xffffffffffffffbc])) [1 l+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":147 217 {*addsi_1}
     (nil))
(jump_insn 1411 1339 1412 81 (set (pc)
        (label_ref 1340)) "../src/bnsolv.f":147 649 {jump}
     (nil)
 -> 1340)
;;  succ:       74 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 673 675 681 683 685 691 740

(barrier 1412 1411 1486)
;; basic block 107, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 81, next block 82, flags: (RTL, MODIFIED)
;;  pred:       74
;; bb 107 artificial_defs: { }
;; bb 107 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 673 675 681 683 685 691
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 1486 1412 1485 107 80 (nil) [1 uses])
(note 1485 1486 1487 107 [bb 107] NOTE_INSN_BASIC_BLOCK)
(insn 1487 1485 1343 107 (const_int 0 [0]) "../src/bnsolv.f":153 682 {nop}
     (nil))
;;  succ:       82 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 673 675 681 683 685 691

;; basic block 82, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 107, next block 106, flags: (RTL, MODIFIED)
;;  pred:       107 [100.0%]  (FALLTHRU)
;; bb 82 artificial_defs: { }
;; bb 82 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 673 675 681 683 685 691
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 650 651
(code_label 1343 1487 1344 82 48 (nil) [0 uses])
(note 1344 1343 1345 82 [bb 82] NOTE_INSN_BASIC_BLOCK)
(insn 1345 1344 1346 82 (set (reg:SI 0 ax [orig:650 i.93_564 ] [650])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [1 i+0 S4 A64])) "../src/bnsolv.f":145 82 {*movsi_internal}
     (nil))
(insn 1346 1345 1347 82 (parallel [
            (set (reg:SI 0 ax [orig:651 _565 ] [651])
                (plus:SI (reg:SI 0 ax [orig:650 i.93_564 ] [650])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/bnsolv.f":145 217 {*addsi_1}
     (nil))
(insn 1347 1346 1413 82 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [1 i+0 S4 A64])
        (reg:SI 0 ax [orig:651 _565 ] [651])) "../src/bnsolv.f":145 82 {*movsi_internal}
     (nil))
(jump_insn 1413 1347 1414 82 (set (pc)
        (label_ref 1348)) "../src/bnsolv.f":145 649 {jump}
     (nil)
 -> 1348)
;;  succ:       72 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 673 675 681 683 685 691

(barrier 1414 1413 1483)
;; basic block 106, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 82, next block 83, flags: (RTL, MODIFIED)
;;  pred:       72
;; bb 106 artificial_defs: { }
;; bb 106 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 1483 1414 1482 106 79 (nil) [1 uses])
(note 1482 1483 1484 106 [bb 106] NOTE_INSN_BASIC_BLOCK)
(insn 1484 1482 1351 106 (const_int 0 [0]) "../src/bnsolv.f":154 682 {nop}
     (nil))
;;  succ:       83 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 83, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 106, next block 1, flags: (RTL, MODIFIED)
;;  pred:       106 [100.0%]  (FALLTHRU)
;; bb 83 artificial_defs: { }
;; bb 83 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 1351 1484 1352 83 47 (nil) [0 uses])
(note 1352 1351 1366 83 [bb 83] NOTE_INSN_BASIC_BLOCK)
(insn 1366 1352 1494 83 (const_int 0 [0]) "../src/bnsolv.f":156 682 {nop}
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(note 1494 1366 0 NOTE_INSN_DELETED)
