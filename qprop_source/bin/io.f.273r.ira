
;; Function getint (getint_, funcdef_no=0, decl_uid=3500, cgraph_uid=0, symbol_order=0)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 36 n_edges 51 count 38 (  1.1)
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 34 22 23 24 25 26 27 28 29 35 30 31 32 33
;;
;; Loop 2
;;  header 27, latch 29
;;  depth 1, outer 0
;;  nodes: 27 29 28
;;
;; Loop 1
;;  header 12, latch 21
;;  depth 1, outer 0
;;  nodes: 12 21 20 19 14 16 15 13 17 18
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 8 11 }
;; 8 succs { 9 11 }
;; 9 succs { 10 11 }
;; 10 succs { 11 }
;; 11 succs { 12 }
;; 12 succs { 34 13 }
;; 13 succs { 14 15 }
;; 14 succs { 20 }
;; 15 succs { 16 17 }
;; 16 succs { 20 }
;; 17 succs { 18 19 }
;; 18 succs { 19 }
;; 19 succs { 20 }
;; 20 succs { 34 21 }
;; 21 succs { 12 }
;; 34 succs { 22 }
;; 22 succs { 23 26 }
;; 23 succs { 24 25 }
;; 24 succs { 25 }
;; 25 succs { 26 }
;; 26 succs { 27 }
;; 27 succs { 35 28 }
;; 28 succs { 35 29 }
;; 29 succs { 27 }
;; 35 succs { 30 }
;; 30 succs { 31 32 }
;; 31 succs { 33 }
;; 32 succs { 33 }
;; 33 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 40.
verify found no changes in insn with uid = 58.
verify found no changes in insn with uid = 81.
verify found no changes in insn with uid = 96.
verify found no changes in insn with uid = 100.
verify found no changes in insn with uid = 107.
verify found no changes in insn with uid = 145.
verify found no changes in insn with uid = 180.
verify found no changes in insn with uid = 202.
verify found no changes in insn with uid = 286.
verify found no changes in insn with uid = 313.
verify found no changes in insn with uid = 322.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r226: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r226,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r225: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r225,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r224: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r224,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r223: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r223,l0) best DIREG, allocno GENERAL_REGS
    r222: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r222,l0) best DIREG, allocno GENERAL_REGS
    r221: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r221,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r220: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r220,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r219: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r219,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r218: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r218,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r217: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a19 (r217,l0) best DIREG, allocno GENERAL_REGS
    r216: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r216,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r215: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r215,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r214: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r214,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r213: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r213,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r212: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r212,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r211: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r211,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r210: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r210,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r209: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a31 (r209,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r208: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a34 (r208,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r207: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a35 (r207,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r206: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a38 (r206,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r205: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a39 (r205,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r204: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a40 (r204,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r203: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a41 (r203,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r202: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a43 (r202,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r201: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a47 (r201,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r200: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a50 (r200,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r199: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a51 (r199,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r198: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a54 (r198,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r197: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a53 (r197,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r196: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a52 (r196,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r195: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a55 (r195,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r194: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a57 (r194,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r193: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a61 (r193,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r192: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a64 (r192,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r191: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a65 (r191,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r190: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a68 (r190,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r189: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a67 (r189,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r188: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a66 (r188,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r187: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a70 (r187,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r186: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a71 (r186,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r185: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a72 (r185,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r184: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a76 (r184,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r183: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a85 (r183,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r182: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a86 (r182,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r180: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a88 (r180,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r179: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a89 (r179,l0) best AREG, allocno GENERAL_REGS
    r178: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a90 (r178,l0) best SIREG, allocno GENERAL_REGS
    r177: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a95 (r177,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r176: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a102 (r176,l0) best DIREG, allocno GENERAL_REGS
    r175: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a106 (r175,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r174: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a108 (r174,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r172: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a111 (r172,l0) best CREG, allocno GENERAL_REGS
    r171: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a113 (r171,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r170: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a114 (r170,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r169: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a116 (r169,l0) best AREG, allocno GENERAL_REGS
    r168: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a118 (r168,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r167: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a122 (r167,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r166: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a124 (r166,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r165: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a123 (r165,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r161: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a128 (r161,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r160: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r160,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r159: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r159,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r158: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a69 (r158,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r157: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r157,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r156: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a80 (r156,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r155: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a77 (r155,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r153: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a87 (r153,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r152: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a99 (r152,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r151: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a96 (r151,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r149: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a91 (r149,l0) best DIREG, allocno GENERAL_REGS
    r148: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a115 (r148,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r145: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r145,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r144: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r144,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a125 (r143,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r142,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r141,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r140: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a7 (r140,l0) best SIREG, allocno GENERAL_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r139,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r138,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r137,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r136,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r135,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r134,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r133,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r132: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a33 (r132,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r131: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a36 (r131,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r130: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a37 (r130,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r129: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a42 (r129,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r128: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a44 (r128,l0) best AREG, allocno GENERAL_REGS
    r127: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a45 (r127,l0) best DIREG, allocno GENERAL_REGS
    r126: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a48 (r126,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r125: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a49 (r125,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r124: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a46 (r124,l0) best SIREG, allocno GENERAL_REGS
    r123: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a56 (r123,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r122: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a58 (r122,l0) best AREG, allocno GENERAL_REGS
    r121: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a59 (r121,l0) best DIREG, allocno GENERAL_REGS
    r120: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a62 (r120,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a63 (r119,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r118: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a60 (r118,l0) best SIREG, allocno GENERAL_REGS
    r117: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a73 (r117,l0) best DIREG, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a75 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a74 (r115,l0) best DREG, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a78 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a79 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r112: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a81 (r112,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a82 (r111,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a83 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a84 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a92 (r107,l0) best DIREG, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a94 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a93 (r105,l0) best DREG, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a97 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a98 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a100 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a101 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a103 (r100,l0) best DREG, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a104 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a105 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a107 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a109 (r95,l0) best DIREG, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a112 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a110 (r93,l0) best DREG, allocno GENERAL_REGS
    r92: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a117 (r92,l0) best DIREG, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a119 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a120 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a121 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a126 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a127 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r226,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a1(r225,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a2(r224,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a3(r142,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a4(r141,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a5(r223,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a6(r222,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a7(r140,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a8(r221,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a9(r220,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a10(r139,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a11(r138,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a12(r219,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a13(r159,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a14(r160,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7
  a15(r137,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11
  a16(r136,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6
  a17(r135,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a18(r218,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a19(r217,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a20(r134,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:8
  a21(r216,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a22(r215,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:8
  a23(r214,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a24(r213,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a25(r145,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:32 NO_REX_SSE_REGS:32 SSE_REGS:32 MMX_REGS:50 INT_SSE_REGS:36 ALL_REGS:624 MEM:16
  a26(r212,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a27(r157,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a28(r211,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a29(r210,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a30(r144,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:32 NO_REX_SSE_REGS:32 SSE_REGS:32 MMX_REGS:50 INT_SSE_REGS:36 ALL_REGS:624 MEM:15
  a31(r209,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a32(r133,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a33(r132,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a34(r208,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a35(r207,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a36(r131,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a37(r130,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a38(r206,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a39(r205,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a40(r204,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a41(r203,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a42(r129,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a43(r202,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a44(r128,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a45(r127,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a46(r124,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a47(r201,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a48(r126,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:39 INT_SSE_REGS:27 ALL_REGS:624 MEM:10
  a49(r125,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a50(r200,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a51(r199,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a52(r196,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a53(r197,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a54(r198,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a55(r195,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a56(r123,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a57(r194,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a58(r122,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a59(r121,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a60(r118,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a61(r193,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a62(r120,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:39 INT_SSE_REGS:27 ALL_REGS:624 MEM:10
  a63(r119,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a64(r192,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a65(r191,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a66(r188,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a67(r189,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a68(r190,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a69(r158,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7
  a70(r187,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a71(r186,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a72(r185,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a73(r117,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a74(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a75(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a76(r184,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a77(r155,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:40 NO_REX_SSE_REGS:40 SSE_REGS:40 MMX_REGS:65 INT_SSE_REGS:45 ALL_REGS:1040 MEM:16
  a78(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a79(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a80(r156,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:40 NO_REX_SSE_REGS:40 SSE_REGS:40 MMX_REGS:65 INT_SSE_REGS:45 ALL_REGS:1040 MEM:17
  a81(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a82(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a83(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a84(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a85(r183,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a86(r182,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a87(r153,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:32 NO_REX_SSE_REGS:32 SSE_REGS:32 MMX_REGS:52 INT_SSE_REGS:36 ALL_REGS:832 MEM:14
  a88(r180,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a89(r179,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a90(r178,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a91(r149,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:32 NO_REX_SSE_REGS:32 SSE_REGS:32 MMX_REGS:47 INT_SSE_REGS:35 ALL_REGS:724 MEM:10
  a92(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a93(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a94(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a95(r177,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a96(r151,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:40 NO_REX_SSE_REGS:40 SSE_REGS:40 MMX_REGS:65 INT_SSE_REGS:45 ALL_REGS:1040 MEM:15
  a97(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a98(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a99(r152,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:40 NO_REX_SSE_REGS:40 SSE_REGS:40 MMX_REGS:65 INT_SSE_REGS:45 ALL_REGS:1040 MEM:17
  a100(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a101(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a102(r176,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a103(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a104(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:39 INT_SSE_REGS:27 ALL_REGS:624 MEM:10
  a105(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:39 INT_SSE_REGS:27 ALL_REGS:624 MEM:10
  a106(r175,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a107(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a108(r174,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a109(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a110(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a111(r172,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a112(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a113(r171,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a114(r170,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a115(r148,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a116(r169,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a117(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a118(r168,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a119(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:39 INT_SSE_REGS:27 ALL_REGS:624 MEM:11
  a120(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a121(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a122(r167,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a123(r165,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a124(r166,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a125(r143,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:32 NO_REX_SSE_REGS:32 SSE_REGS:32 MMX_REGS:46 INT_SSE_REGS:35 ALL_REGS:620 MEM:12
  a126(r88,l0) costs: AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:2
  a127(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a128(r161,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7

   Insn 348(l0): point = 1
   Insn 340(l0): point = 3
   Insn 339(l0): point = 5
   Insn 358(l0): point = 8
   Insn 334(l0): point = 10
   Insn 333(l0): point = 12
   Insn 332(l0): point = 14
   Insn 331(l0): point = 16
   Insn 326(l0): point = 19
   Insn 325(l0): point = 21
   Insn 324(l0): point = 23
   Insn 323(l0): point = 25
   Insn 322(l0): point = 27
   Insn 321(l0): point = 29
   Insn 320(l0): point = 31
   Insn 365(l0): point = 34
   Insn 296(l0): point = 37
   Insn 295(l0): point = 39
   Insn 294(l0): point = 41
   Insn 293(l0): point = 43
   Insn 292(l0): point = 45
   Insn 291(l0): point = 47
   Insn 355(l0): point = 50
   Insn 314(l0): point = 52
   Insn 313(l0): point = 54
   Insn 312(l0): point = 56
   Insn 311(l0): point = 58
   Insn 310(l0): point = 60
   Insn 309(l0): point = 62
   Insn 308(l0): point = 64
   Insn 307(l0): point = 66
   Insn 306(l0): point = 68
   Insn 305(l0): point = 70
   Insn 304(l0): point = 72
   Insn 303(l0): point = 74
   Insn 301(l0): point = 77
   Insn 300(l0): point = 79
   Insn 299(l0): point = 81
   Insn 298(l0): point = 83
   Insn 289(l0): point = 86
   Insn 288(l0): point = 88
   Insn 287(l0): point = 90
   Insn 286(l0): point = 92
   Insn 285(l0): point = 94
   Insn 284(l0): point = 96
   Insn 283(l0): point = 98
   Insn 282(l0): point = 100
   Insn 281(l0): point = 102
   Insn 280(l0): point = 104
   Insn 279(l0): point = 106
   Insn 277(l0): point = 108
   Insn 278(l0): point = 110
   Insn 276(l0): point = 112
   Insn 275(l0): point = 114
   Insn 274(l0): point = 116
   Insn 273(l0): point = 118
   Insn 272(l0): point = 120
   Insn 269(l0): point = 123
   Insn 268(l0): point = 125
   Insn 265(l0): point = 128
   Insn 263(l0): point = 131
   Insn 262(l0): point = 133
   Insn 261(l0): point = 135
   Insn 260(l0): point = 137
   Insn 258(l0): point = 140
   Insn 257(l0): point = 142
   Insn 362(l0): point = 145
   Insn 162(l0): point = 148
   Insn 161(l0): point = 150
   Insn 160(l0): point = 152
   Insn 159(l0): point = 154
   Insn 353(l0): point = 157
   Insn 251(l0): point = 159
   Insn 249(l0): point = 162
   Insn 248(l0): point = 164
   Insn 247(l0): point = 166
   Insn 244(l0): point = 169
   Insn 243(l0): point = 171
   Insn 238(l0): point = 174
   Insn 237(l0): point = 176
   Insn 236(l0): point = 178
   Insn 235(l0): point = 180
   Insn 234(l0): point = 182
   Insn 233(l0): point = 184
   Insn 232(l0): point = 186
   Insn 231(l0): point = 188
   Insn 240(l0): point = 191
   Insn 349(l0): point = 194
   Insn 212(l0): point = 196
   Insn 351(l0): point = 199
   Insn 226(l0): point = 201
   Insn 225(l0): point = 203
   Insn 224(l0): point = 205
   Insn 223(l0): point = 207
   Insn 222(l0): point = 209
   Insn 221(l0): point = 211
   Insn 219(l0): point = 214
   Insn 218(l0): point = 216
   Insn 217(l0): point = 218
   Insn 210(l0): point = 221
   Insn 209(l0): point = 223
   Insn 208(l0): point = 225
   Insn 207(l0): point = 227
   Insn 206(l0): point = 229
   Insn 205(l0): point = 231
   Insn 204(l0): point = 233
   Insn 203(l0): point = 235
   Insn 202(l0): point = 237
   Insn 201(l0): point = 239
   Insn 200(l0): point = 241
   Insn 199(l0): point = 243
   Insn 198(l0): point = 245
   Insn 197(l0): point = 247
   Insn 196(l0): point = 249
   Insn 194(l0): point = 251
   Insn 195(l0): point = 253
   Insn 193(l0): point = 255
   Insn 192(l0): point = 257
   Insn 191(l0): point = 259
   Insn 190(l0): point = 261
   Insn 189(l0): point = 263
   Insn 188(l0): point = 265
   Insn 187(l0): point = 267
   Insn 186(l0): point = 269
   Insn 185(l0): point = 271
   Insn 184(l0): point = 273
   Insn 183(l0): point = 275
   Insn 182(l0): point = 277
   Insn 181(l0): point = 279
   Insn 180(l0): point = 281
   Insn 179(l0): point = 283
   Insn 178(l0): point = 285
   Insn 177(l0): point = 287
   Insn 176(l0): point = 289
   Insn 175(l0): point = 291
   Insn 174(l0): point = 293
   Insn 172(l0): point = 295
   Insn 173(l0): point = 297
   Insn 171(l0): point = 299
   Insn 170(l0): point = 301
   Insn 169(l0): point = 303
   Insn 168(l0): point = 305
   Insn 167(l0): point = 307
   Insn 166(l0): point = 309
   Insn 165(l0): point = 311
   Insn 164(l0): point = 313
   Insn 157(l0): point = 316
   Insn 156(l0): point = 318
   Insn 155(l0): point = 320
   Insn 154(l0): point = 322
   Insn 153(l0): point = 324
   Insn 152(l0): point = 326
   Insn 151(l0): point = 328
   Insn 150(l0): point = 330
   Insn 145(l0): point = 333
   Insn 144(l0): point = 335
   Insn 143(l0): point = 337
   Insn 142(l0): point = 339
   Insn 141(l0): point = 341
   Insn 140(l0): point = 343
   Insn 139(l0): point = 345
   Insn 138(l0): point = 347
   Insn 137(l0): point = 349
   Insn 136(l0): point = 351
   Insn 134(l0): point = 354
   Insn 133(l0): point = 356
   Insn 132(l0): point = 358
   Insn 131(l0): point = 360
   Insn 129(l0): point = 362
   Insn 128(l0): point = 364
   Insn 127(l0): point = 366
   Insn 125(l0): point = 369
   Insn 124(l0): point = 371
   Insn 123(l0): point = 373
   Insn 121(l0): point = 375
   Insn 122(l0): point = 377
   Insn 120(l0): point = 379
   Insn 118(l0): point = 381
   Insn 119(l0): point = 383
   Insn 115(l0): point = 385
   Insn 114(l0): point = 387
   Insn 113(l0): point = 389
   Insn 111(l0): point = 392
   Insn 110(l0): point = 394
   Insn 109(l0): point = 396
   Insn 108(l0): point = 398
   Insn 107(l0): point = 400
   Insn 106(l0): point = 402
   Insn 105(l0): point = 404
   Insn 104(l0): point = 406
   Insn 103(l0): point = 408
   Insn 102(l0): point = 410
   Insn 101(l0): point = 412
   Insn 100(l0): point = 414
   Insn 99(l0): point = 416
   Insn 96(l0): point = 419
   Insn 95(l0): point = 421
   Insn 94(l0): point = 423
   Insn 93(l0): point = 425
   Insn 92(l0): point = 427
   Insn 91(l0): point = 429
   Insn 90(l0): point = 431
   Insn 89(l0): point = 433
   Insn 88(l0): point = 435
   Insn 87(l0): point = 437
   Insn 85(l0): point = 440
   Insn 84(l0): point = 442
   Insn 83(l0): point = 444
   Insn 82(l0): point = 446
   Insn 81(l0): point = 448
   Insn 80(l0): point = 450
   Insn 79(l0): point = 452
   Insn 78(l0): point = 454
   Insn 77(l0): point = 456
   Insn 76(l0): point = 458
   Insn 75(l0): point = 460
   Insn 74(l0): point = 462
   Insn 73(l0): point = 464
   Insn 71(l0): point = 467
   Insn 70(l0): point = 469
   Insn 69(l0): point = 471
   Insn 67(l0): point = 473
   Insn 68(l0): point = 475
   Insn 66(l0): point = 477
   Insn 65(l0): point = 479
   Insn 63(l0): point = 481
   Insn 64(l0): point = 483
   Insn 59(l0): point = 485
   Insn 58(l0): point = 487
   Insn 57(l0): point = 489
   Insn 56(l0): point = 491
   Insn 55(l0): point = 493
   Insn 54(l0): point = 495
   Insn 53(l0): point = 497
   Insn 52(l0): point = 499
   Insn 51(l0): point = 501
   Insn 50(l0): point = 503
   Insn 49(l0): point = 505
   Insn 47(l0): point = 507
   Insn 48(l0): point = 509
   Insn 46(l0): point = 511
   Insn 44(l0): point = 513
   Insn 45(l0): point = 515
   Insn 43(l0): point = 517
   Insn 42(l0): point = 519
   Insn 41(l0): point = 521
   Insn 40(l0): point = 523
   Insn 39(l0): point = 525
   Insn 38(l0): point = 527
   Insn 36(l0): point = 529
   Insn 37(l0): point = 531
   Insn 35(l0): point = 533
   Insn 34(l0): point = 535
   Insn 33(l0): point = 537
   Insn 31(l0): point = 539
   Insn 32(l0): point = 541
   Insn 30(l0): point = 543
   Insn 29(l0): point = 545
   Insn 28(l0): point = 547
   Insn 24(l0): point = 549
   Insn 21(l0): point = 552
   Insn 19(l0): point = 555
   Insn 18(l0): point = 557
   Insn 17(l0): point = 559
   Insn 13(l0): point = 561
   Insn 12(l0): point = 563
   Insn 11(l0): point = 565
   Insn 10(l0): point = 567
   Insn 6(l0): point = 569
   Insn 5(l0): point = 571
   Insn 4(l0): point = 573
   Insn 3(l0): point = 575
   Insn 2(l0): point = 577
 a0(r226): [4..5]
 a1(r225): [11..12]
 a2(r224): [15..16]
 a3(r142): [22..23]
 a4(r141): [24..25]
 a5(r223): [30..31]
 a6(r222): [57..62]
 a7(r140): [59..64]
 a8(r221): [65..66]
 a9(r220): [65..68]
 a10(r139): [69..70]
 a11(r138): [71..72]
 a12(r219): [73..74]
 a13(r159): [37..88]
 a14(r160): [80..81]
 a15(r137): [40..43]
 a16(r136): [44..45]
 a17(r135): [46..47]
 a18(r218): [89..90]
 a19(r217): [95..96]
 a20(r134): [105..106]
 a21(r216): [107..110]
 a22(r215): [113..114]
 a23(r214): [119..120]
 a24(r213): [124..125]
 a25(r145): [131..135] [124..128]
 a26(r212): [136..137]
 a27(r157): [148..318]
 a28(r211): [165..166]
 a29(r210): [170..171]
 a30(r144): [191..191] [172..178]
 a31(r209): [181..182]
 a32(r133): [181..184]
 a33(r132): [185..186]
 a34(r208): [187..188]
 a35(r207): [204..205]
 a36(r131): [204..207]
 a37(r130): [208..209]
 a38(r206): [210..211]
 a39(r205): [217..218]
 a40(r204): [224..225]
 a41(r203): [228..229]
 a42(r129): [230..231]
 a43(r202): [232..233]
 a44(r128): [232..235]
 a45(r127): [240..249]
 a46(r124): [242..261]
 a47(r201): [250..253]
 a48(r126): [250..255]
 a49(r125): [256..257]
 a50(r200): [258..259]
 a51(r199): [262..263]
 a52(r196): [262..269]
 a53(r197): [264..265]
 a54(r198): [266..267]
 a55(r195): [272..273]
 a56(r123): [274..275]
 a57(r194): [276..277]
 a58(r122): [276..279]
 a59(r121): [284..293]
 a60(r118): [286..305]
 a61(r193): [294..297]
 a62(r120): [294..299]
 a63(r119): [300..301]
 a64(r192): [302..303]
 a65(r191): [306..307]
 a66(r188): [306..313]
 a67(r189): [308..309]
 a68(r190): [310..311]
 a69(r158): [151..152]
 a70(r187): [323..324]
 a71(r186): [327..328]
 a72(r185): [329..330]
 a73(r117): [336..341]
 a74(r115): [340..347]
 a75(r116): [342..345]
 a76(r184): [342..343]
 a77(r155): [346..379]
 a78(r114): [348..349]
 a79(r113): [348..351]
 a80(r156): [352..373]
 a81(r112): [357..358]
 a82(r111): [357..360]
 a83(r109): [363..364]
 a84(r108): [363..366]
 a85(r183): [374..377]
 a86(r182): [380..383]
 a87(r153): [380..387]
 a88(r180): [388..389]
 a89(r179): [397..398]
 a90(r178): [405..412]
 a91(r149): [417..517]
 a92(r107): [422..427]
 a93(r105): [426..433]
 a94(r106): [428..431]
 a95(r177): [428..429]
 a96(r151): [432..477]
 a97(r104): [434..435]
 a98(r103): [434..437]
 a99(r152): [438..471]
 a100(r102): [443..444]
 a101(r101): [443..446]
 a102(r176): [451..456]
 a103(r100): [455..458]
 a104(r99): [459..462]
 a105(r98): [459..464]
 a106(r175): [472..475]
 a107(r97): [478..479]
 a108(r174): [480..483]
 a109(r95): [490..503]
 a110(r93): [494..511]
 a111(r172): [496..501]
 a112(r94): [504..505]
 a113(r171): [506..509]
 a114(r170): [512..515]
 a115(r148): [518..519]
 a116(r169): [520..521]
 a117(r92): [526..527]
 a118(r168): [528..531]
 a119(r91): [528..533]
 a120(r90): [534..535]
 a121(r89): [536..537]
 a122(r167): [538..541]
 a123(r165): [544..545]
 a124(r166): [546..547]
 a125(r143): [555..559] [550..552]
 a126(r88 [0]): [562..579]
 a126(r88 [1]): [561..579]
 a127(r87): [564..565]
 a128(r161): [566..567]
Compressing live ranges: from 580 to 195 - 33%
Ranges after the compression:
 a0(r226): [0..1]
 a1(r225): [2..3]
 a2(r224): [4..5]
 a3(r142): [6..7]
 a4(r141): [8..9]
 a5(r223): [10..11]
 a6(r222): [18..19]
 a7(r140): [18..19]
 a8(r221): [20..21]
 a9(r220): [20..21]
 a10(r139): [22..23]
 a11(r138): [24..25]
 a12(r219): [26..27]
 a13(r159): [12..29]
 a14(r160): [28..29]
 a15(r137): [12..13]
 a16(r136): [14..15]
 a17(r135): [16..17]
 a18(r218): [30..31]
 a19(r217): [32..33]
 a20(r134): [34..35]
 a21(r216): [36..37]
 a22(r215): [38..39]
 a23(r214): [40..41]
 a24(r213): [42..43]
 a25(r145): [42..45]
 a26(r212): [46..47]
 a27(r157): [48..112]
 a28(r211): [50..51]
 a29(r210): [52..53]
 a30(r144): [62..62] [54..55]
 a31(r209): [56..57]
 a32(r133): [56..57]
 a33(r132): [58..59]
 a34(r208): [60..61]
 a35(r207): [63..64]
 a36(r131): [63..64]
 a37(r130): [65..66]
 a38(r206): [67..68]
 a39(r205): [69..70]
 a40(r204): [71..72]
 a41(r203): [73..74]
 a42(r129): [75..76]
 a43(r202): [77..78]
 a44(r128): [77..78]
 a45(r127): [79..80]
 a46(r124): [79..86]
 a47(r201): [81..82]
 a48(r126): [81..82]
 a49(r125): [83..84]
 a50(r200): [85..86]
 a51(r199): [87..88]
 a52(r196): [87..92]
 a53(r197): [89..90]
 a54(r198): [91..92]
 a55(r195): [93..94]
 a56(r123): [95..96]
 a57(r194): [97..98]
 a58(r122): [97..98]
 a59(r121): [99..100]
 a60(r118): [99..106]
 a61(r193): [101..102]
 a62(r120): [101..102]
 a63(r119): [103..104]
 a64(r192): [105..106]
 a65(r191): [107..108]
 a66(r188): [107..112]
 a67(r189): [109..110]
 a68(r190): [111..112]
 a69(r158): [48..49]
 a70(r187): [113..114]
 a71(r186): [115..116]
 a72(r185): [117..118]
 a73(r117): [119..120]
 a74(r115): [119..124]
 a75(r116): [121..122]
 a76(r184): [121..122]
 a77(r155): [123..132]
 a78(r114): [125..126]
 a79(r113): [125..126]
 a80(r156): [127..130]
 a81(r112): [127..128]
 a82(r111): [127..128]
 a83(r109): [129..130]
 a84(r108): [129..130]
 a85(r183): [131..132]
 a86(r182): [133..134]
 a87(r153): [133..134]
 a88(r180): [135..136]
 a89(r179): [137..138]
 a90(r178): [139..140]
 a91(r149): [141..168]
 a92(r107): [141..142]
 a93(r105): [141..146]
 a94(r106): [143..144]
 a95(r177): [143..144]
 a96(r151): [145..156]
 a97(r104): [147..148]
 a98(r103): [147..148]
 a99(r152): [149..154]
 a100(r102): [149..150]
 a101(r101): [149..150]
 a102(r176): [151..152]
 a103(r100): [151..152]
 a104(r99): [153..154]
 a105(r98): [153..154]
 a106(r175): [155..156]
 a107(r97): [157..158]
 a108(r174): [159..160]
 a109(r95): [161..162]
 a110(r93): [161..166]
 a111(r172): [161..162]
 a112(r94): [163..164]
 a113(r171): [165..166]
 a114(r170): [167..168]
 a115(r148): [169..170]
 a116(r169): [171..172]
 a117(r92): [173..174]
 a118(r168): [175..176]
 a119(r91): [175..176]
 a120(r90): [177..178]
 a121(r89): [179..180]
 a122(r167): [181..182]
 a123(r165): [183..184]
 a124(r166): [185..186]
 a125(r143): [187..190]
 a126(r88 [0]): [191..194]
 a126(r88 [1]): [191..194]
 a127(r87): [191..192]
 a128(r161): [193..194]
  regions=1, blocks=36, points=195
    allocnos=129 (big 1), copies=0, conflicts=0, ranges=131
Disposition:
  127:r87  l0     0  126:r88  l0    38  121:r89  l0     0  120:r90  l0     0
  119:r91  l0     0  117:r92  l0     0  110:r93  l0     0  112:r94  l0     1
  109:r95  l0     5  107:r97  l0     0  105:r98  l0     1  104:r99  l0     0
  103:r100 l0     1  101:r101 l0     1  100:r102 l0     0   98:r103 l0     1
   97:r104 l0     0   93:r105 l0     1   94:r106 l0     0   92:r107 l0     0
   84:r108 l0     4   83:r109 l0     2   82:r111 l0     4   81:r112 l0     2
   79:r113 l0     2   78:r114 l0     0   74:r115 l0     2   75:r116 l0     0
   73:r117 l0     0   60:r118 l0     4   63:r119 l0     0   62:r120 l0     0
   59:r121 l0     0   58:r122 l0     1   56:r123 l0     0   46:r124 l0     4
   49:r125 l0     0   48:r126 l0     0   45:r127 l0     0   44:r128 l0     1
   42:r129 l0     0   37:r130 l0     0   36:r131 l0     1   33:r132 l0     0
   32:r133 l0     1   20:r134 l0     0   17:r135 l0     0   16:r136 l0     0
   15:r137 l0     0   11:r138 l0     0   10:r139 l0     0    7:r140 l0     2
    4:r141 l0     0    3:r142 l0     0  125:r143 l0     0   30:r144 l0     0
   25:r145 l0     0  115:r148 l0     0   91:r149 l0    42   96:r151 l0    41
   99:r152 l0     3   87:r153 l0     0   77:r155 l0     1   80:r156 l0     0
   27:r157 l0     3   69:r158 l0     0   13:r159 l0     3   14:r160 l0     0
  128:r161 l0     0  123:r165 l0     0  124:r166 l0     0  122:r167 l0     0
  118:r168 l0     1  116:r169 l0     0  114:r170 l0     0  113:r171 l0     1
  111:r172 l0     1  108:r174 l0     0  106:r175 l0     0  102:r176 l0     0
   95:r177 l0     2   90:r178 l0     0   89:r179 l0     0   88:r180 l0     0
   86:r182 l0     1   85:r183 l0     0   76:r184 l0     1   72:r185 l0     0
   71:r186 l0     0   70:r187 l0     0   66:r188 l0     1   67:r189 l0     0
   68:r190 l0     0   65:r191 l0     0   64:r192 l0     0   61:r193 l0     1
   57:r194 l0     0   55:r195 l0     0   52:r196 l0     1   53:r197 l0     0
   54:r198 l0     0   51:r199 l0     0   50:r200 l0     0   47:r201 l0     1
   43:r202 l0     0   41:r203 l0     0   40:r204 l0     0   39:r205 l0     0
   38:r206 l0     0   35:r207 l0     0   34:r208 l0     0   31:r209 l0     0
   29:r210 l0     0   28:r211 l0     0   26:r212 l0     0   24:r213 l0     1
   23:r214 l0     0   22:r215 l0     0   21:r216 l0     0   19:r217 l0     0
   18:r218 l0     0   12:r219 l0     0    9:r220 l0     1    8:r221 l0     0
    6:r222 l0     0    5:r223 l0     0    2:r224 l0     0    1:r225 l0     0
    0:r226 l0     0
+++Costs: overall -24, reg -24, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


getint

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 37 [r8] 38 [r9]
;;  ref usage 	r0={13d,4u} r1={21d,9u} r2={17d,5u} r4={21d,9u} r5={25d,13u} r6={1d,35u} r7={1d,47u} r8={12d} r9={12d} r10={12d} r11={12d} r12={12d} r13={12d} r14={12d} r15={12d} r16={1d,34u} r17={89d,30u} r18={12d} r19={12d} r20={1d,135u,11e} r21={13d} r22={13d} r23={13d} r24={13d} r25={13d} r26={13d} r27={13d} r28={13d} r29={12d} r30={12d} r31={12d} r32={12d} r33={12d} r34={12d} r35={12d} r36={12d} r37={17d,5u} r38={14d,1u} r39={12d} r40={12d} r45={12d} r46={12d} r47={12d} r48={12d} r49={12d} r50={12d} r51={12d} r52={12d} r53={12d} r54={12d} r55={12d} r56={12d} r57={12d} r58={12d} r59={12d} r60={12d} r61={12d} r62={12d} r63={12d} r64={12d} r65={12d} r66={12d} r67={12d} r68={12d} r69={12d} r70={12d} r71={12d} r72={12d} r73={12d} r74={12d} r75={12d} r76={12d} r77={12d} r78={12d} r79={12d} r80={12d} r87={1d,1u} r88={2d,2u} r89={1d,1u} r90={1d,1u} r91={1d,2u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r97={1d,1u} r98={1d,2u} r99={1d,2u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,2u} r121={1d,1u} r122={1d,1u,1e} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,2u} r127={1d,1u} r128={1d,1u,1e} r129={1d,1u} r130={1d,1u} r131={1d,1u} r132={1d,1u} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={2d,2u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={2d,2u} r144={2d,2u} r145={2d,2u} r148={1d,1u} r149={1d,3u} r151={1d,4u} r152={1d,4u} r153={1d,3u} r155={1d,4u} r156={1d,4u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r165={1d,1u} r166={1d,1u} r167={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,1u} r171={1d,1u} r172={1d,1u} r174={1d,1u} r175={1d,1u} r176={1d,1u} r177={1d,1u} r178={1d,1u} r179={1d,1u} r180={1d,1u} r182={1d,1u} r183={1d,1u} r184={1d,1u} r185={1d,1u} r186={1d,1u} r187={1d,1u} r188={1d,1u} r189={1d,1u} r190={1d,1u} r191={1d,1u} r192={1d,1u} r193={1d,1u} r194={1d,1u} r195={1d,1u} r196={1d,1u} r197={1d,1u} r198={1d,1u} r199={1d,1u} r200={1d,1u} r201={1d,1u} r202={1d,1u} r203={1d,1u} r204={1d,1u} r205={1d,1u} r206={1d,1u} r207={1d,1u} r208={1d,1u} r209={1d,1u} r210={1d,1u} r211={1d,1u} r212={1d,1u} r213={1d,1u} r214={1d,1u} r215={1d,1u} r216={1d,1u} r217={1d,1u} r218={1d,1u} r219={1d,1u} r220={1d,1u,1e} r221={1d,1u} r222={1d,1u} r223={1d,1u} r224={1d,1u} r225={1d,1u} r226={1d,1u} 
;;    total ref usage 1627{1131d,482u,14e} in 273{261 regular + 12 call} insns.
(note 1 0 8 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 88
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 88
;; lr  def 	 17 [flags] 87 143 161
(note 8 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 8 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -664 [0xfffffffffffffd68])) [10 input+0 S8 A64])
        (reg:DI 5 di [ input ])) "../src/io.f":208 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ input ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -672 [0xfffffffffffffd60])) [6 a+0 S8 A64])
        (reg:DI 4 si [ a ])) "../src/io.f":208 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ a ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -680 [0xfffffffffffffd58])) [11 n+0 S8 A64])
        (reg:DI 1 dx [ n ])) "../src/io.f":208 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ n ])
        (nil)))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -688 [0xfffffffffffffd50])) [12 error+0 S8 A64])
        (reg:DI 2 cx [ error ])) "../src/io.f":208 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [ error ])
        (nil)))
(insn 6 5 7 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -692 [0xfffffffffffffd4c])) [1 _input+0 S4 A32])
        (reg:SI 37 r8 [ _input ])) "../src/io.f":208 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 37 r8 [ _input ])
        (nil)))
(note 7 6 10 2 NOTE_INSN_FUNCTION_BEG)
(insn 10 7 11 2 (set (reg:SI 161)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -692 [0xfffffffffffffd4c])) [1 _input+0 S4 A32])) "../src/io.f":278 82 {*movsi_internal}
     (nil))
(insn 11 10 12 2 (set (reg:DI 87 [ _1 ])
        (sign_extend:DI (reg:SI 161))) "../src/io.f":278 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 161)
        (nil)))
(insn 12 11 13 2 (set (subreg:DI (reg:TI 88 [ _2 ]) 0)
        (reg:DI 87 [ _1 ])) "../src/io.f":278 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 87 [ _1 ])
        (nil)))
(insn 13 12 17 2 (set (subreg:DI (reg:TI 88 [ _2 ]) 8)
        (const_int 0 [0])) "../src/io.f":278 81 {*movdi_internal}
     (expr_list:REG_UNUSED (reg:TI 88 [ _2 ])
        (nil)))
(insn 17 13 18 2 (set (reg:SI 143 [ M.0_61 ])
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -692 [0xfffffffffffffd4c])) [1 _input+0 S4 A32])) "../src/io.f":225 82 {*movsi_internal}
     (nil))
(insn 18 17 19 2 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 143 [ M.0_61 ])
            (const_int 128 [0x80]))) "../src/io.f":225 7 {*cmpsi_1}
     (nil))
(jump_insn 19 18 20 2 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 22)
            (pc))) "../src/io.f":225 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 22)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 143

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 143
(note 20 19 21 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 22 3 (set (reg:SI 143 [ M.0_61 ])
        (const_int 128 [0x80])) "../src/io.f":225 82 {*movsi_internal}
     (nil))
;;  succ:       4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 143

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       2
;;              3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 143
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 143
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 89 90 91 92 93 94 95 97 148 149 151 152 165 166 167 168 169 170 171 172 174 175
(code_label 22 21 23 4 2 (nil) [1 uses])
(note 23 22 24 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 28 4 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [1 ilen+0 S4 A32])
        (reg:SI 143 [ M.0_61 ])) "../src/io.f":225 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 143 [ M.0_61 ])
        (nil)))
(insn 28 24 29 4 (set (reg:SI 166)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [1 ilen+0 S4 A32])) "../src/io.f":226 82 {*movsi_internal}
     (nil))
(insn 29 28 30 4 (parallel [
            (set (reg:SI 165)
                (plus:SI (reg:SI 166)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":226 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 166)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -16 [0xfffffffffffffff0])) [1 ilen+0 S4 A32])
                    (const_int 2 [0x2]))
                (nil)))))
(insn 30 29 32 4 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [1 ilenp+0 S4 A32])
        (reg:SI 165)) "../src/io.f":226 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 165)
        (nil)))
(insn 32 30 31 4 (set (reg:SI 167)
        (const_int 0 [0])) "../src/io.f":229 82 {*movsi_internal}
     (nil))
(insn 31 32 33 4 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [1 ilen+0 S4 A32])
            (const_int 0 [0]))) "../src/io.f":229 3 {*cmpsi_ccno_1}
     (nil))
(insn 33 31 34 4 (set (reg:SI 89 [ _3 ])
        (if_then_else:SI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [1 ilen+0 S4 A32])
            (reg:SI 167))) "../src/io.f":229 966 {*movsicc_noc}
     (expr_list:REG_DEAD (reg:SI 167)
        (expr_list:REG_DEAD (reg:CCGOC 17 flags)
            (nil))))
(insn 34 33 35 4 (parallel [
            (set (reg:SI 90 [ _4 ])
                (plus:SI (reg:SI 89 [ _3 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":229 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 89 [ _3 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 35 34 37 4 (set (reg:DI 91 [ _5 ])
        (sign_extend:DI (reg:SI 90 [ _4 ]))) "../src/io.f":229 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 90 [ _4 ])
        (nil)))
(insn 37 35 36 4 (set (reg:DI 168)
        (const_int 1 [0x1])) "../src/io.f":229 81 {*movdi_internal}
     (nil))
(insn 36 37 38 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 91 [ _5 ])
            (const_int 0 [0]))) "../src/io.f":229 4 {*cmpdi_ccno_1}
     (nil))
(insn 38 36 39 4 (set (reg:DI 92 [ _6 ])
        (if_then_else:DI (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (reg:DI 91 [ _5 ])
            (reg:DI 168))) "../src/io.f":229 967 {*movdicc_noc}
     (expr_list:REG_DEAD (reg:DI 168)
        (expr_list:REG_DEAD (reg:DI 91 [ _5 ])
            (expr_list:REG_DEAD (reg:CCZ 17 flags)
                (nil)))))
(insn 39 38 40 4 (set (reg:DI 5 di)
        (reg:DI 92 [ _6 ])) "../src/io.f":229 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 92 [ _6 ])
        (nil)))
(call_insn 40 39 41 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x143849c00 __builtin_malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) "../src/io.f":229 665 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 41 40 42 4 (set (reg/f:DI 169)
        (reg:DI 0 ax)) "../src/io.f":229 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 169)
            (nil))))
(insn 42 41 43 4 (set (reg/f:DI 148 [ _83 ])
        (reg/f:DI 169)) "../src/io.f":229 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 169)
        (nil)))
(insn 43 42 45 4 (set (reg/f:DI 149 [ pstr.1_84 ])
        (reg/f:DI 148 [ _83 ])) "../src/io.f":229 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 148 [ _83 ])
        (nil)))
(insn 45 43 44 4 (set (reg:SI 170)
        (const_int 0 [0])) "../src/io.f":229 82 {*movsi_internal}
     (nil))
(insn 44 45 46 4 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [1 ilen+0 S4 A32])
            (const_int 0 [0]))) "../src/io.f":229 3 {*cmpsi_ccno_1}
     (nil))
(insn 46 44 48 4 (set (reg:SI 93 [ _7 ])
        (if_then_else:SI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [1 ilen+0 S4 A32])
            (reg:SI 170))) "../src/io.f":229 966 {*movsicc_noc}
     (expr_list:REG_DEAD (reg:SI 170)
        (expr_list:REG_DEAD (reg:CCGOC 17 flags)
            (nil))))
(insn 48 46 47 4 (set (reg:SI 171)
        (const_int 0 [0])) "../src/io.f":229 82 {*movsi_internal}
     (nil))
(insn 47 48 49 4 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [1 ilen+0 S4 A32])
            (const_int 0 [0]))) "../src/io.f":229 3 {*cmpsi_ccno_1}
     (nil))
(insn 49 47 50 4 (set (reg:SI 94 [ _8 ])
        (if_then_else:SI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [1 ilen+0 S4 A32])
            (reg:SI 171))) "../src/io.f":229 966 {*movsicc_noc}
     (expr_list:REG_DEAD (reg:SI 171)
        (expr_list:REG_DEAD (reg:CCGOC 17 flags)
            (nil))))
(insn 50 49 51 4 (parallel [
            (set (reg:SI 95 [ _9 ])
                (plus:SI (reg:SI 94 [ _8 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":229 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 94 [ _8 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 51 50 52 4 (set (reg:DI 172)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -664 [0xfffffffffffffd68])) [10 input+0 S8 A64])) "../src/io.f":229 81 {*movdi_internal}
     (nil))
(insn 52 51 53 4 (set (reg:DI 38 r9)
        (symbol_ref/f:DI ("*lC0") [flags 0x2]  <var_decl 0x143b721b0 *lC0>)) "../src/io.f":229 81 {*movdi_internal}
     (nil))
(insn 53 52 54 4 (set (reg:SI 37 r8)
        (const_int 2 [0x2])) "../src/io.f":229 82 {*movsi_internal}
     (nil))
(insn 54 53 55 4 (set (reg:DI 2 cx)
        (reg:DI 172)) "../src/io.f":229 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 172)
        (nil)))
(insn 55 54 56 4 (set (reg:SI 1 dx)
        (reg:SI 93 [ _7 ])) "../src/io.f":229 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 93 [ _7 ])
        (nil)))
(insn 56 55 57 4 (set (reg:DI 4 si)
        (reg/f:DI 149 [ pstr.1_84 ])) "../src/io.f":229 81 {*movdi_internal}
     (nil))
(insn 57 56 58 4 (set (reg:SI 5 di)
        (reg:SI 95 [ _9 ])) "../src/io.f":229 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 95 [ _9 ])
        (nil)))
(call_insn 58 57 59 4 (call (mem:QI (symbol_ref:DI ("_gfortran_concat_string") [flags 0x41]  <function_decl 0x1439c4800 _gfortran_concat_string>) [0 _gfortran_concat_string S1 A8])
        (const_int 0 [0])) "../src/io.f":229 655 {*call}
     (expr_list:REG_DEAD (reg:DI 38 r9)
        (expr_list:REG_DEAD (reg:SI 37 r8)
            (expr_list:REG_DEAD (reg:SI 5 di)
                (expr_list:REG_DEAD (reg:DI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:SI 1 dx)
                            (expr_list:REG_EH_REGION (const_int 0 [0])
                                (nil))))))))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 59 58 64 4 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [1 ilen+0 S4 A32])
            (const_int 0 [0]))) "../src/io.f":229 3 {*cmpsi_ccno_1}
     (expr_list:REG_UNUSED (reg:CCGOC 17 flags)
        (nil)))
(insn 64 59 63 4 (set (reg:SI 174)
        (const_int 0 [0])) "../src/io.f":229 82 {*movsi_internal}
     (nil))
(insn 63 64 65 4 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [1 ilen+0 S4 A32])
            (const_int 0 [0]))) "../src/io.f":229 3 {*cmpsi_ccno_1}
     (nil))
(insn 65 63 66 4 (set (reg:SI 97 [ _11 ])
        (if_then_else:SI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [1 ilen+0 S4 A32])
            (reg:SI 174))) "../src/io.f":229 966 {*movsicc_noc}
     (expr_list:REG_DEAD (reg:SI 174)
        (expr_list:REG_DEAD (reg:CCGOC 17 flags)
            (nil))))
(insn 66 65 68 4 (parallel [
            (set (reg:SI 151 [ _88 ])
                (plus:SI (reg:SI 97 [ _11 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":229 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 97 [ _11 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 68 66 67 4 (set (reg:SI 175)
        (const_int 0 [0])) "../src/io.f":229 82 {*movsi_internal}
     (nil))
(insn 67 68 69 4 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -20 [0xffffffffffffffec])) [1 ilenp+0 S4 A32])
            (const_int 0 [0]))) "../src/io.f":229 3 {*cmpsi_ccno_1}
     (nil))
(insn 69 67 70 4 (set (reg:SI 152 [ _89 ])
        (if_then_else:SI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -20 [0xffffffffffffffec])) [1 ilenp+0 S4 A32])
            (reg:SI 175))) "../src/io.f":229 966 {*movsicc_noc}
     (expr_list:REG_DEAD (reg:SI 175)
        (expr_list:REG_DEAD (reg:CCGOC 17 flags)
            (nil))))
(insn 70 69 71 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 152 [ _89 ])
            (const_int 0 [0]))) "../src/io.f":229 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 71 70 72 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 97)
            (pc))) "../src/io.f":229 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 97)
;;  succ:       5 (FALLTHRU)
;;              7
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 149 151 152

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 149 151 152
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 149 151 152
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 98 99 100 101 102 176
(note 72 71 73 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 73 72 74 5 (set (reg:DI 98 [ _12 ])
        (sign_extend:DI (reg:SI 152 [ _89 ]))) "../src/io.f":229 145 {*extendsidi2_rex64}
     (nil))
(insn 74 73 75 5 (set (reg:DI 99 [ _13 ])
        (sign_extend:DI (reg:SI 151 [ _88 ]))) "../src/io.f":229 145 {*extendsidi2_rex64}
     (nil))
(insn 75 74 76 5 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 98 [ _12 ])
            (reg:DI 99 [ _13 ]))) "../src/io.f":229 8 {*cmpdi_1}
     (nil))
(insn 76 75 77 5 (set (reg:DI 100 [ _14 ])
        (if_then_else:DI (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (reg:DI 98 [ _12 ])
            (reg:DI 99 [ _13 ]))) "../src/io.f":229 967 {*movdicc_noc}
     (expr_list:REG_DEAD (reg:DI 99 [ _13 ])
        (expr_list:REG_DEAD (reg:DI 98 [ _12 ])
            (expr_list:REG_DEAD (reg:CC 17 flags)
                (nil)))))
(insn 77 76 78 5 (parallel [
            (set (reg:DI 176)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -176 [0xffffffffffffff50])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":229 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 78 77 79 5 (set (reg:DI 1 dx)
        (reg:DI 100 [ _14 ])) "../src/io.f":229 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 100 [ _14 ])
        (nil)))
(insn 79 78 80 5 (set (reg:DI 4 si)
        (reg/f:DI 149 [ pstr.1_84 ])) "../src/io.f":229 81 {*movdi_internal}
     (nil))
(insn 80 79 81 5 (set (reg:DI 5 di)
        (reg:DI 176)) "../src/io.f":229 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 176)
        (nil)))
(call_insn 81 80 82 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memmove") [flags 0x41]  <function_decl 0x14386f400 __builtin_memmove>) [0 __builtin_memmove S1 A8])
            (const_int 0 [0]))) "../src/io.f":229 665 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 82 81 83 5 (set (reg:DI 101 [ _15 ])
        (sign_extend:DI (reg:SI 151 [ _88 ]))) "../src/io.f":229 145 {*extendsidi2_rex64}
     (nil))
(insn 83 82 84 5 (set (reg:DI 102 [ _16 ])
        (sign_extend:DI (reg:SI 152 [ _89 ]))) "../src/io.f":229 145 {*extendsidi2_rex64}
     (nil))
(insn 84 83 85 5 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 101 [ _15 ])
            (reg:DI 102 [ _16 ]))) "../src/io.f":229 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg:DI 102 [ _16 ])
        (expr_list:REG_DEAD (reg:DI 101 [ _15 ])
            (nil))))
(jump_insn 85 84 86 5 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 97)
            (pc))) "../src/io.f":229 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (nil))
 -> 97)
;;  succ:       6 (FALLTHRU)
;;              7
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 149 151 152

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (RTL)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 149 151 152
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 151 152
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 103 104 105 106 107 177
(note 86 85 87 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 87 86 88 6 (set (reg:DI 103 [ _17 ])
        (sign_extend:DI (reg:SI 152 [ _89 ]))) "../src/io.f":229 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 152 [ _89 ])
        (nil)))
(insn 88 87 89 6 (set (reg:DI 104 [ _18 ])
        (sign_extend:DI (reg:SI 151 [ _88 ]))) "../src/io.f":229 145 {*extendsidi2_rex64}
     (nil))
(insn 89 88 90 6 (parallel [
            (set (reg:DI 105 [ _19 ])
                (minus:DI (reg:DI 103 [ _17 ])
                    (reg:DI 104 [ _18 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":229 274 {*subdi_1}
     (expr_list:REG_DEAD (reg:DI 104 [ _18 ])
        (expr_list:REG_DEAD (reg:DI 103 [ _17 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 90 89 91 6 (set (reg:DI 106 [ _20 ])
        (sign_extend:DI (reg:SI 151 [ _88 ]))) "../src/io.f":229 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 151 [ _88 ])
        (nil)))
(insn 91 90 92 6 (parallel [
            (set (reg:DI 177)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -176 [0xffffffffffffff50])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":229 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 92 91 93 6 (parallel [
            (set (reg/f:DI 107 [ _21 ])
                (plus:DI (reg:DI 177)
                    (reg:DI 106 [ _20 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":229 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 177)
        (expr_list:REG_DEAD (reg:DI 106 [ _20 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 93 92 94 6 (set (reg:DI 1 dx)
        (reg:DI 105 [ _19 ])) "../src/io.f":229 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 105 [ _19 ])
        (nil)))
(insn 94 93 95 6 (set (reg:SI 4 si)
        (const_int 32 [0x20])) "../src/io.f":229 82 {*movsi_internal}
     (nil))
(insn 95 94 96 6 (set (reg:DI 5 di)
        (reg/f:DI 107 [ _21 ])) "../src/io.f":229 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 107 [ _21 ])
        (nil)))
(call_insn 96 95 97 6 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memset") [flags 0x41]  <function_decl 0x14386f600 __builtin_memset>) [0 __builtin_memset S1 A8])
            (const_int 0 [0]))) "../src/io.f":229 665 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       7 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 149

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (RTL)
;;  pred:       4
;;              6 (FALLTHRU)
;;              5
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 149
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 149
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 178 179
(code_label 97 96 98 7 3 (nil) [2 uses])
(note 98 97 99 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 99 98 100 7 (set (reg:DI 5 di)
        (reg/f:DI 149 [ pstr.1_84 ])) "../src/io.f":229 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 149 [ pstr.1_84 ])
        (nil)))
(call_insn 100 99 101 7 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x143849b00 __builtin_free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) "../src/io.f":229 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 101 100 102 7 (parallel [
            (set (reg:DI 178)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -176 [0xffffffffffffff50])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":232 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 102 101 103 7 (set (reg:SI 37 r8)
        (const_int 0 [0])) "../src/io.f":232 82 {*movsi_internal}
     (nil))
(insn 103 102 104 7 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*lC1") [flags 0x2]  <var_decl 0x143b72240 *lC1>)) "../src/io.f":232 81 {*movdi_internal}
     (nil))
(insn 104 103 105 7 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) "../src/io.f":232 82 {*movsi_internal}
     (nil))
(insn 105 104 106 7 (set (reg:DI 4 si)
        (reg:DI 178)) "../src/io.f":232 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 178)
        (nil)))
(insn 106 105 107 7 (set (reg:SI 5 di)
        (const_int 130 [0x82])) "../src/io.f":232 82 {*movsi_internal}
     (nil))
(call_insn/i 107 106 108 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_gfortran_string_index") [flags 0x41]  <function_decl 0x1439c4a00 _gfortran_string_index>) [0 _gfortran_string_index S1 A8])
            (const_int 0 [0]))) "../src/io.f":232 665 {*call_value}
     (expr_list:REG_DEAD (reg:SI 37 r8)
        (expr_list:REG_DEAD (reg:SI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:SI 1 dx)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (nil)))))))
(insn 108 107 109 7 (set (reg:SI 179)
        (reg:SI 0 ax)) "../src/io.f":232 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 109 108 110 7 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])
        (reg:SI 179)) "../src/io.f":232 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 179)
        (nil)))
(insn 110 109 111 7 (set (reg:CCNO 17 flags)
        (compare:CCNO (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])
            (const_int 0 [0]))) "../src/io.f":233 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 111 110 112 7 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 148)
            (pc))) "../src/io.f":233 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (nil))
 -> 148)
;;  succ:       8 (FALLTHRU)
;;              11
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (RTL)
;;  pred:       7 (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 153 155 156 180 182 183
(note 112 111 113 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 113 112 114 8 (set (reg:SI 180)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])) "../src/io.f":233 82 {*movsi_internal}
     (nil))
(insn 114 113 115 8 (parallel [
            (set (reg:SI 153 [ _94 ])
                (plus:SI (reg:SI 180)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":233 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 180)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff]))
                (nil)))))
(insn 115 114 119 8 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 153 [ _94 ])
            (const_int 0 [0]))) "../src/io.f":233 3 {*cmpsi_ccno_1}
     (expr_list:REG_UNUSED (reg:CCGOC 17 flags)
        (nil)))
(insn 119 115 118 8 (set (reg:SI 182)
        (const_int 0 [0])) "../src/io.f":233 82 {*movsi_internal}
     (nil))
(insn 118 119 120 8 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 153 [ _94 ])
            (const_int 0 [0]))) "../src/io.f":233 3 {*cmpsi_ccno_1}
     (nil))
(insn 120 118 122 8 (set (reg:SI 155 [ _96 ])
        (if_then_else:SI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:SI 153 [ _94 ])
            (reg:SI 182))) "../src/io.f":233 966 {*movsicc_noc}
     (expr_list:REG_DEAD (reg:SI 182)
        (expr_list:REG_DEAD (reg:SI 153 [ _94 ])
            (expr_list:REG_DEAD (reg:CCGOC 17 flags)
                (nil)))))
(insn 122 120 121 8 (set (reg:SI 183)
        (const_int 0 [0])) "../src/io.f":233 82 {*movsi_internal}
     (nil))
(insn 121 122 123 8 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [1 ilen+0 S4 A32])
            (const_int 0 [0]))) "../src/io.f":233 3 {*cmpsi_ccno_1}
     (nil))
(insn 123 121 124 8 (set (reg:SI 156 [ _97 ])
        (if_then_else:SI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [1 ilen+0 S4 A32])
            (reg:SI 183))) "../src/io.f":233 966 {*movsicc_noc}
     (expr_list:REG_DEAD (reg:SI 183)
        (expr_list:REG_DEAD (reg:CCGOC 17 flags)
            (nil))))
(insn 124 123 125 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 156 [ _97 ])
            (const_int 0 [0]))) "../src/io.f":233 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 125 124 126 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 148)
            (pc))) "../src/io.f":233 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 148)
;;  succ:       9 (FALLTHRU)
;;              11
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 155 156

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (RTL)
;;  pred:       8 (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 155 156
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 155 156
;; lr  def 	 17 [flags] 108 109 111 112
(note 126 125 127 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 127 126 128 9 (set (reg:DI 108 [ _22 ])
        (sign_extend:DI (reg:SI 156 [ _97 ]))) "../src/io.f":233 145 {*extendsidi2_rex64}
     (nil))
(insn 128 127 129 9 (set (reg:DI 109 [ _23 ])
        (sign_extend:DI (reg:SI 155 [ _96 ]))) "../src/io.f":233 145 {*extendsidi2_rex64}
     (nil))
(insn 129 128 131 9 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 108 [ _22 ])
            (reg:DI 109 [ _23 ]))) "../src/io.f":233 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg:DI 109 [ _23 ])
        (expr_list:REG_DEAD (reg:DI 108 [ _22 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 131 129 132 9 (set (reg:DI 111 [ _25 ])
        (sign_extend:DI (reg:SI 155 [ _96 ]))) "../src/io.f":233 145 {*extendsidi2_rex64}
     (nil))
(insn 132 131 133 9 (set (reg:DI 112 [ _26 ])
        (sign_extend:DI (reg:SI 156 [ _97 ]))) "../src/io.f":233 145 {*extendsidi2_rex64}
     (nil))
(insn 133 132 134 9 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 111 [ _25 ])
            (reg:DI 112 [ _26 ]))) "../src/io.f":233 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg:DI 112 [ _26 ])
        (expr_list:REG_DEAD (reg:DI 111 [ _25 ])
            (nil))))
(jump_insn 134 133 135 9 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 148)
            (pc))) "../src/io.f":233 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (nil))
 -> 148)
;;  succ:       10 (FALLTHRU)
;;              11
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 155 156

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (RTL)
;;  pred:       9 (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 155 156
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 155 156
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 113 114 115 116 117 184
(note 135 134 136 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 136 135 137 10 (set (reg:DI 113 [ _27 ])
        (sign_extend:DI (reg:SI 156 [ _97 ]))) "../src/io.f":233 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 156 [ _97 ])
        (nil)))
(insn 137 136 138 10 (set (reg:DI 114 [ _28 ])
        (sign_extend:DI (reg:SI 155 [ _96 ]))) "../src/io.f":233 145 {*extendsidi2_rex64}
     (nil))
(insn 138 137 139 10 (parallel [
            (set (reg:DI 115 [ _29 ])
                (minus:DI (reg:DI 113 [ _27 ])
                    (reg:DI 114 [ _28 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":233 274 {*subdi_1}
     (expr_list:REG_DEAD (reg:DI 114 [ _28 ])
        (expr_list:REG_DEAD (reg:DI 113 [ _27 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 139 138 140 10 (set (reg:DI 116 [ _30 ])
        (sign_extend:DI (reg:SI 155 [ _96 ]))) "../src/io.f":233 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 155 [ _96 ])
        (nil)))
(insn 140 139 141 10 (parallel [
            (set (reg:DI 184)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -176 [0xffffffffffffff50])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":233 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 141 140 142 10 (parallel [
            (set (reg/f:DI 117 [ _31 ])
                (plus:DI (reg:DI 184)
                    (reg:DI 116 [ _30 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":233 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 184)
        (expr_list:REG_DEAD (reg:DI 116 [ _30 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 142 141 143 10 (set (reg:DI 1 dx)
        (reg:DI 115 [ _29 ])) "../src/io.f":233 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 115 [ _29 ])
        (nil)))
(insn 143 142 144 10 (set (reg:SI 4 si)
        (const_int 32 [0x20])) "../src/io.f":233 82 {*movsi_internal}
     (nil))
(insn 144 143 145 10 (set (reg:DI 5 di)
        (reg/f:DI 117 [ _31 ])) "../src/io.f":233 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 117 [ _31 ])
        (nil)))
(call_insn 145 144 148 10 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memset") [flags 0x41]  <function_decl 0x14386f600 __builtin_memset>) [0 __builtin_memset S1 A8])
            (const_int 0 [0]))) "../src/io.f":233 665 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       11 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (RTL)
;;  pred:       7
;;              10 (FALLTHRU)
;;              8
;;              9
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 157 185 186 187
(code_label 148 145 149 11 4 (nil) [3 uses])
(note 149 148 150 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 150 149 151 11 (set (reg/f:DI 185)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -680 [0xfffffffffffffd58])) [11 n+0 S8 A64])) "../src/io.f":235 81 {*movdi_internal}
     (nil))
(insn 151 150 152 11 (set (reg:SI 186)
        (mem:SI (reg/f:DI 185) [1 *n_99(D)+0 S4 A32])) "../src/io.f":235 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 185)
        (nil)))
(insn 152 151 153 11 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [1 ninp+0 S4 A32])
        (reg:SI 186)) "../src/io.f":235 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 186)
        (nil)))
(insn 153 152 154 11 (set (reg/f:DI 187)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -680 [0xfffffffffffffd58])) [11 n+0 S8 A64])) "../src/io.f":238 81 {*movdi_internal}
     (nil))
(insn 154 153 155 11 (set (mem:SI (reg/f:DI 187) [1 *n_99(D)+0 S4 A32])
        (const_int 0 [0])) "../src/io.f":238 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 187)
        (nil)))
(insn 155 154 156 11 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])
        (const_int 1 [0x1])) "../src/io.f":239 82 {*movsi_internal}
     (nil))
(insn 156 155 157 11 (set (reg:SI 157 [ _103 ])
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [1 ilen+0 S4 A32])) "../src/io.f":240 82 {*movsi_internal}
     (nil))
(insn 157 156 252 11 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 ipass+0 S4 A32])
        (const_int 1 [0x1])) "../src/io.f":240 82 {*movsi_internal}
     (nil))
;;  succ:       12 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 157

;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (RTL)
;;  pred:       11 (FALLTHRU)
;;              21 [100.0%] 
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 157
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 157
;; lr  def 	 17 [flags] 158
(code_label 252 157 158 12 11 (nil) [1 uses])
(note 158 252 159 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 159 158 160 12 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 ipass+0 S4 A32])
            (reg:SI 157 [ _103 ]))) "../src/io.f":240 7 {*cmpsi_1}
     (nil))
(insn 160 159 161 12 (set (reg:QI 158 [ _105 ])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "../src/io.f":240 613 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil)))
(insn 161 160 162 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 158 [ _105 ])
            (const_int 0 [0]))) "../src/io.f":240 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 158 [ _105 ])
        (nil)))
(jump_insn 162 161 163 12 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 361)
            (pc))) "../src/io.f":240 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 361)
;;  succ:       34
;;              13 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 157

;; basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 14, flags: (RTL)
;;  pred:       12 (FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 157
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 118 119 120 121 122 123 124 125 126 127 128 129 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204
(note 163 162 164 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 164 163 165 13 (parallel [
            (set (reg:DI 188)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -176 [0xffffffffffffff50])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":242 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 165 164 166 13 (set (reg:SI 190)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])) "../src/io.f":242 82 {*movsi_internal}
     (nil))
(insn 166 165 167 13 (parallel [
            (set (reg:SI 189)
                (plus:SI (reg:SI 190)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":242 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 190)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff]))
                (nil)))))
(insn 167 166 168 13 (set (reg:DI 191)
        (sign_extend:DI (reg:SI 189))) "../src/io.f":242 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 189)
        (nil)))
(insn 168 167 169 13 (parallel [
            (set (reg/f:DI 118 [ _32 ])
                (plus:DI (reg:DI 188)
                    (reg:DI 191)))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":242 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 191)
        (expr_list:REG_DEAD (reg:DI 188)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 169 168 170 13 (set (reg:SI 192)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [1 ilenp+0 S4 A32])) "../src/io.f":242 82 {*movsi_internal}
     (nil))
(insn 170 169 171 13 (parallel [
            (set (reg:SI 119 [ _33 ])
                (minus:SI (reg:SI 192)
                    (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":242 273 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 192)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -20 [0xffffffffffffffec])) [1 ilenp+0 S4 A32])
                    (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32]))
                (nil)))))
(insn 171 170 173 13 (parallel [
            (set (reg:SI 120 [ _34 ])
                (plus:SI (reg:SI 119 [ _33 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":242 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 119 [ _33 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 173 171 172 13 (set (reg:SI 193)
        (const_int 0 [0])) "../src/io.f":242 82 {*movsi_internal}
     (nil))
(insn 172 173 174 13 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 120 [ _34 ])
            (const_int 0 [0]))) "../src/io.f":242 3 {*cmpsi_ccno_1}
     (nil))
(insn 174 172 175 13 (set (reg:SI 121 [ _35 ])
        (if_then_else:SI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:SI 120 [ _34 ])
            (reg:SI 193))) "../src/io.f":242 966 {*movsicc_noc}
     (expr_list:REG_DEAD (reg:SI 193)
        (expr_list:REG_DEAD (reg:SI 120 [ _34 ])
            (expr_list:REG_DEAD (reg:CCGOC 17 flags)
                (nil)))))
(insn 175 174 176 13 (set (reg:SI 37 r8)
        (const_int 0 [0])) "../src/io.f":242 82 {*movsi_internal}
     (nil))
(insn 176 175 177 13 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*lC2") [flags 0x2]  <var_decl 0x143b722d0 *lC2>)) "../src/io.f":242 81 {*movdi_internal}
     (nil))
(insn 177 176 178 13 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) "../src/io.f":242 82 {*movsi_internal}
     (nil))
(insn 178 177 179 13 (set (reg:DI 4 si)
        (reg/f:DI 118 [ _32 ])) "../src/io.f":242 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 118 [ _32 ])
        (nil)))
(insn 179 178 180 13 (set (reg:SI 5 di)
        (reg:SI 121 [ _35 ])) "../src/io.f":242 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 121 [ _35 ])
        (nil)))
(call_insn/i 180 179 181 13 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_gfortran_string_index") [flags 0x41]  <function_decl 0x1439c4a00 _gfortran_string_index>) [0 _gfortran_string_index S1 A8])
            (const_int 0 [0]))) "../src/io.f":242 665 {*call_value}
     (expr_list:REG_DEAD (reg:SI 37 r8)
        (expr_list:REG_DEAD (reg:SI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:SI 1 dx)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (nil)))))))
(insn 181 180 182 13 (set (reg:SI 122 [ _36 ])
        (reg:SI 0 ax)) "../src/io.f":242 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 182 181 183 13 (set (reg:SI 194)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])) "../src/io.f":242 82 {*movsi_internal}
     (nil))
(insn 183 182 184 13 (parallel [
            (set (reg:SI 123 [ _37 ])
                (plus:SI (reg:SI 122 [ _36 ])
                    (reg:SI 194)))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":242 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 194)
        (expr_list:REG_DEAD (reg:SI 122 [ _36 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:SI (reg:SI 122 [ _36 ])
                        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                                (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32]))
                    (nil))))))
(insn 184 183 185 13 (parallel [
            (set (reg:SI 195)
                (plus:SI (reg:SI 123 [ _37 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":242 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 123 [ _37 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 185 184 186 13 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -28 [0xffffffffffffffe4])) [1 kspace+0 S4 A32])
        (reg:SI 195)) "../src/io.f":242 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 195)
        (nil)))
(insn 186 185 187 13 (parallel [
            (set (reg:DI 196)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -176 [0xffffffffffffff50])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":243 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 187 186 188 13 (set (reg:SI 198)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])) "../src/io.f":243 82 {*movsi_internal}
     (nil))
(insn 188 187 189 13 (parallel [
            (set (reg:SI 197)
                (plus:SI (reg:SI 198)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":243 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 198)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff]))
                (nil)))))
(insn 189 188 190 13 (set (reg:DI 199)
        (sign_extend:DI (reg:SI 197))) "../src/io.f":243 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 197)
        (nil)))
(insn 190 189 191 13 (parallel [
            (set (reg/f:DI 124 [ _38 ])
                (plus:DI (reg:DI 196)
                    (reg:DI 199)))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":243 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 199)
        (expr_list:REG_DEAD (reg:DI 196)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 191 190 192 13 (set (reg:SI 200)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [1 ilenp+0 S4 A32])) "../src/io.f":243 82 {*movsi_internal}
     (nil))
(insn 192 191 193 13 (parallel [
            (set (reg:SI 125 [ _39 ])
                (minus:SI (reg:SI 200)
                    (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":243 273 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 200)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -20 [0xffffffffffffffec])) [1 ilenp+0 S4 A32])
                    (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32]))
                (nil)))))
(insn 193 192 195 13 (parallel [
            (set (reg:SI 126 [ _40 ])
                (plus:SI (reg:SI 125 [ _39 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":243 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 125 [ _39 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 195 193 194 13 (set (reg:SI 201)
        (const_int 0 [0])) "../src/io.f":243 82 {*movsi_internal}
     (nil))
(insn 194 195 196 13 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 126 [ _40 ])
            (const_int 0 [0]))) "../src/io.f":243 3 {*cmpsi_ccno_1}
     (nil))
(insn 196 194 197 13 (set (reg:SI 127 [ _41 ])
        (if_then_else:SI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:SI 126 [ _40 ])
            (reg:SI 201))) "../src/io.f":243 966 {*movsicc_noc}
     (expr_list:REG_DEAD (reg:SI 201)
        (expr_list:REG_DEAD (reg:SI 126 [ _40 ])
            (expr_list:REG_DEAD (reg:CCGOC 17 flags)
                (nil)))))
(insn 197 196 198 13 (set (reg:SI 37 r8)
        (const_int 0 [0])) "../src/io.f":243 82 {*movsi_internal}
     (nil))
(insn 198 197 199 13 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*lC3") [flags 0x2]  <var_decl 0x143b72360 *lC3>)) "../src/io.f":243 81 {*movdi_internal}
     (nil))
(insn 199 198 200 13 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) "../src/io.f":243 82 {*movsi_internal}
     (nil))
(insn 200 199 201 13 (set (reg:DI 4 si)
        (reg/f:DI 124 [ _38 ])) "../src/io.f":243 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 124 [ _38 ])
        (nil)))
(insn 201 200 202 13 (set (reg:SI 5 di)
        (reg:SI 127 [ _41 ])) "../src/io.f":243 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 127 [ _41 ])
        (nil)))
(call_insn/i 202 201 203 13 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_gfortran_string_index") [flags 0x41]  <function_decl 0x1439c4a00 _gfortran_string_index>) [0 _gfortran_string_index S1 A8])
            (const_int 0 [0]))) "../src/io.f":243 665 {*call_value}
     (expr_list:REG_DEAD (reg:SI 37 r8)
        (expr_list:REG_DEAD (reg:SI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:SI 1 dx)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (nil)))))))
(insn 203 202 204 13 (set (reg:SI 128 [ _42 ])
        (reg:SI 0 ax)) "../src/io.f":243 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 204 203 205 13 (set (reg:SI 202)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])) "../src/io.f":243 82 {*movsi_internal}
     (nil))
(insn 205 204 206 13 (parallel [
            (set (reg:SI 129 [ _43 ])
                (plus:SI (reg:SI 128 [ _42 ])
                    (reg:SI 202)))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":243 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 202)
        (expr_list:REG_DEAD (reg:SI 128 [ _42 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:SI (reg:SI 128 [ _42 ])
                        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                                (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32]))
                    (nil))))))
(insn 206 205 207 13 (parallel [
            (set (reg:SI 203)
                (plus:SI (reg:SI 129 [ _43 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":243 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 129 [ _43 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 207 206 208 13 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [1 kcomma+0 S4 A32])
        (reg:SI 203)) "../src/io.f":243 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 203)
        (nil)))
(insn 208 207 209 13 (set (reg:SI 204)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])) "../src/io.f":245 82 {*movsi_internal}
     (nil))
(insn 209 208 210 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 204)
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -28 [0xffffffffffffffe4])) [1 kspace+0 S4 A32]))) "../src/io.f":245 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 204)
        (nil)))
(jump_insn 210 209 211 13 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 215)
            (pc))) "../src/io.f":245 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 215)
;;  succ:       14 (FALLTHRU)
;;              15
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 157

;; basic block 14, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 13, next block 15, flags: (RTL)
;;  pred:       13 (FALLTHRU)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 157
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 211 210 212 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 212 211 349 14 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":247 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 349 212 350 14 (set (pc)
        (label_ref 245)) "../src/io.f":248 649 {jump}
     (nil)
 -> 245)
;;  succ:       20 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 157

(barrier 350 349 215)
;; basic block 15, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 14, next block 16, flags: (RTL)
;;  pred:       13
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 157
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 205
(code_label 215 350 216 15 7 (nil) [1 uses])
(note 216 215 217 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 217 216 218 15 (set (reg:SI 205)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])) "../src/io.f":251 82 {*movsi_internal}
     (nil))
(insn 218 217 219 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 205)
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -32 [0xffffffffffffffe0])) [1 kcomma+0 S4 A32]))) "../src/io.f":251 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 205)
        (nil)))
(jump_insn 219 218 220 15 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 229)
            (pc))) "../src/io.f":251 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 229)
;;  succ:       16 (FALLTHRU)
;;              17
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 157

;; basic block 16, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 15, next block 17, flags: (RTL)
;;  pred:       15 (FALLTHRU)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 157
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 130 131 206 207
(note 220 219 221 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 221 220 222 16 (set (reg/f:DI 206)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -680 [0xfffffffffffffd58])) [11 n+0 S8 A64])) "../src/io.f":253 81 {*movdi_internal}
     (nil))
(insn 222 221 223 16 (set (reg:SI 130 [ _44 ])
        (mem:SI (reg/f:DI 206) [1 *n_99(D)+0 S4 A32])) "../src/io.f":253 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 206)
        (nil)))
(insn 223 222 224 16 (parallel [
            (set (reg:SI 131 [ _45 ])
                (plus:SI (reg:SI 130 [ _44 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":253 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 130 [ _44 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 224 223 225 16 (set (reg/f:DI 207)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -680 [0xfffffffffffffd58])) [11 n+0 S8 A64])) "../src/io.f":253 81 {*movdi_internal}
     (nil))
(insn 225 224 226 16 (set (mem:SI (reg/f:DI 207) [1 *n_99(D)+0 S4 A32])
        (reg:SI 131 [ _45 ])) "../src/io.f":253 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 207)
        (expr_list:REG_DEAD (reg:SI 131 [ _45 ])
            (nil))))
(insn 226 225 351 16 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":254 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 351 226 352 16 (set (pc)
        (label_ref 245)) "../src/io.f":255 649 {jump}
     (nil)
 -> 245)
;;  succ:       20 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 157

(barrier 352 351 229)
;; basic block 17, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 16, next block 18, flags: (RTL)
;;  pred:       15
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 157
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 132 133 144 208 209
(code_label 229 352 230 17 9 (nil) [1 uses])
(note 230 229 231 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 231 230 232 17 (set (reg/f:DI 208)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -680 [0xfffffffffffffd58])) [11 n+0 S8 A64])) "../src/io.f":260 81 {*movdi_internal}
     (nil))
(insn 232 231 233 17 (set (reg:SI 132 [ _46 ])
        (mem:SI (reg/f:DI 208) [1 *n_99(D)+0 S4 A32])) "../src/io.f":260 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 208)
        (nil)))
(insn 233 232 234 17 (parallel [
            (set (reg:SI 133 [ _47 ])
                (plus:SI (reg:SI 132 [ _46 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":260 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 132 [ _46 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 234 233 235 17 (set (reg/f:DI 209)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -680 [0xfffffffffffffd58])) [11 n+0 S8 A64])) "../src/io.f":260 81 {*movdi_internal}
     (nil))
(insn 235 234 236 17 (set (mem:SI (reg/f:DI 209) [1 *n_99(D)+0 S4 A32])
        (reg:SI 133 [ _47 ])) "../src/io.f":260 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 209)
        (expr_list:REG_DEAD (reg:SI 133 [ _47 ])
            (nil))))
(insn 236 235 237 17 (set (reg:SI 144 [ M.2_62 ])
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -28 [0xffffffffffffffe4])) [1 kspace+0 S4 A32])) "../src/io.f":261 82 {*movsi_internal}
     (nil))
(insn 237 236 238 17 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -32 [0xffffffffffffffe0])) [1 kcomma+0 S4 A32])
            (reg:SI 144 [ M.2_62 ]))) "../src/io.f":261 7 {*cmpsi_1}
     (nil))
(jump_insn 238 237 239 17 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 241)
            (pc))) "../src/io.f":261 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 241)
;;  succ:       18 (FALLTHRU)
;;              19
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 144 157

;; basic block 18, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 17, next block 19, flags: (RTL)
;;  pred:       17 (FALLTHRU)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 157
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 144
(note 239 238 240 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 240 239 241 18 (set (reg:SI 144 [ M.2_62 ])
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [1 kcomma+0 S4 A32])) "../src/io.f":261 82 {*movsi_internal}
     (nil))
;;  succ:       19 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 144 157

;; basic block 19, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 18, next block 20, flags: (RTL)
;;  pred:       17
;;              18 (FALLTHRU)
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 144 157
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 144
;; lr  def 	 17 [flags] 210
(code_label 241 240 242 19 10 (nil) [1 uses])
(note 242 241 243 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 243 242 244 19 (parallel [
            (set (reg:SI 210)
                (plus:SI (reg:SI 144 [ M.2_62 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":261 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 144 [ M.2_62 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 244 243 245 19 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])
        (reg:SI 210)) "../src/io.f":261 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 210)
        (nil)))
;;  succ:       20 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 157

;; basic block 20, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 19, next block 21, flags: (RTL)
;;  pred:       19 (FALLTHRU)
;;              14 [100.0%] 
;;              16 [100.0%] 
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 157
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 211
(code_label 245 244 246 20 8 (nil) [2 uses])
(note 246 245 247 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 247 246 248 20 (set (reg:SI 211)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])) "../src/io.f":263 82 {*movsi_internal}
     (nil))
(insn 248 247 249 20 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 211)
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [1 ilen+0 S4 A32]))) "../src/io.f":263 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 211)
        (nil)))
(jump_insn 249 248 250 20 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 361)
            (pc))) "../src/io.f":263 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 361)
;;  succ:       34
;;              21 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 157

;; basic block 21, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 20, next block 34, flags: (RTL)
;;  pred:       20 (FALLTHRU)
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 157
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 250 249 251 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 251 250 353 21 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [1 ipass+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [1 ipass+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":240 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 353 251 354 21 (set (pc)
        (label_ref 252)) "../src/io.f":240 649 {jump}
     (nil)
 -> 252)
;;  succ:       12 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 157

(barrier 354 353 361)
;; basic block 34, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 21, next block 22, flags: (RTL)
;;  pred:       12
;;              20
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 361 354 360 34 21 (nil) [2 uses])
(note 360 361 362 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 362 360 255 34 (const_int 0 [0]) "../src/io.f":264 682 {nop}
     (nil))
;;  succ:       22 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 22, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 34, next block 23, flags: (RTL)
;;  pred:       34 [100.0%]  (FALLTHRU)
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 255 362 256 22 6 (nil) [0 uses])
(note 256 255 257 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 257 256 258 22 (set (reg:CCNO 17 flags)
        (compare:CCNO (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -24 [0xffffffffffffffe8])) [1 ninp+0 S4 A32])
            (const_int 0 [0]))) "../src/io.f":267 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 258 257 259 22 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 270)
            (pc))) "../src/io.f":267 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (nil))
 -> 270)
;;  succ:       23 (FALLTHRU)
;;              26
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 23, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 22, next block 24, flags: (RTL)
;;  pred:       22 (FALLTHRU)
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 145 212
(note 259 258 260 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 260 259 261 23 (set (reg/f:DI 212)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -680 [0xfffffffffffffd58])) [11 n+0 S8 A64])) "../src/io.f":267 81 {*movdi_internal}
     (nil))
(insn 261 260 262 23 (set (reg:SI 145 [ M.3_63 ])
        (mem:SI (reg/f:DI 212) [1 *n_99(D)+0 S4 A32])) "../src/io.f":267 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 212)
        (nil)))
(insn 262 261 263 23 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -24 [0xffffffffffffffe8])) [1 ninp+0 S4 A32])
            (reg:SI 145 [ M.3_63 ]))) "../src/io.f":267 7 {*cmpsi_1}
     (nil))
(jump_insn 263 262 264 23 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 266)
            (pc))) "../src/io.f":267 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 266)
;;  succ:       24 (FALLTHRU)
;;              25
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 145

;; basic block 24, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 23, next block 25, flags: (RTL)
;;  pred:       23 (FALLTHRU)
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 145
(note 264 263 265 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 265 264 266 24 (set (reg:SI 145 [ M.3_63 ])
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [1 ninp+0 S4 A32])) "../src/io.f":267 82 {*movsi_internal}
     (nil))
;;  succ:       25 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 145

;; basic block 25, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 24, next block 26, flags: (RTL)
;;  pred:       23
;;              24 (FALLTHRU)
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 145
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 145
;; lr  def 	 213
(code_label 266 265 267 25 13 (nil) [1 uses])
(note 267 266 268 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 268 267 269 25 (set (reg/f:DI 213)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -680 [0xfffffffffffffd58])) [11 n+0 S8 A64])) "../src/io.f":267 81 {*movdi_internal}
     (nil))
(insn 269 268 270 25 (set (mem:SI (reg/f:DI 213) [1 *n_99(D)+0 S4 A32])
        (reg:SI 145 [ M.3_63 ])) "../src/io.f":267 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 213)
        (expr_list:REG_DEAD (reg:SI 145 [ M.3_63 ])
            (nil))))
;;  succ:       26 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 26, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 25, next block 27, flags: (RTL)
;;  pred:       22
;;              25 (FALLTHRU)
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 134 159 214 215 216 217 218
(code_label 270 269 271 26 12 (nil) [1 uses])
(note 271 270 272 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 272 271 273 26 (set (reg/f:DI 214)
        (symbol_ref/f:DI ("*lC4") [flags 0x2]  <var_decl 0x143b723f0 *lC4>)) "../src/io.f":268 81 {*movdi_internal}
     (nil))
(insn 273 272 274 26 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -648 [0xfffffffffffffd78])) [5 dt_parm.4.common.filename+0 S8 A64])
        (reg/f:DI 214)) "../src/io.f":268 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 214)
        (nil)))
(insn 274 273 275 26 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -640 [0xfffffffffffffd80])) [1 dt_parm.4.common.line+0 S4 A128])
        (const_int 268 [0x10c])) "../src/io.f":268 82 {*movsi_internal}
     (nil))
(insn 275 274 276 26 (parallel [
            (set (reg:DI 215)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -176 [0xffffffffffffff50])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":268 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 276 275 278 26 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -560 [0xfffffffffffffdd0])) [5 dt_parm.4.internal_unit+0 S8 A128])
        (reg:DI 215)) "../src/io.f":268 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 215)
        (nil)))
(insn 278 276 277 26 (set (reg:SI 216)
        (const_int 0 [0])) "../src/io.f":268 82 {*movsi_internal}
     (nil))
(insn 277 278 279 26 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [1 ilen+0 S4 A32])
            (const_int 0 [0]))) "../src/io.f":268 3 {*cmpsi_ccno_1}
     (nil))
(insn 279 277 280 26 (set (reg:SI 134 [ _48 ])
        (if_then_else:SI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [1 ilen+0 S4 A32])
            (reg:SI 216))) "../src/io.f":268 966 {*movsicc_noc}
     (expr_list:REG_DEAD (reg:SI 216)
        (expr_list:REG_DEAD (reg:CCGOC 17 flags)
            (nil))))
(insn 280 279 281 26 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -552 [0xfffffffffffffdd8])) [1 dt_parm.4.internal_unit_len+0 S4 A64])
        (reg:SI 134 [ _48 ])) "../src/io.f":268 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 134 [ _48 ])
        (nil)))
(insn 281 280 282 26 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -592 [0xfffffffffffffdb0])) [5 dt_parm.4.internal_unit_desc+0 S8 A128])
        (const_int 0 [0])) "../src/io.f":268 81 {*movdi_internal}
     (nil))
(insn 282 281 283 26 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -652 [0xfffffffffffffd74])) [1 dt_parm.4.common.unit+0 S4 A32])
        (const_int -1 [0xffffffffffffffff])) "../src/io.f":268 82 {*movsi_internal}
     (nil))
(insn 283 282 284 26 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -656 [0xfffffffffffffd70])) [1 dt_parm.4.common.flags+0 S4 A128])
        (const_int 16516 [0x4084])) "../src/io.f":268 82 {*movsi_internal}
     (nil))
(insn 284 283 285 26 (parallel [
            (set (reg:DI 217)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -656 [0xfffffffffffffd70])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":268 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 285 284 286 26 (set (reg:DI 5 di)
        (reg:DI 217)) "../src/io.f":268 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 217)
        (nil)))
(call_insn 286 285 287 26 (call (mem:QI (symbol_ref:DI ("_gfortran_st_read") [flags 0x41]  <function_decl 0x1439e0700 _gfortran_st_read>) [0 _gfortran_st_read S1 A8])
        (const_int 0 [0])) "../src/io.f":268 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 287 286 288 26 (set (reg/f:DI 218)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -680 [0xfffffffffffffd58])) [11 n+0 S8 A64])) "../src/io.f":268 81 {*movdi_internal}
     (nil))
(insn 288 287 289 26 (set (reg:SI 159 [ _128 ])
        (mem:SI (reg/f:DI 218) [1 *n_99(D)+0 S4 A32])) "../src/io.f":268 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 218)
        (nil)))
(insn 289 288 315 26 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
        (const_int 1 [0x1])) "../src/io.f":268 82 {*movsi_internal}
     (nil))
;;  succ:       27 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 159

;; basic block 27, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 26, next block 28, flags: (RTL)
;;  pred:       26 (FALLTHRU)
;;              29 [100.0%] 
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 159
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 135 136 137
(code_label 315 289 290 27 15 (nil) [1 uses])
(note 290 315 291 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 291 290 292 27 (set (reg:SI 135 [ _49 ])
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -656 [0xfffffffffffffd70])) [1 dt_parm.4.common.flags+0 S4 A128])) "../src/io.f":268 82 {*movsi_internal}
     (nil))
(insn 292 291 293 27 (parallel [
            (set (reg:SI 136 [ _50 ])
                (and:SI (reg:SI 135 [ _49 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":268 391 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 135 [ _49 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 293 292 294 27 (set (reg:QI 137 [ _51 ])
        (subreg:QI (reg:SI 136 [ _50 ]) 0)) "../src/io.f":268 84 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 136 [ _50 ])
        (nil)))
(insn 294 293 295 27 (parallel [
            (set (reg:QI 137 [ _51 ])
                (and:QI (reg:QI 137 [ _51 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":268 392 {*andqi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 295 294 296 27 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 137 [ _51 ])
            (const_int 0 [0]))) "../src/io.f":268 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 137 [ _51 ])
        (nil)))
(jump_insn 296 295 297 27 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 364)
            (pc))) "../src/io.f":268 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 364)
;;  succ:       35
;;              28 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 159

;; basic block 28, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 27, next block 29, flags: (RTL)
;;  pred:       27 (FALLTHRU)
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 159
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 159
;; lr  def 	 17 [flags] 160
(note 297 296 298 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 298 297 299 28 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
            (reg:SI 159 [ _128 ]))) "../src/io.f":268 7 {*cmpsi_1}
     (nil))
(insn 299 298 300 28 (set (reg:QI 160 [ _130 ])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "../src/io.f":268 613 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil)))
(insn 300 299 301 28 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 160 [ _130 ])
            (const_int 0 [0]))) "../src/io.f":268 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 160 [ _130 ])
        (nil)))
(jump_insn 301 300 302 28 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 364)
            (pc))) "../src/io.f":268 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 364)
;;  succ:       35
;;              29 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 159

;; basic block 29, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 28, next block 35, flags: (RTL)
;;  pred:       28 (FALLTHRU)
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 159
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 138 139 140 219 220 221 222
(note 302 301 303 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 303 302 304 29 (set (reg:SI 219)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/io.f":268 82 {*movsi_internal}
     (nil))
(insn 304 303 305 29 (set (reg:DI 138 [ _52 ])
        (sign_extend:DI (reg:SI 219))) "../src/io.f":268 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 219)
        (nil)))
(insn 305 304 306 29 (parallel [
            (set (reg:DI 139 [ _53 ])
                (plus:DI (reg:DI 138 [ _52 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":268 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 138 [ _52 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 306 305 307 29 (parallel [
            (set (reg:DI 220)
                (ashift:DI (reg:DI 139 [ _53 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":268 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 139 [ _53 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 307 306 308 29 (set (reg/f:DI 221)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -672 [0xfffffffffffffd60])) [6 a+0 S8 A64])) "../src/io.f":268 81 {*movdi_internal}
     (nil))
(insn 308 307 309 29 (parallel [
            (set (reg/f:DI 140 [ _54 ])
                (plus:DI (reg:DI 220)
                    (reg/f:DI 221)))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":268 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 221)
        (expr_list:REG_DEAD (reg:DI 220)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -672 [0xfffffffffffffd60])) [6 a+0 S8 A64])
                        (reg:DI 220))
                    (nil))))))
(insn 309 308 310 29 (parallel [
            (set (reg:DI 222)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -656 [0xfffffffffffffd70])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":268 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 310 309 311 29 (set (reg:SI 1 dx)
        (const_int 4 [0x4])) "../src/io.f":268 82 {*movsi_internal}
     (nil))
(insn 311 310 312 29 (set (reg:DI 4 si)
        (reg/f:DI 140 [ _54 ])) "../src/io.f":268 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 140 [ _54 ])
        (nil)))
(insn 312 311 313 29 (set (reg:DI 5 di)
        (reg:DI 222)) "../src/io.f":268 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 222)
        (nil)))
(call_insn 313 312 314 29 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_integer") [flags 0x41]  <function_decl 0x1439d4400 _gfortran_transfer_integer>) [0 _gfortran_transfer_integer S1 A8])
        (const_int 0 [0])) "../src/io.f":268 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 314 313 355 29 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":268 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 355 314 356 29 (set (pc)
        (label_ref 315)) "../src/io.f":268 649 {jump}
     (nil)
 -> 315)
;;  succ:       27 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 159

(barrier 356 355 364)
;; basic block 35, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 29, next block 30, flags: (RTL)
;;  pred:       27
;;              28
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 364 356 363 35 22 (nil) [2 uses])
(note 363 364 365 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 365 363 318 35 (const_int 0 [0]) "../src/io.f":268 682 {nop}
     (nil))
;;  succ:       30 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 30, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 35, next block 31, flags: (RTL)
;;  pred:       35 [100.0%]  (FALLTHRU)
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 141 142 223
(code_label 318 365 319 30 14 (nil) [0 uses])
(note 319 318 320 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 320 319 321 30 (parallel [
            (set (reg:DI 223)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -656 [0xfffffffffffffd70])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":268 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 321 320 322 30 (set (reg:DI 5 di)
        (reg:DI 223)) "../src/io.f":268 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 223)
        (nil)))
(call_insn 322 321 323 30 (call (mem:QI (symbol_ref:DI ("_gfortran_st_read_done") [flags 0x41]  <function_decl 0x1439e4200 _gfortran_st_read_done>) [0 _gfortran_st_read_done S1 A8])
        (const_int 0 [0])) "../src/io.f":268 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 323 322 324 30 (set (reg:SI 141 [ _55 ])
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -656 [0xfffffffffffffd70])) [1 dt_parm.4.common.flags+0 S4 A128])) "../src/io.f":268 82 {*movsi_internal}
     (nil))
(insn 324 323 325 30 (parallel [
            (set (reg:SI 142 [ _56 ])
                (and:SI (reg:SI 141 [ _55 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":268 391 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 141 [ _55 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 325 324 326 30 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 142 [ _56 ])
            (const_int 1 [0x1]))) "../src/io.f":268 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 142 [ _56 ])
        (nil)))
(jump_insn 326 325 330 30 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 357)
            (pc))) "../src/io.f":268 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 357)
;;  succ:       31 (FALLTHRU)
;;              32
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 31, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 30, next block 32, flags: (RTL)
;;  pred:       30 (FALLTHRU)
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 224 225
(note 330 326 329 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(note 329 330 331 31 ("L.10") NOTE_INSN_DELETED_LABEL 17)
(insn 331 329 332 31 (set (reg/f:DI 224)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -680 [0xfffffffffffffd58])) [11 n+0 S8 A64])) "../src/io.f":275 81 {*movdi_internal}
     (nil))
(insn 332 331 333 31 (set (mem:SI (reg/f:DI 224) [1 *n_99(D)+0 S4 A32])
        (const_int 0 [0])) "../src/io.f":275 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 224)
        (nil)))
(insn 333 332 334 31 (set (reg/f:DI 225)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -688 [0xfffffffffffffd50])) [12 error+0 S8 A64])) "../src/io.f":276 81 {*movdi_internal}
     (nil))
(insn 334 333 358 31 (set (mem:SI (reg/f:DI 225) [13 *error_137(D)+0 S4 A32])
        (const_int 1 [0x1])) "../src/io.f":276 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 225)
        (nil)))
(jump_insn 358 334 359 31 (set (pc)
        (label_ref 345)) "../src/io.f":277 649 {jump}
     (nil)
 -> 345)
;;  succ:       33 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 359 358 357)
;; basic block 32, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 31, next block 33, flags: (RTL)
;;  pred:       30
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 226
(code_label 357 359 338 32 20 (nil) [1 uses])
(note 338 357 339 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 339 338 340 32 (set (reg/f:DI 226)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -688 [0xfffffffffffffd50])) [12 error+0 S8 A64])) "../src/io.f":269 81 {*movdi_internal}
     (nil))
(insn 340 339 348 32 (set (mem:SI (reg/f:DI 226) [13 *error_137(D)+0 S4 A32])
        (const_int 0 [0])) "../src/io.f":269 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 226)
        (nil)))
(insn 348 340 345 32 (const_int 0 [0]) "../src/io.f":270 682 {nop}
     (nil))
;;  succ:       33 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 33, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 32, next block 1, flags: (RTL)
;;  pred:       32 (FALLTHRU)
;;              31 [100.0%] 
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 345 348 346 33 1 (nil) [1 uses])
(note 346 345 0 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function getflt (getflt_, funcdef_no=1, decl_uid=3552, cgraph_uid=1, symbol_order=1)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 32 n_edges 45 count 32 (    1)
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 31 29 30
;;
;; Loop 1
;;  header 8, latch 28
;;  depth 1, outer 0
;;  nodes: 8 28 27 26 16 23 22 20 21 19 17 18 15 13 14 11 12 9 10 24
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 30 7 }
;; 7 succs { 8 }
;; 8 succs { 31 9 }
;; 9 succs { 10 11 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 13 }
;; 13 succs { 14 15 }
;; 14 succs { 15 }
;; 15 succs { 16 17 }
;; 16 succs { 27 }
;; 17 succs { 18 19 }
;; 18 succs { 19 }
;; 19 succs { 31 20 }
;; 20 succs { 21 22 }
;; 21 succs { 22 }
;; 22 succs { 23 24 }
;; 23 succs { 27 }
;; 24 succs { 25 26 }
;; 25 succs { 30 }
;; 26 succs { 27 }
;; 27 succs { 31 28 }
;; 28 succs { 8 }
;; 31 succs { 29 }
;; 29 succs { 30 }
;; 30 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 27.
verify found no changes in insn with uid = 91.
verify found no changes in insn with uid = 114.
verify found no changes in insn with uid = 179.
verify found no changes in insn with uid = 247.
verify found no changes in insn with uid = 258.
verify found no changes in insn with uid = 261.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r212: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r212,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r211: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r211,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r210: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r210,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r209: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r209,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r206: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r206,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r205: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r205,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r204: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r204,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r203: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a10 (r203,l0) best DIREG, allocno GENERAL_REGS
    r202: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a11 (r202,l0) best DIREG, allocno GENERAL_REGS
    r201: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r201,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r200: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r200,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r199: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r199,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r198: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a18 (r198,l0) best DIREG, allocno GENERAL_REGS
    r197: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r197,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r196: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r196,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r195: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r195,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r194: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r194,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r193: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r193,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r192: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r192,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r191: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r191,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r190: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a31 (r190,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r189: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r189,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r186: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r186,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r185: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a34 (r185,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r184: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a36 (r184,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r183: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a35 (r183,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r180: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a38 (r180,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r179: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a39 (r179,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r178: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a41 (r178,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r177: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a45 (r177,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r176: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a48 (r176,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r175: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a49 (r175,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r174: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a50 (r174,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r173: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a52 (r173,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r172: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a51 (r172,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r171: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a53 (r171,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r170: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a56 (r170,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r169: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a55 (r169,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r166: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a58 (r166,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r165: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a60 (r165,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r164: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a59 (r164,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r161: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a62 (r161,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r160: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a63 (r160,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r159: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a65 (r159,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r158: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a69 (r158,l0) best CREG, allocno GENERAL_REGS
    r157: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a70 (r157,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r156: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a73 (r156,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r155: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a74 (r155,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r154: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a75 (r154,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r153: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a77 (r153,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r152: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a76 (r152,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r151: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a78 (r151,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r150: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a80 (r150,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r149: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a84 (r149,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r148: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a87 (r148,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r147: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a88 (r147,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r146: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a89 (r146,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r145: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a91 (r145,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r144: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a90 (r144,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a93 (r143,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a94 (r142,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a96 (r141,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a97 (r140,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a99 (r139,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a98 (r138,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a100 (r137,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a101 (r136,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a103 (r135,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a102 (r134,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r131: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a104 (r131,l0) best AREG, allocno GENERAL_REGS
    r130: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a105 (r130,l0) best DIREG, allocno GENERAL_REGS
    r129: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a106 (r129,l0) best SIREG, allocno GENERAL_REGS
    r128: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a107 (r128,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r126: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a110 (r126,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r125: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a92 (r125,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r124: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r124,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a33 (r121,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r120: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a54 (r120,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r119,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r118: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r118,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r117: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a12 (r117,l0) best SIREG, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r112: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r112,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r111,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a37 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a40 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a42 (r108,l0) best AREG, allocno GENERAL_REGS
    r107: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a43 (r107,l0) best DIREG, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a46 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a47 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a44 (r104,l0) best SIREG, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a57 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a61 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a64 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a66 (r100,l0) best AREG, allocno GENERAL_REGS
    r99: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a67 (r99,l0) best DIREG, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a71 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a72 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a68 (r96,l0) best SIREG, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a79 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a81 (r94,l0) best AREG, allocno GENERAL_REGS
    r93: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a82 (r93,l0) best DIREG, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a85 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a86 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a83 (r90,l0) best SIREG, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a95 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a108 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a109 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r212,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a1(r124,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a2(r211,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a3(r209,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a4(r210,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a5(r205,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a6(r206,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a7(r204,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a8(r119,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a9(r118,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a10(r203,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a11(r202,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a12(r117,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a13(r201,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a14(r200,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a15(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a16(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a17(r199,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a18(r198,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a19(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:8
  a20(r197,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a21(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:39 INT_SSE_REGS:27 ALL_REGS:624 MEM:10
  a22(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a23(r196,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a24(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a25(r195,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a26(r194,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a27(r192,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a28(r193,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a29(r191,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a30(r189,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a31(r190,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a32(r186,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a33(r121,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:32 NO_REX_SSE_REGS:32 SSE_REGS:32 MMX_REGS:50 INT_SSE_REGS:36 ALL_REGS:624 MEM:16
  a34(r185,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a35(r183,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a36(r184,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a37(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a38(r180,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a39(r179,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a40(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a41(r178,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a42(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a43(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a44(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a45(r177,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a46(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:39 INT_SSE_REGS:27 ALL_REGS:624 MEM:10
  a47(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a48(r176,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a49(r175,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a50(r174,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a51(r172,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a52(r173,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a53(r171,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a54(r120,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:32 NO_REX_SSE_REGS:32 SSE_REGS:32 MMX_REGS:50 INT_SSE_REGS:36 ALL_REGS:624 MEM:16
  a55(r169,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a56(r170,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a57(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a58(r166,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a59(r164,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a60(r165,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a61(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a62(r161,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a63(r160,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a64(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a65(r159,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a66(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a67(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a68(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a69(r158,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a70(r157,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a71(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:39 INT_SSE_REGS:27 ALL_REGS:624 MEM:10
  a72(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a73(r156,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a74(r155,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a75(r154,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a76(r152,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a77(r153,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a78(r151,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a79(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a80(r150,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a81(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a82(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a83(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a84(r149,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a85(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:39 INT_SSE_REGS:27 ALL_REGS:624 MEM:10
  a86(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a87(r148,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a88(r147,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a89(r146,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a90(r144,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a91(r145,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a92(r125,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7
  a93(r143,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a94(r142,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a95(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a96(r141,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a97(r140,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a98(r138,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 CLOBBERED_REGS:2 Q_REGS:2 NON_Q_REGS:2 TLS_GOTBASE_REGS:2 GENERAL_REGS:2 SSE_FIRST_REG:26 NO_REX_SSE_REGS:26 SSE_REGS:26 MMX_REGS:40 INT_SSE_REGS:29 ALL_REGS:522 MEM:12
  a99(r139,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 CLOBBERED_REGS:2 Q_REGS:2 NON_Q_REGS:2 TLS_GOTBASE_REGS:2 GENERAL_REGS:2 SSE_FIRST_REG:18 NO_REX_SSE_REGS:18 SSE_REGS:18 MMX_REGS:28 INT_SSE_REGS:20 ALL_REGS:418 MEM:8
  a100(r137,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a101(r136,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a102(r134,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a103(r135,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a104(r131,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a105(r130,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a106(r129,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a107(r128,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a108(r88,l0) costs: AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:2
  a109(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a110(r126,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7

   Insn 306(l0): point = 1
   Insn 298(l0): point = 3
   Insn 297(l0): point = 5
   Insn 318(l0): point = 8
   Insn 312(l0): point = 11
   Insn 271(l0): point = 13
   Insn 270(l0): point = 15
   Insn 73(l0): point = 18
   Insn 72(l0): point = 20
   Insn 71(l0): point = 22
   Insn 70(l0): point = 24
   Insn 314(l0): point = 27
   Insn 291(l0): point = 29
   Insn 289(l0): point = 32
   Insn 288(l0): point = 34
   Insn 287(l0): point = 36
   Insn 284(l0): point = 39
   Insn 283(l0): point = 41
   Insn 282(l0): point = 43
   Insn 278(l0): point = 45
   Insn 277(l0): point = 47
   Insn 276(l0): point = 49
   Insn 265(l0): point = 52
   Insn 264(l0): point = 54
   Insn 263(l0): point = 56
   Insn 262(l0): point = 58
   Insn 261(l0): point = 60
   Insn 260(l0): point = 62
   Insn 259(l0): point = 64
   Insn 258(l0): point = 66
   Insn 257(l0): point = 68
   Insn 256(l0): point = 70
   Insn 255(l0): point = 72
   Insn 254(l0): point = 74
   Insn 253(l0): point = 76
   Insn 252(l0): point = 78
   Insn 251(l0): point = 80
   Insn 250(l0): point = 82
   Insn 249(l0): point = 84
   Insn 248(l0): point = 86
   Insn 247(l0): point = 88
   Insn 246(l0): point = 90
   Insn 245(l0): point = 92
   Insn 244(l0): point = 94
   Insn 243(l0): point = 96
   Insn 242(l0): point = 98
   Insn 241(l0): point = 100
   Insn 240(l0): point = 102
   Insn 238(l0): point = 104
   Insn 239(l0): point = 106
   Insn 237(l0): point = 108
   Insn 236(l0): point = 110
   Insn 235(l0): point = 112
   Insn 234(l0): point = 114
   Insn 233(l0): point = 116
   Insn 232(l0): point = 118
   Insn 231(l0): point = 120
   Insn 230(l0): point = 122
   Insn 229(l0): point = 124
   Insn 228(l0): point = 126
   Insn 227(l0): point = 128
   Insn 226(l0): point = 130
   Insn 225(l0): point = 132
   Insn 224(l0): point = 134
   Insn 223(l0): point = 136
   Insn 307(l0): point = 139
   Insn 158(l0): point = 141
   Insn 309(l0): point = 144
   Insn 215(l0): point = 146
   Insn 213(l0): point = 149
   Insn 212(l0): point = 151
   Insn 211(l0): point = 153
   Insn 210(l0): point = 155
   Insn 205(l0): point = 158
   Insn 204(l0): point = 160
   Insn 203(l0): point = 162
   Insn 201(l0): point = 165
   Insn 200(l0): point = 167
   Insn 199(l0): point = 169
   Insn 198(l0): point = 171
   Insn 188(l0): point = 174
   Insn 187(l0): point = 176
   Insn 186(l0): point = 178
   Insn 185(l0): point = 180
   Insn 184(l0): point = 182
   Insn 183(l0): point = 184
   Insn 182(l0): point = 186
   Insn 181(l0): point = 188
   Insn 180(l0): point = 190
   Insn 179(l0): point = 192
   Insn 178(l0): point = 194
   Insn 177(l0): point = 196
   Insn 176(l0): point = 198
   Insn 175(l0): point = 200
   Insn 174(l0): point = 202
   Insn 173(l0): point = 204
   Insn 171(l0): point = 206
   Insn 172(l0): point = 208
   Insn 170(l0): point = 210
   Insn 169(l0): point = 212
   Insn 168(l0): point = 214
   Insn 167(l0): point = 216
   Insn 166(l0): point = 218
   Insn 165(l0): point = 220
   Insn 164(l0): point = 222
   Insn 163(l0): point = 224
   Insn 156(l0): point = 227
   Insn 155(l0): point = 229
   Insn 154(l0): point = 231
   Insn 153(l0): point = 233
   Insn 148(l0): point = 236
   Insn 147(l0): point = 238
   Insn 146(l0): point = 240
   Insn 136(l0): point = 243
   Insn 135(l0): point = 245
   Insn 134(l0): point = 247
   Insn 133(l0): point = 249
   Insn 123(l0): point = 252
   Insn 122(l0): point = 254
   Insn 121(l0): point = 256
   Insn 120(l0): point = 258
   Insn 119(l0): point = 260
   Insn 118(l0): point = 262
   Insn 117(l0): point = 264
   Insn 116(l0): point = 266
   Insn 115(l0): point = 268
   Insn 114(l0): point = 270
   Insn 113(l0): point = 272
   Insn 112(l0): point = 274
   Insn 111(l0): point = 276
   Insn 110(l0): point = 278
   Insn 109(l0): point = 280
   Insn 108(l0): point = 282
   Insn 107(l0): point = 284
   Insn 105(l0): point = 286
   Insn 106(l0): point = 288
   Insn 104(l0): point = 290
   Insn 103(l0): point = 292
   Insn 102(l0): point = 294
   Insn 101(l0): point = 296
   Insn 100(l0): point = 298
   Insn 99(l0): point = 300
   Insn 98(l0): point = 302
   Insn 97(l0): point = 304
   Insn 96(l0): point = 306
   Insn 95(l0): point = 308
   Insn 94(l0): point = 310
   Insn 93(l0): point = 312
   Insn 92(l0): point = 314
   Insn 91(l0): point = 316
   Insn 90(l0): point = 318
   Insn 89(l0): point = 320
   Insn 88(l0): point = 322
   Insn 87(l0): point = 324
   Insn 86(l0): point = 326
   Insn 85(l0): point = 328
   Insn 83(l0): point = 330
   Insn 84(l0): point = 332
   Insn 82(l0): point = 334
   Insn 81(l0): point = 336
   Insn 80(l0): point = 338
   Insn 79(l0): point = 340
   Insn 78(l0): point = 342
   Insn 77(l0): point = 344
   Insn 76(l0): point = 346
   Insn 75(l0): point = 348
   Insn 130(l0): point = 351
   Insn 129(l0): point = 353
   Insn 128(l0): point = 355
   Insn 143(l0): point = 358
   Insn 142(l0): point = 360
   Insn 141(l0): point = 362
   Insn 150(l0): point = 365
   Insn 195(l0): point = 368
   Insn 194(l0): point = 370
   Insn 193(l0): point = 372
   Insn 207(l0): point = 375
   Insn 68(l0): point = 378
   Insn 67(l0): point = 380
   Insn 66(l0): point = 382
   Insn 65(l0): point = 384
   Insn 59(l0): point = 387
   Insn 58(l0): point = 389
   Insn 57(l0): point = 391
   Insn 56(l0): point = 393
   Insn 53(l0): point = 396
   Insn 52(l0): point = 398
   Insn 51(l0): point = 400
   Insn 50(l0): point = 402
   Insn 49(l0): point = 404
   Insn 48(l0): point = 406
   Insn 47(l0): point = 408
   Insn 45(l0): point = 411
   Insn 44(l0): point = 413
   Insn 43(l0): point = 415
   Insn 42(l0): point = 417
   Insn 41(l0): point = 419
   Insn 38(l0): point = 422
   Insn 37(l0): point = 424
   Insn 36(l0): point = 426
   Insn 31(l0): point = 429
   Insn 30(l0): point = 431
   Insn 29(l0): point = 433
   Insn 28(l0): point = 435
   Insn 27(l0): point = 437
   Insn 26(l0): point = 439
   Insn 25(l0): point = 441
   Insn 24(l0): point = 443
   Insn 23(l0): point = 445
   Insn 22(l0): point = 447
   Insn 21(l0): point = 449
   Insn 20(l0): point = 451
   Insn 19(l0): point = 453
   Insn 18(l0): point = 455
   Insn 17(l0): point = 457
   Insn 13(l0): point = 459
   Insn 12(l0): point = 461
   Insn 11(l0): point = 463
   Insn 10(l0): point = 465
   Insn 6(l0): point = 467
   Insn 5(l0): point = 469
   Insn 4(l0): point = 471
   Insn 3(l0): point = 473
   Insn 2(l0): point = 475
 a0(r212): [4..5]
 a1(r124): [18..380]
 a2(r211): [35..36]
 a3(r209): [40..41]
 a4(r210): [42..43]
 a5(r205): [46..49]
 a6(r206): [46..47]
 a7(r204): [14..15]
 a8(r119): [55..56]
 a9(r118): [57..58]
 a10(r203): [63..64]
 a11(r202): [69..74]
 a12(r117): [71..76]
 a13(r201): [77..78]
 a14(r200): [77..80]
 a15(r116): [81..82]
 a16(r115): [83..84]
 a17(r199): [85..86]
 a18(r198): [91..92]
 a19(r114): [101..102]
 a20(r197): [103..106]
 a21(r113): [103..108]
 a22(r112): [109..110]
 a23(r196): [111..112]
 a24(r111): [115..116]
 a25(r195): [117..118]
 a26(r194): [117..120]
 a27(r192): [121..122]
 a28(r193): [123..124]
 a29(r191): [129..130]
 a30(r189): [133..134]
 a31(r190): [135..136]
 a32(r186): [152..153]
 a33(r121): [375..375] [156..162]
 a34(r185): [168..169]
 a35(r183): [369..370]
 a36(r184): [371..372]
 a37(r110): [177..178]
 a38(r180): [179..180]
 a39(r179): [183..184]
 a40(r109): [185..186]
 a41(r178): [187..188]
 a42(r108): [187..190]
 a43(r107): [195..204]
 a44(r104): [197..216]
 a45(r177): [205..208]
 a46(r106): [205..210]
 a47(r105): [211..212]
 a48(r176): [213..214]
 a49(r175): [217..218]
 a50(r174): [217..220]
 a51(r172): [221..222]
 a52(r173): [223..224]
 a53(r171): [230..231]
 a54(r120): [365..365] [234..240]
 a55(r169): [359..360]
 a56(r170): [361..362]
 a57(r103): [246..247]
 a58(r166): [248..249]
 a59(r164): [352..353]
 a60(r165): [354..355]
 a61(r102): [255..256]
 a62(r161): [257..258]
 a63(r160): [261..262]
 a64(r101): [263..264]
 a65(r159): [265..266]
 a66(r100): [265..268]
 a67(r99): [273..284]
 a68(r96): [275..296]
 a69(r158): [279..282]
 a70(r157): [285..288]
 a71(r98): [285..290]
 a72(r97): [291..292]
 a73(r156): [293..294]
 a74(r155): [297..298]
 a75(r154): [297..300]
 a76(r152): [301..302]
 a77(r153): [303..304]
 a78(r151): [307..308]
 a79(r95): [309..310]
 a80(r150): [311..312]
 a81(r94): [311..314]
 a82(r93): [319..328]
 a83(r90): [321..340]
 a84(r149): [329..332]
 a85(r92): [329..334]
 a86(r91): [335..336]
 a87(r148): [337..338]
 a88(r147): [341..342]
 a89(r146): [341..344]
 a90(r144): [345..346]
 a91(r145): [347..348]
 a92(r125): [21..22]
 a93(r143): [392..393]
 a94(r142): [397..398]
 a95(r89): [399..400]
 a96(r141): [401..402]
 a97(r140): [403..404]
 a98(r138): [405..408]
 a99(r139): [405..406]
 a100(r137): [416..417]
 a101(r136): [418..419]
 a102(r134): [423..424]
 a103(r135): [425..426]
 a104(r131): [434..435]
 a105(r130): [440..449]
 a106(r129): [442..451]
 a107(r128): [454..455]
 a108(r88 [0]): [460..477]
 a108(r88 [1]): [459..477]
 a109(r87): [462..463]
 a110(r126): [464..465]
Compressing live ranges: from 478 to 181 - 37%
Ranges after the compression:
 a0(r212): [0..1]
 a1(r124): [4..150]
 a2(r211): [6..7]
 a3(r209): [8..9]
 a4(r210): [10..11]
 a5(r205): [12..13]
 a6(r206): [12..13]
 a7(r204): [2..3]
 a8(r119): [14..15]
 a9(r118): [16..17]
 a10(r203): [18..19]
 a11(r202): [20..21]
 a12(r117): [20..21]
 a13(r201): [22..23]
 a14(r200): [22..23]
 a15(r116): [24..25]
 a16(r115): [26..27]
 a17(r199): [28..29]
 a18(r198): [30..31]
 a19(r114): [32..33]
 a20(r197): [34..35]
 a21(r113): [34..35]
 a22(r112): [36..37]
 a23(r196): [38..39]
 a24(r111): [40..41]
 a25(r195): [42..43]
 a26(r194): [42..43]
 a27(r192): [44..45]
 a28(r193): [46..47]
 a29(r191): [48..49]
 a30(r189): [50..51]
 a31(r190): [52..53]
 a32(r186): [54..55]
 a33(r121): [149..149] [56..57]
 a34(r185): [58..59]
 a35(r183): [145..146]
 a36(r184): [147..148]
 a37(r110): [60..61]
 a38(r180): [62..63]
 a39(r179): [64..65]
 a40(r109): [66..67]
 a41(r178): [68..69]
 a42(r108): [68..69]
 a43(r107): [70..71]
 a44(r104): [70..77]
 a45(r177): [72..73]
 a46(r106): [72..73]
 a47(r105): [74..75]
 a48(r176): [76..77]
 a49(r175): [78..79]
 a50(r174): [78..79]
 a51(r172): [80..81]
 a52(r173): [82..83]
 a53(r171): [84..85]
 a54(r120): [144..144] [86..87]
 a55(r169): [140..141]
 a56(r170): [142..143]
 a57(r103): [88..89]
 a58(r166): [90..91]
 a59(r164): [136..137]
 a60(r165): [138..139]
 a61(r102): [92..93]
 a62(r161): [94..95]
 a63(r160): [96..97]
 a64(r101): [98..99]
 a65(r159): [100..101]
 a66(r100): [100..101]
 a67(r99): [102..103]
 a68(r96): [102..109]
 a69(r158): [102..103]
 a70(r157): [104..105]
 a71(r98): [104..105]
 a72(r97): [106..107]
 a73(r156): [108..109]
 a74(r155): [110..111]
 a75(r154): [110..111]
 a76(r152): [112..113]
 a77(r153): [114..115]
 a78(r151): [116..117]
 a79(r95): [118..119]
 a80(r150): [120..121]
 a81(r94): [120..121]
 a82(r93): [122..123]
 a83(r90): [122..129]
 a84(r149): [124..125]
 a85(r92): [124..125]
 a86(r91): [126..127]
 a87(r148): [128..129]
 a88(r147): [130..131]
 a89(r146): [130..131]
 a90(r144): [132..133]
 a91(r145): [134..135]
 a92(r125): [4..5]
 a93(r143): [151..152]
 a94(r142): [153..154]
 a95(r89): [155..156]
 a96(r141): [157..158]
 a97(r140): [159..160]
 a98(r138): [161..162]
 a99(r139): [161..162]
 a100(r137): [163..164]
 a101(r136): [165..166]
 a102(r134): [167..168]
 a103(r135): [169..170]
 a104(r131): [171..172]
 a105(r130): [173..174]
 a106(r129): [173..174]
 a107(r128): [175..176]
 a108(r88 [0]): [177..180]
 a108(r88 [1]): [177..180]
 a109(r87): [177..178]
 a110(r126): [179..180]
  regions=1, blocks=32, points=181
    allocnos=111 (big 1), copies=0, conflicts=0, ranges=114
Disposition:
  109:r87  l0     0  108:r88  l0    38   95:r89  l0     0   83:r90  l0     4
   86:r91  l0     0   85:r92  l0     0   82:r93  l0     0   81:r94  l0     1
   79:r95  l0     0   68:r96  l0     4   72:r97  l0     0   71:r98  l0     0
   67:r99  l0     0   66:r100 l0     1   64:r101 l0     0   61:r102 l0     0
   57:r103 l0     0   44:r104 l0     4   47:r105 l0     0   46:r106 l0     0
   43:r107 l0     0   42:r108 l0     1   40:r109 l0     0   37:r110 l0     0
   24:r111 l0     0   22:r112 l0     0   21:r113 l0     0   19:r114 l0     0
   16:r115 l0     0   15:r116 l0     0   12:r117 l0     2    9:r118 l0     0
    8:r119 l0     0   54:r120 l0     0   33:r121 l0     0    1:r124 l0     3
   92:r125 l0     0  110:r126 l0     0  107:r128 l0     0  106:r129 l0     4
  105:r130 l0     0  104:r131 l0     0  102:r134 l0     0  103:r135 l0     0
  101:r136 l0     0  100:r137 l0     0   98:r138 l0     0   99:r139 l0     1
   97:r140 l0     0   96:r141 l0     0   94:r142 l0     0   93:r143 l0     0
   90:r144 l0     0   91:r145 l0     0   89:r146 l0     1   88:r147 l0     0
   87:r148 l0     0   84:r149 l0     1   80:r150 l0     0   78:r151 l0     0
   76:r152 l0     0   77:r153 l0     0   75:r154 l0     1   74:r155 l0     0
   73:r156 l0     0   70:r157 l0     1   69:r158 l0     1   65:r159 l0     0
   63:r160 l0     0   62:r161 l0     0   59:r164 l0     0   60:r165 l0     0
   58:r166 l0     0   55:r169 l0     0   56:r170 l0     0   53:r171 l0     0
   51:r172 l0     0   52:r173 l0     0   50:r174 l0     1   49:r175 l0     0
   48:r176 l0     0   45:r177 l0     1   41:r178 l0     0   39:r179 l0     0
   38:r180 l0     0   35:r183 l0     0   36:r184 l0     0   34:r185 l0     0
   32:r186 l0     0   30:r189 l0     0   31:r190 l0     0   29:r191 l0     0
   27:r192 l0     0   28:r193 l0     0   26:r194 l0     1   25:r195 l0     0
   23:r196 l0     0   20:r197 l0     1   18:r198 l0     0   17:r199 l0     0
   14:r200 l0     1   13:r201 l0     0   11:r202 l0     0   10:r203 l0     0
    7:r204 l0     0    5:r205 l0     0    6:r206 l0     1    3:r209 l0     0
    4:r210 l0     0    2:r211 l0     0    0:r212 l0     0
+++Costs: overall -13, reg -13, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


getflt

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 37 [r8]
;;  ref usage 	r0={8d,4u} r1={13d,6u} r2={12d,5u} r4={13d,6u} r5={15d,8u} r6={1d,31u} r7={1d,38u} r8={7d} r9={7d} r10={7d} r11={7d} r12={7d} r13={7d} r14={7d} r15={7d} r16={1d,30u} r17={73d,19u} r18={7d} r19={7d} r20={1d,138u,29e} r21={8d} r22={8d} r23={8d} r24={8d} r25={8d} r26={8d} r27={8d} r28={8d} r29={7d} r30={7d} r31={7d} r32={7d} r33={7d} r34={7d} r35={7d} r36={7d} r37={12d,5u} r38={8d} r39={7d} r40={7d} r45={7d} r46={7d} r47={7d} r48={7d} r49={7d} r50={7d} r51={7d} r52={7d} r53={7d} r54={7d} r55={7d} r56={7d} r57={7d} r58={7d} r59={7d} r60={7d} r61={7d} r62={7d} r63={7d} r64={7d} r65={7d} r66={7d} r67={7d} r68={7d} r69={7d} r70={7d} r71={7d} r72={7d} r73={7d} r74={7d} r75={7d} r76={7d} r77={7d} r78={7d} r79={7d} r80={7d} r87={1d,1u} r88={2d,2u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,2u} r93={1d,1u} r94={1d,1u,1e} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,2u} r99={1d,1u} r100={1d,1u,1e} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,2u} r107={1d,1u} r108={1d,1u,1e} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,2u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={2d,2u} r121={2d,2u} r124={1d,1u} r125={1d,1u} r126={1d,1u} r128={1d,1u} r129={1d,1u} r130={1d,1u} r131={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,2u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u,1e} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u,1e} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r164={1d,1u} r165={1d,1u} r166={1d,1u} r169={1d,1u} r170={1d,1u} r171={1d,1u} r172={1d,1u} r173={1d,1u} r174={1d,1u,1e} r175={1d,1u} r176={1d,1u} r177={1d,1u} r178={1d,1u} r179={1d,1u} r180={1d,1u} r183={1d,1u} r184={1d,1u} r185={1d,1u} r186={1d,1u} r189={1d,1u} r190={1d,1u} r191={1d,1u} r192={1d,1u} r193={1d,1u} r194={1d,1u,1e} r195={1d,1u} r196={1d,1u} r197={1d,1u} r198={1d,1u} r199={1d,1u} r200={1d,1u,1e} r201={1d,1u} r202={1d,1u} r203={1d,1u} r204={1d,1u} r205={1d,1u} r206={1d,1u} r209={1d,1u} r210={1d,1u} r211={1d,1u} r212={1d,1u} 
;;    total ref usage 1174{728d,409u,37e} in 224{217 regular + 7 call} insns.
(note 1 0 8 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 88
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 88
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 126 128 129 130 131
(note 8 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 8 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -536 [0xfffffffffffffde8])) [10 input+0 S8 A64])
        (reg:DI 5 di [ input ])) "../src/io.f":112 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ input ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -544 [0xfffffffffffffde0])) [14 rnum+0 S8 A64])
        (reg:DI 4 si [ rnum ])) "../src/io.f":112 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ rnum ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -552 [0xfffffffffffffdd8])) [11 nr+0 S8 A64])
        (reg:DI 1 dx [ nr ])) "../src/io.f":112 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ nr ])
        (nil)))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -560 [0xfffffffffffffdd0])) [12 error+0 S8 A64])
        (reg:DI 2 cx [ error ])) "../src/io.f":112 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [ error ])
        (nil)))
(insn 6 5 7 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -564 [0xfffffffffffffdcc])) [1 _input+0 S4 A32])
        (reg:SI 37 r8 [ _input ])) "../src/io.f":112 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 37 r8 [ _input ])
        (nil)))
(note 7 6 10 2 NOTE_INSN_FUNCTION_BEG)
(insn 10 7 11 2 (set (reg:SI 126)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -564 [0xfffffffffffffdcc])) [1 _input+0 S4 A32])) "../src/io.f":204 82 {*movsi_internal}
     (nil))
(insn 11 10 12 2 (set (reg:DI 87 [ _1 ])
        (sign_extend:DI (reg:SI 126))) "../src/io.f":204 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 126)
        (nil)))
(insn 12 11 13 2 (set (subreg:DI (reg:TI 88 [ _2 ]) 0)
        (reg:DI 87 [ _1 ])) "../src/io.f":204 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 87 [ _1 ])
        (nil)))
(insn 13 12 17 2 (set (subreg:DI (reg:TI 88 [ _2 ]) 8)
        (const_int 0 [0])) "../src/io.f":204 81 {*movdi_internal}
     (expr_list:REG_UNUSED (reg:TI 88 [ _2 ])
        (nil)))
(insn 17 13 18 2 (set (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -45 [0xffffffffffffffd3])) [2 tab+0 S1 A8])
        (const_int 9 [0x9])) "../src/io.f":128 84 {*movqi_internal}
     (nil))
(insn 18 17 19 2 (set (reg:SI 128)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -564 [0xfffffffffffffdcc])) [1 _input+0 S4 A32])) "../src/io.f":131 82 {*movsi_internal}
     (nil))
(insn 19 18 20 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 ilen+0 S4 A32])
        (reg:SI 128)) "../src/io.f":131 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 128)
        (nil)))
(insn 20 19 21 2 (set (reg:DI 129)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -536 [0xfffffffffffffde8])) [10 input+0 S8 A64])) "../src/io.f":134 81 {*movdi_internal}
     (nil))
(insn 21 20 22 2 (set (reg:SI 130)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -564 [0xfffffffffffffdcc])) [1 _input+0 S4 A32])) "../src/io.f":134 82 {*movsi_internal}
     (nil))
(insn 22 21 23 2 (set (reg:SI 37 r8)
        (const_int 0 [0])) "../src/io.f":134 82 {*movsi_internal}
     (nil))
(insn 23 22 24 2 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*lC1") [flags 0x2]  <var_decl 0x143b72240 *lC1>)) "../src/io.f":134 81 {*movdi_internal}
     (nil))
(insn 24 23 25 2 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) "../src/io.f":134 82 {*movsi_internal}
     (nil))
(insn 25 24 26 2 (set (reg:DI 4 si)
        (reg:DI 129)) "../src/io.f":134 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 129)
        (nil)))
(insn 26 25 27 2 (set (reg:SI 5 di)
        (reg:SI 130)) "../src/io.f":134 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 130)
        (nil)))
(call_insn/i 27 26 28 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_gfortran_string_index") [flags 0x41]  <function_decl 0x1439c4a00 _gfortran_string_index>) [0 _gfortran_string_index S1 A8])
            (const_int 0 [0]))) "../src/io.f":134 665 {*call_value}
     (expr_list:REG_DEAD (reg:SI 37 r8)
        (expr_list:REG_DEAD (reg:SI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:SI 1 dx)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (nil)))))))
(insn 28 27 29 2 (set (reg:SI 131)
        (reg:SI 0 ax)) "../src/io.f":134 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 29 28 30 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])
        (reg:SI 131)) "../src/io.f":134 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 131)
        (nil)))
(insn 30 29 31 2 (set (reg:CCNO 17 flags)
        (compare:CCNO (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])
            (const_int 0 [0]))) "../src/io.f":135 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 31 30 32 2 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 39)
            (pc))) "../src/io.f":135 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (nil))
 -> 39)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 134 135
(note 32 31 36 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 36 32 37 3 (set (reg:SI 135)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])) "../src/io.f":135 82 {*movsi_internal}
     (nil))
(insn 37 36 38 3 (parallel [
            (set (reg:SI 134)
                (plus:SI (reg:SI 135)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":135 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 135)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff]))
                (nil)))))
(insn 38 37 39 3 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 ilen+0 S4 A32])
        (reg:SI 134)) "../src/io.f":135 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 134)
        (nil)))
;;  succ:       4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       2
;;              3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 136 137
(code_label 39 38 40 4 24 (nil) [1 uses])
(note 40 39 41 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 42 4 (set (reg/f:DI 136)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -552 [0xfffffffffffffdd8])) [11 nr+0 S8 A64])) "../src/io.f":138 81 {*movdi_internal}
     (nil))
(insn 42 41 43 4 (set (reg:SI 137)
        (mem:SI (reg/f:DI 136) [1 *nr_59(D)+0 S4 A32])) "../src/io.f":138 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 136)
        (nil)))
(insn 43 42 44 4 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [1 ninp+0 S4 A32])
        (reg:SI 137)) "../src/io.f":138 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 137)
        (nil)))
(insn 44 43 45 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -32 [0xffffffffffffffe0])) [1 ninp+0 S4 A32])
            (const_int 0 [0]))) "../src/io.f":139 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 45 44 46 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 54)
            (pc))) "../src/io.f":139 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 54)
;;  succ:       5 (FALLTHRU)
;;              6
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 89 138 139 140 141 142
(note 46 45 47 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 47 46 48 5 (set (reg:SI 138)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 ilen+0 S4 A32])) "../src/io.f":139 82 {*movsi_internal}
     (nil))
(insn 48 47 49 5 (parallel [
            (set (reg:SI 139)
                (lshiftrt:SI (reg:SI 138)
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":139 544 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 49 48 50 5 (parallel [
            (set (reg:SI 140)
                (plus:SI (reg:SI 139)
                    (reg:SI 138)))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":139 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 139)
        (expr_list:REG_DEAD (reg:SI 138)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 50 49 51 5 (parallel [
            (set (reg:SI 141)
                (ashiftrt:SI (reg:SI 140)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":139 545 {*ashrsi3_1}
     (expr_list:REG_DEAD (reg:SI 140)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 51 50 52 5 (set (reg:SI 89 [ _3 ])
        (reg:SI 141)) "../src/io.f":139 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 141)
        (nil)))
(insn 52 51 53 5 (parallel [
            (set (reg:SI 142)
                (plus:SI (reg:SI 89 [ _3 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":139 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 89 [ _3 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 53 52 54 5 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [1 ninp+0 S4 A32])
        (reg:SI 142)) "../src/io.f":139 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 142)
        (nil)))
;;  succ:       6 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (RTL)
;;  pred:       4
;;              5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 143
(code_label 54 53 55 6 25 (nil) [1 uses])
(note 55 54 56 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 56 55 57 6 (set (reg/f:DI 143)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -552 [0xfffffffffffffdd8])) [11 nr+0 S8 A64])) "../src/io.f":141 81 {*movdi_internal}
     (nil))
(insn 57 56 58 6 (set (mem:SI (reg/f:DI 143) [1 *nr_59(D)+0 S4 A32])
        (const_int 0 [0])) "../src/io.f":141 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 143)
        (nil)))
(insn 58 57 59 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [1 ilen+0 S4 A32])
            (const_int 0 [0]))) "../src/io.f":143 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 59 58 64 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 303)
            (pc))) "../src/io.f":143 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 303)
;;  succ:       30
;;              7 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (RTL)
;;  pred:       6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 124
(note 64 59 65 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 65 64 66 7 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -28 [0xffffffffffffffe4])) [1 n+0 S4 A32])
        (const_int 0 [0])) "../src/io.f":146 82 {*movsi_internal}
     (nil))
(insn 66 65 67 7 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])
        (const_int 1 [0x1])) "../src/io.f":147 82 {*movsi_internal}
     (nil))
(insn 67 66 68 7 (set (reg:SI 124 [ _65 ])
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 ilen+0 S4 A32])) "../src/io.f":148 82 {*movsi_internal}
     (nil))
(insn 68 67 292 7 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 ipass+0 S4 A32])
        (const_int 1 [0x1])) "../src/io.f":148 82 {*movsi_internal}
     (nil))
;;  succ:       8 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 124

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (RTL)
;;  pred:       7 (FALLTHRU)
;;              28 [100.0%] 
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 124
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 124
;; lr  def 	 17 [flags] 125
(code_label 292 68 69 8 39 (nil) [1 uses])
(note 69 292 70 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 70 69 71 8 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 ipass+0 S4 A32])
            (reg:SI 124 [ _65 ]))) "../src/io.f":148 7 {*cmpsi_1}
     (nil))
(insn 71 70 72 8 (set (reg:QI 125 [ _67 ])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "../src/io.f":148 613 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil)))
(insn 72 71 73 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 125 [ _67 ])
            (const_int 0 [0]))) "../src/io.f":148 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 125 [ _67 ])
        (nil)))
(jump_insn 73 72 74 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 317)
            (pc))) "../src/io.f":148 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 317)
;;  succ:       31
;;              9 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 124

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (RTL)
;;  pred:       8 (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 124
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 90 91 92 93 94 95 96 97 98 99 100 101 102 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161
(note 74 73 75 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 75 74 76 9 (set (reg:SI 145)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])) "../src/io.f":150 82 {*movsi_internal}
     (nil))
(insn 76 75 77 9 (parallel [
            (set (reg:SI 144)
                (plus:SI (reg:SI 145)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":150 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 145)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff]))
                (nil)))))
(insn 77 76 78 9 (set (reg:DI 146)
        (sign_extend:DI (reg:SI 144))) "../src/io.f":150 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 144)
        (nil)))
(insn 78 77 79 9 (set (reg/f:DI 147)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -536 [0xfffffffffffffde8])) [10 input+0 S8 A64])) "../src/io.f":150 81 {*movdi_internal}
     (nil))
(insn 79 78 80 9 (parallel [
            (set (reg/f:DI 90 [ _4 ])
                (plus:DI (reg:DI 146)
                    (reg/f:DI 147)))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":150 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 147)
        (expr_list:REG_DEAD (reg:DI 146)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -536 [0xfffffffffffffde8])) [10 input+0 S8 A64])
                        (reg:DI 146))
                    (nil))))))
(insn 80 79 81 9 (set (reg:SI 148)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 ilen+0 S4 A32])) "../src/io.f":150 82 {*movsi_internal}
     (nil))
(insn 81 80 82 9 (parallel [
            (set (reg:SI 91 [ _5 ])
                (minus:SI (reg:SI 148)
                    (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":150 273 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 148)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 ilen+0 S4 A32])
                    (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32]))
                (nil)))))
(insn 82 81 84 9 (parallel [
            (set (reg:SI 92 [ _6 ])
                (plus:SI (reg:SI 91 [ _5 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":150 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 91 [ _5 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 84 82 83 9 (set (reg:SI 149)
        (const_int 0 [0])) "../src/io.f":150 82 {*movsi_internal}
     (nil))
(insn 83 84 85 9 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 92 [ _6 ])
            (const_int 0 [0]))) "../src/io.f":150 3 {*cmpsi_ccno_1}
     (nil))
(insn 85 83 86 9 (set (reg:SI 93 [ _7 ])
        (if_then_else:SI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:SI 92 [ _6 ])
            (reg:SI 149))) "../src/io.f":150 966 {*movsicc_noc}
     (expr_list:REG_DEAD (reg:SI 149)
        (expr_list:REG_DEAD (reg:SI 92 [ _6 ])
            (expr_list:REG_DEAD (reg:CCGOC 17 flags)
                (nil)))))
(insn 86 85 87 9 (set (reg:SI 37 r8)
        (const_int 0 [0])) "../src/io.f":150 82 {*movsi_internal}
     (nil))
(insn 87 86 88 9 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*lC2") [flags 0x2]  <var_decl 0x143b722d0 *lC2>)) "../src/io.f":150 81 {*movdi_internal}
     (nil))
(insn 88 87 89 9 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) "../src/io.f":150 82 {*movsi_internal}
     (nil))
(insn 89 88 90 9 (set (reg:DI 4 si)
        (reg/f:DI 90 [ _4 ])) "../src/io.f":150 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 90 [ _4 ])
        (nil)))
(insn 90 89 91 9 (set (reg:SI 5 di)
        (reg:SI 93 [ _7 ])) "../src/io.f":150 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 93 [ _7 ])
        (nil)))
(call_insn/i 91 90 92 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_gfortran_string_index") [flags 0x41]  <function_decl 0x1439c4a00 _gfortran_string_index>) [0 _gfortran_string_index S1 A8])
            (const_int 0 [0]))) "../src/io.f":150 665 {*call_value}
     (expr_list:REG_DEAD (reg:SI 37 r8)
        (expr_list:REG_DEAD (reg:SI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:SI 1 dx)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (nil)))))))
(insn 92 91 93 9 (set (reg:SI 94 [ _8 ])
        (reg:SI 0 ax)) "../src/io.f":150 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 93 92 94 9 (set (reg:SI 150)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])) "../src/io.f":150 82 {*movsi_internal}
     (nil))
(insn 94 93 95 9 (parallel [
            (set (reg:SI 95 [ _9 ])
                (plus:SI (reg:SI 94 [ _8 ])
                    (reg:SI 150)))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":150 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 150)
        (expr_list:REG_DEAD (reg:SI 94 [ _8 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:SI (reg:SI 94 [ _8 ])
                        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                                (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32]))
                    (nil))))))
(insn 95 94 96 9 (parallel [
            (set (reg:SI 151)
                (plus:SI (reg:SI 95 [ _9 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":150 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 95 [ _9 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 96 95 97 9 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [1 kblk+0 S4 A32])
        (reg:SI 151)) "../src/io.f":150 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 151)
        (nil)))
(insn 97 96 98 9 (set (reg:SI 153)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])) "../src/io.f":151 82 {*movsi_internal}
     (nil))
(insn 98 97 99 9 (parallel [
            (set (reg:SI 152)
                (plus:SI (reg:SI 153)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":151 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 153)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff]))
                (nil)))))
(insn 99 98 100 9 (set (reg:DI 154)
        (sign_extend:DI (reg:SI 152))) "../src/io.f":151 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 152)
        (nil)))
(insn 100 99 101 9 (set (reg/f:DI 155)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -536 [0xfffffffffffffde8])) [10 input+0 S8 A64])) "../src/io.f":151 81 {*movdi_internal}
     (nil))
(insn 101 100 102 9 (parallel [
            (set (reg/f:DI 96 [ _10 ])
                (plus:DI (reg:DI 154)
                    (reg/f:DI 155)))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":151 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 155)
        (expr_list:REG_DEAD (reg:DI 154)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -536 [0xfffffffffffffde8])) [10 input+0 S8 A64])
                        (reg:DI 154))
                    (nil))))))
(insn 102 101 103 9 (set (reg:SI 156)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 ilen+0 S4 A32])) "../src/io.f":151 82 {*movsi_internal}
     (nil))
(insn 103 102 104 9 (parallel [
            (set (reg:SI 97 [ _11 ])
                (minus:SI (reg:SI 156)
                    (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":151 273 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 156)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 ilen+0 S4 A32])
                    (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32]))
                (nil)))))
(insn 104 103 106 9 (parallel [
            (set (reg:SI 98 [ _12 ])
                (plus:SI (reg:SI 97 [ _11 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":151 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 97 [ _11 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 106 104 105 9 (set (reg:SI 157)
        (const_int 0 [0])) "../src/io.f":151 82 {*movsi_internal}
     (nil))
(insn 105 106 107 9 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 98 [ _12 ])
            (const_int 0 [0]))) "../src/io.f":151 3 {*cmpsi_ccno_1}
     (nil))
(insn 107 105 108 9 (set (reg:SI 99 [ _13 ])
        (if_then_else:SI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:SI 98 [ _12 ])
            (reg:SI 157))) "../src/io.f":151 966 {*movsicc_noc}
     (expr_list:REG_DEAD (reg:SI 157)
        (expr_list:REG_DEAD (reg:SI 98 [ _12 ])
            (expr_list:REG_DEAD (reg:CCGOC 17 flags)
                (nil)))))
(insn 108 107 109 9 (parallel [
            (set (reg:DI 158)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -45 [0xffffffffffffffd3])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":151 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 109 108 110 9 (set (reg:SI 37 r8)
        (const_int 0 [0])) "../src/io.f":151 82 {*movsi_internal}
     (nil))
(insn 110 109 111 9 (set (reg:DI 2 cx)
        (reg:DI 158)) "../src/io.f":151 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 158)
        (nil)))
(insn 111 110 112 9 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) "../src/io.f":151 82 {*movsi_internal}
     (nil))
(insn 112 111 113 9 (set (reg:DI 4 si)
        (reg/f:DI 96 [ _10 ])) "../src/io.f":151 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 96 [ _10 ])
        (nil)))
(insn 113 112 114 9 (set (reg:SI 5 di)
        (reg:SI 99 [ _13 ])) "../src/io.f":151 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 99 [ _13 ])
        (nil)))
(call_insn/i 114 113 115 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_gfortran_string_index") [flags 0x41]  <function_decl 0x1439c4a00 _gfortran_string_index>) [0 _gfortran_string_index S1 A8])
            (const_int 0 [0]))) "../src/io.f":151 665 {*call_value}
     (expr_list:REG_DEAD (reg:SI 37 r8)
        (expr_list:REG_DEAD (reg:SI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:SI 1 dx)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (nil)))))))
(insn 115 114 116 9 (set (reg:SI 100 [ _14 ])
        (reg:SI 0 ax)) "../src/io.f":151 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 116 115 117 9 (set (reg:SI 159)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])) "../src/io.f":151 82 {*movsi_internal}
     (nil))
(insn 117 116 118 9 (parallel [
            (set (reg:SI 101 [ _15 ])
                (plus:SI (reg:SI 100 [ _14 ])
                    (reg:SI 159)))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":151 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 159)
        (expr_list:REG_DEAD (reg:SI 100 [ _14 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:SI (reg:SI 100 [ _14 ])
                        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                                (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32]))
                    (nil))))))
(insn 118 117 119 9 (parallel [
            (set (reg:SI 160)
                (plus:SI (reg:SI 101 [ _15 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":151 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 101 [ _15 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 119 118 120 9 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [1 ktab+0 S4 A32])
        (reg:SI 160)) "../src/io.f":151 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 160)
        (nil)))
(insn 120 119 121 9 (set (reg:SI 161)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])) "../src/io.f":153 82 {*movsi_internal}
     (nil))
(insn 121 120 122 9 (parallel [
            (set (reg:SI 102 [ _16 ])
                (plus:SI (reg:SI 161)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":153 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 161)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff]))
                (nil)))))
(insn 122 121 123 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [1 kblk+0 S4 A32])
            (reg:SI 102 [ _16 ]))) "../src/io.f":153 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 102 [ _16 ])
        (nil)))
(jump_insn 123 122 124 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 131)
            (pc))) "../src/io.f":153 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 131)
;;  succ:       10 (FALLTHRU)
;;              11
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 124

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (RTL)
;;  pred:       9 (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 124
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 164 165
(note 124 123 128 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 128 124 129 10 (set (reg:SI 165)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 ilen+0 S4 A32])) "../src/io.f":153 82 {*movsi_internal}
     (nil))
(insn 129 128 130 10 (parallel [
            (set (reg:SI 164)
                (plus:SI (reg:SI 165)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":153 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 165)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 ilen+0 S4 A32])
                    (const_int 1 [0x1]))
                (nil)))))
(insn 130 129 131 10 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [1 kblk+0 S4 A32])
        (reg:SI 164)) "../src/io.f":153 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 164)
        (nil)))
;;  succ:       11 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 124

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (RTL)
;;  pred:       9
;;              10 (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 124
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 103 166
(code_label 131 130 132 11 29 (nil) [1 uses])
(note 132 131 133 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 133 132 134 11 (set (reg:SI 166)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])) "../src/io.f":154 82 {*movsi_internal}
     (nil))
(insn 134 133 135 11 (parallel [
            (set (reg:SI 103 [ _17 ])
                (plus:SI (reg:SI 166)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":154 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 166)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff]))
                (nil)))))
(insn 135 134 136 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -24 [0xffffffffffffffe8])) [1 ktab+0 S4 A32])
            (reg:SI 103 [ _17 ]))) "../src/io.f":154 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 103 [ _17 ])
        (nil)))
(jump_insn 136 135 137 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 144)
            (pc))) "../src/io.f":154 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 144)
;;  succ:       12 (FALLTHRU)
;;              13
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 124

;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (RTL)
;;  pred:       11 (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 124
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 169 170
(note 137 136 141 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 141 137 142 12 (set (reg:SI 170)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 ilen+0 S4 A32])) "../src/io.f":154 82 {*movsi_internal}
     (nil))
(insn 142 141 143 12 (parallel [
            (set (reg:SI 169)
                (plus:SI (reg:SI 170)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":154 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 170)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 ilen+0 S4 A32])
                    (const_int 1 [0x1]))
                (nil)))))
(insn 143 142 144 12 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [1 ktab+0 S4 A32])
        (reg:SI 169)) "../src/io.f":154 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 169)
        (nil)))
;;  succ:       13 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 124

;; basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 14, flags: (RTL)
;;  pred:       11
;;              12 (FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 124
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 120
(code_label 144 143 145 13 30 (nil) [1 uses])
(note 145 144 146 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 146 145 147 13 (set (reg:SI 120 [ M.5_44 ])
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [1 kblk+0 S4 A32])) "../src/io.f":156 82 {*movsi_internal}
     (nil))
(insn 147 146 148 13 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -24 [0xffffffffffffffe8])) [1 ktab+0 S4 A32])
            (reg:SI 120 [ M.5_44 ]))) "../src/io.f":156 7 {*cmpsi_1}
     (nil))
(jump_insn 148 147 149 13 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 151)
            (pc))) "../src/io.f":156 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 151)
;;  succ:       14 (FALLTHRU)
;;              15
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 120 124

;; basic block 14, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 13, next block 15, flags: (RTL)
;;  pred:       13 (FALLTHRU)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 124
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 120
(note 149 148 150 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 150 149 151 14 (set (reg:SI 120 [ M.5_44 ])
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [1 ktab+0 S4 A32])) "../src/io.f":156 82 {*movsi_internal}
     (nil))
;;  succ:       15 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 120 124

;; basic block 15, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 14, next block 16, flags: (RTL)
;;  pred:       13
;;              14 (FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 120 124
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 120
;; lr  def 	 17 [flags] 171
(code_label 151 150 152 15 31 (nil) [1 uses])
(note 152 151 153 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 153 152 154 15 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -36 [0xffffffffffffffdc])) [1 kspace+0 S4 A32])
        (reg:SI 120 [ M.5_44 ])) "../src/io.f":156 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 120 [ M.5_44 ])
        (nil)))
(insn 154 153 155 15 (set (reg:SI 171)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -36 [0xffffffffffffffdc])) [1 kspace+0 S4 A32])) "../src/io.f":158 82 {*movsi_internal}
     (nil))
(insn 155 154 156 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 171)
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32]))) "../src/io.f":158 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 171)
        (nil)))
(jump_insn 156 155 157 15 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 161)
            (pc))) "../src/io.f":158 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 161)
;;  succ:       16 (FALLTHRU)
;;              17
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 124

;; basic block 16, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 15, next block 17, flags: (RTL)
;;  pred:       15 (FALLTHRU)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 124
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 157 156 158 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 158 157 307 16 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":160 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 307 158 308 16 (set (pc)
        (label_ref 285)) "../src/io.f":161 649 {jump}
     (nil)
 -> 285)
;;  succ:       27 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 124

(barrier 308 307 161)
;; basic block 17, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 16, next block 18, flags: (RTL)
;;  pred:       15
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 124
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 104 105 106 107 108 109 110 172 173 174 175 176 177 178 179 180
(code_label 161 308 162 17 32 (nil) [1 uses])
(note 162 161 163 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 163 162 164 17 (set (reg:SI 173)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])) "../src/io.f":165 82 {*movsi_internal}
     (nil))
(insn 164 163 165 17 (parallel [
            (set (reg:SI 172)
                (plus:SI (reg:SI 173)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":165 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 173)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff]))
                (nil)))))
(insn 165 164 166 17 (set (reg:DI 174)
        (sign_extend:DI (reg:SI 172))) "../src/io.f":165 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 172)
        (nil)))
(insn 166 165 167 17 (set (reg/f:DI 175)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -536 [0xfffffffffffffde8])) [10 input+0 S8 A64])) "../src/io.f":165 81 {*movdi_internal}
     (nil))
(insn 167 166 168 17 (parallel [
            (set (reg/f:DI 104 [ _18 ])
                (plus:DI (reg:DI 174)
                    (reg/f:DI 175)))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":165 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 175)
        (expr_list:REG_DEAD (reg:DI 174)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -536 [0xfffffffffffffde8])) [10 input+0 S8 A64])
                        (reg:DI 174))
                    (nil))))))
(insn 168 167 169 17 (set (reg:SI 176)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 ilen+0 S4 A32])) "../src/io.f":165 82 {*movsi_internal}
     (nil))
(insn 169 168 170 17 (parallel [
            (set (reg:SI 105 [ _19 ])
                (minus:SI (reg:SI 176)
                    (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":165 273 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 176)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 ilen+0 S4 A32])
                    (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32]))
                (nil)))))
(insn 170 169 172 17 (parallel [
            (set (reg:SI 106 [ _20 ])
                (plus:SI (reg:SI 105 [ _19 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":165 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 105 [ _19 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 172 170 171 17 (set (reg:SI 177)
        (const_int 0 [0])) "../src/io.f":165 82 {*movsi_internal}
     (nil))
(insn 171 172 173 17 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 106 [ _20 ])
            (const_int 0 [0]))) "../src/io.f":165 3 {*cmpsi_ccno_1}
     (nil))
(insn 173 171 174 17 (set (reg:SI 107 [ _21 ])
        (if_then_else:SI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:SI 106 [ _20 ])
            (reg:SI 177))) "../src/io.f":165 966 {*movsicc_noc}
     (expr_list:REG_DEAD (reg:SI 177)
        (expr_list:REG_DEAD (reg:SI 106 [ _20 ])
            (expr_list:REG_DEAD (reg:CCGOC 17 flags)
                (nil)))))
(insn 174 173 175 17 (set (reg:SI 37 r8)
        (const_int 0 [0])) "../src/io.f":165 82 {*movsi_internal}
     (nil))
(insn 175 174 176 17 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*lC3") [flags 0x2]  <var_decl 0x143b72360 *lC3>)) "../src/io.f":165 81 {*movdi_internal}
     (nil))
(insn 176 175 177 17 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) "../src/io.f":165 82 {*movsi_internal}
     (nil))
(insn 177 176 178 17 (set (reg:DI 4 si)
        (reg/f:DI 104 [ _18 ])) "../src/io.f":165 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 104 [ _18 ])
        (nil)))
(insn 178 177 179 17 (set (reg:SI 5 di)
        (reg:SI 107 [ _21 ])) "../src/io.f":165 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 107 [ _21 ])
        (nil)))
(call_insn/i 179 178 180 17 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_gfortran_string_index") [flags 0x41]  <function_decl 0x1439c4a00 _gfortran_string_index>) [0 _gfortran_string_index S1 A8])
            (const_int 0 [0]))) "../src/io.f":165 665 {*call_value}
     (expr_list:REG_DEAD (reg:SI 37 r8)
        (expr_list:REG_DEAD (reg:SI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:SI 1 dx)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (nil)))))))
(insn 180 179 181 17 (set (reg:SI 108 [ _22 ])
        (reg:SI 0 ax)) "../src/io.f":165 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 181 180 182 17 (set (reg:SI 178)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])) "../src/io.f":165 82 {*movsi_internal}
     (nil))
(insn 182 181 183 17 (parallel [
            (set (reg:SI 109 [ _23 ])
                (plus:SI (reg:SI 108 [ _22 ])
                    (reg:SI 178)))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":165 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 178)
        (expr_list:REG_DEAD (reg:SI 108 [ _22 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:SI (reg:SI 108 [ _22 ])
                        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                                (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32]))
                    (nil))))))
(insn 183 182 184 17 (parallel [
            (set (reg:SI 179)
                (plus:SI (reg:SI 109 [ _23 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":165 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 109 [ _23 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 184 183 185 17 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [1 kcomma+0 S4 A32])
        (reg:SI 179)) "../src/io.f":165 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 179)
        (nil)))
(insn 185 184 186 17 (set (reg:SI 180)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])) "../src/io.f":166 82 {*movsi_internal}
     (nil))
(insn 186 185 187 17 (parallel [
            (set (reg:SI 110 [ _24 ])
                (plus:SI (reg:SI 180)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":166 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 180)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff]))
                (nil)))))
(insn 187 186 188 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -20 [0xffffffffffffffec])) [1 kcomma+0 S4 A32])
            (reg:SI 110 [ _24 ]))) "../src/io.f":166 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 110 [ _24 ])
        (nil)))
(jump_insn 188 187 189 17 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 196)
            (pc))) "../src/io.f":166 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 196)
;;  succ:       18 (FALLTHRU)
;;              19
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 124

;; basic block 18, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 17, next block 19, flags: (RTL)
;;  pred:       17 (FALLTHRU)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 124
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 183 184
(note 189 188 193 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 193 189 194 18 (set (reg:SI 184)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 ilen+0 S4 A32])) "../src/io.f":166 82 {*movsi_internal}
     (nil))
(insn 194 193 195 18 (parallel [
            (set (reg:SI 183)
                (plus:SI (reg:SI 184)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":166 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 184)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 ilen+0 S4 A32])
                    (const_int 1 [0x1]))
                (nil)))))
(insn 195 194 196 18 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [1 kcomma+0 S4 A32])
        (reg:SI 183)) "../src/io.f":166 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 183)
        (nil)))
;;  succ:       19 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 124

;; basic block 19, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 18, next block 20, flags: (RTL)
;;  pred:       17
;;              18 (FALLTHRU)
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 124
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 185
(code_label 196 195 197 19 34 (nil) [1 uses])
(note 197 196 198 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 198 197 199 19 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -28 [0xffffffffffffffe4])) [1 n+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -28 [0xffffffffffffffe4])) [1 n+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":169 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 199 198 200 19 (set (reg:SI 185)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -28 [0xffffffffffffffe4])) [1 n+0 S4 A32])) "../src/io.f":172 82 {*movsi_internal}
     (nil))
(insn 200 199 201 19 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 185)
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -32 [0xffffffffffffffe0])) [1 ninp+0 S4 A32]))) "../src/io.f":172 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 185)
        (nil)))
(jump_insn 201 200 202 19 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 317)
            (pc))) "../src/io.f":172 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 317)
;;  succ:       31
;;              20 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 124

;; basic block 20, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 19, next block 21, flags: (RTL)
;;  pred:       19 (FALLTHRU)
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 124
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 121
(note 202 201 203 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 203 202 204 20 (set (reg:SI 121 [ M.6_45 ])
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -36 [0xffffffffffffffdc])) [1 kspace+0 S4 A32])) "../src/io.f":175 82 {*movsi_internal}
     (nil))
(insn 204 203 205 20 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -20 [0xffffffffffffffec])) [1 kcomma+0 S4 A32])
            (reg:SI 121 [ M.6_45 ]))) "../src/io.f":175 7 {*cmpsi_1}
     (nil))
(jump_insn 205 204 206 20 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 208)
            (pc))) "../src/io.f":175 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 208)
;;  succ:       21 (FALLTHRU)
;;              22
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 121 124

;; basic block 21, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 20, next block 22, flags: (RTL)
;;  pred:       20 (FALLTHRU)
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 124
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 121
(note 206 205 207 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 207 206 208 21 (set (reg:SI 121 [ M.6_45 ])
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [1 kcomma+0 S4 A32])) "../src/io.f":175 82 {*movsi_internal}
     (nil))
;;  succ:       22 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 121 124

;; basic block 22, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 21, next block 23, flags: (RTL)
;;  pred:       20
;;              21 (FALLTHRU)
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 121 124
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 121
;; lr  def 	 17 [flags] 186
(code_label 208 207 209 22 35 (nil) [1 uses])
(note 209 208 210 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 210 209 211 22 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [1 kdelim+0 S4 A32])
        (reg:SI 121 [ M.6_45 ])) "../src/io.f":175 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 121 [ M.6_45 ])
        (nil)))
(insn 211 210 212 22 (set (reg:SI 186)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])) "../src/io.f":177 82 {*movsi_internal}
     (nil))
(insn 212 211 213 22 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 186)
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -40 [0xffffffffffffffd8])) [1 kdelim+0 S4 A32]))) "../src/io.f":177 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 186)
        (nil)))
(jump_insn 213 212 214 22 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 218)
            (pc))) "../src/io.f":177 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 218)
;;  succ:       23 (FALLTHRU)
;;              24
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 124

;; basic block 23, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 22, next block 24, flags: (RTL)
;;  pred:       22 (FALLTHRU)
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 124
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 214 213 215 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 215 214 309 23 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":179 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 309 215 310 23 (set (pc)
        (label_ref 285)) "../src/io.f":180 649 {jump}
     (nil)
 -> 285)
;;  succ:       27 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 124

(barrier 310 309 218)
;; basic block 24, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 23, next block 25, flags: (RTL)
;;  pred:       22
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 124
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 111 112 113 114 115 116 117 118 119 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203
(code_label 218 310 219 24 36 (nil) [1 uses])
(note 219 218 223 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 223 219 224 24 (set (reg:SI 190)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [1 kdelim+0 S4 A32])) "../src/io.f":184 82 {*movsi_internal}
     (nil))
(insn 224 223 225 24 (parallel [
            (set (reg:SI 189)
                (plus:SI (reg:SI 190)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":184 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 190)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -40 [0xffffffffffffffd8])) [1 kdelim+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff]))
                (nil)))))
(insn 225 224 226 24 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -44 [0xffffffffffffffd4])) [1 kend+0 S4 A32])
        (reg:SI 189)) "../src/io.f":184 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 189)
        (nil)))
(insn 226 225 227 24 (set (reg/f:DI 191)
        (symbol_ref/f:DI ("*lC4") [flags 0x2]  <var_decl 0x143b723f0 *lC4>)) "../src/io.f":185 81 {*movdi_internal}
     (nil))
(insn 227 226 228 24 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -520 [0xfffffffffffffdf8])) [5 dt_parm.7.common.filename+0 S8 A64])
        (reg/f:DI 191)) "../src/io.f":185 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 191)
        (nil)))
(insn 228 227 229 24 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -512 [0xfffffffffffffe00])) [1 dt_parm.7.common.line+0 S4 A128])
        (const_int 185 [0xb9])) "../src/io.f":185 82 {*movsi_internal}
     (nil))
(insn 229 228 230 24 (set (reg:SI 193)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])) "../src/io.f":185 82 {*movsi_internal}
     (nil))
(insn 230 229 231 24 (parallel [
            (set (reg:SI 192)
                (plus:SI (reg:SI 193)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":185 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 193)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff]))
                (nil)))))
(insn 231 230 232 24 (set (reg:DI 194)
        (sign_extend:DI (reg:SI 192))) "../src/io.f":185 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 192)
        (nil)))
(insn 232 231 233 24 (set (reg/f:DI 195)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -536 [0xfffffffffffffde8])) [10 input+0 S8 A64])) "../src/io.f":185 81 {*movdi_internal}
     (nil))
(insn 233 232 234 24 (parallel [
            (set (reg/f:DI 111 [ _25 ])
                (plus:DI (reg:DI 194)
                    (reg/f:DI 195)))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":185 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 195)
        (expr_list:REG_DEAD (reg:DI 194)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -536 [0xfffffffffffffde8])) [10 input+0 S8 A64])
                        (reg:DI 194))
                    (nil))))))
(insn 234 233 235 24 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -432 [0xfffffffffffffe50])) [5 dt_parm.7.internal_unit+0 S8 A128])
        (reg/f:DI 111 [ _25 ])) "../src/io.f":185 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 111 [ _25 ])
        (nil)))
(insn 235 234 236 24 (set (reg:SI 196)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -44 [0xffffffffffffffd4])) [1 kend+0 S4 A32])) "../src/io.f":185 82 {*movsi_internal}
     (nil))
(insn 236 235 237 24 (parallel [
            (set (reg:SI 112 [ _26 ])
                (minus:SI (reg:SI 196)
                    (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":185 273 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 196)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -44 [0xffffffffffffffd4])) [1 kend+0 S4 A32])
                    (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32]))
                (nil)))))
(insn 237 236 239 24 (parallel [
            (set (reg:SI 113 [ _27 ])
                (plus:SI (reg:SI 112 [ _26 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":185 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 112 [ _26 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 239 237 238 24 (set (reg:SI 197)
        (const_int 0 [0])) "../src/io.f":185 82 {*movsi_internal}
     (nil))
(insn 238 239 240 24 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 113 [ _27 ])
            (const_int 0 [0]))) "../src/io.f":185 3 {*cmpsi_ccno_1}
     (nil))
(insn 240 238 241 24 (set (reg:SI 114 [ _28 ])
        (if_then_else:SI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:SI 113 [ _27 ])
            (reg:SI 197))) "../src/io.f":185 966 {*movsicc_noc}
     (expr_list:REG_DEAD (reg:SI 197)
        (expr_list:REG_DEAD (reg:SI 113 [ _27 ])
            (expr_list:REG_DEAD (reg:CCGOC 17 flags)
                (nil)))))
(insn 241 240 242 24 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -424 [0xfffffffffffffe58])) [1 dt_parm.7.internal_unit_len+0 S4 A64])
        (reg:SI 114 [ _28 ])) "../src/io.f":185 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 114 [ _28 ])
        (nil)))
(insn 242 241 243 24 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -464 [0xfffffffffffffe30])) [5 dt_parm.7.internal_unit_desc+0 S8 A128])
        (const_int 0 [0])) "../src/io.f":185 81 {*movdi_internal}
     (nil))
(insn 243 242 244 24 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -524 [0xfffffffffffffdf4])) [1 dt_parm.7.common.unit+0 S4 A32])
        (const_int -1 [0xffffffffffffffff])) "../src/io.f":185 82 {*movsi_internal}
     (nil))
(insn 244 243 245 24 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -528 [0xfffffffffffffdf0])) [1 dt_parm.7.common.flags+0 S4 A128])
        (const_int 16516 [0x4084])) "../src/io.f":185 82 {*movsi_internal}
     (nil))
(insn 245 244 246 24 (parallel [
            (set (reg:DI 198)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -528 [0xfffffffffffffdf0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":185 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 246 245 247 24 (set (reg:DI 5 di)
        (reg:DI 198)) "../src/io.f":185 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 198)
        (nil)))
(call_insn 247 246 248 24 (call (mem:QI (symbol_ref:DI ("_gfortran_st_read") [flags 0x41]  <function_decl 0x1439e0700 _gfortran_st_read>) [0 _gfortran_st_read S1 A8])
        (const_int 0 [0])) "../src/io.f":185 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 248 247 249 24 (set (reg:SI 199)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -28 [0xffffffffffffffe4])) [1 n+0 S4 A32])) "../src/io.f":185 82 {*movsi_internal}
     (nil))
(insn 249 248 250 24 (set (reg:DI 115 [ _29 ])
        (sign_extend:DI (reg:SI 199))) "../src/io.f":185 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 199)
        (nil)))
(insn 250 249 251 24 (parallel [
            (set (reg:DI 116 [ _30 ])
                (plus:DI (reg:DI 115 [ _29 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":185 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 115 [ _29 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 251 250 252 24 (parallel [
            (set (reg:DI 200)
                (ashift:DI (reg:DI 116 [ _30 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":185 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 116 [ _30 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 252 251 253 24 (set (reg/f:DI 201)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -544 [0xfffffffffffffde0])) [14 rnum+0 S8 A64])) "../src/io.f":185 81 {*movdi_internal}
     (nil))
(insn 253 252 254 24 (parallel [
            (set (reg/f:DI 117 [ _31 ])
                (plus:DI (reg:DI 200)
                    (reg/f:DI 201)))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":185 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 201)
        (expr_list:REG_DEAD (reg:DI 200)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -544 [0xfffffffffffffde0])) [14 rnum+0 S8 A64])
                        (reg:DI 200))
                    (nil))))))
(insn 254 253 255 24 (parallel [
            (set (reg:DI 202)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -528 [0xfffffffffffffdf0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":185 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 255 254 256 24 (set (reg:SI 1 dx)
        (const_int 4 [0x4])) "../src/io.f":185 82 {*movsi_internal}
     (nil))
(insn 256 255 257 24 (set (reg:DI 4 si)
        (reg/f:DI 117 [ _31 ])) "../src/io.f":185 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 117 [ _31 ])
        (nil)))
(insn 257 256 258 24 (set (reg:DI 5 di)
        (reg:DI 202)) "../src/io.f":185 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 202)
        (nil)))
(call_insn 258 257 259 24 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_real") [flags 0x41]  <function_decl 0x1439d4c00 _gfortran_transfer_real>) [0 _gfortran_transfer_real S1 A8])
        (const_int 0 [0])) "../src/io.f":185 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 259 258 260 24 (parallel [
            (set (reg:DI 203)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -528 [0xfffffffffffffdf0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":185 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 260 259 261 24 (set (reg:DI 5 di)
        (reg:DI 203)) "../src/io.f":185 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 203)
        (nil)))
(call_insn 261 260 262 24 (call (mem:QI (symbol_ref:DI ("_gfortran_st_read_done") [flags 0x41]  <function_decl 0x1439e4200 _gfortran_st_read_done>) [0 _gfortran_st_read_done S1 A8])
        (const_int 0 [0])) "../src/io.f":185 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 262 261 263 24 (set (reg:SI 118 [ _32 ])
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -528 [0xfffffffffffffdf0])) [1 dt_parm.7.common.flags+0 S4 A128])) "../src/io.f":185 82 {*movsi_internal}
     (nil))
(insn 263 262 264 24 (parallel [
            (set (reg:SI 119 [ _33 ])
                (and:SI (reg:SI 118 [ _32 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":185 391 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 118 [ _32 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 264 263 265 24 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 119 [ _33 ])
            (const_int 1 [0x1]))) "../src/io.f":185 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 119 [ _33 ])
        (nil)))
(jump_insn 265 264 269 24 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 311)
            (pc))) "../src/io.f":185 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 311)
;;  succ:       25 (FALLTHRU)
;;              26
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 124

;; basic block 25, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 24, next block 26, flags: (RTL)
;;  pred:       24 (FALLTHRU)
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 204
(note 269 265 268 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(note 268 269 270 25 ("L.22") NOTE_INSN_DELETED_LABEL 38)
(insn 270 268 271 25 (set (reg/f:DI 204)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -560 [0xfffffffffffffdd0])) [12 error+0 S8 A64])) "../src/io.f":202 81 {*movdi_internal}
     (nil))
(insn 271 270 312 25 (set (mem:SI (reg/f:DI 204) [13 *error_94(D)+0 S4 A32])
        (const_int 1 [0x1])) "../src/io.f":202 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 204)
        (nil)))
(jump_insn 312 271 313 25 (set (pc)
        (label_ref 303)) "../src/io.f":203 649 {jump}
     (nil)
 -> 303)
;;  succ:       30 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 313 312 311)
;; basic block 26, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 25, next block 27, flags: (RTL)
;;  pred:       24
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 124
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 205 206 209 210
(code_label 311 313 275 26 41 (nil) [1 uses])
(note 275 311 276 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 276 275 277 26 (set (reg/f:DI 205)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -552 [0xfffffffffffffdd8])) [11 nr+0 S8 A64])) "../src/io.f":186 81 {*movdi_internal}
     (nil))
(insn 277 276 278 26 (set (reg:SI 206)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -28 [0xffffffffffffffe4])) [1 n+0 S4 A32])) "../src/io.f":186 82 {*movsi_internal}
     (nil))
(insn 278 277 282 26 (set (mem:SI (reg/f:DI 205) [1 *nr_59(D)+0 S4 A32])
        (reg:SI 206)) "../src/io.f":186 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 206)
        (expr_list:REG_DEAD (reg/f:DI 205)
            (nil))))
(insn 282 278 283 26 (set (reg:SI 210)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [1 kdelim+0 S4 A32])) "../src/io.f":189 82 {*movsi_internal}
     (nil))
(insn 283 282 284 26 (parallel [
            (set (reg:SI 209)
                (plus:SI (reg:SI 210)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":189 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 210)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -40 [0xffffffffffffffd8])) [1 kdelim+0 S4 A32])
                    (const_int 1 [0x1]))
                (nil)))))
(insn 284 283 285 26 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])
        (reg:SI 209)) "../src/io.f":189 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 209)
        (nil)))
;;  succ:       27 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 124

;; basic block 27, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 26, next block 28, flags: (RTL)
;;  pred:       26 (FALLTHRU)
;;              16 [100.0%] 
;;              23 [100.0%] 
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 124
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 211
(code_label 285 284 286 27 33 (nil) [2 uses])
(note 286 285 287 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 287 286 288 27 (set (reg:SI 211)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])) "../src/io.f":191 82 {*movsi_internal}
     (nil))
(insn 288 287 289 27 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 211)
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [1 ilen+0 S4 A32]))) "../src/io.f":191 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 211)
        (nil)))
(jump_insn 289 288 290 27 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 317)
            (pc))) "../src/io.f":191 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 317)
;;  succ:       31
;;              28 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 124

;; basic block 28, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 27, next block 31, flags: (RTL)
;;  pred:       27 (FALLTHRU)
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 124
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 290 289 291 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 291 290 314 28 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [1 ipass+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [1 ipass+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":148 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 314 291 315 28 (set (pc)
        (label_ref 292)) "../src/io.f":148 649 {jump}
     (nil)
 -> 292)
;;  succ:       8 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 124

(barrier 315 314 317)
;; basic block 31, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 28, next block 29, flags: (RTL)
;;  pred:       8
;;              19
;;              27
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 317 315 316 31 42 (nil) [3 uses])
(note 316 317 318 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 318 316 295 31 (const_int 0 [0]) "../src/io.f":192 682 {nop}
     (nil))
;;  succ:       29 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 29, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 31, next block 30, flags: (RTL)
;;  pred:       31 [100.0%]  (FALLTHRU)
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 212
(code_label 295 318 296 29 28 (nil) [0 uses])
(note 296 295 297 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 297 296 298 29 (set (reg/f:DI 212)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -560 [0xfffffffffffffdd0])) [12 error+0 S8 A64])) "../src/io.f":196 81 {*movdi_internal}
     (nil))
(insn 298 297 306 29 (set (mem:SI (reg/f:DI 212) [13 *error_94(D)+0 S4 A32])
        (const_int 0 [0])) "../src/io.f":196 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 212)
        (nil)))
(insn 306 298 303 29 (const_int 0 [0]) "../src/io.f":197 682 {nop}
     (nil))
;;  succ:       30 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 30, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 29, next block 1, flags: (RTL)
;;  pred:       29 (FALLTHRU)
;;              6
;;              25 [100.0%] 
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 303 306 304 30 23 (nil) [2 uses])
(note 304 303 0 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function fread (fread_, funcdef_no=2, decl_uid=3595, cgraph_uid=2, symbol_order=2)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 15 n_edges 20 count 15 (    1)
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 14 3 4 5 6 7 8 9 10 11 12 13
;;
;; Loop 1
;;  header 3, latch 14
;;  depth 1, outer 0
;;  nodes: 3 14 5 6
;; 2 succs { 3 }
;; 14 succs { 3 }
;; 3 succs { 4 5 }
;; 4 succs { 13 }
;; 5 succs { 14 6 }
;; 6 succs { 14 7 }
;; 7 succs { 8 9 }
;; 8 succs { 9 }
;; 9 succs { 10 12 }
;; 10 succs { 11 12 }
;; 11 succs { 12 }
;; 12 succs { 13 }
;; 13 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 43.
verify found no changes in insn with uid = 50.
verify found no changes in insn with uid = 53.
verify found no changes in insn with uid = 74.
verify found no changes in insn with uid = 86.
verify found no changes in insn with uid = 98.
verify found no changes in insn with uid = 128.
verify found no changes in insn with uid = 143.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r143: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r143,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r142,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r141: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a11 (r141,l0) best DIREG, allocno GENERAL_REGS
    r140: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a12 (r140,l0) best SIREG, allocno GENERAL_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r139,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r137,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r136,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r135: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a20 (r135,l0) best DIREG, allocno GENERAL_REGS
    r134: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a21 (r134,l0) best SIREG, allocno GENERAL_REGS
    r133: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a23 (r133,l0) best DIREG, allocno GENERAL_REGS
    r132: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a24 (r132,l0) best SIREG, allocno GENERAL_REGS
    r131: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a26 (r131,l0) best CREG, allocno GENERAL_REGS
    r130: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r130,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r129: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a30 (r129,l0) best DIREG, allocno GENERAL_REGS
    r128: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a31 (r128,l0) best DIREG, allocno GENERAL_REGS
    r127: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a32 (r127,l0) best SIREG, allocno GENERAL_REGS
    r126: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a33 (r126,l0) best DREG, allocno GENERAL_REGS
    r125: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a34 (r125,l0) best DIREG, allocno GENERAL_REGS
    r124: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a36 (r124,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r123: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a37 (r123,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r122: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a38 (r122,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a39 (r121,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r120: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a42 (r120,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r118: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a45 (r118,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a48 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r108,l0) best DIREG, allocno GENERAL_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r106,l0) best DREG, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a13 (r101,l0) best DREG, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a19 (r98,l0) best AREG, allocno GENERAL_REGS
    r97: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a22 (r97,l0) best AREG, allocno GENERAL_REGS
    r96: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a25 (r96,l0) best AREG, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a35 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a40 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a41 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a43 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a44 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a46 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a47 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r143,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a1(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a2(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a3(r142,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a4(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a5(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:40 NO_REX_SSE_REGS:40 SSE_REGS:40 MMX_REGS:65 INT_SSE_REGS:45 ALL_REGS:1040 MEM:16
  a6(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a7(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a8(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:40 NO_REX_SSE_REGS:40 SSE_REGS:40 MMX_REGS:64 INT_SSE_REGS:45 ALL_REGS:936 MEM:17
  a9(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a10(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a11(r141,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a12(r140,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a13(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a14(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:39 INT_SSE_REGS:27 ALL_REGS:624 MEM:10
  a15(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:39 INT_SSE_REGS:27 ALL_REGS:624 MEM:10
  a16(r139,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a17(r137,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a18(r136,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a19(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a20(r135,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a21(r134,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a22(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a23(r133,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a24(r132,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a25(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a26(r131,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a27(r130,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a28(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a29(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a30(r129,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a31(r128,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a32(r127,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a33(r126,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a34(r125,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a35(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a36(r124,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a37(r123,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a38(r122,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a39(r121,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a40(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a41(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a42(r120,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a43(r90,l0) costs: AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:2
  a44(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a45(r118,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a46(r88,l0) costs: AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:2
  a47(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a48(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7

   Insn 153(l0): point = 1
   Insn 147(l0): point = 3
   Insn 146(l0): point = 5
   Insn 143(l0): point = 8
   Insn 142(l0): point = 10
   Insn 141(l0): point = 12
   Insn 140(l0): point = 14
   Insn 139(l0): point = 16
   Insn 138(l0): point = 18
   Insn 137(l0): point = 20
   Insn 136(l0): point = 22
   Insn 135(l0): point = 24
   Insn 134(l0): point = 26
   Insn 132(l0): point = 29
   Insn 131(l0): point = 31
   Insn 130(l0): point = 33
   Insn 129(l0): point = 35
   Insn 128(l0): point = 37
   Insn 127(l0): point = 39
   Insn 126(l0): point = 41
   Insn 125(l0): point = 43
   Insn 124(l0): point = 45
   Insn 123(l0): point = 47
   Insn 122(l0): point = 49
   Insn 121(l0): point = 51
   Insn 120(l0): point = 53
   Insn 119(l0): point = 55
   Insn 117(l0): point = 58
   Insn 116(l0): point = 60
   Insn 115(l0): point = 62
   Insn 114(l0): point = 64
   Insn 112(l0): point = 66
   Insn 113(l0): point = 68
   Insn 109(l0): point = 70
   Insn 106(l0): point = 73
   Insn 105(l0): point = 75
   Insn 103(l0): point = 78
   Insn 102(l0): point = 80
   Insn 101(l0): point = 82
   Insn 100(l0): point = 84
   Insn 99(l0): point = 86
   Insn 98(l0): point = 88
   Insn 97(l0): point = 90
   Insn 96(l0): point = 92
   Insn 95(l0): point = 94
   Insn 94(l0): point = 96
   Insn 93(l0): point = 98
   Insn 92(l0): point = 100
   Insn 91(l0): point = 102
   Insn 155(l0): point = 105
   Insn 63(l0): point = 107
   Insn 62(l0): point = 109
   Insn 161(l0): point = 112
   Insn 78(l0): point = 115
   Insn 77(l0): point = 117
   Insn 75(l0): point = 119
   Insn 74(l0): point = 121
   Insn 73(l0): point = 123
   Insn 72(l0): point = 125
   Insn 71(l0): point = 127
   Insn 70(l0): point = 129
   Insn 69(l0): point = 131
   Insn 68(l0): point = 133
   Insn 57(l0): point = 136
   Insn 56(l0): point = 138
   Insn 55(l0): point = 140
   Insn 54(l0): point = 142
   Insn 53(l0): point = 144
   Insn 52(l0): point = 146
   Insn 51(l0): point = 148
   Insn 50(l0): point = 150
   Insn 49(l0): point = 152
   Insn 48(l0): point = 154
   Insn 47(l0): point = 156
   Insn 46(l0): point = 158
   Insn 45(l0): point = 160
   Insn 44(l0): point = 162
   Insn 43(l0): point = 164
   Insn 42(l0): point = 166
   Insn 41(l0): point = 168
   Insn 40(l0): point = 170
   Insn 39(l0): point = 172
   Insn 38(l0): point = 174
   Insn 37(l0): point = 176
   Insn 36(l0): point = 178
   Insn 35(l0): point = 180
   Insn 34(l0): point = 182
   Insn 33(l0): point = 184
   Insn 32(l0): point = 186
   Insn 31(l0): point = 188
   Insn 30(l0): point = 190
   Insn 29(l0): point = 192
   Insn 28(l0): point = 194
   Insn 27(l0): point = 196
   Insn 26(l0): point = 198
   Insn 89(l0): point = 201
   Insn 88(l0): point = 203
   Insn 87(l0): point = 205
   Insn 86(l0): point = 207
   Insn 85(l0): point = 209
   Insn 84(l0): point = 211
   Insn 83(l0): point = 213
   Insn 82(l0): point = 215
   Insn 81(l0): point = 217
   Insn 80(l0): point = 219
   Insn 157(l0): point = 222
   Insn 21(l0): point = 224
   Insn 20(l0): point = 226
   Insn 19(l0): point = 228
   Insn 18(l0): point = 230
   Insn 14(l0): point = 232
   Insn 13(l0): point = 234
   Insn 12(l0): point = 236
   Insn 11(l0): point = 238
   Insn 7(l0): point = 240
   Insn 6(l0): point = 242
   Insn 5(l0): point = 244
   Insn 4(l0): point = 246
   Insn 3(l0): point = 248
   Insn 2(l0): point = 250
 a0(r143): [4..5]
 a1(r108): [11..16]
 a2(r106): [15..22]
 a3(r142): [17..18]
 a4(r107): [17..20]
 a5(r114): [21..64]
 a6(r105): [23..24]
 a7(r104): [23..26]
 a8(r115): [27..62]
 a9(r103): [32..33]
 a10(r102): [32..35]
 a11(r141): [40..45]
 a12(r140): [42..47]
 a13(r101): [44..49]
 a14(r100): [50..53]
 a15(r99): [50..55]
 a16(r139): [65..68]
 a17(r137): [74..75]
 a18(r136): [83..84]
 a19(r98): [85..86]
 a20(r135): [91..100]
 a21(r134): [93..102]
 a22(r97): [204..205]
 a23(r133): [210..217]
 a24(r132): [212..219]
 a25(r96): [118..119]
 a26(r131): [130..133]
 a27(r130): [108..109]
 a28(r95): [139..140]
 a29(r94): [141..142]
 a30(r129): [147..148]
 a31(r128): [153..158]
 a32(r127): [155..160]
 a33(r126): [157..162]
 a34(r125): [167..168]
 a35(r93): [171..172]
 a36(r124): [173..174]
 a37(r123): [181..182]
 a38(r122): [187..188]
 a39(r121): [191..192]
 a40(r92): [191..194]
 a41(r91): [195..196]
 a42(r120): [197..198]
 a43(r90 [0]): [225..252]
 a43(r90 [1]): [224..252]
 a44(r89): [227..228]
 a45(r118): [229..230]
 a46(r88 [0]): [233..252]
 a46(r88 [1]): [232..252]
 a47(r87): [235..236]
 a48(r116): [237..238]
Compressing live ranges: from 253 to 68 - 26%
Ranges after the compression:
 a0(r143): [0..1]
 a1(r108): [2..3]
 a2(r106): [2..7]
 a3(r142): [4..5]
 a4(r107): [4..5]
 a5(r114): [6..15]
 a6(r105): [8..9]
 a7(r104): [8..9]
 a8(r115): [10..15]
 a9(r103): [10..11]
 a10(r102): [10..11]
 a11(r141): [12..13]
 a12(r140): [12..13]
 a13(r101): [12..13]
 a14(r100): [14..15]
 a15(r99): [14..15]
 a16(r139): [16..17]
 a17(r137): [18..19]
 a18(r136): [20..21]
 a19(r98): [22..23]
 a20(r135): [24..25]
 a21(r134): [24..25]
 a22(r97): [56..57]
 a23(r133): [58..59]
 a24(r132): [58..59]
 a25(r96): [28..29]
 a26(r131): [30..31]
 a27(r130): [26..27]
 a28(r95): [32..33]
 a29(r94): [34..35]
 a30(r129): [36..37]
 a31(r128): [38..39]
 a32(r127): [38..39]
 a33(r126): [38..39]
 a34(r125): [40..41]
 a35(r93): [42..43]
 a36(r124): [44..45]
 a37(r123): [46..47]
 a38(r122): [48..49]
 a39(r121): [50..51]
 a40(r92): [50..51]
 a41(r91): [52..53]
 a42(r120): [54..55]
 a43(r90 [0]): [60..67]
 a43(r90 [1]): [60..67]
 a44(r89): [60..61]
 a45(r118): [62..63]
 a46(r88 [0]): [64..67]
 a46(r88 [1]): [64..67]
 a47(r87): [64..65]
 a48(r116): [66..67]
  regions=1, blocks=15, points=68
    allocnos=49 (big 2), copies=0, conflicts=0, ranges=51
Disposition:
   47:r87  l0     0   46:r88  l0    41   44:r89  l0     0   43:r90  l0    39
   41:r91  l0     0   40:r92  l0     1   35:r93  l0     0   29:r94  l0     0
   28:r95  l0     0   25:r96  l0     0   22:r97  l0     0   19:r98  l0     0
   15:r99  l0     1   14:r100 l0     0   13:r101 l0     1   10:r102 l0     1
    9:r103 l0     0    7:r104 l0     1    6:r105 l0     0    2:r106 l0     1
    4:r107 l0     2    1:r108 l0     0    5:r114 l0    41    8:r115 l0     3
   48:r116 l0     0   45:r118 l0     0   42:r120 l0     0   39:r121 l0     0
   38:r122 l0     0   37:r123 l0     0   36:r124 l0     0   34:r125 l0     0
   33:r126 l0     1   32:r127 l0     2   31:r128 l0     0   30:r129 l0     0
   27:r130 l0     0   26:r131 l0     0   24:r132 l0     4   23:r133 l0     0
   21:r134 l0     4   20:r135 l0     0   18:r136 l0     0   17:r137 l0     0
   16:r139 l0     0   12:r140 l0     2   11:r141 l0     0    3:r142 l0     0
    0:r143 l0     0
+++Costs: overall -14, reg -14, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


fread

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 37 [r8] 38 [r9]
;;  ref usage 	r0={9d,3u} r1={15d,7u} r2={12d,4u} r4={15d,7u} r5={17d,9u} r6={1d,14u} r7={1d,22u} r8={8d} r9={8d} r10={8d} r11={8d} r12={8d} r13={8d} r14={8d} r15={8d} r16={1d,15u} r17={25d,8u} r18={8d} r19={8d} r20={1d,53u,1e} r21={9d} r22={9d} r23={9d} r24={9d} r25={9d} r26={9d} r27={9d} r28={9d} r29={8d} r30={8d} r31={8d} r32={8d} r33={8d} r34={8d} r35={8d} r36={8d} r37={11d,3u} r38={9d,1u} r39={8d} r40={8d} r45={8d} r46={8d} r47={8d} r48={8d} r49={8d} r50={8d} r51={8d} r52={8d} r53={8d} r54={8d} r55={8d} r56={8d} r57={8d} r58={8d} r59={8d} r60={8d} r61={8d} r62={8d} r63={8d} r64={8d} r65={8d} r66={8d} r67={8d} r68={8d} r69={8d} r70={8d} r71={8d} r72={8d} r73={8d} r74={8d} r75={8d} r76={8d} r77={8d} r78={8d} r79={8d} r80={8d} r87={1d,1u} r88={2d,2u} r89={1d,1u} r90={2d,2u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,2u} r100={1d,2u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u,1e} r108={1d,1u} r114={1d,4u} r115={1d,4u} r116={1d,1u} r118={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,1u} r127={1d,1u} r128={1d,1u} r129={1d,1u} r130={1d,1u} r131={1d,1u} r132={1d,1u} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} 
;;    total ref usage 895{688d,205u,2e} in 120{112 regular + 8 call} insns.
(note 1 0 9 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 14, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9] 88 90
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9] 88 90
;; lr  def 	 87 89 116 118
(note 9 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 9 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -504 [0xfffffffffffffe08])) [11 lu+0 S8 A64])
        (reg:DI 5 di [ lu ])) "../src/io.f":21 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ lu ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -512 [0xfffffffffffffe00])) [10 line+0 S8 A64])
        (reg:DI 4 si [ line ])) "../src/io.f":21 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ line ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -520 [0xfffffffffffffdf8])) [11 iline+0 S8 A64])
        (reg:DI 1 dx [ iline ])) "../src/io.f":21 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ iline ])
        (nil)))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -528 [0xfffffffffffffdf0])) [11 ierr+0 S8 A64])
        (reg:DI 2 cx [ ierr ])) "../src/io.f":21 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [ ierr ])
        (nil)))
(insn 6 5 7 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -536 [0xfffffffffffffde8])) [10 cval+0 S8 A64])
        (reg:DI 37 r8 [ cval ])) "../src/io.f":21 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 37 r8 [ cval ])
        (nil)))
(insn 7 6 8 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -540 [0xfffffffffffffde4])) [1 _line+0 S4 A32])
        (reg:SI 38 r9 [ _line ])) "../src/io.f":21 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 38 r9 [ _line ])
        (nil)))
(note 8 7 11 2 NOTE_INSN_FUNCTION_BEG)
(insn 11 8 12 2 (set (reg:SI 116)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -540 [0xfffffffffffffde4])) [1 _line+0 S4 A32])) "../src/io.f":45 82 {*movsi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:DI 87 [ _1 ])
        (sign_extend:DI (reg:SI 116))) "../src/io.f":45 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 116)
        (nil)))
(insn 13 12 14 2 (set (subreg:DI (reg:TI 88 [ _2 ]) 0)
        (reg:DI 87 [ _1 ])) "../src/io.f":45 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 87 [ _1 ])
        (nil)))
(insn 14 13 18 2 (set (subreg:DI (reg:TI 88 [ _2 ]) 8)
        (const_int 0 [0])) "../src/io.f":45 81 {*movdi_internal}
     (expr_list:REG_UNUSED (reg:TI 88 [ _2 ])
        (nil)))
(insn 18 14 19 2 (set (reg:SI 118)
        (mem/c:SI (reg/f:DI 16 argp) [1 _cval+0 S4 A64])) "../src/io.f":45 82 {*movsi_internal}
     (nil))
(insn 19 18 20 2 (set (reg:DI 89 [ _3 ])
        (sign_extend:DI (reg:SI 118))) "../src/io.f":45 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 118)
        (nil)))
(insn 20 19 21 2 (set (subreg:DI (reg:TI 90 [ _4 ]) 0)
        (reg:DI 89 [ _3 ])) "../src/io.f":45 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 89 [ _3 ])
        (nil)))
(insn 21 20 157 2 (set (subreg:DI (reg:TI 90 [ _4 ]) 8)
        (const_int 0 [0])) "../src/io.f":45 81 {*movdi_internal}
     (expr_list:REG_UNUSED (reg:TI 90 [ _4 ])
        (nil)))
(jump_insn 157 21 158 2 (set (pc)
        (label_ref 76)) 649 {jump}
     (nil)
 -> 76)
;;  succ:       3
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 158 157 160)
;; basic block 14, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 3, flags: (RTL)
;;  pred:       5 (DFS_BACK)
;;              6 (DFS_BACK)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 160 158 159 14 51 (nil) [2 uses])
(note 159 160 161 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 161 159 76 14 (const_int 0 [0]) "../src/io.f":21 682 {nop}
     (nil))
;;  succ:       3 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 14, next block 4, flags: (RTL)
;;  pred:       2
;;              14 [100.0%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 91 92 93 94 95 120 121 122 123 124 125 126 127 128 129
(code_label 76 161 25 3 47 (nil) [1 uses])
(note 25 76 26 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 3 (set (reg/f:DI 120)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -520 [0xfffffffffffffdf8])) [11 iline+0 S8 A64])) "../src/io.f":25 81 {*movdi_internal}
     (nil))
(insn 27 26 28 3 (set (reg:SI 91 [ _5 ])
        (mem:SI (reg/f:DI 120) [1 *iline_34(D)+0 S4 A32])) "../src/io.f":25 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 120)
        (nil)))
(insn 28 27 29 3 (parallel [
            (set (reg:SI 92 [ _6 ])
                (plus:SI (reg:SI 91 [ _5 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":25 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 91 [ _5 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 29 28 30 3 (set (reg/f:DI 121)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -520 [0xfffffffffffffdf8])) [11 iline+0 S8 A64])) "../src/io.f":25 81 {*movdi_internal}
     (nil))
(insn 30 29 31 3 (set (mem:SI (reg/f:DI 121) [1 *iline_34(D)+0 S4 A32])
        (reg:SI 92 [ _6 ])) "../src/io.f":25 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 121)
        (expr_list:REG_DEAD (reg:SI 92 [ _6 ])
            (nil))))
(insn 31 30 32 3 (set (reg/f:DI 122)
        (symbol_ref/f:DI ("*lC4") [flags 0x2]  <var_decl 0x143b723f0 *lC4>)) "../src/io.f":27 81 {*movdi_internal}
     (nil))
(insn 32 31 33 3 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -488 [0xfffffffffffffe18])) [5 dt_parm.8.common.filename+0 S8 A64])
        (reg/f:DI 122)) "../src/io.f":27 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 122)
        (nil)))
(insn 33 32 34 3 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -480 [0xfffffffffffffe20])) [1 dt_parm.8.common.line+0 S4 A128])
        (const_int 27 [0x1b])) "../src/io.f":27 82 {*movsi_internal}
     (nil))
(insn 34 33 35 3 (set (reg/f:DI 123)
        (symbol_ref/f:DI ("*lC5") [flags 0x2]  <var_decl 0x143ba4c60 *lC5>)) "../src/io.f":27 81 {*movdi_internal}
     (nil))
(insn 35 34 36 3 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -424 [0xfffffffffffffe58])) [5 dt_parm.8.format+0 S8 A64])
        (reg/f:DI 123)) "../src/io.f":27 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 123)
        (nil)))
(insn 36 35 37 3 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -416 [0xfffffffffffffe60])) [1 dt_parm.8.format_len+0 S4 A128])
        (const_int 3 [0x3])) "../src/io.f":27 82 {*movsi_internal}
     (nil))
(insn 37 36 38 3 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -496 [0xfffffffffffffe10])) [1 dt_parm.8.common.flags+0 S4 A128])
        (const_int 4104 [0x1008])) "../src/io.f":27 82 {*movsi_internal}
     (nil))
(insn 38 37 39 3 (set (reg/f:DI 124)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -504 [0xfffffffffffffe08])) [11 lu+0 S8 A64])) "../src/io.f":27 81 {*movdi_internal}
     (nil))
(insn 39 38 40 3 (set (reg:SI 93 [ _7 ])
        (mem:SI (reg/f:DI 124) [1 *lu_41(D)+0 S4 A32])) "../src/io.f":27 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 124)
        (nil)))
(insn 40 39 41 3 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -492 [0xfffffffffffffe14])) [1 dt_parm.8.common.unit+0 S4 A32])
        (reg:SI 93 [ _7 ])) "../src/io.f":27 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 93 [ _7 ])
        (nil)))
(insn 41 40 42 3 (parallel [
            (set (reg:DI 125)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -496 [0xfffffffffffffe10])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":27 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 42 41 43 3 (set (reg:DI 5 di)
        (reg:DI 125)) "../src/io.f":27 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 125)
        (nil)))
(call_insn 43 42 44 3 (call (mem:QI (symbol_ref:DI ("_gfortran_st_read") [flags 0x41]  <function_decl 0x1439e0700 _gfortran_st_read>) [0 _gfortran_st_read S1 A8])
        (const_int 0 [0])) "../src/io.f":27 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 44 43 45 3 (set (reg:SI 126)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -540 [0xfffffffffffffde4])) [1 _line+0 S4 A32])) "../src/io.f":27 82 {*movsi_internal}
     (nil))
(insn 45 44 46 3 (set (reg:DI 127)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -512 [0xfffffffffffffe00])) [10 line+0 S8 A64])) "../src/io.f":27 81 {*movdi_internal}
     (nil))
(insn 46 45 47 3 (parallel [
            (set (reg:DI 128)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -496 [0xfffffffffffffe10])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":27 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 47 46 48 3 (set (reg:SI 1 dx)
        (reg:SI 126)) "../src/io.f":27 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 126)
        (nil)))
(insn 48 47 49 3 (set (reg:DI 4 si)
        (reg:DI 127)) "../src/io.f":27 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 127)
        (nil)))
(insn 49 48 50 3 (set (reg:DI 5 di)
        (reg:DI 128)) "../src/io.f":27 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 128)
        (nil)))
(call_insn 50 49 51 3 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_character") [flags 0x41]  <function_decl 0x1439d4800 _gfortran_transfer_character>) [0 _gfortran_transfer_character S1 A8])
        (const_int 0 [0])) "../src/io.f":27 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 51 50 52 3 (parallel [
            (set (reg:DI 129)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -496 [0xfffffffffffffe10])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":27 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 52 51 53 3 (set (reg:DI 5 di)
        (reg:DI 129)) "../src/io.f":27 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 129)
        (nil)))
(call_insn 53 52 54 3 (call (mem:QI (symbol_ref:DI ("_gfortran_st_read_done") [flags 0x41]  <function_decl 0x1439e4200 _gfortran_st_read_done>) [0 _gfortran_st_read_done S1 A8])
        (const_int 0 [0])) "../src/io.f":27 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 54 53 55 3 (set (reg:SI 94 [ _8 ])
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -496 [0xfffffffffffffe10])) [1 dt_parm.8.common.flags+0 S4 A128])) "../src/io.f":27 82 {*movsi_internal}
     (nil))
(insn 55 54 56 3 (parallel [
            (set (reg:SI 95 [ _9 ])
                (and:SI (reg:SI 94 [ _8 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":27 391 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 94 [ _8 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 56 55 57 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 95 [ _9 ])
            (const_int 2 [0x2]))) "../src/io.f":27 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 95 [ _9 ])
        (nil)))
(jump_insn 57 56 61 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 154)
            (pc))) "../src/io.f":27 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 154)
;;  succ:       4 (FALLTHRU)
;;              5
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 130
(note 61 57 60 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(note 60 61 62 4 ("L.24") NOTE_INSN_DELETED_LABEL 45)
(insn 62 60 63 4 (set (reg/f:DI 130)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -528 [0xfffffffffffffdf0])) [11 ierr+0 S8 A64])) "../src/io.f":43 81 {*movdi_internal}
     (nil))
(insn 63 62 155 4 (set (mem:SI (reg/f:DI 130) [1 *ierr_48(D)+0 S4 A32])
        (const_int -1 [0xffffffffffffffff])) "../src/io.f":43 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 130)
        (nil)))
(jump_insn 155 63 156 4 (set (pc)
        (label_ref 150)) "../src/io.f":44 649 {jump}
     (nil)
 -> 150)
;;  succ:       13 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 156 155 154)
;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       3
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 96 131
(code_label 154 156 67 5 50 (nil) [1 uses])
(note 67 154 68 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 68 67 69 5 (set (reg:DI 131)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -512 [0xfffffffffffffe00])) [10 line+0 S8 A64])) "../src/io.f":30 81 {*movdi_internal}
     (nil))
(insn 69 68 70 5 (set (reg:SI 37 r8)
        (const_int 0 [0])) "../src/io.f":30 82 {*movsi_internal}
     (nil))
(insn 70 69 71 5 (set (reg:DI 2 cx)
        (reg:DI 131)) "../src/io.f":30 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 131)
        (nil)))
(insn 71 70 72 5 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) "../src/io.f":30 82 {*movsi_internal}
     (nil))
(insn 72 71 73 5 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*lC6") [flags 0x2]  <var_decl 0x143ba4cf0 *lC6>)) "../src/io.f":30 81 {*movdi_internal}
     (nil))
(insn 73 72 74 5 (set (reg:SI 5 di)
        (const_int 2 [0x2])) "../src/io.f":30 82 {*movsi_internal}
     (nil))
(call_insn/i 74 73 75 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_gfortran_string_index") [flags 0x41]  <function_decl 0x1439c4a00 _gfortran_string_index>) [0 _gfortran_string_index S1 A8])
            (const_int 0 [0]))) "../src/io.f":30 665 {*call_value}
     (expr_list:REG_DEAD (reg:SI 37 r8)
        (expr_list:REG_DEAD (reg:SI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:SI 1 dx)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (nil)))))))
(insn 75 74 77 5 (set (reg:SI 96 [ _10 ])
        (reg:SI 0 ax)) "../src/io.f":30 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 77 75 78 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 96 [ _10 ])
            (const_int 0 [0]))) "../src/io.f":30 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 96 [ _10 ])
        (nil)))
(jump_insn 78 77 79 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 160)
            (pc))) "../src/io.f":30 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 160)
;;  succ:       14 (DFS_BACK)
;;              6 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (RTL)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 97 132 133
(note 79 78 80 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 80 79 81 6 (set (reg:DI 132)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -512 [0xfffffffffffffe00])) [10 line+0 S8 A64])) "../src/io.f":31 81 {*movdi_internal}
     (nil))
(insn 81 80 82 6 (set (reg:SI 133)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -540 [0xfffffffffffffde4])) [1 _line+0 S4 A32])) "../src/io.f":31 82 {*movsi_internal}
     (nil))
(insn 82 81 83 6 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*lC2") [flags 0x2]  <var_decl 0x143b722d0 *lC2>)) "../src/io.f":31 81 {*movdi_internal}
     (nil))
(insn 83 82 84 6 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) "../src/io.f":31 82 {*movsi_internal}
     (nil))
(insn 84 83 85 6 (set (reg:DI 4 si)
        (reg:DI 132)) "../src/io.f":31 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 132)
        (nil)))
(insn 85 84 86 6 (set (reg:SI 5 di)
        (reg:SI 133)) "../src/io.f":31 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 133)
        (nil)))
(call_insn/i 86 85 87 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_gfortran_compare_string") [flags 0x41]  <function_decl 0x1439c4700 _gfortran_compare_string>) [0 _gfortran_compare_string S1 A8])
            (const_int 0 [0]))) "../src/io.f":31 665 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:SI 1 dx)
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 87 86 88 6 (set (reg:SI 97 [ _11 ])
        (reg:SI 0 ax)) "../src/io.f":31 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 88 87 89 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 97 [ _11 ])
            (const_int 0 [0]))) "../src/io.f":31 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 97 [ _11 ])
        (nil)))
(jump_insn 89 88 90 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 160)
            (pc))) "../src/io.f":31 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 160)
;;  succ:       14 (DFS_BACK)
;;              7 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (RTL)
;;  pred:       6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 98 134 135 136
(note 90 89 91 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 91 90 92 7 (set (reg:DI 134)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -512 [0xfffffffffffffe00])) [10 line+0 S8 A64])) "../src/io.f":33 81 {*movdi_internal}
     (nil))
(insn 92 91 93 7 (set (reg:SI 135)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -540 [0xfffffffffffffde4])) [1 _line+0 S4 A32])) "../src/io.f":33 82 {*movsi_internal}
     (nil))
(insn 93 92 94 7 (set (reg:SI 37 r8)
        (const_int 0 [0])) "../src/io.f":33 82 {*movsi_internal}
     (nil))
(insn 94 93 95 7 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*lC1") [flags 0x2]  <var_decl 0x143b72240 *lC1>)) "../src/io.f":33 81 {*movdi_internal}
     (nil))
(insn 95 94 96 7 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) "../src/io.f":33 82 {*movsi_internal}
     (nil))
(insn 96 95 97 7 (set (reg:DI 4 si)
        (reg:DI 134)) "../src/io.f":33 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 134)
        (nil)))
(insn 97 96 98 7 (set (reg:SI 5 di)
        (reg:SI 135)) "../src/io.f":33 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 135)
        (nil)))
(call_insn/i 98 97 99 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_gfortran_string_index") [flags 0x41]  <function_decl 0x1439c4a00 _gfortran_string_index>) [0 _gfortran_string_index S1 A8])
            (const_int 0 [0]))) "../src/io.f":33 665 {*call_value}
     (expr_list:REG_DEAD (reg:SI 37 r8)
        (expr_list:REG_DEAD (reg:SI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:SI 1 dx)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (nil)))))))
(insn 99 98 100 7 (set (reg:SI 98 [ _12 ])
        (reg:SI 0 ax)) "../src/io.f":33 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 100 99 101 7 (parallel [
            (set (reg:SI 136)
                (plus:SI (reg:SI 98 [ _12 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":33 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 98 [ _12 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 101 100 102 7 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 kb+0 S4 A32])
        (reg:SI 136)) "../src/io.f":33 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 136)
        (nil)))
(insn 102 101 103 7 (set (reg:CCNO 17 flags)
        (compare:CCNO (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [1 kb+0 S4 A32])
            (const_int 0 [0]))) "../src/io.f":34 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 103 102 104 7 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 107)
            (pc))) "../src/io.f":34 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (nil))
 -> 107)
;;  succ:       8 (FALLTHRU)
;;              9
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (RTL)
;;  pred:       7 (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 137
(note 104 103 105 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 105 104 106 8 (set (reg:SI 137)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -540 [0xfffffffffffffde4])) [1 _line+0 S4 A32])) "../src/io.f":34 82 {*movsi_internal}
     (nil))
(insn 106 105 107 8 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 kb+0 S4 A32])
        (reg:SI 137)) "../src/io.f":34 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 137)
        (nil)))
;;  succ:       9 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (RTL)
;;  pred:       7
;;              8 (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 114 115 139
(code_label 107 106 108 9 48 (nil) [1 uses])
(note 108 107 109 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 109 108 113 9 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [1 kb+0 S4 A32])
            (const_int 0 [0]))) "../src/io.f":36 3 {*cmpsi_ccno_1}
     (expr_list:REG_UNUSED (reg:CCGOC 17 flags)
        (nil)))
(insn 113 109 112 9 (set (reg:SI 139)
        (const_int 0 [0])) "../src/io.f":36 82 {*movsi_internal}
     (nil))
(insn 112 113 114 9 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [1 kb+0 S4 A32])
            (const_int 0 [0]))) "../src/io.f":36 3 {*cmpsi_ccno_1}
     (nil))
(insn 114 112 115 9 (set (reg:SI 114 [ _54 ])
        (if_then_else:SI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [1 kb+0 S4 A32])
            (reg:SI 139))) "../src/io.f":36 966 {*movsicc_noc}
     (expr_list:REG_DEAD (reg:SI 139)
        (expr_list:REG_DEAD (reg:CCGOC 17 flags)
            (nil))))
(insn 115 114 116 9 (set (reg:SI 115 [ _55 ])
        (mem/c:SI (reg/f:DI 16 argp) [1 _cval+0 S4 A64])) "../src/io.f":36 82 {*movsi_internal}
     (nil))
(insn 116 115 117 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 115 [ _55 ])
            (const_int 0 [0]))) "../src/io.f":36 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 117 116 118 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 144)
            (pc))) "../src/io.f":36 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 144)
;;  succ:       10 (FALLTHRU)
;;              12
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 114 115

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (RTL)
;;  pred:       9 (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 114 115
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 114 115
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 99 100 101 102 103 140 141
(note 118 117 119 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 119 118 120 10 (set (reg:DI 99 [ _13 ])
        (sign_extend:DI (reg:SI 115 [ _55 ]))) "../src/io.f":36 145 {*extendsidi2_rex64}
     (nil))
(insn 120 119 121 10 (set (reg:DI 100 [ _14 ])
        (sign_extend:DI (reg:SI 114 [ _54 ]))) "../src/io.f":36 145 {*extendsidi2_rex64}
     (nil))
(insn 121 120 122 10 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 99 [ _13 ])
            (reg:DI 100 [ _14 ]))) "../src/io.f":36 8 {*cmpdi_1}
     (nil))
(insn 122 121 123 10 (set (reg:DI 101 [ _15 ])
        (if_then_else:DI (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (reg:DI 99 [ _13 ])
            (reg:DI 100 [ _14 ]))) "../src/io.f":36 967 {*movdicc_noc}
     (expr_list:REG_DEAD (reg:DI 100 [ _14 ])
        (expr_list:REG_DEAD (reg:DI 99 [ _13 ])
            (expr_list:REG_DEAD (reg:CC 17 flags)
                (nil)))))
(insn 123 122 124 10 (set (reg:DI 140)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -512 [0xfffffffffffffe00])) [10 line+0 S8 A64])) "../src/io.f":36 81 {*movdi_internal}
     (nil))
(insn 124 123 125 10 (set (reg:DI 141)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -536 [0xfffffffffffffde8])) [10 cval+0 S8 A64])) "../src/io.f":36 81 {*movdi_internal}
     (nil))
(insn 125 124 126 10 (set (reg:DI 1 dx)
        (reg:DI 101 [ _15 ])) "../src/io.f":36 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 101 [ _15 ])
        (nil)))
(insn 126 125 127 10 (set (reg:DI 4 si)
        (reg:DI 140)) "../src/io.f":36 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 140)
        (nil)))
(insn 127 126 128 10 (set (reg:DI 5 di)
        (reg:DI 141)) "../src/io.f":36 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 141)
        (nil)))
(call_insn 128 127 129 10 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memmove") [flags 0x41]  <function_decl 0x14386f400 __builtin_memmove>) [0 __builtin_memmove S1 A8])
            (const_int 0 [0]))) "../src/io.f":36 665 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 129 128 130 10 (set (reg:DI 102 [ _16 ])
        (sign_extend:DI (reg:SI 114 [ _54 ]))) "../src/io.f":36 145 {*extendsidi2_rex64}
     (nil))
(insn 130 129 131 10 (set (reg:DI 103 [ _17 ])
        (sign_extend:DI (reg:SI 115 [ _55 ]))) "../src/io.f":36 145 {*extendsidi2_rex64}
     (nil))
(insn 131 130 132 10 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 102 [ _16 ])
            (reg:DI 103 [ _17 ]))) "../src/io.f":36 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg:DI 103 [ _17 ])
        (expr_list:REG_DEAD (reg:DI 102 [ _16 ])
            (nil))))
(jump_insn 132 131 133 10 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 144)
            (pc))) "../src/io.f":36 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (nil))
 -> 144)
;;  succ:       11 (FALLTHRU)
;;              12
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 114 115

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (RTL)
;;  pred:       10 (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 114 115
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 114 115
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 104 105 106 107 108 142
(note 133 132 134 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 134 133 135 11 (set (reg:DI 104 [ _18 ])
        (sign_extend:DI (reg:SI 115 [ _55 ]))) "../src/io.f":36 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 115 [ _55 ])
        (nil)))
(insn 135 134 136 11 (set (reg:DI 105 [ _19 ])
        (sign_extend:DI (reg:SI 114 [ _54 ]))) "../src/io.f":36 145 {*extendsidi2_rex64}
     (nil))
(insn 136 135 137 11 (parallel [
            (set (reg:DI 106 [ _20 ])
                (minus:DI (reg:DI 104 [ _18 ])
                    (reg:DI 105 [ _19 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":36 274 {*subdi_1}
     (expr_list:REG_DEAD (reg:DI 105 [ _19 ])
        (expr_list:REG_DEAD (reg:DI 104 [ _18 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 137 136 138 11 (set (reg:DI 107 [ _21 ])
        (sign_extend:DI (reg:SI 114 [ _54 ]))) "../src/io.f":36 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 114 [ _54 ])
        (nil)))
(insn 138 137 139 11 (set (reg/f:DI 142)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -536 [0xfffffffffffffde8])) [10 cval+0 S8 A64])) "../src/io.f":36 81 {*movdi_internal}
     (nil))
(insn 139 138 140 11 (parallel [
            (set (reg/f:DI 108 [ _22 ])
                (plus:DI (reg:DI 107 [ _21 ])
                    (reg/f:DI 142)))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":36 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 142)
        (expr_list:REG_DEAD (reg:DI 107 [ _21 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -536 [0xfffffffffffffde8])) [10 cval+0 S8 A64])
                        (reg:DI 107 [ _21 ]))
                    (nil))))))
(insn 140 139 141 11 (set (reg:DI 1 dx)
        (reg:DI 106 [ _20 ])) "../src/io.f":36 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 106 [ _20 ])
        (nil)))
(insn 141 140 142 11 (set (reg:SI 4 si)
        (const_int 32 [0x20])) "../src/io.f":36 82 {*movsi_internal}
     (nil))
(insn 142 141 143 11 (set (reg:DI 5 di)
        (reg/f:DI 108 [ _22 ])) "../src/io.f":36 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 108 [ _22 ])
        (nil)))
(call_insn 143 142 144 11 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memset") [flags 0x41]  <function_decl 0x14386f600 __builtin_memset>) [0 __builtin_memset S1 A8])
            (const_int 0 [0]))) "../src/io.f":36 665 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       12 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (RTL)
;;  pred:       9
;;              11 (FALLTHRU)
;;              10
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 143
(code_label 144 143 145 12 49 (nil) [2 uses])
(note 145 144 146 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 146 145 147 12 (set (reg/f:DI 143)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -528 [0xfffffffffffffdf0])) [11 ierr+0 S8 A64])) "../src/io.f":37 81 {*movdi_internal}
     (nil))
(insn 147 146 153 12 (set (mem:SI (reg/f:DI 143) [1 *ierr_48(D)+0 S4 A32])
        (const_int 0 [0])) "../src/io.f":37 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 143)
        (nil)))
(insn 153 147 150 12 (const_int 0 [0]) "../src/io.f":38 682 {nop}
     (nil))
;;  succ:       13 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 1, flags: (RTL)
;;  pred:       12 (FALLTHRU)
;;              4 [100.0%] 
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 150 153 151 13 43 (nil) [1 uses])
(note 151 150 0 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function rread (rread_, funcdef_no=3, decl_uid=3621, cgraph_uid=3, symbol_order=3)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 14 n_edges 18 count 14 (    1)
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 13 3 4 5 6 7 8 9 10 11 12
;;
;; Loop 1
;;  header 3, latch 13
;;  depth 1, outer 0
;;  nodes: 3 13 5 6
;; 2 succs { 3 }
;; 13 succs { 3 }
;; 3 succs { 4 5 }
;; 4 succs { 12 }
;; 5 succs { 13 6 }
;; 6 succs { 13 7 }
;; 7 succs { 8 9 }
;; 8 succs { 9 }
;; 9 succs { 10 11 }
;; 10 succs { 12 }
;; 11 succs { 12 }
;; 12 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 36.
verify found no changes in insn with uid = 42.
verify found no changes in insn with uid = 45.
verify found no changes in insn with uid = 66.
verify found no changes in insn with uid = 77.
verify found no changes in insn with uid = 88.
verify found no changes in insn with uid = 111.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r124: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r124,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r123: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r123,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r122: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r122,l0) best DIREG, allocno GENERAL_REGS
    r121: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r121,l0) best SIREG, allocno GENERAL_REGS
    r120: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r120,l0) best DREG, allocno GENERAL_REGS
    r119: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r119,l0) best CREG, allocno GENERAL_REGS
    r118: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r118,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a12 (r115,l0) best SIREG, allocno GENERAL_REGS
    r114: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a14 (r114,l0) best SIREG, allocno GENERAL_REGS
    r113: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a16 (r113,l0) best CREG, allocno GENERAL_REGS
    r112: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r112,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r111: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a20 (r111,l0) best DIREG, allocno GENERAL_REGS
    r110: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a21 (r110,l0) best DIREG, allocno GENERAL_REGS
    r109: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a22 (r109,l0) best SIREG, allocno GENERAL_REGS
    r108: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a23 (r108,l0) best DIREG, allocno GENERAL_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a31 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a34 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a11 (r96,l0) best AREG, allocno GENERAL_REGS
    r95: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a13 (r95,l0) best AREG, allocno GENERAL_REGS
    r94: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a15 (r94,l0) best AREG, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a33 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r124,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a1(r123,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a2(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a3(r122,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a4(r121,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a5(r120,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a6(r119,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a7(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a8(r118,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a9(r117,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a10(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a11(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a12(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a13(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a14(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a15(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a16(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a17(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a18(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a19(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a20(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a21(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a22(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a23(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a24(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a25(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a26(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a27(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a28(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a29(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a30(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a31(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a32(r88,l0) costs: AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:2
  a33(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a34(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7

   Insn 133(l0): point = 1
   Insn 123(l0): point = 3
   Insn 122(l0): point = 5
   Insn 137(l0): point = 8
   Insn 117(l0): point = 10
   Insn 116(l0): point = 12
   Insn 114(l0): point = 15
   Insn 113(l0): point = 17
   Insn 112(l0): point = 19
   Insn 111(l0): point = 21
   Insn 110(l0): point = 23
   Insn 109(l0): point = 25
   Insn 108(l0): point = 27
   Insn 107(l0): point = 29
   Insn 106(l0): point = 31
   Insn 105(l0): point = 33
   Insn 104(l0): point = 35
   Insn 103(l0): point = 37
   Insn 102(l0): point = 39
   Insn 101(l0): point = 41
   Insn 99(l0): point = 43
   Insn 100(l0): point = 45
   Insn 96(l0): point = 48
   Insn 95(l0): point = 50
   Insn 93(l0): point = 53
   Insn 92(l0): point = 55
   Insn 91(l0): point = 57
   Insn 90(l0): point = 59
   Insn 89(l0): point = 61
   Insn 88(l0): point = 63
   Insn 87(l0): point = 65
   Insn 86(l0): point = 67
   Insn 85(l0): point = 69
   Insn 84(l0): point = 71
   Insn 83(l0): point = 73
   Insn 82(l0): point = 75
   Insn 135(l0): point = 78
   Insn 55(l0): point = 80
   Insn 54(l0): point = 82
   Insn 143(l0): point = 85
   Insn 70(l0): point = 88
   Insn 69(l0): point = 90
   Insn 67(l0): point = 92
   Insn 66(l0): point = 94
   Insn 65(l0): point = 96
   Insn 64(l0): point = 98
   Insn 63(l0): point = 100
   Insn 62(l0): point = 102
   Insn 61(l0): point = 104
   Insn 60(l0): point = 106
   Insn 49(l0): point = 109
   Insn 48(l0): point = 111
   Insn 47(l0): point = 113
   Insn 46(l0): point = 115
   Insn 45(l0): point = 117
   Insn 44(l0): point = 119
   Insn 43(l0): point = 121
   Insn 42(l0): point = 123
   Insn 41(l0): point = 125
   Insn 40(l0): point = 127
   Insn 39(l0): point = 129
   Insn 38(l0): point = 131
   Insn 37(l0): point = 133
   Insn 36(l0): point = 135
   Insn 35(l0): point = 137
   Insn 34(l0): point = 139
   Insn 33(l0): point = 141
   Insn 32(l0): point = 143
   Insn 31(l0): point = 145
   Insn 30(l0): point = 147
   Insn 29(l0): point = 149
   Insn 28(l0): point = 151
   Insn 27(l0): point = 153
   Insn 26(l0): point = 155
   Insn 25(l0): point = 157
   Insn 24(l0): point = 159
   Insn 23(l0): point = 161
   Insn 22(l0): point = 163
   Insn 21(l0): point = 165
   Insn 20(l0): point = 167
   Insn 19(l0): point = 169
   Insn 80(l0): point = 172
   Insn 79(l0): point = 174
   Insn 78(l0): point = 176
   Insn 77(l0): point = 178
   Insn 76(l0): point = 180
   Insn 75(l0): point = 182
   Insn 74(l0): point = 184
   Insn 73(l0): point = 186
   Insn 72(l0): point = 188
   Insn 139(l0): point = 191
   Insn 14(l0): point = 193
   Insn 13(l0): point = 195
   Insn 12(l0): point = 197
   Insn 11(l0): point = 199
   Insn 7(l0): point = 201
   Insn 6(l0): point = 203
   Insn 5(l0): point = 205
   Insn 4(l0): point = 207
   Insn 3(l0): point = 209
   Insn 2(l0): point = 211
 a0(r124): [4..5]
 a1(r123): [11..12]
 a2(r98): [18..19]
 a3(r122): [24..33]
 a4(r121): [26..35]
 a5(r120): [28..37]
 a6(r119): [30..39]
 a7(r97): [32..41]
 a8(r118): [42..45]
 a9(r117): [49..50]
 a10(r116): [58..59]
 a11(r96): [60..61]
 a12(r115): [68..75]
 a13(r95): [175..176]
 a14(r114): [183..188]
 a15(r94): [91..92]
 a16(r113): [103..106]
 a17(r112): [81..82]
 a18(r93): [112..113]
 a19(r92): [114..115]
 a20(r111): [120..121]
 a21(r110): [126..131]
 a22(r109): [128..133]
 a23(r108): [138..139]
 a24(r91): [142..143]
 a25(r107): [144..145]
 a26(r106): [152..153]
 a27(r105): [158..159]
 a28(r104): [162..163]
 a29(r90): [162..165]
 a30(r89): [166..167]
 a31(r103): [168..169]
 a32(r88 [0]): [194..213]
 a32(r88 [1]): [193..213]
 a33(r87): [196..197]
 a34(r101): [198..199]
Compressing live ranges: from 214 to 56 - 26%
Ranges after the compression:
 a0(r124): [0..1]
 a1(r123): [2..3]
 a2(r98): [4..5]
 a3(r122): [6..7]
 a4(r121): [6..7]
 a5(r120): [6..7]
 a6(r119): [6..7]
 a7(r97): [6..7]
 a8(r118): [8..9]
 a9(r117): [10..11]
 a10(r116): [12..13]
 a11(r96): [14..15]
 a12(r115): [16..17]
 a13(r95): [48..49]
 a14(r114): [50..51]
 a15(r94): [20..21]
 a16(r113): [22..23]
 a17(r112): [18..19]
 a18(r93): [24..25]
 a19(r92): [26..27]
 a20(r111): [28..29]
 a21(r110): [30..31]
 a22(r109): [30..31]
 a23(r108): [32..33]
 a24(r91): [34..35]
 a25(r107): [36..37]
 a26(r106): [38..39]
 a27(r105): [40..41]
 a28(r104): [42..43]
 a29(r90): [42..43]
 a30(r89): [44..45]
 a31(r103): [46..47]
 a32(r88 [0]): [52..55]
 a32(r88 [1]): [52..55]
 a33(r87): [52..53]
 a34(r101): [54..55]
  regions=1, blocks=14, points=56
    allocnos=35 (big 1), copies=0, conflicts=0, ranges=36
Disposition:
   33:r87  l0     0   32:r88  l0    39   30:r89  l0     0   29:r90  l0     1
   24:r91  l0     0   19:r92  l0     0   18:r93  l0     0   15:r94  l0     0
   13:r95  l0     0   11:r96  l0     0    7:r97  l0     5    2:r98  l0     0
   34:r101 l0     0   31:r103 l0     0   28:r104 l0     0   27:r105 l0     0
   26:r106 l0     0   25:r107 l0     0   23:r108 l0     0   22:r109 l0     2
   21:r110 l0     0   20:r111 l0     0   17:r112 l0     0   16:r113 l0     0
   14:r114 l0     0   12:r115 l0     0   10:r116 l0     0    9:r117 l0     0
    8:r118 l0     0    6:r119 l0     2    5:r120 l0     1    4:r121 l0     4
    3:r122 l0     0    1:r123 l0     0    0:r124 l0     0
+++Costs: overall -12, reg -12, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


rread

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 37 [r8] 38 [r9]
;;  ref usage 	r0={8d,3u} r1={13d,6u} r2={12d,5u} r4={13d,6u} r5={15d,8u} r6={1d,13u} r7={1d,20u} r8={7d} r9={7d} r10={7d} r11={7d} r12={7d} r13={7d} r14={7d} r15={7d} r16={1d,17u} r17={20d,6u} r18={7d} r19={7d} r20={1d,49u} r21={8d} r22={8d} r23={8d} r24={8d} r25={8d} r26={8d} r27={8d} r28={8d} r29={7d} r30={7d} r31={7d} r32={7d} r33={7d} r34={7d} r35={7d} r36={7d} r37={11d,4u} r38={8d,1u} r39={7d} r40={7d} r45={7d} r46={7d} r47={7d} r48={7d} r49={7d} r50={7d} r51={7d} r52={7d} r53={7d} r54={7d} r55={7d} r56={7d} r57={7d} r58={7d} r59={7d} r60={7d} r61={7d} r62={7d} r63={7d} r64={7d} r65={7d} r66={7d} r67={7d} r68={7d} r69={7d} r70={7d} r71={7d} r72={7d} r73={7d} r74={7d} r75={7d} r76={7d} r77={7d} r78={7d} r79={7d} r80={7d} r87={1d,1u} r88={2d,2u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r101={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,1u} 
;;    total ref usage 770{596d,174u,0e} in 101{94 regular + 7 call} insns.
(note 1 0 9 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 13, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9] 88
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9] 88
;; lr  def 	 87 101
(note 9 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 9 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -504 [0xfffffffffffffe08])) [11 lu+0 S8 A64])
        (reg:DI 5 di [ lu ])) "../src/io.f":48 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ lu ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -512 [0xfffffffffffffe00])) [10 line+0 S8 A64])
        (reg:DI 4 si [ line ])) "../src/io.f":48 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ line ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -520 [0xfffffffffffffdf8])) [11 iline+0 S8 A64])
        (reg:DI 1 dx [ iline ])) "../src/io.f":48 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ iline ])
        (nil)))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -528 [0xfffffffffffffdf0])) [11 ierr+0 S8 A64])
        (reg:DI 2 cx [ ierr ])) "../src/io.f":48 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [ ierr ])
        (nil)))
(insn 6 5 7 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -536 [0xfffffffffffffde8])) [11 nval+0 S8 A64])
        (reg:DI 37 r8 [ nval ])) "../src/io.f":48 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 37 r8 [ nval ])
        (nil)))
(insn 7 6 8 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -544 [0xfffffffffffffde0])) [14 val+0 S8 A64])
        (reg:DI 38 r9 [ val ])) "../src/io.f":48 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 38 r9 [ val ])
        (nil)))
(note 8 7 11 2 NOTE_INSN_FUNCTION_BEG)
(insn 11 8 12 2 (set (reg:SI 101)
        (mem/c:SI (reg/f:DI 16 argp) [1 _line+0 S4 A64])) "../src/io.f":76 82 {*movsi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:DI 87 [ _1 ])
        (sign_extend:DI (reg:SI 101))) "../src/io.f":76 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 101)
        (nil)))
(insn 13 12 14 2 (set (subreg:DI (reg:TI 88 [ _2 ]) 0)
        (reg:DI 87 [ _1 ])) "../src/io.f":76 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 87 [ _1 ])
        (nil)))
(insn 14 13 139 2 (set (subreg:DI (reg:TI 88 [ _2 ]) 8)
        (const_int 0 [0])) "../src/io.f":76 81 {*movdi_internal}
     (expr_list:REG_UNUSED (reg:TI 88 [ _2 ])
        (nil)))
(jump_insn 139 14 140 2 (set (pc)
        (label_ref 68)) 649 {jump}
     (nil)
 -> 68)
;;  succ:       3
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 140 139 142)
;; basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 3, flags: (RTL)
;;  pred:       5 (DFS_BACK)
;;              6 (DFS_BACK)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 142 140 141 13 62 (nil) [2 uses])
(note 141 142 143 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 143 141 68 13 (const_int 0 [0]) "../src/io.f":48 682 {nop}
     (nil))
;;  succ:       3 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 13, next block 4, flags: (RTL)
;;  pred:       2
;;              13 [100.0%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 89 90 91 92 93 103 104 105 106 107 108 109 110 111
(code_label 68 143 18 3 56 (nil) [1 uses])
(note 18 68 19 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 3 (set (reg/f:DI 103)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -520 [0xfffffffffffffdf8])) [11 iline+0 S8 A64])) "../src/io.f":55 81 {*movdi_internal}
     (nil))
(insn 20 19 21 3 (set (reg:SI 89 [ _3 ])
        (mem:SI (reg/f:DI 103) [1 *iline_21(D)+0 S4 A32])) "../src/io.f":55 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 103)
        (nil)))
(insn 21 20 22 3 (parallel [
            (set (reg:SI 90 [ _4 ])
                (plus:SI (reg:SI 89 [ _3 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":55 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 89 [ _3 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 22 21 23 3 (set (reg/f:DI 104)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -520 [0xfffffffffffffdf8])) [11 iline+0 S8 A64])) "../src/io.f":55 81 {*movdi_internal}
     (nil))
(insn 23 22 24 3 (set (mem:SI (reg/f:DI 104) [1 *iline_21(D)+0 S4 A32])
        (reg:SI 90 [ _4 ])) "../src/io.f":55 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 104)
        (expr_list:REG_DEAD (reg:SI 90 [ _4 ])
            (nil))))
(insn 24 23 25 3 (set (reg/f:DI 105)
        (symbol_ref/f:DI ("*lC4") [flags 0x2]  <var_decl 0x143b723f0 *lC4>)) "../src/io.f":57 81 {*movdi_internal}
     (nil))
(insn 25 24 26 3 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -488 [0xfffffffffffffe18])) [5 dt_parm.9.common.filename+0 S8 A64])
        (reg/f:DI 105)) "../src/io.f":57 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 105)
        (nil)))
(insn 26 25 27 3 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -480 [0xfffffffffffffe20])) [1 dt_parm.9.common.line+0 S4 A128])
        (const_int 57 [0x39])) "../src/io.f":57 82 {*movsi_internal}
     (nil))
(insn 27 26 28 3 (set (reg/f:DI 106)
        (symbol_ref/f:DI ("*lC5") [flags 0x2]  <var_decl 0x143ba4c60 *lC5>)) "../src/io.f":57 81 {*movdi_internal}
     (nil))
(insn 28 27 29 3 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -424 [0xfffffffffffffe58])) [5 dt_parm.9.format+0 S8 A64])
        (reg/f:DI 106)) "../src/io.f":57 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 106)
        (nil)))
(insn 29 28 30 3 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -416 [0xfffffffffffffe60])) [1 dt_parm.9.format_len+0 S4 A128])
        (const_int 3 [0x3])) "../src/io.f":57 82 {*movsi_internal}
     (nil))
(insn 30 29 31 3 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -496 [0xfffffffffffffe10])) [1 dt_parm.9.common.flags+0 S4 A128])
        (const_int 4104 [0x1008])) "../src/io.f":57 82 {*movsi_internal}
     (nil))
(insn 31 30 32 3 (set (reg/f:DI 107)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -504 [0xfffffffffffffe08])) [11 lu+0 S8 A64])) "../src/io.f":57 81 {*movdi_internal}
     (nil))
(insn 32 31 33 3 (set (reg:SI 91 [ _5 ])
        (mem:SI (reg/f:DI 107) [1 *lu_28(D)+0 S4 A32])) "../src/io.f":57 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 107)
        (nil)))
(insn 33 32 34 3 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -492 [0xfffffffffffffe14])) [1 dt_parm.9.common.unit+0 S4 A32])
        (reg:SI 91 [ _5 ])) "../src/io.f":57 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 91 [ _5 ])
        (nil)))
(insn 34 33 35 3 (parallel [
            (set (reg:DI 108)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -496 [0xfffffffffffffe10])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":57 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 35 34 36 3 (set (reg:DI 5 di)
        (reg:DI 108)) "../src/io.f":57 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 108)
        (nil)))
(call_insn 36 35 37 3 (call (mem:QI (symbol_ref:DI ("_gfortran_st_read") [flags 0x41]  <function_decl 0x1439e0700 _gfortran_st_read>) [0 _gfortran_st_read S1 A8])
        (const_int 0 [0])) "../src/io.f":57 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 37 36 38 3 (set (reg:DI 109)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -512 [0xfffffffffffffe00])) [10 line+0 S8 A64])) "../src/io.f":57 81 {*movdi_internal}
     (nil))
(insn 38 37 39 3 (parallel [
            (set (reg:DI 110)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -496 [0xfffffffffffffe10])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":57 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 39 38 40 3 (set (reg:SI 1 dx)
        (mem/c:SI (reg/f:DI 16 argp) [1 _line+0 S4 A64])) "../src/io.f":57 82 {*movsi_internal}
     (nil))
(insn 40 39 41 3 (set (reg:DI 4 si)
        (reg:DI 109)) "../src/io.f":57 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 109)
        (nil)))
(insn 41 40 42 3 (set (reg:DI 5 di)
        (reg:DI 110)) "../src/io.f":57 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 110)
        (nil)))
(call_insn 42 41 43 3 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_character") [flags 0x41]  <function_decl 0x1439d4800 _gfortran_transfer_character>) [0 _gfortran_transfer_character S1 A8])
        (const_int 0 [0])) "../src/io.f":57 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 43 42 44 3 (parallel [
            (set (reg:DI 111)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -496 [0xfffffffffffffe10])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":57 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 44 43 45 3 (set (reg:DI 5 di)
        (reg:DI 111)) "../src/io.f":57 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 111)
        (nil)))
(call_insn 45 44 46 3 (call (mem:QI (symbol_ref:DI ("_gfortran_st_read_done") [flags 0x41]  <function_decl 0x1439e4200 _gfortran_st_read_done>) [0 _gfortran_st_read_done S1 A8])
        (const_int 0 [0])) "../src/io.f":57 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 46 45 47 3 (set (reg:SI 92 [ _6 ])
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -496 [0xfffffffffffffe10])) [1 dt_parm.9.common.flags+0 S4 A128])) "../src/io.f":57 82 {*movsi_internal}
     (nil))
(insn 47 46 48 3 (parallel [
            (set (reg:SI 93 [ _7 ])
                (and:SI (reg:SI 92 [ _6 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":57 391 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 92 [ _6 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 48 47 49 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 93 [ _7 ])
            (const_int 2 [0x2]))) "../src/io.f":57 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 93 [ _7 ])
        (nil)))
(jump_insn 49 48 53 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 134)
            (pc))) "../src/io.f":57 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 134)
;;  succ:       4 (FALLTHRU)
;;              5
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 112
(note 53 49 52 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(note 52 53 54 4 ("L.28") NOTE_INSN_DELETED_LABEL 54)
(insn 54 52 55 4 (set (reg/f:DI 112)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -528 [0xfffffffffffffdf0])) [11 ierr+0 S8 A64])) "../src/io.f":74 81 {*movdi_internal}
     (nil))
(insn 55 54 135 4 (set (mem:SI (reg/f:DI 112) [1 *ierr_35(D)+0 S4 A32])
        (const_int -1 [0xffffffffffffffff])) "../src/io.f":74 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 112)
        (nil)))
(jump_insn 135 55 136 4 (set (pc)
        (label_ref 130)) "../src/io.f":75 649 {jump}
     (nil)
 -> 130)
;;  succ:       12 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 136 135 134)
;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       3
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 94 113
(code_label 134 136 59 5 61 (nil) [1 uses])
(note 59 134 60 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 60 59 61 5 (set (reg:DI 113)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -512 [0xfffffffffffffe00])) [10 line+0 S8 A64])) "../src/io.f":60 81 {*movdi_internal}
     (nil))
(insn 61 60 62 5 (set (reg:SI 37 r8)
        (const_int 0 [0])) "../src/io.f":60 82 {*movsi_internal}
     (nil))
(insn 62 61 63 5 (set (reg:DI 2 cx)
        (reg:DI 113)) "../src/io.f":60 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 113)
        (nil)))
(insn 63 62 64 5 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) "../src/io.f":60 82 {*movsi_internal}
     (nil))
(insn 64 63 65 5 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*lC6") [flags 0x2]  <var_decl 0x143ba4cf0 *lC6>)) "../src/io.f":60 81 {*movdi_internal}
     (nil))
(insn 65 64 66 5 (set (reg:SI 5 di)
        (const_int 2 [0x2])) "../src/io.f":60 82 {*movsi_internal}
     (nil))
(call_insn/i 66 65 67 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_gfortran_string_index") [flags 0x41]  <function_decl 0x1439c4a00 _gfortran_string_index>) [0 _gfortran_string_index S1 A8])
            (const_int 0 [0]))) "../src/io.f":60 665 {*call_value}
     (expr_list:REG_DEAD (reg:SI 37 r8)
        (expr_list:REG_DEAD (reg:SI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:SI 1 dx)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (nil)))))))
(insn 67 66 69 5 (set (reg:SI 94 [ _8 ])
        (reg:SI 0 ax)) "../src/io.f":60 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 69 67 70 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 94 [ _8 ])
            (const_int 0 [0]))) "../src/io.f":60 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 94 [ _8 ])
        (nil)))
(jump_insn 70 69 71 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 142)
            (pc))) "../src/io.f":60 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 142)
;;  succ:       13 (DFS_BACK)
;;              6 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (RTL)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 95 114
(note 71 70 72 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 72 71 73 6 (set (reg:DI 114)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -512 [0xfffffffffffffe00])) [10 line+0 S8 A64])) "../src/io.f":61 81 {*movdi_internal}
     (nil))
(insn 73 72 74 6 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*lC2") [flags 0x2]  <var_decl 0x143b722d0 *lC2>)) "../src/io.f":61 81 {*movdi_internal}
     (nil))
(insn 74 73 75 6 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) "../src/io.f":61 82 {*movsi_internal}
     (nil))
(insn 75 74 76 6 (set (reg:DI 4 si)
        (reg:DI 114)) "../src/io.f":61 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 114)
        (nil)))
(insn 76 75 77 6 (set (reg:SI 5 di)
        (mem/c:SI (reg/f:DI 16 argp) [1 _line+0 S4 A64])) "../src/io.f":61 82 {*movsi_internal}
     (nil))
(call_insn/i 77 76 78 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_gfortran_compare_string") [flags 0x41]  <function_decl 0x1439c4700 _gfortran_compare_string>) [0 _gfortran_compare_string S1 A8])
            (const_int 0 [0]))) "../src/io.f":61 665 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:SI 1 dx)
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 78 77 79 6 (set (reg:SI 95 [ _9 ])
        (reg:SI 0 ax)) "../src/io.f":61 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 79 78 80 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 95 [ _9 ])
            (const_int 0 [0]))) "../src/io.f":61 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 95 [ _9 ])
        (nil)))
(jump_insn 80 79 81 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 142)
            (pc))) "../src/io.f":61 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 142)
;;  succ:       13 (DFS_BACK)
;;              7 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (RTL)
;;  pred:       6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 96 115 116
(note 81 80 82 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 82 81 83 7 (set (reg:DI 115)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -512 [0xfffffffffffffe00])) [10 line+0 S8 A64])) "../src/io.f":63 81 {*movdi_internal}
     (nil))
(insn 83 82 84 7 (set (reg:SI 37 r8)
        (const_int 0 [0])) "../src/io.f":63 82 {*movsi_internal}
     (nil))
(insn 84 83 85 7 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*lC1") [flags 0x2]  <var_decl 0x143b72240 *lC1>)) "../src/io.f":63 81 {*movdi_internal}
     (nil))
(insn 85 84 86 7 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) "../src/io.f":63 82 {*movsi_internal}
     (nil))
(insn 86 85 87 7 (set (reg:DI 4 si)
        (reg:DI 115)) "../src/io.f":63 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 115)
        (nil)))
(insn 87 86 88 7 (set (reg:SI 5 di)
        (mem/c:SI (reg/f:DI 16 argp) [1 _line+0 S4 A64])) "../src/io.f":63 82 {*movsi_internal}
     (nil))
(call_insn/i 88 87 89 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_gfortran_string_index") [flags 0x41]  <function_decl 0x1439c4a00 _gfortran_string_index>) [0 _gfortran_string_index S1 A8])
            (const_int 0 [0]))) "../src/io.f":63 665 {*call_value}
     (expr_list:REG_DEAD (reg:SI 37 r8)
        (expr_list:REG_DEAD (reg:SI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:SI 1 dx)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (nil)))))))
(insn 89 88 90 7 (set (reg:SI 96 [ _10 ])
        (reg:SI 0 ax)) "../src/io.f":63 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 90 89 91 7 (parallel [
            (set (reg:SI 116)
                (plus:SI (reg:SI 96 [ _10 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":63 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 96 [ _10 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 91 90 92 7 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 kb+0 S4 A32])
        (reg:SI 116)) "../src/io.f":63 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 116)
        (nil)))
(insn 92 91 93 7 (set (reg:CCNO 17 flags)
        (compare:CCNO (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [1 kb+0 S4 A32])
            (const_int 0 [0]))) "../src/io.f":64 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 93 92 94 7 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 97)
            (pc))) "../src/io.f":64 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (nil))
 -> 97)
;;  succ:       8 (FALLTHRU)
;;              9
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (RTL)
;;  pred:       7 (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 117
(note 94 93 95 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 95 94 96 8 (set (reg:SI 117)
        (mem/c:SI (reg/f:DI 16 argp) [1 _line+0 S4 A64])) "../src/io.f":64 82 {*movsi_internal}
     (nil))
(insn 96 95 97 8 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 kb+0 S4 A32])
        (reg:SI 117)) "../src/io.f":64 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 117)
        (nil)))
;;  succ:       9 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (RTL)
;;  pred:       7
;;              8 (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 97 98 118 119 120 121 122
(code_label 97 96 98 9 57 (nil) [1 uses])
(note 98 97 100 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 100 98 99 9 (set (reg:SI 118)
        (const_int 0 [0])) "../src/io.f":66 82 {*movsi_internal}
     (nil))
(insn 99 100 101 9 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [1 kb+0 S4 A32])
            (const_int 0 [0]))) "../src/io.f":66 3 {*cmpsi_ccno_1}
     (nil))
(insn 101 99 102 9 (set (reg:SI 97 [ _11 ])
        (if_then_else:SI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [1 kb+0 S4 A32])
            (reg:SI 118))) "../src/io.f":66 966 {*movsicc_noc}
     (expr_list:REG_DEAD (reg:SI 118)
        (expr_list:REG_DEAD (reg:CCGOC 17 flags)
            (nil))))
(insn 102 101 103 9 (parallel [
            (set (reg:DI 119)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":66 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 103 102 104 9 (set (reg:DI 120)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -536 [0xfffffffffffffde8])) [11 nval+0 S8 A64])) "../src/io.f":66 81 {*movdi_internal}
     (nil))
(insn 104 103 105 9 (set (reg:DI 121)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -544 [0xfffffffffffffde0])) [14 val+0 S8 A64])) "../src/io.f":66 81 {*movdi_internal}
     (nil))
(insn 105 104 106 9 (set (reg:DI 122)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -512 [0xfffffffffffffe00])) [10 line+0 S8 A64])) "../src/io.f":66 81 {*movdi_internal}
     (nil))
(insn 106 105 107 9 (set (reg:SI 37 r8)
        (reg:SI 97 [ _11 ])) "../src/io.f":66 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 97 [ _11 ])
        (nil)))
(insn 107 106 108 9 (set (reg:DI 2 cx)
        (reg:DI 119)) "../src/io.f":66 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 119)
        (nil)))
(insn 108 107 109 9 (set (reg:DI 1 dx)
        (reg:DI 120)) "../src/io.f":66 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 120)
        (nil)))
(insn 109 108 110 9 (set (reg:DI 4 si)
        (reg:DI 121)) "../src/io.f":66 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 121)
        (nil)))
(insn 110 109 111 9 (set (reg:DI 5 di)
        (reg:DI 122)) "../src/io.f":66 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 122)
        (nil)))
(call_insn 111 110 112 9 (call (mem:QI (symbol_ref:DI ("getflt_") [flags 0x403]  <function_decl 0x1439e4900 getflt>) [0 getflt S1 A8])
        (const_int 0 [0])) "../src/io.f":66 655 {*call}
     (expr_list:REG_DEAD (reg:SI 37 r8)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (nil)))))))
(insn 112 111 113 9 (set (reg:SI 98 [ error.18_12 ])
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [13 error+0 S4 A64])) "../src/io.f":67 82 {*movsi_internal}
     (nil))
(insn 113 112 114 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 98 [ error.18_12 ])
            (const_int 0 [0]))) "../src/io.f":67 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 98 [ error.18_12 ])
        (nil)))
(jump_insn 114 113 115 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 120)
            (pc))) "../src/io.f":67 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 120)
;;  succ:       10 (FALLTHRU)
;;              11
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (RTL)
;;  pred:       9 (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 123
(note 115 114 116 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 116 115 117 10 (set (reg/f:DI 123)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -528 [0xfffffffffffffdf0])) [11 ierr+0 S8 A64])) "../src/io.f":68 81 {*movdi_internal}
     (nil))
(insn 117 116 137 10 (set (mem:SI (reg/f:DI 123) [1 *ierr_35(D)+0 S4 A32])
        (const_int 1 [0x1])) "../src/io.f":68 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 123)
        (nil)))
(jump_insn 137 117 138 10 (set (pc)
        (label_ref 130)) "../src/io.f":72 649 {jump}
     (nil)
 -> 130)
;;  succ:       12 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 138 137 120)
;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (RTL)
;;  pred:       9
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 124
(code_label 120 138 121 11 58 (nil) [1 uses])
(note 121 120 122 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 122 121 123 11 (set (reg/f:DI 124)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -528 [0xfffffffffffffdf0])) [11 ierr+0 S8 A64])) "../src/io.f":70 81 {*movdi_internal}
     (nil))
(insn 123 122 133 11 (set (mem:SI (reg/f:DI 124) [1 *ierr_35(D)+0 S4 A32])
        (const_int 0 [0])) "../src/io.f":70 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 124)
        (nil)))
(insn 133 123 130 11 (const_int 0 [0]) "../src/io.f":72 682 {nop}
     (nil))
;;  succ:       12 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 1, flags: (RTL)
;;  pred:       11 (FALLTHRU)
;;              4 [100.0%] 
;;              10 [100.0%] 
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 130 133 131 12 52 (nil) [2 uses])
(note 131 130 0 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function iread (iread_, funcdef_no=4, decl_uid=3643, cgraph_uid=4, symbol_order=4)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 14 n_edges 18 count 14 (    1)
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 13 3 4 5 6 7 8 9 10 11 12
;;
;; Loop 1
;;  header 3, latch 13
;;  depth 1, outer 0
;;  nodes: 3 13 5 6
;; 2 succs { 3 }
;; 13 succs { 3 }
;; 3 succs { 4 5 }
;; 4 succs { 12 }
;; 5 succs { 13 6 }
;; 6 succs { 13 7 }
;; 7 succs { 8 9 }
;; 8 succs { 9 }
;; 9 succs { 10 11 }
;; 10 succs { 12 }
;; 11 succs { 12 }
;; 12 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 36.
verify found no changes in insn with uid = 42.
verify found no changes in insn with uid = 45.
verify found no changes in insn with uid = 66.
verify found no changes in insn with uid = 77.
verify found no changes in insn with uid = 88.
verify found no changes in insn with uid = 111.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r124: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r124,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r123: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r123,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r122: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r122,l0) best DIREG, allocno GENERAL_REGS
    r121: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r121,l0) best SIREG, allocno GENERAL_REGS
    r120: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r120,l0) best DREG, allocno GENERAL_REGS
    r119: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r119,l0) best CREG, allocno GENERAL_REGS
    r118: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r118,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a12 (r115,l0) best SIREG, allocno GENERAL_REGS
    r114: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a14 (r114,l0) best SIREG, allocno GENERAL_REGS
    r113: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a16 (r113,l0) best CREG, allocno GENERAL_REGS
    r112: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r112,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r111: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a20 (r111,l0) best DIREG, allocno GENERAL_REGS
    r110: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a21 (r110,l0) best DIREG, allocno GENERAL_REGS
    r109: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a22 (r109,l0) best SIREG, allocno GENERAL_REGS
    r108: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a23 (r108,l0) best DIREG, allocno GENERAL_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a31 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a34 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a11 (r96,l0) best AREG, allocno GENERAL_REGS
    r95: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a13 (r95,l0) best AREG, allocno GENERAL_REGS
    r94: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a15 (r94,l0) best AREG, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a33 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r124,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a1(r123,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a2(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a3(r122,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a4(r121,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a5(r120,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a6(r119,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a7(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a8(r118,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a9(r117,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a10(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a11(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a12(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a13(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a14(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a15(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a16(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a17(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a18(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a19(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a20(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a21(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a22(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a23(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a24(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a25(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a26(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a27(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a28(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a29(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a30(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a31(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a32(r88,l0) costs: AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:2
  a33(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a34(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7

   Insn 133(l0): point = 1
   Insn 123(l0): point = 3
   Insn 122(l0): point = 5
   Insn 137(l0): point = 8
   Insn 117(l0): point = 10
   Insn 116(l0): point = 12
   Insn 114(l0): point = 15
   Insn 113(l0): point = 17
   Insn 112(l0): point = 19
   Insn 111(l0): point = 21
   Insn 110(l0): point = 23
   Insn 109(l0): point = 25
   Insn 108(l0): point = 27
   Insn 107(l0): point = 29
   Insn 106(l0): point = 31
   Insn 105(l0): point = 33
   Insn 104(l0): point = 35
   Insn 103(l0): point = 37
   Insn 102(l0): point = 39
   Insn 101(l0): point = 41
   Insn 99(l0): point = 43
   Insn 100(l0): point = 45
   Insn 96(l0): point = 48
   Insn 95(l0): point = 50
   Insn 93(l0): point = 53
   Insn 92(l0): point = 55
   Insn 91(l0): point = 57
   Insn 90(l0): point = 59
   Insn 89(l0): point = 61
   Insn 88(l0): point = 63
   Insn 87(l0): point = 65
   Insn 86(l0): point = 67
   Insn 85(l0): point = 69
   Insn 84(l0): point = 71
   Insn 83(l0): point = 73
   Insn 82(l0): point = 75
   Insn 135(l0): point = 78
   Insn 55(l0): point = 80
   Insn 54(l0): point = 82
   Insn 143(l0): point = 85
   Insn 70(l0): point = 88
   Insn 69(l0): point = 90
   Insn 67(l0): point = 92
   Insn 66(l0): point = 94
   Insn 65(l0): point = 96
   Insn 64(l0): point = 98
   Insn 63(l0): point = 100
   Insn 62(l0): point = 102
   Insn 61(l0): point = 104
   Insn 60(l0): point = 106
   Insn 49(l0): point = 109
   Insn 48(l0): point = 111
   Insn 47(l0): point = 113
   Insn 46(l0): point = 115
   Insn 45(l0): point = 117
   Insn 44(l0): point = 119
   Insn 43(l0): point = 121
   Insn 42(l0): point = 123
   Insn 41(l0): point = 125
   Insn 40(l0): point = 127
   Insn 39(l0): point = 129
   Insn 38(l0): point = 131
   Insn 37(l0): point = 133
   Insn 36(l0): point = 135
   Insn 35(l0): point = 137
   Insn 34(l0): point = 139
   Insn 33(l0): point = 141
   Insn 32(l0): point = 143
   Insn 31(l0): point = 145
   Insn 30(l0): point = 147
   Insn 29(l0): point = 149
   Insn 28(l0): point = 151
   Insn 27(l0): point = 153
   Insn 26(l0): point = 155
   Insn 25(l0): point = 157
   Insn 24(l0): point = 159
   Insn 23(l0): point = 161
   Insn 22(l0): point = 163
   Insn 21(l0): point = 165
   Insn 20(l0): point = 167
   Insn 19(l0): point = 169
   Insn 80(l0): point = 172
   Insn 79(l0): point = 174
   Insn 78(l0): point = 176
   Insn 77(l0): point = 178
   Insn 76(l0): point = 180
   Insn 75(l0): point = 182
   Insn 74(l0): point = 184
   Insn 73(l0): point = 186
   Insn 72(l0): point = 188
   Insn 139(l0): point = 191
   Insn 14(l0): point = 193
   Insn 13(l0): point = 195
   Insn 12(l0): point = 197
   Insn 11(l0): point = 199
   Insn 7(l0): point = 201
   Insn 6(l0): point = 203
   Insn 5(l0): point = 205
   Insn 4(l0): point = 207
   Insn 3(l0): point = 209
   Insn 2(l0): point = 211
 a0(r124): [4..5]
 a1(r123): [11..12]
 a2(r98): [18..19]
 a3(r122): [24..33]
 a4(r121): [26..35]
 a5(r120): [28..37]
 a6(r119): [30..39]
 a7(r97): [32..41]
 a8(r118): [42..45]
 a9(r117): [49..50]
 a10(r116): [58..59]
 a11(r96): [60..61]
 a12(r115): [68..75]
 a13(r95): [175..176]
 a14(r114): [183..188]
 a15(r94): [91..92]
 a16(r113): [103..106]
 a17(r112): [81..82]
 a18(r93): [112..113]
 a19(r92): [114..115]
 a20(r111): [120..121]
 a21(r110): [126..131]
 a22(r109): [128..133]
 a23(r108): [138..139]
 a24(r91): [142..143]
 a25(r107): [144..145]
 a26(r106): [152..153]
 a27(r105): [158..159]
 a28(r104): [162..163]
 a29(r90): [162..165]
 a30(r89): [166..167]
 a31(r103): [168..169]
 a32(r88 [0]): [194..213]
 a32(r88 [1]): [193..213]
 a33(r87): [196..197]
 a34(r101): [198..199]
Compressing live ranges: from 214 to 56 - 26%
Ranges after the compression:
 a0(r124): [0..1]
 a1(r123): [2..3]
 a2(r98): [4..5]
 a3(r122): [6..7]
 a4(r121): [6..7]
 a5(r120): [6..7]
 a6(r119): [6..7]
 a7(r97): [6..7]
 a8(r118): [8..9]
 a9(r117): [10..11]
 a10(r116): [12..13]
 a11(r96): [14..15]
 a12(r115): [16..17]
 a13(r95): [48..49]
 a14(r114): [50..51]
 a15(r94): [20..21]
 a16(r113): [22..23]
 a17(r112): [18..19]
 a18(r93): [24..25]
 a19(r92): [26..27]
 a20(r111): [28..29]
 a21(r110): [30..31]
 a22(r109): [30..31]
 a23(r108): [32..33]
 a24(r91): [34..35]
 a25(r107): [36..37]
 a26(r106): [38..39]
 a27(r105): [40..41]
 a28(r104): [42..43]
 a29(r90): [42..43]
 a30(r89): [44..45]
 a31(r103): [46..47]
 a32(r88 [0]): [52..55]
 a32(r88 [1]): [52..55]
 a33(r87): [52..53]
 a34(r101): [54..55]
  regions=1, blocks=14, points=56
    allocnos=35 (big 1), copies=0, conflicts=0, ranges=36
Disposition:
   33:r87  l0     0   32:r88  l0    39   30:r89  l0     0   29:r90  l0     1
   24:r91  l0     0   19:r92  l0     0   18:r93  l0     0   15:r94  l0     0
   13:r95  l0     0   11:r96  l0     0    7:r97  l0     5    2:r98  l0     0
   34:r101 l0     0   31:r103 l0     0   28:r104 l0     0   27:r105 l0     0
   26:r106 l0     0   25:r107 l0     0   23:r108 l0     0   22:r109 l0     2
   21:r110 l0     0   20:r111 l0     0   17:r112 l0     0   16:r113 l0     0
   14:r114 l0     0   12:r115 l0     0   10:r116 l0     0    9:r117 l0     0
    8:r118 l0     0    6:r119 l0     2    5:r120 l0     1    4:r121 l0     4
    3:r122 l0     0    1:r123 l0     0    0:r124 l0     0
+++Costs: overall -12, reg -12, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


iread

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 37 [r8] 38 [r9]
;;  ref usage 	r0={8d,3u} r1={13d,6u} r2={12d,5u} r4={13d,6u} r5={15d,8u} r6={1d,13u} r7={1d,20u} r8={7d} r9={7d} r10={7d} r11={7d} r12={7d} r13={7d} r14={7d} r15={7d} r16={1d,17u} r17={20d,6u} r18={7d} r19={7d} r20={1d,49u} r21={8d} r22={8d} r23={8d} r24={8d} r25={8d} r26={8d} r27={8d} r28={8d} r29={7d} r30={7d} r31={7d} r32={7d} r33={7d} r34={7d} r35={7d} r36={7d} r37={11d,4u} r38={8d,1u} r39={7d} r40={7d} r45={7d} r46={7d} r47={7d} r48={7d} r49={7d} r50={7d} r51={7d} r52={7d} r53={7d} r54={7d} r55={7d} r56={7d} r57={7d} r58={7d} r59={7d} r60={7d} r61={7d} r62={7d} r63={7d} r64={7d} r65={7d} r66={7d} r67={7d} r68={7d} r69={7d} r70={7d} r71={7d} r72={7d} r73={7d} r74={7d} r75={7d} r76={7d} r77={7d} r78={7d} r79={7d} r80={7d} r87={1d,1u} r88={2d,2u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r101={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,1u} 
;;    total ref usage 770{596d,174u,0e} in 101{94 regular + 7 call} insns.
(note 1 0 9 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 13, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9] 88
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9] 88
;; lr  def 	 87 101
(note 9 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 9 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -504 [0xfffffffffffffe08])) [11 lu+0 S8 A64])
        (reg:DI 5 di [ lu ])) "../src/io.f":80 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ lu ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -512 [0xfffffffffffffe00])) [10 line+0 S8 A64])
        (reg:DI 4 si [ line ])) "../src/io.f":80 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ line ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -520 [0xfffffffffffffdf8])) [11 iline+0 S8 A64])
        (reg:DI 1 dx [ iline ])) "../src/io.f":80 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ iline ])
        (nil)))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -528 [0xfffffffffffffdf0])) [11 ierr+0 S8 A64])
        (reg:DI 2 cx [ ierr ])) "../src/io.f":80 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [ ierr ])
        (nil)))
(insn 6 5 7 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -536 [0xfffffffffffffde8])) [11 nval+0 S8 A64])
        (reg:DI 37 r8 [ nval ])) "../src/io.f":80 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 37 r8 [ nval ])
        (nil)))
(insn 7 6 8 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -544 [0xfffffffffffffde0])) [6 ival+0 S8 A64])
        (reg:DI 38 r9 [ ival ])) "../src/io.f":80 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 38 r9 [ ival ])
        (nil)))
(note 8 7 11 2 NOTE_INSN_FUNCTION_BEG)
(insn 11 8 12 2 (set (reg:SI 101)
        (mem/c:SI (reg/f:DI 16 argp) [1 _line+0 S4 A64])) "../src/io.f":108 82 {*movsi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:DI 87 [ _1 ])
        (sign_extend:DI (reg:SI 101))) "../src/io.f":108 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 101)
        (nil)))
(insn 13 12 14 2 (set (subreg:DI (reg:TI 88 [ _2 ]) 0)
        (reg:DI 87 [ _1 ])) "../src/io.f":108 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 87 [ _1 ])
        (nil)))
(insn 14 13 139 2 (set (subreg:DI (reg:TI 88 [ _2 ]) 8)
        (const_int 0 [0])) "../src/io.f":108 81 {*movdi_internal}
     (expr_list:REG_UNUSED (reg:TI 88 [ _2 ])
        (nil)))
(jump_insn 139 14 140 2 (set (pc)
        (label_ref 68)) 649 {jump}
     (nil)
 -> 68)
;;  succ:       3
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 140 139 142)
;; basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 3, flags: (RTL)
;;  pred:       5 (DFS_BACK)
;;              6 (DFS_BACK)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 142 140 141 13 73 (nil) [2 uses])
(note 141 142 143 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 143 141 68 13 (const_int 0 [0]) "../src/io.f":80 682 {nop}
     (nil))
;;  succ:       3 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 13, next block 4, flags: (RTL)
;;  pred:       2
;;              13 [100.0%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 89 90 91 92 93 103 104 105 106 107 108 109 110 111
(code_label 68 143 18 3 67 (nil) [1 uses])
(note 18 68 19 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 3 (set (reg/f:DI 103)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -520 [0xfffffffffffffdf8])) [11 iline+0 S8 A64])) "../src/io.f":87 81 {*movdi_internal}
     (nil))
(insn 20 19 21 3 (set (reg:SI 89 [ _3 ])
        (mem:SI (reg/f:DI 103) [1 *iline_21(D)+0 S4 A32])) "../src/io.f":87 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 103)
        (nil)))
(insn 21 20 22 3 (parallel [
            (set (reg:SI 90 [ _4 ])
                (plus:SI (reg:SI 89 [ _3 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":87 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 89 [ _3 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 22 21 23 3 (set (reg/f:DI 104)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -520 [0xfffffffffffffdf8])) [11 iline+0 S8 A64])) "../src/io.f":87 81 {*movdi_internal}
     (nil))
(insn 23 22 24 3 (set (mem:SI (reg/f:DI 104) [1 *iline_21(D)+0 S4 A32])
        (reg:SI 90 [ _4 ])) "../src/io.f":87 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 104)
        (expr_list:REG_DEAD (reg:SI 90 [ _4 ])
            (nil))))
(insn 24 23 25 3 (set (reg/f:DI 105)
        (symbol_ref/f:DI ("*lC4") [flags 0x2]  <var_decl 0x143b723f0 *lC4>)) "../src/io.f":89 81 {*movdi_internal}
     (nil))
(insn 25 24 26 3 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -488 [0xfffffffffffffe18])) [5 dt_parm.10.common.filename+0 S8 A64])
        (reg/f:DI 105)) "../src/io.f":89 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 105)
        (nil)))
(insn 26 25 27 3 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -480 [0xfffffffffffffe20])) [1 dt_parm.10.common.line+0 S4 A128])
        (const_int 89 [0x59])) "../src/io.f":89 82 {*movsi_internal}
     (nil))
(insn 27 26 28 3 (set (reg/f:DI 106)
        (symbol_ref/f:DI ("*lC5") [flags 0x2]  <var_decl 0x143ba4c60 *lC5>)) "../src/io.f":89 81 {*movdi_internal}
     (nil))
(insn 28 27 29 3 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -424 [0xfffffffffffffe58])) [5 dt_parm.10.format+0 S8 A64])
        (reg/f:DI 106)) "../src/io.f":89 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 106)
        (nil)))
(insn 29 28 30 3 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -416 [0xfffffffffffffe60])) [1 dt_parm.10.format_len+0 S4 A128])
        (const_int 3 [0x3])) "../src/io.f":89 82 {*movsi_internal}
     (nil))
(insn 30 29 31 3 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -496 [0xfffffffffffffe10])) [1 dt_parm.10.common.flags+0 S4 A128])
        (const_int 4104 [0x1008])) "../src/io.f":89 82 {*movsi_internal}
     (nil))
(insn 31 30 32 3 (set (reg/f:DI 107)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -504 [0xfffffffffffffe08])) [11 lu+0 S8 A64])) "../src/io.f":89 81 {*movdi_internal}
     (nil))
(insn 32 31 33 3 (set (reg:SI 91 [ _5 ])
        (mem:SI (reg/f:DI 107) [1 *lu_28(D)+0 S4 A32])) "../src/io.f":89 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 107)
        (nil)))
(insn 33 32 34 3 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -492 [0xfffffffffffffe14])) [1 dt_parm.10.common.unit+0 S4 A32])
        (reg:SI 91 [ _5 ])) "../src/io.f":89 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 91 [ _5 ])
        (nil)))
(insn 34 33 35 3 (parallel [
            (set (reg:DI 108)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -496 [0xfffffffffffffe10])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":89 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 35 34 36 3 (set (reg:DI 5 di)
        (reg:DI 108)) "../src/io.f":89 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 108)
        (nil)))
(call_insn 36 35 37 3 (call (mem:QI (symbol_ref:DI ("_gfortran_st_read") [flags 0x41]  <function_decl 0x1439e0700 _gfortran_st_read>) [0 _gfortran_st_read S1 A8])
        (const_int 0 [0])) "../src/io.f":89 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 37 36 38 3 (set (reg:DI 109)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -512 [0xfffffffffffffe00])) [10 line+0 S8 A64])) "../src/io.f":89 81 {*movdi_internal}
     (nil))
(insn 38 37 39 3 (parallel [
            (set (reg:DI 110)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -496 [0xfffffffffffffe10])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":89 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 39 38 40 3 (set (reg:SI 1 dx)
        (mem/c:SI (reg/f:DI 16 argp) [1 _line+0 S4 A64])) "../src/io.f":89 82 {*movsi_internal}
     (nil))
(insn 40 39 41 3 (set (reg:DI 4 si)
        (reg:DI 109)) "../src/io.f":89 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 109)
        (nil)))
(insn 41 40 42 3 (set (reg:DI 5 di)
        (reg:DI 110)) "../src/io.f":89 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 110)
        (nil)))
(call_insn 42 41 43 3 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_character") [flags 0x41]  <function_decl 0x1439d4800 _gfortran_transfer_character>) [0 _gfortran_transfer_character S1 A8])
        (const_int 0 [0])) "../src/io.f":89 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 43 42 44 3 (parallel [
            (set (reg:DI 111)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -496 [0xfffffffffffffe10])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":89 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 44 43 45 3 (set (reg:DI 5 di)
        (reg:DI 111)) "../src/io.f":89 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 111)
        (nil)))
(call_insn 45 44 46 3 (call (mem:QI (symbol_ref:DI ("_gfortran_st_read_done") [flags 0x41]  <function_decl 0x1439e4200 _gfortran_st_read_done>) [0 _gfortran_st_read_done S1 A8])
        (const_int 0 [0])) "../src/io.f":89 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 46 45 47 3 (set (reg:SI 92 [ _6 ])
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -496 [0xfffffffffffffe10])) [1 dt_parm.10.common.flags+0 S4 A128])) "../src/io.f":89 82 {*movsi_internal}
     (nil))
(insn 47 46 48 3 (parallel [
            (set (reg:SI 93 [ _7 ])
                (and:SI (reg:SI 92 [ _6 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":89 391 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 92 [ _6 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 48 47 49 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 93 [ _7 ])
            (const_int 2 [0x2]))) "../src/io.f":89 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 93 [ _7 ])
        (nil)))
(jump_insn 49 48 53 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 134)
            (pc))) "../src/io.f":89 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 134)
;;  succ:       4 (FALLTHRU)
;;              5
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 112
(note 53 49 52 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(note 52 53 54 4 ("L.33") NOTE_INSN_DELETED_LABEL 65)
(insn 54 52 55 4 (set (reg/f:DI 112)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -528 [0xfffffffffffffdf0])) [11 ierr+0 S8 A64])) "../src/io.f":106 81 {*movdi_internal}
     (nil))
(insn 55 54 135 4 (set (mem:SI (reg/f:DI 112) [1 *ierr_35(D)+0 S4 A32])
        (const_int -1 [0xffffffffffffffff])) "../src/io.f":106 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 112)
        (nil)))
(jump_insn 135 55 136 4 (set (pc)
        (label_ref 130)) "../src/io.f":107 649 {jump}
     (nil)
 -> 130)
;;  succ:       12 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 136 135 134)
;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       3
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 94 113
(code_label 134 136 59 5 72 (nil) [1 uses])
(note 59 134 60 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 60 59 61 5 (set (reg:DI 113)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -512 [0xfffffffffffffe00])) [10 line+0 S8 A64])) "../src/io.f":92 81 {*movdi_internal}
     (nil))
(insn 61 60 62 5 (set (reg:SI 37 r8)
        (const_int 0 [0])) "../src/io.f":92 82 {*movsi_internal}
     (nil))
(insn 62 61 63 5 (set (reg:DI 2 cx)
        (reg:DI 113)) "../src/io.f":92 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 113)
        (nil)))
(insn 63 62 64 5 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) "../src/io.f":92 82 {*movsi_internal}
     (nil))
(insn 64 63 65 5 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*lC6") [flags 0x2]  <var_decl 0x143ba4cf0 *lC6>)) "../src/io.f":92 81 {*movdi_internal}
     (nil))
(insn 65 64 66 5 (set (reg:SI 5 di)
        (const_int 2 [0x2])) "../src/io.f":92 82 {*movsi_internal}
     (nil))
(call_insn/i 66 65 67 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_gfortran_string_index") [flags 0x41]  <function_decl 0x1439c4a00 _gfortran_string_index>) [0 _gfortran_string_index S1 A8])
            (const_int 0 [0]))) "../src/io.f":92 665 {*call_value}
     (expr_list:REG_DEAD (reg:SI 37 r8)
        (expr_list:REG_DEAD (reg:SI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:SI 1 dx)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (nil)))))))
(insn 67 66 69 5 (set (reg:SI 94 [ _8 ])
        (reg:SI 0 ax)) "../src/io.f":92 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 69 67 70 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 94 [ _8 ])
            (const_int 0 [0]))) "../src/io.f":92 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 94 [ _8 ])
        (nil)))
(jump_insn 70 69 71 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 142)
            (pc))) "../src/io.f":92 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 142)
;;  succ:       13 (DFS_BACK)
;;              6 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (RTL)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 95 114
(note 71 70 72 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 72 71 73 6 (set (reg:DI 114)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -512 [0xfffffffffffffe00])) [10 line+0 S8 A64])) "../src/io.f":93 81 {*movdi_internal}
     (nil))
(insn 73 72 74 6 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*lC2") [flags 0x2]  <var_decl 0x143b722d0 *lC2>)) "../src/io.f":93 81 {*movdi_internal}
     (nil))
(insn 74 73 75 6 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) "../src/io.f":93 82 {*movsi_internal}
     (nil))
(insn 75 74 76 6 (set (reg:DI 4 si)
        (reg:DI 114)) "../src/io.f":93 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 114)
        (nil)))
(insn 76 75 77 6 (set (reg:SI 5 di)
        (mem/c:SI (reg/f:DI 16 argp) [1 _line+0 S4 A64])) "../src/io.f":93 82 {*movsi_internal}
     (nil))
(call_insn/i 77 76 78 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_gfortran_compare_string") [flags 0x41]  <function_decl 0x1439c4700 _gfortran_compare_string>) [0 _gfortran_compare_string S1 A8])
            (const_int 0 [0]))) "../src/io.f":93 665 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:SI 1 dx)
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 78 77 79 6 (set (reg:SI 95 [ _9 ])
        (reg:SI 0 ax)) "../src/io.f":93 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 79 78 80 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 95 [ _9 ])
            (const_int 0 [0]))) "../src/io.f":93 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 95 [ _9 ])
        (nil)))
(jump_insn 80 79 81 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 142)
            (pc))) "../src/io.f":93 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 142)
;;  succ:       13 (DFS_BACK)
;;              7 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (RTL)
;;  pred:       6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 96 115 116
(note 81 80 82 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 82 81 83 7 (set (reg:DI 115)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -512 [0xfffffffffffffe00])) [10 line+0 S8 A64])) "../src/io.f":95 81 {*movdi_internal}
     (nil))
(insn 83 82 84 7 (set (reg:SI 37 r8)
        (const_int 0 [0])) "../src/io.f":95 82 {*movsi_internal}
     (nil))
(insn 84 83 85 7 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*lC1") [flags 0x2]  <var_decl 0x143b72240 *lC1>)) "../src/io.f":95 81 {*movdi_internal}
     (nil))
(insn 85 84 86 7 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) "../src/io.f":95 82 {*movsi_internal}
     (nil))
(insn 86 85 87 7 (set (reg:DI 4 si)
        (reg:DI 115)) "../src/io.f":95 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 115)
        (nil)))
(insn 87 86 88 7 (set (reg:SI 5 di)
        (mem/c:SI (reg/f:DI 16 argp) [1 _line+0 S4 A64])) "../src/io.f":95 82 {*movsi_internal}
     (nil))
(call_insn/i 88 87 89 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_gfortran_string_index") [flags 0x41]  <function_decl 0x1439c4a00 _gfortran_string_index>) [0 _gfortran_string_index S1 A8])
            (const_int 0 [0]))) "../src/io.f":95 665 {*call_value}
     (expr_list:REG_DEAD (reg:SI 37 r8)
        (expr_list:REG_DEAD (reg:SI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:SI 1 dx)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (nil)))))))
(insn 89 88 90 7 (set (reg:SI 96 [ _10 ])
        (reg:SI 0 ax)) "../src/io.f":95 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 90 89 91 7 (parallel [
            (set (reg:SI 116)
                (plus:SI (reg:SI 96 [ _10 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":95 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 96 [ _10 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 91 90 92 7 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 kb+0 S4 A32])
        (reg:SI 116)) "../src/io.f":95 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 116)
        (nil)))
(insn 92 91 93 7 (set (reg:CCNO 17 flags)
        (compare:CCNO (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [1 kb+0 S4 A32])
            (const_int 0 [0]))) "../src/io.f":96 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 93 92 94 7 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 97)
            (pc))) "../src/io.f":96 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (nil))
 -> 97)
;;  succ:       8 (FALLTHRU)
;;              9
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (RTL)
;;  pred:       7 (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 117
(note 94 93 95 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 95 94 96 8 (set (reg:SI 117)
        (mem/c:SI (reg/f:DI 16 argp) [1 _line+0 S4 A64])) "../src/io.f":96 82 {*movsi_internal}
     (nil))
(insn 96 95 97 8 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 kb+0 S4 A32])
        (reg:SI 117)) "../src/io.f":96 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 117)
        (nil)))
;;  succ:       9 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (RTL)
;;  pred:       7
;;              8 (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 97 98 118 119 120 121 122
(code_label 97 96 98 9 68 (nil) [1 uses])
(note 98 97 100 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 100 98 99 9 (set (reg:SI 118)
        (const_int 0 [0])) "../src/io.f":98 82 {*movsi_internal}
     (nil))
(insn 99 100 101 9 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [1 kb+0 S4 A32])
            (const_int 0 [0]))) "../src/io.f":98 3 {*cmpsi_ccno_1}
     (nil))
(insn 101 99 102 9 (set (reg:SI 97 [ _11 ])
        (if_then_else:SI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [1 kb+0 S4 A32])
            (reg:SI 118))) "../src/io.f":98 966 {*movsicc_noc}
     (expr_list:REG_DEAD (reg:SI 118)
        (expr_list:REG_DEAD (reg:CCGOC 17 flags)
            (nil))))
(insn 102 101 103 9 (parallel [
            (set (reg:DI 119)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":98 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 103 102 104 9 (set (reg:DI 120)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -536 [0xfffffffffffffde8])) [11 nval+0 S8 A64])) "../src/io.f":98 81 {*movdi_internal}
     (nil))
(insn 104 103 105 9 (set (reg:DI 121)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -544 [0xfffffffffffffde0])) [6 ival+0 S8 A64])) "../src/io.f":98 81 {*movdi_internal}
     (nil))
(insn 105 104 106 9 (set (reg:DI 122)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -512 [0xfffffffffffffe00])) [10 line+0 S8 A64])) "../src/io.f":98 81 {*movdi_internal}
     (nil))
(insn 106 105 107 9 (set (reg:SI 37 r8)
        (reg:SI 97 [ _11 ])) "../src/io.f":98 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 97 [ _11 ])
        (nil)))
(insn 107 106 108 9 (set (reg:DI 2 cx)
        (reg:DI 119)) "../src/io.f":98 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 119)
        (nil)))
(insn 108 107 109 9 (set (reg:DI 1 dx)
        (reg:DI 120)) "../src/io.f":98 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 120)
        (nil)))
(insn 109 108 110 9 (set (reg:DI 4 si)
        (reg:DI 121)) "../src/io.f":98 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 121)
        (nil)))
(insn 110 109 111 9 (set (reg:DI 5 di)
        (reg:DI 122)) "../src/io.f":98 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 122)
        (nil)))
(call_insn 111 110 112 9 (call (mem:QI (symbol_ref:DI ("getint_") [flags 0x403]  <function_decl 0x1439e4800 getint>) [0 getint S1 A8])
        (const_int 0 [0])) "../src/io.f":98 655 {*call}
     (expr_list:REG_DEAD (reg:SI 37 r8)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (nil)))))))
(insn 112 111 113 9 (set (reg:SI 98 [ error.19_12 ])
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [13 error+0 S4 A64])) "../src/io.f":99 82 {*movsi_internal}
     (nil))
(insn 113 112 114 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 98 [ error.19_12 ])
            (const_int 0 [0]))) "../src/io.f":99 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 98 [ error.19_12 ])
        (nil)))
(jump_insn 114 113 115 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 120)
            (pc))) "../src/io.f":99 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 120)
;;  succ:       10 (FALLTHRU)
;;              11
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (RTL)
;;  pred:       9 (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 123
(note 115 114 116 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 116 115 117 10 (set (reg/f:DI 123)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -528 [0xfffffffffffffdf0])) [11 ierr+0 S8 A64])) "../src/io.f":100 81 {*movdi_internal}
     (nil))
(insn 117 116 137 10 (set (mem:SI (reg/f:DI 123) [1 *ierr_35(D)+0 S4 A32])
        (const_int 1 [0x1])) "../src/io.f":100 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 123)
        (nil)))
(jump_insn 137 117 138 10 (set (pc)
        (label_ref 130)) "../src/io.f":104 649 {jump}
     (nil)
 -> 130)
;;  succ:       12 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 138 137 120)
;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (RTL)
;;  pred:       9
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 124
(code_label 120 138 121 11 69 (nil) [1 uses])
(note 121 120 122 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 122 121 123 11 (set (reg/f:DI 124)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -528 [0xfffffffffffffdf0])) [11 ierr+0 S8 A64])) "../src/io.f":102 81 {*movdi_internal}
     (nil))
(insn 123 122 133 11 (set (mem:SI (reg/f:DI 124) [1 *ierr_35(D)+0 S4 A32])
        (const_int 0 [0])) "../src/io.f":102 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 124)
        (nil)))
(insn 133 123 130 11 (const_int 0 [0]) "../src/io.f":104 682 {nop}
     (nil))
;;  succ:       12 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 1, flags: (RTL)
;;  pred:       11 (FALLTHRU)
;;              4 [100.0%] 
;;              10 [100.0%] 
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 130 133 131 12 63 (nil) [2 uses])
(note 131 130 0 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function pparse (pparse_, funcdef_no=5, decl_uid=3664, cgraph_uid=5, symbol_order=5)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 41 n_edges 65 count 41 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40
;; 2 succs { 3 5 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 9 }
;; 8 succs { 9 }
;; 9 succs { 10 13 }
;; 10 succs { 38 11 }
;; 11 succs { 39 12 }
;; 12 succs { 40 }
;; 13 succs { 38 14 }
;; 14 succs { 39 15 }
;; 15 succs { 16 18 }
;; 16 succs { 17 18 }
;; 17 succs { 19 }
;; 18 succs { 19 }
;; 19 succs { 20 26 }
;; 20 succs { 38 21 }
;; 21 succs { 39 22 }
;; 22 succs { 25 23 }
;; 23 succs { 24 25 }
;; 24 succs { 40 }
;; 25 succs { 40 }
;; 26 succs { 27 32 }
;; 27 succs { 38 28 }
;; 28 succs { 39 29 }
;; 29 succs { 38 30 }
;; 30 succs { 39 31 }
;; 31 succs { 40 }
;; 32 succs { 33 38 }
;; 33 succs { 38 34 }
;; 34 succs { 39 35 }
;; 35 succs { 38 36 }
;; 36 succs { 39 37 }
;; 37 succs { 40 }
;; 38 succs { 40 }
;; 39 succs { 40 }
;; 40 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 27.
verify found no changes in insn with uid = 37.
verify found no changes in insn with uid = 81.
verify found no changes in insn with uid = 111.
verify found no changes in insn with uid = 117.
verify found no changes in insn with uid = 120.
verify found no changes in insn with uid = 169.
verify found no changes in insn with uid = 175.
verify found no changes in insn with uid = 178.
verify found no changes in insn with uid = 243.
verify found no changes in insn with uid = 249.
verify found no changes in insn with uid = 252.
verify found no changes in insn with uid = 333.
verify found no changes in insn with uid = 339.
verify found no changes in insn with uid = 342.
verify found no changes in insn with uid = 388.
verify found no changes in insn with uid = 394.
verify found no changes in insn with uid = 397.
verify found no changes in insn with uid = 473.
verify found no changes in insn with uid = 479.
verify found no changes in insn with uid = 482.
verify found no changes in insn with uid = 528.
verify found no changes in insn with uid = 534.
verify found no changes in insn with uid = 537.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r292: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r292,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r291: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r291,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r290: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r290,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r289: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a5 (r289,l0) best SSE_REGS, allocno SSE_REGS
    r288: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a8 (r288,l0) best SSE_REGS, allocno SSE_REGS
    r287: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a11 (r287,l0) best DIREG, allocno GENERAL_REGS
    r286: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a12 (r286,l0) best DIREG, allocno GENERAL_REGS
    r285: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a13 (r285,l0) best SIREG, allocno GENERAL_REGS
    r284: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a14 (r284,l0) best DIREG, allocno GENERAL_REGS
    r283: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r283,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r282: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r282,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r281: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r281,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r280: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r280,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r279: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r279,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r278: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r278,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r277: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r277,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r276: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r276,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r275: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r275,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r272: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a30 (r272,l0) best DIREG, allocno GENERAL_REGS
    r271: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a31 (r271,l0) best DIREG, allocno GENERAL_REGS
    r270: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a32 (r270,l0) best SIREG, allocno GENERAL_REGS
    r269: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a33 (r269,l0) best DIREG, allocno GENERAL_REGS
    r268: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a35 (r268,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r267: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a38 (r267,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r266: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a40 (r266,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r265: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a41 (r265,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r264: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a43 (r264,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r263: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a42 (r263,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r262: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a44 (r262,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r261: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a46 (r261,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r260: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a45 (r260,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r257: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a48 (r257,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r256: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a47 (r256,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r253: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a49 (r253,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r252: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a52 (r252,l0) best SSE_REGS, allocno SSE_REGS
    r251: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a55 (r251,l0) best SSE_REGS, allocno SSE_REGS
    r250: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a62 (r250,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r249: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a63 (r249,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r248: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a66 (r248,l0) best DIREG, allocno GENERAL_REGS
    r247: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a67 (r247,l0) best DIREG, allocno GENERAL_REGS
    r246: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a68 (r246,l0) best SIREG, allocno GENERAL_REGS
    r245: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a69 (r245,l0) best DIREG, allocno GENERAL_REGS
    r244: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a71 (r244,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r243: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a74 (r243,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r242: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a76 (r242,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r241: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a77 (r241,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r240: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a79 (r240,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r239: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a78 (r239,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r238: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a80 (r238,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r237: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a82 (r237,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r236: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a81 (r236,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r233: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a85 (r233,l0) best DIREG, allocno GENERAL_REGS
    r232: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a86 (r232,l0) best DIREG, allocno GENERAL_REGS
    r231: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a87 (r231,l0) best SIREG, allocno GENERAL_REGS
    r230: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a88 (r230,l0) best DIREG, allocno GENERAL_REGS
    r229: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a90 (r229,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r228: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a93 (r228,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r227: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a95 (r227,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r226: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a96 (r226,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r225: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a98 (r225,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r224: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a97 (r224,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r223: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a99 (r223,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r222: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a101 (r222,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r221: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a100 (r221,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r218: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a103 (r218,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r217: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a102 (r217,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r214: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a104 (r214,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r213: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a105 (r213,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r212: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a108 (r212,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r211: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a109 (r211,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r210: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a112 (r210,l0) best DIREG, allocno GENERAL_REGS
    r209: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a113 (r209,l0) best DIREG, allocno GENERAL_REGS
    r208: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a114 (r208,l0) best SIREG, allocno GENERAL_REGS
    r207: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a115 (r207,l0) best DIREG, allocno GENERAL_REGS
    r206: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a117 (r206,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r205: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a120 (r205,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r204: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a122 (r204,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r203: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a123 (r203,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r202: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a125 (r202,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r201: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a124 (r201,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r200: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a126 (r200,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r199: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a128 (r199,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r198: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a127 (r198,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r195: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a133 (r195,l0) best DIREG, allocno GENERAL_REGS
    r194: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a134 (r194,l0) best DIREG, allocno GENERAL_REGS
    r193: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a135 (r193,l0) best SIREG, allocno GENERAL_REGS
    r192: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a136 (r192,l0) best DIREG, allocno GENERAL_REGS
    r191: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a138 (r191,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r190: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a139 (r190,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r189: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a140 (r189,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r188: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a142 (r188,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r187: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a141 (r187,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r184: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a143 (r184,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r183: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a144 (r183,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r182: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a146 (r182,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r181: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a149 (r181,l0) best DIREG, allocno GENERAL_REGS
    r180: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a150 (r180,l0) best DIREG, allocno GENERAL_REGS
    r179: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a151 (r179,l0) best SIREG, allocno GENERAL_REGS
    r178: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a152 (r178,l0) best DIREG, allocno GENERAL_REGS
    r177: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a153 (r177,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r176: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a154 (r176,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r175: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a155 (r175,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r174: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a156 (r174,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r173: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a157 (r173,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r172: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a159 (r172,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r171: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a163 (r171,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r170: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a166 (r170,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r169: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a167 (r169,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r168: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a168 (r168,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r167: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a170 (r167,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r166: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a169 (r166,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r165: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a172 (r165,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r164: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a171 (r164,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r161: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a175 (r161,l0) best AREG, allocno GENERAL_REGS
    r160: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a176 (r160,l0) best DIREG, allocno GENERAL_REGS
    r159: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a177 (r159,l0) best SIREG, allocno GENERAL_REGS
    r158: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a178 (r158,l0) best AREG, allocno GENERAL_REGS
    r157: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a179 (r157,l0) best DIREG, allocno GENERAL_REGS
    r156: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a180 (r156,l0) best SIREG, allocno GENERAL_REGS
    r155: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a181 (r155,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r153: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a184 (r153,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r150: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a130 (r150,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r149: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a174 (r149,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r148: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r148,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r147: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a4 (r147,l0) best SSE_REGS, allocno SSE_REGS
    r146: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a6 (r146,l0) best SSE_REGS, allocno SSE_REGS
    r145: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a7 (r145,l0) best SSE_REGS, allocno SSE_REGS
    r144: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r144,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r143,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r142,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r141,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r140,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r139,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r138,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r137,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a34 (r136,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a36 (r135,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a37 (r134,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a39 (r133,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r132: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a50 (r132,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r131: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a51 (r131,l0) best SSE_REGS, allocno SSE_REGS
    r130: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a53 (r130,l0) best SSE_REGS, allocno SSE_REGS
    r129: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a54 (r129,l0) best SSE_REGS, allocno SSE_REGS
    r128: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a56 (r128,l0) best SSE_REGS, allocno SSE_REGS
    r127: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a57 (r127,l0) best SSE_REGS, allocno SSE_REGS
    r126: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a58 (r126,l0) best SSE_REGS, allocno SSE_REGS
    r125: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a59 (r125,l0) best SSE_REGS, allocno SSE_REGS
    r124: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a60 (r124,l0) best SSE_REGS, allocno SSE_REGS
    r123: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a61 (r123,l0) best SSE_REGS, allocno SSE_REGS
    r122: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a64 (r122,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a65 (r121,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r120: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a70 (r120,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a72 (r119,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r118: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a73 (r118,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a75 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a83 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a84 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a89 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a91 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r112: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a92 (r112,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a94 (r111,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r110: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a106 (r110,l0) best SSE_REGS, allocno SSE_REGS
    r109: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a107 (r109,l0) best SSE_REGS, allocno SSE_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a110 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a111 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a116 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a118 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a119 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a121 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a129 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a131 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a132 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a137 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a145 (r98,l0) best SSE_REGS, allocno SSE_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a147 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a148 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a158 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a160 (r94,l0) best AREG, allocno GENERAL_REGS
    r93: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a161 (r93,l0) best DIREG, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a164 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a165 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a162 (r90,l0) best SIREG, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a173 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a182 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a183 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r292,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a1(r291,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a2(r290,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a3(r148,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:8
  a4(r147,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 CLOBBERED_REGS:12 Q_REGS:12 NON_Q_REGS:12 TLS_GOTBASE_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:9
  a5(r289,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a6(r146,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a7(r145,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a8(r288,l0) costs: SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MEM:15
  a9(r144,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:39 INT_SSE_REGS:27 ALL_REGS:624 MEM:9
  a10(r143,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a11(r287,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a12(r286,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a13(r285,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a14(r284,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a15(r142,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:8
  a16(r283,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a17(r141,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:39 INT_SSE_REGS:27 ALL_REGS:624 MEM:10
  a18(r140,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a19(r282,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a20(r139,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a21(r281,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a22(r280,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a23(r278,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a24(r279,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a25(r277,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a26(r275,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a27(r276,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a28(r138,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:39 INT_SSE_REGS:27 ALL_REGS:624 MEM:9
  a29(r137,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a30(r272,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a31(r271,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a32(r270,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a33(r269,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a34(r136,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:8
  a35(r268,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a36(r135,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:39 INT_SSE_REGS:27 ALL_REGS:624 MEM:10
  a37(r134,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a38(r267,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a39(r133,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a40(r266,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a41(r265,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a42(r263,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a43(r264,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a44(r262,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a45(r260,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a46(r261,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a47(r256,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a48(r257,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a49(r253,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a50(r132,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:8
  a51(r131,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 CLOBBERED_REGS:12 Q_REGS:12 NON_Q_REGS:12 TLS_GOTBASE_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:9
  a52(r252,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a53(r130,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a54(r129,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a55(r251,l0) costs: SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MEM:15
  a56(r128,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a57(r127,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a58(r126,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 ALL_REGS:29 MEM:9
  a59(r125,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:9
  a60(r124,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a61(r123,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a62(r250,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a63(r249,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a64(r122,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:39 INT_SSE_REGS:27 ALL_REGS:624 MEM:9
  a65(r121,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a66(r248,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a67(r247,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a68(r246,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a69(r245,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a70(r120,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:8
  a71(r244,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a72(r119,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:39 INT_SSE_REGS:27 ALL_REGS:624 MEM:10
  a73(r118,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a74(r243,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a75(r117,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a76(r242,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a77(r241,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a78(r239,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a79(r240,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a80(r238,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a81(r236,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a82(r237,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a83(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:39 INT_SSE_REGS:27 ALL_REGS:624 MEM:9
  a84(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a85(r233,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a86(r232,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a87(r231,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a88(r230,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a89(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:8
  a90(r229,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a91(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:39 INT_SSE_REGS:27 ALL_REGS:624 MEM:10
  a92(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a93(r228,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a94(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a95(r227,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a96(r226,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a97(r224,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a98(r225,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a99(r223,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a100(r221,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a101(r222,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a102(r217,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a103(r218,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a104(r214,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a105(r213,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a106(r110,l0) costs: AREG:18 DREG:18 CREG:18 BREG:18 SIREG:18 DIREG:18 AD_REGS:18 CLOBBERED_REGS:18 Q_REGS:18 NON_Q_REGS:18 TLS_GOTBASE_REGS:18 GENERAL_REGS:18 FP_TOP_REG:54 FP_SECOND_REG:54 FLOAT_REGS:54 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:48 FP_TOP_SSE_REGS:56 FP_SECOND_SSE_REGS:56 FLOAT_SSE_REGS:56 FLOAT_INT_REGS:54 INT_SSE_REGS:37 FLOAT_INT_SSE_REGS:56 ALL_REGS:56 MEM:20
  a107(r109,l0) costs: AREG:18 DREG:18 CREG:18 BREG:18 SIREG:18 DIREG:18 AD_REGS:18 CLOBBERED_REGS:18 Q_REGS:18 NON_Q_REGS:18 TLS_GOTBASE_REGS:18 GENERAL_REGS:18 FP_TOP_REG:54 FP_SECOND_REG:54 FLOAT_REGS:54 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:48 FP_TOP_SSE_REGS:56 FP_SECOND_SSE_REGS:56 FLOAT_SSE_REGS:56 FLOAT_INT_REGS:54 INT_SSE_REGS:37 FLOAT_INT_SSE_REGS:56 ALL_REGS:56 MEM:22
  a108(r212,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a109(r211,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a110(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:39 INT_SSE_REGS:27 ALL_REGS:624 MEM:9
  a111(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a112(r210,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a113(r209,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a114(r208,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a115(r207,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a116(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:8
  a117(r206,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a118(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:39 INT_SSE_REGS:27 ALL_REGS:624 MEM:10
  a119(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a120(r205,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a121(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a122(r204,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a123(r203,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a124(r201,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a125(r202,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a126(r200,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a127(r198,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a128(r199,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a129(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:32 NO_REX_SSE_REGS:32 SSE_REGS:32 MMX_REGS:52 INT_SSE_REGS:36 ALL_REGS:832 MEM:14
  a130(r150,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:5
  a131(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:39 INT_SSE_REGS:27 ALL_REGS:624 MEM:9
  a132(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a133(r195,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a134(r194,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a135(r193,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a136(r192,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a137(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:8
  a138(r191,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a139(r190,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a140(r189,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a141(r187,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a142(r188,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a143(r184,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a144(r183,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a145(r98,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 CLOBBERED_REGS:4 Q_REGS:4 NON_Q_REGS:4 TLS_GOTBASE_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:29 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:12
  a146(r182,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a147(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:39 INT_SSE_REGS:27 ALL_REGS:624 MEM:9
  a148(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a149(r181,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a150(r180,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a151(r179,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a152(r178,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a153(r177,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a154(r176,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a155(r175,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a156(r174,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a157(r173,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a158(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a159(r172,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a160(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a161(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a162(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a163(r171,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a164(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:39 INT_SSE_REGS:27 ALL_REGS:624 MEM:10
  a165(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a166(r170,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a167(r169,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a168(r168,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a169(r166,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a170(r167,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a171(r164,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a172(r165,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a173(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:32 NO_REX_SSE_REGS:32 SSE_REGS:32 MMX_REGS:52 INT_SSE_REGS:36 ALL_REGS:832 MEM:14
  a174(r149,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:5
  a175(r161,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a176(r160,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a177(r159,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a178(r158,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a179(r157,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a180(r156,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a181(r155,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a182(r88,l0) costs: AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:2
  a183(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a184(r153,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7

   Insn 600(l0): point = 1
   Insn 575(l0): point = 3
   Insn 574(l0): point = 5
   Insn 617(l0): point = 8
   Insn 569(l0): point = 10
   Insn 568(l0): point = 12
   Insn 615(l0): point = 15
   Insn 563(l0): point = 17
   Insn 562(l0): point = 19
   Insn 561(l0): point = 21
   Insn 560(l0): point = 23
   Insn 559(l0): point = 25
   Insn 558(l0): point = 27
   Insn 557(l0): point = 29
   Insn 556(l0): point = 31
   Insn 543(l0): point = 34
   Insn 542(l0): point = 36
   Insn 541(l0): point = 39
   Insn 540(l0): point = 41
   Insn 539(l0): point = 43
   Insn 538(l0): point = 45
   Insn 537(l0): point = 47
   Insn 536(l0): point = 49
   Insn 535(l0): point = 51
   Insn 534(l0): point = 53
   Insn 533(l0): point = 55
   Insn 532(l0): point = 57
   Insn 531(l0): point = 59
   Insn 530(l0): point = 61
   Insn 529(l0): point = 63
   Insn 528(l0): point = 65
   Insn 527(l0): point = 67
   Insn 526(l0): point = 69
   Insn 525(l0): point = 71
   Insn 524(l0): point = 73
   Insn 523(l0): point = 75
   Insn 522(l0): point = 77
   Insn 521(l0): point = 79
   Insn 519(l0): point = 81
   Insn 520(l0): point = 83
   Insn 518(l0): point = 85
   Insn 517(l0): point = 87
   Insn 516(l0): point = 89
   Insn 515(l0): point = 91
   Insn 514(l0): point = 93
   Insn 513(l0): point = 95
   Insn 512(l0): point = 97
   Insn 511(l0): point = 99
   Insn 510(l0): point = 101
   Insn 509(l0): point = 103
   Insn 508(l0): point = 105
   Insn 507(l0): point = 107
   Insn 506(l0): point = 109
   Insn 505(l0): point = 111
   Insn 504(l0): point = 113
   Insn 488(l0): point = 116
   Insn 487(l0): point = 118
   Insn 486(l0): point = 121
   Insn 485(l0): point = 123
   Insn 484(l0): point = 125
   Insn 483(l0): point = 127
   Insn 482(l0): point = 129
   Insn 481(l0): point = 131
   Insn 480(l0): point = 133
   Insn 479(l0): point = 135
   Insn 478(l0): point = 137
   Insn 477(l0): point = 139
   Insn 476(l0): point = 141
   Insn 475(l0): point = 143
   Insn 474(l0): point = 145
   Insn 473(l0): point = 147
   Insn 472(l0): point = 149
   Insn 471(l0): point = 151
   Insn 470(l0): point = 153
   Insn 469(l0): point = 155
   Insn 468(l0): point = 157
   Insn 467(l0): point = 159
   Insn 466(l0): point = 161
   Insn 464(l0): point = 163
   Insn 465(l0): point = 165
   Insn 463(l0): point = 167
   Insn 462(l0): point = 169
   Insn 461(l0): point = 171
   Insn 460(l0): point = 173
   Insn 459(l0): point = 175
   Insn 458(l0): point = 177
   Insn 457(l0): point = 179
   Insn 456(l0): point = 181
   Insn 455(l0): point = 183
   Insn 454(l0): point = 185
   Insn 453(l0): point = 187
   Insn 452(l0): point = 189
   Insn 451(l0): point = 191
   Insn 450(l0): point = 193
   Insn 449(l0): point = 195
   Insn 445(l0): point = 197
   Insn 444(l0): point = 199
   Insn 443(l0): point = 201
   Insn 438(l0): point = 204
   Insn 437(l0): point = 206
   Insn 613(l0): point = 209
   Insn 432(l0): point = 211
   Insn 431(l0): point = 213
   Insn 430(l0): point = 215
   Insn 429(l0): point = 217
   Insn 428(l0): point = 219
   Insn 427(l0): point = 221
   Insn 426(l0): point = 223
   Insn 425(l0): point = 225
   Insn 424(l0): point = 227
   Insn 423(l0): point = 229
   Insn 422(l0): point = 231
   Insn 421(l0): point = 233
   Insn 420(l0): point = 235
   Insn 419(l0): point = 237
   Insn 418(l0): point = 239
   Insn 417(l0): point = 241
   Insn 416(l0): point = 243
   Insn 403(l0): point = 246
   Insn 402(l0): point = 248
   Insn 401(l0): point = 251
   Insn 400(l0): point = 253
   Insn 399(l0): point = 255
   Insn 398(l0): point = 257
   Insn 397(l0): point = 259
   Insn 396(l0): point = 261
   Insn 395(l0): point = 263
   Insn 394(l0): point = 265
   Insn 393(l0): point = 267
   Insn 392(l0): point = 269
   Insn 391(l0): point = 271
   Insn 390(l0): point = 273
   Insn 389(l0): point = 275
   Insn 388(l0): point = 277
   Insn 387(l0): point = 279
   Insn 386(l0): point = 281
   Insn 385(l0): point = 283
   Insn 384(l0): point = 285
   Insn 383(l0): point = 287
   Insn 382(l0): point = 289
   Insn 381(l0): point = 291
   Insn 379(l0): point = 293
   Insn 380(l0): point = 295
   Insn 378(l0): point = 297
   Insn 377(l0): point = 299
   Insn 376(l0): point = 301
   Insn 375(l0): point = 303
   Insn 374(l0): point = 305
   Insn 373(l0): point = 307
   Insn 372(l0): point = 309
   Insn 371(l0): point = 311
   Insn 370(l0): point = 313
   Insn 369(l0): point = 315
   Insn 368(l0): point = 317
   Insn 367(l0): point = 319
   Insn 366(l0): point = 321
   Insn 365(l0): point = 323
   Insn 364(l0): point = 325
   Insn 348(l0): point = 328
   Insn 347(l0): point = 330
   Insn 346(l0): point = 333
   Insn 345(l0): point = 335
   Insn 344(l0): point = 337
   Insn 343(l0): point = 339
   Insn 342(l0): point = 341
   Insn 341(l0): point = 343
   Insn 340(l0): point = 345
   Insn 339(l0): point = 347
   Insn 338(l0): point = 349
   Insn 337(l0): point = 351
   Insn 336(l0): point = 353
   Insn 335(l0): point = 355
   Insn 334(l0): point = 357
   Insn 333(l0): point = 359
   Insn 332(l0): point = 361
   Insn 331(l0): point = 363
   Insn 330(l0): point = 365
   Insn 329(l0): point = 367
   Insn 328(l0): point = 369
   Insn 327(l0): point = 371
   Insn 326(l0): point = 373
   Insn 324(l0): point = 375
   Insn 325(l0): point = 377
   Insn 323(l0): point = 379
   Insn 322(l0): point = 381
   Insn 321(l0): point = 383
   Insn 320(l0): point = 385
   Insn 319(l0): point = 387
   Insn 318(l0): point = 389
   Insn 317(l0): point = 391
   Insn 316(l0): point = 393
   Insn 315(l0): point = 395
   Insn 314(l0): point = 397
   Insn 313(l0): point = 399
   Insn 312(l0): point = 401
   Insn 311(l0): point = 403
   Insn 310(l0): point = 405
   Insn 309(l0): point = 407
   Insn 305(l0): point = 409
   Insn 304(l0): point = 411
   Insn 303(l0): point = 413
   Insn 298(l0): point = 416
   Insn 297(l0): point = 418
   Insn 611(l0): point = 421
   Insn 290(l0): point = 423
   Insn 289(l0): point = 425
   Insn 609(l0): point = 428
   Insn 284(l0): point = 430
   Insn 283(l0): point = 432
   Insn 278(l0): point = 435
   Insn 277(l0): point = 437
   Insn 276(l0): point = 440
   Insn 275(l0): point = 442
   Insn 274(l0): point = 444
   Insn 273(l0): point = 446
   Insn 272(l0): point = 448
   Insn 271(l0): point = 450
   Insn 258(l0): point = 453
   Insn 257(l0): point = 455
   Insn 256(l0): point = 458
   Insn 255(l0): point = 460
   Insn 254(l0): point = 462
   Insn 253(l0): point = 464
   Insn 252(l0): point = 466
   Insn 251(l0): point = 468
   Insn 250(l0): point = 470
   Insn 249(l0): point = 472
   Insn 248(l0): point = 474
   Insn 247(l0): point = 476
   Insn 246(l0): point = 478
   Insn 245(l0): point = 480
   Insn 244(l0): point = 482
   Insn 243(l0): point = 484
   Insn 242(l0): point = 486
   Insn 241(l0): point = 488
   Insn 240(l0): point = 490
   Insn 239(l0): point = 492
   Insn 238(l0): point = 494
   Insn 237(l0): point = 496
   Insn 236(l0): point = 498
   Insn 234(l0): point = 500
   Insn 235(l0): point = 502
   Insn 233(l0): point = 504
   Insn 232(l0): point = 506
   Insn 231(l0): point = 508
   Insn 230(l0): point = 510
   Insn 229(l0): point = 512
   Insn 228(l0): point = 514
   Insn 227(l0): point = 516
   Insn 226(l0): point = 518
   Insn 225(l0): point = 520
   Insn 224(l0): point = 522
   Insn 223(l0): point = 524
   Insn 222(l0): point = 526
   Insn 221(l0): point = 528
   Insn 220(l0): point = 530
   Insn 219(l0): point = 532
   Insn 214(l0): point = 535
   Insn 213(l0): point = 537
   Insn 212(l0): point = 539
   Insn 211(l0): point = 541
   Insn 208(l0): point = 544
   Insn 607(l0): point = 547
   Insn 203(l0): point = 549
   Insn 201(l0): point = 552
   Insn 200(l0): point = 554
   Insn 198(l0): point = 557
   Insn 197(l0): point = 559
   Insn 184(l0): point = 562
   Insn 183(l0): point = 564
   Insn 182(l0): point = 567
   Insn 181(l0): point = 569
   Insn 180(l0): point = 571
   Insn 179(l0): point = 573
   Insn 178(l0): point = 575
   Insn 177(l0): point = 577
   Insn 176(l0): point = 579
   Insn 175(l0): point = 581
   Insn 174(l0): point = 583
   Insn 173(l0): point = 585
   Insn 172(l0): point = 587
   Insn 171(l0): point = 589
   Insn 170(l0): point = 591
   Insn 169(l0): point = 593
   Insn 168(l0): point = 595
   Insn 167(l0): point = 597
   Insn 166(l0): point = 599
   Insn 165(l0): point = 601
   Insn 164(l0): point = 603
   Insn 163(l0): point = 605
   Insn 162(l0): point = 607
   Insn 160(l0): point = 609
   Insn 161(l0): point = 611
   Insn 159(l0): point = 613
   Insn 158(l0): point = 615
   Insn 157(l0): point = 617
   Insn 156(l0): point = 619
   Insn 155(l0): point = 621
   Insn 154(l0): point = 623
   Insn 153(l0): point = 625
   Insn 152(l0): point = 627
   Insn 605(l0): point = 630
   Insn 144(l0): point = 632
   Insn 143(l0): point = 634
   Insn 142(l0): point = 636
   Insn 141(l0): point = 638
   Insn 140(l0): point = 640
   Insn 139(l0): point = 642
   Insn 126(l0): point = 645
   Insn 125(l0): point = 647
   Insn 124(l0): point = 650
   Insn 123(l0): point = 652
   Insn 122(l0): point = 654
   Insn 121(l0): point = 656
   Insn 120(l0): point = 658
   Insn 119(l0): point = 660
   Insn 118(l0): point = 662
   Insn 117(l0): point = 664
   Insn 116(l0): point = 666
   Insn 115(l0): point = 668
   Insn 114(l0): point = 670
   Insn 113(l0): point = 672
   Insn 112(l0): point = 674
   Insn 111(l0): point = 676
   Insn 110(l0): point = 678
   Insn 109(l0): point = 680
   Insn 108(l0): point = 682
   Insn 107(l0): point = 684
   Insn 106(l0): point = 686
   Insn 105(l0): point = 688
   Insn 104(l0): point = 690
   Insn 103(l0): point = 692
   Insn 102(l0): point = 694
   Insn 101(l0): point = 696
   Insn 100(l0): point = 698
   Insn 99(l0): point = 700
   Insn 97(l0): point = 703
   Insn 96(l0): point = 705
   Insn 95(l0): point = 707
   Insn 94(l0): point = 709
   Insn 91(l0): point = 712
   Insn 603(l0): point = 715
   Insn 86(l0): point = 717
   Insn 85(l0): point = 719
   Insn 84(l0): point = 721
   Insn 83(l0): point = 723
   Insn 82(l0): point = 725
   Insn 81(l0): point = 727
   Insn 80(l0): point = 729
   Insn 79(l0): point = 731
   Insn 78(l0): point = 733
   Insn 77(l0): point = 735
   Insn 76(l0): point = 737
   Insn 75(l0): point = 739
   Insn 73(l0): point = 741
   Insn 74(l0): point = 743
   Insn 72(l0): point = 745
   Insn 71(l0): point = 747
   Insn 70(l0): point = 749
   Insn 69(l0): point = 751
   Insn 68(l0): point = 753
   Insn 67(l0): point = 755
   Insn 66(l0): point = 757
   Insn 65(l0): point = 759
   Insn 64(l0): point = 761
   Insn 63(l0): point = 763
   Insn 62(l0): point = 765
   Insn 57(l0): point = 768
   Insn 56(l0): point = 770
   Insn 55(l0): point = 772
   Insn 54(l0): point = 774
   Insn 51(l0): point = 777
   Insn 601(l0): point = 780
   Insn 46(l0): point = 782
   Insn 44(l0): point = 785
   Insn 43(l0): point = 787
   Insn 41(l0): point = 790
   Insn 40(l0): point = 792
   Insn 39(l0): point = 794
   Insn 38(l0): point = 796
   Insn 37(l0): point = 798
   Insn 36(l0): point = 800
   Insn 35(l0): point = 802
   Insn 34(l0): point = 804
   Insn 33(l0): point = 806
   Insn 32(l0): point = 808
   Insn 31(l0): point = 810
   Insn 30(l0): point = 812
   Insn 29(l0): point = 814
   Insn 28(l0): point = 816
   Insn 27(l0): point = 818
   Insn 26(l0): point = 820
   Insn 25(l0): point = 822
   Insn 24(l0): point = 824
   Insn 23(l0): point = 826
   Insn 22(l0): point = 828
   Insn 21(l0): point = 830
   Insn 20(l0): point = 832
   Insn 19(l0): point = 834
   Insn 18(l0): point = 836
   Insn 14(l0): point = 838
   Insn 13(l0): point = 840
   Insn 12(l0): point = 842
   Insn 11(l0): point = 844
   Insn 7(l0): point = 846
   Insn 6(l0): point = 848
   Insn 5(l0): point = 850
   Insn 4(l0): point = 852
   Insn 3(l0): point = 854
   Insn 2(l0): point = 856
 a0(r292): [4..5]
 a1(r291): [11..12]
 a2(r290): [18..19]
 a3(r148): [18..21]
 a4(r147): [22..23]
 a5(r289): [24..25]
 a6(r146): [24..27]
 a7(r145): [28..31]
 a8(r288): [28..29]
 a9(r144): [37..43]
 a10(r143): [44..45]
 a11(r287): [50..51]
 a12(r286): [56..61]
 a13(r285): [58..63]
 a14(r284): [68..69]
 a15(r142): [78..79]
 a16(r283): [80..83]
 a17(r141): [80..85]
 a18(r140): [86..87]
 a19(r282): [88..89]
 a20(r139): [92..93]
 a21(r281): [94..95]
 a22(r280): [94..97]
 a23(r278): [98..99]
 a24(r279): [100..101]
 a25(r277): [106..107]
 a26(r275): [110..111]
 a27(r276): [112..113]
 a28(r138): [119..125]
 a29(r137): [126..127]
 a30(r272): [132..133]
 a31(r271): [138..143]
 a32(r270): [140..145]
 a33(r269): [150..151]
 a34(r136): [160..161]
 a35(r268): [162..165]
 a36(r135): [162..167]
 a37(r134): [168..169]
 a38(r267): [170..171]
 a39(r133): [174..175]
 a40(r266): [176..177]
 a41(r265): [176..179]
 a42(r263): [180..181]
 a43(r264): [182..183]
 a44(r262): [188..189]
 a45(r260): [192..193]
 a46(r261): [194..195]
 a47(r256): [198..199]
 a48(r257): [200..201]
 a49(r253): [212..213]
 a50(r132): [212..215]
 a51(r131): [216..217]
 a52(r252): [218..219]
 a53(r130): [218..221]
 a54(r129): [222..225]
 a55(r251): [222..223]
 a56(r128): [228..229]
 a57(r127): [230..231]
 a58(r126): [230..233]
 a59(r125): [234..235]
 a60(r124): [236..237]
 a61(r123): [236..241]
 a62(r250): [238..239]
 a63(r249): [242..243]
 a64(r122): [249..255]
 a65(r121): [256..257]
 a66(r248): [262..263]
 a67(r247): [268..273]
 a68(r246): [270..275]
 a69(r245): [280..281]
 a70(r120): [290..291]
 a71(r244): [292..295]
 a72(r119): [292..297]
 a73(r118): [298..299]
 a74(r243): [300..301]
 a75(r117): [304..305]
 a76(r242): [306..307]
 a77(r241): [306..309]
 a78(r239): [310..311]
 a79(r240): [312..313]
 a80(r238): [318..319]
 a81(r236): [322..323]
 a82(r237): [324..325]
 a83(r116): [331..337]
 a84(r115): [338..339]
 a85(r233): [344..345]
 a86(r232): [350..355]
 a87(r231): [352..357]
 a88(r230): [362..363]
 a89(r114): [372..373]
 a90(r229): [374..377]
 a91(r113): [374..379]
 a92(r112): [380..381]
 a93(r228): [382..383]
 a94(r111): [386..387]
 a95(r227): [388..389]
 a96(r226): [388..391]
 a97(r224): [392..393]
 a98(r225): [394..395]
 a99(r223): [400..401]
 a100(r221): [404..405]
 a101(r222): [406..407]
 a102(r217): [410..411]
 a103(r218): [412..413]
 a104(r214): [424..425]
 a105(r213): [431..432]
 a106(r110): [438..444]
 a107(r109): [438..448]
 a108(r212): [445..446]
 a109(r211): [449..450]
 a110(r108): [456..462]
 a111(r107): [463..464]
 a112(r210): [469..470]
 a113(r209): [475..480]
 a114(r208): [477..482]
 a115(r207): [487..488]
 a116(r106): [497..498]
 a117(r206): [499..502]
 a118(r105): [499..504]
 a119(r104): [505..506]
 a120(r205): [507..508]
 a121(r103): [511..512]
 a122(r204): [513..514]
 a123(r203): [513..516]
 a124(r201): [517..518]
 a125(r202): [519..520]
 a126(r200): [525..526]
 a127(r198): [529..530]
 a128(r199): [531..532]
 a129(r102): [538..541]
 a130(r150): [547..549] [542..544]
 a131(r101): [565..571]
 a132(r100): [572..573]
 a133(r195): [578..579]
 a134(r194): [584..589]
 a135(r193): [586..591]
 a136(r192): [596..597]
 a137(r99): [606..607]
 a138(r191): [608..611]
 a139(r190): [614..615]
 a140(r189): [620..621]
 a141(r187): [624..625]
 a142(r188): [626..627]
 a143(r184): [633..634]
 a144(r183): [637..638]
 a145(r98): [637..640]
 a146(r182): [641..642]
 a147(r97): [648..654]
 a148(r96): [655..656]
 a149(r181): [661..662]
 a150(r180): [667..672]
 a151(r179): [669..674]
 a152(r178): [679..680]
 a153(r177): [689..690]
 a154(r176): [693..694]
 a155(r175): [699..700]
 a156(r174): [708..709]
 a157(r173): [718..719]
 a158(r95): [720..721]
 a159(r172): [722..723]
 a160(r94): [722..725]
 a161(r93): [730..739]
 a162(r90): [732..751]
 a163(r171): [740..743]
 a164(r92): [740..745]
 a165(r91): [746..747]
 a166(r170): [748..749]
 a167(r169): [752..753]
 a168(r168): [752..755]
 a169(r166): [756..757]
 a170(r167): [758..759]
 a171(r164): [762..763]
 a172(r165): [764..765]
 a173(r89): [771..774]
 a174(r149): [780..782] [775..777]
 a175(r161): [795..796]
 a176(r160): [801..810]
 a177(r159): [803..812]
 a178(r158): [815..816]
 a179(r157): [821..830]
 a180(r156): [823..832]
 a181(r155): [835..836]
 a182(r88 [0]): [839..858]
 a182(r88 [1]): [838..858]
 a183(r87): [841..842]
 a184(r153): [843..844]
Compressing live ranges: from 859 to 306 - 35%
Ranges after the compression:
 a0(r292): [0..1]
 a1(r291): [2..3]
 a2(r290): [4..5]
 a3(r148): [4..5]
 a4(r147): [6..7]
 a5(r289): [8..9]
 a6(r146): [8..9]
 a7(r145): [10..11]
 a8(r288): [10..11]
 a9(r144): [12..13]
 a10(r143): [14..15]
 a11(r287): [16..17]
 a12(r286): [18..19]
 a13(r285): [18..19]
 a14(r284): [20..21]
 a15(r142): [22..23]
 a16(r283): [24..25]
 a17(r141): [24..25]
 a18(r140): [26..27]
 a19(r282): [28..29]
 a20(r139): [30..31]
 a21(r281): [32..33]
 a22(r280): [32..33]
 a23(r278): [34..35]
 a24(r279): [36..37]
 a25(r277): [38..39]
 a26(r275): [40..41]
 a27(r276): [42..43]
 a28(r138): [44..45]
 a29(r137): [46..47]
 a30(r272): [48..49]
 a31(r271): [50..51]
 a32(r270): [50..51]
 a33(r269): [52..53]
 a34(r136): [54..55]
 a35(r268): [56..57]
 a36(r135): [56..57]
 a37(r134): [58..59]
 a38(r267): [60..61]
 a39(r133): [62..63]
 a40(r266): [64..65]
 a41(r265): [64..65]
 a42(r263): [66..67]
 a43(r264): [68..69]
 a44(r262): [70..71]
 a45(r260): [72..73]
 a46(r261): [74..75]
 a47(r256): [76..77]
 a48(r257): [78..79]
 a49(r253): [80..81]
 a50(r132): [80..81]
 a51(r131): [82..83]
 a52(r252): [84..85]
 a53(r130): [84..85]
 a54(r129): [86..87]
 a55(r251): [86..87]
 a56(r128): [88..89]
 a57(r127): [90..91]
 a58(r126): [90..91]
 a59(r125): [92..93]
 a60(r124): [94..95]
 a61(r123): [94..97]
 a62(r250): [96..97]
 a63(r249): [98..99]
 a64(r122): [100..101]
 a65(r121): [102..103]
 a66(r248): [104..105]
 a67(r247): [106..107]
 a68(r246): [106..107]
 a69(r245): [108..109]
 a70(r120): [110..111]
 a71(r244): [112..113]
 a72(r119): [112..113]
 a73(r118): [114..115]
 a74(r243): [116..117]
 a75(r117): [118..119]
 a76(r242): [120..121]
 a77(r241): [120..121]
 a78(r239): [122..123]
 a79(r240): [124..125]
 a80(r238): [126..127]
 a81(r236): [128..129]
 a82(r237): [130..131]
 a83(r116): [132..133]
 a84(r115): [134..135]
 a85(r233): [136..137]
 a86(r232): [138..139]
 a87(r231): [138..139]
 a88(r230): [140..141]
 a89(r114): [142..143]
 a90(r229): [144..145]
 a91(r113): [144..145]
 a92(r112): [146..147]
 a93(r228): [148..149]
 a94(r111): [150..151]
 a95(r227): [152..153]
 a96(r226): [152..153]
 a97(r224): [154..155]
 a98(r225): [156..157]
 a99(r223): [158..159]
 a100(r221): [160..161]
 a101(r222): [162..163]
 a102(r217): [164..165]
 a103(r218): [166..167]
 a104(r214): [168..169]
 a105(r213): [170..171]
 a106(r110): [172..173]
 a107(r109): [172..175]
 a108(r212): [174..175]
 a109(r211): [176..177]
 a110(r108): [178..179]
 a111(r107): [180..181]
 a112(r210): [182..183]
 a113(r209): [184..185]
 a114(r208): [184..185]
 a115(r207): [186..187]
 a116(r106): [188..189]
 a117(r206): [190..191]
 a118(r105): [190..191]
 a119(r104): [192..193]
 a120(r205): [194..195]
 a121(r103): [196..197]
 a122(r204): [198..199]
 a123(r203): [198..199]
 a124(r201): [200..201]
 a125(r202): [202..203]
 a126(r200): [204..205]
 a127(r198): [206..207]
 a128(r199): [208..209]
 a129(r102): [210..211]
 a130(r150): [212..215]
 a131(r101): [216..217]
 a132(r100): [218..219]
 a133(r195): [220..221]
 a134(r194): [222..223]
 a135(r193): [222..223]
 a136(r192): [224..225]
 a137(r99): [226..227]
 a138(r191): [228..229]
 a139(r190): [230..231]
 a140(r189): [232..233]
 a141(r187): [234..235]
 a142(r188): [236..237]
 a143(r184): [238..239]
 a144(r183): [240..241]
 a145(r98): [240..241]
 a146(r182): [242..243]
 a147(r97): [244..245]
 a148(r96): [246..247]
 a149(r181): [248..249]
 a150(r180): [250..251]
 a151(r179): [250..251]
 a152(r178): [252..253]
 a153(r177): [254..255]
 a154(r176): [256..257]
 a155(r175): [258..259]
 a156(r174): [260..261]
 a157(r173): [262..263]
 a158(r95): [264..265]
 a159(r172): [266..267]
 a160(r94): [266..267]
 a161(r93): [268..269]
 a162(r90): [268..275]
 a163(r171): [270..271]
 a164(r92): [270..271]
 a165(r91): [272..273]
 a166(r170): [274..275]
 a167(r169): [276..277]
 a168(r168): [276..277]
 a169(r166): [278..279]
 a170(r167): [280..281]
 a171(r164): [282..283]
 a172(r165): [284..285]
 a173(r89): [286..287]
 a174(r149): [288..291]
 a175(r161): [292..293]
 a176(r160): [294..295]
 a177(r159): [294..295]
 a178(r158): [296..297]
 a179(r157): [298..299]
 a180(r156): [298..299]
 a181(r155): [300..301]
 a182(r88 [0]): [302..305]
 a182(r88 [1]): [302..305]
 a183(r87): [302..303]
 a184(r153): [304..305]
  regions=1, blocks=41, points=306
    allocnos=185 (big 1), copies=0, conflicts=0, ranges=186
Disposition:
  183:r87  l0     0  182:r88  l0    39  173:r89  l0     0  162:r90  l0     4
  165:r91  l0     0  164:r92  l0     0  161:r93  l0     0  160:r94  l0     1
  158:r95  l0     0  148:r96  l0     0  147:r97  l0     0  145:r98  l0    21
  137:r99  l0     0  132:r100 l0     0  131:r101 l0     0  129:r102 l0     0
  121:r103 l0     0  119:r104 l0     0  118:r105 l0     0  116:r106 l0     0
  111:r107 l0     0  110:r108 l0     0  107:r109 l0    21  106:r110 l0    22
   94:r111 l0     0   92:r112 l0     0   91:r113 l0     0   89:r114 l0     0
   84:r115 l0     0   83:r116 l0     0   75:r117 l0     0   73:r118 l0     0
   72:r119 l0     0   70:r120 l0     0   65:r121 l0     0   64:r122 l0     0
   61:r123 l0    21   60:r124 l0    22   59:r125 l0    21   58:r126 l0    22
   57:r127 l0    21   56:r128 l0    21   54:r129 l0    22   53:r130 l0    21
   51:r131 l0    21   50:r132 l0     1   39:r133 l0     0   37:r134 l0     0
   36:r135 l0     0   34:r136 l0     0   29:r137 l0     0   28:r138 l0     0
   20:r139 l0     0   18:r140 l0     0   17:r141 l0     0   15:r142 l0     0
   10:r143 l0     0    9:r144 l0     0    7:r145 l0    22    6:r146 l0    21
    4:r147 l0    21    3:r148 l0     1  174:r149 l0     0  130:r150 l0     0
  184:r153 l0     0  181:r155 l0     0  180:r156 l0     4  179:r157 l0     0
  178:r158 l0     0  177:r159 l0     4  176:r160 l0     0  175:r161 l0     0
  171:r164 l0     0  172:r165 l0     0  169:r166 l0     0  170:r167 l0     0
  168:r168 l0     1  167:r169 l0     0  166:r170 l0     0  163:r171 l0     1
  159:r172 l0     0  157:r173 l0     0  156:r174 l0     0  155:r175 l0     0
  154:r176 l0     0  153:r177 l0     0  152:r178 l0     0  151:r179 l0     2
  150:r180 l0     0  149:r181 l0     0  146:r182 l0     0  144:r183 l0     0
  143:r184 l0     0  141:r187 l0     0  142:r188 l0     0  140:r189 l0     0
  139:r190 l0     0  138:r191 l0     0  136:r192 l0     0  135:r193 l0     2
  134:r194 l0     0  133:r195 l0     0  127:r198 l0     0  128:r199 l0     0
  126:r200 l0     0  124:r201 l0     0  125:r202 l0     0  123:r203 l0     1
  122:r204 l0     0  120:r205 l0     0  117:r206 l0     1  115:r207 l0     0
  114:r208 l0     2  113:r209 l0     0  112:r210 l0     0  109:r211 l0     0
  108:r212 l0     0  105:r213 l0     0  104:r214 l0     0  102:r217 l0     0
  103:r218 l0     0  100:r221 l0     0  101:r222 l0     0   99:r223 l0     0
   97:r224 l0     0   98:r225 l0     0   96:r226 l0     1   95:r227 l0     0
   93:r228 l0     0   90:r229 l0     1   88:r230 l0     0   87:r231 l0     2
   86:r232 l0     0   85:r233 l0     0   81:r236 l0     0   82:r237 l0     0
   80:r238 l0     0   78:r239 l0     0   79:r240 l0     0   77:r241 l0     1
   76:r242 l0     0   74:r243 l0     0   71:r244 l0     1   69:r245 l0     0
   68:r246 l0     2   67:r247 l0     0   66:r248 l0     0   63:r249 l0     0
   62:r250 l0     0   55:r251 l0    21   52:r252 l0    22   49:r253 l0     0
   47:r256 l0     0   48:r257 l0     0   45:r260 l0     0   46:r261 l0     0
   44:r262 l0     0   42:r263 l0     0   43:r264 l0     0   41:r265 l0     1
   40:r266 l0     0   38:r267 l0     0   35:r268 l0     1   33:r269 l0     0
   32:r270 l0     2   31:r271 l0     0   30:r272 l0     0   26:r275 l0     0
   27:r276 l0     0   25:r277 l0     0   23:r278 l0     0   24:r279 l0     0
   22:r280 l0     1   21:r281 l0     0   19:r282 l0     0   16:r283 l0     1
   14:r284 l0     0   13:r285 l0     2   12:r286 l0     0   11:r287 l0     0
    8:r288 l0    21    5:r289 l0    22    2:r290 l0     0    1:r291 l0     0
    0:r292 l0     0
+++Costs: overall -35, reg -35, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


pparse

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 37 [r8] 38 [r9]
;;  ref usage 	r0={25d,3u} r1={35d,11u} r2={28d,4u} r4={35d,11u} r5={49d,25u} r6={1d,40u} r7={1d,64u} r8={24d} r9={24d} r10={24d} r11={24d} r12={24d} r13={24d} r14={24d} r15={24d} r16={1d,39u} r17={125d,32u} r18={24d} r19={24d} r20={1d,214u,34e} r21={25d} r22={25d} r23={25d} r24={25d} r25={25d} r26={25d} r27={25d} r28={25d} r29={24d} r30={24d} r31={24d} r32={24d} r33={24d} r34={24d} r35={24d} r36={24d} r37={28d,4u} r38={25d,1u} r39={24d} r40={24d} r45={24d} r46={24d} r47={24d} r48={24d} r49={24d} r50={24d} r51={24d} r52={24d} r53={24d} r54={24d} r55={24d} r56={24d} r57={24d} r58={24d} r59={24d} r60={24d} r61={24d} r62={24d} r63={24d} r64={24d} r65={24d} r66={24d} r67={24d} r68={24d} r69={24d} r70={24d} r71={24d} r72={24d} r73={24d} r74={24d} r75={24d} r76={24d} r77={24d} r78={24d} r79={24d} r80={24d} r87={1d,1u} r88={2d,2u} r89={2d,2u} r90={1d,1u} r91={1d,1u} r92={1d,2u} r93={1d,1u} r94={1d,1u,1e} r95={1d,1u} r96={1d,1u} r97={1d,2u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,2u} r102={2d,2u} r103={1d,1u} r104={1d,1u} r105={1d,2u} r106={1d,1u} r107={1d,1u} r108={1d,2u} r109={1d,2u} r110={1d,2u} r111={1d,1u} r112={1d,1u} r113={1d,2u} r114={1d,1u} r115={1d,1u} r116={1d,2u} r117={1d,1u} r118={1d,1u} r119={1d,2u} r120={1d,1u} r121={1d,1u} r122={1d,2u} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,1u} r127={1d,1u} r128={1d,1u} r129={1d,1u,1e} r130={1d,1u} r131={1d,1u} r132={1d,1u} r133={1d,1u} r134={1d,1u} r135={1d,2u} r136={1d,1u} r137={1d,1u} r138={1d,2u} r139={1d,1u} r140={1d,1u} r141={1d,2u} r142={1d,1u} r143={1d,1u} r144={1d,2u} r145={1d,1u,1e} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={2d,1u} r150={2d,1u} r153={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r164={1d,1u} r165={1d,1u} r166={1d,1u} r167={1d,1u} r168={1d,1u,1e} r169={1d,1u} r170={1d,1u} r171={1d,1u} r172={1d,1u} r173={1d,1u} r174={1d,1u} r175={1d,1u} r176={1d,1u} r177={1d,1u} r178={1d,1u} r179={1d,1u} r180={1d,1u} r181={1d,1u} r182={1d,1u} r183={1d,1u} r184={1d,1u} r187={1d,1u} r188={1d,1u} r189={1d,1u} r190={1d,1u} r191={1d,1u} r192={1d,1u} r193={1d,1u} r194={1d,1u} r195={1d,1u} r198={1d,1u} r199={1d,1u} r200={1d,1u} r201={1d,1u} r202={1d,1u} r203={1d,1u,1e} r204={1d,1u} r205={1d,1u} r206={1d,1u} r207={1d,1u} r208={1d,1u} r209={1d,1u} r210={1d,1u} r211={1d,1u} r212={1d,1u} r213={1d,1u} r214={1d,1u} r217={1d,1u} r218={1d,1u} r221={1d,1u} r222={1d,1u} r223={1d,1u} r224={1d,1u} r225={1d,1u} r226={1d,1u,1e} r227={1d,1u} r228={1d,1u} r229={1d,1u} r230={1d,1u} r231={1d,1u} r232={1d,1u} r233={1d,1u} r236={1d,1u} r237={1d,1u} r238={1d,1u} r239={1d,1u} r240={1d,1u} r241={1d,1u,1e} r242={1d,1u} r243={1d,1u} r244={1d,1u} r245={1d,1u} r246={1d,1u} r247={1d,1u} r248={1d,1u} r249={1d,1u} r250={1d,1u} r251={1d,1u} r252={1d,1u} r253={1d,1u} r256={1d,1u} r257={1d,1u} r260={1d,1u} r261={1d,1u} r262={1d,1u} r263={1d,1u} r264={1d,1u} r265={1d,1u,1e} r266={1d,1u} r267={1d,1u} r268={1d,1u} r269={1d,1u} r270={1d,1u} r271={1d,1u} r272={1d,1u} r275={1d,1u} r276={1d,1u} r277={1d,1u} r278={1d,1u} r279={1d,1u} r280={1d,1u,1e} r281={1d,1u} r282={1d,1u} r283={1d,1u} r284={1d,1u} r285={1d,1u} r286={1d,1u} r287={1d,1u} r288={1d,1u} r289={1d,1u} r290={1d,1u} r291={1d,1u} r292={1d,1u} 
;;    total ref usage 2782{2088d,651u,43e} in 410{386 regular + 24 call} insns.
(note 1 0 9 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9] 88
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9] 88
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 153 155 156 157 158 159 160 161
(note 9 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 9 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -536 [0xfffffffffffffde8])) [10 line+0 S8 A64])
        (reg:DI 5 di [ line ])) "../src/io.f":284 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ line ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -544 [0xfffffffffffffde0])) [16 p1+0 S8 A64])
        (reg:DI 4 si [ p1 ])) "../src/io.f":284 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ p1 ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -552 [0xfffffffffffffdd8])) [16 p2+0 S8 A64])
        (reg:DI 1 dx [ p2 ])) "../src/io.f":284 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ p2 ])
        (nil)))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -560 [0xfffffffffffffdd0])) [11 np+0 S8 A64])
        (reg:DI 2 cx [ np ])) "../src/io.f":284 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [ np ])
        (nil)))
(insn 6 5 7 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -568 [0xfffffffffffffdc8])) [11 ierr+0 S8 A64])
        (reg:DI 37 r8 [ ierr ])) "../src/io.f":284 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 37 r8 [ ierr ])
        (nil)))
(insn 7 6 8 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -572 [0xfffffffffffffdc4])) [1 _line+0 S4 A32])
        (reg:SI 38 r9 [ _line ])) "../src/io.f":284 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 38 r9 [ _line ])
        (nil)))
(note 8 7 11 2 NOTE_INSN_FUNCTION_BEG)
(insn 11 8 12 2 (set (reg:SI 153)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -572 [0xfffffffffffffdc4])) [1 _line+0 S4 A32])) "../src/io.f":367 82 {*movsi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:DI 87 [ _1 ])
        (sign_extend:DI (reg:SI 153))) "../src/io.f":367 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 153)
        (nil)))
(insn 13 12 14 2 (set (subreg:DI (reg:TI 88 [ _2 ]) 0)
        (reg:DI 87 [ _1 ])) "../src/io.f":367 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 87 [ _1 ])
        (nil)))
(insn 14 13 18 2 (set (subreg:DI (reg:TI 88 [ _2 ]) 8)
        (const_int 0 [0])) "../src/io.f":367 81 {*movdi_internal}
     (expr_list:REG_UNUSED (reg:TI 88 [ _2 ])
        (nil)))
(insn 18 14 19 2 (set (reg:SI 155)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -572 [0xfffffffffffffdc4])) [1 _line+0 S4 A32])) "../src/io.f":296 82 {*movsi_internal}
     (nil))
(insn 19 18 20 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 n+0 S4 A32])
        (reg:SI 155)) "../src/io.f":296 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 155)
        (nil)))
(insn 20 19 21 2 (set (reg:DI 156)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -536 [0xfffffffffffffde8])) [10 line+0 S8 A64])) "../src/io.f":298 81 {*movdi_internal}
     (nil))
(insn 21 20 22 2 (set (reg:SI 157)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -572 [0xfffffffffffffdc4])) [1 _line+0 S4 A32])) "../src/io.f":298 82 {*movsi_internal}
     (nil))
(insn 22 21 23 2 (set (reg:SI 37 r8)
        (const_int 0 [0])) "../src/io.f":298 82 {*movsi_internal}
     (nil))
(insn 23 22 24 2 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*lC3") [flags 0x2]  <var_decl 0x143b72360 *lC3>)) "../src/io.f":298 81 {*movdi_internal}
     (nil))
(insn 24 23 25 2 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) "../src/io.f":298 82 {*movsi_internal}
     (nil))
(insn 25 24 26 2 (set (reg:DI 4 si)
        (reg:DI 156)) "../src/io.f":298 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 156)
        (nil)))
(insn 26 25 27 2 (set (reg:SI 5 di)
        (reg:SI 157)) "../src/io.f":298 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 157)
        (nil)))
(call_insn/i 27 26 28 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_gfortran_string_index") [flags 0x41]  <function_decl 0x1439c4a00 _gfortran_string_index>) [0 _gfortran_string_index S1 A8])
            (const_int 0 [0]))) "../src/io.f":298 665 {*call_value}
     (expr_list:REG_DEAD (reg:SI 37 r8)
        (expr_list:REG_DEAD (reg:SI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:SI 1 dx)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (nil)))))))
(insn 28 27 29 2 (set (reg:SI 158)
        (reg:SI 0 ax)) "../src/io.f":298 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 29 28 30 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 kcomma1+0 S4 A32])
        (reg:SI 158)) "../src/io.f":298 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 158)
        (nil)))
(insn 30 29 31 2 (set (reg:DI 159)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -536 [0xfffffffffffffde8])) [10 line+0 S8 A64])) "../src/io.f":299 81 {*movdi_internal}
     (nil))
(insn 31 30 32 2 (set (reg:SI 160)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -572 [0xfffffffffffffdc4])) [1 _line+0 S4 A32])) "../src/io.f":299 82 {*movsi_internal}
     (nil))
(insn 32 31 33 2 (set (reg:SI 37 r8)
        (const_int 0 [0])) "../src/io.f":299 82 {*movsi_internal}
     (nil))
(insn 33 32 34 2 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*lC7") [flags 0x2]  <var_decl 0x143bb8ab0 *lC7>)) "../src/io.f":299 81 {*movdi_internal}
     (nil))
(insn 34 33 35 2 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) "../src/io.f":299 82 {*movsi_internal}
     (nil))
(insn 35 34 36 2 (set (reg:DI 4 si)
        (reg:DI 159)) "../src/io.f":299 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 159)
        (nil)))
(insn 36 35 37 2 (set (reg:SI 5 di)
        (reg:SI 160)) "../src/io.f":299 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 160)
        (nil)))
(call_insn/i 37 36 38 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_gfortran_string_index") [flags 0x41]  <function_decl 0x1439c4a00 _gfortran_string_index>) [0 _gfortran_string_index S1 A8])
            (const_int 0 [0]))) "../src/io.f":299 665 {*call_value}
     (expr_list:REG_DEAD (reg:SI 37 r8)
        (expr_list:REG_DEAD (reg:SI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:SI 1 dx)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (nil)))))))
(insn 38 37 39 2 (set (reg:SI 161)
        (reg:SI 0 ax)) "../src/io.f":299 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 39 38 40 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [1 kslash+0 S4 A32])
        (reg:SI 161)) "../src/io.f":299 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 161)
        (nil)))
(insn 40 39 41 2 (set (reg:CCNO 17 flags)
        (compare:CCNO (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [1 kcomma1+0 S4 A32])
            (const_int 0 [0]))) "../src/io.f":300 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 41 40 42 2 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 49)
            (pc))) "../src/io.f":300 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (nil))
 -> 49)
;;  succ:       3 (FALLTHRU)
;;              5
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 42 41 43 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 43 42 44 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [1 kslash+0 S4 A32])
            (const_int 0 [0]))) "../src/io.f":300 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 44 43 45 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 49)
            (pc))) "../src/io.f":300 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 49)
;;  succ:       4 (FALLTHRU)
;;              5
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 149
(note 45 44 46 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 46 45 601 4 (set (reg:QI 149 [ iftmp.20_64 ])
        (const_int 1 [0x1])) "../src/io.f":300 84 {*movqi_internal}
     (nil))
(jump_insn 601 46 602 4 (set (pc)
        (label_ref 52)) "../src/io.f":300 649 {jump}
     (nil)
 -> 52)
;;  succ:       6 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 149

(barrier 602 601 49)
;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       2
;;              3
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 149
(code_label 49 602 50 5 75 (nil) [2 uses])
(note 50 49 51 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 51 50 52 5 (set (reg:QI 149 [ iftmp.20_64 ])
        (const_int 0 [0])) "../src/io.f":300 84 {*movqi_internal}
     (nil))
;;  succ:       6 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 149

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (RTL)
;;  pred:       5 (FALLTHRU)
;;              4 [100.0%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 149
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 149
;; lr  def 	 17 [flags] 89
(code_label 52 51 53 6 76 (nil) [1 uses])
(note 53 52 54 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 54 53 55 6 (set (reg:SI 89 [ iftmp.21_3 ])
        (zero_extend:SI (reg:QI 149 [ iftmp.20_64 ]))) "../src/io.f":300 136 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 149 [ iftmp.20_64 ])
        (nil)))
(insn 55 54 56 6 (parallel [
            (set (reg:SI 89 [ iftmp.21_3 ])
                (and:SI (reg:SI 89 [ iftmp.21_3 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":300 391 {*andsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 56 55 57 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 89 [ iftmp.21_3 ])
            (const_int 0 [0]))) "../src/io.f":300 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 89 [ iftmp.21_3 ])
        (nil)))
(jump_insn 57 56 58 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 89)
            (pc))) "../src/io.f":300 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 89)
;;  succ:       7 (FALLTHRU)
;;              8
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (RTL)
;;  pred:       6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 90 91 92 93 94 95 164 165 166 167 168 169 170 171 172 173
(note 58 57 62 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 62 58 63 7 (set (reg:SI 165)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 kcomma1+0 S4 A32])) "../src/io.f":301 82 {*movsi_internal}
     (nil))
(insn 63 62 64 7 (parallel [
            (set (reg:SI 164)
                (plus:SI (reg:SI 165)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":301 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 165)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -12 [0xfffffffffffffff4])) [1 kcomma1+0 S4 A32])
                    (const_int 1 [0x1]))
                (nil)))))
(insn 64 63 65 7 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [1 k+0 S4 A32])
        (reg:SI 164)) "../src/io.f":301 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 164)
        (nil)))
(insn 65 64 66 7 (set (reg:SI 167)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [1 k+0 S4 A32])) "../src/io.f":302 82 {*movsi_internal}
     (nil))
(insn 66 65 67 7 (parallel [
            (set (reg:SI 166)
                (plus:SI (reg:SI 167)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":302 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 167)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -20 [0xffffffffffffffec])) [1 k+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff]))
                (nil)))))
(insn 67 66 68 7 (set (reg:DI 168)
        (sign_extend:DI (reg:SI 166))) "../src/io.f":302 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 166)
        (nil)))
(insn 68 67 69 7 (set (reg/f:DI 169)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -536 [0xfffffffffffffde8])) [10 line+0 S8 A64])) "../src/io.f":302 81 {*movdi_internal}
     (nil))
(insn 69 68 70 7 (parallel [
            (set (reg/f:DI 90 [ _4 ])
                (plus:DI (reg:DI 168)
                    (reg/f:DI 169)))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":302 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 169)
        (expr_list:REG_DEAD (reg:DI 168)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -536 [0xfffffffffffffde8])) [10 line+0 S8 A64])
                        (reg:DI 168))
                    (nil))))))
(insn 70 69 71 7 (set (reg:SI 170)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 n+0 S4 A32])) "../src/io.f":302 82 {*movsi_internal}
     (nil))
(insn 71 70 72 7 (parallel [
            (set (reg:SI 91 [ _5 ])
                (minus:SI (reg:SI 170)
                    (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -20 [0xffffffffffffffec])) [1 k+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":302 273 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 170)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [1 n+0 S4 A32])
                    (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -20 [0xffffffffffffffec])) [1 k+0 S4 A32]))
                (nil)))))
(insn 72 71 74 7 (parallel [
            (set (reg:SI 92 [ _6 ])
                (plus:SI (reg:SI 91 [ _5 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":302 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 91 [ _5 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 74 72 73 7 (set (reg:SI 171)
        (const_int 0 [0])) "../src/io.f":302 82 {*movsi_internal}
     (nil))
(insn 73 74 75 7 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 92 [ _6 ])
            (const_int 0 [0]))) "../src/io.f":302 3 {*cmpsi_ccno_1}
     (nil))
(insn 75 73 76 7 (set (reg:SI 93 [ _7 ])
        (if_then_else:SI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:SI 92 [ _6 ])
            (reg:SI 171))) "../src/io.f":302 966 {*movsicc_noc}
     (expr_list:REG_DEAD (reg:SI 171)
        (expr_list:REG_DEAD (reg:SI 92 [ _6 ])
            (expr_list:REG_DEAD (reg:CCGOC 17 flags)
                (nil)))))
(insn 76 75 77 7 (set (reg:SI 37 r8)
        (const_int 0 [0])) "../src/io.f":302 82 {*movsi_internal}
     (nil))
(insn 77 76 78 7 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*lC3") [flags 0x2]  <var_decl 0x143b72360 *lC3>)) "../src/io.f":302 81 {*movdi_internal}
     (nil))
(insn 78 77 79 7 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) "../src/io.f":302 82 {*movsi_internal}
     (nil))
(insn 79 78 80 7 (set (reg:DI 4 si)
        (reg/f:DI 90 [ _4 ])) "../src/io.f":302 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 90 [ _4 ])
        (nil)))
(insn 80 79 81 7 (set (reg:SI 5 di)
        (reg:SI 93 [ _7 ])) "../src/io.f":302 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 93 [ _7 ])
        (nil)))
(call_insn/i 81 80 82 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_gfortran_string_index") [flags 0x41]  <function_decl 0x1439c4a00 _gfortran_string_index>) [0 _gfortran_string_index S1 A8])
            (const_int 0 [0]))) "../src/io.f":302 665 {*call_value}
     (expr_list:REG_DEAD (reg:SI 37 r8)
        (expr_list:REG_DEAD (reg:SI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:SI 1 dx)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (nil)))))))
(insn 82 81 83 7 (set (reg:SI 94 [ _8 ])
        (reg:SI 0 ax)) "../src/io.f":302 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 83 82 84 7 (set (reg:SI 172)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [1 k+0 S4 A32])) "../src/io.f":302 82 {*movsi_internal}
     (nil))
(insn 84 83 85 7 (parallel [
            (set (reg:SI 95 [ _9 ])
                (plus:SI (reg:SI 94 [ _8 ])
                    (reg:SI 172)))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":302 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 172)
        (expr_list:REG_DEAD (reg:SI 94 [ _8 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:SI (reg:SI 94 [ _8 ])
                        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                                (const_int -20 [0xffffffffffffffec])) [1 k+0 S4 A32]))
                    (nil))))))
(insn 85 84 86 7 (parallel [
            (set (reg:SI 173)
                (plus:SI (reg:SI 95 [ _9 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":302 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 95 [ _9 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 86 85 603 7 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 kcomma2+0 S4 A32])
        (reg:SI 173)) "../src/io.f":302 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 173)
        (nil)))
(jump_insn 603 86 604 7 (set (pc)
        (label_ref 92)) 649 {jump}
     (nil)
 -> 92)
;;  succ:       9 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 604 603 89)
;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (RTL)
;;  pred:       6
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 89 604 90 8 77 (nil) [1 uses])
(note 90 89 91 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 91 90 92 8 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 kcomma2+0 S4 A32])
        (const_int 0 [0])) "../src/io.f":304 82 {*movsi_internal}
     (nil))
;;  succ:       9 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (RTL)
;;  pred:       8 (FALLTHRU)
;;              7 [100.0%] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 174
(code_label 92 91 93 9 78 (nil) [1 uses])
(note 93 92 94 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 94 93 95 9 (set (reg/f:DI 174)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -568 [0xfffffffffffffdc8])) [11 ierr+0 S8 A64])) "../src/io.f":308 81 {*movdi_internal}
     (nil))
(insn 95 94 96 9 (set (mem:SI (reg/f:DI 174) [1 *ierr_83(D)+0 S4 A32])
        (const_int 0 [0])) "../src/io.f":308 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 174)
        (nil)))
(insn 96 95 97 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [1 kcomma1+0 S4 A32])
            (const_int 0 [0]))) "../src/io.f":310 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 97 96 98 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 147)
            (pc))) "../src/io.f":310 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 147)
;;  succ:       10 (FALLTHRU)
;;              13
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (RTL)
;;  pred:       9 (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 96 97 175 176 177 178 179 180 181
(note 98 97 99 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 99 98 100 10 (set (reg/f:DI 175)
        (symbol_ref/f:DI ("*lC4") [flags 0x2]  <var_decl 0x143b723f0 *lC4>)) "../src/io.f":312 81 {*movdi_internal}
     (nil))
(insn 100 99 101 10 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -520 [0xfffffffffffffdf8])) [5 dt_parm.11.common.filename+0 S8 A64])
        (reg/f:DI 175)) "../src/io.f":312 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 175)
        (nil)))
(insn 101 100 102 10 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -512 [0xfffffffffffffe00])) [1 dt_parm.11.common.line+0 S4 A128])
        (const_int 312 [0x138])) "../src/io.f":312 82 {*movsi_internal}
     (nil))
(insn 102 101 103 10 (set (reg/f:DI 176)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -536 [0xfffffffffffffde8])) [10 line+0 S8 A64])) "../src/io.f":312 81 {*movdi_internal}
     (nil))
(insn 103 102 104 10 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -432 [0xfffffffffffffe50])) [5 dt_parm.11.internal_unit+0 S8 A128])
        (reg/f:DI 176)) "../src/io.f":312 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 176)
        (nil)))
(insn 104 103 105 10 (set (reg:SI 177)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -572 [0xfffffffffffffdc4])) [1 _line+0 S4 A32])) "../src/io.f":312 82 {*movsi_internal}
     (nil))
(insn 105 104 106 10 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -424 [0xfffffffffffffe58])) [1 dt_parm.11.internal_unit_len+0 S4 A64])
        (reg:SI 177)) "../src/io.f":312 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 177)
        (nil)))
(insn 106 105 107 10 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -464 [0xfffffffffffffe30])) [5 dt_parm.11.internal_unit_desc+0 S8 A128])
        (const_int 0 [0])) "../src/io.f":312 81 {*movdi_internal}
     (nil))
(insn 107 106 108 10 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -524 [0xfffffffffffffdf4])) [1 dt_parm.11.common.unit+0 S4 A32])
        (const_int -1 [0xffffffffffffffff])) "../src/io.f":312 82 {*movsi_internal}
     (nil))
(insn 108 107 109 10 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -528 [0xfffffffffffffdf0])) [1 dt_parm.11.common.flags+0 S4 A128])
        (const_int 16524 [0x408c])) "../src/io.f":312 82 {*movsi_internal}
     (nil))
(insn 109 108 110 10 (parallel [
            (set (reg:DI 178)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -528 [0xfffffffffffffdf0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":312 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 110 109 111 10 (set (reg:DI 5 di)
        (reg:DI 178)) "../src/io.f":312 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 178)
        (nil)))
(call_insn 111 110 112 10 (call (mem:QI (symbol_ref:DI ("_gfortran_st_read") [flags 0x41]  <function_decl 0x1439e0700 _gfortran_st_read>) [0 _gfortran_st_read S1 A8])
        (const_int 0 [0])) "../src/io.f":312 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 112 111 113 10 (set (reg:DI 179)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -544 [0xfffffffffffffde0])) [16 p1+0 S8 A64])) "../src/io.f":312 81 {*movdi_internal}
     (nil))
(insn 113 112 114 10 (parallel [
            (set (reg:DI 180)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -528 [0xfffffffffffffdf0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":312 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 114 113 115 10 (set (reg:SI 1 dx)
        (const_int 4 [0x4])) "../src/io.f":312 82 {*movsi_internal}
     (nil))
(insn 115 114 116 10 (set (reg:DI 4 si)
        (reg:DI 179)) "../src/io.f":312 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 179)
        (nil)))
(insn 116 115 117 10 (set (reg:DI 5 di)
        (reg:DI 180)) "../src/io.f":312 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 180)
        (nil)))
(call_insn 117 116 118 10 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_real") [flags 0x41]  <function_decl 0x1439d4c00 _gfortran_transfer_real>) [0 _gfortran_transfer_real S1 A8])
        (const_int 0 [0])) "../src/io.f":312 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 118 117 119 10 (parallel [
            (set (reg:DI 181)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -528 [0xfffffffffffffdf0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":312 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 119 118 120 10 (set (reg:DI 5 di)
        (reg:DI 181)) "../src/io.f":312 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 181)
        (nil)))
(call_insn 120 119 121 10 (call (mem:QI (symbol_ref:DI ("_gfortran_st_read_done") [flags 0x41]  <function_decl 0x1439e4200 _gfortran_st_read_done>) [0 _gfortran_st_read_done S1 A8])
        (const_int 0 [0])) "../src/io.f":312 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 121 120 122 10 (set (reg:SI 96 [ _10 ])
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -528 [0xfffffffffffffdf0])) [1 dt_parm.11.common.flags+0 S4 A128])) "../src/io.f":312 82 {*movsi_internal}
     (nil))
(insn 122 121 123 10 (parallel [
            (set (reg:SI 97 [ _11 ])
                (and:SI (reg:SI 96 [ _10 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":312 391 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 96 [ _10 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 123 122 124 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 97 [ _11 ])
            (const_int 1 [0x1]))) "../src/io.f":312 7 {*cmpsi_1}
     (nil))
(jump_insn 124 123 582 10 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 566)
            (pc))) "../src/io.f":312 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 566)
;;  succ:       38
;;              11 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 97

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (RTL)
;;  pred:       10 (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 97
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 97
;; lr  def 	 17 [flags]
(note 582 124 125 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 125 582 126 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 97 [ _11 ])
            (const_int 2 [0x2]))) "../src/io.f":312 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 97 [ _11 ])
        (nil)))
(jump_insn 126 125 583 11 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 572)
            (pc))) "../src/io.f":312 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 572)
;;  succ:       39
;;              12 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (RTL)
;;  pred:       11 (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 98 182 183 184
(note 583 126 129 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(note 129 583 133 12 ("L.40") NOTE_INSN_DELETED_LABEL 81)
(note 133 129 139 12 ("L.41") NOTE_INSN_DELETED_LABEL 82)
(insn 139 133 140 12 (set (reg/f:DI 182)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -544 [0xfffffffffffffde0])) [16 p1+0 S8 A64])) "../src/io.f":313 81 {*movdi_internal}
     (nil))
(insn 140 139 141 12 (set (reg:SF 98 [ _12 ])
        (mem:SF (reg/f:DI 182) [15 *p1_94(D)+0 S4 A32])) "../src/io.f":313 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 182)
        (nil)))
(insn 141 140 142 12 (set (reg/f:DI 183)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -552 [0xfffffffffffffdd8])) [16 p2+0 S8 A64])) "../src/io.f":313 81 {*movdi_internal}
     (nil))
(insn 142 141 143 12 (set (mem:SF (reg/f:DI 183) [15 *p2_112(D)+0 S4 A32])
        (reg:SF 98 [ _12 ])) "../src/io.f":313 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 183)
        (expr_list:REG_DEAD (reg:SF 98 [ _12 ])
            (nil))))
(insn 143 142 144 12 (set (reg/f:DI 184)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -560 [0xfffffffffffffdd0])) [11 np+0 S8 A64])) "../src/io.f":314 81 {*movdi_internal}
     (nil))
(insn 144 143 605 12 (set (mem:SI (reg/f:DI 184) [1 *np_132(D)+0 S4 A32])
        (const_int 1 [0x1])) "../src/io.f":314 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 184)
        (nil)))
(jump_insn 605 144 606 12 (set (pc)
        (label_ref 580)) "../src/io.f":315 649 {jump}
     (nil)
 -> 580)
;;  succ:       40 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 606 605 147)
;; basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 14, flags: (RTL)
;;  pred:       9
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 99 100 101 187 188 189 190 191 192 193 194 195
(code_label 147 606 148 13 79 (nil) [1 uses])
(note 148 147 152 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 152 148 153 13 (set (reg:SI 188)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 kcomma1+0 S4 A32])) "../src/io.f":319 82 {*movsi_internal}
     (nil))
(insn 153 152 154 13 (parallel [
            (set (reg:SI 187)
                (plus:SI (reg:SI 188)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":319 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 188)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -12 [0xfffffffffffffff4])) [1 kcomma1+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff]))
                (nil)))))
(insn 154 153 155 13 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [1 k+0 S4 A32])
        (reg:SI 187)) "../src/io.f":319 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 187)
        (nil)))
(insn 155 154 156 13 (set (reg/f:DI 189)
        (symbol_ref/f:DI ("*lC4") [flags 0x2]  <var_decl 0x143b723f0 *lC4>)) "../src/io.f":320 81 {*movdi_internal}
     (nil))
(insn 156 155 157 13 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -520 [0xfffffffffffffdf8])) [5 dt_parm.12.common.filename+0 S8 A64])
        (reg/f:DI 189)) "../src/io.f":320 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 189)
        (nil)))
(insn 157 156 158 13 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -512 [0xfffffffffffffe00])) [1 dt_parm.12.common.line+0 S4 A128])
        (const_int 320 [0x140])) "../src/io.f":320 82 {*movsi_internal}
     (nil))
(insn 158 157 159 13 (set (reg/f:DI 190)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -536 [0xfffffffffffffde8])) [10 line+0 S8 A64])) "../src/io.f":320 81 {*movdi_internal}
     (nil))
(insn 159 158 161 13 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -432 [0xfffffffffffffe50])) [5 dt_parm.12.internal_unit+0 S8 A128])
        (reg/f:DI 190)) "../src/io.f":320 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 190)
        (nil)))
(insn 161 159 160 13 (set (reg:SI 191)
        (const_int 0 [0])) "../src/io.f":320 82 {*movsi_internal}
     (nil))
(insn 160 161 162 13 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -20 [0xffffffffffffffec])) [1 k+0 S4 A32])
            (const_int 0 [0]))) "../src/io.f":320 3 {*cmpsi_ccno_1}
     (nil))
(insn 162 160 163 13 (set (reg:SI 99 [ _13 ])
        (if_then_else:SI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -20 [0xffffffffffffffec])) [1 k+0 S4 A32])
            (reg:SI 191))) "../src/io.f":320 966 {*movsicc_noc}
     (expr_list:REG_DEAD (reg:SI 191)
        (expr_list:REG_DEAD (reg:CCGOC 17 flags)
            (nil))))
(insn 163 162 164 13 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -424 [0xfffffffffffffe58])) [1 dt_parm.12.internal_unit_len+0 S4 A64])
        (reg:SI 99 [ _13 ])) "../src/io.f":320 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 99 [ _13 ])
        (nil)))
(insn 164 163 165 13 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -464 [0xfffffffffffffe30])) [5 dt_parm.12.internal_unit_desc+0 S8 A128])
        (const_int 0 [0])) "../src/io.f":320 81 {*movdi_internal}
     (nil))
(insn 165 164 166 13 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -524 [0xfffffffffffffdf4])) [1 dt_parm.12.common.unit+0 S4 A32])
        (const_int -1 [0xffffffffffffffff])) "../src/io.f":320 82 {*movsi_internal}
     (nil))
(insn 166 165 167 13 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -528 [0xfffffffffffffdf0])) [1 dt_parm.12.common.flags+0 S4 A128])
        (const_int 16524 [0x408c])) "../src/io.f":320 82 {*movsi_internal}
     (nil))
(insn 167 166 168 13 (parallel [
            (set (reg:DI 192)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -528 [0xfffffffffffffdf0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":320 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 168 167 169 13 (set (reg:DI 5 di)
        (reg:DI 192)) "../src/io.f":320 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 192)
        (nil)))
(call_insn 169 168 170 13 (call (mem:QI (symbol_ref:DI ("_gfortran_st_read") [flags 0x41]  <function_decl 0x1439e0700 _gfortran_st_read>) [0 _gfortran_st_read S1 A8])
        (const_int 0 [0])) "../src/io.f":320 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 170 169 171 13 (set (reg:DI 193)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -544 [0xfffffffffffffde0])) [16 p1+0 S8 A64])) "../src/io.f":320 81 {*movdi_internal}
     (nil))
(insn 171 170 172 13 (parallel [
            (set (reg:DI 194)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -528 [0xfffffffffffffdf0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":320 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 172 171 173 13 (set (reg:SI 1 dx)
        (const_int 4 [0x4])) "../src/io.f":320 82 {*movsi_internal}
     (nil))
(insn 173 172 174 13 (set (reg:DI 4 si)
        (reg:DI 193)) "../src/io.f":320 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 193)
        (nil)))
(insn 174 173 175 13 (set (reg:DI 5 di)
        (reg:DI 194)) "../src/io.f":320 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 194)
        (nil)))
(call_insn 175 174 176 13 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_real") [flags 0x41]  <function_decl 0x1439d4c00 _gfortran_transfer_real>) [0 _gfortran_transfer_real S1 A8])
        (const_int 0 [0])) "../src/io.f":320 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 176 175 177 13 (parallel [
            (set (reg:DI 195)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -528 [0xfffffffffffffdf0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":320 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 177 176 178 13 (set (reg:DI 5 di)
        (reg:DI 195)) "../src/io.f":320 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 195)
        (nil)))
(call_insn 178 177 179 13 (call (mem:QI (symbol_ref:DI ("_gfortran_st_read_done") [flags 0x41]  <function_decl 0x1439e4200 _gfortran_st_read_done>) [0 _gfortran_st_read_done S1 A8])
        (const_int 0 [0])) "../src/io.f":320 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 179 178 180 13 (set (reg:SI 100 [ _14 ])
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -528 [0xfffffffffffffdf0])) [1 dt_parm.12.common.flags+0 S4 A128])) "../src/io.f":320 82 {*movsi_internal}
     (nil))
(insn 180 179 181 13 (parallel [
            (set (reg:SI 101 [ _15 ])
                (and:SI (reg:SI 100 [ _14 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":320 391 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 100 [ _14 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 181 180 182 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 101 [ _15 ])
            (const_int 1 [0x1]))) "../src/io.f":320 7 {*cmpsi_1}
     (nil))
(jump_insn 182 181 584 13 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 566)
            (pc))) "../src/io.f":320 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 566)
;;  succ:       38
;;              14 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101

;; basic block 14, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 13, next block 15, flags: (RTL)
;;  pred:       13 (FALLTHRU)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101
;; lr  def 	 17 [flags]
(note 584 182 183 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 183 584 184 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 101 [ _15 ])
            (const_int 2 [0x2]))) "../src/io.f":320 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 101 [ _15 ])
        (nil)))
(jump_insn 184 183 585 14 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 572)
            (pc))) "../src/io.f":320 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 572)
;;  succ:       39
;;              15 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 15, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 14, next block 16, flags: (RTL)
;;  pred:       14 (FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 585 184 187 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(note 187 585 191 15 ("L.42") NOTE_INSN_DELETED_LABEL 87)
(note 191 187 197 15 ("L.43") NOTE_INSN_DELETED_LABEL 88)
(insn 197 191 198 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [1 kcomma2+0 S4 A32])
            (const_int 0 [0]))) "../src/io.f":322 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 198 197 199 15 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 206)
            (pc))) "../src/io.f":322 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 206)
;;  succ:       16 (FALLTHRU)
;;              18
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 16, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 15, next block 17, flags: (RTL)
;;  pred:       15 (FALLTHRU)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 199 198 200 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 200 199 201 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [1 kslash+0 S4 A32])
            (const_int 0 [0]))) "../src/io.f":322 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 201 200 202 16 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 206)
            (pc))) "../src/io.f":322 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 206)
;;  succ:       17 (FALLTHRU)
;;              18
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 17, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 16, next block 18, flags: (RTL)
;;  pred:       16 (FALLTHRU)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 150
(note 202 201 203 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 203 202 607 17 (set (reg:QI 150 [ iftmp.22_65 ])
        (const_int 1 [0x1])) "../src/io.f":322 84 {*movqi_internal}
     (nil))
(jump_insn 607 203 608 17 (set (pc)
        (label_ref 209)) "../src/io.f":322 649 {jump}
     (nil)
 -> 209)
;;  succ:       19 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 150

(barrier 608 607 206)
;; basic block 18, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 17, next block 19, flags: (RTL)
;;  pred:       15
;;              16
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 150
(code_label 206 608 207 18 89 (nil) [2 uses])
(note 207 206 208 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 208 207 209 18 (set (reg:QI 150 [ iftmp.22_65 ])
        (const_int 0 [0])) "../src/io.f":322 84 {*movqi_internal}
     (nil))
;;  succ:       19 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 150

;; basic block 19, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 18, next block 20, flags: (RTL)
;;  pred:       18 (FALLTHRU)
;;              17 [100.0%] 
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 150
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 150
;; lr  def 	 17 [flags] 102
(code_label 209 208 210 19 90 (nil) [1 uses])
(note 210 209 211 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 211 210 212 19 (set (reg:SI 102 [ iftmp.23_16 ])
        (zero_extend:SI (reg:QI 150 [ iftmp.22_65 ]))) "../src/io.f":322 136 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 150 [ iftmp.22_65 ])
        (nil)))
(insn 212 211 213 19 (parallel [
            (set (reg:SI 102 [ iftmp.23_16 ])
                (and:SI (reg:SI 102 [ iftmp.23_16 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":322 391 {*andsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 213 212 214 19 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 102 [ iftmp.23_16 ])
            (const_int 0 [0]))) "../src/io.f":322 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 102 [ iftmp.23_16 ])
        (nil)))
(jump_insn 214 213 215 19 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 295)
            (pc))) "../src/io.f":322 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 295)
;;  succ:       20 (FALLTHRU)
;;              26
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 20, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 19, next block 21, flags: (RTL)
;;  pred:       19 (FALLTHRU)
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 103 104 105 106 107 108 198 199 200 201 202 203 204 205 206 207 208 209 210
(note 215 214 219 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 219 215 220 20 (set (reg:SI 199)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 kcomma1+0 S4 A32])) "../src/io.f":324 82 {*movsi_internal}
     (nil))
(insn 220 219 221 20 (parallel [
            (set (reg:SI 198)
                (plus:SI (reg:SI 199)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":324 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 199)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -12 [0xfffffffffffffff4])) [1 kcomma1+0 S4 A32])
                    (const_int 1 [0x1]))
                (nil)))))
(insn 221 220 222 20 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [1 k+0 S4 A32])
        (reg:SI 198)) "../src/io.f":324 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 198)
        (nil)))
(insn 222 221 223 20 (set (reg/f:DI 200)
        (symbol_ref/f:DI ("*lC4") [flags 0x2]  <var_decl 0x143b723f0 *lC4>)) "../src/io.f":325 81 {*movdi_internal}
     (nil))
(insn 223 222 224 20 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -520 [0xfffffffffffffdf8])) [5 dt_parm.13.common.filename+0 S8 A64])
        (reg/f:DI 200)) "../src/io.f":325 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 200)
        (nil)))
(insn 224 223 225 20 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -512 [0xfffffffffffffe00])) [1 dt_parm.13.common.line+0 S4 A128])
        (const_int 325 [0x145])) "../src/io.f":325 82 {*movsi_internal}
     (nil))
(insn 225 224 226 20 (set (reg:SI 202)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [1 k+0 S4 A32])) "../src/io.f":325 82 {*movsi_internal}
     (nil))
(insn 226 225 227 20 (parallel [
            (set (reg:SI 201)
                (plus:SI (reg:SI 202)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":325 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 202)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -20 [0xffffffffffffffec])) [1 k+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff]))
                (nil)))))
(insn 227 226 228 20 (set (reg:DI 203)
        (sign_extend:DI (reg:SI 201))) "../src/io.f":325 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 201)
        (nil)))
(insn 228 227 229 20 (set (reg/f:DI 204)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -536 [0xfffffffffffffde8])) [10 line+0 S8 A64])) "../src/io.f":325 81 {*movdi_internal}
     (nil))
(insn 229 228 230 20 (parallel [
            (set (reg/f:DI 103 [ _17 ])
                (plus:DI (reg:DI 203)
                    (reg/f:DI 204)))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":325 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 204)
        (expr_list:REG_DEAD (reg:DI 203)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -536 [0xfffffffffffffde8])) [10 line+0 S8 A64])
                        (reg:DI 203))
                    (nil))))))
(insn 230 229 231 20 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -432 [0xfffffffffffffe50])) [5 dt_parm.13.internal_unit+0 S8 A128])
        (reg/f:DI 103 [ _17 ])) "../src/io.f":325 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 103 [ _17 ])
        (nil)))
(insn 231 230 232 20 (set (reg:SI 205)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 n+0 S4 A32])) "../src/io.f":325 82 {*movsi_internal}
     (nil))
(insn 232 231 233 20 (parallel [
            (set (reg:SI 104 [ _18 ])
                (minus:SI (reg:SI 205)
                    (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -20 [0xffffffffffffffec])) [1 k+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":325 273 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 205)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [1 n+0 S4 A32])
                    (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -20 [0xffffffffffffffec])) [1 k+0 S4 A32]))
                (nil)))))
(insn 233 232 235 20 (parallel [
            (set (reg:SI 105 [ _19 ])
                (plus:SI (reg:SI 104 [ _18 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":325 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 104 [ _18 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 235 233 234 20 (set (reg:SI 206)
        (const_int 0 [0])) "../src/io.f":325 82 {*movsi_internal}
     (nil))
(insn 234 235 236 20 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 105 [ _19 ])
            (const_int 0 [0]))) "../src/io.f":325 3 {*cmpsi_ccno_1}
     (nil))
(insn 236 234 237 20 (set (reg:SI 106 [ _20 ])
        (if_then_else:SI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:SI 105 [ _19 ])
            (reg:SI 206))) "../src/io.f":325 966 {*movsicc_noc}
     (expr_list:REG_DEAD (reg:SI 206)
        (expr_list:REG_DEAD (reg:SI 105 [ _19 ])
            (expr_list:REG_DEAD (reg:CCGOC 17 flags)
                (nil)))))
(insn 237 236 238 20 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -424 [0xfffffffffffffe58])) [1 dt_parm.13.internal_unit_len+0 S4 A64])
        (reg:SI 106 [ _20 ])) "../src/io.f":325 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 106 [ _20 ])
        (nil)))
(insn 238 237 239 20 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -464 [0xfffffffffffffe30])) [5 dt_parm.13.internal_unit_desc+0 S8 A128])
        (const_int 0 [0])) "../src/io.f":325 81 {*movdi_internal}
     (nil))
(insn 239 238 240 20 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -524 [0xfffffffffffffdf4])) [1 dt_parm.13.common.unit+0 S4 A32])
        (const_int -1 [0xffffffffffffffff])) "../src/io.f":325 82 {*movsi_internal}
     (nil))
(insn 240 239 241 20 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -528 [0xfffffffffffffdf0])) [1 dt_parm.13.common.flags+0 S4 A128])
        (const_int 16524 [0x408c])) "../src/io.f":325 82 {*movsi_internal}
     (nil))
(insn 241 240 242 20 (parallel [
            (set (reg:DI 207)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -528 [0xfffffffffffffdf0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":325 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 242 241 243 20 (set (reg:DI 5 di)
        (reg:DI 207)) "../src/io.f":325 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 207)
        (nil)))
(call_insn 243 242 244 20 (call (mem:QI (symbol_ref:DI ("_gfortran_st_read") [flags 0x41]  <function_decl 0x1439e0700 _gfortran_st_read>) [0 _gfortran_st_read S1 A8])
        (const_int 0 [0])) "../src/io.f":325 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 244 243 245 20 (set (reg:DI 208)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -552 [0xfffffffffffffdd8])) [16 p2+0 S8 A64])) "../src/io.f":325 81 {*movdi_internal}
     (nil))
(insn 245 244 246 20 (parallel [
            (set (reg:DI 209)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -528 [0xfffffffffffffdf0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":325 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 246 245 247 20 (set (reg:SI 1 dx)
        (const_int 4 [0x4])) "../src/io.f":325 82 {*movsi_internal}
     (nil))
(insn 247 246 248 20 (set (reg:DI 4 si)
        (reg:DI 208)) "../src/io.f":325 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 208)
        (nil)))
(insn 248 247 249 20 (set (reg:DI 5 di)
        (reg:DI 209)) "../src/io.f":325 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 209)
        (nil)))
(call_insn 249 248 250 20 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_real") [flags 0x41]  <function_decl 0x1439d4c00 _gfortran_transfer_real>) [0 _gfortran_transfer_real S1 A8])
        (const_int 0 [0])) "../src/io.f":325 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 250 249 251 20 (parallel [
            (set (reg:DI 210)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -528 [0xfffffffffffffdf0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":325 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 251 250 252 20 (set (reg:DI 5 di)
        (reg:DI 210)) "../src/io.f":325 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 210)
        (nil)))
(call_insn 252 251 253 20 (call (mem:QI (symbol_ref:DI ("_gfortran_st_read_done") [flags 0x41]  <function_decl 0x1439e4200 _gfortran_st_read_done>) [0 _gfortran_st_read_done S1 A8])
        (const_int 0 [0])) "../src/io.f":325 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 253 252 254 20 (set (reg:SI 107 [ _21 ])
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -528 [0xfffffffffffffdf0])) [1 dt_parm.13.common.flags+0 S4 A128])) "../src/io.f":325 82 {*movsi_internal}
     (nil))
(insn 254 253 255 20 (parallel [
            (set (reg:SI 108 [ _22 ])
                (and:SI (reg:SI 107 [ _21 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":325 391 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 107 [ _21 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 255 254 256 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 108 [ _22 ])
            (const_int 1 [0x1]))) "../src/io.f":325 7 {*cmpsi_1}
     (nil))
(jump_insn 256 255 586 20 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 566)
            (pc))) "../src/io.f":325 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 566)
;;  succ:       38
;;              21 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 108

;; basic block 21, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 20, next block 22, flags: (RTL)
;;  pred:       20 (FALLTHRU)
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 108
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 108
;; lr  def 	 17 [flags]
(note 586 256 257 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 257 586 258 21 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 108 [ _22 ])
            (const_int 2 [0x2]))) "../src/io.f":325 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 108 [ _22 ])
        (nil)))
(jump_insn 258 257 587 21 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 572)
            (pc))) "../src/io.f":325 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 572)
;;  succ:       39
;;              22 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 22, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 21, next block 23, flags: (RTL)
;;  pred:       21 (FALLTHRU)
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 109 110 211 212
(note 587 258 261 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(note 261 587 265 22 ("L.45") NOTE_INSN_DELETED_LABEL 93)
(note 265 261 271 22 ("L.46") NOTE_INSN_DELETED_LABEL 94)
(insn 271 265 272 22 (set (reg/f:DI 211)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -544 [0xfffffffffffffde0])) [16 p1+0 S8 A64])) "../src/io.f":326 81 {*movdi_internal}
     (nil))
(insn 272 271 273 22 (set (reg:SF 109 [ _23 ])
        (mem:SF (reg/f:DI 211) [15 *p1_94(D)+0 S4 A32])) "../src/io.f":326 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 211)
        (nil)))
(insn 273 272 274 22 (set (reg/f:DI 212)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -552 [0xfffffffffffffdd8])) [16 p2+0 S8 A64])) "../src/io.f":326 81 {*movdi_internal}
     (nil))
(insn 274 273 275 22 (set (reg:SF 110 [ _24 ])
        (mem:SF (reg/f:DI 212) [15 *p2_112(D)+0 S4 A32])) "../src/io.f":326 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 212)
        (nil)))
(insn 275 274 276 22 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 109 [ _23 ])
            (reg:SF 110 [ _24 ]))) "../src/io.f":326 51 {*cmpiusf}
     (nil))
(jump_insn 276 275 588 22 (set (pc)
        (if_then_else (unordered (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref 287)
            (pc))) "../src/io.f":326 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil))
 -> 287)
;;  succ:       25
;;              23 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 109 110

;; basic block 23, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 22, next block 24, flags: (RTL)
;;  pred:       22 (FALLTHRU)
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 109 110
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 109 110
;; lr  def 	 17 [flags]
(note 588 276 277 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 277 588 278 23 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 109 [ _23 ])
            (reg:SF 110 [ _24 ]))) "../src/io.f":326 51 {*cmpiusf}
     (expr_list:REG_DEAD (reg:SF 110 [ _24 ])
        (expr_list:REG_DEAD (reg:SF 109 [ _23 ])
            (nil))))
(jump_insn 278 277 282 23 (set (pc)
        (if_then_else (ltgt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 287)
            (pc))) "../src/io.f":326 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil))
 -> 287)
;;  succ:       24 (FALLTHRU)
;;              25
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 24, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 23, next block 25, flags: (RTL)
;;  pred:       23 (FALLTHRU)
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 213
(note 282 278 283 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 283 282 284 24 (set (reg/f:DI 213)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -560 [0xfffffffffffffdd0])) [11 np+0 S8 A64])) "../src/io.f":328 81 {*movdi_internal}
     (nil))
(insn 284 283 609 24 (set (mem:SI (reg/f:DI 213) [1 *np_132(D)+0 S4 A32])
        (const_int 1 [0x1])) "../src/io.f":328 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 213)
        (nil)))
(jump_insn 609 284 610 24 (set (pc)
        (label_ref 580)) "../src/io.f":333 649 {jump}
     (nil)
 -> 580)
;;  succ:       40 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 610 609 287)
;; basic block 25, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 24, next block 26, flags: (RTL)
;;  pred:       22
;;              23
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 214
(code_label 287 610 288 25 95 (nil) [2 uses])
(note 288 287 289 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 289 288 290 25 (set (reg/f:DI 214)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -560 [0xfffffffffffffdd0])) [11 np+0 S8 A64])) "../src/io.f":331 81 {*movdi_internal}
     (nil))
(insn 290 289 611 25 (set (mem:SI (reg/f:DI 214) [1 *np_132(D)+0 S4 A32])
        (const_int 5 [0x5])) "../src/io.f":331 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 214)
        (nil)))
(jump_insn 611 290 612 25 (set (pc)
        (label_ref 580)) "../src/io.f":333 649 {jump}
     (nil)
 -> 580)
;;  succ:       40 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 612 611 295)
;; basic block 26, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 25, next block 27, flags: (RTL)
;;  pred:       19
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 295 612 296 26 91 (nil) [1 uses])
(note 296 295 297 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 297 296 298 26 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [1 kcomma2+0 S4 A32])
            (const_int 0 [0]))) "../src/io.f":335 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 298 297 299 26 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 435)
            (pc))) "../src/io.f":335 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 435)
;;  succ:       27 (FALLTHRU)
;;              32
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 27, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 26, next block 28, flags: (RTL)
;;  pred:       26 (FALLTHRU)
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 111 112 113 114 115 116 217 218 221 222 223 224 225 226 227 228 229 230 231 232 233
(note 299 298 303 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 303 299 304 27 (set (reg:SI 218)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 kcomma1+0 S4 A32])) "../src/io.f":337 82 {*movsi_internal}
     (nil))
(insn 304 303 305 27 (parallel [
            (set (reg:SI 217)
                (plus:SI (reg:SI 218)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":337 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 218)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -12 [0xfffffffffffffff4])) [1 kcomma1+0 S4 A32])
                    (const_int 1 [0x1]))
                (nil)))))
(insn 305 304 309 27 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [1 ka+0 S4 A32])
        (reg:SI 217)) "../src/io.f":337 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 217)
        (nil)))
(insn 309 305 310 27 (set (reg:SI 222)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 kcomma2+0 S4 A32])) "../src/io.f":338 82 {*movsi_internal}
     (nil))
(insn 310 309 311 27 (parallel [
            (set (reg:SI 221)
                (plus:SI (reg:SI 222)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":338 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 222)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 kcomma2+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff]))
                (nil)))))
(insn 311 310 312 27 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -28 [0xffffffffffffffe4])) [1 kb+0 S4 A32])
        (reg:SI 221)) "../src/io.f":338 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 221)
        (nil)))
(insn 312 311 313 27 (set (reg/f:DI 223)
        (symbol_ref/f:DI ("*lC4") [flags 0x2]  <var_decl 0x143b723f0 *lC4>)) "../src/io.f":339 81 {*movdi_internal}
     (nil))
(insn 313 312 314 27 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -520 [0xfffffffffffffdf8])) [5 dt_parm.14.common.filename+0 S8 A64])
        (reg/f:DI 223)) "../src/io.f":339 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 223)
        (nil)))
(insn 314 313 315 27 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -512 [0xfffffffffffffe00])) [1 dt_parm.14.common.line+0 S4 A128])
        (const_int 339 [0x153])) "../src/io.f":339 82 {*movsi_internal}
     (nil))
(insn 315 314 316 27 (set (reg:SI 225)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [1 ka+0 S4 A32])) "../src/io.f":339 82 {*movsi_internal}
     (nil))
(insn 316 315 317 27 (parallel [
            (set (reg:SI 224)
                (plus:SI (reg:SI 225)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":339 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 225)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -24 [0xffffffffffffffe8])) [1 ka+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff]))
                (nil)))))
(insn 317 316 318 27 (set (reg:DI 226)
        (sign_extend:DI (reg:SI 224))) "../src/io.f":339 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 224)
        (nil)))
(insn 318 317 319 27 (set (reg/f:DI 227)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -536 [0xfffffffffffffde8])) [10 line+0 S8 A64])) "../src/io.f":339 81 {*movdi_internal}
     (nil))
(insn 319 318 320 27 (parallel [
            (set (reg/f:DI 111 [ _25 ])
                (plus:DI (reg:DI 226)
                    (reg/f:DI 227)))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":339 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 227)
        (expr_list:REG_DEAD (reg:DI 226)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -536 [0xfffffffffffffde8])) [10 line+0 S8 A64])
                        (reg:DI 226))
                    (nil))))))
(insn 320 319 321 27 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -432 [0xfffffffffffffe50])) [5 dt_parm.14.internal_unit+0 S8 A128])
        (reg/f:DI 111 [ _25 ])) "../src/io.f":339 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 111 [ _25 ])
        (nil)))
(insn 321 320 322 27 (set (reg:SI 228)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -28 [0xffffffffffffffe4])) [1 kb+0 S4 A32])) "../src/io.f":339 82 {*movsi_internal}
     (nil))
(insn 322 321 323 27 (parallel [
            (set (reg:SI 112 [ _26 ])
                (minus:SI (reg:SI 228)
                    (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -24 [0xffffffffffffffe8])) [1 ka+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":339 273 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 228)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -28 [0xffffffffffffffe4])) [1 kb+0 S4 A32])
                    (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -24 [0xffffffffffffffe8])) [1 ka+0 S4 A32]))
                (nil)))))
(insn 323 322 325 27 (parallel [
            (set (reg:SI 113 [ _27 ])
                (plus:SI (reg:SI 112 [ _26 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":339 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 112 [ _26 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 325 323 324 27 (set (reg:SI 229)
        (const_int 0 [0])) "../src/io.f":339 82 {*movsi_internal}
     (nil))
(insn 324 325 326 27 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 113 [ _27 ])
            (const_int 0 [0]))) "../src/io.f":339 3 {*cmpsi_ccno_1}
     (nil))
(insn 326 324 327 27 (set (reg:SI 114 [ _28 ])
        (if_then_else:SI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:SI 113 [ _27 ])
            (reg:SI 229))) "../src/io.f":339 966 {*movsicc_noc}
     (expr_list:REG_DEAD (reg:SI 229)
        (expr_list:REG_DEAD (reg:SI 113 [ _27 ])
            (expr_list:REG_DEAD (reg:CCGOC 17 flags)
                (nil)))))
(insn 327 326 328 27 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -424 [0xfffffffffffffe58])) [1 dt_parm.14.internal_unit_len+0 S4 A64])
        (reg:SI 114 [ _28 ])) "../src/io.f":339 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 114 [ _28 ])
        (nil)))
(insn 328 327 329 27 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -464 [0xfffffffffffffe30])) [5 dt_parm.14.internal_unit_desc+0 S8 A128])
        (const_int 0 [0])) "../src/io.f":339 81 {*movdi_internal}
     (nil))
(insn 329 328 330 27 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -524 [0xfffffffffffffdf4])) [1 dt_parm.14.common.unit+0 S4 A32])
        (const_int -1 [0xffffffffffffffff])) "../src/io.f":339 82 {*movsi_internal}
     (nil))
(insn 330 329 331 27 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -528 [0xfffffffffffffdf0])) [1 dt_parm.14.common.flags+0 S4 A128])
        (const_int 16524 [0x408c])) "../src/io.f":339 82 {*movsi_internal}
     (nil))
(insn 331 330 332 27 (parallel [
            (set (reg:DI 230)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -528 [0xfffffffffffffdf0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":339 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 332 331 333 27 (set (reg:DI 5 di)
        (reg:DI 230)) "../src/io.f":339 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 230)
        (nil)))
(call_insn 333 332 334 27 (call (mem:QI (symbol_ref:DI ("_gfortran_st_read") [flags 0x41]  <function_decl 0x1439e0700 _gfortran_st_read>) [0 _gfortran_st_read S1 A8])
        (const_int 0 [0])) "../src/io.f":339 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 334 333 335 27 (set (reg:DI 231)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -552 [0xfffffffffffffdd8])) [16 p2+0 S8 A64])) "../src/io.f":339 81 {*movdi_internal}
     (nil))
(insn 335 334 336 27 (parallel [
            (set (reg:DI 232)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -528 [0xfffffffffffffdf0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":339 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 336 335 337 27 (set (reg:SI 1 dx)
        (const_int 4 [0x4])) "../src/io.f":339 82 {*movsi_internal}
     (nil))
(insn 337 336 338 27 (set (reg:DI 4 si)
        (reg:DI 231)) "../src/io.f":339 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 231)
        (nil)))
(insn 338 337 339 27 (set (reg:DI 5 di)
        (reg:DI 232)) "../src/io.f":339 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 232)
        (nil)))
(call_insn 339 338 340 27 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_real") [flags 0x41]  <function_decl 0x1439d4c00 _gfortran_transfer_real>) [0 _gfortran_transfer_real S1 A8])
        (const_int 0 [0])) "../src/io.f":339 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 340 339 341 27 (parallel [
            (set (reg:DI 233)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -528 [0xfffffffffffffdf0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":339 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 341 340 342 27 (set (reg:DI 5 di)
        (reg:DI 233)) "../src/io.f":339 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 233)
        (nil)))
(call_insn 342 341 343 27 (call (mem:QI (symbol_ref:DI ("_gfortran_st_read_done") [flags 0x41]  <function_decl 0x1439e4200 _gfortran_st_read_done>) [0 _gfortran_st_read_done S1 A8])
        (const_int 0 [0])) "../src/io.f":339 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 343 342 344 27 (set (reg:SI 115 [ _29 ])
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -528 [0xfffffffffffffdf0])) [1 dt_parm.14.common.flags+0 S4 A128])) "../src/io.f":339 82 {*movsi_internal}
     (nil))
(insn 344 343 345 27 (parallel [
            (set (reg:SI 116 [ _30 ])
                (and:SI (reg:SI 115 [ _29 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":339 391 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 115 [ _29 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 345 344 346 27 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 116 [ _30 ])
            (const_int 1 [0x1]))) "../src/io.f":339 7 {*cmpsi_1}
     (nil))
(jump_insn 346 345 591 27 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 566)
            (pc))) "../src/io.f":339 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 566)
;;  succ:       38
;;              28 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 116

;; basic block 28, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 27, next block 29, flags: (RTL)
;;  pred:       27 (FALLTHRU)
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 116
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 116
;; lr  def 	 17 [flags]
(note 591 346 347 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 347 591 348 28 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 116 [ _30 ])
            (const_int 2 [0x2]))) "../src/io.f":339 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 116 [ _30 ])
        (nil)))
(jump_insn 348 347 592 28 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 572)
            (pc))) "../src/io.f":339 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 572)
;;  succ:       39
;;              29 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 29, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 28, next block 30, flags: (RTL)
;;  pred:       28 (FALLTHRU)
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 117 118 119 120 121 122 236 237 238 239 240 241 242 243 244 245 246 247 248
(note 592 348 351 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(note 351 592 355 29 ("L.48") NOTE_INSN_DELETED_LABEL 100)
(note 355 351 364 29 ("L.49") NOTE_INSN_DELETED_LABEL 101)
(insn 364 355 365 29 (set (reg:SI 237)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 kcomma2+0 S4 A32])) "../src/io.f":340 82 {*movsi_internal}
     (nil))
(insn 365 364 366 29 (parallel [
            (set (reg:SI 236)
                (plus:SI (reg:SI 237)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":340 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 237)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 kcomma2+0 S4 A32])
                    (const_int 1 [0x1]))
                (nil)))))
(insn 366 365 367 29 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [1 k+0 S4 A32])
        (reg:SI 236)) "../src/io.f":340 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 236)
        (nil)))
(insn 367 366 368 29 (set (reg/f:DI 238)
        (symbol_ref/f:DI ("*lC4") [flags 0x2]  <var_decl 0x143b723f0 *lC4>)) "../src/io.f":341 81 {*movdi_internal}
     (nil))
(insn 368 367 369 29 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -520 [0xfffffffffffffdf8])) [5 dt_parm.15.common.filename+0 S8 A64])
        (reg/f:DI 238)) "../src/io.f":341 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 238)
        (nil)))
(insn 369 368 370 29 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -512 [0xfffffffffffffe00])) [1 dt_parm.15.common.line+0 S4 A128])
        (const_int 341 [0x155])) "../src/io.f":341 82 {*movsi_internal}
     (nil))
(insn 370 369 371 29 (set (reg:SI 240)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [1 k+0 S4 A32])) "../src/io.f":341 82 {*movsi_internal}
     (nil))
(insn 371 370 372 29 (parallel [
            (set (reg:SI 239)
                (plus:SI (reg:SI 240)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":341 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 240)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -20 [0xffffffffffffffec])) [1 k+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff]))
                (nil)))))
(insn 372 371 373 29 (set (reg:DI 241)
        (sign_extend:DI (reg:SI 239))) "../src/io.f":341 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 239)
        (nil)))
(insn 373 372 374 29 (set (reg/f:DI 242)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -536 [0xfffffffffffffde8])) [10 line+0 S8 A64])) "../src/io.f":341 81 {*movdi_internal}
     (nil))
(insn 374 373 375 29 (parallel [
            (set (reg/f:DI 117 [ _31 ])
                (plus:DI (reg:DI 241)
                    (reg/f:DI 242)))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":341 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 242)
        (expr_list:REG_DEAD (reg:DI 241)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -536 [0xfffffffffffffde8])) [10 line+0 S8 A64])
                        (reg:DI 241))
                    (nil))))))
(insn 375 374 376 29 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -432 [0xfffffffffffffe50])) [5 dt_parm.15.internal_unit+0 S8 A128])
        (reg/f:DI 117 [ _31 ])) "../src/io.f":341 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 117 [ _31 ])
        (nil)))
(insn 376 375 377 29 (set (reg:SI 243)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 n+0 S4 A32])) "../src/io.f":341 82 {*movsi_internal}
     (nil))
(insn 377 376 378 29 (parallel [
            (set (reg:SI 118 [ _32 ])
                (minus:SI (reg:SI 243)
                    (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -20 [0xffffffffffffffec])) [1 k+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":341 273 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 243)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [1 n+0 S4 A32])
                    (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -20 [0xffffffffffffffec])) [1 k+0 S4 A32]))
                (nil)))))
(insn 378 377 380 29 (parallel [
            (set (reg:SI 119 [ _33 ])
                (plus:SI (reg:SI 118 [ _32 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":341 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 118 [ _32 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 380 378 379 29 (set (reg:SI 244)
        (const_int 0 [0])) "../src/io.f":341 82 {*movsi_internal}
     (nil))
(insn 379 380 381 29 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 119 [ _33 ])
            (const_int 0 [0]))) "../src/io.f":341 3 {*cmpsi_ccno_1}
     (nil))
(insn 381 379 382 29 (set (reg:SI 120 [ _34 ])
        (if_then_else:SI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:SI 119 [ _33 ])
            (reg:SI 244))) "../src/io.f":341 966 {*movsicc_noc}
     (expr_list:REG_DEAD (reg:SI 244)
        (expr_list:REG_DEAD (reg:SI 119 [ _33 ])
            (expr_list:REG_DEAD (reg:CCGOC 17 flags)
                (nil)))))
(insn 382 381 383 29 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -424 [0xfffffffffffffe58])) [1 dt_parm.15.internal_unit_len+0 S4 A64])
        (reg:SI 120 [ _34 ])) "../src/io.f":341 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 120 [ _34 ])
        (nil)))
(insn 383 382 384 29 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -464 [0xfffffffffffffe30])) [5 dt_parm.15.internal_unit_desc+0 S8 A128])
        (const_int 0 [0])) "../src/io.f":341 81 {*movdi_internal}
     (nil))
(insn 384 383 385 29 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -524 [0xfffffffffffffdf4])) [1 dt_parm.15.common.unit+0 S4 A32])
        (const_int -1 [0xffffffffffffffff])) "../src/io.f":341 82 {*movsi_internal}
     (nil))
(insn 385 384 386 29 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -528 [0xfffffffffffffdf0])) [1 dt_parm.15.common.flags+0 S4 A128])
        (const_int 16524 [0x408c])) "../src/io.f":341 82 {*movsi_internal}
     (nil))
(insn 386 385 387 29 (parallel [
            (set (reg:DI 245)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -528 [0xfffffffffffffdf0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":341 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 387 386 388 29 (set (reg:DI 5 di)
        (reg:DI 245)) "../src/io.f":341 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 245)
        (nil)))
(call_insn 388 387 389 29 (call (mem:QI (symbol_ref:DI ("_gfortran_st_read") [flags 0x41]  <function_decl 0x1439e0700 _gfortran_st_read>) [0 _gfortran_st_read S1 A8])
        (const_int 0 [0])) "../src/io.f":341 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 389 388 390 29 (parallel [
            (set (reg:DI 246)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":341 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 390 389 391 29 (parallel [
            (set (reg:DI 247)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -528 [0xfffffffffffffdf0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":341 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 391 390 392 29 (set (reg:SI 1 dx)
        (const_int 4 [0x4])) "../src/io.f":341 82 {*movsi_internal}
     (nil))
(insn 392 391 393 29 (set (reg:DI 4 si)
        (reg:DI 246)) "../src/io.f":341 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 246)
        (nil)))
(insn 393 392 394 29 (set (reg:DI 5 di)
        (reg:DI 247)) "../src/io.f":341 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 247)
        (nil)))
(call_insn 394 393 395 29 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_real") [flags 0x41]  <function_decl 0x1439d4c00 _gfortran_transfer_real>) [0 _gfortran_transfer_real S1 A8])
        (const_int 0 [0])) "../src/io.f":341 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 395 394 396 29 (parallel [
            (set (reg:DI 248)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -528 [0xfffffffffffffdf0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":341 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 396 395 397 29 (set (reg:DI 5 di)
        (reg:DI 248)) "../src/io.f":341 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 248)
        (nil)))
(call_insn 397 396 398 29 (call (mem:QI (symbol_ref:DI ("_gfortran_st_read_done") [flags 0x41]  <function_decl 0x1439e4200 _gfortran_st_read_done>) [0 _gfortran_st_read_done S1 A8])
        (const_int 0 [0])) "../src/io.f":341 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 398 397 399 29 (set (reg:SI 121 [ _35 ])
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -528 [0xfffffffffffffdf0])) [1 dt_parm.15.common.flags+0 S4 A128])) "../src/io.f":341 82 {*movsi_internal}
     (nil))
(insn 399 398 400 29 (parallel [
            (set (reg:SI 122 [ _36 ])
                (and:SI (reg:SI 121 [ _35 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":341 391 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 121 [ _35 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 400 399 401 29 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 122 [ _36 ])
            (const_int 1 [0x1]))) "../src/io.f":341 7 {*cmpsi_1}
     (nil))
(jump_insn 401 400 593 29 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 566)
            (pc))) "../src/io.f":341 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 566)
;;  succ:       38
;;              30 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 122

;; basic block 30, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 29, next block 31, flags: (RTL)
;;  pred:       29 (FALLTHRU)
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 122
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 122
;; lr  def 	 17 [flags]
(note 593 401 402 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 402 593 403 30 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 122 [ _36 ])
            (const_int 2 [0x2]))) "../src/io.f":341 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 122 [ _36 ])
        (nil)))
(jump_insn 403 402 594 30 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 572)
            (pc))) "../src/io.f":341 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 572)
;;  succ:       39
;;              31 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 31, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 30, next block 32, flags: (RTL)
;;  pred:       30 (FALLTHRU)
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 123 124 125 126 127 128 129 130 131 132 249 250 251 252 253
(note 594 403 406 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(note 406 594 410 31 ("L.50") NOTE_INSN_DELETED_LABEL 103)
(note 410 406 416 31 ("L.51") NOTE_INSN_DELETED_LABEL 104)
(insn 416 410 417 31 (set (reg/f:DI 249)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -552 [0xfffffffffffffdd8])) [16 p2+0 S8 A64])) "../src/io.f":342 81 {*movdi_internal}
     (nil))
(insn 417 416 418 31 (set (reg:SF 123 [ _37 ])
        (mem:SF (reg/f:DI 249) [15 *p2_112(D)+0 S4 A32])) "../src/io.f":342 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 249)
        (nil)))
(insn 418 417 419 31 (set (reg/f:DI 250)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -544 [0xfffffffffffffde0])) [16 p1+0 S8 A64])) "../src/io.f":342 81 {*movdi_internal}
     (nil))
(insn 419 418 420 31 (set (reg:SF 124 [ _38 ])
        (mem:SF (reg/f:DI 250) [15 *p1_94(D)+0 S4 A32])) "../src/io.f":342 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 250)
        (nil)))
(insn 420 419 421 31 (set (reg:SF 125 [ _39 ])
        (minus:SF (reg:SF 123 [ _37 ])
            (reg:SF 124 [ _38 ]))) "../src/io.f":342 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 124 [ _38 ])
        (expr_list:REG_DEAD (reg:SF 123 [ _37 ])
            (nil))))
(insn 421 420 422 31 (set (reg:SF 126 [ _40 ])
        (reg:SF 125 [ _39 ])) "../src/io.f":342 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 125 [ _39 ])
        (nil)))
(insn 422 421 423 31 (set (reg:SF 127 [ pdel.24_41 ])
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [15 pdel+0 S4 A128])) "../src/io.f":342 127 {*movsf_internal}
     (nil))
(insn 423 422 424 31 (set (reg:SF 128 [ _42 ])
        (div:SF (reg:SF 126 [ _40 ])
            (reg:SF 127 [ pdel.24_41 ]))) "../src/io.f":342 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 127 [ pdel.24_41 ])
        (expr_list:REG_DEAD (reg:SF 126 [ _40 ])
            (nil))))
(insn 424 423 425 31 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -36 [0xffffffffffffffdc])) [15 rnum+0 S4 A32])
        (reg:SF 128 [ _42 ])) "../src/io.f":342 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 128 [ _42 ])
        (nil)))
(insn 425 424 426 31 (set (reg:SF 129 [ rnum.25_43 ])
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -36 [0xffffffffffffffdc])) [15 rnum+0 S4 A32])) "../src/io.f":343 127 {*movsf_internal}
     (nil))
(insn 426 425 427 31 (set (reg:V4SF 251)
        (mem/u/c:V4SF (symbol_ref/u:DI ("*lC8") [flags 0x2]) [15  S16 A128])) "../src/io.f":343 1225 {movv4sf_internal}
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF +QNaN [+QNaN])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 427 426 428 31 (parallel [
            (set (reg:SF 130 [ _44 ])
                (abs:SF (reg:SF 129 [ rnum.25_43 ])))
            (use (reg:V4SF 251))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":343 470 {*absnegsf2}
     (expr_list:REG_DEAD (reg:V4SF 251)
        (expr_list:REG_DEAD (reg:SF 129 [ rnum.25_43 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (abs:SF (reg:SF 129 [ rnum.25_43 ]))
                    (nil))))))
(insn 428 427 429 31 (set (reg:SF 252)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC9") [flags 0x2]) [15  S4 A32])) "../src/io.f":343 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.4900000095367431640625e+0 [0x0.beb852p+1])
        (nil)))
(insn 429 428 430 31 (set (reg:SF 131 [ _45 ])
        (plus:SF (reg:SF 130 [ _44 ])
            (reg:SF 252))) "../src/io.f":343 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 252)
        (expr_list:REG_DEAD (reg:SF 130 [ _44 ])
            (nil))))
(insn 430 429 431 31 (set (reg:SI 132 [ _46 ])
        (fix:SI (reg:SF 131 [ _45 ]))) "../src/io.f":343 170 {fix_truncsfsi_sse}
     (expr_list:REG_DEAD (reg:SF 131 [ _45 ])
        (nil)))
(insn 431 430 432 31 (set (reg/f:DI 253)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -560 [0xfffffffffffffdd0])) [11 np+0 S8 A64])) "../src/io.f":343 81 {*movdi_internal}
     (nil))
(insn 432 431 613 31 (set (mem:SI (reg/f:DI 253) [1 *np_132(D)+0 S4 A32])
        (reg:SI 132 [ _46 ])) "../src/io.f":343 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 253)
        (expr_list:REG_DEAD (reg:SI 132 [ _46 ])
            (nil))))
(jump_insn 613 432 614 31 (set (pc)
        (label_ref 580)) "../src/io.f":344 649 {jump}
     (nil)
 -> 580)
;;  succ:       40 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 614 613 435)
;; basic block 32, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 31, next block 33, flags: (RTL)
;;  pred:       26
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 435 614 436 32 98 (nil) [1 uses])
(note 436 435 437 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 437 436 438 32 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [1 kslash+0 S4 A32])
            (const_int 0 [0]))) "../src/io.f":346 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 438 437 439 32 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 566)
            (pc))) "../src/io.f":346 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 566)
;;  succ:       33 (FALLTHRU)
;;              38
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 33, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 32, next block 34, flags: (RTL)
;;  pred:       32 (FALLTHRU)
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 133 134 135 136 137 138 256 257 260 261 262 263 264 265 266 267 268 269 270 271 272
(note 439 438 443 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 443 439 444 33 (set (reg:SI 257)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 kcomma1+0 S4 A32])) "../src/io.f":347 82 {*movsi_internal}
     (nil))
(insn 444 443 445 33 (parallel [
            (set (reg:SI 256)
                (plus:SI (reg:SI 257)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":347 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 257)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -12 [0xfffffffffffffff4])) [1 kcomma1+0 S4 A32])
                    (const_int 1 [0x1]))
                (nil)))))
(insn 445 444 449 33 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [1 ka+0 S4 A32])
        (reg:SI 256)) "../src/io.f":347 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 256)
        (nil)))
(insn 449 445 450 33 (set (reg:SI 261)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [1 kslash+0 S4 A32])) "../src/io.f":348 82 {*movsi_internal}
     (nil))
(insn 450 449 451 33 (parallel [
            (set (reg:SI 260)
                (plus:SI (reg:SI 261)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":348 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 261)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -16 [0xfffffffffffffff0])) [1 kslash+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff]))
                (nil)))))
(insn 451 450 452 33 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -28 [0xffffffffffffffe4])) [1 kb+0 S4 A32])
        (reg:SI 260)) "../src/io.f":348 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 260)
        (nil)))
(insn 452 451 453 33 (set (reg/f:DI 262)
        (symbol_ref/f:DI ("*lC4") [flags 0x2]  <var_decl 0x143b723f0 *lC4>)) "../src/io.f":350 81 {*movdi_internal}
     (nil))
(insn 453 452 454 33 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -520 [0xfffffffffffffdf8])) [5 dt_parm.16.common.filename+0 S8 A64])
        (reg/f:DI 262)) "../src/io.f":350 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 262)
        (nil)))
(insn 454 453 455 33 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -512 [0xfffffffffffffe00])) [1 dt_parm.16.common.line+0 S4 A128])
        (const_int 350 [0x15e])) "../src/io.f":350 82 {*movsi_internal}
     (nil))
(insn 455 454 456 33 (set (reg:SI 264)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [1 ka+0 S4 A32])) "../src/io.f":350 82 {*movsi_internal}
     (nil))
(insn 456 455 457 33 (parallel [
            (set (reg:SI 263)
                (plus:SI (reg:SI 264)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":350 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 264)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -24 [0xffffffffffffffe8])) [1 ka+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff]))
                (nil)))))
(insn 457 456 458 33 (set (reg:DI 265)
        (sign_extend:DI (reg:SI 263))) "../src/io.f":350 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 263)
        (nil)))
(insn 458 457 459 33 (set (reg/f:DI 266)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -536 [0xfffffffffffffde8])) [10 line+0 S8 A64])) "../src/io.f":350 81 {*movdi_internal}
     (nil))
(insn 459 458 460 33 (parallel [
            (set (reg/f:DI 133 [ _47 ])
                (plus:DI (reg:DI 265)
                    (reg/f:DI 266)))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":350 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 266)
        (expr_list:REG_DEAD (reg:DI 265)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -536 [0xfffffffffffffde8])) [10 line+0 S8 A64])
                        (reg:DI 265))
                    (nil))))))
(insn 460 459 461 33 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -432 [0xfffffffffffffe50])) [5 dt_parm.16.internal_unit+0 S8 A128])
        (reg/f:DI 133 [ _47 ])) "../src/io.f":350 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 133 [ _47 ])
        (nil)))
(insn 461 460 462 33 (set (reg:SI 267)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -28 [0xffffffffffffffe4])) [1 kb+0 S4 A32])) "../src/io.f":350 82 {*movsi_internal}
     (nil))
(insn 462 461 463 33 (parallel [
            (set (reg:SI 134 [ _48 ])
                (minus:SI (reg:SI 267)
                    (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -24 [0xffffffffffffffe8])) [1 ka+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":350 273 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 267)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -28 [0xffffffffffffffe4])) [1 kb+0 S4 A32])
                    (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -24 [0xffffffffffffffe8])) [1 ka+0 S4 A32]))
                (nil)))))
(insn 463 462 465 33 (parallel [
            (set (reg:SI 135 [ _49 ])
                (plus:SI (reg:SI 134 [ _48 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":350 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 134 [ _48 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 465 463 464 33 (set (reg:SI 268)
        (const_int 0 [0])) "../src/io.f":350 82 {*movsi_internal}
     (nil))
(insn 464 465 466 33 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 135 [ _49 ])
            (const_int 0 [0]))) "../src/io.f":350 3 {*cmpsi_ccno_1}
     (nil))
(insn 466 464 467 33 (set (reg:SI 136 [ _50 ])
        (if_then_else:SI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:SI 135 [ _49 ])
            (reg:SI 268))) "../src/io.f":350 966 {*movsicc_noc}
     (expr_list:REG_DEAD (reg:SI 268)
        (expr_list:REG_DEAD (reg:SI 135 [ _49 ])
            (expr_list:REG_DEAD (reg:CCGOC 17 flags)
                (nil)))))
(insn 467 466 468 33 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -424 [0xfffffffffffffe58])) [1 dt_parm.16.internal_unit_len+0 S4 A64])
        (reg:SI 136 [ _50 ])) "../src/io.f":350 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 136 [ _50 ])
        (nil)))
(insn 468 467 469 33 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -464 [0xfffffffffffffe30])) [5 dt_parm.16.internal_unit_desc+0 S8 A128])
        (const_int 0 [0])) "../src/io.f":350 81 {*movdi_internal}
     (nil))
(insn 469 468 470 33 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -524 [0xfffffffffffffdf4])) [1 dt_parm.16.common.unit+0 S4 A32])
        (const_int -1 [0xffffffffffffffff])) "../src/io.f":350 82 {*movsi_internal}
     (nil))
(insn 470 469 471 33 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -528 [0xfffffffffffffdf0])) [1 dt_parm.16.common.flags+0 S4 A128])
        (const_int 16524 [0x408c])) "../src/io.f":350 82 {*movsi_internal}
     (nil))
(insn 471 470 472 33 (parallel [
            (set (reg:DI 269)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -528 [0xfffffffffffffdf0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":350 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 472 471 473 33 (set (reg:DI 5 di)
        (reg:DI 269)) "../src/io.f":350 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 269)
        (nil)))
(call_insn 473 472 474 33 (call (mem:QI (symbol_ref:DI ("_gfortran_st_read") [flags 0x41]  <function_decl 0x1439e0700 _gfortran_st_read>) [0 _gfortran_st_read S1 A8])
        (const_int 0 [0])) "../src/io.f":350 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 474 473 475 33 (set (reg:DI 270)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -552 [0xfffffffffffffdd8])) [16 p2+0 S8 A64])) "../src/io.f":350 81 {*movdi_internal}
     (nil))
(insn 475 474 476 33 (parallel [
            (set (reg:DI 271)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -528 [0xfffffffffffffdf0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":350 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 476 475 477 33 (set (reg:SI 1 dx)
        (const_int 4 [0x4])) "../src/io.f":350 82 {*movsi_internal}
     (nil))
(insn 477 476 478 33 (set (reg:DI 4 si)
        (reg:DI 270)) "../src/io.f":350 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 270)
        (nil)))
(insn 478 477 479 33 (set (reg:DI 5 di)
        (reg:DI 271)) "../src/io.f":350 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 271)
        (nil)))
(call_insn 479 478 480 33 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_real") [flags 0x41]  <function_decl 0x1439d4c00 _gfortran_transfer_real>) [0 _gfortran_transfer_real S1 A8])
        (const_int 0 [0])) "../src/io.f":350 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 480 479 481 33 (parallel [
            (set (reg:DI 272)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -528 [0xfffffffffffffdf0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":350 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 481 480 482 33 (set (reg:DI 5 di)
        (reg:DI 272)) "../src/io.f":350 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 272)
        (nil)))
(call_insn 482 481 483 33 (call (mem:QI (symbol_ref:DI ("_gfortran_st_read_done") [flags 0x41]  <function_decl 0x1439e4200 _gfortran_st_read_done>) [0 _gfortran_st_read_done S1 A8])
        (const_int 0 [0])) "../src/io.f":350 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 483 482 484 33 (set (reg:SI 137 [ _51 ])
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -528 [0xfffffffffffffdf0])) [1 dt_parm.16.common.flags+0 S4 A128])) "../src/io.f":350 82 {*movsi_internal}
     (nil))
(insn 484 483 485 33 (parallel [
            (set (reg:SI 138 [ _52 ])
                (and:SI (reg:SI 137 [ _51 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":350 391 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 137 [ _51 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 485 484 486 33 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 138 [ _52 ])
            (const_int 1 [0x1]))) "../src/io.f":350 7 {*cmpsi_1}
     (nil))
(jump_insn 486 485 595 33 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 566)
            (pc))) "../src/io.f":350 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 566)
;;  succ:       38
;;              34 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 138

;; basic block 34, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 33, next block 35, flags: (RTL)
;;  pred:       33 (FALLTHRU)
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 138
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 138
;; lr  def 	 17 [flags]
(note 595 486 487 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 487 595 488 34 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 138 [ _52 ])
            (const_int 2 [0x2]))) "../src/io.f":350 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 138 [ _52 ])
        (nil)))
(jump_insn 488 487 596 34 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 572)
            (pc))) "../src/io.f":350 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 572)
;;  succ:       39
;;              35 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 35, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 34, next block 36, flags: (RTL)
;;  pred:       34 (FALLTHRU)
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 139 140 141 142 143 144 275 276 277 278 279 280 281 282 283 284 285 286 287
(note 596 488 491 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(note 491 596 495 35 ("L.52") NOTE_INSN_DELETED_LABEL 106)
(note 495 491 504 35 ("L.53") NOTE_INSN_DELETED_LABEL 107)
(insn 504 495 505 35 (set (reg:SI 276)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [1 kslash+0 S4 A32])) "../src/io.f":351 82 {*movsi_internal}
     (nil))
(insn 505 504 506 35 (parallel [
            (set (reg:SI 275)
                (plus:SI (reg:SI 276)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":351 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 276)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -16 [0xfffffffffffffff0])) [1 kslash+0 S4 A32])
                    (const_int 1 [0x1]))
                (nil)))))
(insn 506 505 507 35 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [1 k+0 S4 A32])
        (reg:SI 275)) "../src/io.f":351 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 275)
        (nil)))
(insn 507 506 508 35 (set (reg/f:DI 277)
        (symbol_ref/f:DI ("*lC4") [flags 0x2]  <var_decl 0x143b723f0 *lC4>)) "../src/io.f":352 81 {*movdi_internal}
     (nil))
(insn 508 507 509 35 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -520 [0xfffffffffffffdf8])) [5 dt_parm.17.common.filename+0 S8 A64])
        (reg/f:DI 277)) "../src/io.f":352 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 277)
        (nil)))
(insn 509 508 510 35 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -512 [0xfffffffffffffe00])) [1 dt_parm.17.common.line+0 S4 A128])
        (const_int 352 [0x160])) "../src/io.f":352 82 {*movsi_internal}
     (nil))
(insn 510 509 511 35 (set (reg:SI 279)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [1 k+0 S4 A32])) "../src/io.f":352 82 {*movsi_internal}
     (nil))
(insn 511 510 512 35 (parallel [
            (set (reg:SI 278)
                (plus:SI (reg:SI 279)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":352 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 279)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -20 [0xffffffffffffffec])) [1 k+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff]))
                (nil)))))
(insn 512 511 513 35 (set (reg:DI 280)
        (sign_extend:DI (reg:SI 278))) "../src/io.f":352 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 278)
        (nil)))
(insn 513 512 514 35 (set (reg/f:DI 281)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -536 [0xfffffffffffffde8])) [10 line+0 S8 A64])) "../src/io.f":352 81 {*movdi_internal}
     (nil))
(insn 514 513 515 35 (parallel [
            (set (reg/f:DI 139 [ _53 ])
                (plus:DI (reg:DI 280)
                    (reg/f:DI 281)))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":352 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 281)
        (expr_list:REG_DEAD (reg:DI 280)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -536 [0xfffffffffffffde8])) [10 line+0 S8 A64])
                        (reg:DI 280))
                    (nil))))))
(insn 515 514 516 35 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -432 [0xfffffffffffffe50])) [5 dt_parm.17.internal_unit+0 S8 A128])
        (reg/f:DI 139 [ _53 ])) "../src/io.f":352 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 139 [ _53 ])
        (nil)))
(insn 516 515 517 35 (set (reg:SI 282)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 n+0 S4 A32])) "../src/io.f":352 82 {*movsi_internal}
     (nil))
(insn 517 516 518 35 (parallel [
            (set (reg:SI 140 [ _54 ])
                (minus:SI (reg:SI 282)
                    (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -20 [0xffffffffffffffec])) [1 k+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":352 273 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 282)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [1 n+0 S4 A32])
                    (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -20 [0xffffffffffffffec])) [1 k+0 S4 A32]))
                (nil)))))
(insn 518 517 520 35 (parallel [
            (set (reg:SI 141 [ _55 ])
                (plus:SI (reg:SI 140 [ _54 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":352 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 140 [ _54 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 520 518 519 35 (set (reg:SI 283)
        (const_int 0 [0])) "../src/io.f":352 82 {*movsi_internal}
     (nil))
(insn 519 520 521 35 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 141 [ _55 ])
            (const_int 0 [0]))) "../src/io.f":352 3 {*cmpsi_ccno_1}
     (nil))
(insn 521 519 522 35 (set (reg:SI 142 [ _56 ])
        (if_then_else:SI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:SI 141 [ _55 ])
            (reg:SI 283))) "../src/io.f":352 966 {*movsicc_noc}
     (expr_list:REG_DEAD (reg:SI 283)
        (expr_list:REG_DEAD (reg:SI 141 [ _55 ])
            (expr_list:REG_DEAD (reg:CCGOC 17 flags)
                (nil)))))
(insn 522 521 523 35 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -424 [0xfffffffffffffe58])) [1 dt_parm.17.internal_unit_len+0 S4 A64])
        (reg:SI 142 [ _56 ])) "../src/io.f":352 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 142 [ _56 ])
        (nil)))
(insn 523 522 524 35 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -464 [0xfffffffffffffe30])) [5 dt_parm.17.internal_unit_desc+0 S8 A128])
        (const_int 0 [0])) "../src/io.f":352 81 {*movdi_internal}
     (nil))
(insn 524 523 525 35 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -524 [0xfffffffffffffdf4])) [1 dt_parm.17.common.unit+0 S4 A32])
        (const_int -1 [0xffffffffffffffff])) "../src/io.f":352 82 {*movsi_internal}
     (nil))
(insn 525 524 526 35 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -528 [0xfffffffffffffdf0])) [1 dt_parm.17.common.flags+0 S4 A128])
        (const_int 16524 [0x408c])) "../src/io.f":352 82 {*movsi_internal}
     (nil))
(insn 526 525 527 35 (parallel [
            (set (reg:DI 284)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -528 [0xfffffffffffffdf0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":352 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 527 526 528 35 (set (reg:DI 5 di)
        (reg:DI 284)) "../src/io.f":352 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 284)
        (nil)))
(call_insn 528 527 529 35 (call (mem:QI (symbol_ref:DI ("_gfortran_st_read") [flags 0x41]  <function_decl 0x1439e0700 _gfortran_st_read>) [0 _gfortran_st_read S1 A8])
        (const_int 0 [0])) "../src/io.f":352 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 529 528 530 35 (parallel [
            (set (reg:DI 285)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -36 [0xffffffffffffffdc])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":352 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 530 529 531 35 (parallel [
            (set (reg:DI 286)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -528 [0xfffffffffffffdf0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":352 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 531 530 532 35 (set (reg:SI 1 dx)
        (const_int 4 [0x4])) "../src/io.f":352 82 {*movsi_internal}
     (nil))
(insn 532 531 533 35 (set (reg:DI 4 si)
        (reg:DI 285)) "../src/io.f":352 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 285)
        (nil)))
(insn 533 532 534 35 (set (reg:DI 5 di)
        (reg:DI 286)) "../src/io.f":352 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 286)
        (nil)))
(call_insn 534 533 535 35 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_real") [flags 0x41]  <function_decl 0x1439d4c00 _gfortran_transfer_real>) [0 _gfortran_transfer_real S1 A8])
        (const_int 0 [0])) "../src/io.f":352 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 535 534 536 35 (parallel [
            (set (reg:DI 287)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -528 [0xfffffffffffffdf0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":352 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 536 535 537 35 (set (reg:DI 5 di)
        (reg:DI 287)) "../src/io.f":352 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 287)
        (nil)))
(call_insn 537 536 538 35 (call (mem:QI (symbol_ref:DI ("_gfortran_st_read_done") [flags 0x41]  <function_decl 0x1439e4200 _gfortran_st_read_done>) [0 _gfortran_st_read_done S1 A8])
        (const_int 0 [0])) "../src/io.f":352 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 538 537 539 35 (set (reg:SI 143 [ _57 ])
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -528 [0xfffffffffffffdf0])) [1 dt_parm.17.common.flags+0 S4 A128])) "../src/io.f":352 82 {*movsi_internal}
     (nil))
(insn 539 538 540 35 (parallel [
            (set (reg:SI 144 [ _58 ])
                (and:SI (reg:SI 143 [ _57 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":352 391 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 143 [ _57 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 540 539 541 35 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 144 [ _58 ])
            (const_int 1 [0x1]))) "../src/io.f":352 7 {*cmpsi_1}
     (nil))
(jump_insn 541 540 597 35 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 566)
            (pc))) "../src/io.f":352 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 566)
;;  succ:       38
;;              36 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 144

;; basic block 36, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 35, next block 37, flags: (RTL)
;;  pred:       35 (FALLTHRU)
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 144
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 144
;; lr  def 	 17 [flags]
(note 597 541 542 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 542 597 543 36 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 144 [ _58 ])
            (const_int 2 [0x2]))) "../src/io.f":352 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 144 [ _58 ])
        (nil)))
(jump_insn 543 542 598 36 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 572)
            (pc))) "../src/io.f":352 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 572)
;;  succ:       39
;;              37 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 37, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 36, next block 38, flags: (RTL)
;;  pred:       36 (FALLTHRU)
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 145 146 147 148 288 289 290
(note 598 543 546 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(note 546 598 550 37 ("L.54") NOTE_INSN_DELETED_LABEL 109)
(note 550 546 556 37 ("L.55") NOTE_INSN_DELETED_LABEL 110)
(insn 556 550 557 37 (set (reg:SF 145 [ rnum.26_59 ])
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -36 [0xffffffffffffffdc])) [15 rnum+0 S4 A32])) "../src/io.f":353 127 {*movsf_internal}
     (nil))
(insn 557 556 558 37 (set (reg:V4SF 288)
        (mem/u/c:V4SF (symbol_ref/u:DI ("*lC8") [flags 0x2]) [15  S16 A128])) "../src/io.f":353 1225 {movv4sf_internal}
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF +QNaN [+QNaN])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 558 557 559 37 (parallel [
            (set (reg:SF 146 [ _60 ])
                (abs:SF (reg:SF 145 [ rnum.26_59 ])))
            (use (reg:V4SF 288))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":353 470 {*absnegsf2}
     (expr_list:REG_DEAD (reg:V4SF 288)
        (expr_list:REG_DEAD (reg:SF 145 [ rnum.26_59 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (abs:SF (reg:SF 145 [ rnum.26_59 ]))
                    (nil))))))
(insn 559 558 560 37 (set (reg:SF 289)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC10") [flags 0x2]) [15  S4 A32])) "../src/io.f":353 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 9.99999977648258209228515625e-3 [0x0.a3d70ap-6])
        (nil)))
(insn 560 559 561 37 (set (reg:SF 147 [ _61 ])
        (plus:SF (reg:SF 146 [ _60 ])
            (reg:SF 289))) "../src/io.f":353 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 289)
        (expr_list:REG_DEAD (reg:SF 146 [ _60 ])
            (nil))))
(insn 561 560 562 37 (set (reg:SI 148 [ _62 ])
        (fix:SI (reg:SF 147 [ _61 ]))) "../src/io.f":353 170 {fix_truncsfsi_sse}
     (expr_list:REG_DEAD (reg:SF 147 [ _61 ])
        (nil)))
(insn 562 561 563 37 (set (reg/f:DI 290)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -560 [0xfffffffffffffdd0])) [11 np+0 S8 A64])) "../src/io.f":353 81 {*movdi_internal}
     (nil))
(insn 563 562 615 37 (set (mem:SI (reg/f:DI 290) [1 *np_132(D)+0 S4 A32])
        (reg:SI 148 [ _62 ])) "../src/io.f":353 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 290)
        (expr_list:REG_DEAD (reg:SI 148 [ _62 ])
            (nil))))
(jump_insn 615 563 616 37 (set (pc)
        (label_ref 580)) "../src/io.f":354 649 {jump}
     (nil)
 -> 580)
;;  succ:       40 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 616 615 566)
;; basic block 38, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 37, next block 39, flags: (RTL)
;;  pred:       10
;;              13
;;              20
;;              27
;;              29
;;              32
;;              33
;;              35
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 291
(code_label 566 616 567 38 83 (nil) [8 uses])
(note 567 566 568 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 568 567 569 38 (set (reg/f:DI 291)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -568 [0xfffffffffffffdc8])) [11 ierr+0 S8 A64])) "../src/io.f":360 81 {*movdi_internal}
     (nil))
(insn 569 568 617 38 (set (mem:SI (reg/f:DI 291) [1 *ierr_83(D)+0 S4 A32])
        (const_int 1 [0x1])) "../src/io.f":360 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 291)
        (nil)))
(jump_insn 617 569 618 38 (set (pc)
        (label_ref 580)) "../src/io.f":361 649 {jump}
     (nil)
 -> 580)
;;  succ:       40 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 618 617 572)
;; basic block 39, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 38, next block 40, flags: (RTL)
;;  pred:       11
;;              14
;;              21
;;              28
;;              30
;;              34
;;              36
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 292
(code_label 572 618 573 39 84 (nil) [7 uses])
(note 573 572 574 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 574 573 575 39 (set (reg/f:DI 292)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -568 [0xfffffffffffffdc8])) [11 ierr+0 S8 A64])) "../src/io.f":364 81 {*movdi_internal}
     (nil))
(insn 575 574 600 39 (set (mem:SI (reg/f:DI 292) [1 *ierr_83(D)+0 S4 A32])
        (const_int -1 [0xffffffffffffffff])) "../src/io.f":364 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 292)
        (nil)))
(insn 600 575 580 39 (const_int 0 [0]) "../src/io.f":365 682 {nop}
     (nil))
;;  succ:       40 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 40, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 39, next block 1, flags: (RTL)
;;  pred:       39 (FALLTHRU)
;;              37 [100.0%] 
;;              12 [100.0%] 
;;              24 [100.0%] 
;;              25 [100.0%] 
;;              31 [100.0%] 
;;              38 [100.0%] 
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 580 600 581 40 74 (nil) [6 uses])
(note 581 580 0 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function getarg0 (getarg0_, funcdef_no=6, decl_uid=3710, cgraph_uid=6, symbol_order=6)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 9 n_edges 11 count 9 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 8 7
;; 2 succs { 3 4 }
;; 3 succs { 8 }
;; 4 succs { 5 8 }
;; 5 succs { 6 8 }
;; 6 succs { 8 }
;; 8 succs { 7 }
;; 7 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 15.
verify found no changes in insn with uid = 30.
verify found no changes in insn with uid = 52.
verify found no changes in insn with uid = 64.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r110: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a7 (r110,l0) best DREG, allocno GENERAL_REGS
    r109: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r109,l0) best SIREG, allocno GENERAL_REGS
    r108: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r108,l0) best DIREG, allocno GENERAL_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a13 (r105,l0) best DIREG, allocno GENERAL_REGS
    r104: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a14 (r104,l0) best SIREG, allocno GENERAL_REGS
    r103: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a15 (r103,l0) best DREG, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a18 (r101,l0) best AREG, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r98,l0) best DREG, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r94,l0) best DIREG, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a1(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a2(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a3(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a4(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:40 NO_REX_SSE_REGS:40 SSE_REGS:40 MMX_REGS:64 INT_SSE_REGS:45 ALL_REGS:936 MEM:17
  a5(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a6(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a7(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a8(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a9(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a10(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a11(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:39 INT_SSE_REGS:27 ALL_REGS:624 MEM:11
  a12(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a13(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a14(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a15(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a16(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a17(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a18(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a19(r88,l0) costs: AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:2
  a20(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a21(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7

   Insn 78(l0): point = 1
   Insn 71(l0): point = 4
   Insn 64(l0): point = 6
   Insn 63(l0): point = 8
   Insn 62(l0): point = 10
   Insn 61(l0): point = 12
   Insn 60(l0): point = 14
   Insn 59(l0): point = 16
   Insn 57(l0): point = 19
   Insn 56(l0): point = 21
   Insn 55(l0): point = 23
   Insn 52(l0): point = 25
   Insn 51(l0): point = 27
   Insn 50(l0): point = 29
   Insn 49(l0): point = 31
   Insn 48(l0): point = 33
   Insn 47(l0): point = 35
   Insn 46(l0): point = 37
   Insn 45(l0): point = 39
   Insn 44(l0): point = 41
   Insn 42(l0): point = 43
   Insn 43(l0): point = 45
   Insn 41(l0): point = 47
   Insn 39(l0): point = 50
   Insn 38(l0): point = 52
   Insn 37(l0): point = 54
   Insn 36(l0): point = 56
   Insn 35(l0): point = 58
   Insn 72(l0): point = 61
   Insn 30(l0): point = 63
   Insn 29(l0): point = 65
   Insn 28(l0): point = 67
   Insn 27(l0): point = 69
   Insn 26(l0): point = 71
   Insn 25(l0): point = 73
   Insn 24(l0): point = 75
   Insn 23(l0): point = 77
   Insn 21(l0): point = 80
   Insn 20(l0): point = 82
   Insn 19(l0): point = 84
   Insn 18(l0): point = 86
   Insn 17(l0): point = 88
   Insn 16(l0): point = 90
   Insn 15(l0): point = 92
   Insn 11(l0): point = 94
   Insn 10(l0): point = 96
   Insn 9(l0): point = 98
   Insn 8(l0): point = 100
   Insn 4(l0): point = 102
   Insn 3(l0): point = 104
   Insn 2(l0): point = 106
 a0(r94): [9..14]
 a1(r98): [13..54]
 a2(r113): [15..16]
 a3(r93): [22..23]
 a4(r97): [24..58]
 a5(r108): [28..37]
 a6(r109): [30..35]
 a7(r110): [32..33]
 a8(r92): [34..41]
 a9(r107): [38..39]
 a10(r106): [42..45]
 a11(r91): [42..47]
 a12(r90): [55..56]
 a13(r105): [68..73]
 a14(r104): [70..75]
 a15(r103): [72..77]
 a16(r89): [83..84]
 a17(r102): [85..86]
 a18(r101): [89..90]
 a19(r88 [0]): [95..108]
 a19(r88 [1]): [94..108]
 a20(r87): [97..98]
 a21(r99): [99..100]
Compressing live ranges: from 109 to 28 - 25%
Ranges after the compression:
 a0(r94): [0..1]
 a1(r98): [0..13]
 a2(r113): [2..3]
 a3(r93): [4..5]
 a4(r97): [6..15]
 a5(r108): [6..9]
 a6(r109): [6..9]
 a7(r110): [6..7]
 a8(r92): [8..11]
 a9(r107): [10..11]
 a10(r106): [12..13]
 a11(r91): [12..13]
 a12(r90): [14..15]
 a13(r105): [16..17]
 a14(r104): [16..17]
 a15(r103): [16..17]
 a16(r89): [18..19]
 a17(r102): [20..21]
 a18(r101): [22..23]
 a19(r88 [0]): [24..27]
 a19(r88 [1]): [24..27]
 a20(r87): [24..25]
 a21(r99): [26..27]
  regions=1, blocks=9, points=28
    allocnos=22 (big 1), copies=0, conflicts=0, ranges=23
Disposition:
   20:r87  l0     0   19:r88  l0     2   16:r89  l0     0   12:r90  l0     0
   11:r91  l0     0    8:r92  l0     1    3:r93  l0     0    0:r94  l0     0
    4:r97  l0     3    1:r98  l0    41   21:r99  l0     0   18:r101 l0     0
   17:r102 l0     0   15:r103 l0     1   14:r104 l0     2   13:r105 l0     0
   10:r106 l0     1    9:r107 l0     0    5:r108 l0     2    6:r109 l0     0
    7:r110 l0     1    2:r113 l0     0
+++Costs: overall -9, reg -9, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


getarg0

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags]
;;  ref usage 	r0={6d,2u} r1={8d,4u} r2={5d} r4={8d,4u} r5={8d,4u} r6={1d,8u} r7={1d,12u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r16={1d,7u} r17={10d,4u} r18={4d} r19={4d} r20={1d,21u,1e} r21={5d} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={5d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={5d} r38={5d} r39={4d} r40={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r87={1d,1u} r88={2d,2u} r89={1d,1u} r90={1d,1u} r91={1d,2u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r97={1d,4u} r98={1d,1u} r99={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r113={1d,1u} 
;;    total ref usage 440{346d,93u,1e} in 51{47 regular + 4 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 89 99 101 102
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [11 iarg+0 S8 A64])
        (reg:DI 5 di [ iarg ])) "../src/io.f":370 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ iarg ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [10 arg+0 S8 A64])
        (reg:DI 4 si [ arg ])) "../src/io.f":370 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ arg ])
        (nil)))
(insn 4 3 5 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -36 [0xffffffffffffffdc])) [1 _arg+0 S4 A32])
        (reg:SI 1 dx [ _arg ])) "../src/io.f":370 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [ _arg ])
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg:SI 99)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -36 [0xffffffffffffffdc])) [1 _arg+0 S4 A32])) "../src/io.f":388 82 {*movsi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 87 [ _1 ])
        (sign_extend:DI (reg:SI 99))) "../src/io.f":388 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 99)
        (nil)))
(insn 10 9 11 2 (set (subreg:DI (reg:TI 88 [ _2 ]) 0)
        (reg:DI 87 [ _1 ])) "../src/io.f":388 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 87 [ _1 ])
        (nil)))
(insn 11 10 15 2 (set (subreg:DI (reg:TI 88 [ _2 ]) 8)
        (const_int 0 [0])) "../src/io.f":388 81 {*movdi_internal}
     (expr_list:REG_UNUSED (reg:TI 88 [ _2 ])
        (nil)))
(call_insn 15 11 16 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_gfortran_iargc") [flags 0x41]  <function_decl 0x1439d3100 _gfortran_iargc>) [0 _gfortran_iargc S1 A8])
            (const_int 0 [0]))) "../src/io.f":380 665 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))
(insn 16 15 17 2 (set (reg:SI 101)
        (reg:SI 0 ax)) "../src/io.f":380 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 17 16 18 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 narg+0 S4 A32])
        (reg:SI 101)) "../src/io.f":380 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 101)
        (nil)))
(insn 18 17 19 2 (set (reg/f:DI 102)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [11 iarg+0 S8 A64])) "../src/io.f":381 81 {*movdi_internal}
     (nil))
(insn 19 18 20 2 (set (reg:SI 89 [ _3 ])
        (mem:SI (reg/f:DI 102) [1 *iarg_16(D)+0 S4 A32])) "../src/io.f":381 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 102)
        (nil)))
(insn 20 19 21 2 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [1 narg+0 S4 A32])
            (reg:SI 89 [ _3 ]))) "../src/io.f":381 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 89 [ _3 ])
        (nil)))
(jump_insn 21 20 22 2 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 33)
            (pc))) "../src/io.f":381 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 33)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 103 104 105
(note 22 21 23 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 24 3 (set (reg:SI 103)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -36 [0xffffffffffffffdc])) [1 _arg+0 S4 A32])) "../src/io.f":382 82 {*movsi_internal}
     (nil))
(insn 24 23 25 3 (set (reg:DI 104)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [10 arg+0 S8 A64])) "../src/io.f":382 81 {*movdi_internal}
     (nil))
(insn 25 24 26 3 (set (reg:DI 105)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [11 iarg+0 S8 A64])) "../src/io.f":382 81 {*movdi_internal}
     (nil))
(insn 26 25 27 3 (set (reg:SI 1 dx)
        (reg:SI 103)) "../src/io.f":382 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 103)
        (nil)))
(insn 27 26 28 3 (set (reg:DI 4 si)
        (reg:DI 104)) "../src/io.f":382 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 104)
        (nil)))
(insn 28 27 29 3 (set (reg:DI 5 di)
        (reg:DI 105)) "../src/io.f":382 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 105)
        (nil)))
(insn 29 28 30 3 (set (reg:QI 0 ax)
        (const_int 0 [0])) "../src/io.f":382 84 {*movqi_internal}
     (nil))
(call_insn 30 29 72 3 (call (mem:QI (symbol_ref:DI ("_gfortran_getarg_i4") [flags 0x41]  <function_decl 0x1439e4f00 _gfortran_getarg_i4>) [0 _gfortran_getarg_i4 S1 A8])
        (const_int 0 [0])) "../src/io.f":382 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (expr_list:REG_DEAD (reg:QI 0 ax)
                    (nil)))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (nil))))))
(jump_insn 72 30 73 3 (set (pc)
        (label_ref:DI 77)) "../src/io.f":387 649 {jump}
     (nil)
 -> 77)
;;  succ:       8 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 73 72 33)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 90 97 98
(code_label 33 73 34 4 114 (nil) [1 uses])
(note 34 33 35 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 4 (set (reg:SI 97 [ _17 ])
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -36 [0xffffffffffffffdc])) [1 _arg+0 S4 A32])) "../src/io.f":384 82 {*movsi_internal}
     (nil))
(insn 36 35 37 4 (set (reg:DI 90 [ _4 ])
        (sign_extend:DI (reg:SI 97 [ _17 ]))) "../src/io.f":384 145 {*extendsidi2_rex64}
     (nil))
(insn 37 36 38 4 (parallel [
            (set (reg:DI 98 [ _18 ])
                (plus:DI (reg:DI 90 [ _4 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":384 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 90 [ _4 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 38 37 39 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 97 [ _17 ])
            (const_int 0 [0]))) "../src/io.f":384 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 39 38 40 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 77)
            (pc))) "../src/io.f":384 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 77)
;;  succ:       5 (FALLTHRU)
;;              8
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 97 98

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 97 98
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 97
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 91 92 93 106 107 108 109 110
(note 40 39 41 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 43 5 (set (reg:DI 91 [ _5 ])
        (sign_extend:DI (reg:SI 97 [ _17 ]))) "../src/io.f":384 145 {*extendsidi2_rex64}
     (nil))
(insn 43 41 42 5 (set (reg:DI 106)
        (const_int 1 [0x1])) "../src/io.f":384 81 {*movdi_internal}
     (nil))
(insn 42 43 44 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 91 [ _5 ])
            (const_int 0 [0]))) "../src/io.f":384 4 {*cmpdi_ccno_1}
     (nil))
(insn 44 42 45 5 (set (reg:DI 92 [ _6 ])
        (if_then_else:DI (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (reg:DI 91 [ _5 ])
            (reg:DI 106))) "../src/io.f":384 967 {*movdicc_noc}
     (expr_list:REG_DEAD (reg:DI 106)
        (expr_list:REG_DEAD (reg:DI 91 [ _5 ])
            (expr_list:REG_DEAD (reg:CCZ 17 flags)
                (nil)))))
(insn 45 44 46 5 (set (reg/f:DI 107)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [10 arg+0 S8 A64])) "../src/io.f":384 81 {*movdi_internal}
     (nil))
(insn 46 45 47 5 (set (reg:DI 108)
        (reg/f:DI 107)) "../src/io.f":384 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 107)
        (nil)))
(insn 47 46 48 5 (set (reg:DI 109)
        (symbol_ref/f:DI ("*lC2") [flags 0x2]  <var_decl 0x143b722d0 *lC2>)) "../src/io.f":384 81 {*movdi_internal}
     (nil))
(insn 48 47 49 5 (set (reg:DI 110)
        (reg:DI 92 [ _6 ])) "../src/io.f":384 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 92 [ _6 ])
        (nil)))
(insn 49 48 50 5 (set (reg:DI 1 dx)
        (reg:DI 110)) "../src/io.f":384 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 110)
        (nil)))
(insn 50 49 51 5 (set (reg:DI 4 si)
        (reg:DI 109)) "../src/io.f":384 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 109)
        (nil)))
(insn 51 50 52 5 (set (reg:DI 5 di)
        (reg:DI 108)) "../src/io.f":384 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 108)
        (nil)))
(call_insn 52 51 55 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memcpy") [flags 0x41]  <function_decl 0x14386f300 __builtin_memcpy>) [0 __builtin_memcpy S1 A8])
            (const_int 0 [0]))) "../src/io.f":384 665 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 55 52 56 5 (set (reg:DI 93 [ _7 ])
        (sign_extend:DI (reg:SI 97 [ _17 ]))) "../src/io.f":384 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 97 [ _17 ])
        (nil)))
(insn 56 55 57 5 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 93 [ _7 ])
            (const_int 1 [0x1]))) "../src/io.f":384 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg:DI 93 [ _7 ])
        (nil)))
(jump_insn 57 56 58 5 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 77)
            (pc))) "../src/io.f":384 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (nil))
 -> 77)
;;  succ:       6 (FALLTHRU)
;;              8
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 98

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 8, flags: (RTL)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 98
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 98
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 94 113
(note 58 57 59 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 59 58 60 6 (set (reg/f:DI 113)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [10 arg+0 S8 A64])) "../src/io.f":384 81 {*movdi_internal}
     (nil))
(insn 60 59 61 6 (parallel [
            (set (reg/f:DI 94 [ _8 ])
                (plus:DI (reg/f:DI 113)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":384 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 113)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -32 [0xffffffffffffffe0])) [10 arg+0 S8 A64])
                    (const_int 1 [0x1]))
                (nil)))))
(insn 61 60 62 6 (set (reg:DI 1 dx)
        (reg:DI 98 [ _18 ])) "../src/io.f":384 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 98 [ _18 ])
        (nil)))
(insn 62 61 63 6 (set (reg:SI 4 si)
        (const_int 32 [0x20])) "../src/io.f":384 82 {*movsi_internal}
     (nil))
(insn 63 62 64 6 (set (reg:DI 5 di)
        (reg/f:DI 94 [ _8 ])) "../src/io.f":384 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 94 [ _8 ])
        (nil)))
(call_insn 64 63 71 6 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memset") [flags 0x41]  <function_decl 0x14386f600 __builtin_memset>) [0 __builtin_memset S1 A8])
            (const_int 0 [0]))) "../src/io.f":384 665 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 71 64 77 6 (const_int 0 [0]) "../src/io.f":387 682 {nop}
     (nil))
;;  succ:       8 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 7, flags: (RTL)
;;  pred:       4
;;              3 [100.0%] 
;;              6 [100.0%]  (FALLTHRU)
;;              5
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 77 71 76 8 117 (nil) [3 uses])
(note 76 77 78 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 78 76 69 8 (const_int 0 [0]) "../src/io.f":387 682 {nop}
     (nil))
;;  succ:       7 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 1, flags: (RTL)
;;  pred:       8 [100.0%]  (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 69 78 70 7 113 (nil) [0 uses])
(note 70 69 0 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function strip (strip_, funcdef_no=7, decl_uid=3722, cgraph_uid=7, symbol_order=7)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 26 n_edges 33 count 26 (    1)
;; 5 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 21 6 22 7 8 9 10 23 11 24 12 13 14 15 25 16 17 18 19 20
;;
;; Loop 2
;;  header 7, latch 19
;;  depth 1, outer 0
;;  nodes: 7 19 16 18 17 25 13 14 12 15 24 9 8 10
;;
;; Loop 4
;;  header 13, latch 15
;;  depth 2, outer 2
;;  nodes: 13 15 14
;;
;; Loop 3
;;  header 8, latch 10
;;  depth 2, outer 2
;;  nodes: 8 10 9
;;
;; Loop 1
;;  header 3, latch 5
;;  depth 1, outer 0
;;  nodes: 3 5 4
;; 2 succs { 3 }
;; 3 succs { 21 4 }
;; 4 succs { 22 5 }
;; 5 succs { 3 }
;; 21 succs { 6 }
;; 6 succs { 20 }
;; 22 succs { 7 }
;; 7 succs { 8 }
;; 8 succs { 23 9 }
;; 9 succs { 24 10 }
;; 10 succs { 8 }
;; 23 succs { 11 }
;; 11 succs { 20 }
;; 24 succs { 12 }
;; 12 succs { 13 }
;; 13 succs { 25 14 }
;; 14 succs { 25 15 }
;; 15 succs { 13 }
;; 25 succs { 16 }
;; 16 succs { 17 19 }
;; 17 succs { 18 19 }
;; 18 succs { 19 }
;; 19 succs { 7 }
;; 20 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 153.
verify found no changes in insn with uid = 172.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r179: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r179,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r178: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r178,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r177: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r177,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r176: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r176,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r175: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r175,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r174: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r174,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r173: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r173,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r172: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r172,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r171: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r171,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r170: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r170,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r169: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r169,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r168: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r168,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r167: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r167,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r166: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r166,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r165: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a31 (r165,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r164: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a35 (r164,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r162: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a41 (r162,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r161: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a43 (r161,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r160: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a45 (r160,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r159: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a44 (r159,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r156: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a48 (r156,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r155: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a51 (r155,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r154: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a50 (r154,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r153: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a49 (r153,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r152: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a54 (r152,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r151: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a55 (r151,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r150: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a58 (r150,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r149: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a61 (r149,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r148: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a60 (r148,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r147: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a59 (r147,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r146: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a63 (r146,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r145: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a64 (r145,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r144: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a65 (r144,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a68 (r143,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a70 (r142,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a72 (r141,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a71 (r140,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a74 (r138,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a77 (r137,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a78 (r136,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a80 (r135,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a83 (r133,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r132: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r132,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r131: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r131,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r129: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a38 (r129,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r128: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a34 (r128,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r127: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a52 (r127,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r126: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a46 (r126,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r125: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a53 (r125,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r124: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a62 (r124,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r123: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a56 (r123,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a73 (r121,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r120: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a75 (r120,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a79 (r119,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r114,l0) best DIREG, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r112: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r112,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r111: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r111,l0) best DREG, allocno GENERAL_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a18 (r106,l0) best DIREG, allocno GENERAL_REGS
    r105: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a19 (r105,l0) best SIREG, allocno GENERAL_REGS
    r104: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a20 (r104,l0) best DREG, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a33 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a36 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a37 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a39 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a40 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a42 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a47 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a57 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a66 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a67 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a69 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a76 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a81 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a82 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r179,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a1(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:8
  a2(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a3(r178,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a4(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a5(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a6(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a7(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a8(r131,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:40 NO_REX_SSE_REGS:40 SSE_REGS:40 MMX_REGS:65 INT_SSE_REGS:45 ALL_REGS:1040 MEM:16
  a9(r177,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a10(r176,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a11(r174,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a12(r175,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a13(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a14(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a15(r132,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:40 NO_REX_SSE_REGS:40 SSE_REGS:40 MMX_REGS:65 INT_SSE_REGS:45 ALL_REGS:1040 MEM:17
  a16(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a17(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a18(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a19(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a20(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a21(r173,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a22(r172,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a23(r170,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a24(r171,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a25(r169,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a26(r168,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a27(r166,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a28(r167,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a29(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:39 INT_SSE_REGS:27 ALL_REGS:624 MEM:10
  a30(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:39 INT_SSE_REGS:27 ALL_REGS:624 MEM:10
  a31(r165,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a32(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:39 INT_SSE_REGS:27 ALL_REGS:624 MEM:10
  a33(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a34(r128,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:8
  a35(r164,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a36(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:39 INT_SSE_REGS:27 ALL_REGS:624 MEM:10
  a37(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a38(r129,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 CLOBBERED_REGS:2 Q_REGS:2 NON_Q_REGS:2 TLS_GOTBASE_REGS:2 GENERAL_REGS:2 SSE_FIRST_REG:26 NO_REX_SSE_REGS:26 SSE_REGS:26 MMX_REGS:40 INT_SSE_REGS:29 ALL_REGS:522 MEM:14
  a39(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a40(r96,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 CLOBBERED_REGS:2 Q_REGS:2 NON_Q_REGS:2 TLS_GOTBASE_REGS:2 GENERAL_REGS:2 SSE_FIRST_REG:18 NO_REX_SSE_REGS:18 SSE_REGS:18 MMX_REGS:28 INT_SSE_REGS:20 ALL_REGS:418 MEM:9
  a41(r162,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a42(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a43(r161,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a44(r159,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:8
  a45(r160,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a46(r126,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a47(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7
  a48(r156,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:8
  a49(r153,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a50(r154,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a51(r155,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a52(r127,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7
  a53(r125,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a54(r152,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a55(r151,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a56(r123,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a57(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7
  a58(r150,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:8
  a59(r147,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a60(r148,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a61(r149,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a62(r124,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7
  a63(r146,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a64(r145,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a65(r144,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a66(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a67(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a68(r143,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a69(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7
  a70(r142,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:8
  a71(r140,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a72(r141,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a73(r121,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a74(r138,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a75(r120,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7
  a76(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a77(r137,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a78(r136,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a79(r119,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a80(r135,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a81(r88,l0) costs: AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:2
  a82(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a83(r133,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7

   Insn 192(l0): point = 1
   Insn 206(l0): point = 4
   Insn 57(l0): point = 7
   Insn 56(l0): point = 9
   Insn 55(l0): point = 11
   Insn 196(l0): point = 14
   Insn 179(l0): point = 16
   Insn 178(l0): point = 18
   Insn 177(l0): point = 20
   Insn 176(l0): point = 22
   Insn 175(l0): point = 24
   Insn 134(l0): point = 27
   Insn 133(l0): point = 29
   Insn 132(l0): point = 31
   Insn 130(l0): point = 33
   Insn 131(l0): point = 35
   Insn 129(l0): point = 37
   Insn 128(l0): point = 39
   Insn 127(l0): point = 41
   Insn 125(l0): point = 43
   Insn 126(l0): point = 45
   Insn 124(l0): point = 47
   Insn 123(l0): point = 49
   Insn 120(l0): point = 51
   Insn 119(l0): point = 53
   Insn 118(l0): point = 55
   Insn 117(l0): point = 57
   Insn 116(l0): point = 59
   Insn 115(l0): point = 61
   Insn 114(l0): point = 63
   Insn 113(l0): point = 65
   Insn 112(l0): point = 67
   Insn 111(l0): point = 69
   Insn 110(l0): point = 71
   Insn 212(l0): point = 74
   Insn 91(l0): point = 77
   Insn 90(l0): point = 79
   Insn 89(l0): point = 81
   Insn 88(l0): point = 83
   Insn 86(l0): point = 86
   Insn 85(l0): point = 88
   Insn 84(l0): point = 90
   Insn 83(l0): point = 92
   Insn 82(l0): point = 94
   Insn 209(l0): point = 97
   Insn 70(l0): point = 100
   Insn 69(l0): point = 102
   Insn 68(l0): point = 104
   Insn 67(l0): point = 106
   Insn 66(l0): point = 108
   Insn 65(l0): point = 110
   Insn 64(l0): point = 112
   Insn 62(l0): point = 115
   Insn 61(l0): point = 117
   Insn 60(l0): point = 119
   Insn 59(l0): point = 121
   Insn 190(l0): point = 124
   Insn 72(l0): point = 126
   Insn 194(l0): point = 129
   Insn 101(l0): point = 131
   Insn 99(l0): point = 134
   Insn 98(l0): point = 136
   Insn 97(l0): point = 138
   Insn 96(l0): point = 140
   Insn 95(l0): point = 142
   Insn 94(l0): point = 144
   Insn 93(l0): point = 146
   Insn 172(l0): point = 149
   Insn 171(l0): point = 151
   Insn 170(l0): point = 153
   Insn 169(l0): point = 155
   Insn 168(l0): point = 157
   Insn 167(l0): point = 159
   Insn 166(l0): point = 161
   Insn 165(l0): point = 163
   Insn 164(l0): point = 165
   Insn 163(l0): point = 167
   Insn 162(l0): point = 169
   Insn 161(l0): point = 171
   Insn 160(l0): point = 173
   Insn 159(l0): point = 175
   Insn 157(l0): point = 178
   Insn 156(l0): point = 180
   Insn 155(l0): point = 182
   Insn 154(l0): point = 184
   Insn 153(l0): point = 186
   Insn 152(l0): point = 188
   Insn 151(l0): point = 190
   Insn 150(l0): point = 192
   Insn 149(l0): point = 194
   Insn 148(l0): point = 196
   Insn 147(l0): point = 198
   Insn 146(l0): point = 200
   Insn 145(l0): point = 202
   Insn 144(l0): point = 204
   Insn 143(l0): point = 206
   Insn 142(l0): point = 208
   Insn 141(l0): point = 210
   Insn 140(l0): point = 212
   Insn 139(l0): point = 214
   Insn 138(l0): point = 216
   Insn 137(l0): point = 218
   Insn 136(l0): point = 220
   Insn 203(l0): point = 223
   Insn 188(l0): point = 226
   Insn 50(l0): point = 228
   Insn 49(l0): point = 230
   Insn 200(l0): point = 233
   Insn 26(l0): point = 236
   Insn 25(l0): point = 238
   Insn 24(l0): point = 240
   Insn 23(l0): point = 242
   Insn 22(l0): point = 244
   Insn 21(l0): point = 246
   Insn 186(l0): point = 249
   Insn 43(l0): point = 251
   Insn 42(l0): point = 253
   Insn 41(l0): point = 255
   Insn 40(l0): point = 257
   Insn 39(l0): point = 259
   Insn 37(l0): point = 262
   Insn 36(l0): point = 264
   Insn 35(l0): point = 266
   Insn 34(l0): point = 268
   Insn 33(l0): point = 270
   Insn 32(l0): point = 272
   Insn 29(l0): point = 274
   Insn 28(l0): point = 276
   Insn 19(l0): point = 279
   Insn 18(l0): point = 281
   Insn 17(l0): point = 283
   Insn 16(l0): point = 285
   Insn 15(l0): point = 287
   Insn 11(l0): point = 289
   Insn 10(l0): point = 291
   Insn 9(l0): point = 293
   Insn 8(l0): point = 295
   Insn 4(l0): point = 297
   Insn 3(l0): point = 299
   Insn 2(l0): point = 301
 a0(r179): [17..18]
 a1(r116): [17..20]
 a2(r115): [21..22]
 a3(r178): [23..24]
 a4(r114): [152..157]
 a5(r111): [156..171]
 a6(r113): [158..159]
 a7(r112): [158..161]
 a8(r131): [160..222] [27..41]
 a9(r177): [162..163]
 a10(r176): [162..165]
 a11(r174): [166..167]
 a12(r175): [168..169]
 a13(r110): [172..173]
 a14(r109): [172..175]
 a15(r132): [176..222] [27..31]
 a16(r108): [181..182]
 a17(r107): [181..184]
 a18(r106): [189..194]
 a19(r105): [191..204]
 a20(r104): [193..214]
 a21(r173): [195..196]
 a22(r172): [195..198]
 a23(r170): [199..200]
 a24(r171): [201..202]
 a25(r169): [205..206]
 a26(r168): [205..208]
 a27(r166): [209..210]
 a28(r167): [211..212]
 a29(r103): [215..218]
 a30(r102): [215..220]
 a31(r165): [32..35]
 a32(r101): [32..37]
 a33(r100): [38..39]
 a34(r128): [40..61]
 a35(r164): [42..45]
 a36(r99): [42..47]
 a37(r98): [48..49]
 a38(r129): [50..57]
 a39(r97): [52..53]
 a40(r96): [54..55]
 a41(r162): [58..59]
 a42(r95): [62..63]
 a43(r161): [64..65]
 a44(r159): [68..69]
 a45(r160): [70..71]
 a46(r126): [129..148] [77..88]
 a47(r94): [137..138]
 a48(r156): [139..140]
 a49(r153): [139..146]
 a50(r154): [141..142]
 a51(r155): [143..144]
 a52(r127): [80..81]
 a53(r125): [87..92]
 a54(r152): [89..90]
 a55(r151): [93..94]
 a56(r123): [100..128] [7..9]
 a57(r93): [103..104]
 a58(r150): [105..106]
 a59(r147): [105..112]
 a60(r148): [107..108]
 a61(r149): [109..110]
 a62(r124): [118..119]
 a63(r146): [10..11]
 a64(r145): [229..230]
 a65(r144): [252..253]
 a66(r92): [252..255]
 a67(r91): [256..257]
 a68(r143): [258..259]
 a69(r90): [265..266]
 a70(r142): [267..268]
 a71(r140): [267..272]
 a72(r141): [269..270]
 a73(r121): [271..274]
 a74(r138): [275..276]
 a75(r120): [239..240]
 a76(r89): [243..244]
 a77(r137): [245..246]
 a78(r136): [280..281]
 a79(r119): [280..283]
 a80(r135): [286..287]
 a81(r88 [0]): [290..303]
 a81(r88 [1]): [289..303]
 a82(r87): [292..293]
 a83(r133): [294..295]
Compressing live ranges: from 304 to 126 - 41%
Ranges after the compression:
 a0(r179): [4..5]
 a1(r116): [4..5]
 a2(r115): [6..7]
 a3(r178): [8..9]
 a4(r114): [62..63]
 a5(r111): [62..73]
 a6(r113): [64..65]
 a7(r112): [64..67]
 a8(r131): [66..93] [10..17]
 a9(r177): [68..69]
 a10(r176): [68..69]
 a11(r174): [70..71]
 a12(r175): [72..73]
 a13(r110): [74..75]
 a14(r109): [74..75]
 a15(r132): [76..93] [10..11]
 a16(r108): [76..77]
 a17(r107): [76..77]
 a18(r106): [78..79]
 a19(r105): [78..85]
 a20(r104): [78..91]
 a21(r173): [80..81]
 a22(r172): [80..81]
 a23(r170): [82..83]
 a24(r171): [84..85]
 a25(r169): [86..87]
 a26(r168): [86..87]
 a27(r166): [88..89]
 a28(r167): [90..91]
 a29(r103): [92..93]
 a30(r102): [92..93]
 a31(r165): [12..13]
 a32(r101): [12..13]
 a33(r100): [14..15]
 a34(r128): [16..27]
 a35(r164): [18..19]
 a36(r99): [18..19]
 a37(r98): [20..21]
 a38(r129): [22..25]
 a39(r97): [22..23]
 a40(r96): [24..25]
 a41(r162): [26..27]
 a42(r95): [28..29]
 a43(r161): [30..31]
 a44(r159): [32..33]
 a45(r160): [34..35]
 a46(r126): [54..61] [36..39]
 a47(r94): [54..55]
 a48(r156): [56..57]
 a49(r153): [56..61]
 a50(r154): [58..59]
 a51(r155): [60..61]
 a52(r127): [36..37]
 a53(r125): [38..41]
 a54(r152): [40..41]
 a55(r151): [42..43]
 a56(r123): [44..53] [0..1]
 a57(r93): [44..45]
 a58(r150): [46..47]
 a59(r147): [46..51]
 a60(r148): [48..49]
 a61(r149): [50..51]
 a62(r124): [52..53]
 a63(r146): [2..3]
 a64(r145): [94..95]
 a65(r144): [102..103]
 a66(r92): [102..103]
 a67(r91): [104..105]
 a68(r143): [106..107]
 a69(r90): [108..109]
 a70(r142): [110..111]
 a71(r140): [110..115]
 a72(r141): [112..113]
 a73(r121): [114..115]
 a74(r138): [116..117]
 a75(r120): [96..97]
 a76(r89): [98..99]
 a77(r137): [100..101]
 a78(r136): [118..119]
 a79(r119): [118..119]
 a80(r135): [120..121]
 a81(r88 [0]): [122..125]
 a81(r88 [1]): [122..125]
 a82(r87): [122..123]
 a83(r133): [124..125]
  regions=1, blocks=26, points=126
    allocnos=84 (big 1), copies=0, conflicts=0, ranges=89
Disposition:
   82:r87  l0     0   81:r88  l0     2   76:r89  l0     0   69:r90  l0     0
   67:r91  l0     0   66:r92  l0     1   57:r93  l0     1   47:r94  l0     1
   42:r95  l0     0   40:r96  l0     2   39:r97  l0     2   37:r98  l0     0
   36:r99  l0     0   33:r100 l0     0   32:r101 l0     0   30:r102 l0     1
   29:r103 l0     0   20:r104 l0     0   19:r105 l0     4   18:r106 l0     2
   17:r107 l0     1   16:r108 l0     0   14:r109 l0     1   13:r110 l0     0
    5:r111 l0     1    7:r112 l0     2    6:r113 l0     0    4:r114 l0     0
    2:r115 l0     0    1:r116 l0     1   79:r119 l0     1   75:r120 l0     0
   73:r121 l0     0   56:r123 l0     0   62:r124 l0     1   53:r125 l0     1
   46:r126 l0     0   52:r127 l0     1   34:r128 l0     1   38:r129 l0     0
    8:r131 l0    41   15:r132 l0     3   83:r133 l0     0   80:r135 l0     0
   78:r136 l0     0   77:r137 l0     0   74:r138 l0     0   71:r140 l0     1
   72:r141 l0     0   70:r142 l0     0   68:r143 l0     0   65:r144 l0     0
   64:r145 l0     0   63:r146 l0     0   59:r147 l0     2   60:r148 l0     1
   61:r149 l0     1   58:r150 l0     1   55:r151 l0     0   54:r152 l0     0
   49:r153 l0     2   50:r154 l0     1   51:r155 l0     1   48:r156 l0     1
   44:r159 l0     0   45:r160 l0     0   43:r161 l0     0   41:r162 l0     0
   35:r164 l0     2   31:r165 l0     1   27:r166 l0     1   28:r167 l0     1
   26:r168 l0     2   25:r169 l0     1   23:r170 l0     1   24:r171 l0     1
   22:r172 l0     2   21:r173 l0     1   11:r174 l0     0   12:r175 l0     0
   10:r176 l0     2    9:r177 l0     0    3:r178 l0     0    0:r179 l0     0
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


strip

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags]
;;  ref usage 	r0={3d} r1={5d,3u} r2={3d} r4={5d,3u} r5={5d,3u} r6={1d,25u} r7={1d,27u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,24u} r17={41d,14u} r18={2d} r19={2d} r20={1d,72u,11e} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r87={1d,1u} r88={2d,2u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,2u} r100={1d,1u} r101={1d,2u} r102={1d,2u} r103={1d,2u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,1u} r127={1d,1u} r128={1d,1u} r129={1d,2u} r131={1d,4u} r132={1d,4u} r133={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r164={1d,1u} r165={1d,1u} r166={1d,1u} r167={1d,1u} r168={1d,1u,1e} r169={1d,1u} r170={1d,1u} r171={1d,1u} r172={1d,1u,1e} r173={1d,1u} r174={1d,1u} r175={1d,1u} r176={1d,1u,1e} r177={1d,1u} r178={1d,1u} r179={1d,1u} 
;;    total ref usage 574{293d,267u,14e} in 140{138 regular + 2 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88
;; lr  def 	 87 119 133 135 136
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [10 string+0 S8 A64])
        (reg:DI 5 di [ string ])) "../src/io.f":392 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ string ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [11 ns+0 S8 A64])
        (reg:DI 4 si [ ns ])) "../src/io.f":392 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ ns ])
        (nil)))
(insn 4 3 5 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -36 [0xffffffffffffffdc])) [1 _string+0 S4 A32])
        (reg:SI 1 dx [ _string ])) "../src/io.f":392 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [ _string ])
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg:SI 133)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -36 [0xffffffffffffffdc])) [1 _string+0 S4 A32])) "../src/io.f":431 82 {*movsi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 87 [ _1 ])
        (sign_extend:DI (reg:SI 133))) "../src/io.f":431 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 133)
        (nil)))
(insn 10 9 11 2 (set (subreg:DI (reg:TI 88 [ _2 ]) 0)
        (reg:DI 87 [ _1 ])) "../src/io.f":431 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 87 [ _1 ])
        (nil)))
(insn 11 10 15 2 (set (subreg:DI (reg:TI 88 [ _2 ]) 8)
        (const_int 0 [0])) "../src/io.f":431 81 {*movdi_internal}
     (expr_list:REG_UNUSED (reg:TI 88 [ _2 ])
        (nil)))
(insn 15 11 16 2 (set (reg:SI 135)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -36 [0xffffffffffffffdc])) [1 _string+0 S4 A32])) "../src/io.f":399 82 {*movsi_internal}
     (nil))
(insn 16 15 17 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 n+0 S4 A32])
        (reg:SI 135)) "../src/io.f":399 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 135)
        (nil)))
(insn 17 16 18 2 (set (reg:SI 119 [ _41 ])
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 n+0 S4 A32])) "../src/io.f":402 82 {*movsi_internal}
     (nil))
(insn 18 17 19 2 (set (reg/f:DI 136)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [11 ns+0 S8 A64])) "../src/io.f":402 81 {*movdi_internal}
     (nil))
(insn 19 18 44 2 (set (mem:SI (reg/f:DI 136) [1 *ns_43(D)+0 S4 A32])
        (reg:SI 119 [ _41 ])) "../src/io.f":402 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 136)
        (expr_list:REG_DEAD (reg:SI 119 [ _41 ])
            (nil))))
;;  succ:       3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 (FALLTHRU)
;;              5 [100.0%] 
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 89 120 137
(code_label 44 19 20 3 121 (nil) [1 uses])
(note 20 44 21 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 22 3 (set (reg/f:DI 137)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [11 ns+0 S8 A64])) "../src/io.f":402 81 {*movdi_internal}
     (nil))
(insn 22 21 23 3 (set (reg:SI 89 [ _3 ])
        (mem:SI (reg/f:DI 137) [1 *ns_43(D)+0 S4 A32])) "../src/io.f":402 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 137)
        (nil)))
(insn 23 22 24 3 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 89 [ _3 ])
            (const_int 0 [0]))) "../src/io.f":402 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 89 [ _3 ])
        (nil)))
(insn 24 23 25 3 (set (reg:QI 120 [ _45 ])
        (le:QI (reg:CCNO 17 flags)
            (const_int 0 [0]))) "../src/io.f":402 613 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (nil)))
(insn 25 24 26 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 120 [ _45 ])
            (const_int 0 [0]))) "../src/io.f":402 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 120 [ _45 ])
        (nil)))
(jump_insn 26 25 27 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 199)
            (pc))) "../src/io.f":402 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 199)
;;  succ:       21
;;              4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 90 121 138 140 141 142
(note 27 26 28 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 29 4 (set (reg/f:DI 138)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [11 ns+0 S8 A64])) "../src/io.f":403 81 {*movdi_internal}
     (nil))
(insn 29 28 32 4 (set (reg:SI 121 [ _46 ])
        (mem:SI (reg/f:DI 138) [1 *ns_43(D)+0 S4 A32])) "../src/io.f":403 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 138)
        (nil)))
(insn 32 29 33 4 (set (reg/f:DI 140)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [10 string+0 S8 A64])) "../src/io.f":403 81 {*movdi_internal}
     (nil))
(insn 33 32 34 4 (parallel [
            (set (reg:SI 141)
                (plus:SI (reg:SI 121 [ _46 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":403 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 121 [ _46 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 34 33 35 4 (set (reg:DI 142)
        (sign_extend:DI (reg:SI 141))) "../src/io.f":403 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 141)
        (nil)))
(insn 35 34 36 4 (set (reg:QI 90 [ _4 ])
        (mem:QI (plus:DI (reg/f:DI 140)
                (reg:DI 142)) [2 *string_48(D) S1 A8])) "../src/io.f":403 84 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 142)
        (expr_list:REG_DEAD (reg/f:DI 140)
            (nil))))
(insn 36 35 37 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 90 [ _4 ])
            (const_int 32 [0x20]))) "../src/io.f":403 5 {*cmpqi_1}
     (expr_list:REG_DEAD (reg:QI 90 [ _4 ])
        (nil)))
(jump_insn 37 36 38 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 202)
            (pc))) "../src/io.f":403 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 202)
;;  succ:       22
;;              5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 21, flags: (RTL)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 91 92 143 144
(note 38 37 39 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 40 5 (set (reg/f:DI 143)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [11 ns+0 S8 A64])) "../src/io.f":402 81 {*movdi_internal}
     (nil))
(insn 40 39 41 5 (set (reg:SI 91 [ _5 ])
        (mem:SI (reg/f:DI 143) [1 *ns_43(D)+0 S4 A32])) "../src/io.f":402 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 143)
        (nil)))
(insn 41 40 42 5 (parallel [
            (set (reg:SI 92 [ _6 ])
                (plus:SI (reg:SI 91 [ _5 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":402 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 91 [ _5 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 42 41 43 5 (set (reg/f:DI 144)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [11 ns+0 S8 A64])) "../src/io.f":402 81 {*movdi_internal}
     (nil))
(insn 43 42 186 5 (set (mem:SI (reg/f:DI 144) [1 *ns_43(D)+0 S4 A32])
        (reg:SI 92 [ _6 ])) "../src/io.f":402 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 144)
        (expr_list:REG_DEAD (reg:SI 92 [ _6 ])
            (nil))))
(jump_insn 186 43 187 5 (set (pc)
        (label_ref 44)) "../src/io.f":402 649 {jump}
     (nil)
 -> 44)
;;  succ:       3 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 187 186 199)
;; basic block 21, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 6, flags: (RTL)
;;  pred:       3
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 199 187 198 21 129 (nil) [1 uses])
(note 198 199 200 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 200 198 47 21 (const_int 0 [0]) "../src/io.f":403 682 {nop}
     (nil))
;;  succ:       6 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 21, next block 22, flags: (RTL)
;;  pred:       21 [100.0%]  (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 145
(code_label 47 200 48 6 119 (nil) [0 uses])
(note 48 47 49 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 49 48 50 6 (set (reg/f:DI 145)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [11 ns+0 S8 A64])) "../src/io.f":405 81 {*movdi_internal}
     (nil))
(insn 50 49 188 6 (set (mem:SI (reg/f:DI 145) [1 *ns_43(D)+0 S4 A32])
        (const_int 0 [0])) "../src/io.f":405 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 145)
        (nil)))
(jump_insn 188 50 189 6 (set (pc)
        (label_ref 184)) "../src/io.f":406 649 {jump}
     (nil)
 -> 184)
;;  succ:       20 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 189 188 202)
;; basic block 22, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 7, flags: (RTL)
;;  pred:       4
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 202 189 201 22 130 (nil) [1 uses])
(note 201 202 203 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 203 201 53 22 (const_int 0 [0]) "../src/io.f":406 682 {nop}
     (nil))
;;  succ:       7 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 22, next block 8, flags: (RTL)
;;  pred:       22 [100.0%]  (FALLTHRU)
;;              19 [100.0%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 123 146
(code_label 53 203 54 7 120 (nil) [1 uses])
(note 54 53 55 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 55 54 56 7 (set (reg/f:DI 146)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [11 ns+0 S8 A64])) "../src/io.f":412 81 {*movdi_internal}
     (nil))
(insn 56 55 57 7 (set (reg:SI 123 [ _50 ])
        (mem:SI (reg/f:DI 146) [1 *ns_43(D)+0 S4 A32])) "../src/io.f":412 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 146)
        (nil)))
(insn 57 56 73 7 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 k0+0 S4 A32])
        (const_int 1 [0x1])) "../src/io.f":412 82 {*movsi_internal}
     (nil))
;;  succ:       8 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (RTL)
;;  pred:       7 (FALLTHRU)
;;              10 [100.0%] 
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123
;; lr  def 	 17 [flags] 124
(code_label 73 57 58 8 125 (nil) [1 uses])
(note 58 73 59 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 59 58 60 8 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [1 k0+0 S4 A32])
            (reg:SI 123 [ _50 ]))) "../src/io.f":412 7 {*cmpsi_1}
     (nil))
(insn 60 59 61 8 (set (reg:QI 124 [ _52 ])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "../src/io.f":412 613 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil)))
(insn 61 60 62 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 124 [ _52 ])
            (const_int 0 [0]))) "../src/io.f":412 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 124 [ _52 ])
        (nil)))
(jump_insn 62 61 63 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 205)
            (pc))) "../src/io.f":412 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 205)
;;  succ:       23
;;              9 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (RTL)
;;  pred:       8 (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 93 147 148 149 150
(note 63 62 64 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 64 63 65 9 (set (reg/f:DI 147)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [10 string+0 S8 A64])) "../src/io.f":413 81 {*movdi_internal}
     (nil))
(insn 65 64 66 9 (set (reg:SI 149)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 k0+0 S4 A32])) "../src/io.f":413 82 {*movsi_internal}
     (nil))
(insn 66 65 67 9 (parallel [
            (set (reg:SI 148)
                (plus:SI (reg:SI 149)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":413 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 149)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 k0+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff]))
                (nil)))))
(insn 67 66 68 9 (set (reg:DI 150)
        (sign_extend:DI (reg:SI 148))) "../src/io.f":413 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 148)
        (nil)))
(insn 68 67 69 9 (set (reg:QI 93 [ _7 ])
        (mem:QI (plus:DI (reg/f:DI 147)
                (reg:DI 150)) [2 *string_48(D) S1 A8])) "../src/io.f":413 84 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 150)
        (expr_list:REG_DEAD (reg/f:DI 147)
            (nil))))
(insn 69 68 70 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 93 [ _7 ])
            (const_int 32 [0x20]))) "../src/io.f":413 5 {*cmpqi_1}
     (expr_list:REG_DEAD (reg:QI 93 [ _7 ])
        (nil)))
(jump_insn 70 69 71 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 208)
            (pc))) "../src/io.f":413 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 208)
;;  succ:       24
;;              10 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 23, flags: (RTL)
;;  pred:       9 (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 71 70 72 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 72 71 190 10 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -4 [0xfffffffffffffffc])) [1 k0+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 k0+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":412 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 190 72 191 10 (set (pc)
        (label_ref 73)) "../src/io.f":412 649 {jump}
     (nil)
 -> 73)
;;  succ:       8 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123

(barrier 191 190 205)
;; basic block 23, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 11, flags: (RTL)
;;  pred:       8
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 205 191 204 23 131 (nil) [1 uses])
(note 204 205 206 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 206 204 76 23 (const_int 0 [0]) "../src/io.f":413 682 {nop}
     (nil))
;;  succ:       11 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 23, next block 24, flags: (RTL)
;;  pred:       23 [100.0%]  (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 76 206 77 11 123 (nil) [0 uses])
(note 77 76 192 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(jump_insn 192 77 193 11 (set (pc)
        (label_ref 184)) "../src/io.f":415 649 {jump}
     (nil)
 -> 184)
;;  succ:       20 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 193 192 208)
;; basic block 24, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 12, flags: (RTL)
;;  pred:       9
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 208 193 207 24 132 (nil) [1 uses])
(note 207 208 209 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 209 207 80 24 (const_int 0 [0]) "../src/io.f":415 682 {nop}
     (nil))
;;  succ:       12 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 24, next block 13, flags: (RTL)
;;  pred:       24 [100.0%]  (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 125 126 151 152
(code_label 80 209 81 12 124 (nil) [0 uses])
(note 81 80 82 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 82 81 83 12 (set (reg:SI 151)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 k0+0 S4 A32])) "../src/io.f":419 82 {*movsi_internal}
     (nil))
(insn 83 82 84 12 (parallel [
            (set (reg:SI 125 [ _54 ])
                (plus:SI (reg:SI 151)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":419 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 151)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 k0+0 S4 A32])
                    (const_int 1 [0x1]))
                (nil)))))
(insn 84 83 85 12 (set (reg/f:DI 152)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [11 ns+0 S8 A64])) "../src/io.f":419 81 {*movdi_internal}
     (nil))
(insn 85 84 86 12 (set (reg:SI 126 [ _55 ])
        (mem:SI (reg/f:DI 152) [1 *ns_43(D)+0 S4 A32])) "../src/io.f":419 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 152)
        (nil)))
(insn 86 85 102 12 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 k1+0 S4 A32])
        (reg:SI 125 [ _54 ])) "../src/io.f":419 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 125 [ _54 ])
        (nil)))
;;  succ:       13 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 126

;; basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 14, flags: (RTL)
;;  pred:       12 (FALLTHRU)
;;              15 [100.0%] 
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 126
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 126
;; lr  def 	 17 [flags] 127
(code_label 102 86 87 13 127 (nil) [1 uses])
(note 87 102 88 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 88 87 89 13 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 k1+0 S4 A32])
            (reg:SI 126 [ _55 ]))) "../src/io.f":419 7 {*cmpsi_1}
     (nil))
(insn 89 88 90 13 (set (reg:QI 127 [ _57 ])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "../src/io.f":419 613 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil)))
(insn 90 89 91 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 127 [ _57 ])
            (const_int 0 [0]))) "../src/io.f":419 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 127 [ _57 ])
        (nil)))
(jump_insn 91 90 92 13 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 211)
            (pc))) "../src/io.f":419 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 211)
;;  succ:       25
;;              14 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 126

;; basic block 14, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 13, next block 15, flags: (RTL)
;;  pred:       13 (FALLTHRU)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 126
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 94 153 154 155 156
(note 92 91 93 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 93 92 94 14 (set (reg/f:DI 153)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [10 string+0 S8 A64])) "../src/io.f":420 81 {*movdi_internal}
     (nil))
(insn 94 93 95 14 (set (reg:SI 155)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 k1+0 S4 A32])) "../src/io.f":420 82 {*movsi_internal}
     (nil))
(insn 95 94 96 14 (parallel [
            (set (reg:SI 154)
                (plus:SI (reg:SI 155)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":420 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 155)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [1 k1+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff]))
                (nil)))))
(insn 96 95 97 14 (set (reg:DI 156)
        (sign_extend:DI (reg:SI 154))) "../src/io.f":420 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 154)
        (nil)))
(insn 97 96 98 14 (set (reg:QI 94 [ _8 ])
        (mem:QI (plus:DI (reg/f:DI 153)
                (reg:DI 156)) [2 *string_48(D) S1 A8])) "../src/io.f":420 84 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 156)
        (expr_list:REG_DEAD (reg/f:DI 153)
            (nil))))
(insn 98 97 99 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 94 [ _8 ])
            (const_int 32 [0x20]))) "../src/io.f":420 5 {*cmpqi_1}
     (expr_list:REG_DEAD (reg:QI 94 [ _8 ])
        (nil)))
(jump_insn 99 98 100 14 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 211)
            (pc))) "../src/io.f":420 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 211)
;;  succ:       25
;;              15 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 126

;; basic block 15, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 14, next block 25, flags: (RTL)
;;  pred:       14 (FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 126
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 100 99 101 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 101 100 194 15 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [1 k1+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [1 k1+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":419 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 194 101 195 15 (set (pc)
        (label_ref 102)) "../src/io.f":419 649 {jump}
     (nil)
 -> 102)
;;  succ:       13 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 126

(barrier 195 194 211)
;; basic block 25, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 15, next block 16, flags: (RTL)
;;  pred:       13
;;              14
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 211 195 210 25 133 (nil) [2 uses])
(note 210 211 212 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 212 210 105 25 (const_int 0 [0]) "../src/io.f":420 682 {nop}
     (nil))
;;  succ:       16 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 16, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 25, next block 17, flags: (RTL)
;;  pred:       25 [100.0%]  (FALLTHRU)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 95 96 97 98 99 100 101 128 129 131 132 159 160 161 162 164 165
(code_label 105 212 106 16 126 (nil) [0 uses])
(note 106 105 110 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 110 106 111 16 (set (reg:SI 160)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 k1+0 S4 A32])) "../src/io.f":425 82 {*movsi_internal}
     (nil))
(insn 111 110 112 16 (parallel [
            (set (reg:SI 159)
                (minus:SI (reg:SI 160)
                    (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 k0+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":425 273 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 160)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [1 k1+0 S4 A32])
                    (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 k0+0 S4 A32]))
                (nil)))))
(insn 112 111 113 16 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [1 nsdel+0 S4 A32])
        (reg:SI 159)) "../src/io.f":425 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 159)
        (nil)))
(insn 113 112 114 16 (set (reg/f:DI 161)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [11 ns+0 S8 A64])) "../src/io.f":426 81 {*movdi_internal}
     (nil))
(insn 114 113 115 16 (set (reg:SI 95 [ _9 ])
        (mem:SI (reg/f:DI 161) [1 *ns_43(D)+0 S4 A32])) "../src/io.f":426 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 161)
        (nil)))
(insn 115 114 116 16 (parallel [
            (set (reg:SI 128 [ _60 ])
                (minus:SI (reg:SI 95 [ _9 ])
                    (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -16 [0xfffffffffffffff0])) [1 nsdel+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":426 273 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 95 [ _9 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 116 115 117 16 (set (reg/f:DI 162)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [11 ns+0 S8 A64])) "../src/io.f":426 81 {*movdi_internal}
     (nil))
(insn 117 116 118 16 (set (reg:SI 129 [ _61 ])
        (mem:SI (reg/f:DI 162) [1 *ns_43(D)+0 S4 A32])) "../src/io.f":426 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 162)
        (nil)))
(insn 118 117 119 16 (parallel [
            (set (reg:SI 96 [ _10 ])
                (minus:SI (reg:SI 129 [ _61 ])
                    (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [1 k1+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":426 273 {*subsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 119 118 120 16 (parallel [
            (set (reg:SI 97 [ _11 ])
                (plus:SI (reg:SI 96 [ _10 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":426 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 96 [ _10 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 120 119 123 16 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 97 [ _11 ])
            (const_int 0 [0]))) "../src/io.f":426 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 97 [ _11 ])
        (expr_list:REG_UNUSED (reg:CCGOC 17 flags)
            (nil))))
(insn 123 120 124 16 (parallel [
            (set (reg:SI 98 [ _12 ])
                (minus:SI (reg:SI 129 [ _61 ])
                    (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [1 k1+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":426 273 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 129 [ _61 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 124 123 126 16 (parallel [
            (set (reg:SI 99 [ _13 ])
                (plus:SI (reg:SI 98 [ _12 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":426 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 98 [ _12 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 126 124 125 16 (set (reg:SI 164)
        (const_int 0 [0])) "../src/io.f":426 82 {*movsi_internal}
     (nil))
(insn 125 126 127 16 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 99 [ _13 ])
            (const_int 0 [0]))) "../src/io.f":426 3 {*cmpsi_ccno_1}
     (nil))
(insn 127 125 128 16 (set (reg:SI 131 [ _63 ])
        (if_then_else:SI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:SI 99 [ _13 ])
            (reg:SI 164))) "../src/io.f":426 966 {*movsicc_noc}
     (expr_list:REG_DEAD (reg:SI 164)
        (expr_list:REG_DEAD (reg:SI 99 [ _13 ])
            (expr_list:REG_DEAD (reg:CCGOC 17 flags)
                (nil)))))
(insn 128 127 129 16 (parallel [
            (set (reg:SI 100 [ _14 ])
                (minus:SI (reg:SI 128 [ _60 ])
                    (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 k0+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":426 273 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 128 [ _60 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 129 128 131 16 (parallel [
            (set (reg:SI 101 [ _15 ])
                (plus:SI (reg:SI 100 [ _14 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":426 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 100 [ _14 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 131 129 130 16 (set (reg:SI 165)
        (const_int 0 [0])) "../src/io.f":426 82 {*movsi_internal}
     (nil))
(insn 130 131 132 16 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 101 [ _15 ])
            (const_int 0 [0]))) "../src/io.f":426 3 {*cmpsi_ccno_1}
     (nil))
(insn 132 130 133 16 (set (reg:SI 132 [ _64 ])
        (if_then_else:SI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:SI 101 [ _15 ])
            (reg:SI 165))) "../src/io.f":426 966 {*movsicc_noc}
     (expr_list:REG_DEAD (reg:SI 165)
        (expr_list:REG_DEAD (reg:SI 101 [ _15 ])
            (expr_list:REG_DEAD (reg:CCGOC 17 flags)
                (nil)))))
(insn 133 132 134 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 132 [ _64 ])
            (const_int 0 [0]))) "../src/io.f":426 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 134 133 135 16 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 173)
            (pc))) "../src/io.f":426 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 173)
;;  succ:       17 (FALLTHRU)
;;              19
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 131 132

;; basic block 17, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 16, next block 18, flags: (RTL)
;;  pred:       16 (FALLTHRU)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 131 132
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 131 132
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 102 103 104 105 106 107 108 166 167 168 169 170 171 172 173
(note 135 134 136 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 136 135 137 17 (set (reg:DI 102 [ _16 ])
        (sign_extend:DI (reg:SI 132 [ _64 ]))) "../src/io.f":426 145 {*extendsidi2_rex64}
     (nil))
(insn 137 136 138 17 (set (reg:DI 103 [ _17 ])
        (sign_extend:DI (reg:SI 131 [ _63 ]))) "../src/io.f":426 145 {*extendsidi2_rex64}
     (nil))
(insn 138 137 139 17 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 102 [ _16 ])
            (reg:DI 103 [ _17 ]))) "../src/io.f":426 8 {*cmpdi_1}
     (nil))
(insn 139 138 140 17 (set (reg:DI 104 [ _18 ])
        (if_then_else:DI (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (reg:DI 102 [ _16 ])
            (reg:DI 103 [ _17 ]))) "../src/io.f":426 967 {*movdicc_noc}
     (expr_list:REG_DEAD (reg:DI 103 [ _17 ])
        (expr_list:REG_DEAD (reg:DI 102 [ _16 ])
            (expr_list:REG_DEAD (reg:CC 17 flags)
                (nil)))))
(insn 140 139 141 17 (set (reg:SI 167)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 k1+0 S4 A32])) "../src/io.f":426 82 {*movsi_internal}
     (nil))
(insn 141 140 142 17 (parallel [
            (set (reg:SI 166)
                (plus:SI (reg:SI 167)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":426 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 167)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [1 k1+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff]))
                (nil)))))
(insn 142 141 143 17 (set (reg:DI 168)
        (sign_extend:DI (reg:SI 166))) "../src/io.f":426 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 166)
        (nil)))
(insn 143 142 144 17 (set (reg/f:DI 169)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [10 string+0 S8 A64])) "../src/io.f":426 81 {*movdi_internal}
     (nil))
(insn 144 143 145 17 (parallel [
            (set (reg/f:DI 105 [ _19 ])
                (plus:DI (reg:DI 168)
                    (reg/f:DI 169)))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":426 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 169)
        (expr_list:REG_DEAD (reg:DI 168)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -24 [0xffffffffffffffe8])) [10 string+0 S8 A64])
                        (reg:DI 168))
                    (nil))))))
(insn 145 144 146 17 (set (reg:SI 171)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 k0+0 S4 A32])) "../src/io.f":426 82 {*movsi_internal}
     (nil))
(insn 146 145 147 17 (parallel [
            (set (reg:SI 170)
                (plus:SI (reg:SI 171)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":426 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 171)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 k0+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff]))
                (nil)))))
(insn 147 146 148 17 (set (reg:DI 172)
        (sign_extend:DI (reg:SI 170))) "../src/io.f":426 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 170)
        (nil)))
(insn 148 147 149 17 (set (reg/f:DI 173)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [10 string+0 S8 A64])) "../src/io.f":426 81 {*movdi_internal}
     (nil))
(insn 149 148 150 17 (parallel [
            (set (reg/f:DI 106 [ _20 ])
                (plus:DI (reg:DI 172)
                    (reg/f:DI 173)))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":426 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 173)
        (expr_list:REG_DEAD (reg:DI 172)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -24 [0xffffffffffffffe8])) [10 string+0 S8 A64])
                        (reg:DI 172))
                    (nil))))))
(insn 150 149 151 17 (set (reg:DI 1 dx)
        (reg:DI 104 [ _18 ])) "../src/io.f":426 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 104 [ _18 ])
        (nil)))
(insn 151 150 152 17 (set (reg:DI 4 si)
        (reg/f:DI 105 [ _19 ])) "../src/io.f":426 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 105 [ _19 ])
        (nil)))
(insn 152 151 153 17 (set (reg:DI 5 di)
        (reg/f:DI 106 [ _20 ])) "../src/io.f":426 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 106 [ _20 ])
        (nil)))
(call_insn 153 152 154 17 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memmove") [flags 0x41]  <function_decl 0x14386f400 __builtin_memmove>) [0 __builtin_memmove S1 A8])
            (const_int 0 [0]))) "../src/io.f":426 665 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 154 153 155 17 (set (reg:DI 107 [ _21 ])
        (sign_extend:DI (reg:SI 131 [ _63 ]))) "../src/io.f":426 145 {*extendsidi2_rex64}
     (nil))
(insn 155 154 156 17 (set (reg:DI 108 [ _22 ])
        (sign_extend:DI (reg:SI 132 [ _64 ]))) "../src/io.f":426 145 {*extendsidi2_rex64}
     (nil))
(insn 156 155 157 17 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 107 [ _21 ])
            (reg:DI 108 [ _22 ]))) "../src/io.f":426 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg:DI 108 [ _22 ])
        (expr_list:REG_DEAD (reg:DI 107 [ _21 ])
            (nil))))
(jump_insn 157 156 158 17 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 173)
            (pc))) "../src/io.f":426 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (nil))
 -> 173)
;;  succ:       18 (FALLTHRU)
;;              19
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 131 132

;; basic block 18, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 17, next block 19, flags: (RTL)
;;  pred:       17 (FALLTHRU)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 131 132
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 131 132
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 109 110 111 112 113 114 174 175 176 177
(note 158 157 159 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 159 158 160 18 (set (reg:DI 109 [ _23 ])
        (sign_extend:DI (reg:SI 132 [ _64 ]))) "../src/io.f":426 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 132 [ _64 ])
        (nil)))
(insn 160 159 161 18 (set (reg:DI 110 [ _24 ])
        (sign_extend:DI (reg:SI 131 [ _63 ]))) "../src/io.f":426 145 {*extendsidi2_rex64}
     (nil))
(insn 161 160 162 18 (parallel [
            (set (reg:DI 111 [ _25 ])
                (minus:DI (reg:DI 109 [ _23 ])
                    (reg:DI 110 [ _24 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":426 274 {*subdi_1}
     (expr_list:REG_DEAD (reg:DI 110 [ _24 ])
        (expr_list:REG_DEAD (reg:DI 109 [ _23 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 162 161 163 18 (set (reg:SI 175)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 k0+0 S4 A32])) "../src/io.f":426 82 {*movsi_internal}
     (nil))
(insn 163 162 164 18 (parallel [
            (set (reg:SI 174)
                (plus:SI (reg:SI 175)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":426 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 175)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 k0+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff]))
                (nil)))))
(insn 164 163 165 18 (set (reg:DI 176)
        (sign_extend:DI (reg:SI 174))) "../src/io.f":426 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 174)
        (nil)))
(insn 165 164 166 18 (set (reg/f:DI 177)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [10 string+0 S8 A64])) "../src/io.f":426 81 {*movdi_internal}
     (nil))
(insn 166 165 167 18 (parallel [
            (set (reg/f:DI 112 [ _26 ])
                (plus:DI (reg:DI 176)
                    (reg/f:DI 177)))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":426 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 177)
        (expr_list:REG_DEAD (reg:DI 176)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -24 [0xffffffffffffffe8])) [10 string+0 S8 A64])
                        (reg:DI 176))
                    (nil))))))
(insn 167 166 168 18 (set (reg:DI 113 [ _27 ])
        (sign_extend:DI (reg:SI 131 [ _63 ]))) "../src/io.f":426 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 131 [ _63 ])
        (nil)))
(insn 168 167 169 18 (parallel [
            (set (reg/f:DI 114 [ _28 ])
                (plus:DI (reg/f:DI 112 [ _26 ])
                    (reg:DI 113 [ _27 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":426 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 113 [ _27 ])
        (expr_list:REG_DEAD (reg/f:DI 112 [ _26 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 169 168 170 18 (set (reg:DI 1 dx)
        (reg:DI 111 [ _25 ])) "../src/io.f":426 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 111 [ _25 ])
        (nil)))
(insn 170 169 171 18 (set (reg:SI 4 si)
        (const_int 32 [0x20])) "../src/io.f":426 82 {*movsi_internal}
     (nil))
(insn 171 170 172 18 (set (reg:DI 5 di)
        (reg/f:DI 114 [ _28 ])) "../src/io.f":426 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 114 [ _28 ])
        (nil)))
(call_insn 172 171 173 18 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memset") [flags 0x41]  <function_decl 0x14386f600 __builtin_memset>) [0 __builtin_memset S1 A8])
            (const_int 0 [0]))) "../src/io.f":426 665 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       19 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 19, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 18, next block 20, flags: (RTL)
;;  pred:       16
;;              18 (FALLTHRU)
;;              17
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 115 116 178 179
(code_label 173 172 174 19 128 (nil) [2 uses])
(note 174 173 175 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 175 174 176 19 (set (reg/f:DI 178)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [11 ns+0 S8 A64])) "../src/io.f":427 81 {*movdi_internal}
     (nil))
(insn 176 175 177 19 (set (reg:SI 115 [ _29 ])
        (mem:SI (reg/f:DI 178) [1 *ns_43(D)+0 S4 A32])) "../src/io.f":427 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 178)
        (nil)))
(insn 177 176 178 19 (parallel [
            (set (reg:SI 116 [ _30 ])
                (minus:SI (reg:SI 115 [ _29 ])
                    (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -16 [0xfffffffffffffff0])) [1 nsdel+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":427 273 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 115 [ _29 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 178 177 179 19 (set (reg/f:DI 179)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [11 ns+0 S8 A64])) "../src/io.f":427 81 {*movdi_internal}
     (nil))
(insn 179 178 196 19 (set (mem:SI (reg/f:DI 179) [1 *ns_43(D)+0 S4 A32])
        (reg:SI 116 [ _30 ])) "../src/io.f":427 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 179)
        (expr_list:REG_DEAD (reg:SI 116 [ _30 ])
            (nil))))
(jump_insn 196 179 197 19 (set (pc)
        (label_ref 53)) "../src/io.f":429 649 {jump}
     (nil)
 -> 53)
;;  succ:       7 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 197 196 184)
;; basic block 20, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 19, next block 1, flags: (RTL)
;;  pred:       6 [100.0%] 
;;              11 [100.0%] 
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 184 197 185 20 118 (nil) [2 uses])
(note 185 184 0 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

