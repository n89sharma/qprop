
;; Function qcget (qcget_, funcdef_no=0, decl_uid=3499, cgraph_uid=0, symbol_order=0)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=720, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 20 to 7 (offset=704, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 3:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 4:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 8:  (0) m  (1) re {*movsi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 9:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 10:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 11:  (0) m  (1) re {*movdi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 12:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 13:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=3,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=5,overall=9,losers=1,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=6,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=10,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=8,overall=16,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Costly loser: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=9,overall=22,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=10,overall=15,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=11,overall=16,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=12,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=13,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=14,overall=10,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=16,overall=15,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=17,overall=15,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=19,overall=16,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=20,overall=16,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=21,overall=16,losers=1 -- refuse
            alt=22: Bad operand -- refuse
            alt=23: Bad operand -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=24,overall=10,losers=1 -- refuse
            alt=25: Bad operand -- refuse
	 Choosing alt 4 in insn 14:  (0) r  (1) i {*movdi_internal}
      Creating newreg=159, assigning class GENERAL_REGS to r159
   14: r159:DI=0x2020202020202020
    Inserting insn reload after:
  286: [r87:DI]=r159:DI

            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=610,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            1 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 286:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=3,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=5,overall=9,losers=1,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=6,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=10,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=8,overall=16,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Costly loser: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=9,overall=22,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=10,overall=15,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=11,overall=16,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=12,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=13,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=14,overall=10,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=16,overall=15,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=17,overall=15,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=19,overall=16,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=20,overall=16,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=21,overall=16,losers=1 -- refuse
            alt=22: Bad operand -- refuse
            alt=23: Bad operand -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=24,overall=10,losers=1 -- refuse
            alt=25: Bad operand -- refuse
	 Choosing alt 4 in insn 15:  (0) r  (1) i {*movdi_internal}
      Creating newreg=160, assigning class GENERAL_REGS to r160
   15: r160:DI=0x2020202020202020
    Inserting insn reload after:
  287: [r87:DI+0x8]=r160:DI

            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=610,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            1 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 287:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=3,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=5,overall=9,losers=1,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=6,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=10,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=8,overall=16,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Costly loser: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=9,overall=22,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=10,overall=15,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=11,overall=16,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=12,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=13,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=14,overall=10,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=16,overall=15,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=17,overall=15,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=19,overall=16,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=20,overall=16,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=21,overall=16,losers=1 -- refuse
            alt=22: Bad operand -- refuse
            alt=23: Bad operand -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=24,overall=10,losers=1 -- refuse
            alt=25: Bad operand -- refuse
	 Choosing alt 4 in insn 16:  (0) r  (1) i {*movdi_internal}
      Creating newreg=161, assigning class GENERAL_REGS to r161
   16: r161:DI=0x2020202020202020
    Inserting insn reload after:
  288: [r87:DI+0x10]=r161:DI

            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=610,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            1 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 288:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=3,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=5,overall=9,losers=1,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=6,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=10,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=8,overall=16,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Costly loser: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=9,overall=22,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=10,overall=15,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=11,overall=16,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=12,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=13,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=14,overall=10,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=16,overall=15,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=17,overall=15,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=19,overall=16,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=20,overall=16,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=21,overall=16,losers=1 -- refuse
            alt=22: Bad operand -- refuse
            alt=23: Bad operand -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=24,overall=10,losers=1 -- refuse
            alt=25: Bad operand -- refuse
	 Choosing alt 4 in insn 17:  (0) r  (1) i {*movdi_internal}
      Creating newreg=162, assigning class GENERAL_REGS to r162
   17: r162:DI=0x2020202020202020
    Inserting insn reload after:
  289: [r87:DI+0x18]=r162:DI

            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=610,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            1 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 289:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=3,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=5,overall=9,losers=1,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=6,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=10,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=8,overall=16,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Costly loser: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=9,overall=22,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=10,overall=15,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=11,overall=16,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=12,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=13,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=14,overall=10,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=16,overall=15,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=17,overall=15,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=19,overall=16,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=20,overall=16,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=21,overall=16,losers=1 -- refuse
            alt=22: Bad operand -- refuse
            alt=23: Bad operand -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=24,overall=10,losers=1 -- refuse
            alt=25: Bad operand -- refuse
	 Choosing alt 4 in insn 18:  (0) r  (1) i {*movdi_internal}
      Creating newreg=163, assigning class GENERAL_REGS to r163
   18: r163:DI=0x2020202020202020
    Inserting insn reload after:
  290: [r87:DI+0x20]=r163:DI

            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=610,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            1 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 290:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=3,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=5,overall=9,losers=1,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=6,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=10,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=8,overall=16,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Costly loser: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=9,overall=22,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=10,overall=15,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=11,overall=16,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=12,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=13,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=14,overall=10,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=16,overall=15,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=17,overall=15,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=19,overall=16,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=20,overall=16,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=21,overall=16,losers=1 -- refuse
            alt=22: Bad operand -- refuse
            alt=23: Bad operand -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=24,overall=10,losers=1 -- refuse
            alt=25: Bad operand -- refuse
	 Choosing alt 4 in insn 19:  (0) r  (1) i {*movdi_internal}
      Creating newreg=164, assigning class GENERAL_REGS to r164
   19: r164:DI=0x2020202020202020
    Inserting insn reload after:
  291: [r87:DI+0x28]=r164:DI

            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=610,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            1 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 291:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=3,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=5,overall=9,losers=1,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=6,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=10,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=8,overall=16,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Costly loser: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=9,overall=22,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=10,overall=15,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=11,overall=16,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=12,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=13,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=14,overall=10,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=16,overall=15,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=17,overall=15,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=19,overall=16,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=20,overall=16,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=21,overall=16,losers=1 -- refuse
            alt=22: Bad operand -- refuse
            alt=23: Bad operand -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=24,overall=10,losers=1 -- refuse
            alt=25: Bad operand -- refuse
	 Choosing alt 4 in insn 20:  (0) r  (1) i {*movdi_internal}
      Creating newreg=165, assigning class GENERAL_REGS to r165
   20: r165:DI=0x2020202020202020
    Inserting insn reload after:
  292: [r87:DI+0x30]=r165:DI

            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=610,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            1 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 292:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=3,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=5,overall=9,losers=1,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=6,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=10,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=8,overall=16,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Costly loser: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=9,overall=22,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=10,overall=15,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=11,overall=16,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=12,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=13,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=14,overall=10,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=16,overall=15,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=17,overall=15,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=19,overall=16,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=20,overall=16,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=21,overall=16,losers=1 -- refuse
            alt=22: Bad operand -- refuse
            alt=23: Bad operand -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=24,overall=10,losers=1 -- refuse
            alt=25: Bad operand -- refuse
	 Choosing alt 4 in insn 21:  (0) r  (1) i {*movdi_internal}
      Creating newreg=166, assigning class GENERAL_REGS to r166
   21: r166:DI=0x2020202020202020
    Inserting insn reload after:
  293: [r87:DI+0x38]=r166:DI

            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=610,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            1 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 293:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=3,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=5,overall=9,losers=1,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=6,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=10,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=8,overall=16,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Costly loser: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=9,overall=22,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=10,overall=15,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=11,overall=16,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=12,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=13,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=14,overall=10,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=16,overall=15,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=17,overall=15,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=19,overall=16,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=20,overall=16,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=21,overall=16,losers=1 -- refuse
            alt=22: Bad operand -- refuse
            alt=23: Bad operand -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=24,overall=10,losers=1 -- refuse
            alt=25: Bad operand -- refuse
	 Choosing alt 4 in insn 22:  (0) r  (1) i {*movdi_internal}
      Creating newreg=167, assigning class GENERAL_REGS to r167
   22: r167:DI=0x2020202020202020
      REG_DEAD r87:DI
    Inserting insn reload after:
  294: [r87:DI+0x40]=r167:DI

            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=610,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            1 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 294:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 23:  (0) r  (1) i {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 24:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 25:  (0) m  (1) re {*movsi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 26:  (0) r  (1) r  (2) le {*adddi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 27:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 28:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 29:  (0) r  (1) i {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 30:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 31:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 32:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 33:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 34:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 35:  (0) m  (1) re {*movsi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 36:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 38:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 39:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 40:  (0) =rm  (1) %0  (2) re {*andsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 41:  (0) rm  (1) re {*cmpsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 51:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 52:  (0) m  (1) re {*movsi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 53:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 54:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 55:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 56:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 57:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 58:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 59:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 60:  (0) =X  (1) re {*pushsi2_rex64} (sp_off=-8)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 67:  (0) q  (1) qn {*movqi_internal} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 68:  (0) rBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 69:  (0) =r  (1) %0  (2) rme {*adddi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 70:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 71:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 74:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 75:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 78:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 79:  (0) r {*cmpsi_ccno_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 82:  (0) v  (1) m {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 83:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 84:  (0) m  (1) v {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 85:  (0) m  (1) re {*movsi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 86:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 87:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 88:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 89:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 90:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 91:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 92:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 93:  (0) =X  (1) re {*pushsi2_rex64} (sp_off=-8)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 100:  (0) q  (1) qn {*movqi_internal} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 101:  (0) rBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 102:  (0) =r  (1) %0  (2) rme {*adddi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 103:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 104:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 107:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 108:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 111:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 112:  (0) r {*cmpsi_ccno_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 115:  (0) v  (1) m {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 116:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 117:  (0) m  (1) v {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 118:  (0) m  (1) re {*movsi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 119:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 120:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 121:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 122:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 123:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 124:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 125:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 126:  (0) =X  (1) re {*pushsi2_rex64} (sp_off=-8)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 133:  (0) q  (1) qn {*movqi_internal} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 134:  (0) rBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 135:  (0) =r  (1) %0  (2) rme {*adddi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 136:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 137:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 140:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 141:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 144:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 145:  (0) r {*cmpsi_ccno_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 148:  (0) v  (1) m {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 149:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 150:  (0) m  (1) v {*movsf_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 151:  (0) r  (1) i {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 152:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 153:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 154:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 155:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 156:  (0) m  (1) re {*movsi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 157:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 159:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 164:  (0) r  (1) i {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 165:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 166:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 167:  (0) r  (1) i {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 168:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 169:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 170:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 171:  (0) m  (1) re {*movsi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 172:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 174:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 175:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 176:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 177:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 180:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 181:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 182:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 183:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 186:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 187:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 188:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 189:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 192:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 193:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 195:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 196:  (0) =r  (1) g {*movsi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 197:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 198:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 202:  (0) r  (1) i {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 203:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 204:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 205:  (0) r  (1) i {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 206:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 207:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 208:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 209:  (0) m  (1) re {*movsi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 210:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 212:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 213:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 214:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 215:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 218:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 219:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 220:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 221:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 224:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 225:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 227:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 228:  (0) =r  (1) g {*movsi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 229:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 230:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 234:  (0) r  (1) i {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 235:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 236:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 237:  (0) r  (1) i {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 238:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 239:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 240:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 241:  (0) m  (1) re {*movsi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 242:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 244:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 245:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 246:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 247:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 250:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 251:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 252:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 253:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 256:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 257:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 259:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 260:  (0) =r  (1) g {*movsi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 261:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 262:  (0) rBwBz {*call}
	   Spilling non-eliminable hard regs: 6

********** Inheritance #1: **********

EBB 2
    [[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[
      Creating newreg=168 from oldreg=166, assigning class GENERAL_REGS to invariant inheritance r168
   21: r166:DI=0x2020202020202020
    Add invariant inheritance<-original after:
  295: r168:DI=r166:DI

   22: r167:DI=0x2020202020202020
      REG_DEAD r87:DI
    Changing reload<-inheritance after:
  296: r167:DI=r168:DI

deleting insn with uid = 22.
    Invariant inheritance reuse change 168 (bb2):
   22: NOTE_INSN_DELETED
	  ]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]
    [[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[
      Creating newreg=169 from oldreg=165, assigning class GENERAL_REGS to invariant inheritance r169
   20: r165:DI=0x2020202020202020
    Add invariant inheritance<-original after:
  297: r169:DI=r165:DI

   21: r166:DI=0x2020202020202020
    Changing reload<-inheritance after:
  298: r166:DI=r169:DI

deleting insn with uid = 21.
    Invariant inheritance reuse change 169 (bb2):
   21: NOTE_INSN_DELETED
	  ]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]
    [[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[
      Creating newreg=170 from oldreg=164, assigning class GENERAL_REGS to invariant inheritance r170
   19: r164:DI=0x2020202020202020
    Add invariant inheritance<-original after:
  299: r170:DI=r164:DI

   20: r165:DI=0x2020202020202020
    Changing reload<-inheritance after:
  300: r165:DI=r170:DI

deleting insn with uid = 20.
    Invariant inheritance reuse change 170 (bb2):
   20: NOTE_INSN_DELETED
	  ]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]
    [[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[
      Creating newreg=171 from oldreg=163, assigning class GENERAL_REGS to invariant inheritance r171
   18: r163:DI=0x2020202020202020
    Add invariant inheritance<-original after:
  301: r171:DI=r163:DI

   19: r164:DI=0x2020202020202020
    Changing reload<-inheritance after:
  302: r164:DI=r171:DI

deleting insn with uid = 19.
    Invariant inheritance reuse change 171 (bb2):
   19: NOTE_INSN_DELETED
	  ]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]
    [[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[
      Creating newreg=172 from oldreg=162, assigning class GENERAL_REGS to invariant inheritance r172
   17: r162:DI=0x2020202020202020
    Add invariant inheritance<-original after:
  303: r172:DI=r162:DI

   18: r163:DI=0x2020202020202020
    Changing reload<-inheritance after:
  304: r163:DI=r172:DI

deleting insn with uid = 18.
    Invariant inheritance reuse change 172 (bb2):
   18: NOTE_INSN_DELETED
	  ]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]
    [[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[
      Creating newreg=173 from oldreg=161, assigning class GENERAL_REGS to invariant inheritance r173
   16: r161:DI=0x2020202020202020
    Add invariant inheritance<-original after:
  305: r173:DI=r161:DI

   17: r162:DI=0x2020202020202020
    Changing reload<-inheritance after:
  306: r162:DI=r173:DI

deleting insn with uid = 17.
    Invariant inheritance reuse change 173 (bb2):
   17: NOTE_INSN_DELETED
	  ]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]
    [[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[
      Creating newreg=174 from oldreg=160, assigning class GENERAL_REGS to invariant inheritance r174
   15: r160:DI=0x2020202020202020
    Add invariant inheritance<-original after:
  307: r174:DI=r160:DI

   16: r161:DI=0x2020202020202020
    Changing reload<-inheritance after:
  308: r161:DI=r174:DI

deleting insn with uid = 16.
    Invariant inheritance reuse change 174 (bb2):
   16: NOTE_INSN_DELETED
	  ]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]
    [[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[
      Creating newreg=175 from oldreg=159, assigning class GENERAL_REGS to invariant inheritance r175
   14: r159:DI=0x2020202020202020
    Add invariant inheritance<-original after:
  309: r175:DI=r159:DI

   15: r160:DI=0x2020202020202020
    Changing reload<-inheritance after:
  310: r160:DI=r175:DI

deleting insn with uid = 15.
    Invariant inheritance reuse change 175 (bb2):
   15: NOTE_INSN_DELETED
	  ]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]
EBB 3
EBB 4
EBB 5
EBB 6
EBB 7
EBB 8
EBB 9
EBB 10
EBB 11
EBB 12
EBB 18
EBB 13
EBB 19
EBB 14
EBB 20
EBB 15
EBB 17
EBB 16

********** Pseudo live ranges #1: **********

  BB 13
   Insn 198: point = 0, n_alt = 0
   Insn 197: point = 0, n_alt = 2
   Insn 196: point = 0, n_alt = 0
   Insn 195: point = 0, n_alt = 0
   Insn 194: point = 0, n_alt = -1
   Insn 193: point = 1, n_alt = 3
   Insn 192: point = 2, n_alt = 0
   Insn 191: point = 2, n_alt = -1
   Insn 190: point = 3, n_alt = -1
   Insn 189: point = 4, n_alt = 0
   Insn 188: point = 4, n_alt = 3
   Insn 187: point = 5, n_alt = 3
   Insn 186: point = 6, n_alt = 0
   Insn 185: point = 6, n_alt = -1
   Insn 184: point = 7, n_alt = -1
   Insn 183: point = 8, n_alt = 0
   Insn 182: point = 8, n_alt = 3
   Insn 181: point = 9, n_alt = 3
   Insn 180: point = 10, n_alt = 0
   Insn 179: point = 10, n_alt = -1
   Insn 178: point = 11, n_alt = -1
   Insn 177: point = 12, n_alt = 0
   Insn 176: point = 12, n_alt = 3
   Insn 175: point = 13, n_alt = 3
   Insn 174: point = 14, n_alt = 0
   Insn 173: point = 14, n_alt = -1
   Insn 172: point = 15, n_alt = 3
   Insn 171: point = 16, n_alt = 1
   Insn 170: point = 16, n_alt = 1
   Insn 169: point = 16, n_alt = 1
   Insn 168: point = 16, n_alt = 5
   Insn 167: point = 17, n_alt = 4
   Insn 166: point = 18, n_alt = 1
   Insn 165: point = 18, n_alt = 5
   Insn 164: point = 19, n_alt = 4
  BB 18
   Insn 278: point = 20, n_alt = -1
  BB 14
   Insn 230: point = 20, n_alt = 0
   Insn 229: point = 20, n_alt = 2
   Insn 228: point = 20, n_alt = 0
   Insn 227: point = 20, n_alt = 0
   Insn 226: point = 20, n_alt = -1
   Insn 225: point = 21, n_alt = 3
   Insn 224: point = 22, n_alt = 0
   Insn 223: point = 22, n_alt = -1
   Insn 222: point = 23, n_alt = -1
   Insn 221: point = 24, n_alt = 0
   Insn 220: point = 24, n_alt = 3
   Insn 219: point = 25, n_alt = 3
   Insn 218: point = 26, n_alt = 0
   Insn 217: point = 26, n_alt = -1
   Insn 216: point = 27, n_alt = -1
   Insn 215: point = 28, n_alt = 0
   Insn 214: point = 28, n_alt = 3
   Insn 213: point = 29, n_alt = 3
   Insn 212: point = 30, n_alt = 0
   Insn 211: point = 30, n_alt = -1
   Insn 210: point = 31, n_alt = 3
   Insn 209: point = 32, n_alt = 1
   Insn 208: point = 32, n_alt = 1
   Insn 207: point = 32, n_alt = 1
   Insn 206: point = 32, n_alt = 5
   Insn 205: point = 33, n_alt = 4
   Insn 204: point = 34, n_alt = 1
   Insn 203: point = 34, n_alt = 5
   Insn 202: point = 35, n_alt = 4
  BB 19
   Insn 281: point = 36, n_alt = -1
  BB 15
   Insn 262: point = 36, n_alt = 0
   Insn 261: point = 36, n_alt = 2
   Insn 260: point = 36, n_alt = 0
   Insn 259: point = 36, n_alt = 0
   Insn 258: point = 36, n_alt = -1
   Insn 257: point = 37, n_alt = 3
   Insn 256: point = 38, n_alt = 0
   Insn 255: point = 38, n_alt = -1
   Insn 254: point = 39, n_alt = -1
   Insn 253: point = 40, n_alt = 0
   Insn 252: point = 40, n_alt = 3
   Insn 251: point = 41, n_alt = 3
   Insn 250: point = 42, n_alt = 0
   Insn 249: point = 42, n_alt = -1
   Insn 248: point = 43, n_alt = -1
   Insn 247: point = 44, n_alt = 0
   Insn 246: point = 44, n_alt = 3
   Insn 245: point = 45, n_alt = 3
   Insn 244: point = 46, n_alt = 0
   Insn 243: point = 46, n_alt = -1
   Insn 242: point = 47, n_alt = 3
   Insn 241: point = 48, n_alt = 1
   Insn 240: point = 48, n_alt = 1
   Insn 239: point = 48, n_alt = 1
   Insn 238: point = 48, n_alt = 5
   Insn 237: point = 49, n_alt = 4
   Insn 236: point = 50, n_alt = 1
   Insn 235: point = 50, n_alt = 5
   Insn 234: point = 51, n_alt = 4
  BB 20
   Insn 284: point = 52, n_alt = -1
  BB 16
  BB 12
   Insn 271: point = 52, n_alt = -1
   Insn 159: point = 52, n_alt = 0
   Insn 158: point = 52, n_alt = -1
   Insn 157: point = 53, n_alt = 3
   Insn 156: point = 54, n_alt = 1
   Insn 155: point = 55, n_alt = 0
   Insn 154: point = 56, n_alt = 1
   Insn 153: point = 56, n_alt = 1
   Insn 152: point = 56, n_alt = 5
   Insn 151: point = 57, n_alt = 4
   Insn 150: point = 58, n_alt = 8
   Insn 149: point = 59, n_alt = 3
   Insn 148: point = 60, n_alt = 7
  BB 11
   Insn 146: point = 61, n_alt = -1
   Insn 145: point = 61, n_alt = 0
   Insn 144: point = 62, n_alt = 0
  BB 10
   Insn 142: point = 63, n_alt = -1
   Insn 141: point = 63, n_alt = 0
   Insn 140: point = 64, n_alt = 0
  BB 9
   Insn 138: point = 65, n_alt = -1
   Insn 137: point = 65, n_alt = 0
   Insn 136: point = 66, n_alt = 0
   Insn 135: point = 67, n_alt = 0
   Insn 134: point = 67, n_alt = 0
   Insn 133: point = 67, n_alt = 1
   Insn 132: point = 67, n_alt = -1
   Insn 131: point = 68, n_alt = -1
   Insn 130: point = 69, n_alt = -1
   Insn 129: point = 70, n_alt = -1
   Insn 128: point = 71, n_alt = -1
   Insn 127: point = 72, n_alt = -1
   Insn 126: point = 73, n_alt = 0
   Insn 125: point = 73, n_alt = 0
   Insn 124: point = 73, n_alt = 3
   Insn 123: point = 74, n_alt = 3
   Insn 122: point = 75, n_alt = 3
   Insn 121: point = 76, n_alt = 3
   Insn 120: point = 77, n_alt = 3
   Insn 119: point = 78, n_alt = 3
   Insn 118: point = 79, n_alt = 1
   Insn 117: point = 79, n_alt = 8
   Insn 116: point = 80, n_alt = 3
   Insn 115: point = 81, n_alt = 7
  BB 8
   Insn 113: point = 82, n_alt = -1
   Insn 112: point = 82, n_alt = 0
   Insn 111: point = 83, n_alt = 0
  BB 7
   Insn 109: point = 84, n_alt = -1
   Insn 108: point = 84, n_alt = 0
   Insn 107: point = 85, n_alt = 0
  BB 6
   Insn 105: point = 86, n_alt = -1
   Insn 104: point = 86, n_alt = 0
   Insn 103: point = 87, n_alt = 0
   Insn 102: point = 88, n_alt = 0
   Insn 101: point = 88, n_alt = 0
   Insn 100: point = 88, n_alt = 1
   Insn 99: point = 88, n_alt = -1
   Insn 98: point = 89, n_alt = -1
   Insn 97: point = 90, n_alt = -1
   Insn 96: point = 91, n_alt = -1
   Insn 95: point = 92, n_alt = -1
   Insn 94: point = 93, n_alt = -1
   Insn 93: point = 94, n_alt = 0
   Insn 92: point = 94, n_alt = 0
   Insn 91: point = 94, n_alt = 3
   Insn 90: point = 95, n_alt = 3
   Insn 89: point = 96, n_alt = 3
   Insn 88: point = 97, n_alt = 3
   Insn 87: point = 98, n_alt = 3
   Insn 86: point = 99, n_alt = 3
   Insn 85: point = 100, n_alt = 1
   Insn 84: point = 100, n_alt = 8
   Insn 83: point = 101, n_alt = 3
   Insn 82: point = 102, n_alt = 7
  BB 5
   Insn 80: point = 103, n_alt = -1
   Insn 79: point = 103, n_alt = 0
   Insn 78: point = 104, n_alt = 0
  BB 4
   Insn 76: point = 105, n_alt = -1
   Insn 75: point = 105, n_alt = 0
   Insn 74: point = 106, n_alt = 0
  BB 3
   Insn 72: point = 107, n_alt = -1
   Insn 71: point = 107, n_alt = 0
   Insn 70: point = 108, n_alt = 0
   Insn 69: point = 109, n_alt = 0
   Insn 68: point = 109, n_alt = 0
   Insn 67: point = 109, n_alt = 1
   Insn 66: point = 109, n_alt = -1
   Insn 65: point = 110, n_alt = -1
   Insn 64: point = 111, n_alt = -1
   Insn 63: point = 112, n_alt = -1
   Insn 62: point = 113, n_alt = -1
   Insn 61: point = 114, n_alt = -1
   Insn 60: point = 115, n_alt = 0
   Insn 59: point = 115, n_alt = 0
   Insn 58: point = 115, n_alt = 3
   Insn 57: point = 116, n_alt = 3
   Insn 56: point = 117, n_alt = 3
   Insn 55: point = 118, n_alt = 3
   Insn 54: point = 119, n_alt = 3
   Insn 53: point = 120, n_alt = 3
   Insn 52: point = 121, n_alt = 1
   Insn 51: point = 121, n_alt = 1
  BB 17
   Insn 275: point = 121, n_alt = -1
  BB 2
   Insn 42: point = 121, n_alt = -1
   Insn 41: point = 121, n_alt = 0
   Insn 40: point = 122, n_alt = 0
   Insn 39: point = 124, n_alt = 0
   Insn 38: point = 125, n_alt = 0
   Insn 37: point = 125, n_alt = -1
   Insn 36: point = 126, n_alt = 3
   Insn 35: point = 127, n_alt = 1
   Insn 34: point = 128, n_alt = 0
   Insn 33: point = 129, n_alt = 1
   Insn 32: point = 129, n_alt = 1
   Insn 31: point = 129, n_alt = 1
   Insn 30: point = 129, n_alt = 5
   Insn 29: point = 130, n_alt = 4
   Insn 28: point = 131, n_alt = 1
   Insn 27: point = 131, n_alt = 5
   Insn 26: point = 132, n_alt = 3
   Insn 25: point = 133, n_alt = 1
   Insn 24: point = 133, n_alt = 5
   Insn 23: point = 134, n_alt = 4
   Insn 294: point = 135, n_alt = 5
   Insn 296: point = 136, n_alt = -1
	   Creating copy r167<-r168@1
   Insn 293: point = 138, n_alt = 5
   Insn 295: point = 139, n_alt = -1
	   Creating copy r166->r168@1
   Insn 298: point = 140, n_alt = -1
	   Creating copy r166<-r169@1
   Insn 292: point = 142, n_alt = 5
   Insn 297: point = 143, n_alt = -1
	   Creating copy r165->r169@1
   Insn 300: point = 144, n_alt = -1
	   Creating copy r165<-r170@1
   Insn 291: point = 146, n_alt = 5
   Insn 299: point = 147, n_alt = -1
	   Creating copy r164->r170@1
   Insn 302: point = 148, n_alt = -1
	   Creating copy r164<-r171@1
   Insn 290: point = 150, n_alt = 5
   Insn 301: point = 151, n_alt = -1
	   Creating copy r163->r171@1
   Insn 304: point = 152, n_alt = -1
	   Creating copy r163<-r172@1
   Insn 289: point = 154, n_alt = 5
   Insn 303: point = 155, n_alt = -1
	   Creating copy r162->r172@1
   Insn 306: point = 156, n_alt = -1
	   Creating copy r162<-r173@1
   Insn 288: point = 158, n_alt = 5
   Insn 305: point = 159, n_alt = -1
	   Creating copy r161->r173@1
   Insn 308: point = 160, n_alt = -1
	   Creating copy r161<-r174@1
   Insn 287: point = 162, n_alt = 5
   Insn 307: point = 163, n_alt = -1
	   Creating copy r160->r174@1
   Insn 310: point = 164, n_alt = -1
	   Creating copy r160<-r175@1
   Insn 286: point = 166, n_alt = 5
   Insn 309: point = 167, n_alt = -1
	   Creating copy r159->r175@1
   Insn 14: point = 168, n_alt = 4
   Insn 13: point = 169, n_alt = 0
   Insn 12: point = 169, n_alt = 3
   Insn 11: point = 170, n_alt = 5
   Insn 10: point = 171, n_alt = 3
   Insn 9: point = 172, n_alt = 3
   Insn 8: point = 173, n_alt = 1
   Insn 4: point = 173, n_alt = 5
   Insn 3: point = 173, n_alt = 5
   Insn 2: point = 173, n_alt = 5
 r87: [135..169]
 r88: [127..128]
 r89: [123..124]
 r90: [121..122]
 r91: [107..108]
 r92: [105..106]
 r93: [103..104]
 r94: [100..102]
 r95: [86..87]
 r96: [84..85]
 r97: [82..83]
 r98: [79..81]
 r99: [65..66]
 r100: [63..64]
 r101: [61..62]
 r102: [58..60]
 r103: [54..55]
 r104: [170..172]
 r105: [170..171]
 r106: [133..134]
 r107: [131..132]
 r108: [129..130]
 r109: [125..126]
 r110: [114..120]
 r111: [113..119]
 r112: [112..118]
 r113: [111..117]
 r114: [110..116]
 r115: [109..115]
 r116: [100..101]
 r117: [93..99]
 r118: [92..98]
 r119: [91..97]
 r120: [90..96]
 r121: [89..95]
 r122: [88..94]
 r123: [79..80]
 r124: [72..78]
 r125: [71..77]
 r126: [70..76]
 r127: [69..75]
 r128: [68..74]
 r129: [67..73]
 r130: [58..59]
 r131: [56..57]
 r132: [52..53]
 r133: [18..19]
 r134: [16..17]
 r135: [14..15]
 r136: [11..13]
 r137: [10..12]
 r138: [7..9]
 r139: [6..8]
 r140: [3..5]
 r141: [2..4]
 r142: [0..1]
 r143: [34..35]
 r144: [32..33]
 r145: [30..31]
 r146: [27..29]
 r147: [26..28]
 r148: [23..25]
 r149: [22..24]
 r150: [20..21]
 r151: [50..51]
 r152: [48..49]
 r153: [46..47]
 r154: [43..45]
 r155: [42..44]
 r156: [39..41]
 r157: [38..40]
 r158: [36..37]
 r159: [166..168]
 r160: [162..164]
 r161: [158..160]
 r162: [154..156]
 r163: [150..152]
 r164: [146..148]
 r165: [142..144]
 r166: [138..140]
 r167: [135..136]
 r168: [137..139]
 r169: [141..143]
 r170: [145..147]
 r171: [149..151]
 r172: [153..155]
 r173: [157..159]
 r174: [161..163]
 r175: [165..167]
Compressing live ranges: from 173 to 108 - 62%
Ranges after the compression:
 r87: [88..105]
 r88: [80..81]
 r89: [76..77]
 r90: [74..75]
 r91: [70..71]
 r92: [68..69]
 r93: [66..67]
 r94: [64..65]
 r95: [60..61]
 r96: [58..59]
 r97: [56..57]
 r98: [54..55]
 r99: [50..51]
 r100: [48..49]
 r101: [46..47]
 r102: [44..45]
 r103: [40..41]
 r104: [106..107]
 r105: [106..107]
 r106: [86..87]
 r107: [84..85]
 r108: [82..83]
 r109: [78..79]
 r110: [72..73]
 r111: [72..73]
 r112: [72..73]
 r113: [72..73]
 r114: [72..73]
 r115: [72..73]
 r116: [64..65]
 r117: [62..63]
 r118: [62..63]
 r119: [62..63]
 r120: [62..63]
 r121: [62..63]
 r122: [62..63]
 r123: [54..55]
 r124: [52..53]
 r125: [52..53]
 r126: [52..53]
 r127: [52..53]
 r128: [52..53]
 r129: [52..53]
 r130: [44..45]
 r131: [42..43]
 r132: [38..39]
 r133: [12..13]
 r134: [10..11]
 r135: [8..9]
 r136: [6..7]
 r137: [6..7]
 r138: [4..5]
 r139: [4..5]
 r140: [2..3]
 r141: [2..3]
 r142: [0..1]
 r143: [24..25]
 r144: [22..23]
 r145: [20..21]
 r146: [18..19]
 r147: [18..19]
 r148: [16..17]
 r149: [16..17]
 r150: [14..15]
 r151: [36..37]
 r152: [34..35]
 r153: [32..33]
 r154: [30..31]
 r155: [30..31]
 r156: [28..29]
 r157: [28..29]
 r158: [26..27]
 r159: [104..105]
 r160: [102..103]
 r161: [100..101]
 r162: [98..99]
 r163: [96..97]
 r164: [94..95]
 r165: [92..93]
 r166: [90..91]
 r167: [88..89]
 r168: [90..91]
 r169: [92..93]
 r170: [94..95]
 r171: [96..97]
 r172: [98..99]
 r173: [100..101]
 r174: [102..103]
 r175: [104..105]

********** Assignment #1: **********

	 Assigning to 159 (cl=GENERAL_REGS, orig=159, freq=3, tfirst=159, tfreq=10)...
	   Assign 1 to reload r159 (freq=3)
	Hard reg 1 is preferable by r175 with profit 1
	Hard reg 1 is preferable by r160 with profit 1
	Hard reg 1 is preferable by r174 with profit 1
	Hard reg 1 is preferable by r161 with profit 1
	Hard reg 1 is preferable by r173 with profit 1
	Hard reg 1 is preferable by r162 with profit 1
	 Assigning to 160 (cl=GENERAL_REGS, orig=160, freq=3, tfirst=159, tfreq=10)...
	   Assign 1 to reload r160 (freq=3)
	Hard reg 1 is preferable by r175 with profit 2
	Hard reg 1 is preferable by r174 with profit 2
	Hard reg 1 is preferable by r161 with profit 2
	Hard reg 1 is preferable by r173 with profit 2
	Hard reg 1 is preferable by r162 with profit 2
	Hard reg 1 is preferable by r172 with profit 1
	Hard reg 1 is preferable by r163 with profit 1
	 Assigning to 161 (cl=GENERAL_REGS, orig=161, freq=3, tfirst=159, tfreq=10)...
	   Assign 1 to reload r161 (freq=3)
	Hard reg 1 is preferable by r174 with profit 3
	Hard reg 1 is preferable by r173 with profit 3
	Hard reg 1 is preferable by r162 with profit 3
	Hard reg 1 is preferable by r172 with profit 2
	Hard reg 1 is preferable by r163 with profit 2
	Hard reg 1 is preferable by r171 with profit 1
	Hard reg 1 is preferable by r164 with profit 1
	 Assigning to 162 (cl=GENERAL_REGS, orig=162, freq=3, tfirst=159, tfreq=10)...
	   Assign 1 to reload r162 (freq=3)
	Hard reg 1 is preferable by r173 with profit 4
	Hard reg 1 is preferable by r172 with profit 3
	Hard reg 1 is preferable by r163 with profit 3
	Hard reg 1 is preferable by r171 with profit 2
	Hard reg 1 is preferable by r164 with profit 2
	Hard reg 1 is preferable by r170 with profit 1
	Hard reg 1 is preferable by r165 with profit 1
	 Assigning to 163 (cl=GENERAL_REGS, orig=163, freq=3, tfirst=159, tfreq=10)...
	   Assign 1 to reload r163 (freq=3)
	Hard reg 1 is preferable by r172 with profit 4
	Hard reg 1 is preferable by r171 with profit 3
	Hard reg 1 is preferable by r164 with profit 3
	Hard reg 1 is preferable by r170 with profit 2
	Hard reg 1 is preferable by r165 with profit 2
	Hard reg 1 is preferable by r169 with profit 1
	Hard reg 1 is preferable by r166 with profit 1
	 Assigning to 164 (cl=GENERAL_REGS, orig=164, freq=3, tfirst=159, tfreq=10)...
	   Assign 1 to reload r164 (freq=3)
	Hard reg 1 is preferable by r171 with profit 4
	Hard reg 1 is preferable by r170 with profit 3
	Hard reg 1 is preferable by r165 with profit 3
	Hard reg 1 is preferable by r169 with profit 2
	Hard reg 1 is preferable by r166 with profit 2
	Hard reg 1 is preferable by r168 with profit 1
	Hard reg 1 is preferable by r167 with profit 1
	 Assigning to 165 (cl=GENERAL_REGS, orig=165, freq=3, tfirst=159, tfreq=10)...
	   Assign 1 to reload r165 (freq=3)
	Hard reg 1 is preferable by r170 with profit 4
	Hard reg 1 is preferable by r169 with profit 3
	Hard reg 1 is preferable by r166 with profit 3
	Hard reg 1 is preferable by r168 with profit 2
	Hard reg 1 is preferable by r167 with profit 2
	 Assigning to 166 (cl=GENERAL_REGS, orig=166, freq=3, tfirst=159, tfreq=10)...
	   Assign 1 to reload r166 (freq=3)
	Hard reg 1 is preferable by r169 with profit 4
	Hard reg 1 is preferable by r168 with profit 3
	Hard reg 1 is preferable by r167 with profit 3
	 Assigning to 167 (cl=GENERAL_REGS, orig=167, freq=2, tfirst=159, tfreq=10)...
	   Assign 1 to reload r167 (freq=2)
	Hard reg 1 is preferable by r168 with profit 4
	 Assigning to 168 (cl=GENERAL_REGS, orig=166, freq=2, tfirst=159, tfreq=10)...
	   Assign 1 to inheritance r168 (freq=2)
	 Assigning to 169 (cl=GENERAL_REGS, orig=165, freq=2, tfirst=159, tfreq=10)...
	   Assign 1 to inheritance r169 (freq=2)
	 Assigning to 170 (cl=GENERAL_REGS, orig=164, freq=2, tfirst=159, tfreq=10)...
	   Assign 1 to inheritance r170 (freq=2)
	 Assigning to 171 (cl=GENERAL_REGS, orig=163, freq=2, tfirst=159, tfreq=10)...
	   Assign 1 to inheritance r171 (freq=2)
	 Assigning to 172 (cl=GENERAL_REGS, orig=162, freq=2, tfirst=159, tfreq=10)...
	   Assign 1 to inheritance r172 (freq=2)
	 Assigning to 173 (cl=GENERAL_REGS, orig=161, freq=2, tfirst=159, tfreq=10)...
	   Assign 1 to inheritance r173 (freq=2)
	 Assigning to 174 (cl=GENERAL_REGS, orig=160, freq=2, tfirst=159, tfreq=10)...
	   Assign 1 to inheritance r174 (freq=2)
	 Assigning to 175 (cl=GENERAL_REGS, orig=159, freq=2, tfirst=159, tfreq=10)...
	   Assign 1 to inheritance r175 (freq=2)

********** Undoing inheritance #1: **********

Inherit 8 out of 8 (100.00%)

********** Local #2: **********

	   Spilling non-eliminable hard regs: 6
	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=720, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 20 to 7 (offset=704, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
changing reg in insn 13
changing reg in insn 12
changing reg in insn 14
changing reg in insn 13
changing reg in insn 34
changing reg in insn 35
changing reg in insn 39
changing reg in insn 40
changing reg in insn 40
changing reg in insn 41
changing reg in insn 70
changing reg in insn 71
changing reg in insn 74
changing reg in insn 75
changing reg in insn 78
changing reg in insn 79
changing reg in insn 82
changing reg in insn 84
changing reg in insn 103
changing reg in insn 104
changing reg in insn 107
changing reg in insn 108
changing reg in insn 111
changing reg in insn 112
changing reg in insn 115
changing reg in insn 117
changing reg in insn 136
changing reg in insn 137
changing reg in insn 140
changing reg in insn 141
changing reg in insn 144
changing reg in insn 145
changing reg in insn 148
changing reg in insn 150
changing reg in insn 155
changing reg in insn 156
changing reg in insn 9
changing reg in insn 11
changing reg in insn 10
changing reg in insn 11
changing reg in insn 23
changing reg in insn 24
changing reg in insn 26
changing reg in insn 27
changing reg in insn 29
changing reg in insn 30
changing reg in insn 36
changing reg in insn 37
changing reg in insn 53
changing reg in insn 61
changing reg in insn 54
changing reg in insn 62
changing reg in insn 55
changing reg in insn 63
changing reg in insn 56
changing reg in insn 64
changing reg in insn 57
changing reg in insn 65
changing reg in insn 58
changing reg in insn 66
changing reg in insn 83
changing reg in insn 84
changing reg in insn 86
changing reg in insn 94
changing reg in insn 87
changing reg in insn 95
changing reg in insn 88
changing reg in insn 96
changing reg in insn 89
changing reg in insn 97
changing reg in insn 90
changing reg in insn 98
changing reg in insn 91
changing reg in insn 99
changing reg in insn 116
changing reg in insn 117
changing reg in insn 119
changing reg in insn 127
changing reg in insn 120
changing reg in insn 128
changing reg in insn 121
changing reg in insn 129
changing reg in insn 122
changing reg in insn 130
changing reg in insn 123
changing reg in insn 131
changing reg in insn 124
changing reg in insn 132
changing reg in insn 149
changing reg in insn 150
changing reg in insn 151
changing reg in insn 152
changing reg in insn 157
changing reg in insn 158
changing reg in insn 164
changing reg in insn 165
changing reg in insn 167
changing reg in insn 168
changing reg in insn 172
changing reg in insn 173
changing reg in insn 175
changing reg in insn 178
changing reg in insn 176
changing reg in insn 179
changing reg in insn 181
changing reg in insn 184
changing reg in insn 182
changing reg in insn 185
changing reg in insn 187
changing reg in insn 190
changing reg in insn 188
changing reg in insn 191
changing reg in insn 193
changing reg in insn 194
changing reg in insn 202
changing reg in insn 203
changing reg in insn 205
changing reg in insn 206
changing reg in insn 210
changing reg in insn 211
changing reg in insn 213
changing reg in insn 216
changing reg in insn 214
changing reg in insn 217
changing reg in insn 219
changing reg in insn 222
changing reg in insn 220
changing reg in insn 223
changing reg in insn 225
changing reg in insn 226
changing reg in insn 234
changing reg in insn 235
changing reg in insn 237
changing reg in insn 238
changing reg in insn 242
changing reg in insn 243
changing reg in insn 245
changing reg in insn 248
changing reg in insn 246
changing reg in insn 249
changing reg in insn 251
changing reg in insn 254
changing reg in insn 252
changing reg in insn 255
changing reg in insn 257
changing reg in insn 258
deleting insn with uid = 309.
deleting insn with uid = 310.
deleting insn with uid = 307.
deleting insn with uid = 308.
deleting insn with uid = 305.
deleting insn with uid = 306.
deleting insn with uid = 303.
deleting insn with uid = 304.
deleting insn with uid = 301.
deleting insn with uid = 302.
deleting insn with uid = 299.
deleting insn with uid = 300.
deleting insn with uid = 297.
deleting insn with uid = 298.
deleting insn with uid = 295.
deleting insn with uid = 296.
deleting insn with uid = 63.
deleting insn with uid = 64.
deleting insn with uid = 65.
deleting insn with uid = 96.
deleting insn with uid = 97.
deleting insn with uid = 98.
deleting insn with uid = 129.
deleting insn with uid = 130.
deleting insn with uid = 131.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 38.
verify found no changes in insn with uid = 68.
verify found no changes in insn with uid = 101.
verify found no changes in insn with uid = 134.
verify found no changes in insn with uid = 159.
verify found no changes in insn with uid = 174.
verify found no changes in insn with uid = 180.
verify found no changes in insn with uid = 186.
verify found no changes in insn with uid = 192.
verify found no changes in insn with uid = 195.
verify found no changes in insn with uid = 198.
verify found no changes in insn with uid = 212.
verify found no changes in insn with uid = 218.
verify found no changes in insn with uid = 224.
verify found no changes in insn with uid = 227.
verify found no changes in insn with uid = 230.
verify found no changes in insn with uid = 244.
verify found no changes in insn with uid = 250.
verify found no changes in insn with uid = 256.
verify found no changes in insn with uid = 259.
verify found no changes in insn with uid = 262.


qcget

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 21 [xmm0] 37 [r8] 38 [r9]
;;  ref usage 	r0={72d,58u} r1={34d,21u} r2={32d,10u} r4={35d,14u} r5={46d,25u} r6={1d,120u} r7={10d,59u} r8={21d} r9={21d} r10={21d} r11={21d} r12={21d} r13={21d} r14={21d} r15={21d} r17={82d,10u} r18={21d} r19={21d} r20={1d,1u} r21={25d,3u} r22={22d} r23={22d} r24={22d} r25={22d} r26={22d} r27={22d} r28={22d} r29={21d} r30={21d} r31={21d} r32={21d} r33={21d} r34={21d} r35={21d} r36={21d} r37={28d,6u} r38={25d,3u} r39={21d} r40={21d} r45={21d} r46={21d} r47={21d} r48={21d} r49={21d} r50={21d} r51={21d} r52={21d} r53={21d} r54={21d} r55={21d} r56={21d} r57={21d} r58={21d} r59={21d} r60={21d} r61={21d} r62={21d} r63={21d} r64={21d} r65={21d} r66={21d} r67={21d} r68={21d} r69={21d} r70={21d} r71={21d} r72={21d} r73={21d} r74={21d} r75={21d} r76={21d} r77={21d} r78={21d} r79={21d} r80={21d} 
;;    total ref usage 2051{1721d,330u,0e} in 228{207 regular + 21 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 90 104 105 106 107 108 109
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -680 [0xfffffffffffffd58])) [13 rho+0 S8 A64])
        (reg:DI 5 di [ rho ])) "../src/qcget.f":2 81 {*movdi_internal}
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -688 [0xfffffffffffffd50])) [13 rmu+0 S8 A64])
        (reg:DI 4 si [ rmu ])) "../src/qcget.f":2 81 {*movdi_internal}
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -696 [0xfffffffffffffd48])) [13 vso+0 S8 A64])
        (reg:DI 1 dx [ vso ])) "../src/qcget.f":2 81 {*movdi_internal}
     (nil))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -180 [0xffffffffffffff4c])) [2 lu+0 S4 A32])
        (const_int 11 [0xb])) "../src/qcget.f":6 82 {*movsi_internal}
     (nil))
(insn 9 8 10 2 (parallel [
            (set (reg:DI 0 ax [104])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -80 [0xffffffffffffffb0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/qcget.f":7 218 {*adddi_1}
     (nil))
(insn 10 9 11 2 (set (reg:DI 1 dx [105])
        (mem/c:DI (symbol_ref/f:DI ("*lC0") [flags 0x2]  <var_decl 0x1427eeab0 *lC0>) [0 MEM[(void *)"qcon.def"]+0 S8 A8])) "../src/qcget.f":7 81 {*movdi_internal}
     (nil))
(insn 11 10 12 2 (set (mem/c:DI (reg:DI 0 ax [104]) [0 MEM[(void *)&fname]+0 S8 A64])
        (reg:DI 1 dx [105])) "../src/qcget.f":7 81 {*movdi_internal}
     (nil))
(insn 12 11 13 2 (parallel [
            (set (reg/f:DI 0 ax [orig:87 _1 ] [87])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -80 [0xffffffffffffffb0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/qcget.f":7 218 {*adddi_1}
     (nil))
(insn 13 12 14 2 (parallel [
            (set (reg/f:DI 0 ax [orig:87 _1 ] [87])
                (plus:DI (reg/f:DI 0 ax [orig:87 _1 ] [87])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "../src/qcget.f":7 218 {*adddi_1}
     (nil))
(insn 14 13 286 2 (set (reg:DI 1 dx [159])
        (const_int 2314885530818453536 [0x2020202020202020])) "../src/qcget.f":7 81 {*movdi_internal}
     (nil))
(insn 286 14 15 2 (set (mem:DI (reg/f:DI 0 ax [orig:87 _1 ] [87]) [0 MEM[(void *)_1]+0 S8 A8])
        (reg:DI 1 dx [159])) "../src/qcget.f":7 81 {*movdi_internal}
     (nil))
(note 15 286 287 2 NOTE_INSN_DELETED)
(insn 287 15 16 2 (set (mem:DI (plus:DI (reg/f:DI 0 ax [orig:87 _1 ] [87])
                (const_int 8 [0x8])) [0 MEM[(void *)_1]+8 S8 A8])
        (reg:DI 1 dx [160])) "../src/qcget.f":7 81 {*movdi_internal}
     (nil))
(note 16 287 288 2 NOTE_INSN_DELETED)
(insn 288 16 17 2 (set (mem:DI (plus:DI (reg/f:DI 0 ax [orig:87 _1 ] [87])
                (const_int 16 [0x10])) [0 MEM[(void *)_1]+16 S8 A8])
        (reg:DI 1 dx [161])) "../src/qcget.f":7 81 {*movdi_internal}
     (nil))
(note 17 288 289 2 NOTE_INSN_DELETED)
(insn 289 17 18 2 (set (mem:DI (plus:DI (reg/f:DI 0 ax [orig:87 _1 ] [87])
                (const_int 24 [0x18])) [0 MEM[(void *)_1]+24 S8 A8])
        (reg:DI 1 dx [162])) "../src/qcget.f":7 81 {*movdi_internal}
     (nil))
(note 18 289 290 2 NOTE_INSN_DELETED)
(insn 290 18 19 2 (set (mem:DI (plus:DI (reg/f:DI 0 ax [orig:87 _1 ] [87])
                (const_int 32 [0x20])) [0 MEM[(void *)_1]+32 S8 A8])
        (reg:DI 1 dx [163])) "../src/qcget.f":7 81 {*movdi_internal}
     (nil))
(note 19 290 291 2 NOTE_INSN_DELETED)
(insn 291 19 20 2 (set (mem:DI (plus:DI (reg/f:DI 0 ax [orig:87 _1 ] [87])
                (const_int 40 [0x28])) [0 MEM[(void *)_1]+40 S8 A8])
        (reg:DI 1 dx [164])) "../src/qcget.f":7 81 {*movdi_internal}
     (nil))
(note 20 291 292 2 NOTE_INSN_DELETED)
(insn 292 20 21 2 (set (mem:DI (plus:DI (reg/f:DI 0 ax [orig:87 _1 ] [87])
                (const_int 48 [0x30])) [0 MEM[(void *)_1]+48 S8 A8])
        (reg:DI 1 dx [165])) "../src/qcget.f":7 81 {*movdi_internal}
     (nil))
(note 21 292 293 2 NOTE_INSN_DELETED)
(insn 293 21 22 2 (set (mem:DI (plus:DI (reg/f:DI 0 ax [orig:87 _1 ] [87])
                (const_int 56 [0x38])) [0 MEM[(void *)_1]+56 S8 A8])
        (reg:DI 1 dx [166])) "../src/qcget.f":7 81 {*movdi_internal}
     (nil))
(note 22 293 294 2 NOTE_INSN_DELETED)
(insn 294 22 23 2 (set (mem:DI (plus:DI (reg/f:DI 0 ax [orig:87 _1 ] [87])
                (const_int 64 [0x40])) [0 MEM[(void *)_1]+64 S8 A8])
        (reg:DI 1 dx [167])) "../src/qcget.f":7 81 {*movdi_internal}
     (nil))
(insn 23 294 24 2 (set (reg/f:DI 0 ax [106])
        (symbol_ref/f:DI ("*lC1") [flags 0x2]  <var_decl 0x1427eeb40 *lC1>)) "../src/qcget.f":8 81 {*movdi_internal}
     (nil))
(insn 24 23 25 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -664 [0xfffffffffffffd68])) [6 open_parm.0.common.filename+0 S8 A64])
        (reg/f:DI 0 ax [106])) "../src/qcget.f":8 81 {*movdi_internal}
     (nil))
(insn 25 24 26 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -656 [0xfffffffffffffd70])) [2 open_parm.0.common.line+0 S4 A64])
        (const_int 8 [0x8])) "../src/qcget.f":8 82 {*movsi_internal}
     (nil))
(insn 26 25 27 2 (parallel [
            (set (reg:DI 0 ax [107])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -80 [0xffffffffffffffb0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/qcget.f":8 218 {*adddi_1}
     (nil))
(insn 27 26 28 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -624 [0xfffffffffffffd90])) [6 open_parm.0.file+0 S8 A64])
        (reg:DI 0 ax [107])) "../src/qcget.f":8 81 {*movdi_internal}
     (nil))
(insn 28 27 29 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -628 [0xfffffffffffffd8c])) [2 open_parm.0.file_len+0 S4 A32])
        (const_int 80 [0x50])) "../src/qcget.f":8 82 {*movsi_internal}
     (nil))
(insn 29 28 30 2 (set (reg/f:DI 0 ax [108])
        (symbol_ref/f:DI ("*lC2") [flags 0x2]  <var_decl 0x1427eebd0 *lC2>)) "../src/qcget.f":8 81 {*movdi_internal}
     (nil))
(insn 30 29 31 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -616 [0xfffffffffffffd98])) [6 open_parm.0.status+0 S8 A64])
        (reg/f:DI 0 ax [108])) "../src/qcget.f":8 81 {*movdi_internal}
     (nil))
(insn 31 30 32 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -608 [0xfffffffffffffda0])) [2 open_parm.0.status_len+0 S4 A64])
        (const_int 3 [0x3])) "../src/qcget.f":8 82 {*movsi_internal}
     (nil))
(insn 32 31 33 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -440 [0xfffffffffffffe48])) [2 open_parm.0.readonly+0 S4 A64])
        (const_int 0 [0])) "../src/qcget.f":8 82 {*movsi_internal}
     (nil))
(insn 33 32 34 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -672 [0xfffffffffffffd60])) [2 open_parm.0.common.flags+0 S4 A64])
        (const_int 16777988 [0x1000304])) "../src/qcget.f":8 82 {*movsi_internal}
     (nil))
(insn 34 33 35 2 (set (reg:SI 0 ax [orig:88 lu.5_2 ] [88])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -180 [0xffffffffffffff4c])) [2 lu+0 S4 A32])) "../src/qcget.f":8 82 {*movsi_internal}
     (nil))
(insn 35 34 36 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -668 [0xfffffffffffffd64])) [2 open_parm.0.common.unit+0 S4 A32])
        (reg:SI 0 ax [orig:88 lu.5_2 ] [88])) "../src/qcget.f":8 82 {*movsi_internal}
     (nil))
(insn 36 35 37 2 (parallel [
            (set (reg:DI 0 ax [109])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -672 [0xfffffffffffffd60])))
            (clobber (reg:CC 17 flags))
        ]) "../src/qcget.f":8 218 {*adddi_1}
     (nil))
(insn 37 36 38 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [109])) "../src/qcget.f":8 81 {*movdi_internal}
     (nil))
(call_insn 38 37 39 2 (call (mem:QI (symbol_ref:DI ("_gfortran_st_open") [flags 0x41]  <function_decl 0x1427e0900 _gfortran_st_open>) [0 _gfortran_st_open S1 A8])
        (const_int 0 [0])) "../src/qcget.f":8 655 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 39 38 40 2 (set (reg:SI 0 ax [orig:89 _3 ] [89])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -672 [0xfffffffffffffd60])) [2 open_parm.0.common.flags+0 S4 A64])) "../src/qcget.f":8 82 {*movsi_internal}
     (nil))
(insn 40 39 41 2 (parallel [
            (set (reg:SI 0 ax [orig:90 _4 ] [90])
                (and:SI (reg:SI 0 ax [orig:89 _3 ] [89])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "../src/qcget.f":8 391 {*andsi_1}
     (nil))
(insn 41 40 42 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:90 _4 ] [90])
            (const_int 1 [0x1]))) "../src/qcget.f":8 7 {*cmpsi_1}
     (nil))
(jump_insn 42 41 270 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 274)
            (pc))) "../src/qcget.f":8 617 {*jcc_1}
     (nil)
 -> 274)
;;  succ:       17
;;              3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 91 110 111 112 113 114 115
(note 270 42 45 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(note 45 270 51 3 ("L.1") NOTE_INSN_DELETED_LABEL 3)
(insn 51 45 52 3 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [2 iline+0 S4 A64])
        (const_int 0 [0])) "../src/qcget.f":9 82 {*movsi_internal}
     (nil))
(insn 52 51 53 3 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [2 nval+0 S4 A64])
        (const_int 1 [0x1])) "../src/qcget.f":12 82 {*movsi_internal}
     (nil))
(insn 53 52 54 3 (parallel [
            (set (reg:DI 37 r8 [110])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -188 [0xffffffffffffff44])))
            (clobber (reg:CC 17 flags))
        ]) "../src/qcget.f":13 218 {*adddi_1}
     (nil))
(insn 54 53 55 3 (parallel [
            (set (reg:DI 5 di [111])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -184 [0xffffffffffffff48])))
            (clobber (reg:CC 17 flags))
        ]) "../src/qcget.f":13 218 {*adddi_1}
     (nil))
(insn 55 54 56 3 (parallel [
            (set (reg:DI 2 cx [112])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -84 [0xffffffffffffffac])))
            (clobber (reg:CC 17 flags))
        ]) "../src/qcget.f":13 218 {*adddi_1}
     (nil))
(insn 56 55 57 3 (parallel [
            (set (reg:DI 1 dx [113])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -88 [0xffffffffffffffa8])))
            (clobber (reg:CC 17 flags))
        ]) "../src/qcget.f":13 218 {*adddi_1}
     (nil))
(insn 57 56 58 3 (parallel [
            (set (reg:DI 4 si [114])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -176 [0xffffffffffffff50])))
            (clobber (reg:CC 17 flags))
        ]) "../src/qcget.f":13 218 {*adddi_1}
     (nil))
(insn 58 57 59 3 (parallel [
            (set (reg:DI 0 ax [115])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -180 [0xffffffffffffff4c])))
            (clobber (reg:CC 17 flags))
        ]) "../src/qcget.f":13 218 {*adddi_1}
     (nil))
(insn 59 58 60 3 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "../src/qcget.f":13 218 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 60 59 61 3 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [2  S4 A32])
        (const_int 80 [0x50])) "../src/qcget.f":13 61 {*pushsi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 61 60 62 3 (set (reg:DI 38 r9)
        (reg:DI 37 r8 [110])) "../src/qcget.f":13 81 {*movdi_internal}
     (nil))
(insn 62 61 66 3 (set (reg:DI 37 r8)
        (reg:DI 5 di [111])) "../src/qcget.f":13 81 {*movdi_internal}
     (nil))
(insn 66 62 67 3 (set (reg:DI 5 di)
        (reg:DI 0 ax [115])) "../src/qcget.f":13 81 {*movdi_internal}
     (nil))
(insn 67 66 68 3 (set (reg:QI 0 ax)
        (const_int 0 [0])) "../src/qcget.f":13 84 {*movqi_internal}
     (nil))
(call_insn 68 67 69 3 (call (mem:QI (symbol_ref:DI ("rread_") [flags 0x41]  <function_decl 0x1427e4900 rread>) [0 rread S1 A8])
        (const_int 16 [0x10])) "../src/qcget.f":13 655 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
(insn 69 68 70 3 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "../src/qcget.f":13 218 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 70 69 71 3 (set (reg:SI 0 ax [orig:91 ierr.6_5 ] [91])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -84 [0xffffffffffffffac])) [2 ierr+0 S4 A32])) "../src/qcget.f":14 82 {*movsi_internal}
     (nil))
(insn 71 70 72 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:91 ierr.6_5 ] [91])
            (const_int 1 [0x1]))) "../src/qcget.f":14 7 {*cmpsi_1}
     (nil))
(jump_insn 72 71 73 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 277)
            (pc))) "../src/qcget.f":14 617 {*jcc_1}
     (nil)
 -> 277)
;;  succ:       18
;;              4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 92
(note 73 72 74 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 74 73 75 4 (set (reg:SI 0 ax [orig:92 ierr.7_6 ] [92])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -84 [0xffffffffffffffac])) [2 ierr+0 S4 A32])) "../src/qcget.f":15 82 {*movsi_internal}
     (nil))
(insn 75 74 76 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:92 ierr.7_6 ] [92])
            (const_int -1 [0xffffffffffffffff]))) "../src/qcget.f":15 7 {*cmpsi_1}
     (nil))
(jump_insn 76 75 77 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 280)
            (pc))) "../src/qcget.f":15 617 {*jcc_1}
     (nil)
 -> 280)
;;  succ:       19
;;              5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 93
(note 77 76 78 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 78 77 79 5 (set (reg:SI 0 ax [orig:93 nval.8_7 ] [93])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [2 nval+0 S4 A64])) "../src/qcget.f":16 82 {*movsi_internal}
     (nil))
(insn 79 78 80 5 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:93 nval.8_7 ] [93])
            (const_int 0 [0]))) "../src/qcget.f":16 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 80 79 81 5 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 283)
            (pc))) "../src/qcget.f":16 617 {*jcc_1}
     (nil)
 -> 283)
;;  succ:       20
;;              6 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 94 95 116 117 118 119 120 121 122
(note 81 80 82 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 82 81 83 6 (set (reg:SF 21 xmm0 [orig:94 rval.9_8 ] [94])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -188 [0xffffffffffffff44])) [3 rval+0 S4 A32])) "../src/qcget.f":17 127 {*movsf_internal}
     (nil))
(insn 83 82 84 6 (set (reg/f:DI 0 ax [116])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -680 [0xfffffffffffffd58])) [13 rho+0 S8 A64])) "../src/qcget.f":17 81 {*movdi_internal}
     (nil))
(insn 84 83 85 6 (set (mem:SF (reg/f:DI 0 ax [116]) [3 *rho_41(D)+0 S4 A32])
        (reg:SF 21 xmm0 [orig:94 rval.9_8 ] [94])) "../src/qcget.f":17 127 {*movsf_internal}
     (nil))
(insn 85 84 86 6 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [2 nval+0 S4 A64])
        (const_int 1 [0x1])) "../src/qcget.f":20 82 {*movsi_internal}
     (nil))
(insn 86 85 87 6 (parallel [
            (set (reg:DI 37 r8 [117])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -188 [0xffffffffffffff44])))
            (clobber (reg:CC 17 flags))
        ]) "../src/qcget.f":21 218 {*adddi_1}
     (nil))
(insn 87 86 88 6 (parallel [
            (set (reg:DI 5 di [118])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -184 [0xffffffffffffff48])))
            (clobber (reg:CC 17 flags))
        ]) "../src/qcget.f":21 218 {*adddi_1}
     (nil))
(insn 88 87 89 6 (parallel [
            (set (reg:DI 2 cx [119])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -84 [0xffffffffffffffac])))
            (clobber (reg:CC 17 flags))
        ]) "../src/qcget.f":21 218 {*adddi_1}
     (nil))
(insn 89 88 90 6 (parallel [
            (set (reg:DI 1 dx [120])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -88 [0xffffffffffffffa8])))
            (clobber (reg:CC 17 flags))
        ]) "../src/qcget.f":21 218 {*adddi_1}
     (nil))
(insn 90 89 91 6 (parallel [
            (set (reg:DI 4 si [121])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -176 [0xffffffffffffff50])))
            (clobber (reg:CC 17 flags))
        ]) "../src/qcget.f":21 218 {*adddi_1}
     (nil))
(insn 91 90 92 6 (parallel [
            (set (reg:DI 0 ax [122])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -180 [0xffffffffffffff4c])))
            (clobber (reg:CC 17 flags))
        ]) "../src/qcget.f":21 218 {*adddi_1}
     (nil))
(insn 92 91 93 6 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "../src/qcget.f":21 218 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 93 92 94 6 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [2  S4 A32])
        (const_int 80 [0x50])) "../src/qcget.f":21 61 {*pushsi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 94 93 95 6 (set (reg:DI 38 r9)
        (reg:DI 37 r8 [117])) "../src/qcget.f":21 81 {*movdi_internal}
     (nil))
(insn 95 94 99 6 (set (reg:DI 37 r8)
        (reg:DI 5 di [118])) "../src/qcget.f":21 81 {*movdi_internal}
     (nil))
(insn 99 95 100 6 (set (reg:DI 5 di)
        (reg:DI 0 ax [122])) "../src/qcget.f":21 81 {*movdi_internal}
     (nil))
(insn 100 99 101 6 (set (reg:QI 0 ax)
        (const_int 0 [0])) "../src/qcget.f":21 84 {*movqi_internal}
     (nil))
(call_insn 101 100 102 6 (call (mem:QI (symbol_ref:DI ("rread_") [flags 0x41]  <function_decl 0x1427e4900 rread>) [0 rread S1 A8])
        (const_int 16 [0x10])) "../src/qcget.f":21 655 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
(insn 102 101 103 6 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "../src/qcget.f":21 218 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 103 102 104 6 (set (reg:SI 0 ax [orig:95 ierr.10_9 ] [95])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -84 [0xffffffffffffffac])) [2 ierr+0 S4 A32])) "../src/qcget.f":22 82 {*movsi_internal}
     (nil))
(insn 104 103 105 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:95 ierr.10_9 ] [95])
            (const_int 1 [0x1]))) "../src/qcget.f":22 7 {*cmpsi_1}
     (nil))
(jump_insn 105 104 106 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 277)
            (pc))) "../src/qcget.f":22 617 {*jcc_1}
     (nil)
 -> 277)
;;  succ:       18
;;              7 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 96
(note 106 105 107 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 107 106 108 7 (set (reg:SI 0 ax [orig:96 ierr.11_10 ] [96])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -84 [0xffffffffffffffac])) [2 ierr+0 S4 A32])) "../src/qcget.f":23 82 {*movsi_internal}
     (nil))
(insn 108 107 109 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:96 ierr.11_10 ] [96])
            (const_int -1 [0xffffffffffffffff]))) "../src/qcget.f":23 7 {*cmpsi_1}
     (nil))
(jump_insn 109 108 110 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 280)
            (pc))) "../src/qcget.f":23 617 {*jcc_1}
     (nil)
 -> 280)
;;  succ:       19
;;              8 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (RTL, MODIFIED)
;;  pred:       7 (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 97
(note 110 109 111 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 111 110 112 8 (set (reg:SI 0 ax [orig:97 nval.12_11 ] [97])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [2 nval+0 S4 A64])) "../src/qcget.f":24 82 {*movsi_internal}
     (nil))
(insn 112 111 113 8 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:97 nval.12_11 ] [97])
            (const_int 0 [0]))) "../src/qcget.f":24 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 113 112 114 8 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 283)
            (pc))) "../src/qcget.f":24 617 {*jcc_1}
     (nil)
 -> 283)
;;  succ:       20
;;              9 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 98 99 123 124 125 126 127 128 129
(note 114 113 115 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 115 114 116 9 (set (reg:SF 21 xmm0 [orig:98 rval.13_12 ] [98])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -188 [0xffffffffffffff44])) [3 rval+0 S4 A32])) "../src/qcget.f":25 127 {*movsf_internal}
     (nil))
(insn 116 115 117 9 (set (reg/f:DI 0 ax [123])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -688 [0xfffffffffffffd50])) [13 rmu+0 S8 A64])) "../src/qcget.f":25 81 {*movdi_internal}
     (nil))
(insn 117 116 118 9 (set (mem:SF (reg/f:DI 0 ax [123]) [3 *rmu_45(D)+0 S4 A32])
        (reg:SF 21 xmm0 [orig:98 rval.13_12 ] [98])) "../src/qcget.f":25 127 {*movsf_internal}
     (nil))
(insn 118 117 119 9 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [2 nval+0 S4 A64])
        (const_int 1 [0x1])) "../src/qcget.f":28 82 {*movsi_internal}
     (nil))
(insn 119 118 120 9 (parallel [
            (set (reg:DI 37 r8 [124])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -188 [0xffffffffffffff44])))
            (clobber (reg:CC 17 flags))
        ]) "../src/qcget.f":29 218 {*adddi_1}
     (nil))
(insn 120 119 121 9 (parallel [
            (set (reg:DI 5 di [125])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -184 [0xffffffffffffff48])))
            (clobber (reg:CC 17 flags))
        ]) "../src/qcget.f":29 218 {*adddi_1}
     (nil))
(insn 121 120 122 9 (parallel [
            (set (reg:DI 2 cx [126])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -84 [0xffffffffffffffac])))
            (clobber (reg:CC 17 flags))
        ]) "../src/qcget.f":29 218 {*adddi_1}
     (nil))
(insn 122 121 123 9 (parallel [
            (set (reg:DI 1 dx [127])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -88 [0xffffffffffffffa8])))
            (clobber (reg:CC 17 flags))
        ]) "../src/qcget.f":29 218 {*adddi_1}
     (nil))
(insn 123 122 124 9 (parallel [
            (set (reg:DI 4 si [128])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -176 [0xffffffffffffff50])))
            (clobber (reg:CC 17 flags))
        ]) "../src/qcget.f":29 218 {*adddi_1}
     (nil))
(insn 124 123 125 9 (parallel [
            (set (reg:DI 0 ax [129])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -180 [0xffffffffffffff4c])))
            (clobber (reg:CC 17 flags))
        ]) "../src/qcget.f":29 218 {*adddi_1}
     (nil))
(insn 125 124 126 9 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "../src/qcget.f":29 218 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 126 125 127 9 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [2  S4 A32])
        (const_int 80 [0x50])) "../src/qcget.f":29 61 {*pushsi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 127 126 128 9 (set (reg:DI 38 r9)
        (reg:DI 37 r8 [124])) "../src/qcget.f":29 81 {*movdi_internal}
     (nil))
(insn 128 127 132 9 (set (reg:DI 37 r8)
        (reg:DI 5 di [125])) "../src/qcget.f":29 81 {*movdi_internal}
     (nil))
(insn 132 128 133 9 (set (reg:DI 5 di)
        (reg:DI 0 ax [129])) "../src/qcget.f":29 81 {*movdi_internal}
     (nil))
(insn 133 132 134 9 (set (reg:QI 0 ax)
        (const_int 0 [0])) "../src/qcget.f":29 84 {*movqi_internal}
     (nil))
(call_insn 134 133 135 9 (call (mem:QI (symbol_ref:DI ("rread_") [flags 0x41]  <function_decl 0x1427e4900 rread>) [0 rread S1 A8])
        (const_int 16 [0x10])) "../src/qcget.f":29 655 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
(insn 135 134 136 9 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "../src/qcget.f":29 218 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 136 135 137 9 (set (reg:SI 0 ax [orig:99 ierr.14_13 ] [99])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -84 [0xffffffffffffffac])) [2 ierr+0 S4 A32])) "../src/qcget.f":30 82 {*movsi_internal}
     (nil))
(insn 137 136 138 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:99 ierr.14_13 ] [99])
            (const_int 1 [0x1]))) "../src/qcget.f":30 7 {*cmpsi_1}
     (nil))
(jump_insn 138 137 139 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 277)
            (pc))) "../src/qcget.f":30 617 {*jcc_1}
     (nil)
 -> 277)
;;  succ:       18
;;              10 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (RTL, MODIFIED)
;;  pred:       9 (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 100
(note 139 138 140 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 140 139 141 10 (set (reg:SI 0 ax [orig:100 ierr.15_14 ] [100])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -84 [0xffffffffffffffac])) [2 ierr+0 S4 A32])) "../src/qcget.f":31 82 {*movsi_internal}
     (nil))
(insn 141 140 142 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:100 ierr.15_14 ] [100])
            (const_int -1 [0xffffffffffffffff]))) "../src/qcget.f":31 7 {*cmpsi_1}
     (nil))
(jump_insn 142 141 143 10 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 280)
            (pc))) "../src/qcget.f":31 617 {*jcc_1}
     (nil)
 -> 280)
;;  succ:       19
;;              11 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (RTL, MODIFIED)
;;  pred:       10 (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 101
(note 143 142 144 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 144 143 145 11 (set (reg:SI 0 ax [orig:101 nval.16_15 ] [101])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [2 nval+0 S4 A64])) "../src/qcget.f":32 82 {*movsi_internal}
     (nil))
(insn 145 144 146 11 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:101 nval.16_15 ] [101])
            (const_int 0 [0]))) "../src/qcget.f":32 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 146 145 147 11 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 283)
            (pc))) "../src/qcget.f":32 617 {*jcc_1}
     (nil)
 -> 283)
;;  succ:       20
;;              12 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 18, flags: (RTL, MODIFIED)
;;  pred:       11 (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 102 103 130 131 132
(note 147 146 148 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 148 147 149 12 (set (reg:SF 21 xmm0 [orig:102 rval.17_16 ] [102])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -188 [0xffffffffffffff44])) [3 rval+0 S4 A32])) "../src/qcget.f":33 127 {*movsf_internal}
     (nil))
(insn 149 148 150 12 (set (reg/f:DI 0 ax [130])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -696 [0xfffffffffffffd48])) [13 vso+0 S8 A64])) "../src/qcget.f":33 81 {*movdi_internal}
     (nil))
(insn 150 149 151 12 (set (mem:SF (reg/f:DI 0 ax [130]) [3 *vso_49(D)+0 S4 A32])
        (reg:SF 21 xmm0 [orig:102 rval.17_16 ] [102])) "../src/qcget.f":33 127 {*movsf_internal}
     (nil))
(insn 151 150 152 12 (set (reg/f:DI 0 ax [131])
        (symbol_ref/f:DI ("*lC1") [flags 0x2]  <var_decl 0x1427eeb40 *lC1>)) "../src/qcget.f":35 81 {*movdi_internal}
     (nil))
(insn 152 151 153 12 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -664 [0xfffffffffffffd68])) [6 close_parm.1.common.filename+0 S8 A64])
        (reg/f:DI 0 ax [131])) "../src/qcget.f":35 81 {*movdi_internal}
     (nil))
(insn 153 152 154 12 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -656 [0xfffffffffffffd70])) [2 close_parm.1.common.line+0 S4 A64])
        (const_int 35 [0x23])) "../src/qcget.f":35 82 {*movsi_internal}
     (nil))
(insn 154 153 155 12 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -672 [0xfffffffffffffd60])) [2 close_parm.1.common.flags+0 S4 A64])
        (const_int 0 [0])) "../src/qcget.f":35 82 {*movsi_internal}
     (nil))
(insn 155 154 156 12 (set (reg:SI 0 ax [orig:103 lu.18_17 ] [103])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -180 [0xffffffffffffff4c])) [2 lu+0 S4 A32])) "../src/qcget.f":35 82 {*movsi_internal}
     (nil))
(insn 156 155 157 12 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -668 [0xfffffffffffffd64])) [2 close_parm.1.common.unit+0 S4 A32])
        (reg:SI 0 ax [orig:103 lu.18_17 ] [103])) "../src/qcget.f":35 82 {*movsi_internal}
     (nil))
(insn 157 156 158 12 (parallel [
            (set (reg:DI 0 ax [132])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -672 [0xfffffffffffffd60])))
            (clobber (reg:CC 17 flags))
        ]) "../src/qcget.f":35 218 {*adddi_1}
     (nil))
(insn 158 157 159 12 (set (reg:DI 5 di)
        (reg:DI 0 ax [132])) "../src/qcget.f":35 81 {*movdi_internal}
     (nil))
(call_insn 159 158 271 12 (call (mem:QI (symbol_ref:DI ("_gfortran_st_close") [flags 0x41]  <function_decl 0x1427e0a00 _gfortran_st_close>) [0 _gfortran_st_close S1 A8])
        (const_int 0 [0])) "../src/qcget.f":35 655 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 271 159 272 12 (set (pc)
        (label_ref 268)) "../src/qcget.f":36 649 {jump}
     (nil)
 -> 268)
;;  succ:       16 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 272 271 277)
;; basic block 18, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 13, flags: (RTL, MODIFIED)
;;  pred:       3
;;              6
;;              9
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 277 272 276 18 10 (nil) [3 uses])
(note 276 277 278 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 278 276 162 18 (const_int 0 [0]) "../src/qcget.f":39 682 {nop}
     (nil))
;;  succ:       13 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 18, next block 19, flags: (RTL, MODIFIED)
;;  pred:       18 [100.0%]  (FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 133 134 135 136 137 138 139 140 141 142
(code_label 162 278 163 13 5 (nil) [0 uses])
(note 163 162 164 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 164 163 165 13 (set (reg/f:DI 0 ax [133])
        (symbol_ref/f:DI ("*lC1") [flags 0x2]  <var_decl 0x1427eeb40 *lC1>)) "../src/qcget.f":43 81 {*movdi_internal}
     (nil))
(insn 165 164 166 13 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -664 [0xfffffffffffffd68])) [6 dt_parm.2.common.filename+0 S8 A64])
        (reg/f:DI 0 ax [133])) "../src/qcget.f":43 81 {*movdi_internal}
     (nil))
(insn 166 165 167 13 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -656 [0xfffffffffffffd70])) [2 dt_parm.2.common.line+0 S4 A64])
        (const_int 43 [0x2b])) "../src/qcget.f":43 82 {*movsi_internal}
     (nil))
(insn 167 166 168 13 (set (reg/f:DI 0 ax [134])
        (symbol_ref/f:DI ("*lC3") [flags 0x2]  <var_decl 0x1427eec60 *lC3>)) "../src/qcget.f":43 81 {*movdi_internal}
     (nil))
(insn 168 167 169 13 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -600 [0xfffffffffffffda8])) [6 dt_parm.2.format+0 S8 A64])
        (reg/f:DI 0 ax [134])) "../src/qcget.f":43 81 {*movdi_internal}
     (nil))
(insn 169 168 170 13 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -592 [0xfffffffffffffdb0])) [2 dt_parm.2.format_len+0 S4 A64])
        (const_int 156 [0x9c])) "../src/qcget.f":43 82 {*movsi_internal}
     (nil))
(insn 170 169 171 13 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -672 [0xfffffffffffffd60])) [2 dt_parm.2.common.flags+0 S4 A64])
        (const_int 4096 [0x1000])) "../src/qcget.f":43 82 {*movsi_internal}
     (nil))
(insn 171 170 172 13 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -668 [0xfffffffffffffd64])) [2 dt_parm.2.common.unit+0 S4 A32])
        (const_int 6 [0x6])) "../src/qcget.f":43 82 {*movsi_internal}
     (nil))
(insn 172 171 173 13 (parallel [
            (set (reg:DI 0 ax [135])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -672 [0xfffffffffffffd60])))
            (clobber (reg:CC 17 flags))
        ]) "../src/qcget.f":43 218 {*adddi_1}
     (nil))
(insn 173 172 174 13 (set (reg:DI 5 di)
        (reg:DI 0 ax [135])) "../src/qcget.f":43 81 {*movdi_internal}
     (nil))
(call_insn 174 173 175 13 (call (mem:QI (symbol_ref:DI ("_gfortran_st_write") [flags 0x41]  <function_decl 0x1427e0800 _gfortran_st_write>) [0 _gfortran_st_write S1 A8])
        (const_int 0 [0])) "../src/qcget.f":43 655 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 175 174 176 13 (parallel [
            (set (reg:DI 2 cx [136])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -80 [0xffffffffffffffb0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/qcget.f":43 218 {*adddi_1}
     (nil))
(insn 176 175 177 13 (parallel [
            (set (reg:DI 0 ax [137])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -672 [0xfffffffffffffd60])))
            (clobber (reg:CC 17 flags))
        ]) "../src/qcget.f":43 218 {*adddi_1}
     (nil))
(insn 177 176 178 13 (set (reg:SI 1 dx)
        (const_int 64 [0x40])) "../src/qcget.f":43 82 {*movsi_internal}
     (nil))
(insn 178 177 179 13 (set (reg:DI 4 si)
        (reg:DI 2 cx [136])) "../src/qcget.f":43 81 {*movdi_internal}
     (nil))
(insn 179 178 180 13 (set (reg:DI 5 di)
        (reg:DI 0 ax [137])) "../src/qcget.f":43 81 {*movdi_internal}
     (nil))
(call_insn 180 179 181 13 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_character_write") [flags 0x41]  <function_decl 0x1427d4900 _gfortran_transfer_character_write>) [0 _gfortran_transfer_character_write S1 A8])
        (const_int 0 [0])) "../src/qcget.f":43 655 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 181 180 182 13 (parallel [
            (set (reg:DI 2 cx [138])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -88 [0xffffffffffffffa8])))
            (clobber (reg:CC 17 flags))
        ]) "../src/qcget.f":43 218 {*adddi_1}
     (nil))
(insn 182 181 183 13 (parallel [
            (set (reg:DI 0 ax [139])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -672 [0xfffffffffffffd60])))
            (clobber (reg:CC 17 flags))
        ]) "../src/qcget.f":43 218 {*adddi_1}
     (nil))
(insn 183 182 184 13 (set (reg:SI 1 dx)
        (const_int 4 [0x4])) "../src/qcget.f":43 82 {*movsi_internal}
     (nil))
(insn 184 183 185 13 (set (reg:DI 4 si)
        (reg:DI 2 cx [138])) "../src/qcget.f":43 81 {*movdi_internal}
     (nil))
(insn 185 184 186 13 (set (reg:DI 5 di)
        (reg:DI 0 ax [139])) "../src/qcget.f":43 81 {*movdi_internal}
     (nil))
(call_insn 186 185 187 13 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_integer_write") [flags 0x41]  <function_decl 0x1427d4500 _gfortran_transfer_integer_write>) [0 _gfortran_transfer_integer_write S1 A8])
        (const_int 0 [0])) "../src/qcget.f":43 655 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 187 186 188 13 (parallel [
            (set (reg:DI 2 cx [140])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -176 [0xffffffffffffff50])))
            (clobber (reg:CC 17 flags))
        ]) "../src/qcget.f":43 218 {*adddi_1}
     (nil))
(insn 188 187 189 13 (parallel [
            (set (reg:DI 0 ax [141])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -672 [0xfffffffffffffd60])))
            (clobber (reg:CC 17 flags))
        ]) "../src/qcget.f":43 218 {*adddi_1}
     (nil))
(insn 189 188 190 13 (set (reg:SI 1 dx)
        (const_int 80 [0x50])) "../src/qcget.f":43 82 {*movsi_internal}
     (nil))
(insn 190 189 191 13 (set (reg:DI 4 si)
        (reg:DI 2 cx [140])) "../src/qcget.f":43 81 {*movdi_internal}
     (nil))
(insn 191 190 192 13 (set (reg:DI 5 di)
        (reg:DI 0 ax [141])) "../src/qcget.f":43 81 {*movdi_internal}
     (nil))
(call_insn 192 191 193 13 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_character_write") [flags 0x41]  <function_decl 0x1427d4900 _gfortran_transfer_character_write>) [0 _gfortran_transfer_character_write S1 A8])
        (const_int 0 [0])) "../src/qcget.f":43 655 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 193 192 194 13 (parallel [
            (set (reg:DI 0 ax [142])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -672 [0xfffffffffffffd60])))
            (clobber (reg:CC 17 flags))
        ]) "../src/qcget.f":43 218 {*adddi_1}
     (nil))
(insn 194 193 195 13 (set (reg:DI 5 di)
        (reg:DI 0 ax [142])) "../src/qcget.f":43 81 {*movdi_internal}
     (nil))
(call_insn 195 194 196 13 (call (mem:QI (symbol_ref:DI ("_gfortran_st_write_done") [flags 0x41]  <function_decl 0x1427e4300 _gfortran_st_write_done>) [0 _gfortran_st_write_done S1 A8])
        (const_int 0 [0])) "../src/qcget.f":43 655 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 196 195 197 13 (set (reg:SI 4 si)
        (const_int 0 [0])) "../src/qcget.f":47 82 {*movsi_internal}
     (nil))
(insn 197 196 198 13 (set (reg:DI 5 di)
        (const_int 0 [0])) "../src/qcget.f":47 81 {*movdi_internal}
     (nil))
(call_insn 198 197 199 13 (call (mem:QI (symbol_ref:DI ("_gfortran_stop_string") [flags 0x41]  <function_decl 0x1427c2200 _gfortran_stop_string>) [0 _gfortran_stop_string S1 A8])
        (const_int 0 [0])) "../src/qcget.f":47 655 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 199 198 280)
;; basic block 19, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 13, next block 14, flags: (RTL, MODIFIED)
;;  pred:       4
;;              7
;;              10
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 280 199 279 19 11 (nil) [3 uses])
(note 279 280 281 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 281 279 200 19 (const_int 0 [0]) "../src/qcget.f":47 682 {nop}
     (nil))
;;  succ:       14 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 14, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 19, next block 20, flags: (RTL, MODIFIED)
;;  pred:       19 [100.0%]  (FALLTHRU)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 143 144 145 146 147 148 149 150
(code_label 200 281 201 14 6 (nil) [0 uses])
(note 201 200 202 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 202 201 203 14 (set (reg/f:DI 0 ax [143])
        (symbol_ref/f:DI ("*lC1") [flags 0x2]  <var_decl 0x1427eeb40 *lC1>)) "../src/qcget.f":50 81 {*movdi_internal}
     (nil))
(insn 203 202 204 14 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -664 [0xfffffffffffffd68])) [6 dt_parm.3.common.filename+0 S8 A64])
        (reg/f:DI 0 ax [143])) "../src/qcget.f":50 81 {*movdi_internal}
     (nil))
(insn 204 203 205 14 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -656 [0xfffffffffffffd70])) [2 dt_parm.3.common.line+0 S4 A64])
        (const_int 50 [0x32])) "../src/qcget.f":50 82 {*movsi_internal}
     (nil))
(insn 205 204 206 14 (set (reg/f:DI 0 ax [144])
        (symbol_ref/f:DI ("*lC4") [flags 0x2]  <var_decl 0x1427eecf0 *lC4>)) "../src/qcget.f":50 81 {*movdi_internal}
     (nil))
(insn 206 205 207 14 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -600 [0xfffffffffffffda8])) [6 dt_parm.3.format+0 S8 A64])
        (reg/f:DI 0 ax [144])) "../src/qcget.f":50 81 {*movdi_internal}
     (nil))
(insn 207 206 208 14 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -592 [0xfffffffffffffdb0])) [2 dt_parm.3.format_len+0 S4 A64])
        (const_int 147 [0x93])) "../src/qcget.f":50 82 {*movsi_internal}
     (nil))
(insn 208 207 209 14 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -672 [0xfffffffffffffd60])) [2 dt_parm.3.common.flags+0 S4 A64])
        (const_int 4096 [0x1000])) "../src/qcget.f":50 82 {*movsi_internal}
     (nil))
(insn 209 208 210 14 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -668 [0xfffffffffffffd64])) [2 dt_parm.3.common.unit+0 S4 A32])
        (const_int 6 [0x6])) "../src/qcget.f":50 82 {*movsi_internal}
     (nil))
(insn 210 209 211 14 (parallel [
            (set (reg:DI 0 ax [145])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -672 [0xfffffffffffffd60])))
            (clobber (reg:CC 17 flags))
        ]) "../src/qcget.f":50 218 {*adddi_1}
     (nil))
(insn 211 210 212 14 (set (reg:DI 5 di)
        (reg:DI 0 ax [145])) "../src/qcget.f":50 81 {*movdi_internal}
     (nil))
(call_insn 212 211 213 14 (call (mem:QI (symbol_ref:DI ("_gfortran_st_write") [flags 0x41]  <function_decl 0x1427e0800 _gfortran_st_write>) [0 _gfortran_st_write S1 A8])
        (const_int 0 [0])) "../src/qcget.f":50 655 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 213 212 214 14 (parallel [
            (set (reg:DI 2 cx [146])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -80 [0xffffffffffffffb0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/qcget.f":50 218 {*adddi_1}
     (nil))
(insn 214 213 215 14 (parallel [
            (set (reg:DI 0 ax [147])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -672 [0xfffffffffffffd60])))
            (clobber (reg:CC 17 flags))
        ]) "../src/qcget.f":50 218 {*adddi_1}
     (nil))
(insn 215 214 216 14 (set (reg:SI 1 dx)
        (const_int 64 [0x40])) "../src/qcget.f":50 82 {*movsi_internal}
     (nil))
(insn 216 215 217 14 (set (reg:DI 4 si)
        (reg:DI 2 cx [146])) "../src/qcget.f":50 81 {*movdi_internal}
     (nil))
(insn 217 216 218 14 (set (reg:DI 5 di)
        (reg:DI 0 ax [147])) "../src/qcget.f":50 81 {*movdi_internal}
     (nil))
(call_insn 218 217 219 14 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_character_write") [flags 0x41]  <function_decl 0x1427d4900 _gfortran_transfer_character_write>) [0 _gfortran_transfer_character_write S1 A8])
        (const_int 0 [0])) "../src/qcget.f":50 655 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 219 218 220 14 (parallel [
            (set (reg:DI 2 cx [148])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -88 [0xffffffffffffffa8])))
            (clobber (reg:CC 17 flags))
        ]) "../src/qcget.f":50 218 {*adddi_1}
     (nil))
(insn 220 219 221 14 (parallel [
            (set (reg:DI 0 ax [149])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -672 [0xfffffffffffffd60])))
            (clobber (reg:CC 17 flags))
        ]) "../src/qcget.f":50 218 {*adddi_1}
     (nil))
(insn 221 220 222 14 (set (reg:SI 1 dx)
        (const_int 4 [0x4])) "../src/qcget.f":50 82 {*movsi_internal}
     (nil))
(insn 222 221 223 14 (set (reg:DI 4 si)
        (reg:DI 2 cx [148])) "../src/qcget.f":50 81 {*movdi_internal}
     (nil))
(insn 223 222 224 14 (set (reg:DI 5 di)
        (reg:DI 0 ax [149])) "../src/qcget.f":50 81 {*movdi_internal}
     (nil))
(call_insn 224 223 225 14 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_integer_write") [flags 0x41]  <function_decl 0x1427d4500 _gfortran_transfer_integer_write>) [0 _gfortran_transfer_integer_write S1 A8])
        (const_int 0 [0])) "../src/qcget.f":50 655 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 225 224 226 14 (parallel [
            (set (reg:DI 0 ax [150])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -672 [0xfffffffffffffd60])))
            (clobber (reg:CC 17 flags))
        ]) "../src/qcget.f":50 218 {*adddi_1}
     (nil))
(insn 226 225 227 14 (set (reg:DI 5 di)
        (reg:DI 0 ax [150])) "../src/qcget.f":50 81 {*movdi_internal}
     (nil))
(call_insn 227 226 228 14 (call (mem:QI (symbol_ref:DI ("_gfortran_st_write_done") [flags 0x41]  <function_decl 0x1427e4300 _gfortran_st_write_done>) [0 _gfortran_st_write_done S1 A8])
        (const_int 0 [0])) "../src/qcget.f":50 655 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 228 227 229 14 (set (reg:SI 4 si)
        (const_int 0 [0])) "../src/qcget.f":54 82 {*movsi_internal}
     (nil))
(insn 229 228 230 14 (set (reg:DI 5 di)
        (const_int 0 [0])) "../src/qcget.f":54 81 {*movdi_internal}
     (nil))
(call_insn 230 229 231 14 (call (mem:QI (symbol_ref:DI ("_gfortran_stop_string") [flags 0x41]  <function_decl 0x1427c2200 _gfortran_stop_string>) [0 _gfortran_stop_string S1 A8])
        (const_int 0 [0])) "../src/qcget.f":54 655 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 231 230 283)
;; basic block 20, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 14, next block 15, flags: (RTL, MODIFIED)
;;  pred:       5
;;              8
;;              11
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 283 231 282 20 12 (nil) [3 uses])
(note 282 283 284 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 284 282 232 20 (const_int 0 [0]) "../src/qcget.f":54 682 {nop}
     (nil))
;;  succ:       15 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 15, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 20, next block 17, flags: (RTL, MODIFIED)
;;  pred:       20 [100.0%]  (FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 151 152 153 154 155 156 157 158
(code_label 232 284 233 15 7 (nil) [0 uses])
(note 233 232 234 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 234 233 235 15 (set (reg/f:DI 0 ax [151])
        (symbol_ref/f:DI ("*lC1") [flags 0x2]  <var_decl 0x1427eeb40 *lC1>)) "../src/qcget.f":58 81 {*movdi_internal}
     (nil))
(insn 235 234 236 15 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -664 [0xfffffffffffffd68])) [6 dt_parm.4.common.filename+0 S8 A64])
        (reg/f:DI 0 ax [151])) "../src/qcget.f":58 81 {*movdi_internal}
     (nil))
(insn 236 235 237 15 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -656 [0xfffffffffffffd70])) [2 dt_parm.4.common.line+0 S4 A64])
        (const_int 58 [0x3a])) "../src/qcget.f":58 82 {*movsi_internal}
     (nil))
(insn 237 236 238 15 (set (reg/f:DI 0 ax [152])
        (symbol_ref/f:DI ("*lC4") [flags 0x2]  <var_decl 0x1427eecf0 *lC4>)) "../src/qcget.f":58 81 {*movdi_internal}
     (nil))
(insn 238 237 239 15 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -600 [0xfffffffffffffda8])) [6 dt_parm.4.format+0 S8 A64])
        (reg/f:DI 0 ax [152])) "../src/qcget.f":58 81 {*movdi_internal}
     (nil))
(insn 239 238 240 15 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -592 [0xfffffffffffffdb0])) [2 dt_parm.4.format_len+0 S4 A64])
        (const_int 147 [0x93])) "../src/qcget.f":58 82 {*movsi_internal}
     (nil))
(insn 240 239 241 15 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -672 [0xfffffffffffffd60])) [2 dt_parm.4.common.flags+0 S4 A64])
        (const_int 4096 [0x1000])) "../src/qcget.f":58 82 {*movsi_internal}
     (nil))
(insn 241 240 242 15 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -668 [0xfffffffffffffd64])) [2 dt_parm.4.common.unit+0 S4 A32])
        (const_int 6 [0x6])) "../src/qcget.f":58 82 {*movsi_internal}
     (nil))
(insn 242 241 243 15 (parallel [
            (set (reg:DI 0 ax [153])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -672 [0xfffffffffffffd60])))
            (clobber (reg:CC 17 flags))
        ]) "../src/qcget.f":58 218 {*adddi_1}
     (nil))
(insn 243 242 244 15 (set (reg:DI 5 di)
        (reg:DI 0 ax [153])) "../src/qcget.f":58 81 {*movdi_internal}
     (nil))
(call_insn 244 243 245 15 (call (mem:QI (symbol_ref:DI ("_gfortran_st_write") [flags 0x41]  <function_decl 0x1427e0800 _gfortran_st_write>) [0 _gfortran_st_write S1 A8])
        (const_int 0 [0])) "../src/qcget.f":58 655 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 245 244 246 15 (parallel [
            (set (reg:DI 2 cx [154])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -80 [0xffffffffffffffb0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/qcget.f":58 218 {*adddi_1}
     (nil))
(insn 246 245 247 15 (parallel [
            (set (reg:DI 0 ax [155])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -672 [0xfffffffffffffd60])))
            (clobber (reg:CC 17 flags))
        ]) "../src/qcget.f":58 218 {*adddi_1}
     (nil))
(insn 247 246 248 15 (set (reg:SI 1 dx)
        (const_int 64 [0x40])) "../src/qcget.f":58 82 {*movsi_internal}
     (nil))
(insn 248 247 249 15 (set (reg:DI 4 si)
        (reg:DI 2 cx [154])) "../src/qcget.f":58 81 {*movdi_internal}
     (nil))
(insn 249 248 250 15 (set (reg:DI 5 di)
        (reg:DI 0 ax [155])) "../src/qcget.f":58 81 {*movdi_internal}
     (nil))
(call_insn 250 249 251 15 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_character_write") [flags 0x41]  <function_decl 0x1427d4900 _gfortran_transfer_character_write>) [0 _gfortran_transfer_character_write S1 A8])
        (const_int 0 [0])) "../src/qcget.f":58 655 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 251 250 252 15 (parallel [
            (set (reg:DI 2 cx [156])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -88 [0xffffffffffffffa8])))
            (clobber (reg:CC 17 flags))
        ]) "../src/qcget.f":58 218 {*adddi_1}
     (nil))
(insn 252 251 253 15 (parallel [
            (set (reg:DI 0 ax [157])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -672 [0xfffffffffffffd60])))
            (clobber (reg:CC 17 flags))
        ]) "../src/qcget.f":58 218 {*adddi_1}
     (nil))
(insn 253 252 254 15 (set (reg:SI 1 dx)
        (const_int 4 [0x4])) "../src/qcget.f":58 82 {*movsi_internal}
     (nil))
(insn 254 253 255 15 (set (reg:DI 4 si)
        (reg:DI 2 cx [156])) "../src/qcget.f":58 81 {*movdi_internal}
     (nil))
(insn 255 254 256 15 (set (reg:DI 5 di)
        (reg:DI 0 ax [157])) "../src/qcget.f":58 81 {*movdi_internal}
     (nil))
(call_insn 256 255 257 15 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_integer_write") [flags 0x41]  <function_decl 0x1427d4500 _gfortran_transfer_integer_write>) [0 _gfortran_transfer_integer_write S1 A8])
        (const_int 0 [0])) "../src/qcget.f":58 655 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 257 256 258 15 (parallel [
            (set (reg:DI 0 ax [158])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -672 [0xfffffffffffffd60])))
            (clobber (reg:CC 17 flags))
        ]) "../src/qcget.f":58 218 {*adddi_1}
     (nil))
(insn 258 257 259 15 (set (reg:DI 5 di)
        (reg:DI 0 ax [158])) "../src/qcget.f":58 81 {*movdi_internal}
     (nil))
(call_insn 259 258 260 15 (call (mem:QI (symbol_ref:DI ("_gfortran_st_write_done") [flags 0x41]  <function_decl 0x1427e4300 _gfortran_st_write_done>) [0 _gfortran_st_write_done S1 A8])
        (const_int 0 [0])) "../src/qcget.f":58 655 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 260 259 261 15 (set (reg:SI 4 si)
        (const_int 0 [0])) "../src/qcget.f":62 82 {*movsi_internal}
     (nil))
(insn 261 260 262 15 (set (reg:DI 5 di)
        (const_int 0 [0])) "../src/qcget.f":62 81 {*movdi_internal}
     (nil))
(call_insn 262 261 263 15 (call (mem:QI (symbol_ref:DI ("_gfortran_stop_string") [flags 0x41]  <function_decl 0x1427c2200 _gfortran_stop_string>) [0 _gfortran_stop_string S1 A8])
        (const_int 0 [0])) "../src/qcget.f":62 655 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 263 262 274)
;; basic block 17, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 15, next block 16, flags: (RTL, MODIFIED)
;;  pred:       2
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 274 263 273 17 9 (nil) [1 uses])
(note 273 274 275 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 275 273 268 17 (const_int 0 [0]) "../src/qcget.f":39 682 {nop}
     (nil))
;;  succ:       16 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 16, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 17, next block 1, flags: (RTL, MODIFIED)
;;  pred:       17 [100.0%]  (FALLTHRU)
;;              12 [100.0%] 
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 268 275 269 16 1 (nil) [1 uses])
(note 269 268 285 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(note 285 269 0 NOTE_INSN_DELETED)
