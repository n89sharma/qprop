
;; Function tpdes (tpdes_, funcdef_no=0, decl_uid=3508, cgraph_uid=0, symbol_order=0)

      Creating newreg=1095
Removing SCRATCH in insn #485 (nop 1)
rescanning insn with uid = 485.

********** Local #1: **********

	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=864, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 20 to 7 (offset=800, prev_offset=0)
Can eliminate 20 to 6 (offset=-48, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 3:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 4:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 5:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 6:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 7:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 13:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 14:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 15:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 16:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 17:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 19:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 18:  (0) r {*cmpdi_ccno_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 20:  (0) r  (2) 0  (3) rm {*movdicc_noc}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 23:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 24:  (0) r  (1) Z {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 28:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 29:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 30:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 31:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 32:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 34:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 33:  (0) r {*cmpdi_ccno_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 35:  (0) r  (2) 0  (3) rm {*movdicc_noc}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 38:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 39:  (0) r  (1) Z {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 43:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 44:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 45:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 46:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 47:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 49:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 48:  (0) r {*cmpdi_ccno_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 50:  (0) r  (2) 0  (3) rm {*movdicc_noc}
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=607,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 53:  (0) m  (1) re {*movdi_internal}
            0 Non input pseudo reload: reject++
          alt=2,overall=7,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
          alt=3,overall=7,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
          alt=4,overall=7,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 54:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 58:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 59:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 60:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 61:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 62:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 64:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 63:  (0) r {*cmpdi_ccno_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 65:  (0) r  (2) 0  (3) rm {*movdicc_noc}
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=607,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 68:  (0) m  (1) re {*movdi_internal}
            0 Non input pseudo reload: reject++
          alt=2,overall=7,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
          alt=3,overall=7,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
          alt=4,overall=7,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 69:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 73:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 74:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 75:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 76:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 77:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 79:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 78:  (0) r {*cmpdi_ccno_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 80:  (0) r  (2) 0  (3) rm {*movdicc_noc}
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=607,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 83:  (0) m  (1) re {*movdi_internal}
            0 Non input pseudo reload: reject++
          alt=2,overall=7,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
          alt=3,overall=7,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
          alt=4,overall=7,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 84:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 88:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 89:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 90:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 91:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 92:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 94:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 93:  (0) r {*cmpdi_ccno_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 95:  (0) r  (2) 0  (3) rm {*movdicc_noc}
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=607,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 98:  (0) m  (1) re {*movdi_internal}
            0 Non input pseudo reload: reject++
          alt=2,overall=7,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
          alt=3,overall=7,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
          alt=4,overall=7,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 99:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 103:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 104:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 105:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 106:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 107:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 109:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 108:  (0) r {*cmpdi_ccno_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 110:  (0) r  (2) 0  (3) rm {*movdicc_noc}
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=607,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 113:  (0) m  (1) re {*movdi_internal}
            0 Non input pseudo reload: reject++
          alt=2,overall=7,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
          alt=3,overall=7,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
          alt=4,overall=7,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 114:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 118:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 119:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 120:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 121:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 122:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 124:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 123:  (0) r {*cmpdi_ccno_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 125:  (0) r  (2) 0  (3) rm {*movdicc_noc}
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=607,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 128:  (0) m  (1) re {*movdi_internal}
            0 Non input pseudo reload: reject++
          alt=2,overall=7,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
          alt=3,overall=7,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
          alt=4,overall=7,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 129:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 133:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 134:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 135:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 136:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 137:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 139:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 138:  (0) r {*cmpdi_ccno_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 140:  (0) r  (2) 0  (3) rm {*movdicc_noc}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 143:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 144:  (0) r  (1) Z {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 148:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 149:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 150:  (0) m  (1) v {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 151:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 152:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 153:  (0) m  (1) v {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 154:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 155:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 156:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 157:  (0) v  (1) vm {*cmpiusf}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 159:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 160:  (0) v  (1) vm {*cmpiusf}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 166:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 167:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 168:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 169
	 Choosing alt 1 in insn 169:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 170:  (0) v  (1) vm {movv4sf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 171:  (0) =Yv  (1) 0  (2) Yvm {*absnegsf2}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 172:  (0) m  (1) v {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 173:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 174:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
	 Choosing alt 1 in insn 175:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=1096 from oldreg=658, assigning class SSE_REGS to r1096
  175: r1096:SF=r1096:SF*r658:SF
      REG_DEAD r658:SF
    Inserting insn reload before:
 1707: r1096:SF=r658:SF
    Inserting insn reload after:
 1708: r659:SF=r1096:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 176:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
	 Choosing alt 1 in insn 177:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=1097 from oldreg=660, assigning class SSE_REGS to r1097
  177: r1097:SF=r1097:SF*r660:SF
      REG_DEAD r660:SF
    Inserting insn reload before:
 1709: r1097:SF=r660:SF
    Inserting insn reload after:
 1710: r661:SF=r1097:SF

            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 178:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 179:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 180:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 181
	 Choosing alt 1 in insn 181:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 182
	 Choosing alt 1 in insn 182:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 183:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 184:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 185:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 186:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 187
	 Choosing alt 1 in insn 187:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 189:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 190:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 191:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 192:  (0) v  (1) vm {*cmpiusf}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 198:  (0) r  (1) i {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 199:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 200:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 201:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 202:  (0) m  (1) re {*movsi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 203:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 205:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 206:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 207:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 208:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 210:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 211:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 212:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 213:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 216:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 217:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 219:  (0) rBwBz {*call}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 220:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 221:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 222
	 Choosing alt 1 in insn 222:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 223:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 224:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 225:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 226
	 Choosing alt 1 in insn 226:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 227:  (0) m  (1) v {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 232:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 233:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
	 Choosing alt 1 in insn 234:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=1098 from oldreg=662, assigning class SSE_REGS to r1098
  234: r1098:SF=r1098:SF*r662:SF
      REG_DEAD r662:SF
    Inserting insn reload before:
 1711: r1098:SF=r662:SF
    Inserting insn reload after:
 1712: r663:SF=r1098:SF

            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 235:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 236:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 237:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 238
	 Choosing alt 1 in insn 238:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 239:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 240:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 241
	 Choosing alt 1 in insn 241:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 243:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 244:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 245:  (0) m  (1) v {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 246:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 247:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 248:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 249:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 250:  (0) =v  (1) vm {*sqrtsf2_sse}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 251:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 252:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 253:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 255:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 256
	 Choosing alt 1 in insn 256:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 257:  (0) m  (1) v {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 260:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 261:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 262:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 263
	 Choosing alt 1 in insn 263:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 264:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 265:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
	 Choosing alt 1 in insn 266:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=1099 from oldreg=666, assigning class SSE_REGS to r1099
  266: r1099:SF=r1099:SF*r666:SF
      REG_DEAD r666:SF
    Inserting insn reload before:
 1713: r1099:SF=r666:SF
    Inserting insn reload after:
 1714: r667:SF=r1099:SF

            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 267:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 268:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
	 Choosing alt 1 in insn 269:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=1100 from oldreg=668, assigning class SSE_REGS to r1100
  269: r1100:SF=r1100:SF*r668:SF
      REG_DEAD r668:SF
    Inserting insn reload before:
 1715: r1100:SF=r668:SF
    Inserting insn reload after:
 1716: r669:SF=r1100:SF

            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 270:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 271:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 272:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 273
	 Choosing alt 1 in insn 273:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 274
	 Choosing alt 1 in insn 274:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 275:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 276:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 277
	 Choosing alt 1 in insn 277:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 279:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 280:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 281:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 286:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 287:  (0) m  (1) v {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 288:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 289:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 290:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 292:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 293:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 294:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 297:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 298:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 299:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 300:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 301:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
	 Choosing alt 1 in insn 302:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=1101 from oldreg=630, assigning class SSE_REGS to r1101
  302: r1101:SF=r1101:SF*r630:SF
      REG_DEAD r630:SF
    Inserting insn reload before:
 1717: r1101:SF=r630:SF
    Inserting insn reload after:
 1718: r631:SF=r1101:SF

          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 303:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 304:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 305:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 306:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 307:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 308:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 309:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 310:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 311:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 312:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 313:  (0) x  (1) 0  (2) xm {*fop_sf_1}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 314
	 Choosing alt 1 in insn 314:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 315:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 316:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 317:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 318:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 319:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 320:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 321:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 322
	 Choosing alt 1 in insn 322:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 323:  (0) m  (1) v {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 324:  (0) rm  (1) 0  (2) re {*addsi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 330:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 331:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
	 Choosing alt 1 in insn 332:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=1102 from oldreg=632, assigning class SSE_REGS to r1102
  332: r1102:SF=r1102:SF*r632:SF
      REG_DEAD r632:SF
    Inserting insn reload before:
 1719: r1102:SF=r632:SF
    Inserting insn reload after:
 1720: r633:SF=r1102:SF

            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 333:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 334:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 335:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 336:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 337:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 338:  (0) m  (1) v {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 339:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 340:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
	 Choosing alt 1 in insn 341:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=1103 from oldreg=634, assigning class SSE_REGS to r1103
  341: r1103:SF=r1103:SF*r634:SF
      REG_DEAD r634:SF
    Inserting insn reload before:
 1721: r1103:SF=r634:SF
    Inserting insn reload after:
 1722: r635:SF=r1103:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 342:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
	 Choosing alt 1 in insn 343:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=1104 from oldreg=636, assigning class SSE_REGS to r1104
  343: r1104:SF=r1104:SF*r636:SF
      REG_DEAD r636:SF
    Inserting insn reload before:
 1723: r1104:SF=r636:SF
    Inserting insn reload after:
 1724: r637:SF=r1104:SF

            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 344:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 345:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 346:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 347
	 Choosing alt 1 in insn 347:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 348
	 Choosing alt 1 in insn 348:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 349:  (0) =v  (1) vm {*sqrtsf2_sse}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 350:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 351:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 352:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=2,overall=6,losers=1,rld_nregs=1
	 Choosing alt 2 in insn 353:  (0) x  (1) 0  (2) xm {*fop_sf_1}
      Creating newreg=1105 from oldreg=179, assigning class SSE_REGS to r1105
  353: r1105:SF=r1105:SF-r181:SF
      REG_DEAD r181:SF
      REG_DEAD r179:SF
    Inserting insn reload before:
 1725: r1105:SF=r179:SF
    Inserting insn reload after:
 1726: r182:SF=r1105:SF

          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 354:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 356:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 357
	 Choosing alt 1 in insn 357:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 358:  (0) m  (1) v {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 359:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 360:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
	 Choosing alt 1 in insn 361:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=1106 from oldreg=638, assigning class SSE_REGS to r1106
  361: r1106:SF=r1106:SF*r638:SF
      REG_DEAD r638:SF
    Inserting insn reload before:
 1727: r1106:SF=r638:SF
    Inserting insn reload after:
 1728: r639:SF=r1106:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 362:  (0) ?r  (1) rmF {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 363:  (0) v  (1) m {*movsf_internal}
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
          alt=1,overall=8,losers=1,rld_nregs=2
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
          alt=1,overall=8,losers=1,rld_nregs=2
	 Choosing alt 1 in insn 364:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=1107 from oldreg=641, assigning class SSE_REGS to r1107
  364: r1107:SF=r1107:SF*r641:SF
      REG_DEAD r641:SF
    Inserting insn reload before:
 1729: r1107:SF=r641:SF
    Inserting insn reload after:
 1730: r642:SF=r1107:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1221,losers=3,rld_nregs=2
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=614,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=3,overall=1219,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Non pseudo reload: reject++
            1 Non-prefered reload: reject+=600
          alt=4,overall=613,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=7,overall=616,losers=2,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=8,overall=2,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1730:  (0) m  (1) v {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 365:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 366:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 367:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 368
	 Choosing alt 1 in insn 368:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 369
	 Choosing alt 1 in insn 369:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
          alt=1,overall=8,losers=1,rld_nregs=2
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
          alt=1,overall=8,losers=1,rld_nregs=2
	 Choosing alt 1 in insn 370:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=1108 from oldreg=188, assigning class SSE_REGS to r1108
  370: r1108:SF=r1108:SF+r188:SF
      REG_DEAD r188:SF
    Inserting insn reload before:
 1731: r1108:SF=r188:SF
    Inserting insn reload after:
 1732: r189:SF=r1108:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1221,losers=3,rld_nregs=2
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=614,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=3,overall=1219,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Non pseudo reload: reject++
            1 Non-prefered reload: reject+=600
          alt=4,overall=613,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=7,overall=616,losers=2,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=8,overall=2,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1732:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 371:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1229,losers=4,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=628,losers=3,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=1215,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
          alt=4,overall=21,losers=1,rld_nregs=0
            alt=5: Bad operand -- refuse
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=606,losers=1,rld_nregs=1
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=12,losers=1,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=15,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=9,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
          alt=10,overall=0,losers=0,rld_nregs=0
	 Choosing alt 10 in insn 372:  (0) ?Yi  (1) r {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 373:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 375:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 376:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 377:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 378:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
  Commutative operand exchange in insn 380
	 Choosing alt 1 in insn 380:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=1109 from oldreg=642, assigning class SSE_REGS to r1109
      Making reload reg 1109 for reg 642 optional
  380: r195:SF=r194:SF*r1109:SF
      REG_DEAD r642:SF
      REG_DEAD r194:SF
    Inserting insn reload before:
 1733: r1109:SF=r642:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=615,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            alt=1,overall=617,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=3,overall=614,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=4,overall=622,losers=2 -- refuse
            0 Non pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=7,overall=2,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1733:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 381:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 382:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 383:  (0) v  (1) m {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 384:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 385:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 386:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 388
	 Choosing alt 1 in insn 388:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 389:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 390
	 Choosing alt 1 in insn 390:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
  Commutative operand exchange in insn 392
	 Choosing alt 1 in insn 392:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=1110 from oldreg=189, assigning class SSE_REGS to r1110
      Making reload reg 1110 for reg 189 optional
  392: r205:SF=r204:SF*r1110:SF
      REG_DEAD r204:SF
      REG_DEAD r189:SF
    Inserting insn reload before:
 1734: r1110:SF=r189:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=615,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            alt=1,overall=617,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=3,overall=614,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=4,overall=622,losers=2 -- refuse
            0 Non pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=7,overall=2,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1734:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 393:  (0) m  (1) v {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 394:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 395:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 396:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 397:  (0) v  (1) vm {*cmpiusf}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 399:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 400:  (0) v  (1) vm {*cmpiusf}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 404:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 405:  (0) v  (1) vm {*cmpiusf}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 412:  (0) q  (1) qn {*movqi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 417:  (0) q  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 420:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 421:  (0) =rm  (1) %0  (2) re {*andsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 422:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 425:  (0) r  (1) i {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 426:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 427:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 428:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 429:  (0) m  (1) re {*movsi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 430:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 432:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 433:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 434:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 435:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 437:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 438:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 439:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 440:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 443:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 444:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 446:  (0) rBwBz {*call}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 447:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 448:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 449
	 Choosing alt 1 in insn 449:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 450:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 451:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 452:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 453
	 Choosing alt 1 in insn 453:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 454:  (0) m  (1) v {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 459:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 460:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
	 Choosing alt 1 in insn 461:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=1111 from oldreg=643, assigning class SSE_REGS to r1111
  461: r1111:SF=r1111:SF*r643:SF
      REG_DEAD r643:SF
    Inserting insn reload before:
 1735: r1111:SF=r643:SF
    Inserting insn reload after:
 1736: r644:SF=r1111:SF

            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 462:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 463:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 464:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 465
	 Choosing alt 1 in insn 465:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 466:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 467:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 468
	 Choosing alt 1 in insn 468:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 470:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 471:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 472:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 473:  (0) v  (1) m {*movsf_internal}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 474:  (0) v  (1) vm {movv4sf_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 475:  (0) Yv  (1) Yv  (2) 0 {*absnegsf2}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=616,losers=2,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=625,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=615,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=630,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 476:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 478:  (1) rBwBz {*call_value}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
          alt=0,overall=1229,losers=4,rld_nregs=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
          alt=1,overall=628,losers=3,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=1214,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            Cycle danger: overall += LRA_MAX_REJECT
          alt=4,overall=1227,losers=2,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=607,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=7,overall=621,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
          alt=8,overall=13,losers=1,rld_nregs=0
            Staticly defined alt reject+=6
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 479:  (0) ?r  (1) Yj {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 480:  (0) ?m  (1) rF {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 481:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 482:  (0) v  (1) m {*movsf_internal}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 483:  (0) v  (1) vm {movv4sf_internal}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 484:  (0) v  (1) vm {movv4sf_internal}
            1 Scratch win: reject+=2
          alt=0,overall=20,losers=3,rld_nregs=3
            1 Scratch win: reject+=2
          alt=1,overall=20,losers=3,rld_nregs=3
            1 Scratch win: reject+=2
          alt=2,overall=20,losers=3,rld_nregs=3
            1 Scratch win: reject+=2
          alt=3,overall=14,losers=2,rld_nregs=2
            1 Scratch win: reject+=2
          alt=4,overall=14,losers=2,rld_nregs=2
	 Choosing alt 3 in insn 485:  (0) Yv  (1) Yv  (2) Yv  (3) 1  (4) 0  (5) Yvm {copysignsf3_var}
      Creating newreg=1112 from oldreg=1095, assigning class SSE_REGS to r1112
  485: {r826:SF=unspec[r827:SF,r1112:V4SF#0,r829:V4SF,r830:V4SF] 48;clobber r1112:V4SF;}
      REG_UNUSED r1095:V4SF
      REG_DEAD r830:V4SF
      REG_DEAD r829:V4SF
      REG_DEAD r828:SF
      REG_DEAD r827:SF
    Inserting insn reload before:
 1737: clobber r1112:V4SF
 1738: r1112:V4SF#0=r828:SF

            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=627,losers=4,rld_nregs=2
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=623,losers=3,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=3,overall=625,losers=3 -- refuse
            Staticly defined alt reject+=6
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
          alt=4,overall=622,losers=2,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non pseudo reload: reject++
          alt=6,overall=1,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 1738:  (0) v  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 486:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 487:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 488:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 489:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 490
	 Choosing alt 1 in insn 490:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 491:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 492:  (0) v  (1) vm {*cmpiusf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 493:  (0) =qm {*setcc_qi}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 494:  (0) v  (1) vm {*cmpiusf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 495:  (0) =qm {*setcc_qi}
          alt=0,overall=6,losers=1,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=1,overall=13,losers=1 -- refuse
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 496
	 Choosing alt 0 in insn 496:  (0) =q  (1) %0  (2) qmn {*iorqi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 497:  (0) q {*cmpqi_ccno_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 502:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 505:  (0) v  (1) m {*movsf_internal}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 506:  (0) v  (1) vm {movv4sf_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 507:  (0) Yv  (1) Yv  (2) 0 {*absnegsf2}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 508:  (0) m  (1) v {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 509:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 511:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 512:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 513:  (0) q {*cmpqi_ccno_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 516:  (0) ?r  (1) rmF {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 517:  (0) v  (1) m {*movsf_internal}
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
          alt=1,overall=8,losers=1,rld_nregs=2
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
          alt=1,overall=8,losers=1,rld_nregs=2
	 Choosing alt 1 in insn 518:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=1113 from oldreg=649, assigning class SSE_REGS to r1113
  518: r1113:SF=r1113:SF*r649:SF
      REG_DEAD r649:SF
    Inserting insn reload before:
 1739: r1113:SF=r649:SF
    Inserting insn reload after:
 1740: r650:SF=r1113:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1221,losers=3,rld_nregs=2
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=614,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=3,overall=1219,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Non pseudo reload: reject++
            1 Non-prefered reload: reject+=600
          alt=4,overall=613,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=7,overall=616,losers=2,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=8,overall=2,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1740:  (0) m  (1) v {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 519:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 520:  (0) v  (1) m {*movsf_internal}
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
          alt=1,overall=8,losers=1,rld_nregs=2
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
          alt=1,overall=8,losers=1,rld_nregs=2
	 Choosing alt 1 in insn 521:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=1114 from oldreg=651, assigning class SSE_REGS to r1114
  521: r1114:SF=r1114:SF*r651:SF
      REG_DEAD r651:SF
    Inserting insn reload before:
 1741: r1114:SF=r651:SF
    Inserting insn reload after:
 1742: r652:SF=r1114:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1221,losers=3,rld_nregs=2
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=614,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=3,overall=1219,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Non pseudo reload: reject++
            1 Non-prefered reload: reject+=600
          alt=4,overall=613,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=7,overall=616,losers=2,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=8,overall=2,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1742:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 522:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1229,losers=4,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=628,losers=3,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=1215,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
          alt=4,overall=21,losers=1,rld_nregs=0
            alt=5: Bad operand -- refuse
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=606,losers=1,rld_nregs=1
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=12,losers=1,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=15,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=9,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
          alt=10,overall=0,losers=0,rld_nregs=0
	 Choosing alt 10 in insn 523:  (0) ?Yi  (1) r {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 524:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 526:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 527:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 528:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 529:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
  Commutative operand exchange in insn 531
	 Choosing alt 1 in insn 531:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=1115 from oldreg=650, assigning class SSE_REGS to r1115
      Making reload reg 1115 for reg 650 optional
  531: r225:SF=r224:SF*r1115:SF
      REG_DEAD r650:SF
      REG_DEAD r224:SF
    Inserting insn reload before:
 1743: r1115:SF=r650:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=615,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            alt=1,overall=617,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=3,overall=614,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=4,overall=622,losers=2 -- refuse
            0 Non pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=7,overall=2,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1743:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 532:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 533:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 534:  (0) v  (1) m {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 535:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 536:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 537:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 539
	 Choosing alt 1 in insn 539:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 540:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 541
	 Choosing alt 1 in insn 541:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 542:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 543:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 544
	 Choosing alt 1 in insn 544:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 545:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 546:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 547:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 548
	 Choosing alt 1 in insn 548:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 549:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 550:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
  Commutative operand exchange in insn 551
	 Choosing alt 1 in insn 551:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=1116 from oldreg=652, assigning class SSE_REGS to r1116
      Making reload reg 1116 for reg 652 optional
  551: r239:SF=r238:SF*r1116:SF
      REG_DEAD r652:SF
      REG_DEAD r238:SF
    Inserting insn reload before:
 1744: r1116:SF=r652:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=615,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            alt=1,overall=617,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=3,overall=614,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=4,overall=622,losers=2 -- refuse
            0 Non pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=7,overall=2,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1744:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 553:  (0) x  (1) 0  (2) xm {*fop_sf_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 554:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 555:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 556:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 557:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 558:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 559
	 Choosing alt 1 in insn 559:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 560:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 561:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 562:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 563:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 565:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 566:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 567:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 568:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 569:  (0) v  (1) m {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 570:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 571:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 572:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 574
	 Choosing alt 1 in insn 574:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 575
	 Choosing alt 1 in insn 575:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 576:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 577:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 578:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 579:  (0) v  (1) vm {movv4sf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 580:  (0) =Yv  (1) 0  (2) Yvm {*absnegsf2}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 581:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 582:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 583:  (0) v  (1) vm {*cmpiusf}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 585:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 586:  (0) v  (1) vm {*cmpiusf}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 592:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 593:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 594:  (0) v  (1) vm {*cmpiusf}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 600:  (0) q  (1) qn {*movqi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 605:  (0) q  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 608:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 609:  (0) =rm  (1) %0  (2) re {*andsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 610:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 613:  (0) r  (1) i {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 614:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 615:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 616:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 617:  (0) m  (1) re {*movsi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 618:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 620:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 621:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 622:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 623:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 625:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 626:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 627:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 628:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 631:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 632:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 634:  (0) rBwBz {*call}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 639:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 640:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 641
	 Choosing alt 1 in insn 641:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 642:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 643:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 644:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 645:  (0) v  (1) vm {movv4sf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 646:  (0) =Yv  (1) 0  (2) Yvm {*absnegsf2}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 647:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 648:  (0) v  (1) vm {*cmpiusf}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 651:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 652:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 653:  (0) v  (1) vm {*cmpiusf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 654:  (0) =qm {*setcc_qi}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 655:  (0) v  (1) vm {*cmpiusf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 656:  (0) =qm {*setcc_qi}
          alt=0,overall=6,losers=1,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=1,overall=13,losers=1 -- refuse
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 657
	 Choosing alt 0 in insn 657:  (0) =q  (1) %0  (2) qmn {*iorqi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 658:  (0) q {*cmpqi_ccno_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 661:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 664:  (0) m  (1) v {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 665:  (0) rm  (1) 0  (2) re {*addsi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 671:  (0) r  (1) i {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 672:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 673:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 674:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 675:  (0) m  (1) re {*movsi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 676:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 678:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 679:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 680:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 681:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 683:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 684:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 685:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 686:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 689:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 690:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 692:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 695:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 696:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 697:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 698
	 Choosing alt 1 in insn 698:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 699:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 700:  (0) ?r  (1) rmF {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 701:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 702:  (0) v  (1) m {*movsf_internal}
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
          alt=1,overall=8,losers=1,rld_nregs=2
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
          alt=1,overall=8,losers=1,rld_nregs=2
	 Choosing alt 1 in insn 703:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=1117 from oldreg=656, assigning class SSE_REGS to r1117
  703: r1117:SF=r1117:SF*r656:SF
      REG_DEAD r656:SF
    Inserting insn reload before:
 1745: r1117:SF=r656:SF
    Inserting insn reload after:
 1746: r657:SF=r1117:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1221,losers=3,rld_nregs=2
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=614,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=3,overall=1219,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Non pseudo reload: reject++
            1 Non-prefered reload: reject+=600
          alt=4,overall=613,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=7,overall=616,losers=2,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=8,overall=2,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1746:  (0) m  (1) v {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 704:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 705:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 706:  (0) v  (1) m {*movsf_internal}
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
          alt=1,overall=8,losers=1,rld_nregs=2
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
          alt=1,overall=8,losers=1,rld_nregs=2
	 Choosing alt 1 in insn 707:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=1118 from oldreg=267, assigning class SSE_REGS to r1118
  707: r1118:SF=r1118:SF*r877:SF
      REG_DEAD r877:SF
      REG_DEAD r267:SF
    Inserting insn reload before:
 1747: r1118:SF=r267:SF
    Inserting insn reload after:
 1748: r268:SF=r1118:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1221,losers=3,rld_nregs=2
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=614,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=3,overall=1219,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Non pseudo reload: reject++
            1 Non-prefered reload: reject+=600
          alt=4,overall=613,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=7,overall=616,losers=2,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=8,overall=2,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1748:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 708:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1229,losers=4,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=628,losers=3,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=1215,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
          alt=4,overall=21,losers=1,rld_nregs=0
            alt=5: Bad operand -- refuse
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=606,losers=1,rld_nregs=1
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=12,losers=1,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=15,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=9,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
          alt=10,overall=0,losers=0,rld_nregs=0
	 Choosing alt 10 in insn 709:  (0) ?Yi  (1) r {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 710:  (1) rBwBz {*call_value}
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
  Commutative operand exchange in insn 712
	 Choosing alt 1 in insn 712:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=1119 from oldreg=268, assigning class SSE_REGS to r1119
      Making reload reg 1119 for reg 268 optional
  712: r270:SF=r269:SF*r1119:SF
      REG_DEAD r269:SF
      REG_DEAD r268:SF
    Inserting insn reload before:
 1749: r1119:SF=r268:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=615,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            alt=1,overall=617,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=3,overall=614,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=4,overall=622,losers=2 -- refuse
            0 Non pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=7,overall=2,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1749:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 713:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 714:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
  Commutative operand exchange in insn 715
	 Choosing alt 1 in insn 715:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=1120 from oldreg=657, assigning class SSE_REGS to r1120
      Making reload reg 1120 for reg 657 optional
  715: r273:SF=r272:SF*r1120:SF
      REG_DEAD r657:SF
      REG_DEAD r272:SF
    Inserting insn reload before:
 1750: r1120:SF=r657:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=615,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            alt=1,overall=617,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=3,overall=614,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=4,overall=622,losers=2 -- refuse
            0 Non pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=7,overall=2,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1750:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 717:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 718:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 719:  (0) m  (1) v {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 722:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 723:  (0) v  (1) m {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 724:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 725:  (0) v  (1) m {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 726:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 727:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 728
	 Choosing alt 1 in insn 728:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 730:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 731:  (0) m  (1) v {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 732:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 733:  (0) v  (1) m {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 734:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 735:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 736
	 Choosing alt 1 in insn 736:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 738:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 739:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 740:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 741:  (0) m  (1) v {*movsf_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 742:  (0) r  (1) i {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 743:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 744:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 745:  (0) r  (1) i {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 746:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 747:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 748:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 749:  (0) m  (1) re {*movsi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 750:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 752:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 753:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 754:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 755:  (0) =r  (1) v {fix_truncsfsi_sse}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 756:  (0) m  (1) re {*movsi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 757:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 758:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 759:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 762:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 763:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 764:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 765:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 768:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 769:  (0) r  (1) rem {*movdi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 770:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 771:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 774:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 775:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 777:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 778:  (0) r  (1) i {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 779:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 780:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 781:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 782:  (0) m  (1) re {*movsi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 783:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 785:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 786:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 788:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 789:  (0) r  (1) i {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 790:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 791:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 792:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 793:  (0) m  (1) re {*movsi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 794:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 796:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 797:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 798:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 799:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 801:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 802:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 804:  (0) rBwBz {*call}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 805:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 806:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 807:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 808:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 809:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 810:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 811:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 812:  (0) m  (1) v {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 813:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 814:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 815:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 817:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 818:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 819:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 822:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 823:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 824:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 825:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 826:  (0) v  (1) m {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 827:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 828:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 829:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 830:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 831:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 832:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 833:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 834:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 835:  (0) v  (1) m {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 836:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 837:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 838:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 839:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 840:  (0) v  (1) m {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 841:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 842:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 843:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 844:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 845:  (0) v  (1) m {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 846:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 847:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 848:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 849
	 Choosing alt 1 in insn 849:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 850:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 851:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 852:  (0) x  (1) 0  (2) xm {*fop_sf_1}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 854:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 855:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 856:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 857:  (0) x  (1) 0  (2) xm {*fop_sf_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 858:  (0) v  (1) vm {*cmpiusf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 859:  (0) =qm {*setcc_qi}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 860:  (0) v  (1) vm {*cmpiusf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 861:  (0) =qm {*setcc_qi}
          alt=0,overall=6,losers=1,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=1,overall=13,losers=1 -- refuse
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 862
	 Choosing alt 0 in insn 862:  (0) =q  (1) %0  (2) qmn {*iorqi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 863:  (0) q {*cmpqi_ccno_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 868:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 869:  (0) v  (1) m {*movsf_internal}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 870:  (0) v  (1) vm {movv4sf_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 871:  (0) Yv  (1) Yv  (2) 0 {*absnegsf2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 873:  (1) rBwBz {*call_value}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
          alt=0,overall=1229,losers=4,rld_nregs=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
          alt=1,overall=628,losers=3,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=1214,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            Cycle danger: overall += LRA_MAX_REJECT
          alt=4,overall=1227,losers=2,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=607,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=7,overall=621,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
          alt=8,overall=13,losers=1,rld_nregs=0
            Staticly defined alt reject+=6
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 874:  (0) ?r  (1) Yj {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 875:  (0) ?m  (1) rF {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 876:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 877:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 878:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=6,losers=1,rld_nregs=1
	 Choosing alt 2 in insn 879:  (0) x  (1) 0  (2) xm {*fop_sf_1}
      Creating newreg=1121 from oldreg=925, assigning class SSE_REGS to r1121
  879: r1121:SF=r1121:SF-r312:SF
      REG_DEAD r925:SF
      REG_DEAD r312:SF
    Inserting insn reload before:
 1751: r1121:SF=r925:SF
    Inserting insn reload after:
 1752: r313:SF=r1121:SF

          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 880:  (0) =v  (1) vm {*sqrtsf2_sse}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 881:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 884:  (1) rBwBz {*call_value}
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 886:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 887:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 888:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 889:  (0) m  (1) v {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 890:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 891:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 892:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 893
	 Choosing alt 1 in insn 893:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 894:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 895:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 896:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 897
	 Choosing alt 1 in insn 897:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 898:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 899:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 901:  (0) x  (1) 0  (2) xm {*fop_sf_1}
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 903:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 904:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 905:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 906:  (0) =v  (1) vm {*sqrtsf2_sse}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 907:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 908:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 909:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 910:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 911:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 912:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 913:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 914:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 915:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 916
	 Choosing alt 1 in insn 916:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 917:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 918:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 920:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 921:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 922:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 923:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 924:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 925:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 926:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 927:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 928:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 929:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 930:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 931:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 932:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 933:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 934:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 935:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 936
	 Choosing alt 1 in insn 936:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 937:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 938:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 939:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 940:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 941:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 942:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=6,losers=1,rld_nregs=1
	 Choosing alt 2 in insn 943:  (0) x  (1) 0  (2) xm {*fop_sf_1}
      Creating newreg=1122 from oldreg=940, assigning class SSE_REGS to r1122
  943: r1122:SF=r1122:SF-r352:SF
      REG_DEAD r940:SF
      REG_DEAD r352:SF
    Inserting insn reload before:
 1753: r1122:SF=r940:SF
    Inserting insn reload after:
 1754: r353:SF=r1122:SF

          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 945:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 946:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 947:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 948:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 949:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 950:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 951:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 952:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 953:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 954:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=6,losers=1,rld_nregs=1
	 Choosing alt 2 in insn 955:  (0) x  (1) 0  (2) xm {*fop_sf_1}
      Creating newreg=1123 from oldreg=942, assigning class SSE_REGS to r1123
  955: r1123:SF=r1123:SF-r361:SF
      REG_DEAD r942:SF
      REG_DEAD r361:SF
    Inserting insn reload before:
 1755: r1123:SF=r942:SF
    Inserting insn reload after:
 1756: r362:SF=r1123:SF

          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 957:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 958:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 959:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 960
	 Choosing alt 1 in insn 960:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 961:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 962:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 964:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 965:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 966:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 967:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 968
	 Choosing alt 1 in insn 968:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 969:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 970:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 971:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 972:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 973:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 974:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 976:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 977:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 978:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 979:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 980:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 981:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 982:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 983:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 984:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 985:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 987:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 988:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 989:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 990:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 991:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 992:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 993:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 994
	 Choosing alt 1 in insn 994:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 995:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 996:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 998:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 999:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1000:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1001:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1002:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 1003:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1004:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1005:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1006:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1007:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 1008:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1009:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1010:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1011:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1012:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 1013:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1014:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1015:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1016:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1017:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 1018:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1019:  (0) m  (1) v {*movsf_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1020:  (0) r  (1) i {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 1021:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1022:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1023:  (0) r  (1) i {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 1024:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1025:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1026:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1027:  (0) m  (1) re {*movsi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1028:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1030:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1031:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1032:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1033:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1036:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1037:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1038:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1039:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1042:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1043:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1044:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1045:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1048:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1049:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1050:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1051:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1054:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1055:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1056:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1057:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1060:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1061:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1062:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1063:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1066:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1067:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1068:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1069:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1072:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1073:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1074:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1075:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1078:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1079:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1081:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1082:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1083:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1084:  (0) r  (1) r  (2) le {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1085:  (0) v  (1) m {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1086:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1087:  (0) m  (1) v {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 1088:  (0) rm  (1) 0  (2) re {*addsi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1094:  (0) r  (1) i {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 1095:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1096:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1097:  (0) r  (1) i {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 1098:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1099:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1100:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1101:  (0) m  (1) re {*movsi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1102:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1104:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1105:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1106:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1107:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1110:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1111:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1112:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1113:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1116:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1117:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1118:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1119:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1122:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1123:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1124:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1125:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1128:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1129:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1131:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1132:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1133:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1134:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1135:  (0) v  (1) vm {*cmpiusf}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1137:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1138:  (0) v  (1) vm {*cmpiusf}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1144:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
	 Choosing alt 1 in insn 1145:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=1124 from oldreg=688, assigning class SSE_REGS to r1124
 1145: r1124:SF=r1124:SF*r688:SF
      REG_DEAD r688:SF
    Inserting insn reload before:
 1757: r1124:SF=r688:SF
    Inserting insn reload after:
 1758: r689:SF=r1124:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1146:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1147:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1148
	 Choosing alt 1 in insn 1148:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1149:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 1150:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1151:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1152:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=6,losers=1,rld_nregs=1
	 Choosing alt 2 in insn 1153:  (0) x  (1) 0  (2) xm {*fop_sf_1}
      Creating newreg=1125 from oldreg=987, assigning class SSE_REGS to r1125
 1153: r1125:SF=r1125:SF-r423:SF
      REG_DEAD r987:SF
      REG_DEAD r423:SF
    Inserting insn reload before:
 1759: r1125:SF=r987:SF
    Inserting insn reload after:
 1760: r986:SF=r1125:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1154:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1155:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1156:  (0) v  (1) vm {*cmpiusf}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1162:  (0) r  (1) i {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 1163:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1164:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1165:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1166:  (0) m  (1) re {*movsi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1167:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1169:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1170:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1171:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1172:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1174:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1175:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1177:  (0) rBwBz {*call}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1178:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1179:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1180:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1181:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1182:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 1183:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1184:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1185:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1186:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1189:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1190:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1191
	 Choosing alt 1 in insn 1191:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1192:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1193:  (0) x  (1) 0  (2) xm {*fop_sf_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1194:  (0) =v  (1) vm {*sqrtsf2_sse}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1195:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=6,losers=1,rld_nregs=1
	 Choosing alt 2 in insn 1196:  (0) x  (1) 0  (2) xm {*fop_sf_1}
      Creating newreg=1126 from oldreg=996, assigning class SSE_REGS to r1126
 1196: r1126:SF=r1126:SF-r431:SF
      REG_DEAD r996:SF
      REG_DEAD r431:SF
    Inserting insn reload before:
 1761: r1126:SF=r996:SF
    Inserting insn reload after:
 1762: r432:SF=r1126:SF

          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 1198:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1199:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1200:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1201:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1202:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1203:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1204
	 Choosing alt 1 in insn 1204:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1205:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 1206:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1207
	 Choosing alt 1 in insn 1207:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1208:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1209:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1210:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1211:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1212:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1213:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 1214:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1215:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1216:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1217:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
	 Choosing alt 1 in insn 1218:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=1127 from oldreg=694, assigning class SSE_REGS to r1127
 1218: r1127:SF=r1127:SF*r694:SF
      REG_DEAD r694:SF
    Inserting insn reload before:
 1763: r1127:SF=r694:SF
    Inserting insn reload after:
 1764: r695:SF=r1127:SF

            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1219:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1220:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
	 Choosing alt 1 in insn 1221:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=1128 from oldreg=696, assigning class SSE_REGS to r1128
 1221: r1128:SF=r1128:SF*r696:SF
      REG_DEAD r696:SF
    Inserting insn reload before:
 1765: r1128:SF=r696:SF
    Inserting insn reload after:
 1766: r697:SF=r1128:SF

            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1222:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1223:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1224:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1225
	 Choosing alt 1 in insn 1225:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1226
	 Choosing alt 1 in insn 1226:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1227:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 1228:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1229
	 Choosing alt 1 in insn 1229:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1230:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 1231:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1232:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1233:  (0) ?r  (1) rmF {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1234:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1235:  (0) v  (1) m {*movsf_internal}
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
          alt=1,overall=8,losers=1,rld_nregs=2
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
          alt=1,overall=8,losers=1,rld_nregs=2
	 Choosing alt 1 in insn 1236:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=1129 from oldreg=699, assigning class SSE_REGS to r1129
 1236: r1129:SF=r1129:SF*r699:SF
      REG_DEAD r699:SF
    Inserting insn reload before:
 1767: r1129:SF=r699:SF
    Inserting insn reload after:
 1768: r700:SF=r1129:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1221,losers=3,rld_nregs=2
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=614,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=3,overall=1219,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Non pseudo reload: reject++
            1 Non-prefered reload: reject+=600
          alt=4,overall=613,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=7,overall=616,losers=2,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=8,overall=2,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1768:  (0) m  (1) v {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1237:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1238:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1239:  (0) v  (1) m {*movsf_internal}
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
          alt=1,overall=8,losers=1,rld_nregs=2
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
          alt=1,overall=8,losers=1,rld_nregs=2
	 Choosing alt 1 in insn 1240:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=1130 from oldreg=455, assigning class SSE_REGS to r1130
 1240: r1130:SF=r1130:SF*r1003:SF
      REG_DEAD r1003:SF
      REG_DEAD r455:SF
    Inserting insn reload before:
 1769: r1130:SF=r455:SF
    Inserting insn reload after:
 1770: r456:SF=r1130:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1221,losers=3,rld_nregs=2
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=614,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=3,overall=1219,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Non pseudo reload: reject++
            1 Non-prefered reload: reject+=600
          alt=4,overall=613,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=7,overall=616,losers=2,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=8,overall=2,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1770:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1241:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1229,losers=4,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=628,losers=3,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=1215,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
          alt=4,overall=21,losers=1,rld_nregs=0
            alt=5: Bad operand -- refuse
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=606,losers=1,rld_nregs=1
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=12,losers=1,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=15,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=9,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
          alt=10,overall=0,losers=0,rld_nregs=0
	 Choosing alt 10 in insn 1242:  (0) ?Yi  (1) r {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1243:  (1) rBwBz {*call_value}
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1245
	 Choosing alt 1 in insn 1245:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=1131 from oldreg=456, assigning class SSE_REGS to r1131
      Making reload reg 1131 for reg 456 optional
 1245: r458:SF=r457:SF*r1131:SF
      REG_DEAD r457:SF
      REG_DEAD r456:SF
    Inserting insn reload before:
 1771: r1131:SF=r456:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=615,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            alt=1,overall=617,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=3,overall=614,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=4,overall=622,losers=2 -- refuse
            0 Non pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=7,overall=2,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1771:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1246:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 1247:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1248
	 Choosing alt 1 in insn 1248:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=1132 from oldreg=700, assigning class SSE_REGS to r1132
      Making reload reg 1132 for reg 700 optional
 1248: r461:SF=r460:SF*r1132:SF
      REG_DEAD r700:SF
      REG_DEAD r460:SF
    Inserting insn reload before:
 1772: r1132:SF=r700:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=615,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            alt=1,overall=617,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=3,overall=614,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=4,overall=622,losers=2 -- refuse
            0 Non pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=7,overall=2,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1772:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1249:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 1250:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1251:  (0) m  (1) v {*movsf_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1252:  (0) r  (1) i {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 1253:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1254:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1255:  (0) r  (1) i {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 1256:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1257:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1258:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1259:  (0) m  (1) re {*movsi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1260:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1262:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1263:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1264:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1265:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1268:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1269:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1270:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1271:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1274:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1275:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1276:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1277:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1280:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1281:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1282:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1283:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1286:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1287:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1288:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1289:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1292:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1293:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1294:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1295:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1298:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1299:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1301:  (0) rBwBz {*call}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1306:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
	 Choosing alt 1 in insn 1307:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=1133 from oldreg=675, assigning class SSE_REGS to r1133
 1307: r1133:SF=r1133:SF*r675:SF
      REG_DEAD r675:SF
    Inserting insn reload before:
 1773: r1133:SF=r675:SF
    Inserting insn reload after:
 1774: r676:SF=r1133:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1308:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1309:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1310
	 Choosing alt 1 in insn 1310:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1311:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 1312:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1313:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1314:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 1315:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1316:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1317:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1318:  (0) v  (1) vm {*cmpiusf}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1321:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1322:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1323:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1324:  (0) v  (1) vm {*cmpiusf}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1326:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1327:  (0) v  (1) vm {*cmpiusf}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1334:  (0) q  (1) qn {*movqi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1339:  (0) q  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1342:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1343:  (0) =rm  (1) %0  (2) re {*andsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1344:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1347:  (0) r  (1) i {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 1348:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1349:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1350:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1351:  (0) m  (1) re {*movsi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1352:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1354:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1355:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1356:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1357:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1359:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1360:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1362:  (0) rBwBz {*call}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1363:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1364:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1365:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1366:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1367:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 1368:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1369:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1370:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1371:  (0) v  (1) vm {movv4sf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1372:  (0) =Yv  (1) 0  (2) Yvm {*absnegsf2}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1373:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1376:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1377:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1378
	 Choosing alt 1 in insn 1378:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1379:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=6,losers=1,rld_nregs=1
	 Choosing alt 2 in insn 1380:  (0) x  (1) 0  (2) xm {*fop_sf_1}
      Creating newreg=1134 from oldreg=476, assigning class SSE_REGS to r1134
 1380: r1134:SF=r1134:SF/r477:SF
      REG_DEAD r477:SF
      REG_DEAD r476:SF
    Inserting insn reload before:
 1775: r1134:SF=r476:SF
    Inserting insn reload after:
 1776: r478:SF=r1134:SF

          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1381:  (0) =v  (1) vm {*sqrtsf2_sse}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1382:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1383:  (0) x  (1) 0  (2) xm {*fop_sf_1}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1385
	 Choosing alt 1 in insn 1385:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1386:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1387:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
	 Choosing alt 1 in insn 1388:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=1135 from oldreg=679, assigning class SSE_REGS to r1135
 1388: r1135:SF=r1135:SF*r679:SF
      REG_DEAD r679:SF
    Inserting insn reload before:
 1777: r1135:SF=r679:SF
    Inserting insn reload after:
 1778: r680:SF=r1135:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1389:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1390:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1391
	 Choosing alt 1 in insn 1391:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1392:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 1393:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1394:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1395:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1396:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1397:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1398:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1399:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1400:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 1401:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1402:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1403:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1404:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
	 Choosing alt 1 in insn 1405:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=1136 from oldreg=681, assigning class SSE_REGS to r1136
 1405: r1136:SF=r1136:SF*r681:SF
      REG_DEAD r681:SF
    Inserting insn reload before:
 1779: r1136:SF=r681:SF
    Inserting insn reload after:
 1780: r682:SF=r1136:SF

            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1406:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1407:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
	 Choosing alt 1 in insn 1408:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=1137 from oldreg=683, assigning class SSE_REGS to r1137
 1408: r1137:SF=r1137:SF*r683:SF
      REG_DEAD r683:SF
    Inserting insn reload before:
 1781: r1137:SF=r683:SF
    Inserting insn reload after:
 1782: r684:SF=r1137:SF

            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1409:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1410:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1411:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1412
	 Choosing alt 1 in insn 1412:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1413
	 Choosing alt 1 in insn 1413:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1414:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 1415:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1416
	 Choosing alt 1 in insn 1416:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1417:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 1418:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1419:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1420:  (0) ?r  (1) rmF {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1421:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1422:  (0) v  (1) m {*movsf_internal}
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
          alt=1,overall=8,losers=1,rld_nregs=2
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
          alt=1,overall=8,losers=1,rld_nregs=2
	 Choosing alt 1 in insn 1423:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=1138 from oldreg=686, assigning class SSE_REGS to r1138
 1423: r1138:SF=r1138:SF*r686:SF
      REG_DEAD r686:SF
    Inserting insn reload before:
 1783: r1138:SF=r686:SF
    Inserting insn reload after:
 1784: r687:SF=r1138:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1221,losers=3,rld_nregs=2
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=614,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=3,overall=1219,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Non pseudo reload: reject++
            1 Non-prefered reload: reject+=600
          alt=4,overall=613,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=7,overall=616,losers=2,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=8,overall=2,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1784:  (0) m  (1) v {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1424:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1425:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1426:  (0) v  (1) m {*movsf_internal}
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
          alt=1,overall=8,losers=1,rld_nregs=2
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
          alt=1,overall=8,losers=1,rld_nregs=2
	 Choosing alt 1 in insn 1427:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=1139 from oldreg=503, assigning class SSE_REGS to r1139
 1427: r1139:SF=r1139:SF*r1042:SF
      REG_DEAD r1042:SF
      REG_DEAD r503:SF
    Inserting insn reload before:
 1785: r1139:SF=r503:SF
    Inserting insn reload after:
 1786: r504:SF=r1139:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1221,losers=3,rld_nregs=2
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=614,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=3,overall=1219,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Non pseudo reload: reject++
            1 Non-prefered reload: reject+=600
          alt=4,overall=613,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=7,overall=616,losers=2,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=8,overall=2,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1786:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1428:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1229,losers=4,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=628,losers=3,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=1215,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
          alt=4,overall=21,losers=1,rld_nregs=0
            alt=5: Bad operand -- refuse
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=606,losers=1,rld_nregs=1
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=12,losers=1,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=15,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=9,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
          alt=10,overall=0,losers=0,rld_nregs=0
	 Choosing alt 10 in insn 1429:  (0) ?Yi  (1) r {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1430:  (1) rBwBz {*call_value}
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1432
	 Choosing alt 1 in insn 1432:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=1140 from oldreg=504, assigning class SSE_REGS to r1140
      Making reload reg 1140 for reg 504 optional
 1432: r506:SF=r505:SF*r1140:SF
      REG_DEAD r505:SF
      REG_DEAD r504:SF
    Inserting insn reload before:
 1787: r1140:SF=r504:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=615,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            alt=1,overall=617,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=3,overall=614,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=4,overall=622,losers=2 -- refuse
            0 Non pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=7,overall=2,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1787:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1433:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 1434:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1435
	 Choosing alt 1 in insn 1435:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=1141 from oldreg=687, assigning class SSE_REGS to r1141
      Making reload reg 1141 for reg 687 optional
 1435: r509:SF=r508:SF*r1141:SF
      REG_DEAD r687:SF
      REG_DEAD r508:SF
    Inserting insn reload before:
 1788: r1141:SF=r687:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=615,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            alt=1,overall=617,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=3,overall=614,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=4,overall=622,losers=2 -- refuse
            0 Non pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=7,overall=2,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1788:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1436:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 1437:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1438:  (0) m  (1) v {*movsf_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1439:  (0) r  (1) i {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 1440:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1441:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1442:  (0) r  (1) i {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 1443:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1444:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1445:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1446:  (0) m  (1) re {*movsi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1447:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1449:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1450:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1451:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1452:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1455:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1456:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1457:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1458:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1461:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1462:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1463:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1464:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1467:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1468:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1469:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1470:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1473:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1474:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1475:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1476:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1479:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1480:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1481:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1482:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1485:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1486:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1488:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1491:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1492:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1493:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1495:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1496:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1497:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1500:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1501:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1502:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1503:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1504:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1505:  (0) m  (1) v {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1506:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1507:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1508:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1509:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1510:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1511:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1512:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
	 Choosing alt 1 in insn 1513:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=1142 from oldreg=515, assigning class SSE_REGS to r1142
 1513: r1142:SF=r1142:SF*r518:SF
      REG_DEAD r518:SF
      REG_DEAD r515:SF
    Inserting insn reload before:
 1789: r1142:SF=r515:SF
    Inserting insn reload after:
 1790: r519:SF=r1142:SF

            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1514:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1515:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1516:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1517:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1518
	 Choosing alt 1 in insn 1518:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1519:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1520
	 Choosing alt 1 in insn 1520:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1523:  (1) rBwBz {*call_value}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
          alt=0,overall=1229,losers=4,rld_nregs=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
          alt=1,overall=628,losers=3,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=1214,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            Cycle danger: overall += LRA_MAX_REJECT
          alt=4,overall=1227,losers=2,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=607,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=7,overall=621,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
          alt=8,overall=13,losers=1,rld_nregs=0
            Staticly defined alt reject+=6
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 1524:  (0) ?r  (1) Yj {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1525:  (0) ?m  (1) rF {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1526:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1527:  (0) v  (1) m {*movsf_internal}
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
          alt=1,overall=8,losers=1,rld_nregs=2
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
          alt=1,overall=8,losers=1,rld_nregs=2
	 Choosing alt 1 in insn 1528:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=1143 from oldreg=703, assigning class SSE_REGS to r1143
 1528: r1143:SF=r1143:SF*r703:SF
      REG_DEAD r703:SF
    Inserting insn reload before:
 1791: r1143:SF=r703:SF
    Inserting insn reload after:
 1792: r704:SF=r1143:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1221,losers=3,rld_nregs=2
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=614,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=3,overall=1219,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Non pseudo reload: reject++
            1 Non-prefered reload: reject+=600
          alt=4,overall=613,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=7,overall=616,losers=2,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=8,overall=2,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1792:  (0) m  (1) v {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1529:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1530:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1531:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1532:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1533:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1534:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1535:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1536
	 Choosing alt 1 in insn 1536:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
          alt=1,overall=8,losers=1,rld_nregs=2
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
          alt=1,overall=8,losers=1,rld_nregs=2
	 Choosing alt 1 in insn 1538:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=1144 from oldreg=705, assigning class SSE_REGS to r1144
 1538: r1144:SF=r1144:SF*r705:SF
      REG_DEAD r705:SF
    Inserting insn reload before:
 1793: r1144:SF=r705:SF
    Inserting insn reload after:
 1794: r706:SF=r1144:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1221,losers=3,rld_nregs=2
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=614,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=3,overall=1219,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Non pseudo reload: reject++
            1 Non-prefered reload: reject+=600
          alt=4,overall=613,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=7,overall=616,losers=2,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=8,overall=2,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1794:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1539:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1540:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1541
	 Choosing alt 1 in insn 1541:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1542:  (0) v  (1) m {*movsf_internal}
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
          alt=1,overall=8,losers=1,rld_nregs=2
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
          alt=1,overall=8,losers=1,rld_nregs=2
	 Choosing alt 1 in insn 1543:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=1145 from oldreg=530, assigning class SSE_REGS to r1145
 1543: r1145:SF=r1145:SF*r531:SF
      REG_DEAD r531:SF
      REG_DEAD r530:SF
    Inserting insn reload before:
 1795: r1145:SF=r530:SF
    Inserting insn reload after:
 1796: r532:SF=r1145:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1221,losers=3,rld_nregs=2
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=614,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=3,overall=1219,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Non pseudo reload: reject++
            1 Non-prefered reload: reject+=600
          alt=4,overall=613,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=7,overall=616,losers=2,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=8,overall=2,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1796:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1544:  (0) ?r  (1) rmF {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1229,losers=4,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=628,losers=3,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=1215,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
          alt=4,overall=21,losers=1,rld_nregs=0
            alt=5: Bad operand -- refuse
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=606,losers=1,rld_nregs=1
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=12,losers=1,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=15,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=9,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
          alt=10,overall=0,losers=0,rld_nregs=0
	 Choosing alt 10 in insn 1545:  (0) ?Yi  (1) r {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1546:  (1) rBwBz {*call_value}
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1548
	 Choosing alt 1 in insn 1548:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=1146 from oldreg=532, assigning class SSE_REGS to r1146
      Making reload reg 1146 for reg 532 optional
 1548: r534:SF=r533:SF*r1146:SF
      REG_DEAD r533:SF
      REG_DEAD r532:SF
    Inserting insn reload before:
 1797: r1146:SF=r532:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=615,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            alt=1,overall=617,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=3,overall=614,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=4,overall=622,losers=2 -- refuse
            0 Non pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=7,overall=2,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1797:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
	 Choosing alt 1 in insn 1550:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=1147 from oldreg=707, assigning class SSE_REGS to r1147
 1550: r1147:SF=r1147:SF*r707:SF
      REG_DEAD r707:SF
    Inserting insn reload before:
 1798: r1147:SF=r707:SF
    Inserting insn reload after:
 1799: r708:SF=r1147:SF

            2 Non pseudo reload: reject++
          alt=1,overall=7,losers=1,rld_nregs=1
            2 Non pseudo reload: reject++
          alt=1,overall=7,losers=1,rld_nregs=1
	 Choosing alt 1 in insn 1551:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=1148 from oldreg=704, assigning class SSE_REGS to r1148
      Creating newreg=1149 from oldreg=706, assigning class SSE_REGS to r1149
      Making reload reg 1149 for reg 706 optional
 1551: r1148:SF=r1148:SF+r1149:SF
      REG_DEAD r706:SF
      REG_DEAD r704:SF
    Inserting insn reload before:
 1800: r1148:SF=r704:SF
 1802: r1149:SF=r706:SF
    Inserting insn reload after:
 1801: r535:SF=r1148:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=615,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            alt=1,overall=617,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=3,overall=614,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=4,overall=622,losers=2 -- refuse
            0 Non pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=7,overall=2,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1800:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=615,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            alt=1,overall=617,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=3,overall=614,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=4,overall=622,losers=2 -- refuse
            0 Non pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=7,overall=2,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1802:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1552:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1553:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1554:  (0) =v  (1) vm {*sqrtsf2_sse}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1555:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1556:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1557:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1558:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1559:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1560:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1561:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1562:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1563:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1564:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1565:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1566:  (0) x  (1) 0  (2) xm {*fop_sf_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1568:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1569:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1570:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1571:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1572:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=6,losers=1,rld_nregs=1
	 Choosing alt 2 in insn 1573:  (0) x  (1) 0  (2) xm {*fop_sf_1}
      Creating newreg=1150 from oldreg=543, assigning class SSE_REGS to r1150
 1573: r1150:SF=r1150:SF/r546:SF
      REG_DEAD r546:SF
      REG_DEAD r543:SF
    Inserting insn reload before:
 1803: r1150:SF=r543:SF
    Inserting insn reload after:
 1804: r547:SF=r1150:SF

          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1574:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1575:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1576:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1577:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1578:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1579:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1580:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
	 Choosing alt 1 in insn 1581:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=1151 from oldreg=709, assigning class SSE_REGS to r1151
 1581: r1151:SF=r1151:SF*r709:SF
      REG_DEAD r709:SF
    Inserting insn reload before:
 1805: r1151:SF=r709:SF
    Inserting insn reload after:
 1806: r710:SF=r1151:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1582:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1583:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1584:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1585:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1586:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1588:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1589
	 Choosing alt 1 in insn 1589:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1590:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 1591:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1592
	 Choosing alt 1 in insn 1592:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1593:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1594:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1595:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1596:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1597:  (0) r  (1) r  (2) le {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1598:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1599:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1600:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1601:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1602:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1603:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1604:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1605:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1606:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1607:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1608:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1609:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1610:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1611:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1612:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1614:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1615:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1616:  (0) r  (1) r  (2) le {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1617:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1618:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1619:  (0) m  (1) v {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 1620:  (0) rm  (1) 0  (2) re {*addsi_1}
	   Spilling non-eliminable hard regs: 6

********** Inheritance #1: **********

EBB 2
EBB 3
EBB 4
EBB 5
EBB 6
EBB 7
EBB 8
EBB 9
EBB 10
EBB 58
EBB 11
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=1152 from oldreg=189, assigning class SSE_REGS to inheritance r1152
    Original reg change 189->1152 (bb11):
 1732: r1152:SF=r1108:SF
    Add original<-inheritance after:
 1807: r189:SF=r1152:SF

    Inheritance reuse change 189->1152 (bb11):
 1734: r1110:SF=r1152:SF
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=1153 from oldreg=642, assigning class SSE_REGS to inheritance r1153
    Original reg change 642->1153 (bb11):
 1730: r1153:SF=r1107:SF
    Add original<-inheritance after:
 1808: r642:SF=r1153:SF

    Inheritance reuse change 642->1153 (bb11):
 1733: r1109:SF=r1153:SF
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
	    Removing dead insn:
  1807: r189:SF=r1152:SF
deleting insn with uid = 1807.
	    Removing dead insn:
  1808: r642:SF=r1153:SF
deleting insn with uid = 1808.
EBB 12
EBB 13
EBB 14
EBB 15
EBB 16
EBB 17
EBB 18
EBB 19
EBB 20
EBB 21
EBB 22
EBB 23
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=1154 from oldreg=652, assigning class SSE_REGS to inheritance r1154
    Original reg change 652->1154 (bb23):
 1742: r1154:SF=r1114:SF
    Add original<-inheritance after:
 1809: r652:SF=r1154:SF

    Inheritance reuse change 652->1154 (bb23):
 1744: r1116:SF=r1154:SF
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=1155 from oldreg=650, assigning class SSE_REGS to inheritance r1155
    Original reg change 650->1155 (bb23):
 1740: r1155:SF=r1113:SF
    Add original<-inheritance after:
 1810: r650:SF=r1155:SF

    Inheritance reuse change 650->1155 (bb23):
 1743: r1115:SF=r1155:SF
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
	    Removing dead insn:
  1809: r652:SF=r1154:SF
deleting insn with uid = 1809.
	    Removing dead insn:
  1810: r650:SF=r1155:SF
deleting insn with uid = 1810.
EBB 24
EBB 25
EBB 26
EBB 27
EBB 28
EBB 29
EBB 30
EBB 31
EBB 32
EBB 33
EBB 59
EBB 34
EBB 60
EBB 35
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=1156 from oldreg=268, assigning class SSE_REGS to inheritance r1156
    Original reg change 268->1156 (bb35):
 1748: r1156:SF=r1118:SF
    Add original<-inheritance after:
 1811: r268:SF=r1156:SF

    Inheritance reuse change 268->1156 (bb35):
 1749: r1119:SF=r1156:SF
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=1157 from oldreg=657, assigning class SSE_REGS to inheritance r1157
    Original reg change 657->1157 (bb35):
 1746: r1157:SF=r1117:SF
    Add original<-inheritance after:
 1812: r657:SF=r1157:SF

    Inheritance reuse change 657->1157 (bb35):
 1750: r1120:SF=r1157:SF
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
	    Removing dead insn:
  1811: r268:SF=r1156:SF
deleting insn with uid = 1811.
	    Removing dead insn:
  1812: r657:SF=r1157:SF
deleting insn with uid = 1812.
EBB 36
EBB 37
EBB 38
EBB 39
EBB 40
EBB 61
EBB 41
EBB 42
EBB 43
EBB 44
EBB 45
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=1158 from oldreg=456, assigning class SSE_REGS to inheritance r1158
    Original reg change 456->1158 (bb45):
 1770: r1158:SF=r1130:SF
    Add original<-inheritance after:
 1813: r456:SF=r1158:SF

    Inheritance reuse change 456->1158 (bb45):
 1771: r1131:SF=r1158:SF
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=1159 from oldreg=700, assigning class SSE_REGS to inheritance r1159
    Original reg change 700->1159 (bb45):
 1768: r1159:SF=r1129:SF
    Add original<-inheritance after:
 1814: r700:SF=r1159:SF

    Inheritance reuse change 700->1159 (bb45):
 1772: r1132:SF=r1159:SF
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
	    Removing dead insn:
  1813: r456:SF=r1158:SF
deleting insn with uid = 1813.
	    Removing dead insn:
  1814: r700:SF=r1159:SF
deleting insn with uid = 1814.
EBB 46
EBB 47
EBB 48
EBB 49
EBB 50
EBB 51
EBB 52
EBB 53
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=1160 from oldreg=504, assigning class SSE_REGS to inheritance r1160
    Original reg change 504->1160 (bb53):
 1786: r1160:SF=r1139:SF
    Add original<-inheritance after:
 1815: r504:SF=r1160:SF

    Inheritance reuse change 504->1160 (bb53):
 1787: r1140:SF=r1160:SF
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=1161 from oldreg=687, assigning class SSE_REGS to inheritance r1161
    Original reg change 687->1161 (bb53):
 1784: r1161:SF=r1138:SF
    Add original<-inheritance after:
 1816: r687:SF=r1161:SF

    Inheritance reuse change 687->1161 (bb53):
 1788: r1141:SF=r1161:SF
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
	    Removing dead insn:
  1815: r504:SF=r1160:SF
deleting insn with uid = 1815.
	    Removing dead insn:
  1816: r687:SF=r1161:SF
deleting insn with uid = 1816.
EBB 54
EBB 55
EBB 56
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=1162 from oldreg=532, assigning class SSE_REGS to inheritance r1162
    Original reg change 532->1162 (bb56):
 1796: r1162:SF=r1145:SF
    Add original<-inheritance after:
 1817: r532:SF=r1162:SF

    Inheritance reuse change 532->1162 (bb56):
 1797: r1146:SF=r1162:SF
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=1163 from oldreg=706, assigning class SSE_REGS to inheritance r1163
    Original reg change 706->1163 (bb56):
 1794: r1163:SF=r1144:SF
    Add original<-inheritance after:
 1818: r706:SF=r1163:SF

    Inheritance reuse change 706->1163 (bb56):
 1802: r1149:SF=r1163:SF
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=1164 from oldreg=704, assigning class SSE_REGS to inheritance r1164
    Original reg change 704->1164 (bb56):
 1792: r1164:SF=r1143:SF
    Add original<-inheritance after:
 1819: r704:SF=r1164:SF

    Inheritance reuse change 704->1164 (bb56):
 1800: r1148:SF=r1164:SF
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
	    Removing dead insn:
  1817: r532:SF=r1162:SF
deleting insn with uid = 1817.
	    Removing dead insn:
  1818: r706:SF=r1163:SF
deleting insn with uid = 1818.
	    Removing dead insn:
  1819: r704:SF=r1164:SF
deleting insn with uid = 1819.
EBB 62
EBB 57

********** Pseudo live ranges #1: **********

  BB 57
   Insn 1660: point = 0, n_alt = -1
  BB 62
   Insn 1705: point = 0, n_alt = -1
  BB 55
   Insn 1498: point = 0, n_alt = -1
   Insn 1497: point = 0, n_alt = 0
   Insn 1496: point = 1, n_alt = 0
   Insn 1495: point = 2, n_alt = 0
  BB 56
   Insn 1687: point = 3, n_alt = -1
   Insn 1620: point = 3, n_alt = 1
   Insn 1619: point = 3, n_alt = 8
   Insn 1618: point = 4, n_alt = 3
   Insn 1617: point = 5, n_alt = 2
   Insn 1616: point = 7, n_alt = 3
   Insn 1615: point = 9, n_alt = 0
   Insn 1614: point = 11, n_alt = 0
   Insn 1613: point = 12, n_alt = -1
   Insn 1612: point = 14, n_alt = 1
   Insn 1611: point = 16, n_alt = 7
   Insn 1610: point = 18, n_alt = 3
   Insn 1609: point = 19, n_alt = 3
   Insn 1608: point = 21, n_alt = 0
   Insn 1607: point = 23, n_alt = 0
   Insn 1606: point = 24, n_alt = 1
   Insn 1605: point = 26, n_alt = 7
   Insn 1604: point = 28, n_alt = 3
   Insn 1603: point = 29, n_alt = 3
   Insn 1602: point = 31, n_alt = 0
   Insn 1601: point = 33, n_alt = 0
   Insn 1600: point = 34, n_alt = 8
   Insn 1599: point = 35, n_alt = 3
   Insn 1598: point = 36, n_alt = 2
   Insn 1597: point = 38, n_alt = 3
   Insn 1596: point = 40, n_alt = 0
   Insn 1595: point = 42, n_alt = 0
   Insn 1594: point = 43, n_alt = 7
   Insn 1593: point = 45, n_alt = 3
   Insn 1592: point = 46, n_alt = 1
   Insn 1591: point = 48, n_alt = 1
   Insn 1590: point = 50, n_alt = 7
   Insn 1589: point = 51, n_alt = 1
   Insn 1588: point = 53, n_alt = 7
   Insn 1587: point = 54, n_alt = -1
   Insn 1586: point = 56, n_alt = 2
   Insn 1585: point = 58, n_alt = 7
   Insn 1584: point = 60, n_alt = 3
   Insn 1583: point = 61, n_alt = 1
   Insn 1582: point = 63, n_alt = 7
   Insn 1806: point = 64, n_alt = -1
	Hard reg 22 is preferable by r1151 with profit 1
   Insn 1581: point = 66, n_alt = 1
   Insn 1805: point = 67, n_alt = -1
	Hard reg 22 is preferable by r1151 with profit 1
	Hard reg 21 is preferable by r1151 with profit 1
   Insn 1580: point = 68, n_alt = 7
   Insn 1579: point = 69, n_alt = 8
   Insn 1578: point = 70, n_alt = 3
   Insn 1577: point = 71, n_alt = 1
   Insn 1576: point = 73, n_alt = 3
   Insn 1575: point = 75, n_alt = 0
   Insn 1574: point = 77, n_alt = 0
   Insn 1804: point = 78, n_alt = -1
	Hard reg 21 is preferable by r1150 with profit 1
   Insn 1573: point = 80, n_alt = 2
   Insn 1803: point = 81, n_alt = -1
	Hard reg 21 is preferable by r1150 with profit 1
	Hard reg 22 is preferable by r1150 with profit 1
   Insn 1572: point = 83, n_alt = 7
   Insn 1571: point = 85, n_alt = 3
   Insn 1570: point = 86, n_alt = 3
   Insn 1569: point = 88, n_alt = 0
   Insn 1568: point = 90, n_alt = 0
   Insn 1567: point = 91, n_alt = -1
   Insn 1566: point = 93, n_alt = 2
   Insn 1565: point = 95, n_alt = 7
   Insn 1564: point = 97, n_alt = 3
   Insn 1563: point = 98, n_alt = 3
   Insn 1562: point = 100, n_alt = 0
   Insn 1561: point = 102, n_alt = 0
   Insn 1560: point = 103, n_alt = 7
   Insn 1559: point = 105, n_alt = 3
   Insn 1558: point = 106, n_alt = 3
   Insn 1557: point = 108, n_alt = 0
   Insn 1556: point = 110, n_alt = 0
   Insn 1555: point = 111, n_alt = 8
   Insn 1554: point = 112, n_alt = 0
   Insn 1553: point = 113, n_alt = 8
   Insn 1552: point = 114, n_alt = 2
   Insn 1801: point = 116, n_alt = -1
	Hard reg 21 is preferable by r1148 with profit 1
   Insn 1551: point = 118, n_alt = 1
   Insn 1802: point = 119, n_alt = 7
	   Creating copy r1149<-r1163@1
   Insn 1800: point = 121, n_alt = 7
	   Creating copy r1148<-r1164@1
   Insn 1799: point = 123, n_alt = -1
	Hard reg 22 is preferable by r1147 with profit 1
   Insn 1550: point = 125, n_alt = 1
   Insn 1798: point = 126, n_alt = -1
	Hard reg 22 is preferable by r1147 with profit 1
	Hard reg 21 is preferable by r1147 with profit 1
   Insn 1549: point = 127, n_alt = -1
   Insn 1548: point = 129, n_alt = 1
   Insn 1797: point = 131, n_alt = 7
	   Creating copy r1146<-r1162@1
   Insn 1547: point = 133, n_alt = -1
   Insn 1546: point = 134, n_alt = 0
   Insn 1545: point = 134, n_alt = 10
   Insn 1544: point = 135, n_alt = 3
   Insn 1796: point = 136, n_alt = 8
	   Creating copy r1145->r1162@1
   Insn 1543: point = 138, n_alt = 1
   Insn 1795: point = 139, n_alt = -1
	Hard reg 21 is preferable by r1145 with profit 1
   Insn 1542: point = 141, n_alt = 7
   Insn 1541: point = 142, n_alt = 1
   Insn 1540: point = 144, n_alt = 7
   Insn 1539: point = 145, n_alt = 7
   Insn 1794: point = 146, n_alt = 8
	   Creating copy r1144->r1163@1
   Insn 1538: point = 148, n_alt = 1
   Insn 1793: point = 149, n_alt = -1
	Hard reg 21 is preferable by r1144 with profit 1
   Insn 1537: point = 150, n_alt = -1
   Insn 1536: point = 152, n_alt = 1
   Insn 1535: point = 154, n_alt = 7
   Insn 1534: point = 156, n_alt = 3
   Insn 1533: point = 157, n_alt = 3
   Insn 1532: point = 159, n_alt = 0
   Insn 1531: point = 161, n_alt = 0
   Insn 1530: point = 162, n_alt = 7
   Insn 1529: point = 164, n_alt = 3
   Insn 1792: point = 165, n_alt = 8
	   Creating copy r1143->r1164@1
   Insn 1528: point = 167, n_alt = 1
   Insn 1791: point = 168, n_alt = -1
	Hard reg 21 is preferable by r1143 with profit 1
   Insn 1527: point = 169, n_alt = 7
   Insn 1526: point = 171, n_alt = 3
   Insn 1525: point = 172, n_alt = 4
   Insn 1524: point = 173, n_alt = 9
   Insn 1523: point = 174, n_alt = 0
   Insn 1522: point = 174, n_alt = -1
   Insn 1521: point = 175, n_alt = -1
   Insn 1520: point = 176, n_alt = 1
   Insn 1519: point = 178, n_alt = 1
   Insn 1518: point = 180, n_alt = 1
   Insn 1517: point = 182, n_alt = 7
   Insn 1516: point = 183, n_alt = 7
   Insn 1515: point = 184, n_alt = 7
   Insn 1514: point = 186, n_alt = 3
   Insn 1790: point = 187, n_alt = -1
	Hard reg 24 is preferable by r1142 with profit 1
   Insn 1513: point = 189, n_alt = 1
   Insn 1789: point = 190, n_alt = -1
	Hard reg 24 is preferable by r1142 with profit 1
	Hard reg 22 is preferable by r1142 with profit 1
   Insn 1512: point = 192, n_alt = 7
   Insn 1511: point = 194, n_alt = 3
   Insn 1510: point = 195, n_alt = 3
   Insn 1509: point = 197, n_alt = 0
   Insn 1508: point = 199, n_alt = 0
   Insn 1507: point = 200, n_alt = 7
   Insn 1506: point = 202, n_alt = 3
   Insn 1505: point = 203, n_alt = 8
   Insn 1504: point = 204, n_alt = 7
   Insn 1503: point = 206, n_alt = 3
   Insn 1502: point = 207, n_alt = 3
   Insn 1501: point = 209, n_alt = 0
   Insn 1500: point = 211, n_alt = 0
  BB 54
   Insn 1493: point = 213, n_alt = 1
   Insn 1492: point = 213, n_alt = 0
   Insn 1491: point = 215, n_alt = 3
  BB 45
   Insn 1683: point = 216, n_alt = -1
   Insn 1301: point = 216, n_alt = 0
   Insn 1300: point = 216, n_alt = -1
   Insn 1299: point = 217, n_alt = 3
   Insn 1298: point = 218, n_alt = 0
   Insn 1297: point = 218, n_alt = -1
   Insn 1296: point = 219, n_alt = -1
   Insn 1295: point = 220, n_alt = 0
   Insn 1294: point = 220, n_alt = 3
   Insn 1293: point = 221, n_alt = 3
   Insn 1292: point = 222, n_alt = 0
   Insn 1291: point = 222, n_alt = -1
   Insn 1290: point = 223, n_alt = -1
   Insn 1289: point = 224, n_alt = 0
   Insn 1288: point = 224, n_alt = 3
   Insn 1287: point = 225, n_alt = 3
   Insn 1286: point = 226, n_alt = 0
   Insn 1285: point = 226, n_alt = -1
   Insn 1284: point = 227, n_alt = -1
   Insn 1283: point = 228, n_alt = 0
   Insn 1282: point = 228, n_alt = 3
   Insn 1281: point = 229, n_alt = 3
   Insn 1280: point = 230, n_alt = 0
   Insn 1279: point = 230, n_alt = -1
   Insn 1278: point = 231, n_alt = -1
   Insn 1277: point = 232, n_alt = 0
   Insn 1276: point = 232, n_alt = 3
   Insn 1275: point = 233, n_alt = 3
   Insn 1274: point = 234, n_alt = 0
   Insn 1273: point = 234, n_alt = -1
   Insn 1272: point = 235, n_alt = -1
   Insn 1271: point = 236, n_alt = 0
   Insn 1270: point = 236, n_alt = 3
   Insn 1269: point = 237, n_alt = 3
   Insn 1268: point = 238, n_alt = 0
   Insn 1267: point = 238, n_alt = -1
   Insn 1266: point = 239, n_alt = -1
   Insn 1265: point = 240, n_alt = 0
   Insn 1264: point = 240, n_alt = 3
   Insn 1263: point = 241, n_alt = 3
   Insn 1262: point = 242, n_alt = 0
   Insn 1261: point = 242, n_alt = -1
   Insn 1260: point = 243, n_alt = 3
   Insn 1259: point = 244, n_alt = 1
   Insn 1258: point = 244, n_alt = 1
   Insn 1257: point = 244, n_alt = 1
   Insn 1256: point = 244, n_alt = 5
   Insn 1255: point = 245, n_alt = 4
   Insn 1254: point = 246, n_alt = 1
   Insn 1253: point = 246, n_alt = 5
   Insn 1252: point = 247, n_alt = 4
   Insn 1251: point = 248, n_alt = 8
   Insn 1250: point = 249, n_alt = 1
   Insn 1249: point = 251, n_alt = 7
   Insn 1248: point = 252, n_alt = 1
   Insn 1772: point = 254, n_alt = 7
	   Creating copy r1132<-r1159@1
   Insn 1247: point = 256, n_alt = 1
   Insn 1246: point = 258, n_alt = 7
   Insn 1245: point = 259, n_alt = 1
   Insn 1771: point = 261, n_alt = 7
	   Creating copy r1131<-r1158@1
   Insn 1244: point = 263, n_alt = -1
   Insn 1243: point = 264, n_alt = 0
   Insn 1242: point = 264, n_alt = 10
   Insn 1241: point = 265, n_alt = 0
   Insn 1770: point = 265, n_alt = 8
	   Creating copy r1130->r1158@1
   Insn 1240: point = 267, n_alt = 1
   Insn 1769: point = 268, n_alt = -1
	Hard reg 22 is preferable by r1130 with profit 1
   Insn 1239: point = 270, n_alt = 7
   Insn 1238: point = 271, n_alt = 7
   Insn 1237: point = 273, n_alt = 3
   Insn 1768: point = 274, n_alt = 8
	   Creating copy r1129->r1159@1
   Insn 1236: point = 276, n_alt = 1
   Insn 1767: point = 277, n_alt = -1
	Hard reg 21 is preferable by r1129 with profit 1
   Insn 1235: point = 278, n_alt = 7
   Insn 1234: point = 280, n_alt = 3
   Insn 1233: point = 281, n_alt = 3
   Insn 1232: point = 282, n_alt = 8
   Insn 1231: point = 283, n_alt = 1
   Insn 1230: point = 285, n_alt = 7
   Insn 1229: point = 286, n_alt = 1
   Insn 1228: point = 288, n_alt = 1
   Insn 1227: point = 290, n_alt = 7
   Insn 1226: point = 291, n_alt = 1
   Insn 1225: point = 293, n_alt = 1
   Insn 1224: point = 295, n_alt = 7
   Insn 1223: point = 296, n_alt = 7
   Insn 1222: point = 298, n_alt = 3
   Insn 1766: point = 299, n_alt = -1
	Hard reg 22 is preferable by r1128 with profit 1
   Insn 1221: point = 301, n_alt = 1
   Insn 1765: point = 302, n_alt = -1
	Hard reg 22 is preferable by r1128 with profit 1
	Hard reg 21 is preferable by r1128 with profit 1
   Insn 1220: point = 303, n_alt = 7
   Insn 1219: point = 305, n_alt = 3
   Insn 1764: point = 306, n_alt = -1
	Hard reg 23 is preferable by r1127 with profit 1
   Insn 1218: point = 308, n_alt = 1
   Insn 1763: point = 309, n_alt = -1
	Hard reg 23 is preferable by r1127 with profit 1
	Hard reg 21 is preferable by r1127 with profit 1
   Insn 1217: point = 310, n_alt = 7
   Insn 1216: point = 311, n_alt = 8
   Insn 1215: point = 312, n_alt = 2
   Insn 1214: point = 314, n_alt = 1
   Insn 1213: point = 316, n_alt = 7
   Insn 1212: point = 318, n_alt = 3
   Insn 1211: point = 319, n_alt = 2
   Insn 1210: point = 321, n_alt = 7
   Insn 1209: point = 322, n_alt = 7
   Insn 1208: point = 323, n_alt = 8
   Insn 1207: point = 324, n_alt = 1
   Insn 1206: point = 326, n_alt = 1
   Insn 1205: point = 328, n_alt = 7
   Insn 1204: point = 329, n_alt = 1
   Insn 1203: point = 331, n_alt = 7
   Insn 1202: point = 332, n_alt = 7
   Insn 1201: point = 333, n_alt = 1
   Insn 1200: point = 335, n_alt = 7
   Insn 1199: point = 336, n_alt = 8
   Insn 1198: point = 337, n_alt = 1
   Insn 1197: point = 339, n_alt = -1
   Insn 1762: point = 341, n_alt = -1
	Hard reg 22 is preferable by r1126 with profit 1
   Insn 1196: point = 343, n_alt = 2
   Insn 1761: point = 344, n_alt = -1
	Hard reg 22 is preferable by r1126 with profit 1
	Hard reg 23 is preferable by r1126 with profit 1
   Insn 1195: point = 346, n_alt = 7
   Insn 1194: point = 347, n_alt = 0
   Insn 1193: point = 348, n_alt = 2
   Insn 1192: point = 350, n_alt = 7
   Insn 1191: point = 351, n_alt = 1
   Insn 1190: point = 353, n_alt = 7
   Insn 1189: point = 354, n_alt = 7
  BB 44
   Insn 1186: point = 355, n_alt = 8
   Insn 1185: point = 356, n_alt = 2
   Insn 1184: point = 358, n_alt = 7
   Insn 1183: point = 359, n_alt = 1
   Insn 1182: point = 361, n_alt = 7
   Insn 1181: point = 362, n_alt = 1
   Insn 1180: point = 364, n_alt = 7
   Insn 1179: point = 365, n_alt = 8
   Insn 1178: point = 366, n_alt = 7
   Insn 1177: point = 367, n_alt = 0
   Insn 1176: point = 367, n_alt = -1
   Insn 1175: point = 368, n_alt = 3
   Insn 1174: point = 369, n_alt = 0
   Insn 1173: point = 369, n_alt = -1
   Insn 1172: point = 370, n_alt = 4
   Insn 1171: point = 370, n_alt = 0
   Insn 1170: point = 370, n_alt = 3
   Insn 1169: point = 371, n_alt = 0
   Insn 1168: point = 371, n_alt = -1
   Insn 1167: point = 372, n_alt = 3
   Insn 1166: point = 373, n_alt = 1
   Insn 1165: point = 373, n_alt = 1
   Insn 1164: point = 373, n_alt = 1
   Insn 1163: point = 373, n_alt = 5
   Insn 1162: point = 374, n_alt = 4
  BB 43
   Insn 1157: point = 375, n_alt = -1
   Insn 1156: point = 375, n_alt = 1
   Insn 1155: point = 376, n_alt = 7
   Insn 1154: point = 377, n_alt = 8
   Insn 1760: point = 378, n_alt = -1
	Hard reg 21 is preferable by r1125 with profit 1
   Insn 1153: point = 380, n_alt = 2
   Insn 1759: point = 381, n_alt = -1
	Hard reg 21 is preferable by r1125 with profit 1
	Hard reg 22 is preferable by r1125 with profit 1
   Insn 1152: point = 383, n_alt = 7
   Insn 1151: point = 384, n_alt = 2
   Insn 1150: point = 386, n_alt = 1
   Insn 1149: point = 388, n_alt = 7
   Insn 1148: point = 389, n_alt = 1
   Insn 1147: point = 391, n_alt = 7
   Insn 1146: point = 392, n_alt = 7
   Insn 1758: point = 393, n_alt = -1
	Hard reg 22 is preferable by r1124 with profit 1
   Insn 1145: point = 395, n_alt = 1
   Insn 1757: point = 396, n_alt = -1
	Hard reg 22 is preferable by r1124 with profit 1
	Hard reg 21 is preferable by r1124 with profit 1
   Insn 1144: point = 397, n_alt = 7
  BB 53
   Insn 1488: point = 398, n_alt = 0
   Insn 1487: point = 398, n_alt = -1
   Insn 1486: point = 399, n_alt = 3
   Insn 1485: point = 400, n_alt = 0
   Insn 1484: point = 400, n_alt = -1
   Insn 1483: point = 401, n_alt = -1
   Insn 1482: point = 402, n_alt = 0
   Insn 1481: point = 402, n_alt = 3
   Insn 1480: point = 403, n_alt = 3
   Insn 1479: point = 404, n_alt = 0
   Insn 1478: point = 404, n_alt = -1
   Insn 1477: point = 405, n_alt = -1
   Insn 1476: point = 406, n_alt = 0
   Insn 1475: point = 406, n_alt = 3
   Insn 1474: point = 407, n_alt = 3
   Insn 1473: point = 408, n_alt = 0
   Insn 1472: point = 408, n_alt = -1
   Insn 1471: point = 409, n_alt = -1
   Insn 1470: point = 410, n_alt = 0
   Insn 1469: point = 410, n_alt = 3
   Insn 1468: point = 411, n_alt = 3
   Insn 1467: point = 412, n_alt = 0
   Insn 1466: point = 412, n_alt = -1
   Insn 1465: point = 413, n_alt = -1
   Insn 1464: point = 414, n_alt = 0
   Insn 1463: point = 414, n_alt = 3
   Insn 1462: point = 415, n_alt = 3
   Insn 1461: point = 416, n_alt = 0
   Insn 1460: point = 416, n_alt = -1
   Insn 1459: point = 417, n_alt = -1
   Insn 1458: point = 418, n_alt = 0
   Insn 1457: point = 418, n_alt = 3
   Insn 1456: point = 419, n_alt = 3
   Insn 1455: point = 420, n_alt = 0
   Insn 1454: point = 420, n_alt = -1
   Insn 1453: point = 421, n_alt = -1
   Insn 1452: point = 422, n_alt = 0
   Insn 1451: point = 422, n_alt = 3
   Insn 1450: point = 423, n_alt = 3
   Insn 1449: point = 424, n_alt = 0
   Insn 1448: point = 424, n_alt = -1
   Insn 1447: point = 425, n_alt = 3
   Insn 1446: point = 426, n_alt = 1
   Insn 1445: point = 426, n_alt = 1
   Insn 1444: point = 426, n_alt = 1
   Insn 1443: point = 426, n_alt = 5
   Insn 1442: point = 427, n_alt = 4
   Insn 1441: point = 428, n_alt = 1
   Insn 1440: point = 428, n_alt = 5
   Insn 1439: point = 429, n_alt = 4
   Insn 1438: point = 430, n_alt = 8
   Insn 1437: point = 431, n_alt = 1
   Insn 1436: point = 433, n_alt = 7
   Insn 1435: point = 434, n_alt = 1
   Insn 1788: point = 436, n_alt = 7
	   Creating copy r1141<-r1161@1
   Insn 1434: point = 438, n_alt = 1
   Insn 1433: point = 440, n_alt = 7
   Insn 1432: point = 441, n_alt = 1
   Insn 1787: point = 443, n_alt = 7
	   Creating copy r1140<-r1160@1
   Insn 1431: point = 445, n_alt = -1
   Insn 1430: point = 446, n_alt = 0
   Insn 1429: point = 446, n_alt = 10
   Insn 1428: point = 447, n_alt = 0
   Insn 1786: point = 447, n_alt = 8
	   Creating copy r1139->r1160@1
   Insn 1427: point = 449, n_alt = 1
   Insn 1785: point = 450, n_alt = -1
	Hard reg 22 is preferable by r1139 with profit 1
   Insn 1426: point = 452, n_alt = 7
   Insn 1425: point = 453, n_alt = 7
   Insn 1424: point = 455, n_alt = 3
   Insn 1784: point = 456, n_alt = 8
	   Creating copy r1138->r1161@1
   Insn 1423: point = 458, n_alt = 1
   Insn 1783: point = 459, n_alt = -1
	Hard reg 21 is preferable by r1138 with profit 1
   Insn 1422: point = 460, n_alt = 7
   Insn 1421: point = 462, n_alt = 3
   Insn 1420: point = 463, n_alt = 3
   Insn 1419: point = 464, n_alt = 8
   Insn 1418: point = 465, n_alt = 1
   Insn 1417: point = 467, n_alt = 7
   Insn 1416: point = 468, n_alt = 1
   Insn 1415: point = 470, n_alt = 1
   Insn 1414: point = 472, n_alt = 7
   Insn 1413: point = 473, n_alt = 1
   Insn 1412: point = 475, n_alt = 1
   Insn 1411: point = 477, n_alt = 7
   Insn 1410: point = 478, n_alt = 7
   Insn 1409: point = 480, n_alt = 3
   Insn 1782: point = 481, n_alt = -1
	Hard reg 22 is preferable by r1137 with profit 1
   Insn 1408: point = 483, n_alt = 1
   Insn 1781: point = 484, n_alt = -1
	Hard reg 22 is preferable by r1137 with profit 1
	Hard reg 21 is preferable by r1137 with profit 1
   Insn 1407: point = 485, n_alt = 7
   Insn 1406: point = 487, n_alt = 3
   Insn 1780: point = 488, n_alt = -1
	Hard reg 23 is preferable by r1136 with profit 1
   Insn 1405: point = 490, n_alt = 1
   Insn 1779: point = 491, n_alt = -1
	Hard reg 23 is preferable by r1136 with profit 1
	Hard reg 21 is preferable by r1136 with profit 1
   Insn 1404: point = 492, n_alt = 7
   Insn 1403: point = 493, n_alt = 8
   Insn 1402: point = 494, n_alt = 2
   Insn 1401: point = 496, n_alt = 1
   Insn 1400: point = 498, n_alt = 7
   Insn 1399: point = 500, n_alt = 3
   Insn 1398: point = 501, n_alt = 2
   Insn 1397: point = 503, n_alt = 7
   Insn 1396: point = 504, n_alt = 7
   Insn 1395: point = 505, n_alt = 8
   Insn 1394: point = 506, n_alt = 2
   Insn 1393: point = 508, n_alt = 1
   Insn 1392: point = 510, n_alt = 7
   Insn 1391: point = 511, n_alt = 1
   Insn 1390: point = 513, n_alt = 7
   Insn 1389: point = 514, n_alt = 7
   Insn 1778: point = 515, n_alt = -1
	Hard reg 22 is preferable by r1135 with profit 1
   Insn 1388: point = 517, n_alt = 1
   Insn 1777: point = 518, n_alt = -1
	Hard reg 22 is preferable by r1135 with profit 1
	Hard reg 21 is preferable by r1135 with profit 1
   Insn 1387: point = 519, n_alt = 7
   Insn 1386: point = 520, n_alt = 8
   Insn 1385: point = 521, n_alt = 1
   Insn 1384: point = 523, n_alt = -1
   Insn 1383: point = 525, n_alt = 2
   Insn 1382: point = 527, n_alt = 7
   Insn 1381: point = 528, n_alt = 0
   Insn 1776: point = 529, n_alt = -1
	Hard reg 22 is preferable by r1134 with profit 1
   Insn 1380: point = 531, n_alt = 2
   Insn 1775: point = 532, n_alt = -1
	Hard reg 22 is preferable by r1134 with profit 1
	Hard reg 21 is preferable by r1134 with profit 1
   Insn 1379: point = 534, n_alt = 7
   Insn 1378: point = 535, n_alt = 1
   Insn 1377: point = 537, n_alt = 7
   Insn 1376: point = 538, n_alt = 7
  BB 52
   Insn 1373: point = 539, n_alt = 8
   Insn 1372: point = 540, n_alt = 0
   Insn 1371: point = 542, n_alt = 2
   Insn 1370: point = 543, n_alt = 2
   Insn 1369: point = 545, n_alt = 7
   Insn 1368: point = 546, n_alt = 1
   Insn 1367: point = 548, n_alt = 7
   Insn 1366: point = 549, n_alt = 1
   Insn 1365: point = 551, n_alt = 7
   Insn 1364: point = 552, n_alt = 8
   Insn 1363: point = 553, n_alt = 7
   Insn 1362: point = 554, n_alt = 0
   Insn 1361: point = 554, n_alt = -1
   Insn 1360: point = 555, n_alt = 3
   Insn 1359: point = 556, n_alt = 0
   Insn 1358: point = 556, n_alt = -1
   Insn 1357: point = 557, n_alt = 4
   Insn 1356: point = 557, n_alt = 0
   Insn 1355: point = 557, n_alt = 3
   Insn 1354: point = 558, n_alt = 0
   Insn 1353: point = 558, n_alt = -1
   Insn 1352: point = 559, n_alt = 3
   Insn 1351: point = 560, n_alt = 1
   Insn 1350: point = 560, n_alt = 1
   Insn 1349: point = 560, n_alt = 1
   Insn 1348: point = 560, n_alt = 5
   Insn 1347: point = 561, n_alt = 4
  BB 51
   Insn 1345: point = 562, n_alt = -1
   Insn 1344: point = 562, n_alt = 0
   Insn 1343: point = 563, n_alt = 0
   Insn 1342: point = 563, n_alt = 0
  BB 49
   Insn 1685: point = 566, n_alt = -1
   Insn 1334: point = 566, n_alt = 1
  BB 50
   Insn 1339: point = 567, n_alt = 1
  BB 48
   Insn 1328: point = 568, n_alt = -1
   Insn 1327: point = 568, n_alt = 1
   Insn 1326: point = 569, n_alt = 7
  BB 47
   Insn 1325: point = 571, n_alt = -1
   Insn 1324: point = 571, n_alt = 1
   Insn 1323: point = 572, n_alt = 7
   Insn 1322: point = 573, n_alt = 7
   Insn 1321: point = 575, n_alt = 3
  BB 46
   Insn 1319: point = 576, n_alt = -1
   Insn 1318: point = 576, n_alt = 1
   Insn 1317: point = 577, n_alt = 7
   Insn 1316: point = 578, n_alt = 8
   Insn 1315: point = 579, n_alt = 1
   Insn 1314: point = 581, n_alt = 7
   Insn 1313: point = 582, n_alt = 2
   Insn 1312: point = 584, n_alt = 1
   Insn 1311: point = 586, n_alt = 7
   Insn 1310: point = 587, n_alt = 1
   Insn 1309: point = 589, n_alt = 7
   Insn 1308: point = 590, n_alt = 7
   Insn 1774: point = 591, n_alt = -1
	Hard reg 22 is preferable by r1133 with profit 1
   Insn 1307: point = 593, n_alt = 1
   Insn 1773: point = 594, n_alt = -1
	Hard reg 22 is preferable by r1133 with profit 1
	Hard reg 21 is preferable by r1133 with profit 1
   Insn 1306: point = 595, n_alt = 7
  BB 42
   Insn 1139: point = 596, n_alt = -1
   Insn 1138: point = 596, n_alt = 1
   Insn 1137: point = 597, n_alt = 7
  BB 41
   Insn 1136: point = 599, n_alt = -1
   Insn 1135: point = 599, n_alt = 1
   Insn 1134: point = 600, n_alt = 7
   Insn 1133: point = 601, n_alt = 7
   Insn 1132: point = 603, n_alt = 3
   Insn 1131: point = 604, n_alt = 0
   Insn 1130: point = 604, n_alt = -1
   Insn 1129: point = 605, n_alt = 3
   Insn 1128: point = 606, n_alt = 0
   Insn 1127: point = 606, n_alt = -1
   Insn 1126: point = 607, n_alt = -1
   Insn 1125: point = 608, n_alt = 0
   Insn 1124: point = 608, n_alt = 3
   Insn 1123: point = 609, n_alt = 3
   Insn 1122: point = 610, n_alt = 0
   Insn 1121: point = 610, n_alt = -1
   Insn 1120: point = 611, n_alt = -1
   Insn 1119: point = 612, n_alt = 0
   Insn 1118: point = 612, n_alt = 3
   Insn 1117: point = 613, n_alt = 3
   Insn 1116: point = 614, n_alt = 0
   Insn 1115: point = 614, n_alt = -1
   Insn 1114: point = 615, n_alt = -1
   Insn 1113: point = 616, n_alt = 0
   Insn 1112: point = 616, n_alt = 3
   Insn 1111: point = 617, n_alt = 3
   Insn 1110: point = 618, n_alt = 0
   Insn 1109: point = 618, n_alt = -1
   Insn 1108: point = 619, n_alt = -1
   Insn 1107: point = 620, n_alt = 0
   Insn 1106: point = 620, n_alt = 3
   Insn 1105: point = 621, n_alt = 3
   Insn 1104: point = 622, n_alt = 0
   Insn 1103: point = 622, n_alt = -1
   Insn 1102: point = 623, n_alt = 3
   Insn 1101: point = 624, n_alt = 1
   Insn 1100: point = 624, n_alt = 1
   Insn 1099: point = 624, n_alt = 1
   Insn 1098: point = 624, n_alt = 5
   Insn 1097: point = 625, n_alt = 4
   Insn 1096: point = 626, n_alt = 1
   Insn 1095: point = 626, n_alt = 5
   Insn 1094: point = 627, n_alt = 4
  BB 61
   Insn 1702: point = 628, n_alt = -1
  BB 37
   Insn 820: point = 628, n_alt = -1
   Insn 819: point = 628, n_alt = 0
   Insn 818: point = 629, n_alt = 0
   Insn 817: point = 630, n_alt = 0
  BB 40
   Insn 1680: point = 631, n_alt = -1
   Insn 1088: point = 631, n_alt = 1
   Insn 1087: point = 631, n_alt = 8
   Insn 1086: point = 632, n_alt = 3
   Insn 1085: point = 633, n_alt = 7
   Insn 1084: point = 634, n_alt = 3
   Insn 1083: point = 636, n_alt = 0
   Insn 1082: point = 638, n_alt = 0
   Insn 1081: point = 639, n_alt = 0
   Insn 1080: point = 639, n_alt = -1
   Insn 1079: point = 640, n_alt = 3
   Insn 1078: point = 641, n_alt = 0
   Insn 1077: point = 641, n_alt = -1
   Insn 1076: point = 642, n_alt = -1
   Insn 1075: point = 643, n_alt = 0
   Insn 1074: point = 643, n_alt = 3
   Insn 1073: point = 644, n_alt = 3
   Insn 1072: point = 645, n_alt = 0
   Insn 1071: point = 645, n_alt = -1
   Insn 1070: point = 646, n_alt = -1
   Insn 1069: point = 647, n_alt = 0
   Insn 1068: point = 647, n_alt = 3
   Insn 1067: point = 648, n_alt = 3
   Insn 1066: point = 649, n_alt = 0
   Insn 1065: point = 649, n_alt = -1
   Insn 1064: point = 650, n_alt = -1
   Insn 1063: point = 651, n_alt = 0
   Insn 1062: point = 651, n_alt = 3
   Insn 1061: point = 652, n_alt = 3
   Insn 1060: point = 653, n_alt = 0
   Insn 1059: point = 653, n_alt = -1
   Insn 1058: point = 654, n_alt = -1
   Insn 1057: point = 655, n_alt = 0
   Insn 1056: point = 655, n_alt = 3
   Insn 1055: point = 656, n_alt = 3
   Insn 1054: point = 657, n_alt = 0
   Insn 1053: point = 657, n_alt = -1
   Insn 1052: point = 658, n_alt = -1
   Insn 1051: point = 659, n_alt = 0
   Insn 1050: point = 659, n_alt = 3
   Insn 1049: point = 660, n_alt = 3
   Insn 1048: point = 661, n_alt = 0
   Insn 1047: point = 661, n_alt = -1
   Insn 1046: point = 662, n_alt = -1
   Insn 1045: point = 663, n_alt = 0
   Insn 1044: point = 663, n_alt = 3
   Insn 1043: point = 664, n_alt = 3
   Insn 1042: point = 665, n_alt = 0
   Insn 1041: point = 665, n_alt = -1
   Insn 1040: point = 666, n_alt = -1
   Insn 1039: point = 667, n_alt = 0
   Insn 1038: point = 667, n_alt = 3
   Insn 1037: point = 668, n_alt = 3
   Insn 1036: point = 669, n_alt = 0
   Insn 1035: point = 669, n_alt = -1
   Insn 1034: point = 670, n_alt = -1
   Insn 1033: point = 671, n_alt = 0
   Insn 1032: point = 671, n_alt = 3
   Insn 1031: point = 672, n_alt = 3
   Insn 1030: point = 673, n_alt = 0
   Insn 1029: point = 673, n_alt = -1
   Insn 1028: point = 674, n_alt = 3
   Insn 1027: point = 675, n_alt = 1
   Insn 1026: point = 675, n_alt = 1
   Insn 1025: point = 675, n_alt = 1
   Insn 1024: point = 675, n_alt = 5
   Insn 1023: point = 676, n_alt = 4
   Insn 1022: point = 677, n_alt = 1
   Insn 1021: point = 677, n_alt = 5
   Insn 1020: point = 678, n_alt = 4
   Insn 1019: point = 679, n_alt = 8
   Insn 1018: point = 680, n_alt = 1
   Insn 1017: point = 682, n_alt = 7
   Insn 1016: point = 683, n_alt = 1
   Insn 1015: point = 685, n_alt = 7
   Insn 1014: point = 686, n_alt = 8
   Insn 1013: point = 687, n_alt = 1
   Insn 1012: point = 689, n_alt = 7
   Insn 1011: point = 690, n_alt = 1
   Insn 1010: point = 692, n_alt = 7
   Insn 1009: point = 693, n_alt = 8
   Insn 1008: point = 694, n_alt = 1
   Insn 1007: point = 696, n_alt = 7
   Insn 1006: point = 697, n_alt = 1
   Insn 1005: point = 699, n_alt = 7
   Insn 1004: point = 700, n_alt = 8
   Insn 1003: point = 701, n_alt = 1
   Insn 1002: point = 703, n_alt = 7
   Insn 1001: point = 704, n_alt = 1
   Insn 1000: point = 706, n_alt = 7
   Insn 999: point = 707, n_alt = 8
   Insn 998: point = 708, n_alt = 2
   Insn 997: point = 710, n_alt = -1
   Insn 996: point = 712, n_alt = 1
   Insn 995: point = 714, n_alt = 7
   Insn 994: point = 715, n_alt = 1
   Insn 993: point = 717, n_alt = 7
   Insn 992: point = 718, n_alt = 7
   Insn 991: point = 719, n_alt = 1
   Insn 990: point = 721, n_alt = 7
   Insn 989: point = 722, n_alt = 1
   Insn 988: point = 724, n_alt = 7
   Insn 987: point = 725, n_alt = 1
   Insn 986: point = 727, n_alt = -1
   Insn 985: point = 729, n_alt = 1
   Insn 984: point = 731, n_alt = 7
   Insn 983: point = 732, n_alt = 1
   Insn 982: point = 734, n_alt = 7
   Insn 981: point = 735, n_alt = 1
   Insn 980: point = 737, n_alt = 7
   Insn 979: point = 738, n_alt = 1
   Insn 978: point = 740, n_alt = 7
   Insn 977: point = 741, n_alt = 8
   Insn 976: point = 742, n_alt = 1
   Insn 975: point = 744, n_alt = -1
   Insn 974: point = 746, n_alt = 1
   Insn 973: point = 748, n_alt = 7
   Insn 972: point = 749, n_alt = 1
   Insn 971: point = 751, n_alt = 7
   Insn 970: point = 752, n_alt = 1
   Insn 969: point = 754, n_alt = 7
   Insn 968: point = 755, n_alt = 1
   Insn 967: point = 757, n_alt = 7
   Insn 966: point = 758, n_alt = 7
   Insn 965: point = 759, n_alt = 8
   Insn 964: point = 760, n_alt = 2
   Insn 963: point = 762, n_alt = -1
   Insn 962: point = 764, n_alt = 1
   Insn 961: point = 766, n_alt = 7
   Insn 960: point = 767, n_alt = 1
   Insn 959: point = 769, n_alt = 7
   Insn 958: point = 770, n_alt = 7
   Insn 957: point = 771, n_alt = 1
   Insn 956: point = 773, n_alt = -1
   Insn 1756: point = 775, n_alt = -1
	Hard reg 22 is preferable by r1123 with profit 1
   Insn 955: point = 777, n_alt = 2
   Insn 1755: point = 778, n_alt = -1
	Hard reg 22 is preferable by r1123 with profit 1
	Hard reg 23 is preferable by r1123 with profit 1
   Insn 954: point = 780, n_alt = 7
   Insn 953: point = 781, n_alt = 2
   Insn 952: point = 783, n_alt = 7
   Insn 951: point = 784, n_alt = 7
   Insn 950: point = 785, n_alt = 1
   Insn 949: point = 787, n_alt = 7
   Insn 948: point = 788, n_alt = 1
   Insn 947: point = 790, n_alt = 7
   Insn 946: point = 791, n_alt = 8
   Insn 945: point = 792, n_alt = 1
   Insn 944: point = 794, n_alt = -1
   Insn 1754: point = 796, n_alt = -1
	Hard reg 22 is preferable by r1122 with profit 1
   Insn 943: point = 798, n_alt = 2
   Insn 1753: point = 799, n_alt = -1
	Hard reg 22 is preferable by r1122 with profit 1
	Hard reg 23 is preferable by r1122 with profit 1
   Insn 942: point = 801, n_alt = 7
   Insn 941: point = 802, n_alt = 2
   Insn 940: point = 804, n_alt = 7
   Insn 939: point = 805, n_alt = 7
   Insn 938: point = 806, n_alt = 1
   Insn 937: point = 808, n_alt = 7
   Insn 936: point = 809, n_alt = 1
   Insn 935: point = 811, n_alt = 7
   Insn 934: point = 812, n_alt = 7
   Insn 933: point = 813, n_alt = 8
   Insn 932: point = 814, n_alt = 2
   Insn 931: point = 816, n_alt = 7
   Insn 930: point = 818, n_alt = 3
   Insn 929: point = 819, n_alt = 3
   Insn 928: point = 821, n_alt = 0
   Insn 927: point = 823, n_alt = 0
   Insn 926: point = 824, n_alt = 7
   Insn 925: point = 826, n_alt = 3
   Insn 924: point = 827, n_alt = 3
   Insn 923: point = 829, n_alt = 0
   Insn 922: point = 831, n_alt = 0
   Insn 921: point = 832, n_alt = 8
   Insn 920: point = 833, n_alt = 2
   Insn 919: point = 835, n_alt = -1
   Insn 918: point = 837, n_alt = 1
   Insn 917: point = 839, n_alt = 7
   Insn 916: point = 840, n_alt = 1
   Insn 915: point = 842, n_alt = 7
   Insn 914: point = 843, n_alt = 7
   Insn 913: point = 844, n_alt = 1
   Insn 912: point = 846, n_alt = 7
   Insn 911: point = 847, n_alt = 1
   Insn 910: point = 849, n_alt = 7
   Insn 909: point = 850, n_alt = 8
   Insn 908: point = 851, n_alt = 1
   Insn 907: point = 853, n_alt = 7
   Insn 906: point = 854, n_alt = 0
   Insn 905: point = 856, n_alt = 1
   Insn 904: point = 858, n_alt = 7
   Insn 903: point = 859, n_alt = 1
   Insn 902: point = 861, n_alt = -1
   Insn 901: point = 863, n_alt = 2
   Insn 900: point = 865, n_alt = -1
   Insn 899: point = 867, n_alt = 1
   Insn 898: point = 869, n_alt = 7
   Insn 897: point = 870, n_alt = 1
   Insn 896: point = 872, n_alt = 7
   Insn 895: point = 873, n_alt = 7
   Insn 894: point = 875, n_alt = 3
   Insn 893: point = 876, n_alt = 1
   Insn 892: point = 878, n_alt = 7
   Insn 891: point = 879, n_alt = 7
   Insn 890: point = 881, n_alt = 3
   Insn 889: point = 882, n_alt = 8
   Insn 888: point = 883, n_alt = 2
   Insn 887: point = 885, n_alt = 7
   Insn 886: point = 886, n_alt = 1
   Insn 885: point = 888, n_alt = -1
   Insn 884: point = 889, n_alt = 0
   Insn 883: point = 889, n_alt = -1
   Insn 882: point = 890, n_alt = -1
   Insn 881: point = 891, n_alt = 7
   Insn 880: point = 892, n_alt = 0
   Insn 1752: point = 894, n_alt = -1
	Hard reg 21 is preferable by r1121 with profit 1
   Insn 879: point = 896, n_alt = 2
   Insn 1751: point = 897, n_alt = -1
	Hard reg 21 is preferable by r1121 with profit 1
	Hard reg 22 is preferable by r1121 with profit 1
   Insn 878: point = 899, n_alt = 7
   Insn 877: point = 900, n_alt = 1
   Insn 876: point = 902, n_alt = 7
   Insn 875: point = 903, n_alt = 4
   Insn 874: point = 904, n_alt = 9
   Insn 873: point = 905, n_alt = 0
   Insn 872: point = 905, n_alt = -1
   Insn 871: point = 906, n_alt = 1
   Insn 870: point = 908, n_alt = 2
   Insn 869: point = 909, n_alt = 7
   Insn 868: point = 910, n_alt = 8
  BB 39
   Insn 10: point = 912, n_alt = -1
  BB 38
   Insn 864: point = 915, n_alt = -1
   Insn 863: point = 915, n_alt = 0
   Insn 862: point = 916, n_alt = 0
   Insn 861: point = 918, n_alt = 0
   Insn 860: point = 919, n_alt = 1
   Insn 859: point = 919, n_alt = 0
   Insn 858: point = 920, n_alt = 1
   Insn 857: point = 920, n_alt = 2
   Insn 856: point = 922, n_alt = 7
   Insn 855: point = 924, n_alt = 3
   Insn 854: point = 925, n_alt = 1
   Insn 853: point = 927, n_alt = -1
   Insn 852: point = 929, n_alt = 2
   Insn 851: point = 931, n_alt = 7
   Insn 850: point = 932, n_alt = 7
   Insn 849: point = 933, n_alt = 1
   Insn 848: point = 935, n_alt = 7
   Insn 847: point = 936, n_alt = 7
   Insn 846: point = 938, n_alt = 3
   Insn 845: point = 939, n_alt = 7
   Insn 844: point = 940, n_alt = 8
   Insn 843: point = 941, n_alt = 2
   Insn 842: point = 943, n_alt = 7
   Insn 841: point = 945, n_alt = 3
   Insn 840: point = 946, n_alt = 7
   Insn 839: point = 947, n_alt = 8
   Insn 838: point = 948, n_alt = 2
   Insn 837: point = 950, n_alt = 7
   Insn 836: point = 952, n_alt = 3
   Insn 835: point = 953, n_alt = 7
   Insn 834: point = 955, n_alt = 3
   Insn 833: point = 956, n_alt = 3
   Insn 832: point = 958, n_alt = 0
   Insn 831: point = 960, n_alt = 0
   Insn 830: point = 961, n_alt = 8
   Insn 829: point = 962, n_alt = 2
   Insn 828: point = 964, n_alt = 7
   Insn 827: point = 966, n_alt = 3
   Insn 826: point = 967, n_alt = 7
   Insn 825: point = 969, n_alt = 3
   Insn 824: point = 970, n_alt = 3
   Insn 823: point = 972, n_alt = 0
   Insn 822: point = 974, n_alt = 0
  BB 36
   Insn 815: point = 976, n_alt = 1
   Insn 814: point = 976, n_alt = 0
   Insn 813: point = 978, n_alt = 3
   Insn 812: point = 979, n_alt = 8
   Insn 811: point = 980, n_alt = 7
   Insn 810: point = 981, n_alt = 8
   Insn 809: point = 982, n_alt = 7
   Insn 808: point = 983, n_alt = 8
   Insn 807: point = 984, n_alt = 7
   Insn 806: point = 985, n_alt = 8
   Insn 805: point = 986, n_alt = 7
   Insn 804: point = 987, n_alt = 0
   Insn 803: point = 987, n_alt = -1
   Insn 802: point = 988, n_alt = 3
   Insn 801: point = 989, n_alt = 0
   Insn 800: point = 989, n_alt = -1
   Insn 799: point = 990, n_alt = 4
   Insn 798: point = 990, n_alt = 0
   Insn 797: point = 990, n_alt = 3
   Insn 796: point = 991, n_alt = 0
   Insn 795: point = 991, n_alt = -1
   Insn 794: point = 992, n_alt = 3
   Insn 793: point = 993, n_alt = 1
   Insn 792: point = 993, n_alt = 1
   Insn 791: point = 993, n_alt = 1
   Insn 790: point = 993, n_alt = 5
   Insn 789: point = 994, n_alt = 4
   Insn 788: point = 995, n_alt = 0
   Insn 787: point = 995, n_alt = -1
   Insn 786: point = 996, n_alt = 3
   Insn 785: point = 997, n_alt = 0
   Insn 784: point = 997, n_alt = -1
   Insn 783: point = 998, n_alt = 3
   Insn 782: point = 999, n_alt = 1
   Insn 781: point = 999, n_alt = 1
   Insn 780: point = 999, n_alt = 1
   Insn 779: point = 999, n_alt = 5
   Insn 778: point = 1000, n_alt = 4
   Insn 777: point = 1001, n_alt = 0
   Insn 776: point = 1001, n_alt = -1
   Insn 775: point = 1002, n_alt = 3
   Insn 774: point = 1003, n_alt = 0
   Insn 773: point = 1003, n_alt = -1
   Insn 772: point = 1004, n_alt = -1
   Insn 771: point = 1005, n_alt = 0
   Insn 770: point = 1005, n_alt = 3
   Insn 769: point = 1006, n_alt = 3
   Insn 768: point = 1007, n_alt = 0
   Insn 767: point = 1007, n_alt = -1
   Insn 766: point = 1008, n_alt = -1
   Insn 765: point = 1009, n_alt = 0
   Insn 764: point = 1009, n_alt = 3
   Insn 763: point = 1010, n_alt = 3
   Insn 762: point = 1011, n_alt = 0
   Insn 761: point = 1011, n_alt = -1
   Insn 760: point = 1012, n_alt = -1
   Insn 759: point = 1013, n_alt = 0
   Insn 758: point = 1013, n_alt = 3
   Insn 757: point = 1014, n_alt = 3
   Insn 756: point = 1015, n_alt = 1
   Insn 755: point = 1016, n_alt = 0
   Insn 754: point = 1018, n_alt = 7
   Insn 753: point = 1020, n_alt = 3
   Insn 752: point = 1021, n_alt = 0
   Insn 751: point = 1021, n_alt = -1
   Insn 750: point = 1022, n_alt = 3
   Insn 749: point = 1023, n_alt = 1
   Insn 748: point = 1023, n_alt = 1
   Insn 747: point = 1023, n_alt = 1
   Insn 746: point = 1023, n_alt = 5
   Insn 745: point = 1024, n_alt = 4
   Insn 744: point = 1025, n_alt = 1
   Insn 743: point = 1025, n_alt = 5
   Insn 742: point = 1026, n_alt = 4
   Insn 741: point = 1027, n_alt = 8
   Insn 740: point = 1028, n_alt = 3
   Insn 739: point = 1029, n_alt = 2
   Insn 738: point = 1031, n_alt = 7
   Insn 737: point = 1032, n_alt = -1
   Insn 736: point = 1034, n_alt = 1
   Insn 735: point = 1036, n_alt = 7
   Insn 734: point = 1038, n_alt = 3
   Insn 733: point = 1039, n_alt = 7
   Insn 732: point = 1041, n_alt = 3
   Insn 731: point = 1042, n_alt = 8
   Insn 730: point = 1043, n_alt = 2
   Insn 729: point = 1045, n_alt = -1
   Insn 728: point = 1047, n_alt = 1
   Insn 727: point = 1049, n_alt = 7
   Insn 726: point = 1051, n_alt = 3
   Insn 725: point = 1052, n_alt = 7
   Insn 724: point = 1054, n_alt = 3
   Insn 723: point = 1055, n_alt = 7
   Insn 722: point = 1057, n_alt = 3
  BB 7
   Insn 1665: point = 1058, n_alt = -1
   Insn 281: point = 1058, n_alt = 8
   Insn 280: point = 1059, n_alt = 2
   Insn 279: point = 1061, n_alt = 7
   Insn 278: point = 1062, n_alt = -1
   Insn 277: point = 1064, n_alt = 1
   Insn 276: point = 1066, n_alt = 1
   Insn 275: point = 1068, n_alt = 7
   Insn 274: point = 1069, n_alt = 1
   Insn 273: point = 1071, n_alt = 1
   Insn 272: point = 1073, n_alt = 7
   Insn 271: point = 1074, n_alt = 7
   Insn 270: point = 1076, n_alt = 3
   Insn 1716: point = 1077, n_alt = -1
	Hard reg 22 is preferable by r1100 with profit 1
   Insn 269: point = 1079, n_alt = 1
   Insn 1715: point = 1080, n_alt = -1
	Hard reg 22 is preferable by r1100 with profit 1
	Hard reg 21 is preferable by r1100 with profit 1
   Insn 268: point = 1081, n_alt = 7
   Insn 267: point = 1083, n_alt = 3
   Insn 1714: point = 1084, n_alt = -1
	Hard reg 23 is preferable by r1099 with profit 1
   Insn 266: point = 1086, n_alt = 1
   Insn 1713: point = 1087, n_alt = -1
	Hard reg 23 is preferable by r1099 with profit 1
	Hard reg 21 is preferable by r1099 with profit 1
   Insn 265: point = 1088, n_alt = 7
   Insn 264: point = 1089, n_alt = 8
   Insn 263: point = 1090, n_alt = 1
   Insn 262: point = 1092, n_alt = 7
   Insn 261: point = 1093, n_alt = 7
   Insn 260: point = 1095, n_alt = 3
  BB 5
   Insn 1663: point = 1096, n_alt = -1
   Insn 227: point = 1096, n_alt = 8
   Insn 226: point = 1097, n_alt = 1
   Insn 225: point = 1099, n_alt = 7
   Insn 224: point = 1100, n_alt = 7
   Insn 223: point = 1101, n_alt = 8
   Insn 222: point = 1102, n_alt = 1
   Insn 221: point = 1104, n_alt = 7
   Insn 220: point = 1105, n_alt = 7
   Insn 219: point = 1106, n_alt = 0
   Insn 218: point = 1106, n_alt = -1
   Insn 217: point = 1107, n_alt = 3
   Insn 216: point = 1108, n_alt = 0
   Insn 215: point = 1108, n_alt = -1
   Insn 214: point = 1109, n_alt = -1
   Insn 213: point = 1110, n_alt = 0
   Insn 212: point = 1110, n_alt = 3
   Insn 211: point = 1111, n_alt = 3
   Insn 210: point = 1112, n_alt = 0
   Insn 209: point = 1112, n_alt = -1
   Insn 208: point = 1113, n_alt = 4
   Insn 207: point = 1113, n_alt = 0
   Insn 206: point = 1113, n_alt = 3
   Insn 205: point = 1114, n_alt = 0
   Insn 204: point = 1114, n_alt = -1
   Insn 203: point = 1115, n_alt = 3
   Insn 202: point = 1116, n_alt = 1
   Insn 201: point = 1116, n_alt = 1
   Insn 200: point = 1116, n_alt = 1
   Insn 199: point = 1116, n_alt = 5
   Insn 198: point = 1117, n_alt = 4
  BB 6
   Insn 257: point = 1118, n_alt = 8
   Insn 256: point = 1119, n_alt = 1
   Insn 255: point = 1121, n_alt = 7
   Insn 254: point = 1122, n_alt = -1
   Insn 253: point = 1124, n_alt = 2
   Insn 252: point = 1126, n_alt = 7
   Insn 251: point = 1128, n_alt = 3
   Insn 250: point = 1129, n_alt = 0
   Insn 249: point = 1131, n_alt = 1
   Insn 248: point = 1133, n_alt = 1
   Insn 247: point = 1135, n_alt = 7
   Insn 246: point = 1137, n_alt = 3
   Insn 245: point = 1138, n_alt = 8
   Insn 244: point = 1139, n_alt = 2
   Insn 243: point = 1141, n_alt = 7
   Insn 242: point = 1142, n_alt = -1
   Insn 241: point = 1144, n_alt = 1
   Insn 240: point = 1146, n_alt = 1
   Insn 239: point = 1148, n_alt = 7
   Insn 238: point = 1149, n_alt = 1
   Insn 237: point = 1151, n_alt = 7
   Insn 236: point = 1152, n_alt = 7
   Insn 235: point = 1154, n_alt = 3
   Insn 1712: point = 1155, n_alt = -1
	Hard reg 22 is preferable by r1098 with profit 1
   Insn 234: point = 1157, n_alt = 1
   Insn 1711: point = 1158, n_alt = -1
	Hard reg 22 is preferable by r1098 with profit 1
	Hard reg 21 is preferable by r1098 with profit 1
   Insn 233: point = 1159, n_alt = 7
   Insn 232: point = 1161, n_alt = 3
  BB 4
   Insn 193: point = 1162, n_alt = -1
   Insn 192: point = 1162, n_alt = 1
   Insn 191: point = 1163, n_alt = 7
   Insn 190: point = 1164, n_alt = 8
   Insn 189: point = 1165, n_alt = 1
   Insn 188: point = 1167, n_alt = -1
   Insn 187: point = 1169, n_alt = 1
   Insn 186: point = 1171, n_alt = 1
   Insn 185: point = 1173, n_alt = 7
   Insn 184: point = 1175, n_alt = 3
   Insn 183: point = 1176, n_alt = 1
   Insn 182: point = 1178, n_alt = 1
   Insn 181: point = 1180, n_alt = 1
   Insn 180: point = 1182, n_alt = 7
   Insn 179: point = 1183, n_alt = 7
   Insn 178: point = 1185, n_alt = 3
   Insn 1710: point = 1186, n_alt = -1
	Hard reg 23 is preferable by r1097 with profit 1
   Insn 177: point = 1188, n_alt = 1
   Insn 1709: point = 1189, n_alt = -1
	Hard reg 23 is preferable by r1097 with profit 1
	Hard reg 21 is preferable by r1097 with profit 1
   Insn 176: point = 1190, n_alt = 7
   Insn 1708: point = 1191, n_alt = -1
	Hard reg 22 is preferable by r1096 with profit 1
   Insn 175: point = 1193, n_alt = 1
   Insn 1707: point = 1194, n_alt = -1
	Hard reg 22 is preferable by r1096 with profit 1
	Hard reg 21 is preferable by r1096 with profit 1
   Insn 174: point = 1195, n_alt = 7
   Insn 173: point = 1197, n_alt = 3
   Insn 172: point = 1198, n_alt = 8
   Insn 171: point = 1199, n_alt = 0
   Insn 170: point = 1201, n_alt = 2
   Insn 169: point = 1202, n_alt = 1
   Insn 168: point = 1204, n_alt = 7
   Insn 167: point = 1205, n_alt = 7
   Insn 166: point = 1207, n_alt = 3
  BB 35
   Insn 719: point = 1208, n_alt = 8
   Insn 718: point = 1209, n_alt = 2
   Insn 717: point = 1211, n_alt = 7
   Insn 716: point = 1212, n_alt = -1
   Insn 715: point = 1214, n_alt = 1
   Insn 1750: point = 1216, n_alt = 7
	   Creating copy r1120<-r1157@1
   Insn 714: point = 1218, n_alt = 1
   Insn 713: point = 1220, n_alt = 7
   Insn 712: point = 1221, n_alt = 1
   Insn 1749: point = 1223, n_alt = 7
	   Creating copy r1119<-r1156@1
   Insn 711: point = 1225, n_alt = -1
   Insn 710: point = 1226, n_alt = 0
   Insn 709: point = 1226, n_alt = 10
   Insn 708: point = 1227, n_alt = 0
   Insn 1748: point = 1227, n_alt = 8
	   Creating copy r1118->r1156@1
   Insn 707: point = 1229, n_alt = 1
   Insn 1747: point = 1230, n_alt = -1
	Hard reg 22 is preferable by r1118 with profit 1
   Insn 706: point = 1232, n_alt = 7
   Insn 705: point = 1233, n_alt = 7
   Insn 704: point = 1235, n_alt = 3
   Insn 1746: point = 1236, n_alt = 8
	   Creating copy r1117->r1157@1
   Insn 703: point = 1238, n_alt = 1
   Insn 1745: point = 1239, n_alt = -1
	Hard reg 21 is preferable by r1117 with profit 1
   Insn 702: point = 1240, n_alt = 7
   Insn 701: point = 1242, n_alt = 3
   Insn 700: point = 1243, n_alt = 3
   Insn 699: point = 1244, n_alt = 8
   Insn 698: point = 1245, n_alt = 1
   Insn 697: point = 1247, n_alt = 7
   Insn 696: point = 1248, n_alt = 7
   Insn 695: point = 1250, n_alt = 3
  BB 34
   Insn 1695: point = 1251, n_alt = -1
   Insn 692: point = 1251, n_alt = 0
   Insn 691: point = 1251, n_alt = -1
   Insn 690: point = 1252, n_alt = 3
   Insn 689: point = 1253, n_alt = 0
   Insn 688: point = 1253, n_alt = -1
   Insn 687: point = 1254, n_alt = -1
   Insn 686: point = 1255, n_alt = 0
   Insn 685: point = 1255, n_alt = 3
   Insn 684: point = 1256, n_alt = 3
   Insn 683: point = 1257, n_alt = 0
   Insn 682: point = 1257, n_alt = -1
   Insn 681: point = 1258, n_alt = 4
   Insn 680: point = 1258, n_alt = 0
   Insn 679: point = 1258, n_alt = 3
   Insn 678: point = 1259, n_alt = 0
   Insn 677: point = 1259, n_alt = -1
   Insn 676: point = 1260, n_alt = 3
   Insn 675: point = 1261, n_alt = 1
   Insn 674: point = 1261, n_alt = 1
   Insn 673: point = 1261, n_alt = 1
   Insn 672: point = 1261, n_alt = 5
   Insn 671: point = 1262, n_alt = 4
  BB 59
   Insn 1694: point = 1263, n_alt = -1
  BB 60
   Insn 1699: point = 1263, n_alt = -1
  BB 29
   Insn 1676: point = 1263, n_alt = -1
   Insn 634: point = 1263, n_alt = 0
   Insn 633: point = 1263, n_alt = -1
   Insn 632: point = 1264, n_alt = 3
   Insn 631: point = 1265, n_alt = 0
   Insn 630: point = 1265, n_alt = -1
   Insn 629: point = 1266, n_alt = -1
   Insn 628: point = 1267, n_alt = 0
   Insn 627: point = 1267, n_alt = 3
   Insn 626: point = 1268, n_alt = 3
   Insn 625: point = 1269, n_alt = 0
   Insn 624: point = 1269, n_alt = -1
   Insn 623: point = 1270, n_alt = 4
   Insn 622: point = 1270, n_alt = 0
   Insn 621: point = 1270, n_alt = 3
   Insn 620: point = 1271, n_alt = 0
   Insn 619: point = 1271, n_alt = -1
   Insn 618: point = 1272, n_alt = 3
   Insn 617: point = 1273, n_alt = 1
   Insn 616: point = 1273, n_alt = 1
   Insn 615: point = 1273, n_alt = 1
   Insn 614: point = 1273, n_alt = 5
   Insn 613: point = 1274, n_alt = 4
  BB 28
   Insn 611: point = 1275, n_alt = -1
   Insn 610: point = 1275, n_alt = 0
   Insn 609: point = 1276, n_alt = 0
   Insn 608: point = 1276, n_alt = 0
  BB 26
   Insn 1674: point = 1279, n_alt = -1
   Insn 600: point = 1279, n_alt = 1
  BB 27
   Insn 605: point = 1280, n_alt = 1
  BB 25
   Insn 595: point = 1281, n_alt = -1
   Insn 594: point = 1281, n_alt = 1
   Insn 593: point = 1282, n_alt = 7
   Insn 592: point = 1283, n_alt = 7
  BB 24
   Insn 587: point = 1284, n_alt = -1
   Insn 586: point = 1284, n_alt = 1
   Insn 585: point = 1285, n_alt = 7
  BB 23
   Insn 584: point = 1286, n_alt = -1
   Insn 583: point = 1286, n_alt = 1
   Insn 582: point = 1287, n_alt = 7
   Insn 581: point = 1288, n_alt = 8
   Insn 580: point = 1289, n_alt = 0
   Insn 579: point = 1291, n_alt = 2
   Insn 578: point = 1292, n_alt = 2
   Insn 577: point = 1294, n_alt = 7
   Insn 576: point = 1295, n_alt = 8
   Insn 575: point = 1296, n_alt = 1
   Insn 574: point = 1298, n_alt = 1
   Insn 573: point = 1300, n_alt = -1
   Insn 572: point = 1302, n_alt = 1
   Insn 571: point = 1304, n_alt = 7
   Insn 570: point = 1306, n_alt = 3
   Insn 569: point = 1307, n_alt = 7
   Insn 568: point = 1309, n_alt = 3
   Insn 567: point = 1310, n_alt = 1
   Insn 566: point = 1312, n_alt = 1
   Insn 565: point = 1314, n_alt = 1
   Insn 564: point = 1316, n_alt = -1
   Insn 563: point = 1318, n_alt = 1
   Insn 562: point = 1320, n_alt = 1
   Insn 561: point = 1322, n_alt = 7
   Insn 560: point = 1324, n_alt = 3
   Insn 559: point = 1325, n_alt = 1
   Insn 558: point = 1327, n_alt = 7
   Insn 557: point = 1328, n_alt = 1
   Insn 556: point = 1330, n_alt = 7
   Insn 555: point = 1331, n_alt = 8
   Insn 554: point = 1332, n_alt = 2
   Insn 553: point = 1334, n_alt = 2
   Insn 552: point = 1336, n_alt = -1
   Insn 551: point = 1338, n_alt = 1
   Insn 1744: point = 1340, n_alt = 7
	   Creating copy r1116<-r1154@1
   Insn 550: point = 1342, n_alt = 1
   Insn 549: point = 1344, n_alt = 7
   Insn 548: point = 1345, n_alt = 1
   Insn 547: point = 1347, n_alt = 7
   Insn 546: point = 1348, n_alt = 7
   Insn 545: point = 1350, n_alt = 3
   Insn 544: point = 1351, n_alt = 1
   Insn 543: point = 1353, n_alt = 7
   Insn 542: point = 1354, n_alt = 7
   Insn 541: point = 1355, n_alt = 1
   Insn 540: point = 1357, n_alt = 1
   Insn 539: point = 1359, n_alt = 1
   Insn 538: point = 1361, n_alt = -1
   Insn 537: point = 1363, n_alt = 1
   Insn 536: point = 1365, n_alt = 7
   Insn 535: point = 1367, n_alt = 3
   Insn 534: point = 1368, n_alt = 7
   Insn 533: point = 1370, n_alt = 3
   Insn 532: point = 1371, n_alt = 1
   Insn 531: point = 1373, n_alt = 1
   Insn 1743: point = 1375, n_alt = 7
	   Creating copy r1115<-r1155@1
   Insn 530: point = 1377, n_alt = -1
   Insn 529: point = 1379, n_alt = 1
   Insn 528: point = 1381, n_alt = 1
   Insn 527: point = 1383, n_alt = 7
   Insn 526: point = 1385, n_alt = 3
   Insn 525: point = 1386, n_alt = -1
   Insn 524: point = 1387, n_alt = 0
   Insn 523: point = 1387, n_alt = 10
   Insn 522: point = 1388, n_alt = 0
   Insn 1742: point = 1388, n_alt = 8
	   Creating copy r1114->r1154@1
   Insn 521: point = 1390, n_alt = 1
   Insn 1741: point = 1391, n_alt = -1
	Hard reg 21 is preferable by r1114 with profit 1
   Insn 520: point = 1392, n_alt = 7
   Insn 519: point = 1394, n_alt = 3
   Insn 1740: point = 1395, n_alt = 8
	   Creating copy r1113->r1155@1
   Insn 518: point = 1397, n_alt = 1
   Insn 1739: point = 1398, n_alt = -1
	Hard reg 21 is preferable by r1113 with profit 1
   Insn 517: point = 1399, n_alt = 7
   Insn 516: point = 1400, n_alt = 3
  BB 22
   Insn 514: point = 1401, n_alt = -1
   Insn 513: point = 1401, n_alt = 0
   Insn 512: point = 1402, n_alt = 0
   Insn 511: point = 1403, n_alt = 0
  BB 33
   Insn 1678: point = 1403, n_alt = -1
   Insn 665: point = 1403, n_alt = 1
   Insn 664: point = 1403, n_alt = 8
  BB 32
   Insn 661: point = 1405, n_alt = 7
  BB 31
   Insn 659: point = 1406, n_alt = -1
   Insn 658: point = 1406, n_alt = 0
   Insn 657: point = 1407, n_alt = 0
   Insn 656: point = 1409, n_alt = 0
   Insn 655: point = 1410, n_alt = 1
   Insn 654: point = 1410, n_alt = 0
   Insn 653: point = 1411, n_alt = 1
   Insn 652: point = 1412, n_alt = 7
   Insn 651: point = 1413, n_alt = 7
  BB 30
   Insn 649: point = 1414, n_alt = -1
   Insn 648: point = 1414, n_alt = 1
   Insn 647: point = 1415, n_alt = 7
   Insn 646: point = 1416, n_alt = 0
   Insn 645: point = 1418, n_alt = 2
   Insn 644: point = 1419, n_alt = 2
   Insn 643: point = 1421, n_alt = 7
   Insn 642: point = 1422, n_alt = 8
   Insn 641: point = 1423, n_alt = 1
   Insn 640: point = 1425, n_alt = 7
   Insn 639: point = 1426, n_alt = 7
  BB 21
   Insn 509: point = 1427, n_alt = 1
   Insn 508: point = 1427, n_alt = 8
   Insn 507: point = 1428, n_alt = 1
   Insn 506: point = 1430, n_alt = 2
   Insn 505: point = 1431, n_alt = 7
  BB 17
   Insn 1672: point = 1432, n_alt = -1
   Insn 454: point = 1432, n_alt = 8
   Insn 453: point = 1433, n_alt = 1
   Insn 452: point = 1435, n_alt = 7
   Insn 451: point = 1436, n_alt = 7
   Insn 450: point = 1437, n_alt = 8
   Insn 449: point = 1438, n_alt = 1
   Insn 448: point = 1440, n_alt = 7
   Insn 447: point = 1441, n_alt = 7
   Insn 446: point = 1442, n_alt = 0
   Insn 445: point = 1442, n_alt = -1
   Insn 444: point = 1443, n_alt = 3
   Insn 443: point = 1444, n_alt = 0
   Insn 442: point = 1444, n_alt = -1
   Insn 441: point = 1445, n_alt = -1
   Insn 440: point = 1446, n_alt = 0
   Insn 439: point = 1446, n_alt = 3
   Insn 438: point = 1447, n_alt = 3
   Insn 437: point = 1448, n_alt = 0
   Insn 436: point = 1448, n_alt = -1
   Insn 435: point = 1449, n_alt = 4
   Insn 434: point = 1449, n_alt = 0
   Insn 433: point = 1449, n_alt = 3
   Insn 432: point = 1450, n_alt = 0
   Insn 431: point = 1450, n_alt = -1
   Insn 430: point = 1451, n_alt = 3
   Insn 429: point = 1452, n_alt = 1
   Insn 428: point = 1452, n_alt = 1
   Insn 427: point = 1452, n_alt = 1
   Insn 426: point = 1452, n_alt = 5
   Insn 425: point = 1453, n_alt = 4
  BB 20
   Insn 502: point = 1454, n_alt = 8
  BB 19
   Insn 9: point = 1456, n_alt = -1
  BB 18
   Insn 498: point = 1459, n_alt = -1
   Insn 497: point = 1459, n_alt = 0
   Insn 496: point = 1460, n_alt = 0
   Insn 495: point = 1462, n_alt = 0
   Insn 494: point = 1463, n_alt = 1
   Insn 493: point = 1463, n_alt = 0
   Insn 492: point = 1464, n_alt = 1
   Insn 491: point = 1464, n_alt = 1
   Insn 490: point = 1466, n_alt = 1
   Insn 489: point = 1468, n_alt = 7
   Insn 488: point = 1469, n_alt = 7
   Insn 487: point = 1470, n_alt = 7
   Insn 486: point = 1471, n_alt = 8
   Insn 485: point = 1472, n_alt = 3
   Insn 1738: point = 1474, n_alt = 6
   Insn 1737: point = 1475, n_alt = -1
   Insn 484: point = 1476, n_alt = 2
   Insn 483: point = 1477, n_alt = 2
   Insn 482: point = 1478, n_alt = 7
   Insn 481: point = 1479, n_alt = 7
   Insn 480: point = 1480, n_alt = 4
   Insn 479: point = 1481, n_alt = 9
   Insn 478: point = 1482, n_alt = 0
   Insn 477: point = 1482, n_alt = -1
   Insn 476: point = 1483, n_alt = 7
   Insn 475: point = 1483, n_alt = 1
   Insn 474: point = 1485, n_alt = 2
   Insn 473: point = 1486, n_alt = 7
   Insn 472: point = 1487, n_alt = 8
   Insn 471: point = 1488, n_alt = 2
   Insn 470: point = 1490, n_alt = 7
   Insn 469: point = 1491, n_alt = -1
   Insn 468: point = 1493, n_alt = 1
   Insn 467: point = 1495, n_alt = 1
   Insn 466: point = 1497, n_alt = 7
   Insn 465: point = 1498, n_alt = 1
   Insn 464: point = 1500, n_alt = 7
   Insn 463: point = 1501, n_alt = 7
   Insn 462: point = 1503, n_alt = 3
   Insn 1736: point = 1504, n_alt = -1
	Hard reg 22 is preferable by r1111 with profit 1
   Insn 461: point = 1506, n_alt = 1
   Insn 1735: point = 1507, n_alt = -1
	Hard reg 22 is preferable by r1111 with profit 1
	Hard reg 21 is preferable by r1111 with profit 1
   Insn 460: point = 1508, n_alt = 7
   Insn 459: point = 1510, n_alt = 3
  BB 16
   Insn 423: point = 1511, n_alt = -1
   Insn 422: point = 1511, n_alt = 0
   Insn 421: point = 1512, n_alt = 0
   Insn 420: point = 1512, n_alt = 0
  BB 14
   Insn 1670: point = 1515, n_alt = -1
   Insn 412: point = 1515, n_alt = 1
  BB 15
   Insn 417: point = 1516, n_alt = 1
  BB 13
   Insn 406: point = 1517, n_alt = -1
   Insn 405: point = 1517, n_alt = 1
   Insn 404: point = 1518, n_alt = 7
  BB 12
   Insn 401: point = 1519, n_alt = -1
   Insn 400: point = 1519, n_alt = 1
   Insn 399: point = 1520, n_alt = 7
  BB 11
   Insn 398: point = 1522, n_alt = -1
   Insn 397: point = 1522, n_alt = 1
   Insn 396: point = 1523, n_alt = 7
   Insn 395: point = 1524, n_alt = 7
   Insn 394: point = 1526, n_alt = 3
   Insn 393: point = 1527, n_alt = 8
   Insn 392: point = 1528, n_alt = 1
   Insn 1734: point = 1530, n_alt = 7
	   Creating copy r1110<-r1152@1
   Insn 391: point = 1532, n_alt = -1
   Insn 390: point = 1534, n_alt = 1
   Insn 389: point = 1536, n_alt = 1
   Insn 388: point = 1538, n_alt = 1
   Insn 387: point = 1540, n_alt = -1
   Insn 386: point = 1542, n_alt = 1
   Insn 385: point = 1544, n_alt = 7
   Insn 384: point = 1546, n_alt = 3
   Insn 383: point = 1547, n_alt = 7
   Insn 382: point = 1549, n_alt = 3
   Insn 381: point = 1550, n_alt = 1
   Insn 380: point = 1552, n_alt = 1
   Insn 1733: point = 1554, n_alt = 7
	   Creating copy r1109<-r1153@1
   Insn 379: point = 1556, n_alt = -1
   Insn 378: point = 1558, n_alt = 1
   Insn 377: point = 1560, n_alt = 1
   Insn 376: point = 1562, n_alt = 7
   Insn 375: point = 1564, n_alt = 3
   Insn 374: point = 1565, n_alt = -1
   Insn 373: point = 1566, n_alt = 0
   Insn 372: point = 1566, n_alt = 10
   Insn 371: point = 1567, n_alt = 0
   Insn 1732: point = 1567, n_alt = 8
	   Creating copy r1108->r1152@1
   Insn 370: point = 1569, n_alt = 1
   Insn 1731: point = 1570, n_alt = -1
	Hard reg 21 is preferable by r1108 with profit 1
   Insn 369: point = 1571, n_alt = 1
   Insn 368: point = 1573, n_alt = 1
   Insn 367: point = 1575, n_alt = 7
   Insn 366: point = 1576, n_alt = 7
   Insn 365: point = 1578, n_alt = 3
   Insn 1730: point = 1579, n_alt = 8
	   Creating copy r1107->r1153@1
   Insn 364: point = 1581, n_alt = 1
   Insn 1729: point = 1582, n_alt = -1
	Hard reg 21 is preferable by r1107 with profit 1
   Insn 363: point = 1583, n_alt = 7
   Insn 362: point = 1584, n_alt = 3
   Insn 1728: point = 1585, n_alt = -1
	Hard reg 22 is preferable by r1106 with profit 1
   Insn 361: point = 1587, n_alt = 1
   Insn 1727: point = 1588, n_alt = -1
	Hard reg 22 is preferable by r1106 with profit 1
	Hard reg 21 is preferable by r1106 with profit 1
   Insn 360: point = 1589, n_alt = 7
   Insn 359: point = 1591, n_alt = 3
   Insn 358: point = 1592, n_alt = 8
   Insn 357: point = 1593, n_alt = 1
   Insn 356: point = 1595, n_alt = 7
   Insn 355: point = 1596, n_alt = -1
   Insn 354: point = 1598, n_alt = 2
   Insn 1726: point = 1600, n_alt = -1
	Hard reg 21 is preferable by r1105 with profit 1
   Insn 353: point = 1602, n_alt = 2
   Insn 1725: point = 1603, n_alt = -1
	Hard reg 21 is preferable by r1105 with profit 1
	Hard reg 22 is preferable by r1105 with profit 1
   Insn 352: point = 1605, n_alt = 1
   Insn 351: point = 1607, n_alt = 7
   Insn 350: point = 1609, n_alt = 3
   Insn 349: point = 1610, n_alt = 0
   Insn 348: point = 1612, n_alt = 1
   Insn 347: point = 1614, n_alt = 1
   Insn 346: point = 1616, n_alt = 1
   Insn 345: point = 1618, n_alt = 7
   Insn 344: point = 1620, n_alt = 3
   Insn 1724: point = 1621, n_alt = -1
	Hard reg 22 is preferable by r1104 with profit 1
   Insn 343: point = 1623, n_alt = 1
   Insn 1723: point = 1624, n_alt = -1
	Hard reg 22 is preferable by r1104 with profit 1
	Hard reg 21 is preferable by r1104 with profit 1
   Insn 342: point = 1625, n_alt = 7
   Insn 1722: point = 1626, n_alt = -1
	Hard reg 23 is preferable by r1103 with profit 1
   Insn 341: point = 1628, n_alt = 1
   Insn 1721: point = 1629, n_alt = -1
	Hard reg 23 is preferable by r1103 with profit 1
	Hard reg 21 is preferable by r1103 with profit 1
   Insn 340: point = 1630, n_alt = 7
   Insn 339: point = 1632, n_alt = 3
   Insn 338: point = 1633, n_alt = 8
   Insn 337: point = 1634, n_alt = 2
   Insn 336: point = 1636, n_alt = 1
   Insn 335: point = 1638, n_alt = 1
   Insn 334: point = 1640, n_alt = 7
   Insn 333: point = 1642, n_alt = 3
   Insn 1720: point = 1643, n_alt = -1
	Hard reg 22 is preferable by r1102 with profit 1
   Insn 332: point = 1645, n_alt = 1
   Insn 1719: point = 1646, n_alt = -1
	Hard reg 22 is preferable by r1102 with profit 1
	Hard reg 21 is preferable by r1102 with profit 1
   Insn 331: point = 1647, n_alt = 7
   Insn 330: point = 1649, n_alt = 3
  BB 58
   Insn 1691: point = 1650, n_alt = -1
  BB 9
   Insn 295: point = 1650, n_alt = -1
   Insn 294: point = 1650, n_alt = 0
   Insn 293: point = 1651, n_alt = 0
   Insn 292: point = 1652, n_alt = 0
  BB 10
   Insn 1667: point = 1653, n_alt = -1
   Insn 324: point = 1653, n_alt = 1
   Insn 323: point = 1653, n_alt = 8
   Insn 322: point = 1654, n_alt = 1
   Insn 321: point = 1656, n_alt = 7
   Insn 320: point = 1657, n_alt = 1
   Insn 319: point = 1659, n_alt = 7
   Insn 318: point = 1661, n_alt = 3
   Insn 317: point = 1662, n_alt = 3
   Insn 316: point = 1664, n_alt = 0
   Insn 315: point = 1666, n_alt = 0
   Insn 314: point = 1667, n_alt = 1
   Insn 313: point = 1669, n_alt = 2
   Insn 312: point = 1671, n_alt = 7
   Insn 311: point = 1673, n_alt = 3
   Insn 310: point = 1674, n_alt = 3
   Insn 309: point = 1676, n_alt = 0
   Insn 308: point = 1678, n_alt = 0
   Insn 307: point = 1679, n_alt = 7
   Insn 306: point = 1681, n_alt = 3
   Insn 305: point = 1682, n_alt = 3
   Insn 304: point = 1684, n_alt = 0
   Insn 303: point = 1686, n_alt = 0
   Insn 1718: point = 1687, n_alt = -1
	Hard reg 22 is preferable by r1101 with profit 1
   Insn 302: point = 1689, n_alt = 1
   Insn 1717: point = 1690, n_alt = -1
	Hard reg 22 is preferable by r1101 with profit 1
	Hard reg 21 is preferable by r1101 with profit 1
   Insn 301: point = 1691, n_alt = 7
   Insn 300: point = 1693, n_alt = 3
   Insn 299: point = 1694, n_alt = 3
   Insn 298: point = 1696, n_alt = 0
   Insn 297: point = 1698, n_alt = 0
  BB 8
   Insn 290: point = 1700, n_alt = 1
   Insn 289: point = 1700, n_alt = 0
   Insn 288: point = 1702, n_alt = 3
   Insn 287: point = 1703, n_alt = 8
   Insn 286: point = 1704, n_alt = 7
  BB 3
   Insn 161: point = 1705, n_alt = -1
   Insn 160: point = 1705, n_alt = 1
   Insn 159: point = 1706, n_alt = 7
  BB 2
   Insn 158: point = 1708, n_alt = -1
   Insn 157: point = 1708, n_alt = 1
   Insn 156: point = 1709, n_alt = 7
   Insn 155: point = 1710, n_alt = 7
   Insn 154: point = 1712, n_alt = 3
   Insn 153: point = 1713, n_alt = 8
   Insn 152: point = 1714, n_alt = 7
   Insn 151: point = 1716, n_alt = 3
   Insn 150: point = 1717, n_alt = 8
   Insn 149: point = 1718, n_alt = 7
   Insn 148: point = 1720, n_alt = 3
   Insn 144: point = 1721, n_alt = 2
   Insn 143: point = 1722, n_alt = 3
   Insn 142: point = 1723, n_alt = -1
   Insn 140: point = 1725, n_alt = 1
   Insn 138: point = 1727, n_alt = 0
   Insn 139: point = 1727, n_alt = 2
   Insn 137: point = 1728, n_alt = 3
   Insn 136: point = 1729, n_alt = 5
   Insn 135: point = 1730, n_alt = 0
   Insn 134: point = 1732, n_alt = 0
   Insn 133: point = 1734, n_alt = 3
   Insn 129: point = 1735, n_alt = 5
   Insn 128: point = 1736, n_alt = 5
   Insn 127: point = 1737, n_alt = -1
   Insn 125: point = 1739, n_alt = 1
   Insn 123: point = 1741, n_alt = 0
   Insn 124: point = 1741, n_alt = 2
   Insn 122: point = 1742, n_alt = 3
   Insn 121: point = 1743, n_alt = 5
   Insn 120: point = 1744, n_alt = 0
   Insn 119: point = 1746, n_alt = 0
   Insn 118: point = 1748, n_alt = 3
   Insn 114: point = 1749, n_alt = 5
   Insn 113: point = 1750, n_alt = 5
   Insn 112: point = 1751, n_alt = -1
   Insn 110: point = 1753, n_alt = 1
   Insn 108: point = 1755, n_alt = 0
   Insn 109: point = 1755, n_alt = 2
   Insn 107: point = 1756, n_alt = 3
   Insn 106: point = 1757, n_alt = 5
   Insn 105: point = 1758, n_alt = 0
   Insn 104: point = 1760, n_alt = 0
   Insn 103: point = 1762, n_alt = 3
   Insn 99: point = 1763, n_alt = 5
   Insn 98: point = 1764, n_alt = 5
   Insn 97: point = 1765, n_alt = -1
   Insn 95: point = 1767, n_alt = 1
   Insn 93: point = 1769, n_alt = 0
   Insn 94: point = 1769, n_alt = 2
   Insn 92: point = 1770, n_alt = 3
   Insn 91: point = 1771, n_alt = 5
   Insn 90: point = 1772, n_alt = 0
   Insn 89: point = 1774, n_alt = 0
   Insn 88: point = 1776, n_alt = 3
   Insn 84: point = 1777, n_alt = 5
   Insn 83: point = 1778, n_alt = 5
   Insn 82: point = 1779, n_alt = -1
   Insn 80: point = 1781, n_alt = 1
   Insn 78: point = 1783, n_alt = 0
   Insn 79: point = 1783, n_alt = 2
   Insn 77: point = 1784, n_alt = 3
   Insn 76: point = 1785, n_alt = 5
   Insn 75: point = 1786, n_alt = 0
   Insn 74: point = 1788, n_alt = 0
   Insn 73: point = 1790, n_alt = 3
   Insn 69: point = 1791, n_alt = 5
   Insn 68: point = 1792, n_alt = 5
   Insn 67: point = 1793, n_alt = -1
   Insn 65: point = 1795, n_alt = 1
   Insn 63: point = 1797, n_alt = 0
   Insn 64: point = 1797, n_alt = 2
   Insn 62: point = 1798, n_alt = 3
   Insn 61: point = 1799, n_alt = 5
   Insn 60: point = 1800, n_alt = 0
   Insn 59: point = 1802, n_alt = 0
   Insn 58: point = 1804, n_alt = 3
   Insn 54: point = 1805, n_alt = 5
   Insn 53: point = 1806, n_alt = 5
   Insn 52: point = 1807, n_alt = -1
   Insn 50: point = 1809, n_alt = 1
   Insn 48: point = 1811, n_alt = 0
   Insn 49: point = 1811, n_alt = 2
   Insn 47: point = 1812, n_alt = 3
   Insn 46: point = 1813, n_alt = 5
   Insn 45: point = 1814, n_alt = 0
   Insn 44: point = 1816, n_alt = 0
   Insn 43: point = 1818, n_alt = 3
   Insn 39: point = 1819, n_alt = 2
   Insn 38: point = 1820, n_alt = 3
   Insn 37: point = 1821, n_alt = -1
   Insn 35: point = 1823, n_alt = 1
   Insn 33: point = 1825, n_alt = 0
   Insn 34: point = 1825, n_alt = 2
   Insn 32: point = 1826, n_alt = 3
   Insn 31: point = 1827, n_alt = 5
   Insn 30: point = 1828, n_alt = 0
   Insn 29: point = 1830, n_alt = 0
   Insn 28: point = 1832, n_alt = 3
   Insn 24: point = 1833, n_alt = 2
   Insn 23: point = 1834, n_alt = 3
   Insn 22: point = 1835, n_alt = -1
   Insn 20: point = 1837, n_alt = 1
   Insn 18: point = 1839, n_alt = 0
   Insn 19: point = 1839, n_alt = 2
   Insn 17: point = 1840, n_alt = 3
   Insn 16: point = 1841, n_alt = 5
   Insn 15: point = 1842, n_alt = 0
   Insn 14: point = 1844, n_alt = 0
   Insn 13: point = 1846, n_alt = 3
   Insn 7: point = 1847, n_alt = 5
   Insn 6: point = 1847, n_alt = 5
   Insn 5: point = 1847, n_alt = 5
   Insn 4: point = 1847, n_alt = 5
   Insn 3: point = 1847, n_alt = 5
   Insn 2: point = 1847, n_alt = 5
 r87: [1843..1844]
 r88: [1834..1835]
 r89: [1833..1847]
 r91: [1829..1830]
 r92: [1820..1821]
 r93: [1819..1847]
 r95: [1815..1816]
 r96: [1806..1807]
 r97: [1805..1847]
 r99: [1801..1802]
 r100: [1792..1793]
 r101: [1791..1847]
 r103: [1787..1788]
 r104: [1778..1779]
 r105: [1777..1847]
 r107: [1773..1774]
 r108: [1764..1765]
 r109: [1763..1847]
 r111: [1759..1760]
 r112: [1750..1751]
 r113: [1749..1847]
 r115: [1745..1746]
 r116: [1736..1737]
 r117: [1735..1847]
 r119: [1731..1732]
 r120: [1722..1723]
 r121: [1721..1847]
 r123: [1705..1710]
 r124: [1203..1205]
 r125: [1200..1202]
 r126: [1181..1183]
 r127: [1181..1182]
 r128: [1179..1180]
 r129: [1177..1178]
 r130: [1166..1176]
 r131: [1172..1173]
 r132: [1170..1171]
 r133: [1168..1169]
 r134: [1166..1167]
 r135: [1164..1165]
 r136: [1162..1163]
 r137: [1103..1105]
 r138: [1150..1152]
 r139: [1147..1149]
 r140: [1147..1148]
 r141: [1145..1146]
 r142: [1143..1144]
 r143: [1140..1142]
 r144: [1130..1131]
 r145: [1125..1129]
 r146: [1125..1126]
 r147: [1123..1124]
 r148: [1120..1122]
 r149: [1091..1093]
 r150: [1072..1074]
 r151: [1070..1071]
 r152: [1067..1069]
 r153: [1067..1068]
 r154: [1065..1066]
 r155: [1063..1064]
 r156: [1060..1062]
 r157: [1058..1059]
 r158: [1695..1696]
 r159: [1692..1694]
 r160: [1683..1684]
 r161: [1680..1682]
 r162: [1670..1679]
 r163: [1675..1676]
 r164: [1672..1674]
 r165: [1670..1671]
 r166: [1668..1669]
 r167: [1658..1667]
 r168: [1663..1664]
 r169: [1660..1662]
 r170: [1658..1659]
 r171: [1655..1657]
 r172: [1639..1640]
 r173: [1637..1638]
 r174: [1635..1636]
 r175: [1617..1618]
 r176: [1615..1616]
 r177: [1613..1614]
 r178: [1611..1612]
 r179: [1604..1610]
 r180: [1606..1607]
 r181: [1602..1605]
 r182: [1599..1600]
 r183: [1597..1598]
 r184: [1594..1596]
 r185: [1574..1576]
 r186: [1574..1575]
 r187: [1572..1573]
 r188: [1569..1571]
 r190: [1551..1565]
 r191: [1561..1562]
 r192: [1559..1560]
 r193: [1557..1558]
 r194: [1553..1556]
 r195: [1551..1552]
 r196: [1535..1550]
 r197: [1539..1547]
 r198: [1543..1544]
 r199: [1541..1542]
 r200: [1539..1540]
 r201: [1537..1538]
 r202: [1535..1536]
 r203: [1533..1534]
 r204: [1529..1532]
 r205: [1527..1528]
 r206: [1519..1524]
 r207: [1517..1518]
 r208: [1511..1512]
 r209: [1439..1441]
 r210: [1499..1501]
 r211: [1496..1498]
 r212: [1496..1497]
 r213: [1494..1495]
 r214: [1492..1493]
 r215: [1489..1491]
 r216: [1465..1466]
 r217: [1461..1463]
 r218: [1461..1462]
 r219: [1459..1460]
 r220: [1372..1386]
 r221: [1382..1383]
 r222: [1380..1381]
 r223: [1378..1379]
 r224: [1374..1377]
 r225: [1372..1373]
 r226: [1356..1371]
 r227: [1360..1368]
 r228: [1364..1365]
 r229: [1362..1363]
 r230: [1360..1361]
 r231: [1358..1359]
 r232: [1356..1357]
 r233: [1333..1355]
 r234: [1335..1351]
 r235: [1346..1348]
 r236: [1343..1345]
 r237: [1343..1344]
 r238: [1339..1342]
 r239: [1337..1338]
 r240: [1335..1336]
 r241: [1333..1334]
 r242: [1311..1325]
 r243: [1321..1322]
 r244: [1319..1320]
 r245: [1317..1318]
 r246: [1315..1316]
 r247: [1313..1314]
 r248: [1311..1312]
 r249: [1297..1310]
 r250: [1299..1307]
 r251: [1303..1304]
 r252: [1301..1302]
 r253: [1299..1300]
 r254: [1297..1298]
 r255: [1290..1292]
 r256: [1288..1289]
 r257: [1281..1283]
 r258: [1275..1276]
 r259: [1424..1426]
 r260: [1420..1421]
 r261: [1417..1419]
 r262: [1414..1416]
 r263: [1408..1410]
 r264: [1408..1409]
 r265: [1406..1407]
 r266: [1246..1248]
 r267: [1231..1233]
 r269: [1222..1225]
 r270: [1219..1221]
 r271: [1219..1220]
 r272: [1215..1218]
 r273: [1213..1214]
 r274: [1210..1212]
 r275: [1208..1209]
 r276: [1044..1055]
 r277: [1048..1052]
 r278: [1048..1049]
 r279: [1046..1047]
 r280: [1044..1045]
 r281: [1042..1043]
 r282: [1035..1039]
 r283: [1035..1036]
 r284: [1033..1034]
 r285: [1030..1032]
 r286: [1027..1029]
 r287: [1017..1018]
 r288: [1015..1016]
 r289: [971..972]
 r290: [968..970]
 r291: [963..967]
 r292: [963..964]
 r293: [961..962]
 r294: [957..958]
 r295: [954..956]
 r296: [949..953]
 r297: [949..950]
 r298: [942..946]
 r299: [942..943]
 r300: [940..941]
 r301: [934..936]
 r302: [926..933]
 r303: [930..932]
 r304: [928..929]
 r305: [926..927]
 r306: [921..925]
 r307: [921..922]
 r308: [917..919]
 r309: [917..918]
 r310: [915..916]
 r311: [905..906]
 r312: [896..900]
 r313: [893..894]
 r314: [889..892]
 r315: [887..888]
 r316: [884..886]
 r317: [884..885]
 r318: [882..883]
 r319: [877..879]
 r320: [864..876]
 r321: [871..873]
 r322: [871..872]
 r323: [868..870]
 r324: [868..869]
 r325: [866..867]
 r326: [864..865]
 r327: [862..863]
 r328: [855..856]
 r329: [852..854]
 r330: [852..853]
 r331: [848..849]
 r332: [845..847]
 r333: [845..846]
 r334: [834..844]
 r335: [841..843]
 r336: [841..842]
 r337: [838..840]
 r338: [836..837]
 r339: [834..835]
 r340: [832..833]
 r341: [828..829]
 r342: [825..827]
 r343: [815..824]
 r344: [820..821]
 r345: [817..819]
 r346: [815..816]
 r347: [810..812]
 r348: [807..809]
 r349: [807..808]
 r350: [793..806]
 r351: [803..805]
 r352: [798..802]
 r353: [795..796]
 r354: [793..794]
 r355: [791..792]
 r356: [789..790]
 r357: [786..788]
 r358: [786..787]
 r359: [772..785]
 r360: [782..784]
 r361: [777..781]
 r362: [774..775]
 r363: [772..773]
 r364: [761..771]
 r365: [768..770]
 r366: [768..769]
 r367: [765..767]
 r368: [763..764]
 r369: [761..762]
 r370: [759..760]
 r371: [756..758]
 r372: [753..755]
 r373: [753..754]
 r374: [743..752]
 r375: [750..751]
 r376: [747..749]
 r377: [745..746]
 r378: [743..744]
 r379: [741..742]
 r380: [739..740]
 r381: [736..738]
 r382: [736..737]
 r383: [726..735]
 r384: [733..734]
 r385: [730..732]
 r386: [728..729]
 r387: [726..727]
 r388: [723..725]
 r389: [723..724]
 r390: [720..722]
 r391: [720..721]
 r392: [709..719]
 r393: [716..718]
 r394: [716..717]
 r395: [713..715]
 r396: [711..712]
 r397: [709..710]
 r398: [707..708]
 r399: [705..706]
 r400: [702..704]
 r401: [702..703]
 r402: [700..701]
 r403: [698..699]
 r404: [695..697]
 r405: [695..696]
 r406: [693..694]
 r407: [691..692]
 r408: [688..690]
 r409: [688..689]
 r410: [686..687]
 r411: [684..685]
 r412: [681..683]
 r413: [681..682]
 r414: [679..680]
 r415: [635..636]
 r416: [631..634]
 r417: [631..633]
 r418: [596..601]
 r419: [390..392]
 r420: [387..389]
 r421: [387..388]
 r422: [385..386]
 r423: [380..384]
 r424: [357..359]
 r425: [357..358]
 r426: [355..356]
 r427: [352..354]
 r428: [349..351]
 r429: [349..350]
 r430: [338..348]
 r431: [343..347]
 r432: [340..341]
 r433: [338..339]
 r434: [336..337]
 r435: [330..332]
 r436: [330..331]
 r437: [325..329]
 r438: [327..328]
 r439: [325..326]
 r440: [323..324]
 r441: [320..322]
 r442: [320..321]
 r443: [315..319]
 r444: [315..316]
 r445: [313..314]
 r446: [311..312]
 r447: [294..296]
 r448: [292..293]
 r449: [289..291]
 r450: [289..290]
 r451: [287..288]
 r452: [284..286]
 r453: [284..285]
 r454: [282..283]
 r455: [269..271]
 r457: [260..263]
 r458: [257..259]
 r459: [257..258]
 r460: [253..256]
 r461: [250..252]
 r462: [250..251]
 r463: [248..249]
 r464: [588..590]
 r465: [585..587]
 r466: [585..586]
 r467: [583..584]
 r468: [580..582]
 r469: [568..573]
 r470: [562..563]
 r471: [544..546]
 r472: [544..545]
 r473: [541..543]
 r474: [539..540]
 r475: [536..538]
 r476: [533..535]
 r477: [531..534]
 r478: [522..529]
 r479: [526..528]
 r480: [524..525]
 r481: [522..523]
 r482: [520..521]
 r483: [512..514]
 r484: [512..513]
 r485: [507..511]
 r486: [509..510]
 r487: [507..508]
 r488: [505..506]
 r489: [502..504]
 r490: [502..503]
 r491: [497..501]
 r492: [497..498]
 r493: [495..496]
 r494: [493..494]
 r495: [476..478]
 r496: [474..475]
 r497: [471..473]
 r498: [471..472]
 r499: [469..470]
 r500: [466..468]
 r501: [466..467]
 r502: [464..465]
 r503: [451..453]
 r505: [442..445]
 r506: [439..441]
 r507: [439..440]
 r508: [435..438]
 r509: [432..434]
 r510: [432..433]
 r511: [430..431]
 r512: [208..209]
 r513: [205..207]
 r514: [203..204]
 r515: [191..200]
 r516: [196..197]
 r517: [193..195]
 r518: [189..192]
 r519: [175..187]
 r520: [177..184]
 r521: [181..183]
 r522: [179..180]
 r523: [177..178]
 r524: [174..176]
 r525: [153..162]
 r526: [158..159]
 r527: [155..157]
 r528: [153..154]
 r529: [151..152]
 r530: [140..142]
 r531: [138..141]
 r533: [130..133]
 r534: [128..129]
 r535: [115..116]
 r536: [107..108]
 r537: [104..106]
 r538: [94..103]
 r539: [99..100]
 r540: [96..98]
 r541: [94..95]
 r542: [92..93]
 r543: [82..91]
 r544: [87..88]
 r545: [84..86]
 r546: [80..83]
 r547: [72..78]
 r548: [74..75]
 r549: [69..73]
 r550: [69..71]
 r551: [62..63]
 r552: [57..61]
 r553: [57..58]
 r554: [55..56]
 r555: [52..54]
 r556: [52..53]
 r557: [49..51]
 r558: [49..50]
 r559: [47..48]
 r560: [37..46]
 r561: [37..43]
 r562: [39..40]
 r563: [34..38]
 r564: [34..36]
 r565: [30..31]
 r566: [27..29]
 r567: [25..26]
 r568: [6..24]
 r569: [20..21]
 r570: [17..19]
 r571: [15..16]
 r572: [13..14]
 r573: [6..12]
 r574: [8..9]
 r575: [3..7]
 r576: [3..5]
 r577: [1459..1470] [1454..1456]
 r578: [1403..1413]
 r579: [915..939] [910..912]
 r580: [1513..1516]
 r581: [1277..1280]
 r582: [564..567]
 r583: [1838..1840]
 r584: [1836..1837]
 r588: [1824..1826]
 r589: [1822..1823]
 r593: [1810..1812]
 r594: [1808..1809]
 r598: [1796..1798]
 r599: [1794..1795]
 r603: [1782..1784]
 r604: [1780..1781]
 r608: [1768..1770]
 r609: [1766..1767]
 r613: [1754..1756]
 r614: [1752..1753]
 r618: [1740..1742]
 r619: [1738..1739]
 r623: [1726..1728]
 r624: [1724..1725]
 r628: [1650..1700]
 r629: [1650..1651]
 r630: [1689..1691]
 r631: [1668..1687]
 r632: [1645..1647]
 r633: [1635..1643]
 r634: [1628..1630]
 r635: [1615..1626]
 r636: [1623..1625]
 r637: [1613..1621]
 r638: [1587..1589]
 r639: [1572..1585]
 r640: [1566..1584]
 r641: [1581..1583]
 r643: [1506..1508]
 r644: [1494..1504]
 r645: [1482..1483]
 r646: [1457..1464]
 r647: [1401..1402]
 r648: [1387..1400]
 r649: [1397..1399]
 r651: [1390..1392]
 r653: [1329..1330]
 r654: [1326..1328]
 r655: [1226..1243]
 r656: [1238..1240]
 r658: [1193..1195]
 r659: [1179..1191]
 r660: [1188..1190]
 r661: [1170..1186]
 r662: [1157..1159]
 r663: [1145..1155]
 r664: [1134..1135]
 r665: [1132..1133]
 r666: [1086..1088]
 r667: [1070..1084]
 r668: [1079..1081]
 r669: [1065..1077]
 r670: [628..976]
 r671: [628..629]
 r672: [913..920]
 r673: [860..861]
 r674: [857..859]
 r675: [593..595]
 r676: [583..591]
 r677: [550..551]
 r678: [547..549]
 r679: [517..519]
 r680: [509..515]
 r681: [490..492]
 r682: [474..488]
 r683: [483..485]
 r684: [469..481]
 r685: [446..463]
 r686: [458..460]
 r688: [395..397]
 r689: [385..393]
 r690: [363..364]
 r691: [360..362]
 r692: [334..335]
 r693: [327..333]
 r694: [308..310]
 r695: [292..306]
 r696: [301..303]
 r697: [287..299]
 r698: [264..281]
 r699: [276..278]
 r701: [0..213]
 r702: [0..1]
 r703: [167..169]
 r705: [148..150]
 r707: [125..127]
 r708: [115..123]
 r709: [66..68]
 r710: [47..64]
 r711: [1845..1846]
 r712: [1841..1842]
 r713: [1838..1839]
 r714: [1831..1832]
 r715: [1827..1828]
 r716: [1824..1825]
 r717: [1817..1818]
 r718: [1813..1814]
 r719: [1810..1811]
 r720: [1803..1804]
 r721: [1799..1800]
 r722: [1796..1797]
 r723: [1789..1790]
 r724: [1785..1786]
 r725: [1782..1783]
 r726: [1775..1776]
 r727: [1771..1772]
 r728: [1768..1769]
 r729: [1761..1762]
 r730: [1757..1758]
 r731: [1754..1755]
 r732: [1747..1748]
 r733: [1743..1744]
 r734: [1740..1741]
 r735: [1733..1734]
 r736: [1729..1730]
 r737: [1726..1727]
 r738: [1719..1720]
 r739: [1717..1718]
 r740: [1715..1716]
 r741: [1713..1714]
 r742: [1711..1712]
 r743: [1708..1709]
 r744: [1705..1706]
 r745: [1206..1207]
 r746: [1203..1204]
 r747: [1198..1199]
 r748: [1200..1201]
 r749: [1196..1197]
 r750: [1184..1185]
 r751: [1174..1175]
 r752: [1116..1117]
 r753: [1114..1115]
 r754: [1112..1113]
 r755: [1109..1111]
 r756: [1108..1110]
 r757: [1106..1107]
 r758: [1101..1102]
 r759: [1103..1104]
 r760: [1096..1097]
 r761: [1098..1100]
 r762: [1098..1099]
 r763: [1160..1161]
 r764: [1153..1154]
 r765: [1150..1151]
 r766: [1138..1139]
 r767: [1140..1141]
 r768: [1136..1137]
 r769: [1127..1128]
 r770: [1118..1119]
 r771: [1120..1121]
 r772: [1094..1095]
 r773: [1089..1090]
 r774: [1091..1092]
 r775: [1082..1083]
 r776: [1075..1076]
 r777: [1072..1073]
 r778: [1060..1061]
 r779: [1703..1704]
 r780: [1701..1702]
 r781: [1697..1698]
 r782: [1692..1693]
 r783: [1685..1686]
 r784: [1680..1681]
 r785: [1677..1678]
 r786: [1672..1673]
 r787: [1665..1666]
 r788: [1660..1661]
 r789: [1653..1654]
 r790: [1655..1656]
 r791: [1648..1649]
 r792: [1641..1642]
 r793: [1633..1634]
 r794: [1631..1632]
 r795: [1619..1620]
 r796: [1608..1609]
 r797: [1592..1593]
 r798: [1594..1595]
 r799: [1590..1591]
 r800: [1577..1578]
 r801: [1563..1564]
 r802: [1548..1549]
 r803: [1545..1546]
 r804: [1525..1526]
 r805: [1522..1523]
 r806: [1519..1520]
 r807: [1452..1453]
 r808: [1450..1451]
 r809: [1448..1449]
 r810: [1445..1447]
 r811: [1444..1446]
 r812: [1442..1443]
 r813: [1437..1438]
 r814: [1439..1440]
 r815: [1432..1433]
 r816: [1434..1436]
 r817: [1434..1435]
 r818: [1509..1510]
 r819: [1502..1503]
 r820: [1499..1500]
 r821: [1487..1488]
 r822: [1489..1490]
 r823: [1484..1486]
 r824: [1484..1485]
 r825: [1480..1481]
 r826: [1471..1472]
 r827: [1473..1479]
 r828: [1474..1478]
 r829: [1473..1477]
 r830: [1473..1476]
 r831: [1467..1469]
 r832: [1467..1468]
 r833: [1427..1428]
 r834: [1429..1431]
 r835: [1429..1430]
 r836: [1393..1394]
 r837: [1384..1385]
 r838: [1369..1370]
 r839: [1366..1367]
 r840: [1352..1354]
 r841: [1352..1353]
 r842: [1349..1350]
 r843: [1346..1347]
 r844: [1331..1332]
 r845: [1326..1327]
 r846: [1323..1324]
 r847: [1308..1309]
 r848: [1305..1306]
 r849: [1295..1296]
 r850: [1293..1294]
 r851: [1290..1291]
 r852: [1286..1287]
 r853: [1284..1285]
 r854: [1281..1282]
 r855: [1273..1274]
 r856: [1271..1272]
 r857: [1269..1270]
 r858: [1266..1268]
 r859: [1265..1267]
 r860: [1263..1264]
 r861: [1422..1423]
 r862: [1424..1425]
 r863: [1417..1418]
 r864: [1414..1415]
 r865: [1411..1412]
 r866: [1261..1262]
 r867: [1259..1260]
 r868: [1257..1258]
 r869: [1254..1256]
 r870: [1253..1255]
 r871: [1251..1252]
 r872: [1249..1250]
 r873: [1244..1245]
 r874: [1246..1247]
 r875: [1241..1242]
 r876: [1234..1235]
 r877: [1229..1232]
 r878: [1210..1211]
 r879: [1056..1057]
 r880: [1053..1054]
 r881: [1050..1051]
 r882: [1040..1041]
 r883: [1037..1038]
 r884: [1030..1031]
 r885: [1027..1028]
 r886: [1025..1026]
 r887: [1023..1024]
 r888: [1021..1022]
 r889: [1019..1020]
 r890: [1012..1014]
 r891: [1011..1013]
 r892: [1008..1010]
 r893: [1007..1009]
 r894: [1004..1006]
 r895: [1003..1005]
 r896: [1001..1002]
 r897: [999..1000]
 r898: [997..998]
 r899: [995..996]
 r900: [993..994]
 r901: [991..992]
 r902: [989..990]
 r903: [987..988]
 r904: [985..986]
 r905: [983..984]
 r906: [981..982]
 r907: [979..980]
 r908: [977..978]
 r909: [973..974]
 r910: [968..969]
 r911: [965..966]
 r912: [959..960]
 r913: [954..955]
 r914: [951..952]
 r915: [947..948]
 r916: [944..945]
 r917: [937..938]
 r918: [934..935]
 r919: [930..931]
 r920: [923..924]
 r921: [907..909]
 r922: [907..908]
 r923: [903..904]
 r924: [901..902]
 r925: [898..899]
 r926: [890..891]
 r927: [880..881]
 r928: [877..878]
 r929: [874..875]
 r930: [857..858]
 r931: [850..851]
 r932: [838..839]
 r933: [830..831]
 r934: [825..826]
 r935: [822..823]
 r936: [817..818]
 r937: [813..814]
 r938: [810..811]
 r939: [803..804]
 r940: [800..801]
 r941: [782..783]
 r942: [779..780]
 r943: [765..766]
 r944: [756..757]
 r945: [747..748]
 r946: [730..731]
 r947: [713..714]
 r948: [677..678]
 r949: [675..676]
 r950: [673..674]
 r951: [670..672]
 r952: [669..671]
 r953: [666..668]
 r954: [665..667]
 r955: [662..664]
 r956: [661..663]
 r957: [658..660]
 r958: [657..659]
 r959: [654..656]
 r960: [653..655]
 r961: [650..652]
 r962: [649..651]
 r963: [646..648]
 r964: [645..647]
 r965: [642..644]
 r966: [641..643]
 r967: [639..640]
 r968: [637..638]
 r969: [631..632]
 r970: [626..627]
 r971: [624..625]
 r972: [622..623]
 r973: [619..621]
 r974: [618..620]
 r975: [615..617]
 r976: [614..616]
 r977: [611..613]
 r978: [610..612]
 r979: [607..609]
 r980: [606..608]
 r981: [604..605]
 r982: [602..603]
 r983: [599..600]
 r984: [596..597]
 r985: [390..391]
 r986: [377..378]
 r987: [382..383]
 r988: [375..376]
 r989: [373..374]
 r990: [371..372]
 r991: [369..370]
 r992: [367..368]
 r993: [365..366]
 r994: [360..361]
 r995: [352..353]
 r996: [345..346]
 r997: [317..318]
 r998: [304..305]
 r999: [297..298]
 r1000: [294..295]
 r1001: [279..280]
 r1002: [272..273]
 r1003: [267..270]
 r1004: [246..247]
 r1005: [244..245]
 r1006: [242..243]
 r1007: [239..241]
 r1008: [238..240]
 r1009: [235..237]
 r1010: [234..236]
 r1011: [231..233]
 r1012: [230..232]
 r1013: [227..229]
 r1014: [226..228]
 r1015: [223..225]
 r1016: [222..224]
 r1017: [219..221]
 r1018: [218..220]
 r1019: [216..217]
 r1020: [588..589]
 r1021: [578..579]
 r1022: [580..581]
 r1023: [576..577]
 r1024: [574..575]
 r1025: [571..572]
 r1026: [568..569]
 r1027: [560..561]
 r1028: [558..559]
 r1029: [556..557]
 r1030: [554..555]
 r1031: [552..553]
 r1032: [547..548]
 r1033: [541..542]
 r1034: [536..537]
 r1035: [526..527]
 r1036: [499..500]
 r1037: [486..487]
 r1038: [479..480]
 r1039: [476..477]
 r1040: [461..462]
 r1041: [454..455]
 r1042: [449..452]
 r1043: [428..429]
 r1044: [426..427]
 r1045: [424..425]
 r1046: [421..423]
 r1047: [420..422]
 r1048: [417..419]
 r1049: [416..418]
 r1050: [413..415]
 r1051: [412..414]
 r1052: [409..411]
 r1053: [408..410]
 r1054: [405..407]
 r1055: [404..406]
 r1056: [401..403]
 r1057: [400..402]
 r1058: [398..399]
 r1059: [214..215]
 r1060: [210..211]
 r1061: [205..206]
 r1062: [201..202]
 r1063: [198..199]
 r1064: [193..194]
 r1065: [185..186]
 r1066: [181..182]
 r1067: [172..173]
 r1068: [170..171]
 r1069: [163..164]
 r1070: [160..161]
 r1071: [155..156]
 r1072: [143..145]
 r1073: [143..144]
 r1074: [134..135]
 r1075: [113..114]
 r1076: [111..112]
 r1077: [109..110]
 r1078: [104..105]
 r1079: [101..102]
 r1080: [96..97]
 r1081: [89..90]
 r1082: [84..85]
 r1083: [76..77]
 r1084: [69..70]
 r1085: [59..60]
 r1086: [44..45]
 r1087: [41..42]
 r1088: [34..35]
 r1089: [32..33]
 r1090: [27..28]
 r1091: [22..23]
 r1092: [17..18]
 r1093: [10..11]
 r1094: [3..4]
 r1096: [1192..1194]
 r1097: [1187..1189]
 r1098: [1156..1158]
 r1099: [1085..1087]
 r1100: [1078..1080]
 r1101: [1688..1690]
 r1102: [1644..1646]
 r1103: [1627..1629]
 r1104: [1622..1624]
 r1105: [1601..1603]
 r1106: [1586..1588]
 r1107: [1580..1582]
 r1108: [1568..1570]
 r1109: [1553..1554]
 r1110: [1529..1530]
 r1111: [1505..1507]
 r1112: [1472..1475]
 r1113: [1396..1398]
 r1114: [1389..1391]
 r1115: [1374..1375]
 r1116: [1339..1340]
 r1117: [1237..1239]
 r1118: [1228..1230]
 r1119: [1222..1223]
 r1120: [1215..1216]
 r1121: [895..897]
 r1122: [797..799]
 r1123: [776..778]
 r1124: [394..396]
 r1125: [379..381]
 r1126: [342..344]
 r1127: [307..309]
 r1128: [300..302]
 r1129: [275..277]
 r1130: [266..268]
 r1131: [260..261]
 r1132: [253..254]
 r1133: [592..594]
 r1134: [530..532]
 r1135: [516..518]
 r1136: [489..491]
 r1137: [482..484]
 r1138: [457..459]
 r1139: [448..450]
 r1140: [442..443]
 r1141: [435..436]
 r1142: [188..190]
 r1143: [166..168]
 r1144: [147..149]
 r1145: [137..139]
 r1146: [130..131]
 r1147: [124..126]
 r1148: [117..121]
 r1149: [118..119]
 r1150: [79..81]
 r1151: [65..67]
 r1152: [1531..1567]
 r1153: [1555..1579]
 r1154: [1341..1388]
 r1155: [1376..1395]
 r1156: [1224..1227]
 r1157: [1217..1236]
 r1158: [262..265]
 r1159: [255..274]
 r1160: [444..447]
 r1161: [437..456]
 r1162: [132..136]
 r1163: [120..146]
 r1164: [122..165]
Compressing live ranges: from 1848 to 1430 - 77%
Ranges after the compression:
 r87: [1426..1427]
 r88: [1418..1419]
 r89: [1418..1429]
 r91: [1414..1415]
 r92: [1406..1407]
 r93: [1406..1429]
 r95: [1402..1403]
 r96: [1394..1395]
 r97: [1394..1429]
 r99: [1390..1391]
 r100: [1382..1383]
 r101: [1382..1429]
 r103: [1378..1379]
 r104: [1370..1371]
 r105: [1370..1429]
 r107: [1366..1367]
 r108: [1358..1359]
 r109: [1358..1429]
 r111: [1354..1355]
 r112: [1346..1347]
 r113: [1346..1429]
 r115: [1342..1343]
 r116: [1334..1335]
 r117: [1334..1429]
 r119: [1330..1331]
 r120: [1322..1323]
 r121: [1322..1429]
 r123: [1308..1311]
 r124: [916..917]
 r125: [914..915]
 r126: [902..903]
 r127: [902..903]
 r128: [900..901]
 r129: [898..899]
 r130: [888..897]
 r131: [894..895]
 r132: [892..893]
 r133: [890..891]
 r134: [888..889]
 r135: [886..887]
 r136: [884..885]
 r137: [836..837]
 r138: [876..877]
 r139: [874..875]
 r140: [874..875]
 r141: [872..873]
 r142: [870..871]
 r143: [868..869]
 r144: [858..859]
 r145: [854..857]
 r146: [854..855]
 r147: [852..853]
 r148: [850..851]
 r149: [826..827]
 r150: [814..815]
 r151: [812..813]
 r152: [810..811]
 r153: [810..811]
 r154: [808..809]
 r155: [806..807]
 r156: [804..805]
 r157: [802..803]
 r158: [1300..1301]
 r159: [1298..1299]
 r160: [1292..1293]
 r161: [1290..1291]
 r162: [1282..1289]
 r163: [1286..1287]
 r164: [1284..1285]
 r165: [1282..1283]
 r166: [1280..1281]
 r167: [1272..1279]
 r168: [1276..1277]
 r169: [1274..1275]
 r170: [1272..1273]
 r171: [1270..1271]
 r172: [1258..1259]
 r173: [1256..1257]
 r174: [1254..1255]
 r175: [1242..1243]
 r176: [1240..1241]
 r177: [1238..1239]
 r178: [1236..1237]
 r179: [1230..1235]
 r180: [1232..1233]
 r181: [1228..1231]
 r182: [1226..1227]
 r183: [1224..1225]
 r184: [1222..1223]
 r185: [1210..1211]
 r186: [1210..1211]
 r187: [1208..1209]
 r188: [1206..1207]
 r190: [1190..1203]
 r191: [1200..1201]
 r192: [1198..1199]
 r193: [1196..1197]
 r194: [1192..1195]
 r195: [1190..1191]
 r196: [1176..1189]
 r197: [1180..1187]
 r198: [1184..1185]
 r199: [1182..1183]
 r200: [1180..1181]
 r201: [1178..1179]
 r202: [1176..1177]
 r203: [1174..1175]
 r204: [1170..1173]
 r205: [1168..1169]
 r206: [1162..1165]
 r207: [1160..1161]
 r208: [1156..1157]
 r209: [1106..1107]
 r210: [1148..1149]
 r211: [1146..1147]
 r212: [1146..1147]
 r213: [1144..1145]
 r214: [1142..1143]
 r215: [1140..1141]
 r216: [1124..1125]
 r217: [1122..1123]
 r218: [1122..1123]
 r219: [1120..1121]
 r220: [1056..1069]
 r221: [1066..1067]
 r222: [1064..1065]
 r223: [1062..1063]
 r224: [1058..1061]
 r225: [1056..1057]
 r226: [1042..1055]
 r227: [1046..1053]
 r228: [1050..1051]
 r229: [1048..1049]
 r230: [1046..1047]
 r231: [1044..1045]
 r232: [1042..1043]
 r233: [1024..1041]
 r234: [1026..1039]
 r235: [1036..1037]
 r236: [1034..1035]
 r237: [1034..1035]
 r238: [1030..1033]
 r239: [1028..1029]
 r240: [1026..1027]
 r241: [1024..1025]
 r242: [1004..1017]
 r243: [1014..1015]
 r244: [1012..1013]
 r245: [1010..1011]
 r246: [1008..1009]
 r247: [1006..1007]
 r248: [1004..1005]
 r249: [992..1003]
 r250: [994..1001]
 r251: [998..999]
 r252: [996..997]
 r253: [994..995]
 r254: [992..993]
 r255: [986..987]
 r256: [984..985]
 r257: [978..979]
 r258: [974..975]
 r259: [1094..1095]
 r260: [1090..1091]
 r261: [1088..1089]
 r262: [1086..1087]
 r263: [1082..1083]
 r264: [1082..1083]
 r265: [1080..1081]
 r266: [950..951]
 r267: [940..941]
 r269: [932..935]
 r270: [930..931]
 r271: [930..931]
 r272: [926..929]
 r273: [924..925]
 r274: [922..923]
 r275: [920..921]
 r276: [790..799]
 r277: [794..797]
 r278: [794..795]
 r279: [792..793]
 r280: [790..791]
 r281: [788..789]
 r282: [782..785]
 r283: [782..783]
 r284: [780..781]
 r285: [778..779]
 r286: [776..777]
 r287: [766..767]
 r288: [764..765]
 r289: [728..729]
 r290: [726..727]
 r291: [722..725]
 r292: [722..723]
 r293: [720..721]
 r294: [716..717]
 r295: [714..715]
 r296: [710..713]
 r297: [710..711]
 r298: [704..707]
 r299: [704..705]
 r300: [702..703]
 r301: [698..699]
 r302: [692..697]
 r303: [696..697]
 r304: [694..695]
 r305: [692..693]
 r306: [688..691]
 r307: [688..689]
 r308: [686..687]
 r309: [686..687]
 r310: [684..685]
 r311: [678..679]
 r312: [670..673]
 r313: [668..669]
 r314: [666..667]
 r315: [664..665]
 r316: [662..663]
 r317: [662..663]
 r318: [660..661]
 r319: [656..657]
 r320: [646..655]
 r321: [652..653]
 r322: [652..653]
 r323: [650..651]
 r324: [650..651]
 r325: [648..649]
 r326: [646..647]
 r327: [644..645]
 r328: [638..639]
 r329: [636..637]
 r330: [636..637]
 r331: [632..633]
 r332: [630..631]
 r333: [630..631]
 r334: [622..629]
 r335: [628..629]
 r336: [628..629]
 r337: [626..627]
 r338: [624..625]
 r339: [622..623]
 r340: [620..621]
 r341: [616..617]
 r342: [614..615]
 r343: [606..613]
 r344: [610..611]
 r345: [608..609]
 r346: [606..607]
 r347: [602..603]
 r348: [600..601]
 r349: [600..601]
 r350: [590..599]
 r351: [598..599]
 r352: [594..597]
 r353: [592..593]
 r354: [590..591]
 r355: [588..589]
 r356: [586..587]
 r357: [584..585]
 r358: [584..585]
 r359: [574..583]
 r360: [582..583]
 r361: [578..581]
 r362: [576..577]
 r363: [574..575]
 r364: [566..573]
 r365: [572..573]
 r366: [572..573]
 r367: [570..571]
 r368: [568..569]
 r369: [566..567]
 r370: [564..565]
 r371: [562..563]
 r372: [560..561]
 r373: [560..561]
 r374: [552..559]
 r375: [558..559]
 r376: [556..557]
 r377: [554..555]
 r378: [552..553]
 r379: [550..551]
 r380: [548..549]
 r381: [546..547]
 r382: [546..547]
 r383: [538..545]
 r384: [544..545]
 r385: [542..543]
 r386: [540..541]
 r387: [538..539]
 r388: [536..537]
 r389: [536..537]
 r390: [534..535]
 r391: [534..535]
 r392: [526..533]
 r393: [532..533]
 r394: [532..533]
 r395: [530..531]
 r396: [528..529]
 r397: [526..527]
 r398: [524..525]
 r399: [522..523]
 r400: [520..521]
 r401: [520..521]
 r402: [518..519]
 r403: [516..517]
 r404: [514..515]
 r405: [514..515]
 r406: [512..513]
 r407: [510..511]
 r408: [508..509]
 r409: [508..509]
 r410: [506..507]
 r411: [504..505]
 r412: [502..503]
 r413: [502..503]
 r414: [500..501]
 r415: [472..473]
 r416: [470..471]
 r417: [470..471]
 r418: [446..449]
 r419: [298..299]
 r420: [296..297]
 r421: [296..297]
 r422: [294..295]
 r423: [290..293]
 r424: [270..271]
 r425: [270..271]
 r426: [268..269]
 r427: [266..267]
 r428: [264..265]
 r429: [264..265]
 r430: [256..263]
 r431: [260..263]
 r432: [258..259]
 r433: [256..257]
 r434: [254..255]
 r435: [250..251]
 r436: [250..251]
 r437: [246..249]
 r438: [248..249]
 r439: [246..247]
 r440: [244..245]
 r441: [242..243]
 r442: [242..243]
 r443: [238..241]
 r444: [238..239]
 r445: [236..237]
 r446: [234..235]
 r447: [224..225]
 r448: [222..223]
 r449: [220..221]
 r450: [220..221]
 r451: [218..219]
 r452: [216..217]
 r453: [216..217]
 r454: [214..215]
 r455: [206..207]
 r457: [198..201]
 r458: [196..197]
 r459: [196..197]
 r460: [192..195]
 r461: [190..191]
 r462: [190..191]
 r463: [188..189]
 r464: [442..443]
 r465: [440..441]
 r466: [440..441]
 r467: [438..439]
 r468: [436..437]
 r469: [426..429]
 r470: [422..423]
 r471: [406..407]
 r472: [406..407]
 r473: [404..405]
 r474: [402..403]
 r475: [400..401]
 r476: [398..399]
 r477: [396..399]
 r478: [390..395]
 r479: [394..395]
 r480: [392..393]
 r481: [390..391]
 r482: [388..389]
 r483: [384..385]
 r484: [384..385]
 r485: [380..383]
 r486: [382..383]
 r487: [380..381]
 r488: [378..379]
 r489: [376..377]
 r490: [376..377]
 r491: [372..375]
 r492: [372..373]
 r493: [370..371]
 r494: [368..369]
 r495: [358..359]
 r496: [356..357]
 r497: [354..355]
 r498: [354..355]
 r499: [352..353]
 r500: [350..351]
 r501: [350..351]
 r502: [348..349]
 r503: [340..341]
 r505: [332..335]
 r506: [330..331]
 r507: [330..331]
 r508: [326..329]
 r509: [324..325]
 r510: [324..325]
 r511: [322..323]
 r512: [162..163]
 r513: [160..161]
 r514: [158..159]
 r515: [148..155]
 r516: [152..153]
 r517: [150..151]
 r518: [146..149]
 r519: [136..145]
 r520: [138..143]
 r521: [142..143]
 r522: [140..141]
 r523: [138..139]
 r524: [136..137]
 r525: [120..127]
 r526: [124..125]
 r527: [122..123]
 r528: [120..121]
 r529: [118..119]
 r530: [112..113]
 r531: [110..113]
 r533: [104..107]
 r534: [102..103]
 r535: [92..93]
 r536: [84..85]
 r537: [82..83]
 r538: [74..81]
 r539: [78..79]
 r540: [76..77]
 r541: [74..75]
 r542: [72..73]
 r543: [64..71]
 r544: [68..69]
 r545: [66..67]
 r546: [62..65]
 r547: [56..61]
 r548: [58..59]
 r549: [54..57]
 r550: [54..55]
 r551: [50..51]
 r552: [46..49]
 r553: [46..47]
 r554: [44..45]
 r555: [42..43]
 r556: [42..43]
 r557: [40..41]
 r558: [40..41]
 r559: [38..39]
 r560: [30..37]
 r561: [30..35]
 r562: [32..33]
 r563: [28..31]
 r564: [28..29]
 r565: [24..25]
 r566: [22..23]
 r567: [20..21]
 r568: [4..19]
 r569: [16..17]
 r570: [14..15]
 r571: [12..13]
 r572: [10..11]
 r573: [4..9]
 r574: [6..7]
 r575: [2..5]
 r576: [2..3]
 r577: [1118..1127]
 r578: [1080..1085]
 r579: [682..701]
 r580: [1158..1159]
 r581: [976..977]
 r582: [424..425]
 r583: [1422..1423]
 r584: [1420..1421]
 r588: [1410..1411]
 r589: [1408..1409]
 r593: [1398..1399]
 r594: [1396..1397]
 r598: [1386..1387]
 r599: [1384..1385]
 r603: [1374..1375]
 r604: [1372..1373]
 r608: [1362..1363]
 r609: [1360..1361]
 r613: [1350..1351]
 r614: [1348..1349]
 r618: [1338..1339]
 r619: [1336..1337]
 r623: [1326..1327]
 r624: [1324..1325]
 r628: [1266..1303]
 r629: [1266..1267]
 r630: [1296..1297]
 r631: [1280..1295]
 r632: [1262..1263]
 r633: [1254..1261]
 r634: [1248..1249]
 r635: [1240..1247]
 r636: [1246..1247]
 r637: [1238..1245]
 r638: [1216..1217]
 r639: [1208..1215]
 r640: [1204..1215]
 r641: [1214..1215]
 r643: [1152..1153]
 r644: [1144..1151]
 r645: [1134..1135]
 r646: [1120..1123]
 r647: [1078..1079]
 r648: [1070..1077]
 r649: [1076..1077]
 r651: [1072..1073]
 r653: [1020..1021]
 r654: [1018..1019]
 r655: [936..947]
 r656: [944..945]
 r658: [908..909]
 r659: [900..907]
 r660: [906..907]
 r661: [892..905]
 r662: [880..881]
 r663: [872..879]
 r664: [862..863]
 r665: [860..861]
 r666: [822..823]
 r667: [812..821]
 r668: [818..819]
 r669: [808..817]
 r670: [468..731]
 r671: [468..469]
 r672: [684..687]
 r673: [642..643]
 r674: [640..641]
 r675: [444..445]
 r676: [438..443]
 r677: [410..411]
 r678: [408..409]
 r679: [386..387]
 r680: [382..385]
 r681: [366..367]
 r682: [356..365]
 r683: [362..363]
 r684: [352..361]
 r685: [336..347]
 r686: [344..345]
 r688: [300..301]
 r689: [294..299]
 r690: [274..275]
 r691: [272..273]
 r692: [252..253]
 r693: [248..251]
 r694: [232..233]
 r695: [222..231]
 r696: [228..229]
 r697: [218..227]
 r698: [202..213]
 r699: [210..211]
 r701: [0..165]
 r702: [0..1]
 r703: [130..131]
 r705: [116..117]
 r707: [100..101]
 r708: [92..99]
 r709: [52..53]
 r710: [38..51]
 r711: [1428..1429]
 r712: [1424..1425]
 r713: [1422..1423]
 r714: [1416..1417]
 r715: [1412..1413]
 r716: [1410..1411]
 r717: [1404..1405]
 r718: [1400..1401]
 r719: [1398..1399]
 r720: [1392..1393]
 r721: [1388..1389]
 r722: [1386..1387]
 r723: [1380..1381]
 r724: [1376..1377]
 r725: [1374..1375]
 r726: [1368..1369]
 r727: [1364..1365]
 r728: [1362..1363]
 r729: [1356..1357]
 r730: [1352..1353]
 r731: [1350..1351]
 r732: [1344..1345]
 r733: [1340..1341]
 r734: [1338..1339]
 r735: [1332..1333]
 r736: [1328..1329]
 r737: [1326..1327]
 r738: [1320..1321]
 r739: [1318..1319]
 r740: [1316..1317]
 r741: [1314..1315]
 r742: [1312..1313]
 r743: [1310..1311]
 r744: [1308..1309]
 r745: [918..919]
 r746: [916..917]
 r747: [912..913]
 r748: [914..915]
 r749: [910..911]
 r750: [904..905]
 r751: [896..897]
 r752: [846..847]
 r753: [844..845]
 r754: [842..843]
 r755: [840..841]
 r756: [840..841]
 r757: [838..839]
 r758: [834..835]
 r759: [836..837]
 r760: [830..831]
 r761: [832..833]
 r762: [832..833]
 r763: [882..883]
 r764: [878..879]
 r765: [876..877]
 r766: [866..867]
 r767: [868..869]
 r768: [864..865]
 r769: [856..857]
 r770: [848..849]
 r771: [850..851]
 r772: [828..829]
 r773: [824..825]
 r774: [826..827]
 r775: [820..821]
 r776: [816..817]
 r777: [814..815]
 r778: [804..805]
 r779: [1306..1307]
 r780: [1304..1305]
 r781: [1302..1303]
 r782: [1298..1299]
 r783: [1294..1295]
 r784: [1290..1291]
 r785: [1288..1289]
 r786: [1284..1285]
 r787: [1278..1279]
 r788: [1274..1275]
 r789: [1268..1269]
 r790: [1270..1271]
 r791: [1264..1265]
 r792: [1260..1261]
 r793: [1252..1253]
 r794: [1250..1251]
 r795: [1244..1245]
 r796: [1234..1235]
 r797: [1220..1221]
 r798: [1222..1223]
 r799: [1218..1219]
 r800: [1212..1213]
 r801: [1202..1203]
 r802: [1188..1189]
 r803: [1186..1187]
 r804: [1166..1167]
 r805: [1164..1165]
 r806: [1162..1163]
 r807: [1116..1117]
 r808: [1114..1115]
 r809: [1112..1113]
 r810: [1110..1111]
 r811: [1110..1111]
 r812: [1108..1109]
 r813: [1104..1105]
 r814: [1106..1107]
 r815: [1100..1101]
 r816: [1102..1103]
 r817: [1102..1103]
 r818: [1154..1155]
 r819: [1150..1151]
 r820: [1148..1149]
 r821: [1138..1139]
 r822: [1140..1141]
 r823: [1136..1137]
 r824: [1136..1137]
 r825: [1132..1133]
 r826: [1128..1129]
 r827: [1130..1131]
 r828: [1130..1131]
 r829: [1130..1131]
 r830: [1130..1131]
 r831: [1126..1127]
 r832: [1126..1127]
 r833: [1096..1097]
 r834: [1098..1099]
 r835: [1098..1099]
 r836: [1074..1075]
 r837: [1068..1069]
 r838: [1054..1055]
 r839: [1052..1053]
 r840: [1040..1041]
 r841: [1040..1041]
 r842: [1038..1039]
 r843: [1036..1037]
 r844: [1022..1023]
 r845: [1018..1019]
 r846: [1016..1017]
 r847: [1002..1003]
 r848: [1000..1001]
 r849: [990..991]
 r850: [988..989]
 r851: [986..987]
 r852: [982..983]
 r853: [980..981]
 r854: [978..979]
 r855: [972..973]
 r856: [970..971]
 r857: [968..969]
 r858: [966..967]
 r859: [966..967]
 r860: [964..965]
 r861: [1092..1093]
 r862: [1094..1095]
 r863: [1088..1089]
 r864: [1086..1087]
 r865: [1084..1085]
 r866: [962..963]
 r867: [960..961]
 r868: [958..959]
 r869: [956..957]
 r870: [956..957]
 r871: [954..955]
 r872: [952..953]
 r873: [948..949]
 r874: [950..951]
 r875: [946..947]
 r876: [942..943]
 r877: [938..941]
 r878: [922..923]
 r879: [800..801]
 r880: [798..799]
 r881: [796..797]
 r882: [786..787]
 r883: [784..785]
 r884: [778..779]
 r885: [776..777]
 r886: [774..775]
 r887: [772..773]
 r888: [770..771]
 r889: [768..769]
 r890: [762..763]
 r891: [762..763]
 r892: [760..761]
 r893: [760..761]
 r894: [758..759]
 r895: [758..759]
 r896: [756..757]
 r897: [754..755]
 r898: [752..753]
 r899: [750..751]
 r900: [748..749]
 r901: [746..747]
 r902: [744..745]
 r903: [742..743]
 r904: [740..741]
 r905: [738..739]
 r906: [736..737]
 r907: [734..735]
 r908: [732..733]
 r909: [730..731]
 r910: [726..727]
 r911: [724..725]
 r912: [718..719]
 r913: [714..715]
 r914: [712..713]
 r915: [708..709]
 r916: [706..707]
 r917: [700..701]
 r918: [698..699]
 r919: [696..697]
 r920: [690..691]
 r921: [680..681]
 r922: [680..681]
 r923: [676..677]
 r924: [674..675]
 r925: [672..673]
 r926: [666..667]
 r927: [658..659]
 r928: [656..657]
 r929: [654..655]
 r930: [640..641]
 r931: [634..635]
 r932: [626..627]
 r933: [618..619]
 r934: [614..615]
 r935: [612..613]
 r936: [608..609]
 r937: [604..605]
 r938: [602..603]
 r939: [598..599]
 r940: [596..597]
 r941: [582..583]
 r942: [580..581]
 r943: [570..571]
 r944: [562..563]
 r945: [556..557]
 r946: [542..543]
 r947: [530..531]
 r948: [498..499]
 r949: [496..497]
 r950: [494..495]
 r951: [492..493]
 r952: [492..493]
 r953: [490..491]
 r954: [490..491]
 r955: [488..489]
 r956: [488..489]
 r957: [486..487]
 r958: [486..487]
 r959: [484..485]
 r960: [484..485]
 r961: [482..483]
 r962: [482..483]
 r963: [480..481]
 r964: [480..481]
 r965: [478..479]
 r966: [478..479]
 r967: [476..477]
 r968: [474..475]
 r969: [470..471]
 r970: [466..467]
 r971: [464..465]
 r972: [462..463]
 r973: [460..461]
 r974: [460..461]
 r975: [458..459]
 r976: [458..459]
 r977: [456..457]
 r978: [456..457]
 r979: [454..455]
 r980: [454..455]
 r981: [452..453]
 r982: [450..451]
 r983: [448..449]
 r984: [446..447]
 r985: [298..299]
 r986: [288..289]
 r987: [292..293]
 r988: [286..287]
 r989: [284..285]
 r990: [282..283]
 r991: [280..281]
 r992: [278..279]
 r993: [276..277]
 r994: [272..273]
 r995: [266..267]
 r996: [262..263]
 r997: [240..241]
 r998: [230..231]
 r999: [226..227]
 r1000: [224..225]
 r1001: [212..213]
 r1002: [208..209]
 r1003: [204..207]
 r1004: [186..187]
 r1005: [184..185]
 r1006: [182..183]
 r1007: [180..181]
 r1008: [180..181]
 r1009: [178..179]
 r1010: [178..179]
 r1011: [176..177]
 r1012: [176..177]
 r1013: [174..175]
 r1014: [174..175]
 r1015: [172..173]
 r1016: [172..173]
 r1017: [170..171]
 r1018: [170..171]
 r1019: [168..169]
 r1020: [442..443]
 r1021: [434..435]
 r1022: [436..437]
 r1023: [432..433]
 r1024: [430..431]
 r1025: [428..429]
 r1026: [426..427]
 r1027: [420..421]
 r1028: [418..419]
 r1029: [416..417]
 r1030: [414..415]
 r1031: [412..413]
 r1032: [408..409]
 r1033: [404..405]
 r1034: [400..401]
 r1035: [394..395]
 r1036: [374..375]
 r1037: [364..365]
 r1038: [360..361]
 r1039: [358..359]
 r1040: [346..347]
 r1041: [342..343]
 r1042: [338..341]
 r1043: [320..321]
 r1044: [318..319]
 r1045: [316..317]
 r1046: [314..315]
 r1047: [314..315]
 r1048: [312..313]
 r1049: [312..313]
 r1050: [310..311]
 r1051: [310..311]
 r1052: [308..309]
 r1053: [308..309]
 r1054: [306..307]
 r1055: [306..307]
 r1056: [304..305]
 r1057: [304..305]
 r1058: [302..303]
 r1059: [166..167]
 r1060: [164..165]
 r1061: [160..161]
 r1062: [156..157]
 r1063: [154..155]
 r1064: [150..151]
 r1065: [144..145]
 r1066: [142..143]
 r1067: [134..135]
 r1068: [132..133]
 r1069: [128..129]
 r1070: [126..127]
 r1071: [122..123]
 r1072: [114..115]
 r1073: [114..115]
 r1074: [108..109]
 r1075: [90..91]
 r1076: [88..89]
 r1077: [86..87]
 r1078: [82..83]
 r1079: [80..81]
 r1080: [76..77]
 r1081: [70..71]
 r1082: [66..67]
 r1083: [60..61]
 r1084: [54..55]
 r1085: [48..49]
 r1086: [36..37]
 r1087: [34..35]
 r1088: [28..29]
 r1089: [26..27]
 r1090: [22..23]
 r1091: [18..19]
 r1092: [14..15]
 r1093: [8..9]
 r1094: [2..3]
 r1096: [908..909]
 r1097: [906..907]
 r1098: [880..881]
 r1099: [822..823]
 r1100: [818..819]
 r1101: [1296..1297]
 r1102: [1262..1263]
 r1103: [1248..1249]
 r1104: [1246..1247]
 r1105: [1228..1229]
 r1106: [1216..1217]
 r1107: [1214..1215]
 r1108: [1206..1207]
 r1109: [1192..1193]
 r1110: [1170..1171]
 r1111: [1152..1153]
 r1112: [1129..1131]
 r1113: [1076..1077]
 r1114: [1072..1073]
 r1115: [1058..1059]
 r1116: [1030..1031]
 r1117: [944..945]
 r1118: [938..939]
 r1119: [932..933]
 r1120: [926..927]
 r1121: [670..671]
 r1122: [594..595]
 r1123: [578..579]
 r1124: [300..301]
 r1125: [290..291]
 r1126: [260..261]
 r1127: [232..233]
 r1128: [228..229]
 r1129: [210..211]
 r1130: [204..205]
 r1131: [198..199]
 r1132: [192..193]
 r1133: [444..445]
 r1134: [396..397]
 r1135: [386..387]
 r1136: [366..367]
 r1137: [362..363]
 r1138: [344..345]
 r1139: [338..339]
 r1140: [332..333]
 r1141: [326..327]
 r1142: [146..147]
 r1143: [130..131]
 r1144: [116..117]
 r1145: [110..111]
 r1146: [104..105]
 r1147: [100..101]
 r1148: [94..97]
 r1149: [94..95]
 r1150: [62..63]
 r1151: [52..53]
 r1152: [1172..1205]
 r1153: [1194..1213]
 r1154: [1032..1071]
 r1155: [1060..1075]
 r1156: [934..937]
 r1157: [928..943]
 r1158: [200..203]
 r1159: [194..209]
 r1160: [334..337]
 r1161: [328..343]
 r1162: [106..109]
 r1163: [96..115]
 r1164: [98..129]

********** Assignment #1: **********

	 Assigning to 1112 (cl=SSE_REGS, orig=1095, freq=4, tfirst=1112, tfreq=4)...
	   Assign 25 to reload r1112 (freq=4)
	 Assigning to 1164 (cl=SSE_REGS, orig=704, freq=2, tfirst=1143, tfreq=4)...
	 Assigning to 1148 (cl=SSE_REGS, orig=704, freq=3, tfirst=1143, tfreq=4)...
	   Assign 21 to reload r1148 (freq=3)
	Hard reg 21 is preferable by r1164 with profit 1
	Hard reg 21 is preferable by r1143 with profit 2
	 Assigning to 1143 (cl=SSE_REGS, orig=703, freq=3, tfirst=1143, tfreq=4)...
	   Assign 21 to reload r1143 (freq=3)
	Hard reg 21 is preferable by r1164 with profit 2
	 Assigning to 1096 (cl=SSE_REGS, orig=658, freq=3, tfirst=1096, tfreq=3)...
	   Assign 22 to reload r1096 (freq=3)
	 Assigning to 1097 (cl=SSE_REGS, orig=660, freq=3, tfirst=1097, tfreq=3)...
	   Assign 23 to reload r1097 (freq=3)
	 Assigning to 1098 (cl=SSE_REGS, orig=662, freq=3, tfirst=1098, tfreq=3)...
	   Assign 22 to reload r1098 (freq=3)
	 Assigning to 1099 (cl=SSE_REGS, orig=666, freq=3, tfirst=1099, tfreq=3)...
	   Assign 23 to reload r1099 (freq=3)
	 Assigning to 1100 (cl=SSE_REGS, orig=668, freq=3, tfirst=1100, tfreq=3)...
	   Assign 22 to reload r1100 (freq=3)
	 Assigning to 1101 (cl=SSE_REGS, orig=630, freq=3, tfirst=1101, tfreq=3)...
	   Assign 22 to reload r1101 (freq=3)
	 Assigning to 1102 (cl=SSE_REGS, orig=632, freq=3, tfirst=1102, tfreq=3)...
	   Assign 22 to reload r1102 (freq=3)
	 Assigning to 1103 (cl=SSE_REGS, orig=634, freq=3, tfirst=1103, tfreq=3)...
	   Assign 23 to reload r1103 (freq=3)
	 Assigning to 1104 (cl=SSE_REGS, orig=636, freq=3, tfirst=1104, tfreq=3)...
	   Assign 22 to reload r1104 (freq=3)
	 Assigning to 1105 (cl=SSE_REGS, orig=179, freq=3, tfirst=1105, tfreq=3)...
	   Assign 22 to reload r1105 (freq=3)
	 Assigning to 1106 (cl=SSE_REGS, orig=638, freq=3, tfirst=1106, tfreq=3)...
	   Assign 22 to reload r1106 (freq=3)
	 Assigning to 1153 (cl=SSE_REGS, orig=642, freq=2, tfirst=1107, tfreq=3)...
	 Assigning to 1107 (cl=SSE_REGS, orig=641, freq=3, tfirst=1107, tfreq=3)...
	   Assign 21 to reload r1107 (freq=3)
	Hard reg 21 is preferable by r1153 with profit 1
	Hard reg 21 is preferable by r1109 with profit 1
	 Assigning to 1109 (cl=SSE_REGS, orig=642, freq=2, tfirst=1107, tfreq=3)...
	   Assign 26 to optional reload r1109 (freq=2)
	Hard reg 21 is preferable by r1153 with profit 1
	Hard reg 26 is preferable by r1153 with profit 1
	 Assigning to 1152 (cl=SSE_REGS, orig=189, freq=2, tfirst=1108, tfreq=3)...
	 Assigning to 1108 (cl=SSE_REGS, orig=188, freq=3, tfirst=1108, tfreq=3)...
	   Assign 27 to reload r1108 (freq=3)
	Hard reg 27 is preferable by r1152 with profit 1
	Hard reg 27 is preferable by r1110 with profit 1
	 Assigning to 1110 (cl=SSE_REGS, orig=189, freq=2, tfirst=1108, tfreq=3)...
	   Assign 27 to optional reload r1110 (freq=2)
	Hard reg 27 is preferable by r1152 with profit 2
	 Assigning to 1111 (cl=SSE_REGS, orig=643, freq=3, tfirst=1111, tfreq=3)...
	   Assign 22 to reload r1111 (freq=3)
	 Assigning to 1155 (cl=SSE_REGS, orig=650, freq=2, tfirst=1113, tfreq=3)...
	 Assigning to 1113 (cl=SSE_REGS, orig=649, freq=3, tfirst=1113, tfreq=3)...
	   Assign 21 to reload r1113 (freq=3)
	Hard reg 21 is preferable by r1155 with profit 1
	Hard reg 21 is preferable by r1115 with profit 1
	 Assigning to 1115 (cl=SSE_REGS, orig=650, freq=2, tfirst=1113, tfreq=3)...
	   Assign 28 to optional reload r1115 (freq=2)
	Hard reg 21 is preferable by r1155 with profit 1
	Hard reg 28 is preferable by r1155 with profit 1
	 Assigning to 1154 (cl=SSE_REGS, orig=652, freq=2, tfirst=1114, tfreq=3)...
	 Assigning to 1114 (cl=SSE_REGS, orig=651, freq=3, tfirst=1114, tfreq=3)...
	   Assign 26 to reload r1114 (freq=3)
	Hard reg 26 is preferable by r1154 with profit 1
	Hard reg 26 is preferable by r1116 with profit 1
	 Assigning to 1116 (cl=SSE_REGS, orig=652, freq=2, tfirst=1114, tfreq=3)...
	   Assign 26 to optional reload r1116 (freq=2)
	Hard reg 26 is preferable by r1154 with profit 2
	 Assigning to 1157 (cl=SSE_REGS, orig=657, freq=2, tfirst=1117, tfreq=3)...
	 Assigning to 1117 (cl=SSE_REGS, orig=656, freq=3, tfirst=1117, tfreq=3)...
	   Assign 21 to reload r1117 (freq=3)
	Hard reg 21 is preferable by r1157 with profit 1
	Hard reg 21 is preferable by r1120 with profit 1
	 Assigning to 1120 (cl=SSE_REGS, orig=657, freq=2, tfirst=1117, tfreq=3)...
	   Assign 28 to optional reload r1120 (freq=2)
	Hard reg 21 is preferable by r1157 with profit 1
	Hard reg 28 is preferable by r1157 with profit 1
	 Assigning to 1156 (cl=SSE_REGS, orig=268, freq=2, tfirst=1118, tfreq=3)...
	 Assigning to 1118 (cl=SSE_REGS, orig=267, freq=3, tfirst=1118, tfreq=3)...
	   Assign 22 to reload r1118 (freq=3)
	Hard reg 22 is preferable by r1156 with profit 1
	Hard reg 22 is preferable by r1119 with profit 1
	 Assigning to 1119 (cl=SSE_REGS, orig=268, freq=2, tfirst=1118, tfreq=3)...
	   Assign 22 to optional reload r1119 (freq=2)
	Hard reg 22 is preferable by r1156 with profit 2
	 Assigning to 1121 (cl=SSE_REGS, orig=925, freq=3, tfirst=1121, tfreq=3)...
	   Assign 22 to reload r1121 (freq=3)
	 Assigning to 1122 (cl=SSE_REGS, orig=940, freq=3, tfirst=1122, tfreq=3)...
	   Assign 23 to reload r1122 (freq=3)
	 Assigning to 1123 (cl=SSE_REGS, orig=942, freq=3, tfirst=1123, tfreq=3)...
	   Assign 23 to reload r1123 (freq=3)
	 Assigning to 1124 (cl=SSE_REGS, orig=688, freq=3, tfirst=1124, tfreq=3)...
	   Assign 22 to reload r1124 (freq=3)
	 Assigning to 1125 (cl=SSE_REGS, orig=987, freq=3, tfirst=1125, tfreq=3)...
	   Assign 22 to reload r1125 (freq=3)
	 Assigning to 1126 (cl=SSE_REGS, orig=996, freq=3, tfirst=1126, tfreq=3)...
	   Assign 23 to reload r1126 (freq=3)
	 Assigning to 1127 (cl=SSE_REGS, orig=694, freq=3, tfirst=1127, tfreq=3)...
	   Assign 23 to reload r1127 (freq=3)
	 Assigning to 1128 (cl=SSE_REGS, orig=696, freq=3, tfirst=1128, tfreq=3)...
	   Assign 22 to reload r1128 (freq=3)
	 Assigning to 1159 (cl=SSE_REGS, orig=700, freq=2, tfirst=1129, tfreq=3)...
	 Assigning to 1129 (cl=SSE_REGS, orig=699, freq=3, tfirst=1129, tfreq=3)...
	   Assign 21 to reload r1129 (freq=3)
	Hard reg 21 is preferable by r1159 with profit 1
	Hard reg 21 is preferable by r1132 with profit 1
	 Assigning to 1132 (cl=SSE_REGS, orig=700, freq=2, tfirst=1129, tfreq=3)...
	   Assign 25 to optional reload r1132 (freq=2)
	Hard reg 21 is preferable by r1159 with profit 1
	Hard reg 25 is preferable by r1159 with profit 1
	 Assigning to 1158 (cl=SSE_REGS, orig=456, freq=2, tfirst=1130, tfreq=3)...
	 Assigning to 1130 (cl=SSE_REGS, orig=455, freq=3, tfirst=1130, tfreq=3)...
	   Assign 22 to reload r1130 (freq=3)
	Hard reg 22 is preferable by r1158 with profit 1
	Hard reg 22 is preferable by r1131 with profit 1
	 Assigning to 1131 (cl=SSE_REGS, orig=456, freq=2, tfirst=1130, tfreq=3)...
	   Assign 22 to optional reload r1131 (freq=2)
	Hard reg 22 is preferable by r1158 with profit 2
	 Assigning to 1133 (cl=SSE_REGS, orig=675, freq=3, tfirst=1133, tfreq=3)...
	   Assign 22 to reload r1133 (freq=3)
	 Assigning to 1134 (cl=SSE_REGS, orig=476, freq=3, tfirst=1134, tfreq=3)...
	   Assign 21 to reload r1134 (freq=3)
	 Assigning to 1135 (cl=SSE_REGS, orig=679, freq=3, tfirst=1135, tfreq=3)...
	   Assign 22 to reload r1135 (freq=3)
	 Assigning to 1136 (cl=SSE_REGS, orig=681, freq=3, tfirst=1136, tfreq=3)...
	   Assign 23 to reload r1136 (freq=3)
	 Assigning to 1137 (cl=SSE_REGS, orig=683, freq=3, tfirst=1137, tfreq=3)...
	   Assign 22 to reload r1137 (freq=3)
	 Assigning to 1161 (cl=SSE_REGS, orig=687, freq=2, tfirst=1138, tfreq=3)...
	 Assigning to 1138 (cl=SSE_REGS, orig=686, freq=3, tfirst=1138, tfreq=3)...
	   Assign 21 to reload r1138 (freq=3)
	Hard reg 21 is preferable by r1161 with profit 1
	Hard reg 21 is preferable by r1141 with profit 1
	 Assigning to 1141 (cl=SSE_REGS, orig=687, freq=2, tfirst=1138, tfreq=3)...
	   Assign 28 to optional reload r1141 (freq=2)
	Hard reg 21 is preferable by r1161 with profit 1
	Hard reg 28 is preferable by r1161 with profit 1
	 Assigning to 1160 (cl=SSE_REGS, orig=504, freq=2, tfirst=1139, tfreq=3)...
	 Assigning to 1139 (cl=SSE_REGS, orig=503, freq=3, tfirst=1139, tfreq=3)...
	   Assign 22 to reload r1139 (freq=3)
	Hard reg 22 is preferable by r1160 with profit 1
	Hard reg 22 is preferable by r1140 with profit 1
	 Assigning to 1140 (cl=SSE_REGS, orig=504, freq=2, tfirst=1139, tfreq=3)...
	   Assign 22 to optional reload r1140 (freq=2)
	Hard reg 22 is preferable by r1160 with profit 2
	 Assigning to 1142 (cl=SSE_REGS, orig=515, freq=3, tfirst=1142, tfreq=3)...
	   Assign 24 to reload r1142 (freq=3)
	 Assigning to 1163 (cl=SSE_REGS, orig=706, freq=2, tfirst=1144, tfreq=3)...
	 Assigning to 1144 (cl=SSE_REGS, orig=705, freq=3, tfirst=1144, tfreq=3)...
	   Assign 27 to reload r1144 (freq=3)
	Hard reg 27 is preferable by r1163 with profit 1
	Hard reg 27 is preferable by r1149 with profit 1
	 Assigning to 1149 (cl=SSE_REGS, orig=706, freq=2, tfirst=1144, tfreq=3)...
	   Assign 27 to optional reload r1149 (freq=2)
	Hard reg 27 is preferable by r1163 with profit 2
	 Assigning to 1162 (cl=SSE_REGS, orig=532, freq=2, tfirst=1145, tfreq=3)...
	 Assigning to 1145 (cl=SSE_REGS, orig=530, freq=3, tfirst=1145, tfreq=3)...
	   Assign 25 to reload r1145 (freq=3)
	Hard reg 25 is preferable by r1162 with profit 1
	Hard reg 25 is preferable by r1146 with profit 1
	 Assigning to 1146 (cl=SSE_REGS, orig=532, freq=2, tfirst=1145, tfreq=3)...
	   Assign 25 to optional reload r1146 (freq=2)
	Hard reg 25 is preferable by r1162 with profit 2
	 Assigning to 1147 (cl=SSE_REGS, orig=707, freq=3, tfirst=1147, tfreq=3)...
	   Assign 22 to reload r1147 (freq=3)
	 Assigning to 1150 (cl=SSE_REGS, orig=543, freq=3, tfirst=1150, tfreq=3)...
	   Assign 22 to reload r1150 (freq=3)
	 Assigning to 1151 (cl=SSE_REGS, orig=709, freq=3, tfirst=1151, tfreq=3)...
	   Assign 22 to reload r1151 (freq=3)
  Reassigning non-reload pseudos

********** Undoing inheritance #1: **********

Inherit 0 out of 13 (0.00%)
   Insn after restoring regs:
 1734: r1110:SF=r189:SF
      REG_DEAD r189:SF
   Insn after restoring regs:
 1733: r1109:SF=r642:SF
      REG_DEAD r642:SF
   Insn after restoring regs:
 1732: r189:SF=r1108:SF
      REG_DEAD r1108:SF
   Insn after restoring regs:
 1730: r642:SF=r1107:SF
      REG_DEAD r1107:SF
   Insn after restoring regs:
 1744: r1116:SF=r652:SF
      REG_DEAD r652:SF
   Insn after restoring regs:
 1743: r1115:SF=r650:SF
      REG_DEAD r650:SF
   Insn after restoring regs:
 1742: r652:SF=r1114:SF
      REG_DEAD r1114:SF
   Insn after restoring regs:
 1740: r650:SF=r1113:SF
      REG_DEAD r1113:SF
   Insn after restoring regs:
 1750: r1120:SF=r657:SF
      REG_DEAD r657:SF
   Insn after restoring regs:
 1749: r1119:SF=r268:SF
      REG_DEAD r268:SF
   Insn after restoring regs:
 1748: r268:SF=r1118:SF
      REG_DEAD r1118:SF
   Insn after restoring regs:
 1746: r657:SF=r1117:SF
      REG_DEAD r1117:SF
   Insn after restoring regs:
 1772: r1132:SF=r700:SF
      REG_DEAD r700:SF
   Insn after restoring regs:
 1771: r1131:SF=r456:SF
      REG_DEAD r456:SF
   Insn after restoring regs:
 1770: r456:SF=r1130:SF
      REG_DEAD r1130:SF
   Insn after restoring regs:
 1768: r700:SF=r1129:SF
      REG_DEAD r1129:SF
   Insn after restoring regs:
 1788: r1141:SF=r687:SF
      REG_DEAD r687:SF
   Insn after restoring regs:
 1787: r1140:SF=r504:SF
      REG_DEAD r504:SF
   Insn after restoring regs:
 1786: r504:SF=r1139:SF
      REG_DEAD r1139:SF
   Insn after restoring regs:
 1784: r687:SF=r1138:SF
      REG_DEAD r1138:SF
   Insn after restoring regs:
 1802: r1149:SF=r706:SF
      REG_DEAD r706:SF
   Insn after restoring regs:
 1800: r1148:SF=r704:SF
      REG_DEAD r704:SF
   Insn after restoring regs:
 1797: r1146:SF=r532:SF
      REG_DEAD r532:SF
   Insn after restoring regs:
 1796: r532:SF=r1145:SF
      REG_DEAD r1145:SF
   Insn after restoring regs:
 1794: r706:SF=r1144:SF
      REG_DEAD r1144:SF
   Insn after restoring regs:
 1792: r704:SF=r1143:SF
      REG_DEAD r1143:SF
Remove optional reload reg 1109
  Restoring original insn:
  380: r195:SF=r194:SF*r642:SF
      REG_DEAD r642:SF
      REG_DEAD r194:SF
  Deleting move 1733
 1733: r1109:SF=r642:SF
      REG_DEAD r642:SF
deleting insn with uid = 1733.
Remove optional reload reg 1110
  Restoring original insn:
  392: r205:SF=r204:SF*r189:SF
      REG_DEAD r189:SF
      REG_DEAD r204:SF
  Deleting move 1734
 1734: r1110:SF=r189:SF
      REG_DEAD r189:SF
deleting insn with uid = 1734.
Remove optional reload reg 1115
  Restoring original insn:
  531: r225:SF=r224:SF*r650:SF
      REG_DEAD r650:SF
      REG_DEAD r224:SF
  Deleting move 1743
 1743: r1115:SF=r650:SF
      REG_DEAD r650:SF
deleting insn with uid = 1743.
Remove optional reload reg 1116
  Restoring original insn:
  551: r239:SF=r238:SF*r652:SF
      REG_DEAD r652:SF
      REG_DEAD r238:SF
  Deleting move 1744
 1744: r1116:SF=r652:SF
      REG_DEAD r652:SF
deleting insn with uid = 1744.
Remove optional reload reg 1119
  Restoring original insn:
  712: r270:SF=r269:SF*r268:SF
      REG_DEAD r268:SF
      REG_DEAD r269:SF
  Deleting move 1749
 1749: r1119:SF=r268:SF
      REG_DEAD r268:SF
deleting insn with uid = 1749.
Remove optional reload reg 1120
  Restoring original insn:
  715: r273:SF=r272:SF*r657:SF
      REG_DEAD r657:SF
      REG_DEAD r272:SF
  Deleting move 1750
 1750: r1120:SF=r657:SF
      REG_DEAD r657:SF
deleting insn with uid = 1750.
Remove optional reload reg 1131
  Restoring original insn:
 1245: r458:SF=r457:SF*r456:SF
      REG_DEAD r456:SF
      REG_DEAD r457:SF
  Deleting move 1771
 1771: r1131:SF=r456:SF
      REG_DEAD r456:SF
deleting insn with uid = 1771.
Remove optional reload reg 1132
  Restoring original insn:
 1248: r461:SF=r460:SF*r700:SF
      REG_DEAD r700:SF
      REG_DEAD r460:SF
  Deleting move 1772
 1772: r1132:SF=r700:SF
      REG_DEAD r700:SF
deleting insn with uid = 1772.
Remove optional reload reg 1140
  Restoring original insn:
 1432: r506:SF=r505:SF*r504:SF
      REG_DEAD r504:SF
      REG_DEAD r505:SF
  Deleting move 1787
 1787: r1140:SF=r504:SF
      REG_DEAD r504:SF
deleting insn with uid = 1787.
Remove optional reload reg 1141
  Restoring original insn:
 1435: r509:SF=r508:SF*r687:SF
      REG_DEAD r687:SF
      REG_DEAD r508:SF
  Deleting move 1788
 1788: r1141:SF=r687:SF
      REG_DEAD r687:SF
deleting insn with uid = 1788.
Remove optional reload reg 1146
  Restoring original insn:
 1548: r534:SF=r533:SF*r532:SF
      REG_DEAD r532:SF
      REG_DEAD r533:SF
  Deleting move 1797
 1797: r1146:SF=r532:SF
      REG_DEAD r532:SF
deleting insn with uid = 1797.
Remove optional reload reg 1149
  Restoring original insn:
 1551: r1148:SF=r1148:SF+r706:SF
      REG_DEAD r706:SF
  Deleting move 1802
 1802: r1149:SF=r706:SF
      REG_DEAD r706:SF
deleting insn with uid = 1802.

********** Local #2: **********

	   Spilling non-eliminable hard regs: 6
            2 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 1551:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=1165 from oldreg=706, assigning class SSE_REGS to r1165
      Making reload reg 1165 for reg 706 optional
 1551: r1148:SF=r1148:SF+r1165:SF
      REG_DEAD r706:SF
    Inserting insn reload before:
 1820: r1165:SF=r706:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=615,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            alt=1,overall=617,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=3,overall=614,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=4,overall=622,losers=2 -- refuse
            0 Non pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=7,overall=2,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1820:  (0) v  (1) m {*movsf_internal}
            2 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 1548:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=1166 from oldreg=532, assigning class SSE_REGS to r1166
      Making reload reg 1166 for reg 532 optional
 1548: r534:SF=r533:SF*r1166:SF
      REG_DEAD r532:SF
      REG_DEAD r533:SF
    Inserting insn reload before:
 1821: r1166:SF=r532:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=615,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            alt=1,overall=617,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=3,overall=614,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=4,overall=622,losers=2 -- refuse
            0 Non pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=7,overall=2,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1821:  (0) v  (1) m {*movsf_internal}
            2 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 1435:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=1167 from oldreg=687, assigning class SSE_REGS to r1167
      Making reload reg 1167 for reg 687 optional
 1435: r509:SF=r508:SF*r1167:SF
      REG_DEAD r687:SF
      REG_DEAD r508:SF
    Inserting insn reload before:
 1822: r1167:SF=r687:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=615,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            alt=1,overall=617,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=3,overall=614,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=4,overall=622,losers=2 -- refuse
            0 Non pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=7,overall=2,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1822:  (0) v  (1) m {*movsf_internal}
            2 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 1432:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=1168 from oldreg=504, assigning class SSE_REGS to r1168
      Making reload reg 1168 for reg 504 optional
 1432: r506:SF=r505:SF*r1168:SF
      REG_DEAD r504:SF
      REG_DEAD r505:SF
    Inserting insn reload before:
 1823: r1168:SF=r504:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=615,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            alt=1,overall=617,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=3,overall=614,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=4,overall=622,losers=2 -- refuse
            0 Non pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=7,overall=2,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1823:  (0) v  (1) m {*movsf_internal}
            2 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 1248:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=1169 from oldreg=700, assigning class SSE_REGS to r1169
      Making reload reg 1169 for reg 700 optional
 1248: r461:SF=r460:SF*r1169:SF
      REG_DEAD r700:SF
      REG_DEAD r460:SF
    Inserting insn reload before:
 1824: r1169:SF=r700:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=615,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            alt=1,overall=617,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=3,overall=614,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=4,overall=622,losers=2 -- refuse
            0 Non pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=7,overall=2,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1824:  (0) v  (1) m {*movsf_internal}
            2 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 1245:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=1170 from oldreg=456, assigning class SSE_REGS to r1170
      Making reload reg 1170 for reg 456 optional
 1245: r458:SF=r457:SF*r1170:SF
      REG_DEAD r456:SF
      REG_DEAD r457:SF
    Inserting insn reload before:
 1825: r1170:SF=r456:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=615,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            alt=1,overall=617,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=3,overall=614,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=4,overall=622,losers=2 -- refuse
            0 Non pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=7,overall=2,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1825:  (0) v  (1) m {*movsf_internal}
            2 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 715:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=1171 from oldreg=657, assigning class SSE_REGS to r1171
      Making reload reg 1171 for reg 657 optional
  715: r273:SF=r272:SF*r1171:SF
      REG_DEAD r657:SF
      REG_DEAD r272:SF
    Inserting insn reload before:
 1826: r1171:SF=r657:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=615,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            alt=1,overall=617,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=3,overall=614,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=4,overall=622,losers=2 -- refuse
            0 Non pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=7,overall=2,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1826:  (0) v  (1) m {*movsf_internal}
            2 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 712:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=1172 from oldreg=268, assigning class SSE_REGS to r1172
      Making reload reg 1172 for reg 268 optional
  712: r270:SF=r269:SF*r1172:SF
      REG_DEAD r268:SF
      REG_DEAD r269:SF
    Inserting insn reload before:
 1827: r1172:SF=r268:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=615,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            alt=1,overall=617,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=3,overall=614,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=4,overall=622,losers=2 -- refuse
            0 Non pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=7,overall=2,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1827:  (0) v  (1) m {*movsf_internal}
            2 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 551:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=1173 from oldreg=652, assigning class SSE_REGS to r1173
      Making reload reg 1173 for reg 652 optional
  551: r239:SF=r238:SF*r1173:SF
      REG_DEAD r652:SF
      REG_DEAD r238:SF
    Inserting insn reload before:
 1828: r1173:SF=r652:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=615,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            alt=1,overall=617,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=3,overall=614,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=4,overall=622,losers=2 -- refuse
            0 Non pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=7,overall=2,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1828:  (0) v  (1) m {*movsf_internal}
            2 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 531:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=1174 from oldreg=650, assigning class SSE_REGS to r1174
      Making reload reg 1174 for reg 650 optional
  531: r225:SF=r224:SF*r1174:SF
      REG_DEAD r650:SF
      REG_DEAD r224:SF
    Inserting insn reload before:
 1829: r1174:SF=r650:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=615,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            alt=1,overall=617,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=3,overall=614,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=4,overall=622,losers=2 -- refuse
            0 Non pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=7,overall=2,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1829:  (0) v  (1) m {*movsf_internal}
            2 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 392:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=1175 from oldreg=189, assigning class SSE_REGS to r1175
      Making reload reg 1175 for reg 189 optional
  392: r205:SF=r204:SF*r1175:SF
      REG_DEAD r189:SF
      REG_DEAD r204:SF
    Inserting insn reload before:
 1830: r1175:SF=r189:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=615,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            alt=1,overall=617,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=3,overall=614,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=4,overall=622,losers=2 -- refuse
            0 Non pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=7,overall=2,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1830:  (0) v  (1) m {*movsf_internal}
            2 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 380:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=1176 from oldreg=642, assigning class SSE_REGS to r1176
      Making reload reg 1176 for reg 642 optional
  380: r195:SF=r194:SF*r1176:SF
      REG_DEAD r642:SF
      REG_DEAD r194:SF
    Inserting insn reload before:
 1831: r1176:SF=r642:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=615,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            alt=1,overall=617,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=3,overall=614,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=4,overall=622,losers=2 -- refuse
            0 Non pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=7,overall=2,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1831:  (0) v  (1) m {*movsf_internal}
	   Spilling non-eliminable hard regs: 6

********** Inheritance #2: **********

EBB 2
EBB 3
EBB 4
EBB 5
EBB 6
EBB 7
EBB 8
EBB 9
EBB 10
EBB 58
EBB 11
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=1177 from oldreg=189, assigning class SSE_REGS to inheritance r1177
    Original reg change 189->1177 (bb11):
 1732: r1177:SF=r1108:SF
      REG_DEAD r1108:SF
    Add original<-inheritance after:
 1832: r189:SF=r1177:SF

    Inheritance reuse change 189->1177 (bb11):
 1830: r1175:SF=r1177:SF
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=1178 from oldreg=642, assigning class SSE_REGS to inheritance r1178
    Original reg change 642->1178 (bb11):
 1730: r1178:SF=r1107:SF
      REG_DEAD r1107:SF
    Add original<-inheritance after:
 1833: r642:SF=r1178:SF

    Inheritance reuse change 642->1178 (bb11):
 1831: r1176:SF=r1178:SF
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
	    Removing dead insn:
  1832: r189:SF=r1177:SF
deleting insn with uid = 1832.
	    Removing dead insn:
  1833: r642:SF=r1178:SF
deleting insn with uid = 1833.
EBB 12
EBB 13
EBB 14
EBB 15
EBB 16
EBB 17
EBB 18
EBB 19
EBB 20
EBB 21
EBB 22
EBB 23
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=1179 from oldreg=652, assigning class SSE_REGS to inheritance r1179
    Original reg change 652->1179 (bb23):
 1742: r1179:SF=r1114:SF
      REG_DEAD r1114:SF
    Add original<-inheritance after:
 1834: r652:SF=r1179:SF

    Inheritance reuse change 652->1179 (bb23):
 1828: r1173:SF=r1179:SF
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=1180 from oldreg=650, assigning class SSE_REGS to inheritance r1180
    Original reg change 650->1180 (bb23):
 1740: r1180:SF=r1113:SF
      REG_DEAD r1113:SF
    Add original<-inheritance after:
 1835: r650:SF=r1180:SF

    Inheritance reuse change 650->1180 (bb23):
 1829: r1174:SF=r1180:SF
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
	    Removing dead insn:
  1834: r652:SF=r1179:SF
deleting insn with uid = 1834.
	    Removing dead insn:
  1835: r650:SF=r1180:SF
deleting insn with uid = 1835.
EBB 24
EBB 25
EBB 26
EBB 27
EBB 28
EBB 29
EBB 30
EBB 31
EBB 32
EBB 33
EBB 59
EBB 34
EBB 60
EBB 35
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=1181 from oldreg=268, assigning class SSE_REGS to inheritance r1181
    Original reg change 268->1181 (bb35):
 1748: r1181:SF=r1118:SF
      REG_DEAD r1118:SF
    Add original<-inheritance after:
 1836: r268:SF=r1181:SF

    Inheritance reuse change 268->1181 (bb35):
 1827: r1172:SF=r1181:SF
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=1182 from oldreg=657, assigning class SSE_REGS to inheritance r1182
    Original reg change 657->1182 (bb35):
 1746: r1182:SF=r1117:SF
      REG_DEAD r1117:SF
    Add original<-inheritance after:
 1837: r657:SF=r1182:SF

    Inheritance reuse change 657->1182 (bb35):
 1826: r1171:SF=r1182:SF
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
	    Removing dead insn:
  1836: r268:SF=r1181:SF
deleting insn with uid = 1836.
	    Removing dead insn:
  1837: r657:SF=r1182:SF
deleting insn with uid = 1837.
EBB 36
EBB 37
EBB 38
EBB 39
EBB 40
EBB 61
EBB 41
EBB 42
EBB 43
EBB 44
EBB 45
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=1183 from oldreg=456, assigning class SSE_REGS to inheritance r1183
    Original reg change 456->1183 (bb45):
 1770: r1183:SF=r1130:SF
      REG_DEAD r1130:SF
    Add original<-inheritance after:
 1838: r456:SF=r1183:SF

    Inheritance reuse change 456->1183 (bb45):
 1825: r1170:SF=r1183:SF
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=1184 from oldreg=700, assigning class SSE_REGS to inheritance r1184
    Original reg change 700->1184 (bb45):
 1768: r1184:SF=r1129:SF
      REG_DEAD r1129:SF
    Add original<-inheritance after:
 1839: r700:SF=r1184:SF

    Inheritance reuse change 700->1184 (bb45):
 1824: r1169:SF=r1184:SF
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
	    Removing dead insn:
  1838: r456:SF=r1183:SF
deleting insn with uid = 1838.
	    Removing dead insn:
  1839: r700:SF=r1184:SF
deleting insn with uid = 1839.
EBB 46
EBB 47
EBB 48
EBB 49
EBB 50
EBB 51
EBB 52
EBB 53
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=1185 from oldreg=504, assigning class SSE_REGS to inheritance r1185
    Original reg change 504->1185 (bb53):
 1786: r1185:SF=r1139:SF
      REG_DEAD r1139:SF
    Add original<-inheritance after:
 1840: r504:SF=r1185:SF

    Inheritance reuse change 504->1185 (bb53):
 1823: r1168:SF=r1185:SF
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=1186 from oldreg=687, assigning class SSE_REGS to inheritance r1186
    Original reg change 687->1186 (bb53):
 1784: r1186:SF=r1138:SF
      REG_DEAD r1138:SF
    Add original<-inheritance after:
 1841: r687:SF=r1186:SF

    Inheritance reuse change 687->1186 (bb53):
 1822: r1167:SF=r1186:SF
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
	    Removing dead insn:
  1840: r504:SF=r1185:SF
deleting insn with uid = 1840.
	    Removing dead insn:
  1841: r687:SF=r1186:SF
deleting insn with uid = 1841.
EBB 54
EBB 55
EBB 56
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=1187 from oldreg=532, assigning class SSE_REGS to inheritance r1187
    Original reg change 532->1187 (bb56):
 1796: r1187:SF=r1145:SF
      REG_DEAD r1145:SF
    Add original<-inheritance after:
 1842: r532:SF=r1187:SF

    Inheritance reuse change 532->1187 (bb56):
 1821: r1166:SF=r1187:SF
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=1188 from oldreg=706, assigning class SSE_REGS to inheritance r1188
    Original reg change 706->1188 (bb56):
 1794: r1188:SF=r1144:SF
      REG_DEAD r1144:SF
    Add original<-inheritance after:
 1843: r706:SF=r1188:SF

    Inheritance reuse change 706->1188 (bb56):
 1820: r1165:SF=r1188:SF
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=1189 from oldreg=704, assigning class SSE_REGS to inheritance r1189
    Original reg change 704->1189 (bb56):
 1792: r1189:SF=r1143:SF
      REG_DEAD r1143:SF
    Add original<-inheritance after:
 1844: r704:SF=r1189:SF

    Inheritance reuse change 704->1189 (bb56):
 1800: r1148:SF=r1189:SF
      REG_DEAD r1189:SF
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
	    Removing dead insn:
  1842: r532:SF=r1187:SF
deleting insn with uid = 1842.
	    Removing dead insn:
  1843: r706:SF=r1188:SF
deleting insn with uid = 1843.
	    Removing dead insn:
  1844: r704:SF=r1189:SF
deleting insn with uid = 1844.
EBB 62
EBB 57

********** Pseudo live ranges #2: **********

  BB 57
   Insn 1660: point = 0, n_alt = -1
  BB 62
   Insn 1705: point = 0, n_alt = -1
  BB 55
   Insn 1498: point = 0, n_alt = -1
   Insn 1497: point = 0, n_alt = 0
   Insn 1496: point = 1, n_alt = 0
   Insn 1495: point = 2, n_alt = 0
  BB 56
   Insn 1687: point = 3, n_alt = -1
   Insn 1620: point = 3, n_alt = 1
   Insn 1619: point = 3, n_alt = 8
   Insn 1618: point = 4, n_alt = 3
   Insn 1617: point = 5, n_alt = 2
   Insn 1616: point = 7, n_alt = 3
   Insn 1615: point = 9, n_alt = 0
   Insn 1614: point = 11, n_alt = 0
   Insn 1613: point = 12, n_alt = -1
   Insn 1612: point = 14, n_alt = 1
   Insn 1611: point = 16, n_alt = 7
   Insn 1610: point = 18, n_alt = 3
   Insn 1609: point = 19, n_alt = 3
   Insn 1608: point = 21, n_alt = 0
   Insn 1607: point = 23, n_alt = 0
   Insn 1606: point = 24, n_alt = 1
   Insn 1605: point = 26, n_alt = 7
   Insn 1604: point = 28, n_alt = 3
   Insn 1603: point = 29, n_alt = 3
   Insn 1602: point = 31, n_alt = 0
   Insn 1601: point = 33, n_alt = 0
   Insn 1600: point = 34, n_alt = 8
   Insn 1599: point = 35, n_alt = 3
   Insn 1598: point = 36, n_alt = 2
   Insn 1597: point = 38, n_alt = 3
   Insn 1596: point = 40, n_alt = 0
   Insn 1595: point = 42, n_alt = 0
   Insn 1594: point = 43, n_alt = 7
   Insn 1593: point = 45, n_alt = 3
   Insn 1592: point = 46, n_alt = 1
   Insn 1591: point = 48, n_alt = 1
   Insn 1590: point = 50, n_alt = 7
   Insn 1589: point = 51, n_alt = 1
   Insn 1588: point = 53, n_alt = 7
   Insn 1587: point = 54, n_alt = -1
   Insn 1586: point = 56, n_alt = 2
   Insn 1585: point = 58, n_alt = 7
   Insn 1584: point = 60, n_alt = 3
   Insn 1583: point = 61, n_alt = 1
   Insn 1582: point = 63, n_alt = 7
   Insn 1806: point = 64, n_alt = -1
	Hard reg 22 is preferable by r1151 with profit 1
   Insn 1581: point = 66, n_alt = 1
   Insn 1805: point = 67, n_alt = -1
	Hard reg 22 is preferable by r1151 with profit 1
	Hard reg 21 is preferable by r1151 with profit 1
   Insn 1580: point = 68, n_alt = 7
   Insn 1579: point = 69, n_alt = 8
   Insn 1578: point = 70, n_alt = 3
   Insn 1577: point = 71, n_alt = 1
   Insn 1576: point = 73, n_alt = 3
   Insn 1575: point = 75, n_alt = 0
   Insn 1574: point = 77, n_alt = 0
   Insn 1804: point = 78, n_alt = -1
	Hard reg 21 is preferable by r1150 with profit 1
   Insn 1573: point = 80, n_alt = 2
   Insn 1803: point = 81, n_alt = -1
	Hard reg 21 is preferable by r1150 with profit 1
	Hard reg 22 is preferable by r1150 with profit 1
   Insn 1572: point = 83, n_alt = 7
   Insn 1571: point = 85, n_alt = 3
   Insn 1570: point = 86, n_alt = 3
   Insn 1569: point = 88, n_alt = 0
   Insn 1568: point = 90, n_alt = 0
   Insn 1567: point = 91, n_alt = -1
   Insn 1566: point = 93, n_alt = 2
   Insn 1565: point = 95, n_alt = 7
   Insn 1564: point = 97, n_alt = 3
   Insn 1563: point = 98, n_alt = 3
   Insn 1562: point = 100, n_alt = 0
   Insn 1561: point = 102, n_alt = 0
   Insn 1560: point = 103, n_alt = 7
   Insn 1559: point = 105, n_alt = 3
   Insn 1558: point = 106, n_alt = 3
   Insn 1557: point = 108, n_alt = 0
   Insn 1556: point = 110, n_alt = 0
   Insn 1555: point = 111, n_alt = 8
   Insn 1554: point = 112, n_alt = 0
   Insn 1553: point = 113, n_alt = 8
   Insn 1552: point = 114, n_alt = 2
   Insn 1801: point = 116, n_alt = -1
	Hard reg 21 is preferable by r1148 with profit 1
   Insn 1551: point = 118, n_alt = 1
   Insn 1820: point = 119, n_alt = 7
	   Creating copy r1165<-r1188@1
   Insn 1800: point = 121, n_alt = 7
	   Creating copy r1148<-r1189@1
   Insn 1799: point = 123, n_alt = -1
	Hard reg 22 is preferable by r1147 with profit 1
   Insn 1550: point = 125, n_alt = 1
   Insn 1798: point = 126, n_alt = -1
	Hard reg 22 is preferable by r1147 with profit 1
	Hard reg 21 is preferable by r1147 with profit 1
   Insn 1549: point = 127, n_alt = -1
   Insn 1548: point = 129, n_alt = 1
   Insn 1821: point = 131, n_alt = 7
	   Creating copy r1166<-r1187@1
   Insn 1547: point = 133, n_alt = -1
   Insn 1546: point = 134, n_alt = 0
   Insn 1545: point = 134, n_alt = 10
   Insn 1544: point = 135, n_alt = 3
   Insn 1796: point = 136, n_alt = 8
	   Creating copy r1145->r1187@1
   Insn 1543: point = 138, n_alt = 1
   Insn 1795: point = 139, n_alt = -1
	Hard reg 21 is preferable by r1145 with profit 1
   Insn 1542: point = 141, n_alt = 7
   Insn 1541: point = 142, n_alt = 1
   Insn 1540: point = 144, n_alt = 7
   Insn 1539: point = 145, n_alt = 7
   Insn 1794: point = 146, n_alt = 8
	   Creating copy r1144->r1188@1
   Insn 1538: point = 148, n_alt = 1
   Insn 1793: point = 149, n_alt = -1
	Hard reg 21 is preferable by r1144 with profit 1
   Insn 1537: point = 150, n_alt = -1
   Insn 1536: point = 152, n_alt = 1
   Insn 1535: point = 154, n_alt = 7
   Insn 1534: point = 156, n_alt = 3
   Insn 1533: point = 157, n_alt = 3
   Insn 1532: point = 159, n_alt = 0
   Insn 1531: point = 161, n_alt = 0
   Insn 1530: point = 162, n_alt = 7
   Insn 1529: point = 164, n_alt = 3
   Insn 1792: point = 165, n_alt = 8
	   Creating copy r1143->r1189@1
   Insn 1528: point = 167, n_alt = 1
   Insn 1791: point = 168, n_alt = -1
	Hard reg 21 is preferable by r1143 with profit 1
   Insn 1527: point = 169, n_alt = 7
   Insn 1526: point = 171, n_alt = 3
   Insn 1525: point = 172, n_alt = 4
   Insn 1524: point = 173, n_alt = 9
   Insn 1523: point = 174, n_alt = 0
   Insn 1522: point = 174, n_alt = -1
   Insn 1521: point = 175, n_alt = -1
   Insn 1520: point = 176, n_alt = 1
   Insn 1519: point = 178, n_alt = 1
   Insn 1518: point = 180, n_alt = 1
   Insn 1517: point = 182, n_alt = 7
   Insn 1516: point = 183, n_alt = 7
   Insn 1515: point = 184, n_alt = 7
   Insn 1514: point = 186, n_alt = 3
   Insn 1790: point = 187, n_alt = -1
	Hard reg 24 is preferable by r1142 with profit 1
   Insn 1513: point = 189, n_alt = 1
   Insn 1789: point = 190, n_alt = -1
	Hard reg 24 is preferable by r1142 with profit 1
	Hard reg 22 is preferable by r1142 with profit 1
   Insn 1512: point = 192, n_alt = 7
   Insn 1511: point = 194, n_alt = 3
   Insn 1510: point = 195, n_alt = 3
   Insn 1509: point = 197, n_alt = 0
   Insn 1508: point = 199, n_alt = 0
   Insn 1507: point = 200, n_alt = 7
   Insn 1506: point = 202, n_alt = 3
   Insn 1505: point = 203, n_alt = 8
   Insn 1504: point = 204, n_alt = 7
   Insn 1503: point = 206, n_alt = 3
   Insn 1502: point = 207, n_alt = 3
   Insn 1501: point = 209, n_alt = 0
   Insn 1500: point = 211, n_alt = 0
  BB 54
   Insn 1493: point = 213, n_alt = 1
   Insn 1492: point = 213, n_alt = 0
   Insn 1491: point = 215, n_alt = 3
  BB 45
   Insn 1683: point = 216, n_alt = -1
   Insn 1301: point = 216, n_alt = 0
   Insn 1300: point = 216, n_alt = -1
   Insn 1299: point = 217, n_alt = 3
   Insn 1298: point = 218, n_alt = 0
   Insn 1297: point = 218, n_alt = -1
   Insn 1296: point = 219, n_alt = -1
   Insn 1295: point = 220, n_alt = 0
   Insn 1294: point = 220, n_alt = 3
   Insn 1293: point = 221, n_alt = 3
   Insn 1292: point = 222, n_alt = 0
   Insn 1291: point = 222, n_alt = -1
   Insn 1290: point = 223, n_alt = -1
   Insn 1289: point = 224, n_alt = 0
   Insn 1288: point = 224, n_alt = 3
   Insn 1287: point = 225, n_alt = 3
   Insn 1286: point = 226, n_alt = 0
   Insn 1285: point = 226, n_alt = -1
   Insn 1284: point = 227, n_alt = -1
   Insn 1283: point = 228, n_alt = 0
   Insn 1282: point = 228, n_alt = 3
   Insn 1281: point = 229, n_alt = 3
   Insn 1280: point = 230, n_alt = 0
   Insn 1279: point = 230, n_alt = -1
   Insn 1278: point = 231, n_alt = -1
   Insn 1277: point = 232, n_alt = 0
   Insn 1276: point = 232, n_alt = 3
   Insn 1275: point = 233, n_alt = 3
   Insn 1274: point = 234, n_alt = 0
   Insn 1273: point = 234, n_alt = -1
   Insn 1272: point = 235, n_alt = -1
   Insn 1271: point = 236, n_alt = 0
   Insn 1270: point = 236, n_alt = 3
   Insn 1269: point = 237, n_alt = 3
   Insn 1268: point = 238, n_alt = 0
   Insn 1267: point = 238, n_alt = -1
   Insn 1266: point = 239, n_alt = -1
   Insn 1265: point = 240, n_alt = 0
   Insn 1264: point = 240, n_alt = 3
   Insn 1263: point = 241, n_alt = 3
   Insn 1262: point = 242, n_alt = 0
   Insn 1261: point = 242, n_alt = -1
   Insn 1260: point = 243, n_alt = 3
   Insn 1259: point = 244, n_alt = 1
   Insn 1258: point = 244, n_alt = 1
   Insn 1257: point = 244, n_alt = 1
   Insn 1256: point = 244, n_alt = 5
   Insn 1255: point = 245, n_alt = 4
   Insn 1254: point = 246, n_alt = 1
   Insn 1253: point = 246, n_alt = 5
   Insn 1252: point = 247, n_alt = 4
   Insn 1251: point = 248, n_alt = 8
   Insn 1250: point = 249, n_alt = 1
   Insn 1249: point = 251, n_alt = 7
   Insn 1248: point = 252, n_alt = 1
   Insn 1824: point = 254, n_alt = 7
	   Creating copy r1169<-r1184@1
   Insn 1247: point = 256, n_alt = 1
   Insn 1246: point = 258, n_alt = 7
   Insn 1245: point = 259, n_alt = 1
   Insn 1825: point = 261, n_alt = 7
	   Creating copy r1170<-r1183@1
   Insn 1244: point = 263, n_alt = -1
   Insn 1243: point = 264, n_alt = 0
   Insn 1242: point = 264, n_alt = 10
   Insn 1241: point = 265, n_alt = 0
   Insn 1770: point = 265, n_alt = 8
	   Creating copy r1130->r1183@1
   Insn 1240: point = 267, n_alt = 1
   Insn 1769: point = 268, n_alt = -1
	Hard reg 22 is preferable by r1130 with profit 1
   Insn 1239: point = 270, n_alt = 7
   Insn 1238: point = 271, n_alt = 7
   Insn 1237: point = 273, n_alt = 3
   Insn 1768: point = 274, n_alt = 8
	   Creating copy r1129->r1184@1
   Insn 1236: point = 276, n_alt = 1
   Insn 1767: point = 277, n_alt = -1
	Hard reg 21 is preferable by r1129 with profit 1
   Insn 1235: point = 278, n_alt = 7
   Insn 1234: point = 280, n_alt = 3
   Insn 1233: point = 281, n_alt = 3
   Insn 1232: point = 282, n_alt = 8
   Insn 1231: point = 283, n_alt = 1
   Insn 1230: point = 285, n_alt = 7
   Insn 1229: point = 286, n_alt = 1
   Insn 1228: point = 288, n_alt = 1
   Insn 1227: point = 290, n_alt = 7
   Insn 1226: point = 291, n_alt = 1
   Insn 1225: point = 293, n_alt = 1
   Insn 1224: point = 295, n_alt = 7
   Insn 1223: point = 296, n_alt = 7
   Insn 1222: point = 298, n_alt = 3
   Insn 1766: point = 299, n_alt = -1
	Hard reg 22 is preferable by r1128 with profit 1
   Insn 1221: point = 301, n_alt = 1
   Insn 1765: point = 302, n_alt = -1
	Hard reg 22 is preferable by r1128 with profit 1
	Hard reg 21 is preferable by r1128 with profit 1
   Insn 1220: point = 303, n_alt = 7
   Insn 1219: point = 305, n_alt = 3
   Insn 1764: point = 306, n_alt = -1
	Hard reg 23 is preferable by r1127 with profit 1
   Insn 1218: point = 308, n_alt = 1
   Insn 1763: point = 309, n_alt = -1
	Hard reg 23 is preferable by r1127 with profit 1
	Hard reg 21 is preferable by r1127 with profit 1
   Insn 1217: point = 310, n_alt = 7
   Insn 1216: point = 311, n_alt = 8
   Insn 1215: point = 312, n_alt = 2
   Insn 1214: point = 314, n_alt = 1
   Insn 1213: point = 316, n_alt = 7
   Insn 1212: point = 318, n_alt = 3
   Insn 1211: point = 319, n_alt = 2
   Insn 1210: point = 321, n_alt = 7
   Insn 1209: point = 322, n_alt = 7
   Insn 1208: point = 323, n_alt = 8
   Insn 1207: point = 324, n_alt = 1
   Insn 1206: point = 326, n_alt = 1
   Insn 1205: point = 328, n_alt = 7
   Insn 1204: point = 329, n_alt = 1
   Insn 1203: point = 331, n_alt = 7
   Insn 1202: point = 332, n_alt = 7
   Insn 1201: point = 333, n_alt = 1
   Insn 1200: point = 335, n_alt = 7
   Insn 1199: point = 336, n_alt = 8
   Insn 1198: point = 337, n_alt = 1
   Insn 1197: point = 339, n_alt = -1
   Insn 1762: point = 341, n_alt = -1
	Hard reg 22 is preferable by r1126 with profit 1
   Insn 1196: point = 343, n_alt = 2
   Insn 1761: point = 344, n_alt = -1
	Hard reg 22 is preferable by r1126 with profit 1
	Hard reg 23 is preferable by r1126 with profit 1
   Insn 1195: point = 346, n_alt = 7
   Insn 1194: point = 347, n_alt = 0
   Insn 1193: point = 348, n_alt = 2
   Insn 1192: point = 350, n_alt = 7
   Insn 1191: point = 351, n_alt = 1
   Insn 1190: point = 353, n_alt = 7
   Insn 1189: point = 354, n_alt = 7
  BB 44
   Insn 1186: point = 355, n_alt = 8
   Insn 1185: point = 356, n_alt = 2
   Insn 1184: point = 358, n_alt = 7
   Insn 1183: point = 359, n_alt = 1
   Insn 1182: point = 361, n_alt = 7
   Insn 1181: point = 362, n_alt = 1
   Insn 1180: point = 364, n_alt = 7
   Insn 1179: point = 365, n_alt = 8
   Insn 1178: point = 366, n_alt = 7
   Insn 1177: point = 367, n_alt = 0
   Insn 1176: point = 367, n_alt = -1
   Insn 1175: point = 368, n_alt = 3
   Insn 1174: point = 369, n_alt = 0
   Insn 1173: point = 369, n_alt = -1
   Insn 1172: point = 370, n_alt = 4
   Insn 1171: point = 370, n_alt = 0
   Insn 1170: point = 370, n_alt = 3
   Insn 1169: point = 371, n_alt = 0
   Insn 1168: point = 371, n_alt = -1
   Insn 1167: point = 372, n_alt = 3
   Insn 1166: point = 373, n_alt = 1
   Insn 1165: point = 373, n_alt = 1
   Insn 1164: point = 373, n_alt = 1
   Insn 1163: point = 373, n_alt = 5
   Insn 1162: point = 374, n_alt = 4
  BB 43
   Insn 1157: point = 375, n_alt = -1
   Insn 1156: point = 375, n_alt = 1
   Insn 1155: point = 376, n_alt = 7
   Insn 1154: point = 377, n_alt = 8
   Insn 1760: point = 378, n_alt = -1
	Hard reg 21 is preferable by r1125 with profit 1
   Insn 1153: point = 380, n_alt = 2
   Insn 1759: point = 381, n_alt = -1
	Hard reg 21 is preferable by r1125 with profit 1
	Hard reg 22 is preferable by r1125 with profit 1
   Insn 1152: point = 383, n_alt = 7
   Insn 1151: point = 384, n_alt = 2
   Insn 1150: point = 386, n_alt = 1
   Insn 1149: point = 388, n_alt = 7
   Insn 1148: point = 389, n_alt = 1
   Insn 1147: point = 391, n_alt = 7
   Insn 1146: point = 392, n_alt = 7
   Insn 1758: point = 393, n_alt = -1
	Hard reg 22 is preferable by r1124 with profit 1
   Insn 1145: point = 395, n_alt = 1
   Insn 1757: point = 396, n_alt = -1
	Hard reg 22 is preferable by r1124 with profit 1
	Hard reg 21 is preferable by r1124 with profit 1
   Insn 1144: point = 397, n_alt = 7
  BB 53
   Insn 1488: point = 398, n_alt = 0
   Insn 1487: point = 398, n_alt = -1
   Insn 1486: point = 399, n_alt = 3
   Insn 1485: point = 400, n_alt = 0
   Insn 1484: point = 400, n_alt = -1
   Insn 1483: point = 401, n_alt = -1
   Insn 1482: point = 402, n_alt = 0
   Insn 1481: point = 402, n_alt = 3
   Insn 1480: point = 403, n_alt = 3
   Insn 1479: point = 404, n_alt = 0
   Insn 1478: point = 404, n_alt = -1
   Insn 1477: point = 405, n_alt = -1
   Insn 1476: point = 406, n_alt = 0
   Insn 1475: point = 406, n_alt = 3
   Insn 1474: point = 407, n_alt = 3
   Insn 1473: point = 408, n_alt = 0
   Insn 1472: point = 408, n_alt = -1
   Insn 1471: point = 409, n_alt = -1
   Insn 1470: point = 410, n_alt = 0
   Insn 1469: point = 410, n_alt = 3
   Insn 1468: point = 411, n_alt = 3
   Insn 1467: point = 412, n_alt = 0
   Insn 1466: point = 412, n_alt = -1
   Insn 1465: point = 413, n_alt = -1
   Insn 1464: point = 414, n_alt = 0
   Insn 1463: point = 414, n_alt = 3
   Insn 1462: point = 415, n_alt = 3
   Insn 1461: point = 416, n_alt = 0
   Insn 1460: point = 416, n_alt = -1
   Insn 1459: point = 417, n_alt = -1
   Insn 1458: point = 418, n_alt = 0
   Insn 1457: point = 418, n_alt = 3
   Insn 1456: point = 419, n_alt = 3
   Insn 1455: point = 420, n_alt = 0
   Insn 1454: point = 420, n_alt = -1
   Insn 1453: point = 421, n_alt = -1
   Insn 1452: point = 422, n_alt = 0
   Insn 1451: point = 422, n_alt = 3
   Insn 1450: point = 423, n_alt = 3
   Insn 1449: point = 424, n_alt = 0
   Insn 1448: point = 424, n_alt = -1
   Insn 1447: point = 425, n_alt = 3
   Insn 1446: point = 426, n_alt = 1
   Insn 1445: point = 426, n_alt = 1
   Insn 1444: point = 426, n_alt = 1
   Insn 1443: point = 426, n_alt = 5
   Insn 1442: point = 427, n_alt = 4
   Insn 1441: point = 428, n_alt = 1
   Insn 1440: point = 428, n_alt = 5
   Insn 1439: point = 429, n_alt = 4
   Insn 1438: point = 430, n_alt = 8
   Insn 1437: point = 431, n_alt = 1
   Insn 1436: point = 433, n_alt = 7
   Insn 1435: point = 434, n_alt = 1
   Insn 1822: point = 436, n_alt = 7
	   Creating copy r1167<-r1186@1
   Insn 1434: point = 438, n_alt = 1
   Insn 1433: point = 440, n_alt = 7
   Insn 1432: point = 441, n_alt = 1
   Insn 1823: point = 443, n_alt = 7
	   Creating copy r1168<-r1185@1
   Insn 1431: point = 445, n_alt = -1
   Insn 1430: point = 446, n_alt = 0
   Insn 1429: point = 446, n_alt = 10
   Insn 1428: point = 447, n_alt = 0
   Insn 1786: point = 447, n_alt = 8
	   Creating copy r1139->r1185@1
   Insn 1427: point = 449, n_alt = 1
   Insn 1785: point = 450, n_alt = -1
	Hard reg 22 is preferable by r1139 with profit 1
   Insn 1426: point = 452, n_alt = 7
   Insn 1425: point = 453, n_alt = 7
   Insn 1424: point = 455, n_alt = 3
   Insn 1784: point = 456, n_alt = 8
	   Creating copy r1138->r1186@1
   Insn 1423: point = 458, n_alt = 1
   Insn 1783: point = 459, n_alt = -1
	Hard reg 21 is preferable by r1138 with profit 1
   Insn 1422: point = 460, n_alt = 7
   Insn 1421: point = 462, n_alt = 3
   Insn 1420: point = 463, n_alt = 3
   Insn 1419: point = 464, n_alt = 8
   Insn 1418: point = 465, n_alt = 1
   Insn 1417: point = 467, n_alt = 7
   Insn 1416: point = 468, n_alt = 1
   Insn 1415: point = 470, n_alt = 1
   Insn 1414: point = 472, n_alt = 7
   Insn 1413: point = 473, n_alt = 1
   Insn 1412: point = 475, n_alt = 1
   Insn 1411: point = 477, n_alt = 7
   Insn 1410: point = 478, n_alt = 7
   Insn 1409: point = 480, n_alt = 3
   Insn 1782: point = 481, n_alt = -1
	Hard reg 22 is preferable by r1137 with profit 1
   Insn 1408: point = 483, n_alt = 1
   Insn 1781: point = 484, n_alt = -1
	Hard reg 22 is preferable by r1137 with profit 1
	Hard reg 21 is preferable by r1137 with profit 1
   Insn 1407: point = 485, n_alt = 7
   Insn 1406: point = 487, n_alt = 3
   Insn 1780: point = 488, n_alt = -1
	Hard reg 23 is preferable by r1136 with profit 1
   Insn 1405: point = 490, n_alt = 1
   Insn 1779: point = 491, n_alt = -1
	Hard reg 23 is preferable by r1136 with profit 1
	Hard reg 21 is preferable by r1136 with profit 1
   Insn 1404: point = 492, n_alt = 7
   Insn 1403: point = 493, n_alt = 8
   Insn 1402: point = 494, n_alt = 2
   Insn 1401: point = 496, n_alt = 1
   Insn 1400: point = 498, n_alt = 7
   Insn 1399: point = 500, n_alt = 3
   Insn 1398: point = 501, n_alt = 2
   Insn 1397: point = 503, n_alt = 7
   Insn 1396: point = 504, n_alt = 7
   Insn 1395: point = 505, n_alt = 8
   Insn 1394: point = 506, n_alt = 2
   Insn 1393: point = 508, n_alt = 1
   Insn 1392: point = 510, n_alt = 7
   Insn 1391: point = 511, n_alt = 1
   Insn 1390: point = 513, n_alt = 7
   Insn 1389: point = 514, n_alt = 7
   Insn 1778: point = 515, n_alt = -1
	Hard reg 22 is preferable by r1135 with profit 1
   Insn 1388: point = 517, n_alt = 1
   Insn 1777: point = 518, n_alt = -1
	Hard reg 22 is preferable by r1135 with profit 1
	Hard reg 21 is preferable by r1135 with profit 1
   Insn 1387: point = 519, n_alt = 7
   Insn 1386: point = 520, n_alt = 8
   Insn 1385: point = 521, n_alt = 1
   Insn 1384: point = 523, n_alt = -1
   Insn 1383: point = 525, n_alt = 2
   Insn 1382: point = 527, n_alt = 7
   Insn 1381: point = 528, n_alt = 0
   Insn 1776: point = 529, n_alt = -1
	Hard reg 22 is preferable by r1134 with profit 1
   Insn 1380: point = 531, n_alt = 2
   Insn 1775: point = 532, n_alt = -1
	Hard reg 22 is preferable by r1134 with profit 1
	Hard reg 21 is preferable by r1134 with profit 1
   Insn 1379: point = 534, n_alt = 7
   Insn 1378: point = 535, n_alt = 1
   Insn 1377: point = 537, n_alt = 7
   Insn 1376: point = 538, n_alt = 7
  BB 52
   Insn 1373: point = 539, n_alt = 8
   Insn 1372: point = 540, n_alt = 0
   Insn 1371: point = 542, n_alt = 2
   Insn 1370: point = 543, n_alt = 2
   Insn 1369: point = 545, n_alt = 7
   Insn 1368: point = 546, n_alt = 1
   Insn 1367: point = 548, n_alt = 7
   Insn 1366: point = 549, n_alt = 1
   Insn 1365: point = 551, n_alt = 7
   Insn 1364: point = 552, n_alt = 8
   Insn 1363: point = 553, n_alt = 7
   Insn 1362: point = 554, n_alt = 0
   Insn 1361: point = 554, n_alt = -1
   Insn 1360: point = 555, n_alt = 3
   Insn 1359: point = 556, n_alt = 0
   Insn 1358: point = 556, n_alt = -1
   Insn 1357: point = 557, n_alt = 4
   Insn 1356: point = 557, n_alt = 0
   Insn 1355: point = 557, n_alt = 3
   Insn 1354: point = 558, n_alt = 0
   Insn 1353: point = 558, n_alt = -1
   Insn 1352: point = 559, n_alt = 3
   Insn 1351: point = 560, n_alt = 1
   Insn 1350: point = 560, n_alt = 1
   Insn 1349: point = 560, n_alt = 1
   Insn 1348: point = 560, n_alt = 5
   Insn 1347: point = 561, n_alt = 4
  BB 51
   Insn 1345: point = 562, n_alt = -1
   Insn 1344: point = 562, n_alt = 0
   Insn 1343: point = 563, n_alt = 0
   Insn 1342: point = 563, n_alt = 0
  BB 49
   Insn 1685: point = 566, n_alt = -1
   Insn 1334: point = 566, n_alt = 1
  BB 50
   Insn 1339: point = 567, n_alt = 1
  BB 48
   Insn 1328: point = 568, n_alt = -1
   Insn 1327: point = 568, n_alt = 1
   Insn 1326: point = 569, n_alt = 7
  BB 47
   Insn 1325: point = 571, n_alt = -1
   Insn 1324: point = 571, n_alt = 1
   Insn 1323: point = 572, n_alt = 7
   Insn 1322: point = 573, n_alt = 7
   Insn 1321: point = 575, n_alt = 3
  BB 46
   Insn 1319: point = 576, n_alt = -1
   Insn 1318: point = 576, n_alt = 1
   Insn 1317: point = 577, n_alt = 7
   Insn 1316: point = 578, n_alt = 8
   Insn 1315: point = 579, n_alt = 1
   Insn 1314: point = 581, n_alt = 7
   Insn 1313: point = 582, n_alt = 2
   Insn 1312: point = 584, n_alt = 1
   Insn 1311: point = 586, n_alt = 7
   Insn 1310: point = 587, n_alt = 1
   Insn 1309: point = 589, n_alt = 7
   Insn 1308: point = 590, n_alt = 7
   Insn 1774: point = 591, n_alt = -1
	Hard reg 22 is preferable by r1133 with profit 1
   Insn 1307: point = 593, n_alt = 1
   Insn 1773: point = 594, n_alt = -1
	Hard reg 22 is preferable by r1133 with profit 1
	Hard reg 21 is preferable by r1133 with profit 1
   Insn 1306: point = 595, n_alt = 7
  BB 42
   Insn 1139: point = 596, n_alt = -1
   Insn 1138: point = 596, n_alt = 1
   Insn 1137: point = 597, n_alt = 7
  BB 41
   Insn 1136: point = 599, n_alt = -1
   Insn 1135: point = 599, n_alt = 1
   Insn 1134: point = 600, n_alt = 7
   Insn 1133: point = 601, n_alt = 7
   Insn 1132: point = 603, n_alt = 3
   Insn 1131: point = 604, n_alt = 0
   Insn 1130: point = 604, n_alt = -1
   Insn 1129: point = 605, n_alt = 3
   Insn 1128: point = 606, n_alt = 0
   Insn 1127: point = 606, n_alt = -1
   Insn 1126: point = 607, n_alt = -1
   Insn 1125: point = 608, n_alt = 0
   Insn 1124: point = 608, n_alt = 3
   Insn 1123: point = 609, n_alt = 3
   Insn 1122: point = 610, n_alt = 0
   Insn 1121: point = 610, n_alt = -1
   Insn 1120: point = 611, n_alt = -1
   Insn 1119: point = 612, n_alt = 0
   Insn 1118: point = 612, n_alt = 3
   Insn 1117: point = 613, n_alt = 3
   Insn 1116: point = 614, n_alt = 0
   Insn 1115: point = 614, n_alt = -1
   Insn 1114: point = 615, n_alt = -1
   Insn 1113: point = 616, n_alt = 0
   Insn 1112: point = 616, n_alt = 3
   Insn 1111: point = 617, n_alt = 3
   Insn 1110: point = 618, n_alt = 0
   Insn 1109: point = 618, n_alt = -1
   Insn 1108: point = 619, n_alt = -1
   Insn 1107: point = 620, n_alt = 0
   Insn 1106: point = 620, n_alt = 3
   Insn 1105: point = 621, n_alt = 3
   Insn 1104: point = 622, n_alt = 0
   Insn 1103: point = 622, n_alt = -1
   Insn 1102: point = 623, n_alt = 3
   Insn 1101: point = 624, n_alt = 1
   Insn 1100: point = 624, n_alt = 1
   Insn 1099: point = 624, n_alt = 1
   Insn 1098: point = 624, n_alt = 5
   Insn 1097: point = 625, n_alt = 4
   Insn 1096: point = 626, n_alt = 1
   Insn 1095: point = 626, n_alt = 5
   Insn 1094: point = 627, n_alt = 4
  BB 61
   Insn 1702: point = 628, n_alt = -1
  BB 37
   Insn 820: point = 628, n_alt = -1
   Insn 819: point = 628, n_alt = 0
   Insn 818: point = 629, n_alt = 0
   Insn 817: point = 630, n_alt = 0
  BB 40
   Insn 1680: point = 631, n_alt = -1
   Insn 1088: point = 631, n_alt = 1
   Insn 1087: point = 631, n_alt = 8
   Insn 1086: point = 632, n_alt = 3
   Insn 1085: point = 633, n_alt = 7
   Insn 1084: point = 634, n_alt = 3
   Insn 1083: point = 636, n_alt = 0
   Insn 1082: point = 638, n_alt = 0
   Insn 1081: point = 639, n_alt = 0
   Insn 1080: point = 639, n_alt = -1
   Insn 1079: point = 640, n_alt = 3
   Insn 1078: point = 641, n_alt = 0
   Insn 1077: point = 641, n_alt = -1
   Insn 1076: point = 642, n_alt = -1
   Insn 1075: point = 643, n_alt = 0
   Insn 1074: point = 643, n_alt = 3
   Insn 1073: point = 644, n_alt = 3
   Insn 1072: point = 645, n_alt = 0
   Insn 1071: point = 645, n_alt = -1
   Insn 1070: point = 646, n_alt = -1
   Insn 1069: point = 647, n_alt = 0
   Insn 1068: point = 647, n_alt = 3
   Insn 1067: point = 648, n_alt = 3
   Insn 1066: point = 649, n_alt = 0
   Insn 1065: point = 649, n_alt = -1
   Insn 1064: point = 650, n_alt = -1
   Insn 1063: point = 651, n_alt = 0
   Insn 1062: point = 651, n_alt = 3
   Insn 1061: point = 652, n_alt = 3
   Insn 1060: point = 653, n_alt = 0
   Insn 1059: point = 653, n_alt = -1
   Insn 1058: point = 654, n_alt = -1
   Insn 1057: point = 655, n_alt = 0
   Insn 1056: point = 655, n_alt = 3
   Insn 1055: point = 656, n_alt = 3
   Insn 1054: point = 657, n_alt = 0
   Insn 1053: point = 657, n_alt = -1
   Insn 1052: point = 658, n_alt = -1
   Insn 1051: point = 659, n_alt = 0
   Insn 1050: point = 659, n_alt = 3
   Insn 1049: point = 660, n_alt = 3
   Insn 1048: point = 661, n_alt = 0
   Insn 1047: point = 661, n_alt = -1
   Insn 1046: point = 662, n_alt = -1
   Insn 1045: point = 663, n_alt = 0
   Insn 1044: point = 663, n_alt = 3
   Insn 1043: point = 664, n_alt = 3
   Insn 1042: point = 665, n_alt = 0
   Insn 1041: point = 665, n_alt = -1
   Insn 1040: point = 666, n_alt = -1
   Insn 1039: point = 667, n_alt = 0
   Insn 1038: point = 667, n_alt = 3
   Insn 1037: point = 668, n_alt = 3
   Insn 1036: point = 669, n_alt = 0
   Insn 1035: point = 669, n_alt = -1
   Insn 1034: point = 670, n_alt = -1
   Insn 1033: point = 671, n_alt = 0
   Insn 1032: point = 671, n_alt = 3
   Insn 1031: point = 672, n_alt = 3
   Insn 1030: point = 673, n_alt = 0
   Insn 1029: point = 673, n_alt = -1
   Insn 1028: point = 674, n_alt = 3
   Insn 1027: point = 675, n_alt = 1
   Insn 1026: point = 675, n_alt = 1
   Insn 1025: point = 675, n_alt = 1
   Insn 1024: point = 675, n_alt = 5
   Insn 1023: point = 676, n_alt = 4
   Insn 1022: point = 677, n_alt = 1
   Insn 1021: point = 677, n_alt = 5
   Insn 1020: point = 678, n_alt = 4
   Insn 1019: point = 679, n_alt = 8
   Insn 1018: point = 680, n_alt = 1
   Insn 1017: point = 682, n_alt = 7
   Insn 1016: point = 683, n_alt = 1
   Insn 1015: point = 685, n_alt = 7
   Insn 1014: point = 686, n_alt = 8
   Insn 1013: point = 687, n_alt = 1
   Insn 1012: point = 689, n_alt = 7
   Insn 1011: point = 690, n_alt = 1
   Insn 1010: point = 692, n_alt = 7
   Insn 1009: point = 693, n_alt = 8
   Insn 1008: point = 694, n_alt = 1
   Insn 1007: point = 696, n_alt = 7
   Insn 1006: point = 697, n_alt = 1
   Insn 1005: point = 699, n_alt = 7
   Insn 1004: point = 700, n_alt = 8
   Insn 1003: point = 701, n_alt = 1
   Insn 1002: point = 703, n_alt = 7
   Insn 1001: point = 704, n_alt = 1
   Insn 1000: point = 706, n_alt = 7
   Insn 999: point = 707, n_alt = 8
   Insn 998: point = 708, n_alt = 2
   Insn 997: point = 710, n_alt = -1
   Insn 996: point = 712, n_alt = 1
   Insn 995: point = 714, n_alt = 7
   Insn 994: point = 715, n_alt = 1
   Insn 993: point = 717, n_alt = 7
   Insn 992: point = 718, n_alt = 7
   Insn 991: point = 719, n_alt = 1
   Insn 990: point = 721, n_alt = 7
   Insn 989: point = 722, n_alt = 1
   Insn 988: point = 724, n_alt = 7
   Insn 987: point = 725, n_alt = 1
   Insn 986: point = 727, n_alt = -1
   Insn 985: point = 729, n_alt = 1
   Insn 984: point = 731, n_alt = 7
   Insn 983: point = 732, n_alt = 1
   Insn 982: point = 734, n_alt = 7
   Insn 981: point = 735, n_alt = 1
   Insn 980: point = 737, n_alt = 7
   Insn 979: point = 738, n_alt = 1
   Insn 978: point = 740, n_alt = 7
   Insn 977: point = 741, n_alt = 8
   Insn 976: point = 742, n_alt = 1
   Insn 975: point = 744, n_alt = -1
   Insn 974: point = 746, n_alt = 1
   Insn 973: point = 748, n_alt = 7
   Insn 972: point = 749, n_alt = 1
   Insn 971: point = 751, n_alt = 7
   Insn 970: point = 752, n_alt = 1
   Insn 969: point = 754, n_alt = 7
   Insn 968: point = 755, n_alt = 1
   Insn 967: point = 757, n_alt = 7
   Insn 966: point = 758, n_alt = 7
   Insn 965: point = 759, n_alt = 8
   Insn 964: point = 760, n_alt = 2
   Insn 963: point = 762, n_alt = -1
   Insn 962: point = 764, n_alt = 1
   Insn 961: point = 766, n_alt = 7
   Insn 960: point = 767, n_alt = 1
   Insn 959: point = 769, n_alt = 7
   Insn 958: point = 770, n_alt = 7
   Insn 957: point = 771, n_alt = 1
   Insn 956: point = 773, n_alt = -1
   Insn 1756: point = 775, n_alt = -1
	Hard reg 22 is preferable by r1123 with profit 1
   Insn 955: point = 777, n_alt = 2
   Insn 1755: point = 778, n_alt = -1
	Hard reg 22 is preferable by r1123 with profit 1
	Hard reg 23 is preferable by r1123 with profit 1
   Insn 954: point = 780, n_alt = 7
   Insn 953: point = 781, n_alt = 2
   Insn 952: point = 783, n_alt = 7
   Insn 951: point = 784, n_alt = 7
   Insn 950: point = 785, n_alt = 1
   Insn 949: point = 787, n_alt = 7
   Insn 948: point = 788, n_alt = 1
   Insn 947: point = 790, n_alt = 7
   Insn 946: point = 791, n_alt = 8
   Insn 945: point = 792, n_alt = 1
   Insn 944: point = 794, n_alt = -1
   Insn 1754: point = 796, n_alt = -1
	Hard reg 22 is preferable by r1122 with profit 1
   Insn 943: point = 798, n_alt = 2
   Insn 1753: point = 799, n_alt = -1
	Hard reg 22 is preferable by r1122 with profit 1
	Hard reg 23 is preferable by r1122 with profit 1
   Insn 942: point = 801, n_alt = 7
   Insn 941: point = 802, n_alt = 2
   Insn 940: point = 804, n_alt = 7
   Insn 939: point = 805, n_alt = 7
   Insn 938: point = 806, n_alt = 1
   Insn 937: point = 808, n_alt = 7
   Insn 936: point = 809, n_alt = 1
   Insn 935: point = 811, n_alt = 7
   Insn 934: point = 812, n_alt = 7
   Insn 933: point = 813, n_alt = 8
   Insn 932: point = 814, n_alt = 2
   Insn 931: point = 816, n_alt = 7
   Insn 930: point = 818, n_alt = 3
   Insn 929: point = 819, n_alt = 3
   Insn 928: point = 821, n_alt = 0
   Insn 927: point = 823, n_alt = 0
   Insn 926: point = 824, n_alt = 7
   Insn 925: point = 826, n_alt = 3
   Insn 924: point = 827, n_alt = 3
   Insn 923: point = 829, n_alt = 0
   Insn 922: point = 831, n_alt = 0
   Insn 921: point = 832, n_alt = 8
   Insn 920: point = 833, n_alt = 2
   Insn 919: point = 835, n_alt = -1
   Insn 918: point = 837, n_alt = 1
   Insn 917: point = 839, n_alt = 7
   Insn 916: point = 840, n_alt = 1
   Insn 915: point = 842, n_alt = 7
   Insn 914: point = 843, n_alt = 7
   Insn 913: point = 844, n_alt = 1
   Insn 912: point = 846, n_alt = 7
   Insn 911: point = 847, n_alt = 1
   Insn 910: point = 849, n_alt = 7
   Insn 909: point = 850, n_alt = 8
   Insn 908: point = 851, n_alt = 1
   Insn 907: point = 853, n_alt = 7
   Insn 906: point = 854, n_alt = 0
   Insn 905: point = 856, n_alt = 1
   Insn 904: point = 858, n_alt = 7
   Insn 903: point = 859, n_alt = 1
   Insn 902: point = 861, n_alt = -1
   Insn 901: point = 863, n_alt = 2
   Insn 900: point = 865, n_alt = -1
   Insn 899: point = 867, n_alt = 1
   Insn 898: point = 869, n_alt = 7
   Insn 897: point = 870, n_alt = 1
   Insn 896: point = 872, n_alt = 7
   Insn 895: point = 873, n_alt = 7
   Insn 894: point = 875, n_alt = 3
   Insn 893: point = 876, n_alt = 1
   Insn 892: point = 878, n_alt = 7
   Insn 891: point = 879, n_alt = 7
   Insn 890: point = 881, n_alt = 3
   Insn 889: point = 882, n_alt = 8
   Insn 888: point = 883, n_alt = 2
   Insn 887: point = 885, n_alt = 7
   Insn 886: point = 886, n_alt = 1
   Insn 885: point = 888, n_alt = -1
   Insn 884: point = 889, n_alt = 0
   Insn 883: point = 889, n_alt = -1
   Insn 882: point = 890, n_alt = -1
   Insn 881: point = 891, n_alt = 7
   Insn 880: point = 892, n_alt = 0
   Insn 1752: point = 894, n_alt = -1
	Hard reg 21 is preferable by r1121 with profit 1
   Insn 879: point = 896, n_alt = 2
   Insn 1751: point = 897, n_alt = -1
	Hard reg 21 is preferable by r1121 with profit 1
	Hard reg 22 is preferable by r1121 with profit 1
   Insn 878: point = 899, n_alt = 7
   Insn 877: point = 900, n_alt = 1
   Insn 876: point = 902, n_alt = 7
   Insn 875: point = 903, n_alt = 4
   Insn 874: point = 904, n_alt = 9
   Insn 873: point = 905, n_alt = 0
   Insn 872: point = 905, n_alt = -1
   Insn 871: point = 906, n_alt = 1
   Insn 870: point = 908, n_alt = 2
   Insn 869: point = 909, n_alt = 7
   Insn 868: point = 910, n_alt = 8
  BB 39
   Insn 10: point = 912, n_alt = -1
  BB 38
   Insn 864: point = 915, n_alt = -1
   Insn 863: point = 915, n_alt = 0
   Insn 862: point = 916, n_alt = 0
   Insn 861: point = 918, n_alt = 0
   Insn 860: point = 919, n_alt = 1
   Insn 859: point = 919, n_alt = 0
   Insn 858: point = 920, n_alt = 1
   Insn 857: point = 920, n_alt = 2
   Insn 856: point = 922, n_alt = 7
   Insn 855: point = 924, n_alt = 3
   Insn 854: point = 925, n_alt = 1
   Insn 853: point = 927, n_alt = -1
   Insn 852: point = 929, n_alt = 2
   Insn 851: point = 931, n_alt = 7
   Insn 850: point = 932, n_alt = 7
   Insn 849: point = 933, n_alt = 1
   Insn 848: point = 935, n_alt = 7
   Insn 847: point = 936, n_alt = 7
   Insn 846: point = 938, n_alt = 3
   Insn 845: point = 939, n_alt = 7
   Insn 844: point = 940, n_alt = 8
   Insn 843: point = 941, n_alt = 2
   Insn 842: point = 943, n_alt = 7
   Insn 841: point = 945, n_alt = 3
   Insn 840: point = 946, n_alt = 7
   Insn 839: point = 947, n_alt = 8
   Insn 838: point = 948, n_alt = 2
   Insn 837: point = 950, n_alt = 7
   Insn 836: point = 952, n_alt = 3
   Insn 835: point = 953, n_alt = 7
   Insn 834: point = 955, n_alt = 3
   Insn 833: point = 956, n_alt = 3
   Insn 832: point = 958, n_alt = 0
   Insn 831: point = 960, n_alt = 0
   Insn 830: point = 961, n_alt = 8
   Insn 829: point = 962, n_alt = 2
   Insn 828: point = 964, n_alt = 7
   Insn 827: point = 966, n_alt = 3
   Insn 826: point = 967, n_alt = 7
   Insn 825: point = 969, n_alt = 3
   Insn 824: point = 970, n_alt = 3
   Insn 823: point = 972, n_alt = 0
   Insn 822: point = 974, n_alt = 0
  BB 36
   Insn 815: point = 976, n_alt = 1
   Insn 814: point = 976, n_alt = 0
   Insn 813: point = 978, n_alt = 3
   Insn 812: point = 979, n_alt = 8
   Insn 811: point = 980, n_alt = 7
   Insn 810: point = 981, n_alt = 8
   Insn 809: point = 982, n_alt = 7
   Insn 808: point = 983, n_alt = 8
   Insn 807: point = 984, n_alt = 7
   Insn 806: point = 985, n_alt = 8
   Insn 805: point = 986, n_alt = 7
   Insn 804: point = 987, n_alt = 0
   Insn 803: point = 987, n_alt = -1
   Insn 802: point = 988, n_alt = 3
   Insn 801: point = 989, n_alt = 0
   Insn 800: point = 989, n_alt = -1
   Insn 799: point = 990, n_alt = 4
   Insn 798: point = 990, n_alt = 0
   Insn 797: point = 990, n_alt = 3
   Insn 796: point = 991, n_alt = 0
   Insn 795: point = 991, n_alt = -1
   Insn 794: point = 992, n_alt = 3
   Insn 793: point = 993, n_alt = 1
   Insn 792: point = 993, n_alt = 1
   Insn 791: point = 993, n_alt = 1
   Insn 790: point = 993, n_alt = 5
   Insn 789: point = 994, n_alt = 4
   Insn 788: point = 995, n_alt = 0
   Insn 787: point = 995, n_alt = -1
   Insn 786: point = 996, n_alt = 3
   Insn 785: point = 997, n_alt = 0
   Insn 784: point = 997, n_alt = -1
   Insn 783: point = 998, n_alt = 3
   Insn 782: point = 999, n_alt = 1
   Insn 781: point = 999, n_alt = 1
   Insn 780: point = 999, n_alt = 1
   Insn 779: point = 999, n_alt = 5
   Insn 778: point = 1000, n_alt = 4
   Insn 777: point = 1001, n_alt = 0
   Insn 776: point = 1001, n_alt = -1
   Insn 775: point = 1002, n_alt = 3
   Insn 774: point = 1003, n_alt = 0
   Insn 773: point = 1003, n_alt = -1
   Insn 772: point = 1004, n_alt = -1
   Insn 771: point = 1005, n_alt = 0
   Insn 770: point = 1005, n_alt = 3
   Insn 769: point = 1006, n_alt = 3
   Insn 768: point = 1007, n_alt = 0
   Insn 767: point = 1007, n_alt = -1
   Insn 766: point = 1008, n_alt = -1
   Insn 765: point = 1009, n_alt = 0
   Insn 764: point = 1009, n_alt = 3
   Insn 763: point = 1010, n_alt = 3
   Insn 762: point = 1011, n_alt = 0
   Insn 761: point = 1011, n_alt = -1
   Insn 760: point = 1012, n_alt = -1
   Insn 759: point = 1013, n_alt = 0
   Insn 758: point = 1013, n_alt = 3
   Insn 757: point = 1014, n_alt = 3
   Insn 756: point = 1015, n_alt = 1
   Insn 755: point = 1016, n_alt = 0
   Insn 754: point = 1018, n_alt = 7
   Insn 753: point = 1020, n_alt = 3
   Insn 752: point = 1021, n_alt = 0
   Insn 751: point = 1021, n_alt = -1
   Insn 750: point = 1022, n_alt = 3
   Insn 749: point = 1023, n_alt = 1
   Insn 748: point = 1023, n_alt = 1
   Insn 747: point = 1023, n_alt = 1
   Insn 746: point = 1023, n_alt = 5
   Insn 745: point = 1024, n_alt = 4
   Insn 744: point = 1025, n_alt = 1
   Insn 743: point = 1025, n_alt = 5
   Insn 742: point = 1026, n_alt = 4
   Insn 741: point = 1027, n_alt = 8
   Insn 740: point = 1028, n_alt = 3
   Insn 739: point = 1029, n_alt = 2
   Insn 738: point = 1031, n_alt = 7
   Insn 737: point = 1032, n_alt = -1
   Insn 736: point = 1034, n_alt = 1
   Insn 735: point = 1036, n_alt = 7
   Insn 734: point = 1038, n_alt = 3
   Insn 733: point = 1039, n_alt = 7
   Insn 732: point = 1041, n_alt = 3
   Insn 731: point = 1042, n_alt = 8
   Insn 730: point = 1043, n_alt = 2
   Insn 729: point = 1045, n_alt = -1
   Insn 728: point = 1047, n_alt = 1
   Insn 727: point = 1049, n_alt = 7
   Insn 726: point = 1051, n_alt = 3
   Insn 725: point = 1052, n_alt = 7
   Insn 724: point = 1054, n_alt = 3
   Insn 723: point = 1055, n_alt = 7
   Insn 722: point = 1057, n_alt = 3
  BB 7
   Insn 1665: point = 1058, n_alt = -1
   Insn 281: point = 1058, n_alt = 8
   Insn 280: point = 1059, n_alt = 2
   Insn 279: point = 1061, n_alt = 7
   Insn 278: point = 1062, n_alt = -1
   Insn 277: point = 1064, n_alt = 1
   Insn 276: point = 1066, n_alt = 1
   Insn 275: point = 1068, n_alt = 7
   Insn 274: point = 1069, n_alt = 1
   Insn 273: point = 1071, n_alt = 1
   Insn 272: point = 1073, n_alt = 7
   Insn 271: point = 1074, n_alt = 7
   Insn 270: point = 1076, n_alt = 3
   Insn 1716: point = 1077, n_alt = -1
	Hard reg 22 is preferable by r1100 with profit 1
   Insn 269: point = 1079, n_alt = 1
   Insn 1715: point = 1080, n_alt = -1
	Hard reg 22 is preferable by r1100 with profit 1
	Hard reg 21 is preferable by r1100 with profit 1
   Insn 268: point = 1081, n_alt = 7
   Insn 267: point = 1083, n_alt = 3
   Insn 1714: point = 1084, n_alt = -1
	Hard reg 23 is preferable by r1099 with profit 1
   Insn 266: point = 1086, n_alt = 1
   Insn 1713: point = 1087, n_alt = -1
	Hard reg 23 is preferable by r1099 with profit 1
	Hard reg 21 is preferable by r1099 with profit 1
   Insn 265: point = 1088, n_alt = 7
   Insn 264: point = 1089, n_alt = 8
   Insn 263: point = 1090, n_alt = 1
   Insn 262: point = 1092, n_alt = 7
   Insn 261: point = 1093, n_alt = 7
   Insn 260: point = 1095, n_alt = 3
  BB 5
   Insn 1663: point = 1096, n_alt = -1
   Insn 227: point = 1096, n_alt = 8
   Insn 226: point = 1097, n_alt = 1
   Insn 225: point = 1099, n_alt = 7
   Insn 224: point = 1100, n_alt = 7
   Insn 223: point = 1101, n_alt = 8
   Insn 222: point = 1102, n_alt = 1
   Insn 221: point = 1104, n_alt = 7
   Insn 220: point = 1105, n_alt = 7
   Insn 219: point = 1106, n_alt = 0
   Insn 218: point = 1106, n_alt = -1
   Insn 217: point = 1107, n_alt = 3
   Insn 216: point = 1108, n_alt = 0
   Insn 215: point = 1108, n_alt = -1
   Insn 214: point = 1109, n_alt = -1
   Insn 213: point = 1110, n_alt = 0
   Insn 212: point = 1110, n_alt = 3
   Insn 211: point = 1111, n_alt = 3
   Insn 210: point = 1112, n_alt = 0
   Insn 209: point = 1112, n_alt = -1
   Insn 208: point = 1113, n_alt = 4
   Insn 207: point = 1113, n_alt = 0
   Insn 206: point = 1113, n_alt = 3
   Insn 205: point = 1114, n_alt = 0
   Insn 204: point = 1114, n_alt = -1
   Insn 203: point = 1115, n_alt = 3
   Insn 202: point = 1116, n_alt = 1
   Insn 201: point = 1116, n_alt = 1
   Insn 200: point = 1116, n_alt = 1
   Insn 199: point = 1116, n_alt = 5
   Insn 198: point = 1117, n_alt = 4
  BB 6
   Insn 257: point = 1118, n_alt = 8
   Insn 256: point = 1119, n_alt = 1
   Insn 255: point = 1121, n_alt = 7
   Insn 254: point = 1122, n_alt = -1
   Insn 253: point = 1124, n_alt = 2
   Insn 252: point = 1126, n_alt = 7
   Insn 251: point = 1128, n_alt = 3
   Insn 250: point = 1129, n_alt = 0
   Insn 249: point = 1131, n_alt = 1
   Insn 248: point = 1133, n_alt = 1
   Insn 247: point = 1135, n_alt = 7
   Insn 246: point = 1137, n_alt = 3
   Insn 245: point = 1138, n_alt = 8
   Insn 244: point = 1139, n_alt = 2
   Insn 243: point = 1141, n_alt = 7
   Insn 242: point = 1142, n_alt = -1
   Insn 241: point = 1144, n_alt = 1
   Insn 240: point = 1146, n_alt = 1
   Insn 239: point = 1148, n_alt = 7
   Insn 238: point = 1149, n_alt = 1
   Insn 237: point = 1151, n_alt = 7
   Insn 236: point = 1152, n_alt = 7
   Insn 235: point = 1154, n_alt = 3
   Insn 1712: point = 1155, n_alt = -1
	Hard reg 22 is preferable by r1098 with profit 1
   Insn 234: point = 1157, n_alt = 1
   Insn 1711: point = 1158, n_alt = -1
	Hard reg 22 is preferable by r1098 with profit 1
	Hard reg 21 is preferable by r1098 with profit 1
   Insn 233: point = 1159, n_alt = 7
   Insn 232: point = 1161, n_alt = 3
  BB 4
   Insn 193: point = 1162, n_alt = -1
   Insn 192: point = 1162, n_alt = 1
   Insn 191: point = 1163, n_alt = 7
   Insn 190: point = 1164, n_alt = 8
   Insn 189: point = 1165, n_alt = 1
   Insn 188: point = 1167, n_alt = -1
   Insn 187: point = 1169, n_alt = 1
   Insn 186: point = 1171, n_alt = 1
   Insn 185: point = 1173, n_alt = 7
   Insn 184: point = 1175, n_alt = 3
   Insn 183: point = 1176, n_alt = 1
   Insn 182: point = 1178, n_alt = 1
   Insn 181: point = 1180, n_alt = 1
   Insn 180: point = 1182, n_alt = 7
   Insn 179: point = 1183, n_alt = 7
   Insn 178: point = 1185, n_alt = 3
   Insn 1710: point = 1186, n_alt = -1
	Hard reg 23 is preferable by r1097 with profit 1
   Insn 177: point = 1188, n_alt = 1
   Insn 1709: point = 1189, n_alt = -1
	Hard reg 23 is preferable by r1097 with profit 1
	Hard reg 21 is preferable by r1097 with profit 1
   Insn 176: point = 1190, n_alt = 7
   Insn 1708: point = 1191, n_alt = -1
	Hard reg 22 is preferable by r1096 with profit 1
   Insn 175: point = 1193, n_alt = 1
   Insn 1707: point = 1194, n_alt = -1
	Hard reg 22 is preferable by r1096 with profit 1
	Hard reg 21 is preferable by r1096 with profit 1
   Insn 174: point = 1195, n_alt = 7
   Insn 173: point = 1197, n_alt = 3
   Insn 172: point = 1198, n_alt = 8
   Insn 171: point = 1199, n_alt = 0
   Insn 170: point = 1201, n_alt = 2
   Insn 169: point = 1202, n_alt = 1
   Insn 168: point = 1204, n_alt = 7
   Insn 167: point = 1205, n_alt = 7
   Insn 166: point = 1207, n_alt = 3
  BB 35
   Insn 719: point = 1208, n_alt = 8
   Insn 718: point = 1209, n_alt = 2
   Insn 717: point = 1211, n_alt = 7
   Insn 716: point = 1212, n_alt = -1
   Insn 715: point = 1214, n_alt = 1
   Insn 1826: point = 1216, n_alt = 7
	   Creating copy r1171<-r1182@1
   Insn 714: point = 1218, n_alt = 1
   Insn 713: point = 1220, n_alt = 7
   Insn 712: point = 1221, n_alt = 1
   Insn 1827: point = 1223, n_alt = 7
	   Creating copy r1172<-r1181@1
   Insn 711: point = 1225, n_alt = -1
   Insn 710: point = 1226, n_alt = 0
   Insn 709: point = 1226, n_alt = 10
   Insn 708: point = 1227, n_alt = 0
   Insn 1748: point = 1227, n_alt = 8
	   Creating copy r1118->r1181@1
   Insn 707: point = 1229, n_alt = 1
   Insn 1747: point = 1230, n_alt = -1
	Hard reg 22 is preferable by r1118 with profit 1
   Insn 706: point = 1232, n_alt = 7
   Insn 705: point = 1233, n_alt = 7
   Insn 704: point = 1235, n_alt = 3
   Insn 1746: point = 1236, n_alt = 8
	   Creating copy r1117->r1182@1
   Insn 703: point = 1238, n_alt = 1
   Insn 1745: point = 1239, n_alt = -1
	Hard reg 21 is preferable by r1117 with profit 1
   Insn 702: point = 1240, n_alt = 7
   Insn 701: point = 1242, n_alt = 3
   Insn 700: point = 1243, n_alt = 3
   Insn 699: point = 1244, n_alt = 8
   Insn 698: point = 1245, n_alt = 1
   Insn 697: point = 1247, n_alt = 7
   Insn 696: point = 1248, n_alt = 7
   Insn 695: point = 1250, n_alt = 3
  BB 34
   Insn 1695: point = 1251, n_alt = -1
   Insn 692: point = 1251, n_alt = 0
   Insn 691: point = 1251, n_alt = -1
   Insn 690: point = 1252, n_alt = 3
   Insn 689: point = 1253, n_alt = 0
   Insn 688: point = 1253, n_alt = -1
   Insn 687: point = 1254, n_alt = -1
   Insn 686: point = 1255, n_alt = 0
   Insn 685: point = 1255, n_alt = 3
   Insn 684: point = 1256, n_alt = 3
   Insn 683: point = 1257, n_alt = 0
   Insn 682: point = 1257, n_alt = -1
   Insn 681: point = 1258, n_alt = 4
   Insn 680: point = 1258, n_alt = 0
   Insn 679: point = 1258, n_alt = 3
   Insn 678: point = 1259, n_alt = 0
   Insn 677: point = 1259, n_alt = -1
   Insn 676: point = 1260, n_alt = 3
   Insn 675: point = 1261, n_alt = 1
   Insn 674: point = 1261, n_alt = 1
   Insn 673: point = 1261, n_alt = 1
   Insn 672: point = 1261, n_alt = 5
   Insn 671: point = 1262, n_alt = 4
  BB 59
   Insn 1694: point = 1263, n_alt = -1
  BB 60
   Insn 1699: point = 1263, n_alt = -1
  BB 29
   Insn 1676: point = 1263, n_alt = -1
   Insn 634: point = 1263, n_alt = 0
   Insn 633: point = 1263, n_alt = -1
   Insn 632: point = 1264, n_alt = 3
   Insn 631: point = 1265, n_alt = 0
   Insn 630: point = 1265, n_alt = -1
   Insn 629: point = 1266, n_alt = -1
   Insn 628: point = 1267, n_alt = 0
   Insn 627: point = 1267, n_alt = 3
   Insn 626: point = 1268, n_alt = 3
   Insn 625: point = 1269, n_alt = 0
   Insn 624: point = 1269, n_alt = -1
   Insn 623: point = 1270, n_alt = 4
   Insn 622: point = 1270, n_alt = 0
   Insn 621: point = 1270, n_alt = 3
   Insn 620: point = 1271, n_alt = 0
   Insn 619: point = 1271, n_alt = -1
   Insn 618: point = 1272, n_alt = 3
   Insn 617: point = 1273, n_alt = 1
   Insn 616: point = 1273, n_alt = 1
   Insn 615: point = 1273, n_alt = 1
   Insn 614: point = 1273, n_alt = 5
   Insn 613: point = 1274, n_alt = 4
  BB 28
   Insn 611: point = 1275, n_alt = -1
   Insn 610: point = 1275, n_alt = 0
   Insn 609: point = 1276, n_alt = 0
   Insn 608: point = 1276, n_alt = 0
  BB 26
   Insn 1674: point = 1279, n_alt = -1
   Insn 600: point = 1279, n_alt = 1
  BB 27
   Insn 605: point = 1280, n_alt = 1
  BB 25
   Insn 595: point = 1281, n_alt = -1
   Insn 594: point = 1281, n_alt = 1
   Insn 593: point = 1282, n_alt = 7
   Insn 592: point = 1283, n_alt = 7
  BB 24
   Insn 587: point = 1284, n_alt = -1
   Insn 586: point = 1284, n_alt = 1
   Insn 585: point = 1285, n_alt = 7
  BB 23
   Insn 584: point = 1286, n_alt = -1
   Insn 583: point = 1286, n_alt = 1
   Insn 582: point = 1287, n_alt = 7
   Insn 581: point = 1288, n_alt = 8
   Insn 580: point = 1289, n_alt = 0
   Insn 579: point = 1291, n_alt = 2
   Insn 578: point = 1292, n_alt = 2
   Insn 577: point = 1294, n_alt = 7
   Insn 576: point = 1295, n_alt = 8
   Insn 575: point = 1296, n_alt = 1
   Insn 574: point = 1298, n_alt = 1
   Insn 573: point = 1300, n_alt = -1
   Insn 572: point = 1302, n_alt = 1
   Insn 571: point = 1304, n_alt = 7
   Insn 570: point = 1306, n_alt = 3
   Insn 569: point = 1307, n_alt = 7
   Insn 568: point = 1309, n_alt = 3
   Insn 567: point = 1310, n_alt = 1
   Insn 566: point = 1312, n_alt = 1
   Insn 565: point = 1314, n_alt = 1
   Insn 564: point = 1316, n_alt = -1
   Insn 563: point = 1318, n_alt = 1
   Insn 562: point = 1320, n_alt = 1
   Insn 561: point = 1322, n_alt = 7
   Insn 560: point = 1324, n_alt = 3
   Insn 559: point = 1325, n_alt = 1
   Insn 558: point = 1327, n_alt = 7
   Insn 557: point = 1328, n_alt = 1
   Insn 556: point = 1330, n_alt = 7
   Insn 555: point = 1331, n_alt = 8
   Insn 554: point = 1332, n_alt = 2
   Insn 553: point = 1334, n_alt = 2
   Insn 552: point = 1336, n_alt = -1
   Insn 551: point = 1338, n_alt = 1
   Insn 1828: point = 1340, n_alt = 7
	   Creating copy r1173<-r1179@1
   Insn 550: point = 1342, n_alt = 1
   Insn 549: point = 1344, n_alt = 7
   Insn 548: point = 1345, n_alt = 1
   Insn 547: point = 1347, n_alt = 7
   Insn 546: point = 1348, n_alt = 7
   Insn 545: point = 1350, n_alt = 3
   Insn 544: point = 1351, n_alt = 1
   Insn 543: point = 1353, n_alt = 7
   Insn 542: point = 1354, n_alt = 7
   Insn 541: point = 1355, n_alt = 1
   Insn 540: point = 1357, n_alt = 1
   Insn 539: point = 1359, n_alt = 1
   Insn 538: point = 1361, n_alt = -1
   Insn 537: point = 1363, n_alt = 1
   Insn 536: point = 1365, n_alt = 7
   Insn 535: point = 1367, n_alt = 3
   Insn 534: point = 1368, n_alt = 7
   Insn 533: point = 1370, n_alt = 3
   Insn 532: point = 1371, n_alt = 1
   Insn 531: point = 1373, n_alt = 1
   Insn 1829: point = 1375, n_alt = 7
	   Creating copy r1174<-r1180@1
   Insn 530: point = 1377, n_alt = -1
   Insn 529: point = 1379, n_alt = 1
   Insn 528: point = 1381, n_alt = 1
   Insn 527: point = 1383, n_alt = 7
   Insn 526: point = 1385, n_alt = 3
   Insn 525: point = 1386, n_alt = -1
   Insn 524: point = 1387, n_alt = 0
   Insn 523: point = 1387, n_alt = 10
   Insn 522: point = 1388, n_alt = 0
   Insn 1742: point = 1388, n_alt = 8
	   Creating copy r1114->r1179@1
   Insn 521: point = 1390, n_alt = 1
   Insn 1741: point = 1391, n_alt = -1
	Hard reg 21 is preferable by r1114 with profit 1
   Insn 520: point = 1392, n_alt = 7
   Insn 519: point = 1394, n_alt = 3
   Insn 1740: point = 1395, n_alt = 8
	   Creating copy r1113->r1180@1
   Insn 518: point = 1397, n_alt = 1
   Insn 1739: point = 1398, n_alt = -1
	Hard reg 21 is preferable by r1113 with profit 1
   Insn 517: point = 1399, n_alt = 7
   Insn 516: point = 1400, n_alt = 3
  BB 22
   Insn 514: point = 1401, n_alt = -1
   Insn 513: point = 1401, n_alt = 0
   Insn 512: point = 1402, n_alt = 0
   Insn 511: point = 1403, n_alt = 0
  BB 33
   Insn 1678: point = 1403, n_alt = -1
   Insn 665: point = 1403, n_alt = 1
   Insn 664: point = 1403, n_alt = 8
  BB 32
   Insn 661: point = 1405, n_alt = 7
  BB 31
   Insn 659: point = 1406, n_alt = -1
   Insn 658: point = 1406, n_alt = 0
   Insn 657: point = 1407, n_alt = 0
   Insn 656: point = 1409, n_alt = 0
   Insn 655: point = 1410, n_alt = 1
   Insn 654: point = 1410, n_alt = 0
   Insn 653: point = 1411, n_alt = 1
   Insn 652: point = 1412, n_alt = 7
   Insn 651: point = 1413, n_alt = 7
  BB 30
   Insn 649: point = 1414, n_alt = -1
   Insn 648: point = 1414, n_alt = 1
   Insn 647: point = 1415, n_alt = 7
   Insn 646: point = 1416, n_alt = 0
   Insn 645: point = 1418, n_alt = 2
   Insn 644: point = 1419, n_alt = 2
   Insn 643: point = 1421, n_alt = 7
   Insn 642: point = 1422, n_alt = 8
   Insn 641: point = 1423, n_alt = 1
   Insn 640: point = 1425, n_alt = 7
   Insn 639: point = 1426, n_alt = 7
  BB 21
   Insn 509: point = 1427, n_alt = 1
   Insn 508: point = 1427, n_alt = 8
   Insn 507: point = 1428, n_alt = 1
   Insn 506: point = 1430, n_alt = 2
   Insn 505: point = 1431, n_alt = 7
  BB 17
   Insn 1672: point = 1432, n_alt = -1
   Insn 454: point = 1432, n_alt = 8
   Insn 453: point = 1433, n_alt = 1
   Insn 452: point = 1435, n_alt = 7
   Insn 451: point = 1436, n_alt = 7
   Insn 450: point = 1437, n_alt = 8
   Insn 449: point = 1438, n_alt = 1
   Insn 448: point = 1440, n_alt = 7
   Insn 447: point = 1441, n_alt = 7
   Insn 446: point = 1442, n_alt = 0
   Insn 445: point = 1442, n_alt = -1
   Insn 444: point = 1443, n_alt = 3
   Insn 443: point = 1444, n_alt = 0
   Insn 442: point = 1444, n_alt = -1
   Insn 441: point = 1445, n_alt = -1
   Insn 440: point = 1446, n_alt = 0
   Insn 439: point = 1446, n_alt = 3
   Insn 438: point = 1447, n_alt = 3
   Insn 437: point = 1448, n_alt = 0
   Insn 436: point = 1448, n_alt = -1
   Insn 435: point = 1449, n_alt = 4
   Insn 434: point = 1449, n_alt = 0
   Insn 433: point = 1449, n_alt = 3
   Insn 432: point = 1450, n_alt = 0
   Insn 431: point = 1450, n_alt = -1
   Insn 430: point = 1451, n_alt = 3
   Insn 429: point = 1452, n_alt = 1
   Insn 428: point = 1452, n_alt = 1
   Insn 427: point = 1452, n_alt = 1
   Insn 426: point = 1452, n_alt = 5
   Insn 425: point = 1453, n_alt = 4
  BB 20
   Insn 502: point = 1454, n_alt = 8
  BB 19
   Insn 9: point = 1456, n_alt = -1
  BB 18
   Insn 498: point = 1459, n_alt = -1
   Insn 497: point = 1459, n_alt = 0
   Insn 496: point = 1460, n_alt = 0
   Insn 495: point = 1462, n_alt = 0
   Insn 494: point = 1463, n_alt = 1
   Insn 493: point = 1463, n_alt = 0
   Insn 492: point = 1464, n_alt = 1
   Insn 491: point = 1464, n_alt = 1
   Insn 490: point = 1466, n_alt = 1
   Insn 489: point = 1468, n_alt = 7
   Insn 488: point = 1469, n_alt = 7
   Insn 487: point = 1470, n_alt = 7
   Insn 486: point = 1471, n_alt = 8
   Insn 485: point = 1472, n_alt = 3
   Insn 1738: point = 1474, n_alt = 6
   Insn 1737: point = 1475, n_alt = -1
   Insn 484: point = 1476, n_alt = 2
   Insn 483: point = 1477, n_alt = 2
   Insn 482: point = 1478, n_alt = 7
   Insn 481: point = 1479, n_alt = 7
   Insn 480: point = 1480, n_alt = 4
   Insn 479: point = 1481, n_alt = 9
   Insn 478: point = 1482, n_alt = 0
   Insn 477: point = 1482, n_alt = -1
   Insn 476: point = 1483, n_alt = 7
   Insn 475: point = 1483, n_alt = 1
   Insn 474: point = 1485, n_alt = 2
   Insn 473: point = 1486, n_alt = 7
   Insn 472: point = 1487, n_alt = 8
   Insn 471: point = 1488, n_alt = 2
   Insn 470: point = 1490, n_alt = 7
   Insn 469: point = 1491, n_alt = -1
   Insn 468: point = 1493, n_alt = 1
   Insn 467: point = 1495, n_alt = 1
   Insn 466: point = 1497, n_alt = 7
   Insn 465: point = 1498, n_alt = 1
   Insn 464: point = 1500, n_alt = 7
   Insn 463: point = 1501, n_alt = 7
   Insn 462: point = 1503, n_alt = 3
   Insn 1736: point = 1504, n_alt = -1
	Hard reg 22 is preferable by r1111 with profit 1
   Insn 461: point = 1506, n_alt = 1
   Insn 1735: point = 1507, n_alt = -1
	Hard reg 22 is preferable by r1111 with profit 1
	Hard reg 21 is preferable by r1111 with profit 1
   Insn 460: point = 1508, n_alt = 7
   Insn 459: point = 1510, n_alt = 3
  BB 16
   Insn 423: point = 1511, n_alt = -1
   Insn 422: point = 1511, n_alt = 0
   Insn 421: point = 1512, n_alt = 0
   Insn 420: point = 1512, n_alt = 0
  BB 14
   Insn 1670: point = 1515, n_alt = -1
   Insn 412: point = 1515, n_alt = 1
  BB 15
   Insn 417: point = 1516, n_alt = 1
  BB 13
   Insn 406: point = 1517, n_alt = -1
   Insn 405: point = 1517, n_alt = 1
   Insn 404: point = 1518, n_alt = 7
  BB 12
   Insn 401: point = 1519, n_alt = -1
   Insn 400: point = 1519, n_alt = 1
   Insn 399: point = 1520, n_alt = 7
  BB 11
   Insn 398: point = 1522, n_alt = -1
   Insn 397: point = 1522, n_alt = 1
   Insn 396: point = 1523, n_alt = 7
   Insn 395: point = 1524, n_alt = 7
   Insn 394: point = 1526, n_alt = 3
   Insn 393: point = 1527, n_alt = 8
   Insn 392: point = 1528, n_alt = 1
   Insn 1830: point = 1530, n_alt = 7
	   Creating copy r1175<-r1177@1
   Insn 391: point = 1532, n_alt = -1
   Insn 390: point = 1534, n_alt = 1
   Insn 389: point = 1536, n_alt = 1
   Insn 388: point = 1538, n_alt = 1
   Insn 387: point = 1540, n_alt = -1
   Insn 386: point = 1542, n_alt = 1
   Insn 385: point = 1544, n_alt = 7
   Insn 384: point = 1546, n_alt = 3
   Insn 383: point = 1547, n_alt = 7
   Insn 382: point = 1549, n_alt = 3
   Insn 381: point = 1550, n_alt = 1
   Insn 380: point = 1552, n_alt = 1
   Insn 1831: point = 1554, n_alt = 7
	   Creating copy r1176<-r1178@1
   Insn 379: point = 1556, n_alt = -1
   Insn 378: point = 1558, n_alt = 1
   Insn 377: point = 1560, n_alt = 1
   Insn 376: point = 1562, n_alt = 7
   Insn 375: point = 1564, n_alt = 3
   Insn 374: point = 1565, n_alt = -1
   Insn 373: point = 1566, n_alt = 0
   Insn 372: point = 1566, n_alt = 10
   Insn 371: point = 1567, n_alt = 0
   Insn 1732: point = 1567, n_alt = 8
	   Creating copy r1108->r1177@1
   Insn 370: point = 1569, n_alt = 1
   Insn 1731: point = 1570, n_alt = -1
	Hard reg 21 is preferable by r1108 with profit 1
   Insn 369: point = 1571, n_alt = 1
   Insn 368: point = 1573, n_alt = 1
   Insn 367: point = 1575, n_alt = 7
   Insn 366: point = 1576, n_alt = 7
   Insn 365: point = 1578, n_alt = 3
   Insn 1730: point = 1579, n_alt = 8
	   Creating copy r1107->r1178@1
   Insn 364: point = 1581, n_alt = 1
   Insn 1729: point = 1582, n_alt = -1
	Hard reg 21 is preferable by r1107 with profit 1
   Insn 363: point = 1583, n_alt = 7
   Insn 362: point = 1584, n_alt = 3
   Insn 1728: point = 1585, n_alt = -1
	Hard reg 22 is preferable by r1106 with profit 1
   Insn 361: point = 1587, n_alt = 1
   Insn 1727: point = 1588, n_alt = -1
	Hard reg 22 is preferable by r1106 with profit 1
	Hard reg 21 is preferable by r1106 with profit 1
   Insn 360: point = 1589, n_alt = 7
   Insn 359: point = 1591, n_alt = 3
   Insn 358: point = 1592, n_alt = 8
   Insn 357: point = 1593, n_alt = 1
   Insn 356: point = 1595, n_alt = 7
   Insn 355: point = 1596, n_alt = -1
   Insn 354: point = 1598, n_alt = 2
   Insn 1726: point = 1600, n_alt = -1
	Hard reg 21 is preferable by r1105 with profit 1
   Insn 353: point = 1602, n_alt = 2
   Insn 1725: point = 1603, n_alt = -1
	Hard reg 21 is preferable by r1105 with profit 1
	Hard reg 22 is preferable by r1105 with profit 1
   Insn 352: point = 1605, n_alt = 1
   Insn 351: point = 1607, n_alt = 7
   Insn 350: point = 1609, n_alt = 3
   Insn 349: point = 1610, n_alt = 0
   Insn 348: point = 1612, n_alt = 1
   Insn 347: point = 1614, n_alt = 1
   Insn 346: point = 1616, n_alt = 1
   Insn 345: point = 1618, n_alt = 7
   Insn 344: point = 1620, n_alt = 3
   Insn 1724: point = 1621, n_alt = -1
	Hard reg 22 is preferable by r1104 with profit 1
   Insn 343: point = 1623, n_alt = 1
   Insn 1723: point = 1624, n_alt = -1
	Hard reg 22 is preferable by r1104 with profit 1
	Hard reg 21 is preferable by r1104 with profit 1
   Insn 342: point = 1625, n_alt = 7
   Insn 1722: point = 1626, n_alt = -1
	Hard reg 23 is preferable by r1103 with profit 1
   Insn 341: point = 1628, n_alt = 1
   Insn 1721: point = 1629, n_alt = -1
	Hard reg 23 is preferable by r1103 with profit 1
	Hard reg 21 is preferable by r1103 with profit 1
   Insn 340: point = 1630, n_alt = 7
   Insn 339: point = 1632, n_alt = 3
   Insn 338: point = 1633, n_alt = 8
   Insn 337: point = 1634, n_alt = 2
   Insn 336: point = 1636, n_alt = 1
   Insn 335: point = 1638, n_alt = 1
   Insn 334: point = 1640, n_alt = 7
   Insn 333: point = 1642, n_alt = 3
   Insn 1720: point = 1643, n_alt = -1
	Hard reg 22 is preferable by r1102 with profit 1
   Insn 332: point = 1645, n_alt = 1
   Insn 1719: point = 1646, n_alt = -1
	Hard reg 22 is preferable by r1102 with profit 1
	Hard reg 21 is preferable by r1102 with profit 1
   Insn 331: point = 1647, n_alt = 7
   Insn 330: point = 1649, n_alt = 3
  BB 58
   Insn 1691: point = 1650, n_alt = -1
  BB 9
   Insn 295: point = 1650, n_alt = -1
   Insn 294: point = 1650, n_alt = 0
   Insn 293: point = 1651, n_alt = 0
   Insn 292: point = 1652, n_alt = 0
  BB 10
   Insn 1667: point = 1653, n_alt = -1
   Insn 324: point = 1653, n_alt = 1
   Insn 323: point = 1653, n_alt = 8
   Insn 322: point = 1654, n_alt = 1
   Insn 321: point = 1656, n_alt = 7
   Insn 320: point = 1657, n_alt = 1
   Insn 319: point = 1659, n_alt = 7
   Insn 318: point = 1661, n_alt = 3
   Insn 317: point = 1662, n_alt = 3
   Insn 316: point = 1664, n_alt = 0
   Insn 315: point = 1666, n_alt = 0
   Insn 314: point = 1667, n_alt = 1
   Insn 313: point = 1669, n_alt = 2
   Insn 312: point = 1671, n_alt = 7
   Insn 311: point = 1673, n_alt = 3
   Insn 310: point = 1674, n_alt = 3
   Insn 309: point = 1676, n_alt = 0
   Insn 308: point = 1678, n_alt = 0
   Insn 307: point = 1679, n_alt = 7
   Insn 306: point = 1681, n_alt = 3
   Insn 305: point = 1682, n_alt = 3
   Insn 304: point = 1684, n_alt = 0
   Insn 303: point = 1686, n_alt = 0
   Insn 1718: point = 1687, n_alt = -1
	Hard reg 22 is preferable by r1101 with profit 1
   Insn 302: point = 1689, n_alt = 1
   Insn 1717: point = 1690, n_alt = -1
	Hard reg 22 is preferable by r1101 with profit 1
	Hard reg 21 is preferable by r1101 with profit 1
   Insn 301: point = 1691, n_alt = 7
   Insn 300: point = 1693, n_alt = 3
   Insn 299: point = 1694, n_alt = 3
   Insn 298: point = 1696, n_alt = 0
   Insn 297: point = 1698, n_alt = 0
  BB 8
   Insn 290: point = 1700, n_alt = 1
   Insn 289: point = 1700, n_alt = 0
   Insn 288: point = 1702, n_alt = 3
   Insn 287: point = 1703, n_alt = 8
   Insn 286: point = 1704, n_alt = 7
  BB 3
   Insn 161: point = 1705, n_alt = -1
   Insn 160: point = 1705, n_alt = 1
   Insn 159: point = 1706, n_alt = 7
  BB 2
   Insn 158: point = 1708, n_alt = -1
   Insn 157: point = 1708, n_alt = 1
   Insn 156: point = 1709, n_alt = 7
   Insn 155: point = 1710, n_alt = 7
   Insn 154: point = 1712, n_alt = 3
   Insn 153: point = 1713, n_alt = 8
   Insn 152: point = 1714, n_alt = 7
   Insn 151: point = 1716, n_alt = 3
   Insn 150: point = 1717, n_alt = 8
   Insn 149: point = 1718, n_alt = 7
   Insn 148: point = 1720, n_alt = 3
   Insn 144: point = 1721, n_alt = 2
   Insn 143: point = 1722, n_alt = 3
   Insn 142: point = 1723, n_alt = -1
   Insn 140: point = 1725, n_alt = 1
   Insn 138: point = 1727, n_alt = 0
   Insn 139: point = 1727, n_alt = 2
   Insn 137: point = 1728, n_alt = 3
   Insn 136: point = 1729, n_alt = 5
   Insn 135: point = 1730, n_alt = 0
   Insn 134: point = 1732, n_alt = 0
   Insn 133: point = 1734, n_alt = 3
   Insn 129: point = 1735, n_alt = 5
   Insn 128: point = 1736, n_alt = 5
   Insn 127: point = 1737, n_alt = -1
   Insn 125: point = 1739, n_alt = 1
   Insn 123: point = 1741, n_alt = 0
   Insn 124: point = 1741, n_alt = 2
   Insn 122: point = 1742, n_alt = 3
   Insn 121: point = 1743, n_alt = 5
   Insn 120: point = 1744, n_alt = 0
   Insn 119: point = 1746, n_alt = 0
   Insn 118: point = 1748, n_alt = 3
   Insn 114: point = 1749, n_alt = 5
   Insn 113: point = 1750, n_alt = 5
   Insn 112: point = 1751, n_alt = -1
   Insn 110: point = 1753, n_alt = 1
   Insn 108: point = 1755, n_alt = 0
   Insn 109: point = 1755, n_alt = 2
   Insn 107: point = 1756, n_alt = 3
   Insn 106: point = 1757, n_alt = 5
   Insn 105: point = 1758, n_alt = 0
   Insn 104: point = 1760, n_alt = 0
   Insn 103: point = 1762, n_alt = 3
   Insn 99: point = 1763, n_alt = 5
   Insn 98: point = 1764, n_alt = 5
   Insn 97: point = 1765, n_alt = -1
   Insn 95: point = 1767, n_alt = 1
   Insn 93: point = 1769, n_alt = 0
   Insn 94: point = 1769, n_alt = 2
   Insn 92: point = 1770, n_alt = 3
   Insn 91: point = 1771, n_alt = 5
   Insn 90: point = 1772, n_alt = 0
   Insn 89: point = 1774, n_alt = 0
   Insn 88: point = 1776, n_alt = 3
   Insn 84: point = 1777, n_alt = 5
   Insn 83: point = 1778, n_alt = 5
   Insn 82: point = 1779, n_alt = -1
   Insn 80: point = 1781, n_alt = 1
   Insn 78: point = 1783, n_alt = 0
   Insn 79: point = 1783, n_alt = 2
   Insn 77: point = 1784, n_alt = 3
   Insn 76: point = 1785, n_alt = 5
   Insn 75: point = 1786, n_alt = 0
   Insn 74: point = 1788, n_alt = 0
   Insn 73: point = 1790, n_alt = 3
   Insn 69: point = 1791, n_alt = 5
   Insn 68: point = 1792, n_alt = 5
   Insn 67: point = 1793, n_alt = -1
   Insn 65: point = 1795, n_alt = 1
   Insn 63: point = 1797, n_alt = 0
   Insn 64: point = 1797, n_alt = 2
   Insn 62: point = 1798, n_alt = 3
   Insn 61: point = 1799, n_alt = 5
   Insn 60: point = 1800, n_alt = 0
   Insn 59: point = 1802, n_alt = 0
   Insn 58: point = 1804, n_alt = 3
   Insn 54: point = 1805, n_alt = 5
   Insn 53: point = 1806, n_alt = 5
   Insn 52: point = 1807, n_alt = -1
   Insn 50: point = 1809, n_alt = 1
   Insn 48: point = 1811, n_alt = 0
   Insn 49: point = 1811, n_alt = 2
   Insn 47: point = 1812, n_alt = 3
   Insn 46: point = 1813, n_alt = 5
   Insn 45: point = 1814, n_alt = 0
   Insn 44: point = 1816, n_alt = 0
   Insn 43: point = 1818, n_alt = 3
   Insn 39: point = 1819, n_alt = 2
   Insn 38: point = 1820, n_alt = 3
   Insn 37: point = 1821, n_alt = -1
   Insn 35: point = 1823, n_alt = 1
   Insn 33: point = 1825, n_alt = 0
   Insn 34: point = 1825, n_alt = 2
   Insn 32: point = 1826, n_alt = 3
   Insn 31: point = 1827, n_alt = 5
   Insn 30: point = 1828, n_alt = 0
   Insn 29: point = 1830, n_alt = 0
   Insn 28: point = 1832, n_alt = 3
   Insn 24: point = 1833, n_alt = 2
   Insn 23: point = 1834, n_alt = 3
   Insn 22: point = 1835, n_alt = -1
   Insn 20: point = 1837, n_alt = 1
   Insn 18: point = 1839, n_alt = 0
   Insn 19: point = 1839, n_alt = 2
   Insn 17: point = 1840, n_alt = 3
   Insn 16: point = 1841, n_alt = 5
   Insn 15: point = 1842, n_alt = 0
   Insn 14: point = 1844, n_alt = 0
   Insn 13: point = 1846, n_alt = 3
   Insn 7: point = 1847, n_alt = 5
   Insn 6: point = 1847, n_alt = 5
   Insn 5: point = 1847, n_alt = 5
   Insn 4: point = 1847, n_alt = 5
   Insn 3: point = 1847, n_alt = 5
   Insn 2: point = 1847, n_alt = 5
 r87: [1843..1844]
 r88: [1834..1835]
 r89: [1833..1847]
 r91: [1829..1830]
 r92: [1820..1821]
 r93: [1819..1847]
 r95: [1815..1816]
 r96: [1806..1807]
 r97: [1805..1847]
 r99: [1801..1802]
 r100: [1792..1793]
 r101: [1791..1847]
 r103: [1787..1788]
 r104: [1778..1779]
 r105: [1777..1847]
 r107: [1773..1774]
 r108: [1764..1765]
 r109: [1763..1847]
 r111: [1759..1760]
 r112: [1750..1751]
 r113: [1749..1847]
 r115: [1745..1746]
 r116: [1736..1737]
 r117: [1735..1847]
 r119: [1731..1732]
 r120: [1722..1723]
 r121: [1721..1847]
 r123: [1705..1710]
 r124: [1203..1205]
 r125: [1200..1202]
 r126: [1181..1183]
 r127: [1181..1182]
 r128: [1179..1180]
 r129: [1177..1178]
 r130: [1166..1176]
 r131: [1172..1173]
 r132: [1170..1171]
 r133: [1168..1169]
 r134: [1166..1167]
 r135: [1164..1165]
 r136: [1162..1163]
 r137: [1103..1105]
 r138: [1150..1152]
 r139: [1147..1149]
 r140: [1147..1148]
 r141: [1145..1146]
 r142: [1143..1144]
 r143: [1140..1142]
 r144: [1130..1131]
 r145: [1125..1129]
 r146: [1125..1126]
 r147: [1123..1124]
 r148: [1120..1122]
 r149: [1091..1093]
 r150: [1072..1074]
 r151: [1070..1071]
 r152: [1067..1069]
 r153: [1067..1068]
 r154: [1065..1066]
 r155: [1063..1064]
 r156: [1060..1062]
 r157: [1058..1059]
 r158: [1695..1696]
 r159: [1692..1694]
 r160: [1683..1684]
 r161: [1680..1682]
 r162: [1670..1679]
 r163: [1675..1676]
 r164: [1672..1674]
 r165: [1670..1671]
 r166: [1668..1669]
 r167: [1658..1667]
 r168: [1663..1664]
 r169: [1660..1662]
 r170: [1658..1659]
 r171: [1655..1657]
 r172: [1639..1640]
 r173: [1637..1638]
 r174: [1635..1636]
 r175: [1617..1618]
 r176: [1615..1616]
 r177: [1613..1614]
 r178: [1611..1612]
 r179: [1604..1610]
 r180: [1606..1607]
 r181: [1602..1605]
 r182: [1599..1600]
 r183: [1597..1598]
 r184: [1594..1596]
 r185: [1574..1576]
 r186: [1574..1575]
 r187: [1572..1573]
 r188: [1569..1571]
 r190: [1551..1565]
 r191: [1561..1562]
 r192: [1559..1560]
 r193: [1557..1558]
 r194: [1553..1556]
 r195: [1551..1552]
 r196: [1535..1550]
 r197: [1539..1547]
 r198: [1543..1544]
 r199: [1541..1542]
 r200: [1539..1540]
 r201: [1537..1538]
 r202: [1535..1536]
 r203: [1533..1534]
 r204: [1529..1532]
 r205: [1527..1528]
 r206: [1519..1524]
 r207: [1517..1518]
 r208: [1511..1512]
 r209: [1439..1441]
 r210: [1499..1501]
 r211: [1496..1498]
 r212: [1496..1497]
 r213: [1494..1495]
 r214: [1492..1493]
 r215: [1489..1491]
 r216: [1465..1466]
 r217: [1461..1463]
 r218: [1461..1462]
 r219: [1459..1460]
 r220: [1372..1386]
 r221: [1382..1383]
 r222: [1380..1381]
 r223: [1378..1379]
 r224: [1374..1377]
 r225: [1372..1373]
 r226: [1356..1371]
 r227: [1360..1368]
 r228: [1364..1365]
 r229: [1362..1363]
 r230: [1360..1361]
 r231: [1358..1359]
 r232: [1356..1357]
 r233: [1333..1355]
 r234: [1335..1351]
 r235: [1346..1348]
 r236: [1343..1345]
 r237: [1343..1344]
 r238: [1339..1342]
 r239: [1337..1338]
 r240: [1335..1336]
 r241: [1333..1334]
 r242: [1311..1325]
 r243: [1321..1322]
 r244: [1319..1320]
 r245: [1317..1318]
 r246: [1315..1316]
 r247: [1313..1314]
 r248: [1311..1312]
 r249: [1297..1310]
 r250: [1299..1307]
 r251: [1303..1304]
 r252: [1301..1302]
 r253: [1299..1300]
 r254: [1297..1298]
 r255: [1290..1292]
 r256: [1288..1289]
 r257: [1281..1283]
 r258: [1275..1276]
 r259: [1424..1426]
 r260: [1420..1421]
 r261: [1417..1419]
 r262: [1414..1416]
 r263: [1408..1410]
 r264: [1408..1409]
 r265: [1406..1407]
 r266: [1246..1248]
 r267: [1231..1233]
 r269: [1222..1225]
 r270: [1219..1221]
 r271: [1219..1220]
 r272: [1215..1218]
 r273: [1213..1214]
 r274: [1210..1212]
 r275: [1208..1209]
 r276: [1044..1055]
 r277: [1048..1052]
 r278: [1048..1049]
 r279: [1046..1047]
 r280: [1044..1045]
 r281: [1042..1043]
 r282: [1035..1039]
 r283: [1035..1036]
 r284: [1033..1034]
 r285: [1030..1032]
 r286: [1027..1029]
 r287: [1017..1018]
 r288: [1015..1016]
 r289: [971..972]
 r290: [968..970]
 r291: [963..967]
 r292: [963..964]
 r293: [961..962]
 r294: [957..958]
 r295: [954..956]
 r296: [949..953]
 r297: [949..950]
 r298: [942..946]
 r299: [942..943]
 r300: [940..941]
 r301: [934..936]
 r302: [926..933]
 r303: [930..932]
 r304: [928..929]
 r305: [926..927]
 r306: [921..925]
 r307: [921..922]
 r308: [917..919]
 r309: [917..918]
 r310: [915..916]
 r311: [905..906]
 r312: [896..900]
 r313: [893..894]
 r314: [889..892]
 r315: [887..888]
 r316: [884..886]
 r317: [884..885]
 r318: [882..883]
 r319: [877..879]
 r320: [864..876]
 r321: [871..873]
 r322: [871..872]
 r323: [868..870]
 r324: [868..869]
 r325: [866..867]
 r326: [864..865]
 r327: [862..863]
 r328: [855..856]
 r329: [852..854]
 r330: [852..853]
 r331: [848..849]
 r332: [845..847]
 r333: [845..846]
 r334: [834..844]
 r335: [841..843]
 r336: [841..842]
 r337: [838..840]
 r338: [836..837]
 r339: [834..835]
 r340: [832..833]
 r341: [828..829]
 r342: [825..827]
 r343: [815..824]
 r344: [820..821]
 r345: [817..819]
 r346: [815..816]
 r347: [810..812]
 r348: [807..809]
 r349: [807..808]
 r350: [793..806]
 r351: [803..805]
 r352: [798..802]
 r353: [795..796]
 r354: [793..794]
 r355: [791..792]
 r356: [789..790]
 r357: [786..788]
 r358: [786..787]
 r359: [772..785]
 r360: [782..784]
 r361: [777..781]
 r362: [774..775]
 r363: [772..773]
 r364: [761..771]
 r365: [768..770]
 r366: [768..769]
 r367: [765..767]
 r368: [763..764]
 r369: [761..762]
 r370: [759..760]
 r371: [756..758]
 r372: [753..755]
 r373: [753..754]
 r374: [743..752]
 r375: [750..751]
 r376: [747..749]
 r377: [745..746]
 r378: [743..744]
 r379: [741..742]
 r380: [739..740]
 r381: [736..738]
 r382: [736..737]
 r383: [726..735]
 r384: [733..734]
 r385: [730..732]
 r386: [728..729]
 r387: [726..727]
 r388: [723..725]
 r389: [723..724]
 r390: [720..722]
 r391: [720..721]
 r392: [709..719]
 r393: [716..718]
 r394: [716..717]
 r395: [713..715]
 r396: [711..712]
 r397: [709..710]
 r398: [707..708]
 r399: [705..706]
 r400: [702..704]
 r401: [702..703]
 r402: [700..701]
 r403: [698..699]
 r404: [695..697]
 r405: [695..696]
 r406: [693..694]
 r407: [691..692]
 r408: [688..690]
 r409: [688..689]
 r410: [686..687]
 r411: [684..685]
 r412: [681..683]
 r413: [681..682]
 r414: [679..680]
 r415: [635..636]
 r416: [631..634]
 r417: [631..633]
 r418: [596..601]
 r419: [390..392]
 r420: [387..389]
 r421: [387..388]
 r422: [385..386]
 r423: [380..384]
 r424: [357..359]
 r425: [357..358]
 r426: [355..356]
 r427: [352..354]
 r428: [349..351]
 r429: [349..350]
 r430: [338..348]
 r431: [343..347]
 r432: [340..341]
 r433: [338..339]
 r434: [336..337]
 r435: [330..332]
 r436: [330..331]
 r437: [325..329]
 r438: [327..328]
 r439: [325..326]
 r440: [323..324]
 r441: [320..322]
 r442: [320..321]
 r443: [315..319]
 r444: [315..316]
 r445: [313..314]
 r446: [311..312]
 r447: [294..296]
 r448: [292..293]
 r449: [289..291]
 r450: [289..290]
 r451: [287..288]
 r452: [284..286]
 r453: [284..285]
 r454: [282..283]
 r455: [269..271]
 r457: [260..263]
 r458: [257..259]
 r459: [257..258]
 r460: [253..256]
 r461: [250..252]
 r462: [250..251]
 r463: [248..249]
 r464: [588..590]
 r465: [585..587]
 r466: [585..586]
 r467: [583..584]
 r468: [580..582]
 r469: [568..573]
 r470: [562..563]
 r471: [544..546]
 r472: [544..545]
 r473: [541..543]
 r474: [539..540]
 r475: [536..538]
 r476: [533..535]
 r477: [531..534]
 r478: [522..529]
 r479: [526..528]
 r480: [524..525]
 r481: [522..523]
 r482: [520..521]
 r483: [512..514]
 r484: [512..513]
 r485: [507..511]
 r486: [509..510]
 r487: [507..508]
 r488: [505..506]
 r489: [502..504]
 r490: [502..503]
 r491: [497..501]
 r492: [497..498]
 r493: [495..496]
 r494: [493..494]
 r495: [476..478]
 r496: [474..475]
 r497: [471..473]
 r498: [471..472]
 r499: [469..470]
 r500: [466..468]
 r501: [466..467]
 r502: [464..465]
 r503: [451..453]
 r505: [442..445]
 r506: [439..441]
 r507: [439..440]
 r508: [435..438]
 r509: [432..434]
 r510: [432..433]
 r511: [430..431]
 r512: [208..209]
 r513: [205..207]
 r514: [203..204]
 r515: [191..200]
 r516: [196..197]
 r517: [193..195]
 r518: [189..192]
 r519: [175..187]
 r520: [177..184]
 r521: [181..183]
 r522: [179..180]
 r523: [177..178]
 r524: [174..176]
 r525: [153..162]
 r526: [158..159]
 r527: [155..157]
 r528: [153..154]
 r529: [151..152]
 r530: [140..142]
 r531: [138..141]
 r533: [130..133]
 r534: [128..129]
 r535: [115..116]
 r536: [107..108]
 r537: [104..106]
 r538: [94..103]
 r539: [99..100]
 r540: [96..98]
 r541: [94..95]
 r542: [92..93]
 r543: [82..91]
 r544: [87..88]
 r545: [84..86]
 r546: [80..83]
 r547: [72..78]
 r548: [74..75]
 r549: [69..73]
 r550: [69..71]
 r551: [62..63]
 r552: [57..61]
 r553: [57..58]
 r554: [55..56]
 r555: [52..54]
 r556: [52..53]
 r557: [49..51]
 r558: [49..50]
 r559: [47..48]
 r560: [37..46]
 r561: [37..43]
 r562: [39..40]
 r563: [34..38]
 r564: [34..36]
 r565: [30..31]
 r566: [27..29]
 r567: [25..26]
 r568: [6..24]
 r569: [20..21]
 r570: [17..19]
 r571: [15..16]
 r572: [13..14]
 r573: [6..12]
 r574: [8..9]
 r575: [3..7]
 r576: [3..5]
 r577: [1459..1470] [1454..1456]
 r578: [1403..1413]
 r579: [915..939] [910..912]
 r580: [1513..1516]
 r581: [1277..1280]
 r582: [564..567]
 r583: [1838..1840]
 r584: [1836..1837]
 r588: [1824..1826]
 r589: [1822..1823]
 r593: [1810..1812]
 r594: [1808..1809]
 r598: [1796..1798]
 r599: [1794..1795]
 r603: [1782..1784]
 r604: [1780..1781]
 r608: [1768..1770]
 r609: [1766..1767]
 r613: [1754..1756]
 r614: [1752..1753]
 r618: [1740..1742]
 r619: [1738..1739]
 r623: [1726..1728]
 r624: [1724..1725]
 r628: [1650..1700]
 r629: [1650..1651]
 r630: [1689..1691]
 r631: [1668..1687]
 r632: [1645..1647]
 r633: [1635..1643]
 r634: [1628..1630]
 r635: [1615..1626]
 r636: [1623..1625]
 r637: [1613..1621]
 r638: [1587..1589]
 r639: [1572..1585]
 r640: [1566..1584]
 r641: [1581..1583]
 r643: [1506..1508]
 r644: [1494..1504]
 r645: [1482..1483]
 r646: [1457..1464]
 r647: [1401..1402]
 r648: [1387..1400]
 r649: [1397..1399]
 r651: [1390..1392]
 r653: [1329..1330]
 r654: [1326..1328]
 r655: [1226..1243]
 r656: [1238..1240]
 r658: [1193..1195]
 r659: [1179..1191]
 r660: [1188..1190]
 r661: [1170..1186]
 r662: [1157..1159]
 r663: [1145..1155]
 r664: [1134..1135]
 r665: [1132..1133]
 r666: [1086..1088]
 r667: [1070..1084]
 r668: [1079..1081]
 r669: [1065..1077]
 r670: [628..976]
 r671: [628..629]
 r672: [913..920]
 r673: [860..861]
 r674: [857..859]
 r675: [593..595]
 r676: [583..591]
 r677: [550..551]
 r678: [547..549]
 r679: [517..519]
 r680: [509..515]
 r681: [490..492]
 r682: [474..488]
 r683: [483..485]
 r684: [469..481]
 r685: [446..463]
 r686: [458..460]
 r688: [395..397]
 r689: [385..393]
 r690: [363..364]
 r691: [360..362]
 r692: [334..335]
 r693: [327..333]
 r694: [308..310]
 r695: [292..306]
 r696: [301..303]
 r697: [287..299]
 r698: [264..281]
 r699: [276..278]
 r701: [0..213]
 r702: [0..1]
 r703: [167..169]
 r705: [148..150]
 r707: [125..127]
 r708: [115..123]
 r709: [66..68]
 r710: [47..64]
 r711: [1845..1846]
 r712: [1841..1842]
 r713: [1838..1839]
 r714: [1831..1832]
 r715: [1827..1828]
 r716: [1824..1825]
 r717: [1817..1818]
 r718: [1813..1814]
 r719: [1810..1811]
 r720: [1803..1804]
 r721: [1799..1800]
 r722: [1796..1797]
 r723: [1789..1790]
 r724: [1785..1786]
 r725: [1782..1783]
 r726: [1775..1776]
 r727: [1771..1772]
 r728: [1768..1769]
 r729: [1761..1762]
 r730: [1757..1758]
 r731: [1754..1755]
 r732: [1747..1748]
 r733: [1743..1744]
 r734: [1740..1741]
 r735: [1733..1734]
 r736: [1729..1730]
 r737: [1726..1727]
 r738: [1719..1720]
 r739: [1717..1718]
 r740: [1715..1716]
 r741: [1713..1714]
 r742: [1711..1712]
 r743: [1708..1709]
 r744: [1705..1706]
 r745: [1206..1207]
 r746: [1203..1204]
 r747: [1198..1199]
 r748: [1200..1201]
 r749: [1196..1197]
 r750: [1184..1185]
 r751: [1174..1175]
 r752: [1116..1117]
 r753: [1114..1115]
 r754: [1112..1113]
 r755: [1109..1111]
 r756: [1108..1110]
 r757: [1106..1107]
 r758: [1101..1102]
 r759: [1103..1104]
 r760: [1096..1097]
 r761: [1098..1100]
 r762: [1098..1099]
 r763: [1160..1161]
 r764: [1153..1154]
 r765: [1150..1151]
 r766: [1138..1139]
 r767: [1140..1141]
 r768: [1136..1137]
 r769: [1127..1128]
 r770: [1118..1119]
 r771: [1120..1121]
 r772: [1094..1095]
 r773: [1089..1090]
 r774: [1091..1092]
 r775: [1082..1083]
 r776: [1075..1076]
 r777: [1072..1073]
 r778: [1060..1061]
 r779: [1703..1704]
 r780: [1701..1702]
 r781: [1697..1698]
 r782: [1692..1693]
 r783: [1685..1686]
 r784: [1680..1681]
 r785: [1677..1678]
 r786: [1672..1673]
 r787: [1665..1666]
 r788: [1660..1661]
 r789: [1653..1654]
 r790: [1655..1656]
 r791: [1648..1649]
 r792: [1641..1642]
 r793: [1633..1634]
 r794: [1631..1632]
 r795: [1619..1620]
 r796: [1608..1609]
 r797: [1592..1593]
 r798: [1594..1595]
 r799: [1590..1591]
 r800: [1577..1578]
 r801: [1563..1564]
 r802: [1548..1549]
 r803: [1545..1546]
 r804: [1525..1526]
 r805: [1522..1523]
 r806: [1519..1520]
 r807: [1452..1453]
 r808: [1450..1451]
 r809: [1448..1449]
 r810: [1445..1447]
 r811: [1444..1446]
 r812: [1442..1443]
 r813: [1437..1438]
 r814: [1439..1440]
 r815: [1432..1433]
 r816: [1434..1436]
 r817: [1434..1435]
 r818: [1509..1510]
 r819: [1502..1503]
 r820: [1499..1500]
 r821: [1487..1488]
 r822: [1489..1490]
 r823: [1484..1486]
 r824: [1484..1485]
 r825: [1480..1481]
 r826: [1471..1472]
 r827: [1473..1479]
 r828: [1474..1478]
 r829: [1473..1477]
 r830: [1473..1476]
 r831: [1467..1469]
 r832: [1467..1468]
 r833: [1427..1428]
 r834: [1429..1431]
 r835: [1429..1430]
 r836: [1393..1394]
 r837: [1384..1385]
 r838: [1369..1370]
 r839: [1366..1367]
 r840: [1352..1354]
 r841: [1352..1353]
 r842: [1349..1350]
 r843: [1346..1347]
 r844: [1331..1332]
 r845: [1326..1327]
 r846: [1323..1324]
 r847: [1308..1309]
 r848: [1305..1306]
 r849: [1295..1296]
 r850: [1293..1294]
 r851: [1290..1291]
 r852: [1286..1287]
 r853: [1284..1285]
 r854: [1281..1282]
 r855: [1273..1274]
 r856: [1271..1272]
 r857: [1269..1270]
 r858: [1266..1268]
 r859: [1265..1267]
 r860: [1263..1264]
 r861: [1422..1423]
 r862: [1424..1425]
 r863: [1417..1418]
 r864: [1414..1415]
 r865: [1411..1412]
 r866: [1261..1262]
 r867: [1259..1260]
 r868: [1257..1258]
 r869: [1254..1256]
 r870: [1253..1255]
 r871: [1251..1252]
 r872: [1249..1250]
 r873: [1244..1245]
 r874: [1246..1247]
 r875: [1241..1242]
 r876: [1234..1235]
 r877: [1229..1232]
 r878: [1210..1211]
 r879: [1056..1057]
 r880: [1053..1054]
 r881: [1050..1051]
 r882: [1040..1041]
 r883: [1037..1038]
 r884: [1030..1031]
 r885: [1027..1028]
 r886: [1025..1026]
 r887: [1023..1024]
 r888: [1021..1022]
 r889: [1019..1020]
 r890: [1012..1014]
 r891: [1011..1013]
 r892: [1008..1010]
 r893: [1007..1009]
 r894: [1004..1006]
 r895: [1003..1005]
 r896: [1001..1002]
 r897: [999..1000]
 r898: [997..998]
 r899: [995..996]
 r900: [993..994]
 r901: [991..992]
 r902: [989..990]
 r903: [987..988]
 r904: [985..986]
 r905: [983..984]
 r906: [981..982]
 r907: [979..980]
 r908: [977..978]
 r909: [973..974]
 r910: [968..969]
 r911: [965..966]
 r912: [959..960]
 r913: [954..955]
 r914: [951..952]
 r915: [947..948]
 r916: [944..945]
 r917: [937..938]
 r918: [934..935]
 r919: [930..931]
 r920: [923..924]
 r921: [907..909]
 r922: [907..908]
 r923: [903..904]
 r924: [901..902]
 r925: [898..899]
 r926: [890..891]
 r927: [880..881]
 r928: [877..878]
 r929: [874..875]
 r930: [857..858]
 r931: [850..851]
 r932: [838..839]
 r933: [830..831]
 r934: [825..826]
 r935: [822..823]
 r936: [817..818]
 r937: [813..814]
 r938: [810..811]
 r939: [803..804]
 r940: [800..801]
 r941: [782..783]
 r942: [779..780]
 r943: [765..766]
 r944: [756..757]
 r945: [747..748]
 r946: [730..731]
 r947: [713..714]
 r948: [677..678]
 r949: [675..676]
 r950: [673..674]
 r951: [670..672]
 r952: [669..671]
 r953: [666..668]
 r954: [665..667]
 r955: [662..664]
 r956: [661..663]
 r957: [658..660]
 r958: [657..659]
 r959: [654..656]
 r960: [653..655]
 r961: [650..652]
 r962: [649..651]
 r963: [646..648]
 r964: [645..647]
 r965: [642..644]
 r966: [641..643]
 r967: [639..640]
 r968: [637..638]
 r969: [631..632]
 r970: [626..627]
 r971: [624..625]
 r972: [622..623]
 r973: [619..621]
 r974: [618..620]
 r975: [615..617]
 r976: [614..616]
 r977: [611..613]
 r978: [610..612]
 r979: [607..609]
 r980: [606..608]
 r981: [604..605]
 r982: [602..603]
 r983: [599..600]
 r984: [596..597]
 r985: [390..391]
 r986: [377..378]
 r987: [382..383]
 r988: [375..376]
 r989: [373..374]
 r990: [371..372]
 r991: [369..370]
 r992: [367..368]
 r993: [365..366]
 r994: [360..361]
 r995: [352..353]
 r996: [345..346]
 r997: [317..318]
 r998: [304..305]
 r999: [297..298]
 r1000: [294..295]
 r1001: [279..280]
 r1002: [272..273]
 r1003: [267..270]
 r1004: [246..247]
 r1005: [244..245]
 r1006: [242..243]
 r1007: [239..241]
 r1008: [238..240]
 r1009: [235..237]
 r1010: [234..236]
 r1011: [231..233]
 r1012: [230..232]
 r1013: [227..229]
 r1014: [226..228]
 r1015: [223..225]
 r1016: [222..224]
 r1017: [219..221]
 r1018: [218..220]
 r1019: [216..217]
 r1020: [588..589]
 r1021: [578..579]
 r1022: [580..581]
 r1023: [576..577]
 r1024: [574..575]
 r1025: [571..572]
 r1026: [568..569]
 r1027: [560..561]
 r1028: [558..559]
 r1029: [556..557]
 r1030: [554..555]
 r1031: [552..553]
 r1032: [547..548]
 r1033: [541..542]
 r1034: [536..537]
 r1035: [526..527]
 r1036: [499..500]
 r1037: [486..487]
 r1038: [479..480]
 r1039: [476..477]
 r1040: [461..462]
 r1041: [454..455]
 r1042: [449..452]
 r1043: [428..429]
 r1044: [426..427]
 r1045: [424..425]
 r1046: [421..423]
 r1047: [420..422]
 r1048: [417..419]
 r1049: [416..418]
 r1050: [413..415]
 r1051: [412..414]
 r1052: [409..411]
 r1053: [408..410]
 r1054: [405..407]
 r1055: [404..406]
 r1056: [401..403]
 r1057: [400..402]
 r1058: [398..399]
 r1059: [214..215]
 r1060: [210..211]
 r1061: [205..206]
 r1062: [201..202]
 r1063: [198..199]
 r1064: [193..194]
 r1065: [185..186]
 r1066: [181..182]
 r1067: [172..173]
 r1068: [170..171]
 r1069: [163..164]
 r1070: [160..161]
 r1071: [155..156]
 r1072: [143..145]
 r1073: [143..144]
 r1074: [134..135]
 r1075: [113..114]
 r1076: [111..112]
 r1077: [109..110]
 r1078: [104..105]
 r1079: [101..102]
 r1080: [96..97]
 r1081: [89..90]
 r1082: [84..85]
 r1083: [76..77]
 r1084: [69..70]
 r1085: [59..60]
 r1086: [44..45]
 r1087: [41..42]
 r1088: [34..35]
 r1089: [32..33]
 r1090: [27..28]
 r1091: [22..23]
 r1092: [17..18]
 r1093: [10..11]
 r1094: [3..4]
 r1096: [1192..1194]
 r1097: [1187..1189]
 r1098: [1156..1158]
 r1099: [1085..1087]
 r1100: [1078..1080]
 r1101: [1688..1690]
 r1102: [1644..1646]
 r1103: [1627..1629]
 r1104: [1622..1624]
 r1105: [1601..1603]
 r1106: [1586..1588]
 r1107: [1580..1582]
 r1108: [1568..1570]
 r1111: [1505..1507]
 r1112: [1472..1475]
 r1113: [1396..1398]
 r1114: [1389..1391]
 r1117: [1237..1239]
 r1118: [1228..1230]
 r1121: [895..897]
 r1122: [797..799]
 r1123: [776..778]
 r1124: [394..396]
 r1125: [379..381]
 r1126: [342..344]
 r1127: [307..309]
 r1128: [300..302]
 r1129: [275..277]
 r1130: [266..268]
 r1133: [592..594]
 r1134: [530..532]
 r1135: [516..518]
 r1136: [489..491]
 r1137: [482..484]
 r1138: [457..459]
 r1139: [448..450]
 r1142: [188..190]
 r1143: [166..168]
 r1144: [147..149]
 r1145: [137..139]
 r1147: [124..126]
 r1148: [117..121]
 r1150: [79..81]
 r1151: [65..67]
 r1165: [118..119]
 r1166: [130..131]
 r1167: [435..436]
 r1168: [442..443]
 r1169: [253..254]
 r1170: [260..261]
 r1171: [1215..1216]
 r1172: [1222..1223]
 r1173: [1339..1340]
 r1174: [1374..1375]
 r1175: [1529..1530]
 r1176: [1553..1554]
 r1177: [1531..1567]
 r1178: [1555..1579]
 r1179: [1341..1388]
 r1180: [1376..1395]
 r1181: [1224..1227]
 r1182: [1217..1236]
 r1183: [262..265]
 r1184: [255..274]
 r1185: [444..447]
 r1186: [437..456]
 r1187: [132..136]
 r1188: [120..146]
 r1189: [122..165]
Compressing live ranges: from 1848 to 1430 - 77%
Ranges after the compression:
 r87: [1426..1427]
 r88: [1418..1419]
 r89: [1418..1429]
 r91: [1414..1415]
 r92: [1406..1407]
 r93: [1406..1429]
 r95: [1402..1403]
 r96: [1394..1395]
 r97: [1394..1429]
 r99: [1390..1391]
 r100: [1382..1383]
 r101: [1382..1429]
 r103: [1378..1379]
 r104: [1370..1371]
 r105: [1370..1429]
 r107: [1366..1367]
 r108: [1358..1359]
 r109: [1358..1429]
 r111: [1354..1355]
 r112: [1346..1347]
 r113: [1346..1429]
 r115: [1342..1343]
 r116: [1334..1335]
 r117: [1334..1429]
 r119: [1330..1331]
 r120: [1322..1323]
 r121: [1322..1429]
 r123: [1308..1311]
 r124: [916..917]
 r125: [914..915]
 r126: [902..903]
 r127: [902..903]
 r128: [900..901]
 r129: [898..899]
 r130: [888..897]
 r131: [894..895]
 r132: [892..893]
 r133: [890..891]
 r134: [888..889]
 r135: [886..887]
 r136: [884..885]
 r137: [836..837]
 r138: [876..877]
 r139: [874..875]
 r140: [874..875]
 r141: [872..873]
 r142: [870..871]
 r143: [868..869]
 r144: [858..859]
 r145: [854..857]
 r146: [854..855]
 r147: [852..853]
 r148: [850..851]
 r149: [826..827]
 r150: [814..815]
 r151: [812..813]
 r152: [810..811]
 r153: [810..811]
 r154: [808..809]
 r155: [806..807]
 r156: [804..805]
 r157: [802..803]
 r158: [1300..1301]
 r159: [1298..1299]
 r160: [1292..1293]
 r161: [1290..1291]
 r162: [1282..1289]
 r163: [1286..1287]
 r164: [1284..1285]
 r165: [1282..1283]
 r166: [1280..1281]
 r167: [1272..1279]
 r168: [1276..1277]
 r169: [1274..1275]
 r170: [1272..1273]
 r171: [1270..1271]
 r172: [1258..1259]
 r173: [1256..1257]
 r174: [1254..1255]
 r175: [1242..1243]
 r176: [1240..1241]
 r177: [1238..1239]
 r178: [1236..1237]
 r179: [1230..1235]
 r180: [1232..1233]
 r181: [1228..1231]
 r182: [1226..1227]
 r183: [1224..1225]
 r184: [1222..1223]
 r185: [1210..1211]
 r186: [1210..1211]
 r187: [1208..1209]
 r188: [1206..1207]
 r190: [1190..1203]
 r191: [1200..1201]
 r192: [1198..1199]
 r193: [1196..1197]
 r194: [1192..1195]
 r195: [1190..1191]
 r196: [1176..1189]
 r197: [1180..1187]
 r198: [1184..1185]
 r199: [1182..1183]
 r200: [1180..1181]
 r201: [1178..1179]
 r202: [1176..1177]
 r203: [1174..1175]
 r204: [1170..1173]
 r205: [1168..1169]
 r206: [1162..1165]
 r207: [1160..1161]
 r208: [1156..1157]
 r209: [1106..1107]
 r210: [1148..1149]
 r211: [1146..1147]
 r212: [1146..1147]
 r213: [1144..1145]
 r214: [1142..1143]
 r215: [1140..1141]
 r216: [1124..1125]
 r217: [1122..1123]
 r218: [1122..1123]
 r219: [1120..1121]
 r220: [1056..1069]
 r221: [1066..1067]
 r222: [1064..1065]
 r223: [1062..1063]
 r224: [1058..1061]
 r225: [1056..1057]
 r226: [1042..1055]
 r227: [1046..1053]
 r228: [1050..1051]
 r229: [1048..1049]
 r230: [1046..1047]
 r231: [1044..1045]
 r232: [1042..1043]
 r233: [1024..1041]
 r234: [1026..1039]
 r235: [1036..1037]
 r236: [1034..1035]
 r237: [1034..1035]
 r238: [1030..1033]
 r239: [1028..1029]
 r240: [1026..1027]
 r241: [1024..1025]
 r242: [1004..1017]
 r243: [1014..1015]
 r244: [1012..1013]
 r245: [1010..1011]
 r246: [1008..1009]
 r247: [1006..1007]
 r248: [1004..1005]
 r249: [992..1003]
 r250: [994..1001]
 r251: [998..999]
 r252: [996..997]
 r253: [994..995]
 r254: [992..993]
 r255: [986..987]
 r256: [984..985]
 r257: [978..979]
 r258: [974..975]
 r259: [1094..1095]
 r260: [1090..1091]
 r261: [1088..1089]
 r262: [1086..1087]
 r263: [1082..1083]
 r264: [1082..1083]
 r265: [1080..1081]
 r266: [950..951]
 r267: [940..941]
 r269: [932..935]
 r270: [930..931]
 r271: [930..931]
 r272: [926..929]
 r273: [924..925]
 r274: [922..923]
 r275: [920..921]
 r276: [790..799]
 r277: [794..797]
 r278: [794..795]
 r279: [792..793]
 r280: [790..791]
 r281: [788..789]
 r282: [782..785]
 r283: [782..783]
 r284: [780..781]
 r285: [778..779]
 r286: [776..777]
 r287: [766..767]
 r288: [764..765]
 r289: [728..729]
 r290: [726..727]
 r291: [722..725]
 r292: [722..723]
 r293: [720..721]
 r294: [716..717]
 r295: [714..715]
 r296: [710..713]
 r297: [710..711]
 r298: [704..707]
 r299: [704..705]
 r300: [702..703]
 r301: [698..699]
 r302: [692..697]
 r303: [696..697]
 r304: [694..695]
 r305: [692..693]
 r306: [688..691]
 r307: [688..689]
 r308: [686..687]
 r309: [686..687]
 r310: [684..685]
 r311: [678..679]
 r312: [670..673]
 r313: [668..669]
 r314: [666..667]
 r315: [664..665]
 r316: [662..663]
 r317: [662..663]
 r318: [660..661]
 r319: [656..657]
 r320: [646..655]
 r321: [652..653]
 r322: [652..653]
 r323: [650..651]
 r324: [650..651]
 r325: [648..649]
 r326: [646..647]
 r327: [644..645]
 r328: [638..639]
 r329: [636..637]
 r330: [636..637]
 r331: [632..633]
 r332: [630..631]
 r333: [630..631]
 r334: [622..629]
 r335: [628..629]
 r336: [628..629]
 r337: [626..627]
 r338: [624..625]
 r339: [622..623]
 r340: [620..621]
 r341: [616..617]
 r342: [614..615]
 r343: [606..613]
 r344: [610..611]
 r345: [608..609]
 r346: [606..607]
 r347: [602..603]
 r348: [600..601]
 r349: [600..601]
 r350: [590..599]
 r351: [598..599]
 r352: [594..597]
 r353: [592..593]
 r354: [590..591]
 r355: [588..589]
 r356: [586..587]
 r357: [584..585]
 r358: [584..585]
 r359: [574..583]
 r360: [582..583]
 r361: [578..581]
 r362: [576..577]
 r363: [574..575]
 r364: [566..573]
 r365: [572..573]
 r366: [572..573]
 r367: [570..571]
 r368: [568..569]
 r369: [566..567]
 r370: [564..565]
 r371: [562..563]
 r372: [560..561]
 r373: [560..561]
 r374: [552..559]
 r375: [558..559]
 r376: [556..557]
 r377: [554..555]
 r378: [552..553]
 r379: [550..551]
 r380: [548..549]
 r381: [546..547]
 r382: [546..547]
 r383: [538..545]
 r384: [544..545]
 r385: [542..543]
 r386: [540..541]
 r387: [538..539]
 r388: [536..537]
 r389: [536..537]
 r390: [534..535]
 r391: [534..535]
 r392: [526..533]
 r393: [532..533]
 r394: [532..533]
 r395: [530..531]
 r396: [528..529]
 r397: [526..527]
 r398: [524..525]
 r399: [522..523]
 r400: [520..521]
 r401: [520..521]
 r402: [518..519]
 r403: [516..517]
 r404: [514..515]
 r405: [514..515]
 r406: [512..513]
 r407: [510..511]
 r408: [508..509]
 r409: [508..509]
 r410: [506..507]
 r411: [504..505]
 r412: [502..503]
 r413: [502..503]
 r414: [500..501]
 r415: [472..473]
 r416: [470..471]
 r417: [470..471]
 r418: [446..449]
 r419: [298..299]
 r420: [296..297]
 r421: [296..297]
 r422: [294..295]
 r423: [290..293]
 r424: [270..271]
 r425: [270..271]
 r426: [268..269]
 r427: [266..267]
 r428: [264..265]
 r429: [264..265]
 r430: [256..263]
 r431: [260..263]
 r432: [258..259]
 r433: [256..257]
 r434: [254..255]
 r435: [250..251]
 r436: [250..251]
 r437: [246..249]
 r438: [248..249]
 r439: [246..247]
 r440: [244..245]
 r441: [242..243]
 r442: [242..243]
 r443: [238..241]
 r444: [238..239]
 r445: [236..237]
 r446: [234..235]
 r447: [224..225]
 r448: [222..223]
 r449: [220..221]
 r450: [220..221]
 r451: [218..219]
 r452: [216..217]
 r453: [216..217]
 r454: [214..215]
 r455: [206..207]
 r457: [198..201]
 r458: [196..197]
 r459: [196..197]
 r460: [192..195]
 r461: [190..191]
 r462: [190..191]
 r463: [188..189]
 r464: [442..443]
 r465: [440..441]
 r466: [440..441]
 r467: [438..439]
 r468: [436..437]
 r469: [426..429]
 r470: [422..423]
 r471: [406..407]
 r472: [406..407]
 r473: [404..405]
 r474: [402..403]
 r475: [400..401]
 r476: [398..399]
 r477: [396..399]
 r478: [390..395]
 r479: [394..395]
 r480: [392..393]
 r481: [390..391]
 r482: [388..389]
 r483: [384..385]
 r484: [384..385]
 r485: [380..383]
 r486: [382..383]
 r487: [380..381]
 r488: [378..379]
 r489: [376..377]
 r490: [376..377]
 r491: [372..375]
 r492: [372..373]
 r493: [370..371]
 r494: [368..369]
 r495: [358..359]
 r496: [356..357]
 r497: [354..355]
 r498: [354..355]
 r499: [352..353]
 r500: [350..351]
 r501: [350..351]
 r502: [348..349]
 r503: [340..341]
 r505: [332..335]
 r506: [330..331]
 r507: [330..331]
 r508: [326..329]
 r509: [324..325]
 r510: [324..325]
 r511: [322..323]
 r512: [162..163]
 r513: [160..161]
 r514: [158..159]
 r515: [148..155]
 r516: [152..153]
 r517: [150..151]
 r518: [146..149]
 r519: [136..145]
 r520: [138..143]
 r521: [142..143]
 r522: [140..141]
 r523: [138..139]
 r524: [136..137]
 r525: [120..127]
 r526: [124..125]
 r527: [122..123]
 r528: [120..121]
 r529: [118..119]
 r530: [112..113]
 r531: [110..113]
 r533: [104..107]
 r534: [102..103]
 r535: [92..93]
 r536: [84..85]
 r537: [82..83]
 r538: [74..81]
 r539: [78..79]
 r540: [76..77]
 r541: [74..75]
 r542: [72..73]
 r543: [64..71]
 r544: [68..69]
 r545: [66..67]
 r546: [62..65]
 r547: [56..61]
 r548: [58..59]
 r549: [54..57]
 r550: [54..55]
 r551: [50..51]
 r552: [46..49]
 r553: [46..47]
 r554: [44..45]
 r555: [42..43]
 r556: [42..43]
 r557: [40..41]
 r558: [40..41]
 r559: [38..39]
 r560: [30..37]
 r561: [30..35]
 r562: [32..33]
 r563: [28..31]
 r564: [28..29]
 r565: [24..25]
 r566: [22..23]
 r567: [20..21]
 r568: [4..19]
 r569: [16..17]
 r570: [14..15]
 r571: [12..13]
 r572: [10..11]
 r573: [4..9]
 r574: [6..7]
 r575: [2..5]
 r576: [2..3]
 r577: [1118..1127]
 r578: [1080..1085]
 r579: [682..701]
 r580: [1158..1159]
 r581: [976..977]
 r582: [424..425]
 r583: [1422..1423]
 r584: [1420..1421]
 r588: [1410..1411]
 r589: [1408..1409]
 r593: [1398..1399]
 r594: [1396..1397]
 r598: [1386..1387]
 r599: [1384..1385]
 r603: [1374..1375]
 r604: [1372..1373]
 r608: [1362..1363]
 r609: [1360..1361]
 r613: [1350..1351]
 r614: [1348..1349]
 r618: [1338..1339]
 r619: [1336..1337]
 r623: [1326..1327]
 r624: [1324..1325]
 r628: [1266..1303]
 r629: [1266..1267]
 r630: [1296..1297]
 r631: [1280..1295]
 r632: [1262..1263]
 r633: [1254..1261]
 r634: [1248..1249]
 r635: [1240..1247]
 r636: [1246..1247]
 r637: [1238..1245]
 r638: [1216..1217]
 r639: [1208..1215]
 r640: [1204..1215]
 r641: [1214..1215]
 r643: [1152..1153]
 r644: [1144..1151]
 r645: [1134..1135]
 r646: [1120..1123]
 r647: [1078..1079]
 r648: [1070..1077]
 r649: [1076..1077]
 r651: [1072..1073]
 r653: [1020..1021]
 r654: [1018..1019]
 r655: [936..947]
 r656: [944..945]
 r658: [908..909]
 r659: [900..907]
 r660: [906..907]
 r661: [892..905]
 r662: [880..881]
 r663: [872..879]
 r664: [862..863]
 r665: [860..861]
 r666: [822..823]
 r667: [812..821]
 r668: [818..819]
 r669: [808..817]
 r670: [468..731]
 r671: [468..469]
 r672: [684..687]
 r673: [642..643]
 r674: [640..641]
 r675: [444..445]
 r676: [438..443]
 r677: [410..411]
 r678: [408..409]
 r679: [386..387]
 r680: [382..385]
 r681: [366..367]
 r682: [356..365]
 r683: [362..363]
 r684: [352..361]
 r685: [336..347]
 r686: [344..345]
 r688: [300..301]
 r689: [294..299]
 r690: [274..275]
 r691: [272..273]
 r692: [252..253]
 r693: [248..251]
 r694: [232..233]
 r695: [222..231]
 r696: [228..229]
 r697: [218..227]
 r698: [202..213]
 r699: [210..211]
 r701: [0..165]
 r702: [0..1]
 r703: [130..131]
 r705: [116..117]
 r707: [100..101]
 r708: [92..99]
 r709: [52..53]
 r710: [38..51]
 r711: [1428..1429]
 r712: [1424..1425]
 r713: [1422..1423]
 r714: [1416..1417]
 r715: [1412..1413]
 r716: [1410..1411]
 r717: [1404..1405]
 r718: [1400..1401]
 r719: [1398..1399]
 r720: [1392..1393]
 r721: [1388..1389]
 r722: [1386..1387]
 r723: [1380..1381]
 r724: [1376..1377]
 r725: [1374..1375]
 r726: [1368..1369]
 r727: [1364..1365]
 r728: [1362..1363]
 r729: [1356..1357]
 r730: [1352..1353]
 r731: [1350..1351]
 r732: [1344..1345]
 r733: [1340..1341]
 r734: [1338..1339]
 r735: [1332..1333]
 r736: [1328..1329]
 r737: [1326..1327]
 r738: [1320..1321]
 r739: [1318..1319]
 r740: [1316..1317]
 r741: [1314..1315]
 r742: [1312..1313]
 r743: [1310..1311]
 r744: [1308..1309]
 r745: [918..919]
 r746: [916..917]
 r747: [912..913]
 r748: [914..915]
 r749: [910..911]
 r750: [904..905]
 r751: [896..897]
 r752: [846..847]
 r753: [844..845]
 r754: [842..843]
 r755: [840..841]
 r756: [840..841]
 r757: [838..839]
 r758: [834..835]
 r759: [836..837]
 r760: [830..831]
 r761: [832..833]
 r762: [832..833]
 r763: [882..883]
 r764: [878..879]
 r765: [876..877]
 r766: [866..867]
 r767: [868..869]
 r768: [864..865]
 r769: [856..857]
 r770: [848..849]
 r771: [850..851]
 r772: [828..829]
 r773: [824..825]
 r774: [826..827]
 r775: [820..821]
 r776: [816..817]
 r777: [814..815]
 r778: [804..805]
 r779: [1306..1307]
 r780: [1304..1305]
 r781: [1302..1303]
 r782: [1298..1299]
 r783: [1294..1295]
 r784: [1290..1291]
 r785: [1288..1289]
 r786: [1284..1285]
 r787: [1278..1279]
 r788: [1274..1275]
 r789: [1268..1269]
 r790: [1270..1271]
 r791: [1264..1265]
 r792: [1260..1261]
 r793: [1252..1253]
 r794: [1250..1251]
 r795: [1244..1245]
 r796: [1234..1235]
 r797: [1220..1221]
 r798: [1222..1223]
 r799: [1218..1219]
 r800: [1212..1213]
 r801: [1202..1203]
 r802: [1188..1189]
 r803: [1186..1187]
 r804: [1166..1167]
 r805: [1164..1165]
 r806: [1162..1163]
 r807: [1116..1117]
 r808: [1114..1115]
 r809: [1112..1113]
 r810: [1110..1111]
 r811: [1110..1111]
 r812: [1108..1109]
 r813: [1104..1105]
 r814: [1106..1107]
 r815: [1100..1101]
 r816: [1102..1103]
 r817: [1102..1103]
 r818: [1154..1155]
 r819: [1150..1151]
 r820: [1148..1149]
 r821: [1138..1139]
 r822: [1140..1141]
 r823: [1136..1137]
 r824: [1136..1137]
 r825: [1132..1133]
 r826: [1128..1129]
 r827: [1130..1131]
 r828: [1130..1131]
 r829: [1130..1131]
 r830: [1130..1131]
 r831: [1126..1127]
 r832: [1126..1127]
 r833: [1096..1097]
 r834: [1098..1099]
 r835: [1098..1099]
 r836: [1074..1075]
 r837: [1068..1069]
 r838: [1054..1055]
 r839: [1052..1053]
 r840: [1040..1041]
 r841: [1040..1041]
 r842: [1038..1039]
 r843: [1036..1037]
 r844: [1022..1023]
 r845: [1018..1019]
 r846: [1016..1017]
 r847: [1002..1003]
 r848: [1000..1001]
 r849: [990..991]
 r850: [988..989]
 r851: [986..987]
 r852: [982..983]
 r853: [980..981]
 r854: [978..979]
 r855: [972..973]
 r856: [970..971]
 r857: [968..969]
 r858: [966..967]
 r859: [966..967]
 r860: [964..965]
 r861: [1092..1093]
 r862: [1094..1095]
 r863: [1088..1089]
 r864: [1086..1087]
 r865: [1084..1085]
 r866: [962..963]
 r867: [960..961]
 r868: [958..959]
 r869: [956..957]
 r870: [956..957]
 r871: [954..955]
 r872: [952..953]
 r873: [948..949]
 r874: [950..951]
 r875: [946..947]
 r876: [942..943]
 r877: [938..941]
 r878: [922..923]
 r879: [800..801]
 r880: [798..799]
 r881: [796..797]
 r882: [786..787]
 r883: [784..785]
 r884: [778..779]
 r885: [776..777]
 r886: [774..775]
 r887: [772..773]
 r888: [770..771]
 r889: [768..769]
 r890: [762..763]
 r891: [762..763]
 r892: [760..761]
 r893: [760..761]
 r894: [758..759]
 r895: [758..759]
 r896: [756..757]
 r897: [754..755]
 r898: [752..753]
 r899: [750..751]
 r900: [748..749]
 r901: [746..747]
 r902: [744..745]
 r903: [742..743]
 r904: [740..741]
 r905: [738..739]
 r906: [736..737]
 r907: [734..735]
 r908: [732..733]
 r909: [730..731]
 r910: [726..727]
 r911: [724..725]
 r912: [718..719]
 r913: [714..715]
 r914: [712..713]
 r915: [708..709]
 r916: [706..707]
 r917: [700..701]
 r918: [698..699]
 r919: [696..697]
 r920: [690..691]
 r921: [680..681]
 r922: [680..681]
 r923: [676..677]
 r924: [674..675]
 r925: [672..673]
 r926: [666..667]
 r927: [658..659]
 r928: [656..657]
 r929: [654..655]
 r930: [640..641]
 r931: [634..635]
 r932: [626..627]
 r933: [618..619]
 r934: [614..615]
 r935: [612..613]
 r936: [608..609]
 r937: [604..605]
 r938: [602..603]
 r939: [598..599]
 r940: [596..597]
 r941: [582..583]
 r942: [580..581]
 r943: [570..571]
 r944: [562..563]
 r945: [556..557]
 r946: [542..543]
 r947: [530..531]
 r948: [498..499]
 r949: [496..497]
 r950: [494..495]
 r951: [492..493]
 r952: [492..493]
 r953: [490..491]
 r954: [490..491]
 r955: [488..489]
 r956: [488..489]
 r957: [486..487]
 r958: [486..487]
 r959: [484..485]
 r960: [484..485]
 r961: [482..483]
 r962: [482..483]
 r963: [480..481]
 r964: [480..481]
 r965: [478..479]
 r966: [478..479]
 r967: [476..477]
 r968: [474..475]
 r969: [470..471]
 r970: [466..467]
 r971: [464..465]
 r972: [462..463]
 r973: [460..461]
 r974: [460..461]
 r975: [458..459]
 r976: [458..459]
 r977: [456..457]
 r978: [456..457]
 r979: [454..455]
 r980: [454..455]
 r981: [452..453]
 r982: [450..451]
 r983: [448..449]
 r984: [446..447]
 r985: [298..299]
 r986: [288..289]
 r987: [292..293]
 r988: [286..287]
 r989: [284..285]
 r990: [282..283]
 r991: [280..281]
 r992: [278..279]
 r993: [276..277]
 r994: [272..273]
 r995: [266..267]
 r996: [262..263]
 r997: [240..241]
 r998: [230..231]
 r999: [226..227]
 r1000: [224..225]
 r1001: [212..213]
 r1002: [208..209]
 r1003: [204..207]
 r1004: [186..187]
 r1005: [184..185]
 r1006: [182..183]
 r1007: [180..181]
 r1008: [180..181]
 r1009: [178..179]
 r1010: [178..179]
 r1011: [176..177]
 r1012: [176..177]
 r1013: [174..175]
 r1014: [174..175]
 r1015: [172..173]
 r1016: [172..173]
 r1017: [170..171]
 r1018: [170..171]
 r1019: [168..169]
 r1020: [442..443]
 r1021: [434..435]
 r1022: [436..437]
 r1023: [432..433]
 r1024: [430..431]
 r1025: [428..429]
 r1026: [426..427]
 r1027: [420..421]
 r1028: [418..419]
 r1029: [416..417]
 r1030: [414..415]
 r1031: [412..413]
 r1032: [408..409]
 r1033: [404..405]
 r1034: [400..401]
 r1035: [394..395]
 r1036: [374..375]
 r1037: [364..365]
 r1038: [360..361]
 r1039: [358..359]
 r1040: [346..347]
 r1041: [342..343]
 r1042: [338..341]
 r1043: [320..321]
 r1044: [318..319]
 r1045: [316..317]
 r1046: [314..315]
 r1047: [314..315]
 r1048: [312..313]
 r1049: [312..313]
 r1050: [310..311]
 r1051: [310..311]
 r1052: [308..309]
 r1053: [308..309]
 r1054: [306..307]
 r1055: [306..307]
 r1056: [304..305]
 r1057: [304..305]
 r1058: [302..303]
 r1059: [166..167]
 r1060: [164..165]
 r1061: [160..161]
 r1062: [156..157]
 r1063: [154..155]
 r1064: [150..151]
 r1065: [144..145]
 r1066: [142..143]
 r1067: [134..135]
 r1068: [132..133]
 r1069: [128..129]
 r1070: [126..127]
 r1071: [122..123]
 r1072: [114..115]
 r1073: [114..115]
 r1074: [108..109]
 r1075: [90..91]
 r1076: [88..89]
 r1077: [86..87]
 r1078: [82..83]
 r1079: [80..81]
 r1080: [76..77]
 r1081: [70..71]
 r1082: [66..67]
 r1083: [60..61]
 r1084: [54..55]
 r1085: [48..49]
 r1086: [36..37]
 r1087: [34..35]
 r1088: [28..29]
 r1089: [26..27]
 r1090: [22..23]
 r1091: [18..19]
 r1092: [14..15]
 r1093: [8..9]
 r1094: [2..3]
 r1096: [908..909]
 r1097: [906..907]
 r1098: [880..881]
 r1099: [822..823]
 r1100: [818..819]
 r1101: [1296..1297]
 r1102: [1262..1263]
 r1103: [1248..1249]
 r1104: [1246..1247]
 r1105: [1228..1229]
 r1106: [1216..1217]
 r1107: [1214..1215]
 r1108: [1206..1207]
 r1111: [1152..1153]
 r1112: [1129..1131]
 r1113: [1076..1077]
 r1114: [1072..1073]
 r1117: [944..945]
 r1118: [938..939]
 r1121: [670..671]
 r1122: [594..595]
 r1123: [578..579]
 r1124: [300..301]
 r1125: [290..291]
 r1126: [260..261]
 r1127: [232..233]
 r1128: [228..229]
 r1129: [210..211]
 r1130: [204..205]
 r1133: [444..445]
 r1134: [396..397]
 r1135: [386..387]
 r1136: [366..367]
 r1137: [362..363]
 r1138: [344..345]
 r1139: [338..339]
 r1142: [146..147]
 r1143: [130..131]
 r1144: [116..117]
 r1145: [110..111]
 r1147: [100..101]
 r1148: [94..97]
 r1150: [62..63]
 r1151: [52..53]
 r1165: [94..95]
 r1166: [104..105]
 r1167: [326..327]
 r1168: [332..333]
 r1169: [192..193]
 r1170: [198..199]
 r1171: [926..927]
 r1172: [932..933]
 r1173: [1030..1031]
 r1174: [1058..1059]
 r1175: [1170..1171]
 r1176: [1192..1193]
 r1177: [1172..1205]
 r1178: [1194..1213]
 r1179: [1032..1071]
 r1180: [1060..1075]
 r1181: [934..937]
 r1182: [928..943]
 r1183: [200..203]
 r1184: [194..209]
 r1185: [334..337]
 r1186: [328..343]
 r1187: [106..109]
 r1188: [96..115]
 r1189: [98..129]

********** Assignment #2: **********

	 Assigning to 1188 (cl=SSE_REGS, orig=706, freq=2, tfirst=1165, tfreq=2)...
	 Assigning to 1165 (cl=SSE_REGS, orig=706, freq=2, tfirst=1165, tfreq=2)...
	   Assign 28 to optional reload r1165 (freq=2)
	Hard reg 28 is preferable by r1188 with profit 1
	 Assigning to 1187 (cl=SSE_REGS, orig=532, freq=2, tfirst=1166, tfreq=2)...
	 Assigning to 1166 (cl=SSE_REGS, orig=532, freq=2, tfirst=1166, tfreq=2)...
	   Assign 26 to optional reload r1166 (freq=2)
	Hard reg 26 is preferable by r1187 with profit 1
	 Assigning to 1186 (cl=SSE_REGS, orig=687, freq=2, tfirst=1167, tfreq=2)...
	 Assigning to 1167 (cl=SSE_REGS, orig=687, freq=2, tfirst=1167, tfreq=2)...
	   Assign 28 to optional reload r1167 (freq=2)
	Hard reg 28 is preferable by r1186 with profit 1
	 Assigning to 1185 (cl=SSE_REGS, orig=504, freq=2, tfirst=1168, tfreq=2)...
	 Assigning to 1168 (cl=SSE_REGS, orig=504, freq=2, tfirst=1168, tfreq=2)...
	   Assign 26 to optional reload r1168 (freq=2)
	Hard reg 26 is preferable by r1185 with profit 1
	 Assigning to 1184 (cl=SSE_REGS, orig=700, freq=2, tfirst=1169, tfreq=2)...
	 Assigning to 1169 (cl=SSE_REGS, orig=700, freq=2, tfirst=1169, tfreq=2)...
	   Assign 28 to optional reload r1169 (freq=2)
	Hard reg 28 is preferable by r1184 with profit 1
	 Assigning to 1183 (cl=SSE_REGS, orig=456, freq=2, tfirst=1170, tfreq=2)...
	 Assigning to 1170 (cl=SSE_REGS, orig=456, freq=2, tfirst=1170, tfreq=2)...
	   Assign 27 to optional reload r1170 (freq=2)
	Hard reg 27 is preferable by r1183 with profit 1
	 Assigning to 1182 (cl=SSE_REGS, orig=657, freq=2, tfirst=1171, tfreq=2)...
	 Assigning to 1171 (cl=SSE_REGS, orig=657, freq=2, tfirst=1171, tfreq=2)...
	   Assign 28 to optional reload r1171 (freq=2)
	Hard reg 28 is preferable by r1182 with profit 1
	 Assigning to 1181 (cl=SSE_REGS, orig=268, freq=2, tfirst=1172, tfreq=2)...
	 Assigning to 1172 (cl=SSE_REGS, orig=268, freq=2, tfirst=1172, tfreq=2)...
	   Assign 25 to optional reload r1172 (freq=2)
	Hard reg 25 is preferable by r1181 with profit 1
	 Assigning to 1179 (cl=SSE_REGS, orig=652, freq=2, tfirst=1173, tfreq=2)...
	 Assigning to 1173 (cl=SSE_REGS, orig=652, freq=2, tfirst=1173, tfreq=2)...
	   Assign 26 to optional reload r1173 (freq=2)
	Hard reg 26 is preferable by r1179 with profit 1
	 Assigning to 1180 (cl=SSE_REGS, orig=650, freq=2, tfirst=1174, tfreq=2)...
	 Assigning to 1174 (cl=SSE_REGS, orig=650, freq=2, tfirst=1174, tfreq=2)...
	   Assign 27 to optional reload r1174 (freq=2)
	Hard reg 27 is preferable by r1180 with profit 1
	 Assigning to 1177 (cl=SSE_REGS, orig=189, freq=2, tfirst=1175, tfreq=2)...
	 Assigning to 1175 (cl=SSE_REGS, orig=189, freq=2, tfirst=1175, tfreq=2)...
	   Assign 28 to optional reload r1175 (freq=2)
	Hard reg 28 is preferable by r1177 with profit 1
	 Assigning to 1178 (cl=SSE_REGS, orig=642, freq=2, tfirst=1176, tfreq=2)...
	 Assigning to 1176 (cl=SSE_REGS, orig=642, freq=2, tfirst=1176, tfreq=2)...
	   Assign 25 to optional reload r1176 (freq=2)
	Hard reg 25 is preferable by r1178 with profit 1
	 Assigning to 1189 (cl=SSE_REGS, orig=704, freq=2, tfirst=1189, tfreq=2)...
  Reassigning non-reload pseudos

********** Undoing inheritance #2: **********

Inherit 0 out of 13 (0.00%)
   Insn after restoring regs:
 1830: r1175:SF=r189:SF
      REG_DEAD r189:SF
   Insn after restoring regs:
 1831: r1176:SF=r642:SF
      REG_DEAD r642:SF
   Insn after restoring regs:
 1732: r189:SF=r1108:SF
      REG_DEAD r1108:SF
   Insn after restoring regs:
 1730: r642:SF=r1107:SF
      REG_DEAD r1107:SF
   Insn after restoring regs:
 1828: r1173:SF=r652:SF
      REG_DEAD r652:SF
   Insn after restoring regs:
 1829: r1174:SF=r650:SF
      REG_DEAD r650:SF
   Insn after restoring regs:
 1742: r652:SF=r1114:SF
      REG_DEAD r1114:SF
   Insn after restoring regs:
 1740: r650:SF=r1113:SF
      REG_DEAD r1113:SF
   Insn after restoring regs:
 1826: r1171:SF=r657:SF
      REG_DEAD r657:SF
   Insn after restoring regs:
 1827: r1172:SF=r268:SF
      REG_DEAD r268:SF
   Insn after restoring regs:
 1748: r268:SF=r1118:SF
      REG_DEAD r1118:SF
   Insn after restoring regs:
 1746: r657:SF=r1117:SF
      REG_DEAD r1117:SF
   Insn after restoring regs:
 1824: r1169:SF=r700:SF
      REG_DEAD r700:SF
   Insn after restoring regs:
 1825: r1170:SF=r456:SF
      REG_DEAD r456:SF
   Insn after restoring regs:
 1770: r456:SF=r1130:SF
      REG_DEAD r1130:SF
   Insn after restoring regs:
 1768: r700:SF=r1129:SF
      REG_DEAD r1129:SF
   Insn after restoring regs:
 1822: r1167:SF=r687:SF
      REG_DEAD r687:SF
   Insn after restoring regs:
 1823: r1168:SF=r504:SF
      REG_DEAD r504:SF
   Insn after restoring regs:
 1786: r504:SF=r1139:SF
      REG_DEAD r1139:SF
   Insn after restoring regs:
 1784: r687:SF=r1138:SF
      REG_DEAD r1138:SF
   Insn after restoring regs:
 1820: r1165:SF=r706:SF
      REG_DEAD r706:SF
   Insn after restoring regs:
 1800: r1148:SF=r704:SF
      REG_DEAD r704:SF
   Insn after restoring regs:
 1821: r1166:SF=r532:SF
      REG_DEAD r532:SF
   Insn after restoring regs:
 1796: r532:SF=r1145:SF
      REG_DEAD r1145:SF
   Insn after restoring regs:
 1794: r706:SF=r1144:SF
      REG_DEAD r1144:SF
   Insn after restoring regs:
 1792: r704:SF=r1143:SF
      REG_DEAD r1143:SF
Keep optional reload reg 1109
Keep optional reload reg 1110
Keep optional reload reg 1115
Keep optional reload reg 1116
Keep optional reload reg 1119
Keep optional reload reg 1120
Keep optional reload reg 1131
Keep optional reload reg 1132
Keep optional reload reg 1140
Keep optional reload reg 1141
Keep optional reload reg 1146
Keep optional reload reg 1149
Remove optional reload reg 1165
  Restoring original insn:
 1551: r1148:SF=r1148:SF+r706:SF
      REG_DEAD r706:SF
  Deleting move 1820
 1820: r1165:SF=r706:SF
      REG_DEAD r706:SF
deleting insn with uid = 1820.
Remove optional reload reg 1166
  Restoring original insn:
 1548: r534:SF=r533:SF*r532:SF
      REG_DEAD r532:SF
      REG_DEAD r533:SF
  Deleting move 1821
 1821: r1166:SF=r532:SF
      REG_DEAD r532:SF
deleting insn with uid = 1821.
Remove optional reload reg 1167
  Restoring original insn:
 1435: r509:SF=r508:SF*r687:SF
      REG_DEAD r687:SF
      REG_DEAD r508:SF
  Deleting move 1822
 1822: r1167:SF=r687:SF
      REG_DEAD r687:SF
deleting insn with uid = 1822.
Remove optional reload reg 1168
  Restoring original insn:
 1432: r506:SF=r505:SF*r504:SF
      REG_DEAD r504:SF
      REG_DEAD r505:SF
  Deleting move 1823
 1823: r1168:SF=r504:SF
      REG_DEAD r504:SF
deleting insn with uid = 1823.
Remove optional reload reg 1169
  Restoring original insn:
 1248: r461:SF=r460:SF*r700:SF
      REG_DEAD r700:SF
      REG_DEAD r460:SF
  Deleting move 1824
 1824: r1169:SF=r700:SF
      REG_DEAD r700:SF
deleting insn with uid = 1824.
Remove optional reload reg 1170
  Restoring original insn:
 1245: r458:SF=r457:SF*r456:SF
      REG_DEAD r456:SF
      REG_DEAD r457:SF
  Deleting move 1825
 1825: r1170:SF=r456:SF
      REG_DEAD r456:SF
deleting insn with uid = 1825.
Remove optional reload reg 1171
  Restoring original insn:
  715: r273:SF=r272:SF*r657:SF
      REG_DEAD r657:SF
      REG_DEAD r272:SF
  Deleting move 1826
 1826: r1171:SF=r657:SF
      REG_DEAD r657:SF
deleting insn with uid = 1826.
Remove optional reload reg 1172
  Restoring original insn:
  712: r270:SF=r269:SF*r268:SF
      REG_DEAD r268:SF
      REG_DEAD r269:SF
  Deleting move 1827
 1827: r1172:SF=r268:SF
      REG_DEAD r268:SF
deleting insn with uid = 1827.
Remove optional reload reg 1173
  Restoring original insn:
  551: r239:SF=r238:SF*r652:SF
      REG_DEAD r652:SF
      REG_DEAD r238:SF
  Deleting move 1828
 1828: r1173:SF=r652:SF
      REG_DEAD r652:SF
deleting insn with uid = 1828.
Remove optional reload reg 1174
  Restoring original insn:
  531: r225:SF=r224:SF*r650:SF
      REG_DEAD r650:SF
      REG_DEAD r224:SF
  Deleting move 1829
 1829: r1174:SF=r650:SF
      REG_DEAD r650:SF
deleting insn with uid = 1829.
Remove optional reload reg 1175
  Restoring original insn:
  392: r205:SF=r204:SF*r189:SF
      REG_DEAD r189:SF
      REG_DEAD r204:SF
  Deleting move 1830
 1830: r1175:SF=r189:SF
      REG_DEAD r189:SF
deleting insn with uid = 1830.
Remove optional reload reg 1176
  Restoring original insn:
  380: r195:SF=r194:SF*r642:SF
      REG_DEAD r642:SF
      REG_DEAD r194:SF
  Deleting move 1831
 1831: r1176:SF=r642:SF
      REG_DEAD r642:SF
deleting insn with uid = 1831.

********** Local #3: **********

	   Spilling non-eliminable hard regs: 6
            2 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 1551:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            2 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 1548:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            2 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 1435:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            2 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 1432:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            2 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 1248:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            2 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 1245:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            2 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 715:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            2 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 712:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            2 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 551:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            2 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 531:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            2 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 392:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            2 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 380:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
	   Spilling non-eliminable hard regs: 6

********** Pseudo live ranges #3: **********

  BB 57
   Insn 1660: point = 0, n_alt = -1
  BB 62
   Insn 1705: point = 0, n_alt = -1
  BB 55
   Insn 1498: point = 0, n_alt = -1
   Insn 1497: point = 0, n_alt = 0
   Insn 1496: point = 1, n_alt = 0
   Insn 1495: point = 2, n_alt = 0
  BB 56
   Insn 1687: point = 3, n_alt = -1
   Insn 1620: point = 3, n_alt = 1
   Insn 1619: point = 3, n_alt = 8
   Insn 1618: point = 4, n_alt = 3
   Insn 1617: point = 5, n_alt = 2
   Insn 1616: point = 7, n_alt = 3
   Insn 1615: point = 9, n_alt = 0
   Insn 1614: point = 11, n_alt = 0
   Insn 1613: point = 12, n_alt = -1
   Insn 1612: point = 14, n_alt = 1
   Insn 1611: point = 16, n_alt = 7
   Insn 1610: point = 18, n_alt = 3
   Insn 1609: point = 19, n_alt = 3
   Insn 1608: point = 21, n_alt = 0
   Insn 1607: point = 23, n_alt = 0
   Insn 1606: point = 24, n_alt = 1
   Insn 1605: point = 26, n_alt = 7
   Insn 1604: point = 28, n_alt = 3
   Insn 1603: point = 29, n_alt = 3
   Insn 1602: point = 31, n_alt = 0
   Insn 1601: point = 33, n_alt = 0
   Insn 1600: point = 34, n_alt = 8
   Insn 1599: point = 35, n_alt = 3
   Insn 1598: point = 36, n_alt = 2
   Insn 1597: point = 38, n_alt = 3
   Insn 1596: point = 40, n_alt = 0
   Insn 1595: point = 42, n_alt = 0
   Insn 1594: point = 43, n_alt = 7
   Insn 1593: point = 45, n_alt = 3
   Insn 1592: point = 46, n_alt = 1
   Insn 1591: point = 48, n_alt = 1
   Insn 1590: point = 50, n_alt = 7
   Insn 1589: point = 51, n_alt = 1
   Insn 1588: point = 53, n_alt = 7
   Insn 1587: point = 54, n_alt = -1
   Insn 1586: point = 56, n_alt = 2
   Insn 1585: point = 58, n_alt = 7
   Insn 1584: point = 60, n_alt = 3
   Insn 1583: point = 61, n_alt = 1
   Insn 1582: point = 63, n_alt = 7
   Insn 1806: point = 64, n_alt = -1
   Insn 1581: point = 66, n_alt = 1
   Insn 1805: point = 67, n_alt = -1
   Insn 1580: point = 68, n_alt = 7
   Insn 1579: point = 69, n_alt = 8
   Insn 1578: point = 70, n_alt = 3
   Insn 1577: point = 71, n_alt = 1
   Insn 1576: point = 73, n_alt = 3
   Insn 1575: point = 75, n_alt = 0
   Insn 1574: point = 77, n_alt = 0
   Insn 1804: point = 78, n_alt = -1
   Insn 1573: point = 80, n_alt = 2
   Insn 1803: point = 81, n_alt = -1
   Insn 1572: point = 83, n_alt = 7
   Insn 1571: point = 85, n_alt = 3
   Insn 1570: point = 86, n_alt = 3
   Insn 1569: point = 88, n_alt = 0
   Insn 1568: point = 90, n_alt = 0
   Insn 1567: point = 91, n_alt = -1
   Insn 1566: point = 93, n_alt = 2
   Insn 1565: point = 95, n_alt = 7
   Insn 1564: point = 97, n_alt = 3
   Insn 1563: point = 98, n_alt = 3
   Insn 1562: point = 100, n_alt = 0
   Insn 1561: point = 102, n_alt = 0
   Insn 1560: point = 103, n_alt = 7
   Insn 1559: point = 105, n_alt = 3
   Insn 1558: point = 106, n_alt = 3
   Insn 1557: point = 108, n_alt = 0
   Insn 1556: point = 110, n_alt = 0
   Insn 1555: point = 111, n_alt = 8
   Insn 1554: point = 112, n_alt = 0
   Insn 1553: point = 113, n_alt = 8
   Insn 1552: point = 114, n_alt = 2
   Insn 1801: point = 116, n_alt = -1
   Insn 1551: point = 118, n_alt = 1
   Insn 1800: point = 119, n_alt = 7
   Insn 1799: point = 121, n_alt = -1
   Insn 1550: point = 123, n_alt = 1
   Insn 1798: point = 124, n_alt = -1
   Insn 1549: point = 125, n_alt = -1
   Insn 1548: point = 127, n_alt = 1
   Insn 1547: point = 129, n_alt = -1
   Insn 1546: point = 130, n_alt = 0
   Insn 1545: point = 130, n_alt = 10
   Insn 1544: point = 131, n_alt = 3
   Insn 1796: point = 132, n_alt = 8
   Insn 1543: point = 134, n_alt = 1
   Insn 1795: point = 135, n_alt = -1
   Insn 1542: point = 137, n_alt = 7
   Insn 1541: point = 138, n_alt = 1
   Insn 1540: point = 140, n_alt = 7
   Insn 1539: point = 141, n_alt = 7
   Insn 1794: point = 142, n_alt = 8
   Insn 1538: point = 144, n_alt = 1
   Insn 1793: point = 145, n_alt = -1
   Insn 1537: point = 146, n_alt = -1
   Insn 1536: point = 148, n_alt = 1
   Insn 1535: point = 150, n_alt = 7
   Insn 1534: point = 152, n_alt = 3
   Insn 1533: point = 153, n_alt = 3
   Insn 1532: point = 155, n_alt = 0
   Insn 1531: point = 157, n_alt = 0
   Insn 1530: point = 158, n_alt = 7
   Insn 1529: point = 160, n_alt = 3
   Insn 1792: point = 161, n_alt = 8
   Insn 1528: point = 163, n_alt = 1
   Insn 1791: point = 164, n_alt = -1
   Insn 1527: point = 165, n_alt = 7
   Insn 1526: point = 167, n_alt = 3
   Insn 1525: point = 168, n_alt = 4
   Insn 1524: point = 169, n_alt = 9
   Insn 1523: point = 170, n_alt = 0
   Insn 1522: point = 170, n_alt = -1
   Insn 1521: point = 171, n_alt = -1
   Insn 1520: point = 172, n_alt = 1
   Insn 1519: point = 174, n_alt = 1
   Insn 1518: point = 176, n_alt = 1
   Insn 1517: point = 178, n_alt = 7
   Insn 1516: point = 179, n_alt = 7
   Insn 1515: point = 180, n_alt = 7
   Insn 1514: point = 182, n_alt = 3
   Insn 1790: point = 183, n_alt = -1
   Insn 1513: point = 185, n_alt = 1
   Insn 1789: point = 186, n_alt = -1
   Insn 1512: point = 188, n_alt = 7
   Insn 1511: point = 190, n_alt = 3
   Insn 1510: point = 191, n_alt = 3
   Insn 1509: point = 193, n_alt = 0
   Insn 1508: point = 195, n_alt = 0
   Insn 1507: point = 196, n_alt = 7
   Insn 1506: point = 198, n_alt = 3
   Insn 1505: point = 199, n_alt = 8
   Insn 1504: point = 200, n_alt = 7
   Insn 1503: point = 202, n_alt = 3
   Insn 1502: point = 203, n_alt = 3
   Insn 1501: point = 205, n_alt = 0
   Insn 1500: point = 207, n_alt = 0
  BB 54
   Insn 1493: point = 209, n_alt = 1
   Insn 1492: point = 209, n_alt = 0
   Insn 1491: point = 211, n_alt = 3
  BB 45
   Insn 1683: point = 212, n_alt = -1
   Insn 1301: point = 212, n_alt = 0
   Insn 1300: point = 212, n_alt = -1
   Insn 1299: point = 213, n_alt = 3
   Insn 1298: point = 214, n_alt = 0
   Insn 1297: point = 214, n_alt = -1
   Insn 1296: point = 215, n_alt = -1
   Insn 1295: point = 216, n_alt = 0
   Insn 1294: point = 216, n_alt = 3
   Insn 1293: point = 217, n_alt = 3
   Insn 1292: point = 218, n_alt = 0
   Insn 1291: point = 218, n_alt = -1
   Insn 1290: point = 219, n_alt = -1
   Insn 1289: point = 220, n_alt = 0
   Insn 1288: point = 220, n_alt = 3
   Insn 1287: point = 221, n_alt = 3
   Insn 1286: point = 222, n_alt = 0
   Insn 1285: point = 222, n_alt = -1
   Insn 1284: point = 223, n_alt = -1
   Insn 1283: point = 224, n_alt = 0
   Insn 1282: point = 224, n_alt = 3
   Insn 1281: point = 225, n_alt = 3
   Insn 1280: point = 226, n_alt = 0
   Insn 1279: point = 226, n_alt = -1
   Insn 1278: point = 227, n_alt = -1
   Insn 1277: point = 228, n_alt = 0
   Insn 1276: point = 228, n_alt = 3
   Insn 1275: point = 229, n_alt = 3
   Insn 1274: point = 230, n_alt = 0
   Insn 1273: point = 230, n_alt = -1
   Insn 1272: point = 231, n_alt = -1
   Insn 1271: point = 232, n_alt = 0
   Insn 1270: point = 232, n_alt = 3
   Insn 1269: point = 233, n_alt = 3
   Insn 1268: point = 234, n_alt = 0
   Insn 1267: point = 234, n_alt = -1
   Insn 1266: point = 235, n_alt = -1
   Insn 1265: point = 236, n_alt = 0
   Insn 1264: point = 236, n_alt = 3
   Insn 1263: point = 237, n_alt = 3
   Insn 1262: point = 238, n_alt = 0
   Insn 1261: point = 238, n_alt = -1
   Insn 1260: point = 239, n_alt = 3
   Insn 1259: point = 240, n_alt = 1
   Insn 1258: point = 240, n_alt = 1
   Insn 1257: point = 240, n_alt = 1
   Insn 1256: point = 240, n_alt = 5
   Insn 1255: point = 241, n_alt = 4
   Insn 1254: point = 242, n_alt = 1
   Insn 1253: point = 242, n_alt = 5
   Insn 1252: point = 243, n_alt = 4
   Insn 1251: point = 244, n_alt = 8
   Insn 1250: point = 245, n_alt = 1
   Insn 1249: point = 247, n_alt = 7
   Insn 1248: point = 248, n_alt = 1
   Insn 1247: point = 250, n_alt = 1
   Insn 1246: point = 252, n_alt = 7
   Insn 1245: point = 253, n_alt = 1
   Insn 1244: point = 255, n_alt = -1
   Insn 1243: point = 256, n_alt = 0
   Insn 1242: point = 256, n_alt = 10
   Insn 1241: point = 257, n_alt = 0
   Insn 1770: point = 257, n_alt = 8
   Insn 1240: point = 259, n_alt = 1
   Insn 1769: point = 260, n_alt = -1
   Insn 1239: point = 262, n_alt = 7
   Insn 1238: point = 263, n_alt = 7
   Insn 1237: point = 265, n_alt = 3
   Insn 1768: point = 266, n_alt = 8
   Insn 1236: point = 268, n_alt = 1
   Insn 1767: point = 269, n_alt = -1
   Insn 1235: point = 270, n_alt = 7
   Insn 1234: point = 272, n_alt = 3
   Insn 1233: point = 273, n_alt = 3
   Insn 1232: point = 274, n_alt = 8
   Insn 1231: point = 275, n_alt = 1
   Insn 1230: point = 277, n_alt = 7
   Insn 1229: point = 278, n_alt = 1
   Insn 1228: point = 280, n_alt = 1
   Insn 1227: point = 282, n_alt = 7
   Insn 1226: point = 283, n_alt = 1
   Insn 1225: point = 285, n_alt = 1
   Insn 1224: point = 287, n_alt = 7
   Insn 1223: point = 288, n_alt = 7
   Insn 1222: point = 290, n_alt = 3
   Insn 1766: point = 291, n_alt = -1
   Insn 1221: point = 293, n_alt = 1
   Insn 1765: point = 294, n_alt = -1
   Insn 1220: point = 295, n_alt = 7
   Insn 1219: point = 297, n_alt = 3
   Insn 1764: point = 298, n_alt = -1
   Insn 1218: point = 300, n_alt = 1
   Insn 1763: point = 301, n_alt = -1
   Insn 1217: point = 302, n_alt = 7
   Insn 1216: point = 303, n_alt = 8
   Insn 1215: point = 304, n_alt = 2
   Insn 1214: point = 306, n_alt = 1
   Insn 1213: point = 308, n_alt = 7
   Insn 1212: point = 310, n_alt = 3
   Insn 1211: point = 311, n_alt = 2
   Insn 1210: point = 313, n_alt = 7
   Insn 1209: point = 314, n_alt = 7
   Insn 1208: point = 315, n_alt = 8
   Insn 1207: point = 316, n_alt = 1
   Insn 1206: point = 318, n_alt = 1
   Insn 1205: point = 320, n_alt = 7
   Insn 1204: point = 321, n_alt = 1
   Insn 1203: point = 323, n_alt = 7
   Insn 1202: point = 324, n_alt = 7
   Insn 1201: point = 325, n_alt = 1
   Insn 1200: point = 327, n_alt = 7
   Insn 1199: point = 328, n_alt = 8
   Insn 1198: point = 329, n_alt = 1
   Insn 1197: point = 331, n_alt = -1
   Insn 1762: point = 333, n_alt = -1
   Insn 1196: point = 335, n_alt = 2
   Insn 1761: point = 336, n_alt = -1
   Insn 1195: point = 338, n_alt = 7
   Insn 1194: point = 339, n_alt = 0
   Insn 1193: point = 340, n_alt = 2
   Insn 1192: point = 342, n_alt = 7
   Insn 1191: point = 343, n_alt = 1
   Insn 1190: point = 345, n_alt = 7
   Insn 1189: point = 346, n_alt = 7
  BB 44
   Insn 1186: point = 347, n_alt = 8
   Insn 1185: point = 348, n_alt = 2
   Insn 1184: point = 350, n_alt = 7
   Insn 1183: point = 351, n_alt = 1
   Insn 1182: point = 353, n_alt = 7
   Insn 1181: point = 354, n_alt = 1
   Insn 1180: point = 356, n_alt = 7
   Insn 1179: point = 357, n_alt = 8
   Insn 1178: point = 358, n_alt = 7
   Insn 1177: point = 359, n_alt = 0
   Insn 1176: point = 359, n_alt = -1
   Insn 1175: point = 360, n_alt = 3
   Insn 1174: point = 361, n_alt = 0
   Insn 1173: point = 361, n_alt = -1
   Insn 1172: point = 362, n_alt = 4
   Insn 1171: point = 362, n_alt = 0
   Insn 1170: point = 362, n_alt = 3
   Insn 1169: point = 363, n_alt = 0
   Insn 1168: point = 363, n_alt = -1
   Insn 1167: point = 364, n_alt = 3
   Insn 1166: point = 365, n_alt = 1
   Insn 1165: point = 365, n_alt = 1
   Insn 1164: point = 365, n_alt = 1
   Insn 1163: point = 365, n_alt = 5
   Insn 1162: point = 366, n_alt = 4
  BB 43
   Insn 1157: point = 367, n_alt = -1
   Insn 1156: point = 367, n_alt = 1
   Insn 1155: point = 368, n_alt = 7
   Insn 1154: point = 369, n_alt = 8
   Insn 1760: point = 370, n_alt = -1
   Insn 1153: point = 372, n_alt = 2
   Insn 1759: point = 373, n_alt = -1
   Insn 1152: point = 375, n_alt = 7
   Insn 1151: point = 376, n_alt = 2
   Insn 1150: point = 378, n_alt = 1
   Insn 1149: point = 380, n_alt = 7
   Insn 1148: point = 381, n_alt = 1
   Insn 1147: point = 383, n_alt = 7
   Insn 1146: point = 384, n_alt = 7
   Insn 1758: point = 385, n_alt = -1
   Insn 1145: point = 387, n_alt = 1
   Insn 1757: point = 388, n_alt = -1
   Insn 1144: point = 389, n_alt = 7
  BB 53
   Insn 1488: point = 390, n_alt = 0
   Insn 1487: point = 390, n_alt = -1
   Insn 1486: point = 391, n_alt = 3
   Insn 1485: point = 392, n_alt = 0
   Insn 1484: point = 392, n_alt = -1
   Insn 1483: point = 393, n_alt = -1
   Insn 1482: point = 394, n_alt = 0
   Insn 1481: point = 394, n_alt = 3
   Insn 1480: point = 395, n_alt = 3
   Insn 1479: point = 396, n_alt = 0
   Insn 1478: point = 396, n_alt = -1
   Insn 1477: point = 397, n_alt = -1
   Insn 1476: point = 398, n_alt = 0
   Insn 1475: point = 398, n_alt = 3
   Insn 1474: point = 399, n_alt = 3
   Insn 1473: point = 400, n_alt = 0
   Insn 1472: point = 400, n_alt = -1
   Insn 1471: point = 401, n_alt = -1
   Insn 1470: point = 402, n_alt = 0
   Insn 1469: point = 402, n_alt = 3
   Insn 1468: point = 403, n_alt = 3
   Insn 1467: point = 404, n_alt = 0
   Insn 1466: point = 404, n_alt = -1
   Insn 1465: point = 405, n_alt = -1
   Insn 1464: point = 406, n_alt = 0
   Insn 1463: point = 406, n_alt = 3
   Insn 1462: point = 407, n_alt = 3
   Insn 1461: point = 408, n_alt = 0
   Insn 1460: point = 408, n_alt = -1
   Insn 1459: point = 409, n_alt = -1
   Insn 1458: point = 410, n_alt = 0
   Insn 1457: point = 410, n_alt = 3
   Insn 1456: point = 411, n_alt = 3
   Insn 1455: point = 412, n_alt = 0
   Insn 1454: point = 412, n_alt = -1
   Insn 1453: point = 413, n_alt = -1
   Insn 1452: point = 414, n_alt = 0
   Insn 1451: point = 414, n_alt = 3
   Insn 1450: point = 415, n_alt = 3
   Insn 1449: point = 416, n_alt = 0
   Insn 1448: point = 416, n_alt = -1
   Insn 1447: point = 417, n_alt = 3
   Insn 1446: point = 418, n_alt = 1
   Insn 1445: point = 418, n_alt = 1
   Insn 1444: point = 418, n_alt = 1
   Insn 1443: point = 418, n_alt = 5
   Insn 1442: point = 419, n_alt = 4
   Insn 1441: point = 420, n_alt = 1
   Insn 1440: point = 420, n_alt = 5
   Insn 1439: point = 421, n_alt = 4
   Insn 1438: point = 422, n_alt = 8
   Insn 1437: point = 423, n_alt = 1
   Insn 1436: point = 425, n_alt = 7
   Insn 1435: point = 426, n_alt = 1
   Insn 1434: point = 428, n_alt = 1
   Insn 1433: point = 430, n_alt = 7
   Insn 1432: point = 431, n_alt = 1
   Insn 1431: point = 433, n_alt = -1
   Insn 1430: point = 434, n_alt = 0
   Insn 1429: point = 434, n_alt = 10
   Insn 1428: point = 435, n_alt = 0
   Insn 1786: point = 435, n_alt = 8
   Insn 1427: point = 437, n_alt = 1
   Insn 1785: point = 438, n_alt = -1
   Insn 1426: point = 440, n_alt = 7
   Insn 1425: point = 441, n_alt = 7
   Insn 1424: point = 443, n_alt = 3
   Insn 1784: point = 444, n_alt = 8
   Insn 1423: point = 446, n_alt = 1
   Insn 1783: point = 447, n_alt = -1
   Insn 1422: point = 448, n_alt = 7
   Insn 1421: point = 450, n_alt = 3
   Insn 1420: point = 451, n_alt = 3
   Insn 1419: point = 452, n_alt = 8
   Insn 1418: point = 453, n_alt = 1
   Insn 1417: point = 455, n_alt = 7
   Insn 1416: point = 456, n_alt = 1
   Insn 1415: point = 458, n_alt = 1
   Insn 1414: point = 460, n_alt = 7
   Insn 1413: point = 461, n_alt = 1
   Insn 1412: point = 463, n_alt = 1
   Insn 1411: point = 465, n_alt = 7
   Insn 1410: point = 466, n_alt = 7
   Insn 1409: point = 468, n_alt = 3
   Insn 1782: point = 469, n_alt = -1
   Insn 1408: point = 471, n_alt = 1
   Insn 1781: point = 472, n_alt = -1
   Insn 1407: point = 473, n_alt = 7
   Insn 1406: point = 475, n_alt = 3
   Insn 1780: point = 476, n_alt = -1
   Insn 1405: point = 478, n_alt = 1
   Insn 1779: point = 479, n_alt = -1
   Insn 1404: point = 480, n_alt = 7
   Insn 1403: point = 481, n_alt = 8
   Insn 1402: point = 482, n_alt = 2
   Insn 1401: point = 484, n_alt = 1
   Insn 1400: point = 486, n_alt = 7
   Insn 1399: point = 488, n_alt = 3
   Insn 1398: point = 489, n_alt = 2
   Insn 1397: point = 491, n_alt = 7
   Insn 1396: point = 492, n_alt = 7
   Insn 1395: point = 493, n_alt = 8
   Insn 1394: point = 494, n_alt = 2
   Insn 1393: point = 496, n_alt = 1
   Insn 1392: point = 498, n_alt = 7
   Insn 1391: point = 499, n_alt = 1
   Insn 1390: point = 501, n_alt = 7
   Insn 1389: point = 502, n_alt = 7
   Insn 1778: point = 503, n_alt = -1
   Insn 1388: point = 505, n_alt = 1
   Insn 1777: point = 506, n_alt = -1
   Insn 1387: point = 507, n_alt = 7
   Insn 1386: point = 508, n_alt = 8
   Insn 1385: point = 509, n_alt = 1
   Insn 1384: point = 511, n_alt = -1
   Insn 1383: point = 513, n_alt = 2
   Insn 1382: point = 515, n_alt = 7
   Insn 1381: point = 516, n_alt = 0
   Insn 1776: point = 517, n_alt = -1
   Insn 1380: point = 519, n_alt = 2
   Insn 1775: point = 520, n_alt = -1
   Insn 1379: point = 522, n_alt = 7
   Insn 1378: point = 523, n_alt = 1
   Insn 1377: point = 525, n_alt = 7
   Insn 1376: point = 526, n_alt = 7
  BB 52
   Insn 1373: point = 527, n_alt = 8
   Insn 1372: point = 528, n_alt = 0
   Insn 1371: point = 530, n_alt = 2
   Insn 1370: point = 531, n_alt = 2
   Insn 1369: point = 533, n_alt = 7
   Insn 1368: point = 534, n_alt = 1
   Insn 1367: point = 536, n_alt = 7
   Insn 1366: point = 537, n_alt = 1
   Insn 1365: point = 539, n_alt = 7
   Insn 1364: point = 540, n_alt = 8
   Insn 1363: point = 541, n_alt = 7
   Insn 1362: point = 542, n_alt = 0
   Insn 1361: point = 542, n_alt = -1
   Insn 1360: point = 543, n_alt = 3
   Insn 1359: point = 544, n_alt = 0
   Insn 1358: point = 544, n_alt = -1
   Insn 1357: point = 545, n_alt = 4
   Insn 1356: point = 545, n_alt = 0
   Insn 1355: point = 545, n_alt = 3
   Insn 1354: point = 546, n_alt = 0
   Insn 1353: point = 546, n_alt = -1
   Insn 1352: point = 547, n_alt = 3
   Insn 1351: point = 548, n_alt = 1
   Insn 1350: point = 548, n_alt = 1
   Insn 1349: point = 548, n_alt = 1
   Insn 1348: point = 548, n_alt = 5
   Insn 1347: point = 549, n_alt = 4
  BB 51
   Insn 1345: point = 550, n_alt = -1
   Insn 1344: point = 550, n_alt = 0
   Insn 1343: point = 551, n_alt = 0
   Insn 1342: point = 551, n_alt = 0
  BB 49
   Insn 1685: point = 554, n_alt = -1
   Insn 1334: point = 554, n_alt = 1
  BB 50
   Insn 1339: point = 555, n_alt = 1
  BB 48
   Insn 1328: point = 556, n_alt = -1
   Insn 1327: point = 556, n_alt = 1
   Insn 1326: point = 557, n_alt = 7
  BB 47
   Insn 1325: point = 559, n_alt = -1
   Insn 1324: point = 559, n_alt = 1
   Insn 1323: point = 560, n_alt = 7
   Insn 1322: point = 561, n_alt = 7
   Insn 1321: point = 563, n_alt = 3
  BB 46
   Insn 1319: point = 564, n_alt = -1
   Insn 1318: point = 564, n_alt = 1
   Insn 1317: point = 565, n_alt = 7
   Insn 1316: point = 566, n_alt = 8
   Insn 1315: point = 567, n_alt = 1
   Insn 1314: point = 569, n_alt = 7
   Insn 1313: point = 570, n_alt = 2
   Insn 1312: point = 572, n_alt = 1
   Insn 1311: point = 574, n_alt = 7
   Insn 1310: point = 575, n_alt = 1
   Insn 1309: point = 577, n_alt = 7
   Insn 1308: point = 578, n_alt = 7
   Insn 1774: point = 579, n_alt = -1
   Insn 1307: point = 581, n_alt = 1
   Insn 1773: point = 582, n_alt = -1
   Insn 1306: point = 583, n_alt = 7
  BB 42
   Insn 1139: point = 584, n_alt = -1
   Insn 1138: point = 584, n_alt = 1
   Insn 1137: point = 585, n_alt = 7
  BB 41
   Insn 1136: point = 587, n_alt = -1
   Insn 1135: point = 587, n_alt = 1
   Insn 1134: point = 588, n_alt = 7
   Insn 1133: point = 589, n_alt = 7
   Insn 1132: point = 591, n_alt = 3
   Insn 1131: point = 592, n_alt = 0
   Insn 1130: point = 592, n_alt = -1
   Insn 1129: point = 593, n_alt = 3
   Insn 1128: point = 594, n_alt = 0
   Insn 1127: point = 594, n_alt = -1
   Insn 1126: point = 595, n_alt = -1
   Insn 1125: point = 596, n_alt = 0
   Insn 1124: point = 596, n_alt = 3
   Insn 1123: point = 597, n_alt = 3
   Insn 1122: point = 598, n_alt = 0
   Insn 1121: point = 598, n_alt = -1
   Insn 1120: point = 599, n_alt = -1
   Insn 1119: point = 600, n_alt = 0
   Insn 1118: point = 600, n_alt = 3
   Insn 1117: point = 601, n_alt = 3
   Insn 1116: point = 602, n_alt = 0
   Insn 1115: point = 602, n_alt = -1
   Insn 1114: point = 603, n_alt = -1
   Insn 1113: point = 604, n_alt = 0
   Insn 1112: point = 604, n_alt = 3
   Insn 1111: point = 605, n_alt = 3
   Insn 1110: point = 606, n_alt = 0
   Insn 1109: point = 606, n_alt = -1
   Insn 1108: point = 607, n_alt = -1
   Insn 1107: point = 608, n_alt = 0
   Insn 1106: point = 608, n_alt = 3
   Insn 1105: point = 609, n_alt = 3
   Insn 1104: point = 610, n_alt = 0
   Insn 1103: point = 610, n_alt = -1
   Insn 1102: point = 611, n_alt = 3
   Insn 1101: point = 612, n_alt = 1
   Insn 1100: point = 612, n_alt = 1
   Insn 1099: point = 612, n_alt = 1
   Insn 1098: point = 612, n_alt = 5
   Insn 1097: point = 613, n_alt = 4
   Insn 1096: point = 614, n_alt = 1
   Insn 1095: point = 614, n_alt = 5
   Insn 1094: point = 615, n_alt = 4
  BB 61
   Insn 1702: point = 616, n_alt = -1
  BB 37
   Insn 820: point = 616, n_alt = -1
   Insn 819: point = 616, n_alt = 0
   Insn 818: point = 617, n_alt = 0
   Insn 817: point = 618, n_alt = 0
  BB 40
   Insn 1680: point = 619, n_alt = -1
   Insn 1088: point = 619, n_alt = 1
   Insn 1087: point = 619, n_alt = 8
   Insn 1086: point = 620, n_alt = 3
   Insn 1085: point = 621, n_alt = 7
   Insn 1084: point = 622, n_alt = 3
   Insn 1083: point = 624, n_alt = 0
   Insn 1082: point = 626, n_alt = 0
   Insn 1081: point = 627, n_alt = 0
   Insn 1080: point = 627, n_alt = -1
   Insn 1079: point = 628, n_alt = 3
   Insn 1078: point = 629, n_alt = 0
   Insn 1077: point = 629, n_alt = -1
   Insn 1076: point = 630, n_alt = -1
   Insn 1075: point = 631, n_alt = 0
   Insn 1074: point = 631, n_alt = 3
   Insn 1073: point = 632, n_alt = 3
   Insn 1072: point = 633, n_alt = 0
   Insn 1071: point = 633, n_alt = -1
   Insn 1070: point = 634, n_alt = -1
   Insn 1069: point = 635, n_alt = 0
   Insn 1068: point = 635, n_alt = 3
   Insn 1067: point = 636, n_alt = 3
   Insn 1066: point = 637, n_alt = 0
   Insn 1065: point = 637, n_alt = -1
   Insn 1064: point = 638, n_alt = -1
   Insn 1063: point = 639, n_alt = 0
   Insn 1062: point = 639, n_alt = 3
   Insn 1061: point = 640, n_alt = 3
   Insn 1060: point = 641, n_alt = 0
   Insn 1059: point = 641, n_alt = -1
   Insn 1058: point = 642, n_alt = -1
   Insn 1057: point = 643, n_alt = 0
   Insn 1056: point = 643, n_alt = 3
   Insn 1055: point = 644, n_alt = 3
   Insn 1054: point = 645, n_alt = 0
   Insn 1053: point = 645, n_alt = -1
   Insn 1052: point = 646, n_alt = -1
   Insn 1051: point = 647, n_alt = 0
   Insn 1050: point = 647, n_alt = 3
   Insn 1049: point = 648, n_alt = 3
   Insn 1048: point = 649, n_alt = 0
   Insn 1047: point = 649, n_alt = -1
   Insn 1046: point = 650, n_alt = -1
   Insn 1045: point = 651, n_alt = 0
   Insn 1044: point = 651, n_alt = 3
   Insn 1043: point = 652, n_alt = 3
   Insn 1042: point = 653, n_alt = 0
   Insn 1041: point = 653, n_alt = -1
   Insn 1040: point = 654, n_alt = -1
   Insn 1039: point = 655, n_alt = 0
   Insn 1038: point = 655, n_alt = 3
   Insn 1037: point = 656, n_alt = 3
   Insn 1036: point = 657, n_alt = 0
   Insn 1035: point = 657, n_alt = -1
   Insn 1034: point = 658, n_alt = -1
   Insn 1033: point = 659, n_alt = 0
   Insn 1032: point = 659, n_alt = 3
   Insn 1031: point = 660, n_alt = 3
   Insn 1030: point = 661, n_alt = 0
   Insn 1029: point = 661, n_alt = -1
   Insn 1028: point = 662, n_alt = 3
   Insn 1027: point = 663, n_alt = 1
   Insn 1026: point = 663, n_alt = 1
   Insn 1025: point = 663, n_alt = 1
   Insn 1024: point = 663, n_alt = 5
   Insn 1023: point = 664, n_alt = 4
   Insn 1022: point = 665, n_alt = 1
   Insn 1021: point = 665, n_alt = 5
   Insn 1020: point = 666, n_alt = 4
   Insn 1019: point = 667, n_alt = 8
   Insn 1018: point = 668, n_alt = 1
   Insn 1017: point = 670, n_alt = 7
   Insn 1016: point = 671, n_alt = 1
   Insn 1015: point = 673, n_alt = 7
   Insn 1014: point = 674, n_alt = 8
   Insn 1013: point = 675, n_alt = 1
   Insn 1012: point = 677, n_alt = 7
   Insn 1011: point = 678, n_alt = 1
   Insn 1010: point = 680, n_alt = 7
   Insn 1009: point = 681, n_alt = 8
   Insn 1008: point = 682, n_alt = 1
   Insn 1007: point = 684, n_alt = 7
   Insn 1006: point = 685, n_alt = 1
   Insn 1005: point = 687, n_alt = 7
   Insn 1004: point = 688, n_alt = 8
   Insn 1003: point = 689, n_alt = 1
   Insn 1002: point = 691, n_alt = 7
   Insn 1001: point = 692, n_alt = 1
   Insn 1000: point = 694, n_alt = 7
   Insn 999: point = 695, n_alt = 8
   Insn 998: point = 696, n_alt = 2
   Insn 997: point = 698, n_alt = -1
   Insn 996: point = 700, n_alt = 1
   Insn 995: point = 702, n_alt = 7
   Insn 994: point = 703, n_alt = 1
   Insn 993: point = 705, n_alt = 7
   Insn 992: point = 706, n_alt = 7
   Insn 991: point = 707, n_alt = 1
   Insn 990: point = 709, n_alt = 7
   Insn 989: point = 710, n_alt = 1
   Insn 988: point = 712, n_alt = 7
   Insn 987: point = 713, n_alt = 1
   Insn 986: point = 715, n_alt = -1
   Insn 985: point = 717, n_alt = 1
   Insn 984: point = 719, n_alt = 7
   Insn 983: point = 720, n_alt = 1
   Insn 982: point = 722, n_alt = 7
   Insn 981: point = 723, n_alt = 1
   Insn 980: point = 725, n_alt = 7
   Insn 979: point = 726, n_alt = 1
   Insn 978: point = 728, n_alt = 7
   Insn 977: point = 729, n_alt = 8
   Insn 976: point = 730, n_alt = 1
   Insn 975: point = 732, n_alt = -1
   Insn 974: point = 734, n_alt = 1
   Insn 973: point = 736, n_alt = 7
   Insn 972: point = 737, n_alt = 1
   Insn 971: point = 739, n_alt = 7
   Insn 970: point = 740, n_alt = 1
   Insn 969: point = 742, n_alt = 7
   Insn 968: point = 743, n_alt = 1
   Insn 967: point = 745, n_alt = 7
   Insn 966: point = 746, n_alt = 7
   Insn 965: point = 747, n_alt = 8
   Insn 964: point = 748, n_alt = 2
   Insn 963: point = 750, n_alt = -1
   Insn 962: point = 752, n_alt = 1
   Insn 961: point = 754, n_alt = 7
   Insn 960: point = 755, n_alt = 1
   Insn 959: point = 757, n_alt = 7
   Insn 958: point = 758, n_alt = 7
   Insn 957: point = 759, n_alt = 1
   Insn 956: point = 761, n_alt = -1
   Insn 1756: point = 763, n_alt = -1
   Insn 955: point = 765, n_alt = 2
   Insn 1755: point = 766, n_alt = -1
   Insn 954: point = 768, n_alt = 7
   Insn 953: point = 769, n_alt = 2
   Insn 952: point = 771, n_alt = 7
   Insn 951: point = 772, n_alt = 7
   Insn 950: point = 773, n_alt = 1
   Insn 949: point = 775, n_alt = 7
   Insn 948: point = 776, n_alt = 1
   Insn 947: point = 778, n_alt = 7
   Insn 946: point = 779, n_alt = 8
   Insn 945: point = 780, n_alt = 1
   Insn 944: point = 782, n_alt = -1
   Insn 1754: point = 784, n_alt = -1
   Insn 943: point = 786, n_alt = 2
   Insn 1753: point = 787, n_alt = -1
   Insn 942: point = 789, n_alt = 7
   Insn 941: point = 790, n_alt = 2
   Insn 940: point = 792, n_alt = 7
   Insn 939: point = 793, n_alt = 7
   Insn 938: point = 794, n_alt = 1
   Insn 937: point = 796, n_alt = 7
   Insn 936: point = 797, n_alt = 1
   Insn 935: point = 799, n_alt = 7
   Insn 934: point = 800, n_alt = 7
   Insn 933: point = 801, n_alt = 8
   Insn 932: point = 802, n_alt = 2
   Insn 931: point = 804, n_alt = 7
   Insn 930: point = 806, n_alt = 3
   Insn 929: point = 807, n_alt = 3
   Insn 928: point = 809, n_alt = 0
   Insn 927: point = 811, n_alt = 0
   Insn 926: point = 812, n_alt = 7
   Insn 925: point = 814, n_alt = 3
   Insn 924: point = 815, n_alt = 3
   Insn 923: point = 817, n_alt = 0
   Insn 922: point = 819, n_alt = 0
   Insn 921: point = 820, n_alt = 8
   Insn 920: point = 821, n_alt = 2
   Insn 919: point = 823, n_alt = -1
   Insn 918: point = 825, n_alt = 1
   Insn 917: point = 827, n_alt = 7
   Insn 916: point = 828, n_alt = 1
   Insn 915: point = 830, n_alt = 7
   Insn 914: point = 831, n_alt = 7
   Insn 913: point = 832, n_alt = 1
   Insn 912: point = 834, n_alt = 7
   Insn 911: point = 835, n_alt = 1
   Insn 910: point = 837, n_alt = 7
   Insn 909: point = 838, n_alt = 8
   Insn 908: point = 839, n_alt = 1
   Insn 907: point = 841, n_alt = 7
   Insn 906: point = 842, n_alt = 0
   Insn 905: point = 844, n_alt = 1
   Insn 904: point = 846, n_alt = 7
   Insn 903: point = 847, n_alt = 1
   Insn 902: point = 849, n_alt = -1
   Insn 901: point = 851, n_alt = 2
   Insn 900: point = 853, n_alt = -1
   Insn 899: point = 855, n_alt = 1
   Insn 898: point = 857, n_alt = 7
   Insn 897: point = 858, n_alt = 1
   Insn 896: point = 860, n_alt = 7
   Insn 895: point = 861, n_alt = 7
   Insn 894: point = 863, n_alt = 3
   Insn 893: point = 864, n_alt = 1
   Insn 892: point = 866, n_alt = 7
   Insn 891: point = 867, n_alt = 7
   Insn 890: point = 869, n_alt = 3
   Insn 889: point = 870, n_alt = 8
   Insn 888: point = 871, n_alt = 2
   Insn 887: point = 873, n_alt = 7
   Insn 886: point = 874, n_alt = 1
   Insn 885: point = 876, n_alt = -1
   Insn 884: point = 877, n_alt = 0
   Insn 883: point = 877, n_alt = -1
   Insn 882: point = 878, n_alt = -1
   Insn 881: point = 879, n_alt = 7
   Insn 880: point = 880, n_alt = 0
   Insn 1752: point = 882, n_alt = -1
   Insn 879: point = 884, n_alt = 2
   Insn 1751: point = 885, n_alt = -1
   Insn 878: point = 887, n_alt = 7
   Insn 877: point = 888, n_alt = 1
   Insn 876: point = 890, n_alt = 7
   Insn 875: point = 891, n_alt = 4
   Insn 874: point = 892, n_alt = 9
   Insn 873: point = 893, n_alt = 0
   Insn 872: point = 893, n_alt = -1
   Insn 871: point = 894, n_alt = 1
   Insn 870: point = 896, n_alt = 2
   Insn 869: point = 897, n_alt = 7
   Insn 868: point = 898, n_alt = 8
  BB 39
   Insn 10: point = 900, n_alt = -1
  BB 38
   Insn 864: point = 903, n_alt = -1
   Insn 863: point = 903, n_alt = 0
   Insn 862: point = 904, n_alt = 0
   Insn 861: point = 906, n_alt = 0
   Insn 860: point = 907, n_alt = 1
   Insn 859: point = 907, n_alt = 0
   Insn 858: point = 908, n_alt = 1
   Insn 857: point = 908, n_alt = 2
   Insn 856: point = 910, n_alt = 7
   Insn 855: point = 912, n_alt = 3
   Insn 854: point = 913, n_alt = 1
   Insn 853: point = 915, n_alt = -1
   Insn 852: point = 917, n_alt = 2
   Insn 851: point = 919, n_alt = 7
   Insn 850: point = 920, n_alt = 7
   Insn 849: point = 921, n_alt = 1
   Insn 848: point = 923, n_alt = 7
   Insn 847: point = 924, n_alt = 7
   Insn 846: point = 926, n_alt = 3
   Insn 845: point = 927, n_alt = 7
   Insn 844: point = 928, n_alt = 8
   Insn 843: point = 929, n_alt = 2
   Insn 842: point = 931, n_alt = 7
   Insn 841: point = 933, n_alt = 3
   Insn 840: point = 934, n_alt = 7
   Insn 839: point = 935, n_alt = 8
   Insn 838: point = 936, n_alt = 2
   Insn 837: point = 938, n_alt = 7
   Insn 836: point = 940, n_alt = 3
   Insn 835: point = 941, n_alt = 7
   Insn 834: point = 943, n_alt = 3
   Insn 833: point = 944, n_alt = 3
   Insn 832: point = 946, n_alt = 0
   Insn 831: point = 948, n_alt = 0
   Insn 830: point = 949, n_alt = 8
   Insn 829: point = 950, n_alt = 2
   Insn 828: point = 952, n_alt = 7
   Insn 827: point = 954, n_alt = 3
   Insn 826: point = 955, n_alt = 7
   Insn 825: point = 957, n_alt = 3
   Insn 824: point = 958, n_alt = 3
   Insn 823: point = 960, n_alt = 0
   Insn 822: point = 962, n_alt = 0
  BB 36
   Insn 815: point = 964, n_alt = 1
   Insn 814: point = 964, n_alt = 0
   Insn 813: point = 966, n_alt = 3
   Insn 812: point = 967, n_alt = 8
   Insn 811: point = 968, n_alt = 7
   Insn 810: point = 969, n_alt = 8
   Insn 809: point = 970, n_alt = 7
   Insn 808: point = 971, n_alt = 8
   Insn 807: point = 972, n_alt = 7
   Insn 806: point = 973, n_alt = 8
   Insn 805: point = 974, n_alt = 7
   Insn 804: point = 975, n_alt = 0
   Insn 803: point = 975, n_alt = -1
   Insn 802: point = 976, n_alt = 3
   Insn 801: point = 977, n_alt = 0
   Insn 800: point = 977, n_alt = -1
   Insn 799: point = 978, n_alt = 4
   Insn 798: point = 978, n_alt = 0
   Insn 797: point = 978, n_alt = 3
   Insn 796: point = 979, n_alt = 0
   Insn 795: point = 979, n_alt = -1
   Insn 794: point = 980, n_alt = 3
   Insn 793: point = 981, n_alt = 1
   Insn 792: point = 981, n_alt = 1
   Insn 791: point = 981, n_alt = 1
   Insn 790: point = 981, n_alt = 5
   Insn 789: point = 982, n_alt = 4
   Insn 788: point = 983, n_alt = 0
   Insn 787: point = 983, n_alt = -1
   Insn 786: point = 984, n_alt = 3
   Insn 785: point = 985, n_alt = 0
   Insn 784: point = 985, n_alt = -1
   Insn 783: point = 986, n_alt = 3
   Insn 782: point = 987, n_alt = 1
   Insn 781: point = 987, n_alt = 1
   Insn 780: point = 987, n_alt = 1
   Insn 779: point = 987, n_alt = 5
   Insn 778: point = 988, n_alt = 4
   Insn 777: point = 989, n_alt = 0
   Insn 776: point = 989, n_alt = -1
   Insn 775: point = 990, n_alt = 3
   Insn 774: point = 991, n_alt = 0
   Insn 773: point = 991, n_alt = -1
   Insn 772: point = 992, n_alt = -1
   Insn 771: point = 993, n_alt = 0
   Insn 770: point = 993, n_alt = 3
   Insn 769: point = 994, n_alt = 3
   Insn 768: point = 995, n_alt = 0
   Insn 767: point = 995, n_alt = -1
   Insn 766: point = 996, n_alt = -1
   Insn 765: point = 997, n_alt = 0
   Insn 764: point = 997, n_alt = 3
   Insn 763: point = 998, n_alt = 3
   Insn 762: point = 999, n_alt = 0
   Insn 761: point = 999, n_alt = -1
   Insn 760: point = 1000, n_alt = -1
   Insn 759: point = 1001, n_alt = 0
   Insn 758: point = 1001, n_alt = 3
   Insn 757: point = 1002, n_alt = 3
   Insn 756: point = 1003, n_alt = 1
   Insn 755: point = 1004, n_alt = 0
   Insn 754: point = 1006, n_alt = 7
   Insn 753: point = 1008, n_alt = 3
   Insn 752: point = 1009, n_alt = 0
   Insn 751: point = 1009, n_alt = -1
   Insn 750: point = 1010, n_alt = 3
   Insn 749: point = 1011, n_alt = 1
   Insn 748: point = 1011, n_alt = 1
   Insn 747: point = 1011, n_alt = 1
   Insn 746: point = 1011, n_alt = 5
   Insn 745: point = 1012, n_alt = 4
   Insn 744: point = 1013, n_alt = 1
   Insn 743: point = 1013, n_alt = 5
   Insn 742: point = 1014, n_alt = 4
   Insn 741: point = 1015, n_alt = 8
   Insn 740: point = 1016, n_alt = 3
   Insn 739: point = 1017, n_alt = 2
   Insn 738: point = 1019, n_alt = 7
   Insn 737: point = 1020, n_alt = -1
   Insn 736: point = 1022, n_alt = 1
   Insn 735: point = 1024, n_alt = 7
   Insn 734: point = 1026, n_alt = 3
   Insn 733: point = 1027, n_alt = 7
   Insn 732: point = 1029, n_alt = 3
   Insn 731: point = 1030, n_alt = 8
   Insn 730: point = 1031, n_alt = 2
   Insn 729: point = 1033, n_alt = -1
   Insn 728: point = 1035, n_alt = 1
   Insn 727: point = 1037, n_alt = 7
   Insn 726: point = 1039, n_alt = 3
   Insn 725: point = 1040, n_alt = 7
   Insn 724: point = 1042, n_alt = 3
   Insn 723: point = 1043, n_alt = 7
   Insn 722: point = 1045, n_alt = 3
  BB 7
   Insn 1665: point = 1046, n_alt = -1
   Insn 281: point = 1046, n_alt = 8
   Insn 280: point = 1047, n_alt = 2
   Insn 279: point = 1049, n_alt = 7
   Insn 278: point = 1050, n_alt = -1
   Insn 277: point = 1052, n_alt = 1
   Insn 276: point = 1054, n_alt = 1
   Insn 275: point = 1056, n_alt = 7
   Insn 274: point = 1057, n_alt = 1
   Insn 273: point = 1059, n_alt = 1
   Insn 272: point = 1061, n_alt = 7
   Insn 271: point = 1062, n_alt = 7
   Insn 270: point = 1064, n_alt = 3
   Insn 1716: point = 1065, n_alt = -1
   Insn 269: point = 1067, n_alt = 1
   Insn 1715: point = 1068, n_alt = -1
   Insn 268: point = 1069, n_alt = 7
   Insn 267: point = 1071, n_alt = 3
   Insn 1714: point = 1072, n_alt = -1
   Insn 266: point = 1074, n_alt = 1
   Insn 1713: point = 1075, n_alt = -1
   Insn 265: point = 1076, n_alt = 7
   Insn 264: point = 1077, n_alt = 8
   Insn 263: point = 1078, n_alt = 1
   Insn 262: point = 1080, n_alt = 7
   Insn 261: point = 1081, n_alt = 7
   Insn 260: point = 1083, n_alt = 3
  BB 5
   Insn 1663: point = 1084, n_alt = -1
   Insn 227: point = 1084, n_alt = 8
   Insn 226: point = 1085, n_alt = 1
   Insn 225: point = 1087, n_alt = 7
   Insn 224: point = 1088, n_alt = 7
   Insn 223: point = 1089, n_alt = 8
   Insn 222: point = 1090, n_alt = 1
   Insn 221: point = 1092, n_alt = 7
   Insn 220: point = 1093, n_alt = 7
   Insn 219: point = 1094, n_alt = 0
   Insn 218: point = 1094, n_alt = -1
   Insn 217: point = 1095, n_alt = 3
   Insn 216: point = 1096, n_alt = 0
   Insn 215: point = 1096, n_alt = -1
   Insn 214: point = 1097, n_alt = -1
   Insn 213: point = 1098, n_alt = 0
   Insn 212: point = 1098, n_alt = 3
   Insn 211: point = 1099, n_alt = 3
   Insn 210: point = 1100, n_alt = 0
   Insn 209: point = 1100, n_alt = -1
   Insn 208: point = 1101, n_alt = 4
   Insn 207: point = 1101, n_alt = 0
   Insn 206: point = 1101, n_alt = 3
   Insn 205: point = 1102, n_alt = 0
   Insn 204: point = 1102, n_alt = -1
   Insn 203: point = 1103, n_alt = 3
   Insn 202: point = 1104, n_alt = 1
   Insn 201: point = 1104, n_alt = 1
   Insn 200: point = 1104, n_alt = 1
   Insn 199: point = 1104, n_alt = 5
   Insn 198: point = 1105, n_alt = 4
  BB 6
   Insn 257: point = 1106, n_alt = 8
   Insn 256: point = 1107, n_alt = 1
   Insn 255: point = 1109, n_alt = 7
   Insn 254: point = 1110, n_alt = -1
   Insn 253: point = 1112, n_alt = 2
   Insn 252: point = 1114, n_alt = 7
   Insn 251: point = 1116, n_alt = 3
   Insn 250: point = 1117, n_alt = 0
   Insn 249: point = 1119, n_alt = 1
   Insn 248: point = 1121, n_alt = 1
   Insn 247: point = 1123, n_alt = 7
   Insn 246: point = 1125, n_alt = 3
   Insn 245: point = 1126, n_alt = 8
   Insn 244: point = 1127, n_alt = 2
   Insn 243: point = 1129, n_alt = 7
   Insn 242: point = 1130, n_alt = -1
   Insn 241: point = 1132, n_alt = 1
   Insn 240: point = 1134, n_alt = 1
   Insn 239: point = 1136, n_alt = 7
   Insn 238: point = 1137, n_alt = 1
   Insn 237: point = 1139, n_alt = 7
   Insn 236: point = 1140, n_alt = 7
   Insn 235: point = 1142, n_alt = 3
   Insn 1712: point = 1143, n_alt = -1
   Insn 234: point = 1145, n_alt = 1
   Insn 1711: point = 1146, n_alt = -1
   Insn 233: point = 1147, n_alt = 7
   Insn 232: point = 1149, n_alt = 3
  BB 4
   Insn 193: point = 1150, n_alt = -1
   Insn 192: point = 1150, n_alt = 1
   Insn 191: point = 1151, n_alt = 7
   Insn 190: point = 1152, n_alt = 8
   Insn 189: point = 1153, n_alt = 1
   Insn 188: point = 1155, n_alt = -1
   Insn 187: point = 1157, n_alt = 1
   Insn 186: point = 1159, n_alt = 1
   Insn 185: point = 1161, n_alt = 7
   Insn 184: point = 1163, n_alt = 3
   Insn 183: point = 1164, n_alt = 1
   Insn 182: point = 1166, n_alt = 1
   Insn 181: point = 1168, n_alt = 1
   Insn 180: point = 1170, n_alt = 7
   Insn 179: point = 1171, n_alt = 7
   Insn 178: point = 1173, n_alt = 3
   Insn 1710: point = 1174, n_alt = -1
   Insn 177: point = 1176, n_alt = 1
   Insn 1709: point = 1177, n_alt = -1
   Insn 176: point = 1178, n_alt = 7
   Insn 1708: point = 1179, n_alt = -1
   Insn 175: point = 1181, n_alt = 1
   Insn 1707: point = 1182, n_alt = -1
   Insn 174: point = 1183, n_alt = 7
   Insn 173: point = 1185, n_alt = 3
   Insn 172: point = 1186, n_alt = 8
   Insn 171: point = 1187, n_alt = 0
   Insn 170: point = 1189, n_alt = 2
   Insn 169: point = 1190, n_alt = 1
   Insn 168: point = 1192, n_alt = 7
   Insn 167: point = 1193, n_alt = 7
   Insn 166: point = 1195, n_alt = 3
  BB 35
   Insn 719: point = 1196, n_alt = 8
   Insn 718: point = 1197, n_alt = 2
   Insn 717: point = 1199, n_alt = 7
   Insn 716: point = 1200, n_alt = -1
   Insn 715: point = 1202, n_alt = 1
   Insn 714: point = 1204, n_alt = 1
   Insn 713: point = 1206, n_alt = 7
   Insn 712: point = 1207, n_alt = 1
   Insn 711: point = 1209, n_alt = -1
   Insn 710: point = 1210, n_alt = 0
   Insn 709: point = 1210, n_alt = 10
   Insn 708: point = 1211, n_alt = 0
   Insn 1748: point = 1211, n_alt = 8
   Insn 707: point = 1213, n_alt = 1
   Insn 1747: point = 1214, n_alt = -1
   Insn 706: point = 1216, n_alt = 7
   Insn 705: point = 1217, n_alt = 7
   Insn 704: point = 1219, n_alt = 3
   Insn 1746: point = 1220, n_alt = 8
   Insn 703: point = 1222, n_alt = 1
   Insn 1745: point = 1223, n_alt = -1
   Insn 702: point = 1224, n_alt = 7
   Insn 701: point = 1226, n_alt = 3
   Insn 700: point = 1227, n_alt = 3
   Insn 699: point = 1228, n_alt = 8
   Insn 698: point = 1229, n_alt = 1
   Insn 697: point = 1231, n_alt = 7
   Insn 696: point = 1232, n_alt = 7
   Insn 695: point = 1234, n_alt = 3
  BB 34
   Insn 1695: point = 1235, n_alt = -1
   Insn 692: point = 1235, n_alt = 0
   Insn 691: point = 1235, n_alt = -1
   Insn 690: point = 1236, n_alt = 3
   Insn 689: point = 1237, n_alt = 0
   Insn 688: point = 1237, n_alt = -1
   Insn 687: point = 1238, n_alt = -1
   Insn 686: point = 1239, n_alt = 0
   Insn 685: point = 1239, n_alt = 3
   Insn 684: point = 1240, n_alt = 3
   Insn 683: point = 1241, n_alt = 0
   Insn 682: point = 1241, n_alt = -1
   Insn 681: point = 1242, n_alt = 4
   Insn 680: point = 1242, n_alt = 0
   Insn 679: point = 1242, n_alt = 3
   Insn 678: point = 1243, n_alt = 0
   Insn 677: point = 1243, n_alt = -1
   Insn 676: point = 1244, n_alt = 3
   Insn 675: point = 1245, n_alt = 1
   Insn 674: point = 1245, n_alt = 1
   Insn 673: point = 1245, n_alt = 1
   Insn 672: point = 1245, n_alt = 5
   Insn 671: point = 1246, n_alt = 4
  BB 59
   Insn 1694: point = 1247, n_alt = -1
  BB 60
   Insn 1699: point = 1247, n_alt = -1
  BB 29
   Insn 1676: point = 1247, n_alt = -1
   Insn 634: point = 1247, n_alt = 0
   Insn 633: point = 1247, n_alt = -1
   Insn 632: point = 1248, n_alt = 3
   Insn 631: point = 1249, n_alt = 0
   Insn 630: point = 1249, n_alt = -1
   Insn 629: point = 1250, n_alt = -1
   Insn 628: point = 1251, n_alt = 0
   Insn 627: point = 1251, n_alt = 3
   Insn 626: point = 1252, n_alt = 3
   Insn 625: point = 1253, n_alt = 0
   Insn 624: point = 1253, n_alt = -1
   Insn 623: point = 1254, n_alt = 4
   Insn 622: point = 1254, n_alt = 0
   Insn 621: point = 1254, n_alt = 3
   Insn 620: point = 1255, n_alt = 0
   Insn 619: point = 1255, n_alt = -1
   Insn 618: point = 1256, n_alt = 3
   Insn 617: point = 1257, n_alt = 1
   Insn 616: point = 1257, n_alt = 1
   Insn 615: point = 1257, n_alt = 1
   Insn 614: point = 1257, n_alt = 5
   Insn 613: point = 1258, n_alt = 4
  BB 28
   Insn 611: point = 1259, n_alt = -1
   Insn 610: point = 1259, n_alt = 0
   Insn 609: point = 1260, n_alt = 0
   Insn 608: point = 1260, n_alt = 0
  BB 26
   Insn 1674: point = 1263, n_alt = -1
   Insn 600: point = 1263, n_alt = 1
  BB 27
   Insn 605: point = 1264, n_alt = 1
  BB 25
   Insn 595: point = 1265, n_alt = -1
   Insn 594: point = 1265, n_alt = 1
   Insn 593: point = 1266, n_alt = 7
   Insn 592: point = 1267, n_alt = 7
  BB 24
   Insn 587: point = 1268, n_alt = -1
   Insn 586: point = 1268, n_alt = 1
   Insn 585: point = 1269, n_alt = 7
  BB 23
   Insn 584: point = 1270, n_alt = -1
   Insn 583: point = 1270, n_alt = 1
   Insn 582: point = 1271, n_alt = 7
   Insn 581: point = 1272, n_alt = 8
   Insn 580: point = 1273, n_alt = 0
   Insn 579: point = 1275, n_alt = 2
   Insn 578: point = 1276, n_alt = 2
   Insn 577: point = 1278, n_alt = 7
   Insn 576: point = 1279, n_alt = 8
   Insn 575: point = 1280, n_alt = 1
   Insn 574: point = 1282, n_alt = 1
   Insn 573: point = 1284, n_alt = -1
   Insn 572: point = 1286, n_alt = 1
   Insn 571: point = 1288, n_alt = 7
   Insn 570: point = 1290, n_alt = 3
   Insn 569: point = 1291, n_alt = 7
   Insn 568: point = 1293, n_alt = 3
   Insn 567: point = 1294, n_alt = 1
   Insn 566: point = 1296, n_alt = 1
   Insn 565: point = 1298, n_alt = 1
   Insn 564: point = 1300, n_alt = -1
   Insn 563: point = 1302, n_alt = 1
   Insn 562: point = 1304, n_alt = 1
   Insn 561: point = 1306, n_alt = 7
   Insn 560: point = 1308, n_alt = 3
   Insn 559: point = 1309, n_alt = 1
   Insn 558: point = 1311, n_alt = 7
   Insn 557: point = 1312, n_alt = 1
   Insn 556: point = 1314, n_alt = 7
   Insn 555: point = 1315, n_alt = 8
   Insn 554: point = 1316, n_alt = 2
   Insn 553: point = 1318, n_alt = 2
   Insn 552: point = 1320, n_alt = -1
   Insn 551: point = 1322, n_alt = 1
   Insn 550: point = 1324, n_alt = 1
   Insn 549: point = 1326, n_alt = 7
   Insn 548: point = 1327, n_alt = 1
   Insn 547: point = 1329, n_alt = 7
   Insn 546: point = 1330, n_alt = 7
   Insn 545: point = 1332, n_alt = 3
   Insn 544: point = 1333, n_alt = 1
   Insn 543: point = 1335, n_alt = 7
   Insn 542: point = 1336, n_alt = 7
   Insn 541: point = 1337, n_alt = 1
   Insn 540: point = 1339, n_alt = 1
   Insn 539: point = 1341, n_alt = 1
   Insn 538: point = 1343, n_alt = -1
   Insn 537: point = 1345, n_alt = 1
   Insn 536: point = 1347, n_alt = 7
   Insn 535: point = 1349, n_alt = 3
   Insn 534: point = 1350, n_alt = 7
   Insn 533: point = 1352, n_alt = 3
   Insn 532: point = 1353, n_alt = 1
   Insn 531: point = 1355, n_alt = 1
   Insn 530: point = 1357, n_alt = -1
   Insn 529: point = 1359, n_alt = 1
   Insn 528: point = 1361, n_alt = 1
   Insn 527: point = 1363, n_alt = 7
   Insn 526: point = 1365, n_alt = 3
   Insn 525: point = 1366, n_alt = -1
   Insn 524: point = 1367, n_alt = 0
   Insn 523: point = 1367, n_alt = 10
   Insn 522: point = 1368, n_alt = 0
   Insn 1742: point = 1368, n_alt = 8
   Insn 521: point = 1370, n_alt = 1
   Insn 1741: point = 1371, n_alt = -1
   Insn 520: point = 1372, n_alt = 7
   Insn 519: point = 1374, n_alt = 3
   Insn 1740: point = 1375, n_alt = 8
   Insn 518: point = 1377, n_alt = 1
   Insn 1739: point = 1378, n_alt = -1
   Insn 517: point = 1379, n_alt = 7
   Insn 516: point = 1380, n_alt = 3
  BB 22
   Insn 514: point = 1381, n_alt = -1
   Insn 513: point = 1381, n_alt = 0
   Insn 512: point = 1382, n_alt = 0
   Insn 511: point = 1383, n_alt = 0
  BB 33
   Insn 1678: point = 1383, n_alt = -1
   Insn 665: point = 1383, n_alt = 1
   Insn 664: point = 1383, n_alt = 8
  BB 32
   Insn 661: point = 1385, n_alt = 7
  BB 31
   Insn 659: point = 1386, n_alt = -1
   Insn 658: point = 1386, n_alt = 0
   Insn 657: point = 1387, n_alt = 0
   Insn 656: point = 1389, n_alt = 0
   Insn 655: point = 1390, n_alt = 1
   Insn 654: point = 1390, n_alt = 0
   Insn 653: point = 1391, n_alt = 1
   Insn 652: point = 1392, n_alt = 7
   Insn 651: point = 1393, n_alt = 7
  BB 30
   Insn 649: point = 1394, n_alt = -1
   Insn 648: point = 1394, n_alt = 1
   Insn 647: point = 1395, n_alt = 7
   Insn 646: point = 1396, n_alt = 0
   Insn 645: point = 1398, n_alt = 2
   Insn 644: point = 1399, n_alt = 2
   Insn 643: point = 1401, n_alt = 7
   Insn 642: point = 1402, n_alt = 8
   Insn 641: point = 1403, n_alt = 1
   Insn 640: point = 1405, n_alt = 7
   Insn 639: point = 1406, n_alt = 7
  BB 21
   Insn 509: point = 1407, n_alt = 1
   Insn 508: point = 1407, n_alt = 8
   Insn 507: point = 1408, n_alt = 1
   Insn 506: point = 1410, n_alt = 2
   Insn 505: point = 1411, n_alt = 7
  BB 17
   Insn 1672: point = 1412, n_alt = -1
   Insn 454: point = 1412, n_alt = 8
   Insn 453: point = 1413, n_alt = 1
   Insn 452: point = 1415, n_alt = 7
   Insn 451: point = 1416, n_alt = 7
   Insn 450: point = 1417, n_alt = 8
   Insn 449: point = 1418, n_alt = 1
   Insn 448: point = 1420, n_alt = 7
   Insn 447: point = 1421, n_alt = 7
   Insn 446: point = 1422, n_alt = 0
   Insn 445: point = 1422, n_alt = -1
   Insn 444: point = 1423, n_alt = 3
   Insn 443: point = 1424, n_alt = 0
   Insn 442: point = 1424, n_alt = -1
   Insn 441: point = 1425, n_alt = -1
   Insn 440: point = 1426, n_alt = 0
   Insn 439: point = 1426, n_alt = 3
   Insn 438: point = 1427, n_alt = 3
   Insn 437: point = 1428, n_alt = 0
   Insn 436: point = 1428, n_alt = -1
   Insn 435: point = 1429, n_alt = 4
   Insn 434: point = 1429, n_alt = 0
   Insn 433: point = 1429, n_alt = 3
   Insn 432: point = 1430, n_alt = 0
   Insn 431: point = 1430, n_alt = -1
   Insn 430: point = 1431, n_alt = 3
   Insn 429: point = 1432, n_alt = 1
   Insn 428: point = 1432, n_alt = 1
   Insn 427: point = 1432, n_alt = 1
   Insn 426: point = 1432, n_alt = 5
   Insn 425: point = 1433, n_alt = 4
  BB 20
   Insn 502: point = 1434, n_alt = 8
  BB 19
   Insn 9: point = 1436, n_alt = -1
  BB 18
   Insn 498: point = 1439, n_alt = -1
   Insn 497: point = 1439, n_alt = 0
   Insn 496: point = 1440, n_alt = 0
   Insn 495: point = 1442, n_alt = 0
   Insn 494: point = 1443, n_alt = 1
   Insn 493: point = 1443, n_alt = 0
   Insn 492: point = 1444, n_alt = 1
   Insn 491: point = 1444, n_alt = 1
   Insn 490: point = 1446, n_alt = 1
   Insn 489: point = 1448, n_alt = 7
   Insn 488: point = 1449, n_alt = 7
   Insn 487: point = 1450, n_alt = 7
   Insn 486: point = 1451, n_alt = 8
   Insn 485: point = 1452, n_alt = 3
   Insn 1738: point = 1454, n_alt = 6
   Insn 1737: point = 1455, n_alt = -1
   Insn 484: point = 1456, n_alt = 2
   Insn 483: point = 1457, n_alt = 2
   Insn 482: point = 1458, n_alt = 7
   Insn 481: point = 1459, n_alt = 7
   Insn 480: point = 1460, n_alt = 4
   Insn 479: point = 1461, n_alt = 9
   Insn 478: point = 1462, n_alt = 0
   Insn 477: point = 1462, n_alt = -1
   Insn 476: point = 1463, n_alt = 7
   Insn 475: point = 1463, n_alt = 1
   Insn 474: point = 1465, n_alt = 2
   Insn 473: point = 1466, n_alt = 7
   Insn 472: point = 1467, n_alt = 8
   Insn 471: point = 1468, n_alt = 2
   Insn 470: point = 1470, n_alt = 7
   Insn 469: point = 1471, n_alt = -1
   Insn 468: point = 1473, n_alt = 1
   Insn 467: point = 1475, n_alt = 1
   Insn 466: point = 1477, n_alt = 7
   Insn 465: point = 1478, n_alt = 1
   Insn 464: point = 1480, n_alt = 7
   Insn 463: point = 1481, n_alt = 7
   Insn 462: point = 1483, n_alt = 3
   Insn 1736: point = 1484, n_alt = -1
   Insn 461: point = 1486, n_alt = 1
   Insn 1735: point = 1487, n_alt = -1
   Insn 460: point = 1488, n_alt = 7
   Insn 459: point = 1490, n_alt = 3
  BB 16
   Insn 423: point = 1491, n_alt = -1
   Insn 422: point = 1491, n_alt = 0
   Insn 421: point = 1492, n_alt = 0
   Insn 420: point = 1492, n_alt = 0
  BB 14
   Insn 1670: point = 1495, n_alt = -1
   Insn 412: point = 1495, n_alt = 1
  BB 15
   Insn 417: point = 1496, n_alt = 1
  BB 13
   Insn 406: point = 1497, n_alt = -1
   Insn 405: point = 1497, n_alt = 1
   Insn 404: point = 1498, n_alt = 7
  BB 12
   Insn 401: point = 1499, n_alt = -1
   Insn 400: point = 1499, n_alt = 1
   Insn 399: point = 1500, n_alt = 7
  BB 11
   Insn 398: point = 1502, n_alt = -1
   Insn 397: point = 1502, n_alt = 1
   Insn 396: point = 1503, n_alt = 7
   Insn 395: point = 1504, n_alt = 7
   Insn 394: point = 1506, n_alt = 3
   Insn 393: point = 1507, n_alt = 8
   Insn 392: point = 1508, n_alt = 1
   Insn 391: point = 1510, n_alt = -1
   Insn 390: point = 1512, n_alt = 1
   Insn 389: point = 1514, n_alt = 1
   Insn 388: point = 1516, n_alt = 1
   Insn 387: point = 1518, n_alt = -1
   Insn 386: point = 1520, n_alt = 1
   Insn 385: point = 1522, n_alt = 7
   Insn 384: point = 1524, n_alt = 3
   Insn 383: point = 1525, n_alt = 7
   Insn 382: point = 1527, n_alt = 3
   Insn 381: point = 1528, n_alt = 1
   Insn 380: point = 1530, n_alt = 1
   Insn 379: point = 1532, n_alt = -1
   Insn 378: point = 1534, n_alt = 1
   Insn 377: point = 1536, n_alt = 1
   Insn 376: point = 1538, n_alt = 7
   Insn 375: point = 1540, n_alt = 3
   Insn 374: point = 1541, n_alt = -1
   Insn 373: point = 1542, n_alt = 0
   Insn 372: point = 1542, n_alt = 10
   Insn 371: point = 1543, n_alt = 0
   Insn 1732: point = 1543, n_alt = 8
   Insn 370: point = 1545, n_alt = 1
   Insn 1731: point = 1546, n_alt = -1
   Insn 369: point = 1547, n_alt = 1
   Insn 368: point = 1549, n_alt = 1
   Insn 367: point = 1551, n_alt = 7
   Insn 366: point = 1552, n_alt = 7
   Insn 365: point = 1554, n_alt = 3
   Insn 1730: point = 1555, n_alt = 8
   Insn 364: point = 1557, n_alt = 1
   Insn 1729: point = 1558, n_alt = -1
   Insn 363: point = 1559, n_alt = 7
   Insn 362: point = 1560, n_alt = 3
   Insn 1728: point = 1561, n_alt = -1
   Insn 361: point = 1563, n_alt = 1
   Insn 1727: point = 1564, n_alt = -1
   Insn 360: point = 1565, n_alt = 7
   Insn 359: point = 1567, n_alt = 3
   Insn 358: point = 1568, n_alt = 8
   Insn 357: point = 1569, n_alt = 1
   Insn 356: point = 1571, n_alt = 7
   Insn 355: point = 1572, n_alt = -1
   Insn 354: point = 1574, n_alt = 2
   Insn 1726: point = 1576, n_alt = -1
   Insn 353: point = 1578, n_alt = 2
   Insn 1725: point = 1579, n_alt = -1
   Insn 352: point = 1581, n_alt = 1
   Insn 351: point = 1583, n_alt = 7
   Insn 350: point = 1585, n_alt = 3
   Insn 349: point = 1586, n_alt = 0
   Insn 348: point = 1588, n_alt = 1
   Insn 347: point = 1590, n_alt = 1
   Insn 346: point = 1592, n_alt = 1
   Insn 345: point = 1594, n_alt = 7
   Insn 344: point = 1596, n_alt = 3
   Insn 1724: point = 1597, n_alt = -1
   Insn 343: point = 1599, n_alt = 1
   Insn 1723: point = 1600, n_alt = -1
   Insn 342: point = 1601, n_alt = 7
   Insn 1722: point = 1602, n_alt = -1
   Insn 341: point = 1604, n_alt = 1
   Insn 1721: point = 1605, n_alt = -1
   Insn 340: point = 1606, n_alt = 7
   Insn 339: point = 1608, n_alt = 3
   Insn 338: point = 1609, n_alt = 8
   Insn 337: point = 1610, n_alt = 2
   Insn 336: point = 1612, n_alt = 1
   Insn 335: point = 1614, n_alt = 1
   Insn 334: point = 1616, n_alt = 7
   Insn 333: point = 1618, n_alt = 3
   Insn 1720: point = 1619, n_alt = -1
   Insn 332: point = 1621, n_alt = 1
   Insn 1719: point = 1622, n_alt = -1
   Insn 331: point = 1623, n_alt = 7
   Insn 330: point = 1625, n_alt = 3
  BB 58
   Insn 1691: point = 1626, n_alt = -1
  BB 9
   Insn 295: point = 1626, n_alt = -1
   Insn 294: point = 1626, n_alt = 0
   Insn 293: point = 1627, n_alt = 0
   Insn 292: point = 1628, n_alt = 0
  BB 10
   Insn 1667: point = 1629, n_alt = -1
   Insn 324: point = 1629, n_alt = 1
   Insn 323: point = 1629, n_alt = 8
   Insn 322: point = 1630, n_alt = 1
   Insn 321: point = 1632, n_alt = 7
   Insn 320: point = 1633, n_alt = 1
   Insn 319: point = 1635, n_alt = 7
   Insn 318: point = 1637, n_alt = 3
   Insn 317: point = 1638, n_alt = 3
   Insn 316: point = 1640, n_alt = 0
   Insn 315: point = 1642, n_alt = 0
   Insn 314: point = 1643, n_alt = 1
   Insn 313: point = 1645, n_alt = 2
   Insn 312: point = 1647, n_alt = 7
   Insn 311: point = 1649, n_alt = 3
   Insn 310: point = 1650, n_alt = 3
   Insn 309: point = 1652, n_alt = 0
   Insn 308: point = 1654, n_alt = 0
   Insn 307: point = 1655, n_alt = 7
   Insn 306: point = 1657, n_alt = 3
   Insn 305: point = 1658, n_alt = 3
   Insn 304: point = 1660, n_alt = 0
   Insn 303: point = 1662, n_alt = 0
   Insn 1718: point = 1663, n_alt = -1
   Insn 302: point = 1665, n_alt = 1
   Insn 1717: point = 1666, n_alt = -1
   Insn 301: point = 1667, n_alt = 7
   Insn 300: point = 1669, n_alt = 3
   Insn 299: point = 1670, n_alt = 3
   Insn 298: point = 1672, n_alt = 0
   Insn 297: point = 1674, n_alt = 0
  BB 8
   Insn 290: point = 1676, n_alt = 1
   Insn 289: point = 1676, n_alt = 0
   Insn 288: point = 1678, n_alt = 3
   Insn 287: point = 1679, n_alt = 8
   Insn 286: point = 1680, n_alt = 7
  BB 3
   Insn 161: point = 1681, n_alt = -1
   Insn 160: point = 1681, n_alt = 1
   Insn 159: point = 1682, n_alt = 7
  BB 2
   Insn 158: point = 1684, n_alt = -1
   Insn 157: point = 1684, n_alt = 1
   Insn 156: point = 1685, n_alt = 7
   Insn 155: point = 1686, n_alt = 7
   Insn 154: point = 1688, n_alt = 3
   Insn 153: point = 1689, n_alt = 8
   Insn 152: point = 1690, n_alt = 7
   Insn 151: point = 1692, n_alt = 3
   Insn 150: point = 1693, n_alt = 8
   Insn 149: point = 1694, n_alt = 7
   Insn 148: point = 1696, n_alt = 3
   Insn 144: point = 1697, n_alt = 2
   Insn 143: point = 1698, n_alt = 3
   Insn 142: point = 1699, n_alt = -1
   Insn 140: point = 1701, n_alt = 1
   Insn 138: point = 1703, n_alt = 0
   Insn 139: point = 1703, n_alt = 2
   Insn 137: point = 1704, n_alt = 3
   Insn 136: point = 1705, n_alt = 5
   Insn 135: point = 1706, n_alt = 0
   Insn 134: point = 1708, n_alt = 0
   Insn 133: point = 1710, n_alt = 3
   Insn 129: point = 1711, n_alt = 5
   Insn 128: point = 1712, n_alt = 5
   Insn 127: point = 1713, n_alt = -1
   Insn 125: point = 1715, n_alt = 1
   Insn 123: point = 1717, n_alt = 0
   Insn 124: point = 1717, n_alt = 2
   Insn 122: point = 1718, n_alt = 3
   Insn 121: point = 1719, n_alt = 5
   Insn 120: point = 1720, n_alt = 0
   Insn 119: point = 1722, n_alt = 0
   Insn 118: point = 1724, n_alt = 3
   Insn 114: point = 1725, n_alt = 5
   Insn 113: point = 1726, n_alt = 5
   Insn 112: point = 1727, n_alt = -1
   Insn 110: point = 1729, n_alt = 1
   Insn 108: point = 1731, n_alt = 0
   Insn 109: point = 1731, n_alt = 2
   Insn 107: point = 1732, n_alt = 3
   Insn 106: point = 1733, n_alt = 5
   Insn 105: point = 1734, n_alt = 0
   Insn 104: point = 1736, n_alt = 0
   Insn 103: point = 1738, n_alt = 3
   Insn 99: point = 1739, n_alt = 5
   Insn 98: point = 1740, n_alt = 5
   Insn 97: point = 1741, n_alt = -1
   Insn 95: point = 1743, n_alt = 1
   Insn 93: point = 1745, n_alt = 0
   Insn 94: point = 1745, n_alt = 2
   Insn 92: point = 1746, n_alt = 3
   Insn 91: point = 1747, n_alt = 5
   Insn 90: point = 1748, n_alt = 0
   Insn 89: point = 1750, n_alt = 0
   Insn 88: point = 1752, n_alt = 3
   Insn 84: point = 1753, n_alt = 5
   Insn 83: point = 1754, n_alt = 5
   Insn 82: point = 1755, n_alt = -1
   Insn 80: point = 1757, n_alt = 1
   Insn 78: point = 1759, n_alt = 0
   Insn 79: point = 1759, n_alt = 2
   Insn 77: point = 1760, n_alt = 3
   Insn 76: point = 1761, n_alt = 5
   Insn 75: point = 1762, n_alt = 0
   Insn 74: point = 1764, n_alt = 0
   Insn 73: point = 1766, n_alt = 3
   Insn 69: point = 1767, n_alt = 5
   Insn 68: point = 1768, n_alt = 5
   Insn 67: point = 1769, n_alt = -1
   Insn 65: point = 1771, n_alt = 1
   Insn 63: point = 1773, n_alt = 0
   Insn 64: point = 1773, n_alt = 2
   Insn 62: point = 1774, n_alt = 3
   Insn 61: point = 1775, n_alt = 5
   Insn 60: point = 1776, n_alt = 0
   Insn 59: point = 1778, n_alt = 0
   Insn 58: point = 1780, n_alt = 3
   Insn 54: point = 1781, n_alt = 5
   Insn 53: point = 1782, n_alt = 5
   Insn 52: point = 1783, n_alt = -1
   Insn 50: point = 1785, n_alt = 1
   Insn 48: point = 1787, n_alt = 0
   Insn 49: point = 1787, n_alt = 2
   Insn 47: point = 1788, n_alt = 3
   Insn 46: point = 1789, n_alt = 5
   Insn 45: point = 1790, n_alt = 0
   Insn 44: point = 1792, n_alt = 0
   Insn 43: point = 1794, n_alt = 3
   Insn 39: point = 1795, n_alt = 2
   Insn 38: point = 1796, n_alt = 3
   Insn 37: point = 1797, n_alt = -1
   Insn 35: point = 1799, n_alt = 1
   Insn 33: point = 1801, n_alt = 0
   Insn 34: point = 1801, n_alt = 2
   Insn 32: point = 1802, n_alt = 3
   Insn 31: point = 1803, n_alt = 5
   Insn 30: point = 1804, n_alt = 0
   Insn 29: point = 1806, n_alt = 0
   Insn 28: point = 1808, n_alt = 3
   Insn 24: point = 1809, n_alt = 2
   Insn 23: point = 1810, n_alt = 3
   Insn 22: point = 1811, n_alt = -1
   Insn 20: point = 1813, n_alt = 1
   Insn 18: point = 1815, n_alt = 0
   Insn 19: point = 1815, n_alt = 2
   Insn 17: point = 1816, n_alt = 3
   Insn 16: point = 1817, n_alt = 5
   Insn 15: point = 1818, n_alt = 0
   Insn 14: point = 1820, n_alt = 0
   Insn 13: point = 1822, n_alt = 3
   Insn 7: point = 1823, n_alt = 5
   Insn 6: point = 1823, n_alt = 5
   Insn 5: point = 1823, n_alt = 5
   Insn 4: point = 1823, n_alt = 5
   Insn 3: point = 1823, n_alt = 5
   Insn 2: point = 1823, n_alt = 5
 r97: [1781..1823]
 r101: [1767..1823]
 r105: [1753..1823]
 r109: [1739..1823]
 r113: [1725..1823]
 r117: [1711..1823]
 r189: [1509..1543]
 r268: [1208..1211]
 r456: [254..257]
 r504: [432..435]
 r532: [128..132]
 r642: [1531..1555]
 r650: [1356..1375]
 r652: [1323..1368]
 r657: [1203..1220]
 r687: [427..444]
 r700: [249..266]
 r704: [120..161]
 r706: [118..142]
Compressing live ranges: from 1824 to 14 - 0%
Ranges after the compression:
 r97: [12..13]
 r101: [12..13]
 r105: [12..13]
 r109: [12..13]
 r113: [12..13]
 r117: [12..13]
 r189: [10..11]
 r268: [6..7]
 r456: [2..3]
 r504: [4..5]
 r532: [0..1]
 r642: [10..11]
 r650: [8..9]
 r652: [8..9]
 r657: [6..7]
 r687: [4..5]
 r700: [2..3]
 r704: [0..1]
 r706: [0..1]
  Slot 0 regnos (width = 0):	 97	 650	 532	 504	 456	 268	 189
  Slot 1 regnos (width = 0):	 101	 704	 700	 687	 657	 652	 642
  Slot 2 regnos (width = 0):	 105	 706
  Slot 3 regnos (width = 0):	 109
  Slot 4 regnos (width = 0):	 113
  Slot 5 regnos (width = 0):	 117
Changing spilled pseudos to memory in insn #53
Changing spilled pseudos to memory in insn #54
Changing spilled pseudos to memory in insn #68
Changing spilled pseudos to memory in insn #69
Changing spilled pseudos to memory in insn #83
Changing spilled pseudos to memory in insn #84
Changing spilled pseudos to memory in insn #98
Changing spilled pseudos to memory in insn #99
Changing spilled pseudos to memory in insn #113
Changing spilled pseudos to memory in insn #114
Changing spilled pseudos to memory in insn #128
Changing spilled pseudos to memory in insn #129
Changing spilled pseudos to memory in insn #1730
Changing spilled pseudos to memory in insn #1732
Changing spilled pseudos to memory in insn #380
Changing spilled pseudos to memory in insn #392
Changing spilled pseudos to memory in insn #1740
Changing spilled pseudos to memory in insn #1742
Changing spilled pseudos to memory in insn #531
Changing spilled pseudos to memory in insn #551
Changing spilled pseudos to memory in insn #1746
Changing spilled pseudos to memory in insn #1748
Changing spilled pseudos to memory in insn #712
Changing spilled pseudos to memory in insn #715
Changing spilled pseudos to memory in insn #1768
Changing spilled pseudos to memory in insn #1770
Changing spilled pseudos to memory in insn #1245
Changing spilled pseudos to memory in insn #1248
Changing spilled pseudos to memory in insn #1784
Changing spilled pseudos to memory in insn #1786
Changing spilled pseudos to memory in insn #1432
Changing spilled pseudos to memory in insn #1435
Changing spilled pseudos to memory in insn #1792
Changing spilled pseudos to memory in insn #1794
Changing spilled pseudos to memory in insn #1796
Changing spilled pseudos to memory in insn #1548
Changing spilled pseudos to memory in insn #1800
Changing spilled pseudos to memory in insn #1551
	   Spilling non-eliminable hard regs: 6

********** Local #4: **********

	   Spilling non-eliminable hard regs: 6
Reusing alternative 1 for insn #1551
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1551:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
Reusing alternative 7 for insn #1800
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1800:  (0) v  (1) m {*movsf_internal}
Reusing alternative 1 for insn #1548
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1548:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
Reusing alternative 8 for insn #1796
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1796:  (0) m  (1) v {*movsf_internal}
Reusing alternative 8 for insn #1794
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1794:  (0) m  (1) v {*movsf_internal}
Reusing alternative 8 for insn #1792
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1792:  (0) m  (1) v {*movsf_internal}
Reusing alternative 1 for insn #1435
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1435:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
Reusing alternative 1 for insn #1432
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1432:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
Reusing alternative 8 for insn #1786
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1786:  (0) m  (1) v {*movsf_internal}
Reusing alternative 8 for insn #1784
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1784:  (0) m  (1) v {*movsf_internal}
Reusing alternative 1 for insn #1248
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1248:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
Reusing alternative 1 for insn #1245
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1245:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
Reusing alternative 8 for insn #1770
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1770:  (0) m  (1) v {*movsf_internal}
Reusing alternative 8 for insn #1768
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1768:  (0) m  (1) v {*movsf_internal}
Reusing alternative 1 for insn #715
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 715:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
Reusing alternative 1 for insn #712
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 712:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
Reusing alternative 8 for insn #1748
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1748:  (0) m  (1) v {*movsf_internal}
Reusing alternative 8 for insn #1746
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1746:  (0) m  (1) v {*movsf_internal}
Reusing alternative 1 for insn #551
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 551:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
Reusing alternative 1 for insn #531
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 531:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
Reusing alternative 8 for insn #1742
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1742:  (0) m  (1) v {*movsf_internal}
Reusing alternative 8 for insn #1740
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1740:  (0) m  (1) v {*movsf_internal}
Reusing alternative 1 for insn #392
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 392:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
Reusing alternative 1 for insn #380
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 380:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
Reusing alternative 8 for insn #1732
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1732:  (0) m  (1) v {*movsf_internal}
Reusing alternative 8 for insn #1730
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1730:  (0) m  (1) v {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 129:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 128:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 114:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 113:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 99:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 98:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 84:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 83:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 69:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 68:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 54:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 53:  (0) m  (1) re {*movdi_internal}
	   Spilling non-eliminable hard regs: 6

********** Pseudo live ranges #4: **********

  BB 57
   Insn 1660: point = 0, n_alt = -1
  BB 62
   Insn 1705: point = 0, n_alt = -1
  BB 55
   Insn 1498: point = 0, n_alt = -1
   Insn 1497: point = 0, n_alt = 0
   Insn 1496: point = 1, n_alt = 0
   Insn 1495: point = 2, n_alt = 0
  BB 56
   Insn 1687: point = 3, n_alt = -1
   Insn 1620: point = 3, n_alt = 1
   Insn 1619: point = 3, n_alt = 8
   Insn 1618: point = 4, n_alt = 3
   Insn 1617: point = 5, n_alt = 2
   Insn 1616: point = 7, n_alt = 3
   Insn 1615: point = 9, n_alt = 0
   Insn 1614: point = 11, n_alt = 0
   Insn 1613: point = 12, n_alt = -1
   Insn 1612: point = 14, n_alt = 1
   Insn 1611: point = 16, n_alt = 7
   Insn 1610: point = 18, n_alt = 3
   Insn 1609: point = 19, n_alt = 3
   Insn 1608: point = 21, n_alt = 0
   Insn 1607: point = 23, n_alt = 0
   Insn 1606: point = 24, n_alt = 1
   Insn 1605: point = 26, n_alt = 7
   Insn 1604: point = 28, n_alt = 3
   Insn 1603: point = 29, n_alt = 3
   Insn 1602: point = 31, n_alt = 0
   Insn 1601: point = 33, n_alt = 0
   Insn 1600: point = 34, n_alt = 8
   Insn 1599: point = 35, n_alt = 3
   Insn 1598: point = 36, n_alt = 2
   Insn 1597: point = 38, n_alt = 3
   Insn 1596: point = 40, n_alt = 0
   Insn 1595: point = 42, n_alt = 0
   Insn 1594: point = 43, n_alt = 7
   Insn 1593: point = 45, n_alt = 3
   Insn 1592: point = 46, n_alt = 1
   Insn 1591: point = 48, n_alt = 1
   Insn 1590: point = 50, n_alt = 7
   Insn 1589: point = 51, n_alt = 1
   Insn 1588: point = 53, n_alt = 7
   Insn 1587: point = 54, n_alt = -1
   Insn 1586: point = 56, n_alt = 2
   Insn 1585: point = 58, n_alt = 7
   Insn 1584: point = 60, n_alt = 3
   Insn 1583: point = 61, n_alt = 1
   Insn 1582: point = 63, n_alt = 7
   Insn 1806: point = 64, n_alt = -1
   Insn 1581: point = 66, n_alt = 1
   Insn 1805: point = 67, n_alt = -1
   Insn 1580: point = 68, n_alt = 7
   Insn 1579: point = 69, n_alt = 8
   Insn 1578: point = 70, n_alt = 3
   Insn 1577: point = 71, n_alt = 1
   Insn 1576: point = 73, n_alt = 3
   Insn 1575: point = 75, n_alt = 0
   Insn 1574: point = 77, n_alt = 0
   Insn 1804: point = 78, n_alt = -1
   Insn 1573: point = 80, n_alt = 2
   Insn 1803: point = 81, n_alt = -1
   Insn 1572: point = 83, n_alt = 7
   Insn 1571: point = 85, n_alt = 3
   Insn 1570: point = 86, n_alt = 3
   Insn 1569: point = 88, n_alt = 0
   Insn 1568: point = 90, n_alt = 0
   Insn 1567: point = 91, n_alt = -1
   Insn 1566: point = 93, n_alt = 2
   Insn 1565: point = 95, n_alt = 7
   Insn 1564: point = 97, n_alt = 3
   Insn 1563: point = 98, n_alt = 3
   Insn 1562: point = 100, n_alt = 0
   Insn 1561: point = 102, n_alt = 0
   Insn 1560: point = 103, n_alt = 7
   Insn 1559: point = 105, n_alt = 3
   Insn 1558: point = 106, n_alt = 3
   Insn 1557: point = 108, n_alt = 0
   Insn 1556: point = 110, n_alt = 0
   Insn 1555: point = 111, n_alt = 8
   Insn 1554: point = 112, n_alt = 0
   Insn 1553: point = 113, n_alt = 8
   Insn 1552: point = 114, n_alt = 2
   Insn 1801: point = 116, n_alt = -1
   Insn 1551: point = 118, n_alt = 1
   Insn 1800: point = 118, n_alt = 7
   Insn 1799: point = 119, n_alt = -1
   Insn 1550: point = 121, n_alt = 1
   Insn 1798: point = 122, n_alt = -1
   Insn 1549: point = 123, n_alt = -1
   Insn 1548: point = 125, n_alt = 1
   Insn 1547: point = 127, n_alt = -1
   Insn 1546: point = 128, n_alt = 0
   Insn 1545: point = 128, n_alt = 10
   Insn 1544: point = 129, n_alt = 3
   Insn 1796: point = 130, n_alt = 8
   Insn 1543: point = 131, n_alt = 1
   Insn 1795: point = 132, n_alt = -1
   Insn 1542: point = 134, n_alt = 7
   Insn 1541: point = 135, n_alt = 1
   Insn 1540: point = 137, n_alt = 7
   Insn 1539: point = 138, n_alt = 7
   Insn 1794: point = 139, n_alt = 8
   Insn 1538: point = 140, n_alt = 1
   Insn 1793: point = 141, n_alt = -1
   Insn 1537: point = 142, n_alt = -1
   Insn 1536: point = 144, n_alt = 1
   Insn 1535: point = 146, n_alt = 7
   Insn 1534: point = 148, n_alt = 3
   Insn 1533: point = 149, n_alt = 3
   Insn 1532: point = 151, n_alt = 0
   Insn 1531: point = 153, n_alt = 0
   Insn 1530: point = 154, n_alt = 7
   Insn 1529: point = 156, n_alt = 3
   Insn 1792: point = 157, n_alt = 8
   Insn 1528: point = 158, n_alt = 1
   Insn 1791: point = 159, n_alt = -1
   Insn 1527: point = 160, n_alt = 7
   Insn 1526: point = 162, n_alt = 3
   Insn 1525: point = 163, n_alt = 4
   Insn 1524: point = 164, n_alt = 9
   Insn 1523: point = 165, n_alt = 0
   Insn 1522: point = 165, n_alt = -1
   Insn 1521: point = 166, n_alt = -1
   Insn 1520: point = 167, n_alt = 1
   Insn 1519: point = 169, n_alt = 1
   Insn 1518: point = 171, n_alt = 1
   Insn 1517: point = 173, n_alt = 7
   Insn 1516: point = 174, n_alt = 7
   Insn 1515: point = 175, n_alt = 7
   Insn 1514: point = 177, n_alt = 3
   Insn 1790: point = 178, n_alt = -1
   Insn 1513: point = 180, n_alt = 1
   Insn 1789: point = 181, n_alt = -1
   Insn 1512: point = 183, n_alt = 7
   Insn 1511: point = 185, n_alt = 3
   Insn 1510: point = 186, n_alt = 3
   Insn 1509: point = 188, n_alt = 0
   Insn 1508: point = 190, n_alt = 0
   Insn 1507: point = 191, n_alt = 7
   Insn 1506: point = 193, n_alt = 3
   Insn 1505: point = 194, n_alt = 8
   Insn 1504: point = 195, n_alt = 7
   Insn 1503: point = 197, n_alt = 3
   Insn 1502: point = 198, n_alt = 3
   Insn 1501: point = 200, n_alt = 0
   Insn 1500: point = 202, n_alt = 0
  BB 54
   Insn 1493: point = 204, n_alt = 1
   Insn 1492: point = 204, n_alt = 0
   Insn 1491: point = 206, n_alt = 3
  BB 45
   Insn 1683: point = 207, n_alt = -1
   Insn 1301: point = 207, n_alt = 0
   Insn 1300: point = 207, n_alt = -1
   Insn 1299: point = 208, n_alt = 3
   Insn 1298: point = 209, n_alt = 0
   Insn 1297: point = 209, n_alt = -1
   Insn 1296: point = 210, n_alt = -1
   Insn 1295: point = 211, n_alt = 0
   Insn 1294: point = 211, n_alt = 3
   Insn 1293: point = 212, n_alt = 3
   Insn 1292: point = 213, n_alt = 0
   Insn 1291: point = 213, n_alt = -1
   Insn 1290: point = 214, n_alt = -1
   Insn 1289: point = 215, n_alt = 0
   Insn 1288: point = 215, n_alt = 3
   Insn 1287: point = 216, n_alt = 3
   Insn 1286: point = 217, n_alt = 0
   Insn 1285: point = 217, n_alt = -1
   Insn 1284: point = 218, n_alt = -1
   Insn 1283: point = 219, n_alt = 0
   Insn 1282: point = 219, n_alt = 3
   Insn 1281: point = 220, n_alt = 3
   Insn 1280: point = 221, n_alt = 0
   Insn 1279: point = 221, n_alt = -1
   Insn 1278: point = 222, n_alt = -1
   Insn 1277: point = 223, n_alt = 0
   Insn 1276: point = 223, n_alt = 3
   Insn 1275: point = 224, n_alt = 3
   Insn 1274: point = 225, n_alt = 0
   Insn 1273: point = 225, n_alt = -1
   Insn 1272: point = 226, n_alt = -1
   Insn 1271: point = 227, n_alt = 0
   Insn 1270: point = 227, n_alt = 3
   Insn 1269: point = 228, n_alt = 3
   Insn 1268: point = 229, n_alt = 0
   Insn 1267: point = 229, n_alt = -1
   Insn 1266: point = 230, n_alt = -1
   Insn 1265: point = 231, n_alt = 0
   Insn 1264: point = 231, n_alt = 3
   Insn 1263: point = 232, n_alt = 3
   Insn 1262: point = 233, n_alt = 0
   Insn 1261: point = 233, n_alt = -1
   Insn 1260: point = 234, n_alt = 3
   Insn 1259: point = 235, n_alt = 1
   Insn 1258: point = 235, n_alt = 1
   Insn 1257: point = 235, n_alt = 1
   Insn 1256: point = 235, n_alt = 5
   Insn 1255: point = 236, n_alt = 4
   Insn 1254: point = 237, n_alt = 1
   Insn 1253: point = 237, n_alt = 5
   Insn 1252: point = 238, n_alt = 4
   Insn 1251: point = 239, n_alt = 8
   Insn 1250: point = 240, n_alt = 1
   Insn 1249: point = 242, n_alt = 7
   Insn 1248: point = 243, n_alt = 1
   Insn 1247: point = 245, n_alt = 1
   Insn 1246: point = 247, n_alt = 7
   Insn 1245: point = 248, n_alt = 1
   Insn 1244: point = 250, n_alt = -1
   Insn 1243: point = 251, n_alt = 0
   Insn 1242: point = 251, n_alt = 10
   Insn 1241: point = 252, n_alt = 0
   Insn 1770: point = 252, n_alt = 8
   Insn 1240: point = 253, n_alt = 1
   Insn 1769: point = 254, n_alt = -1
   Insn 1239: point = 256, n_alt = 7
   Insn 1238: point = 257, n_alt = 7
   Insn 1237: point = 259, n_alt = 3
   Insn 1768: point = 260, n_alt = 8
   Insn 1236: point = 261, n_alt = 1
   Insn 1767: point = 262, n_alt = -1
   Insn 1235: point = 263, n_alt = 7
   Insn 1234: point = 265, n_alt = 3
   Insn 1233: point = 266, n_alt = 3
   Insn 1232: point = 267, n_alt = 8
   Insn 1231: point = 268, n_alt = 1
   Insn 1230: point = 270, n_alt = 7
   Insn 1229: point = 271, n_alt = 1
   Insn 1228: point = 273, n_alt = 1
   Insn 1227: point = 275, n_alt = 7
   Insn 1226: point = 276, n_alt = 1
   Insn 1225: point = 278, n_alt = 1
   Insn 1224: point = 280, n_alt = 7
   Insn 1223: point = 281, n_alt = 7
   Insn 1222: point = 283, n_alt = 3
   Insn 1766: point = 284, n_alt = -1
   Insn 1221: point = 286, n_alt = 1
   Insn 1765: point = 287, n_alt = -1
   Insn 1220: point = 288, n_alt = 7
   Insn 1219: point = 290, n_alt = 3
   Insn 1764: point = 291, n_alt = -1
   Insn 1218: point = 293, n_alt = 1
   Insn 1763: point = 294, n_alt = -1
   Insn 1217: point = 295, n_alt = 7
   Insn 1216: point = 296, n_alt = 8
   Insn 1215: point = 297, n_alt = 2
   Insn 1214: point = 299, n_alt = 1
   Insn 1213: point = 301, n_alt = 7
   Insn 1212: point = 303, n_alt = 3
   Insn 1211: point = 304, n_alt = 2
   Insn 1210: point = 306, n_alt = 7
   Insn 1209: point = 307, n_alt = 7
   Insn 1208: point = 308, n_alt = 8
   Insn 1207: point = 309, n_alt = 1
   Insn 1206: point = 311, n_alt = 1
   Insn 1205: point = 313, n_alt = 7
   Insn 1204: point = 314, n_alt = 1
   Insn 1203: point = 316, n_alt = 7
   Insn 1202: point = 317, n_alt = 7
   Insn 1201: point = 318, n_alt = 1
   Insn 1200: point = 320, n_alt = 7
   Insn 1199: point = 321, n_alt = 8
   Insn 1198: point = 322, n_alt = 1
   Insn 1197: point = 324, n_alt = -1
   Insn 1762: point = 326, n_alt = -1
   Insn 1196: point = 328, n_alt = 2
   Insn 1761: point = 329, n_alt = -1
   Insn 1195: point = 331, n_alt = 7
   Insn 1194: point = 332, n_alt = 0
   Insn 1193: point = 333, n_alt = 2
   Insn 1192: point = 335, n_alt = 7
   Insn 1191: point = 336, n_alt = 1
   Insn 1190: point = 338, n_alt = 7
   Insn 1189: point = 339, n_alt = 7
  BB 44
   Insn 1186: point = 340, n_alt = 8
   Insn 1185: point = 341, n_alt = 2
   Insn 1184: point = 343, n_alt = 7
   Insn 1183: point = 344, n_alt = 1
   Insn 1182: point = 346, n_alt = 7
   Insn 1181: point = 347, n_alt = 1
   Insn 1180: point = 349, n_alt = 7
   Insn 1179: point = 350, n_alt = 8
   Insn 1178: point = 351, n_alt = 7
   Insn 1177: point = 352, n_alt = 0
   Insn 1176: point = 352, n_alt = -1
   Insn 1175: point = 353, n_alt = 3
   Insn 1174: point = 354, n_alt = 0
   Insn 1173: point = 354, n_alt = -1
   Insn 1172: point = 355, n_alt = 4
   Insn 1171: point = 355, n_alt = 0
   Insn 1170: point = 355, n_alt = 3
   Insn 1169: point = 356, n_alt = 0
   Insn 1168: point = 356, n_alt = -1
   Insn 1167: point = 357, n_alt = 3
   Insn 1166: point = 358, n_alt = 1
   Insn 1165: point = 358, n_alt = 1
   Insn 1164: point = 358, n_alt = 1
   Insn 1163: point = 358, n_alt = 5
   Insn 1162: point = 359, n_alt = 4
  BB 43
   Insn 1157: point = 360, n_alt = -1
   Insn 1156: point = 360, n_alt = 1
   Insn 1155: point = 361, n_alt = 7
   Insn 1154: point = 362, n_alt = 8
   Insn 1760: point = 363, n_alt = -1
   Insn 1153: point = 365, n_alt = 2
   Insn 1759: point = 366, n_alt = -1
   Insn 1152: point = 368, n_alt = 7
   Insn 1151: point = 369, n_alt = 2
   Insn 1150: point = 371, n_alt = 1
   Insn 1149: point = 373, n_alt = 7
   Insn 1148: point = 374, n_alt = 1
   Insn 1147: point = 376, n_alt = 7
   Insn 1146: point = 377, n_alt = 7
   Insn 1758: point = 378, n_alt = -1
   Insn 1145: point = 380, n_alt = 1
   Insn 1757: point = 381, n_alt = -1
   Insn 1144: point = 382, n_alt = 7
  BB 53
   Insn 1488: point = 383, n_alt = 0
   Insn 1487: point = 383, n_alt = -1
   Insn 1486: point = 384, n_alt = 3
   Insn 1485: point = 385, n_alt = 0
   Insn 1484: point = 385, n_alt = -1
   Insn 1483: point = 386, n_alt = -1
   Insn 1482: point = 387, n_alt = 0
   Insn 1481: point = 387, n_alt = 3
   Insn 1480: point = 388, n_alt = 3
   Insn 1479: point = 389, n_alt = 0
   Insn 1478: point = 389, n_alt = -1
   Insn 1477: point = 390, n_alt = -1
   Insn 1476: point = 391, n_alt = 0
   Insn 1475: point = 391, n_alt = 3
   Insn 1474: point = 392, n_alt = 3
   Insn 1473: point = 393, n_alt = 0
   Insn 1472: point = 393, n_alt = -1
   Insn 1471: point = 394, n_alt = -1
   Insn 1470: point = 395, n_alt = 0
   Insn 1469: point = 395, n_alt = 3
   Insn 1468: point = 396, n_alt = 3
   Insn 1467: point = 397, n_alt = 0
   Insn 1466: point = 397, n_alt = -1
   Insn 1465: point = 398, n_alt = -1
   Insn 1464: point = 399, n_alt = 0
   Insn 1463: point = 399, n_alt = 3
   Insn 1462: point = 400, n_alt = 3
   Insn 1461: point = 401, n_alt = 0
   Insn 1460: point = 401, n_alt = -1
   Insn 1459: point = 402, n_alt = -1
   Insn 1458: point = 403, n_alt = 0
   Insn 1457: point = 403, n_alt = 3
   Insn 1456: point = 404, n_alt = 3
   Insn 1455: point = 405, n_alt = 0
   Insn 1454: point = 405, n_alt = -1
   Insn 1453: point = 406, n_alt = -1
   Insn 1452: point = 407, n_alt = 0
   Insn 1451: point = 407, n_alt = 3
   Insn 1450: point = 408, n_alt = 3
   Insn 1449: point = 409, n_alt = 0
   Insn 1448: point = 409, n_alt = -1
   Insn 1447: point = 410, n_alt = 3
   Insn 1446: point = 411, n_alt = 1
   Insn 1445: point = 411, n_alt = 1
   Insn 1444: point = 411, n_alt = 1
   Insn 1443: point = 411, n_alt = 5
   Insn 1442: point = 412, n_alt = 4
   Insn 1441: point = 413, n_alt = 1
   Insn 1440: point = 413, n_alt = 5
   Insn 1439: point = 414, n_alt = 4
   Insn 1438: point = 415, n_alt = 8
   Insn 1437: point = 416, n_alt = 1
   Insn 1436: point = 418, n_alt = 7
   Insn 1435: point = 419, n_alt = 1
   Insn 1434: point = 421, n_alt = 1
   Insn 1433: point = 423, n_alt = 7
   Insn 1432: point = 424, n_alt = 1
   Insn 1431: point = 426, n_alt = -1
   Insn 1430: point = 427, n_alt = 0
   Insn 1429: point = 427, n_alt = 10
   Insn 1428: point = 428, n_alt = 0
   Insn 1786: point = 428, n_alt = 8
   Insn 1427: point = 429, n_alt = 1
   Insn 1785: point = 430, n_alt = -1
   Insn 1426: point = 432, n_alt = 7
   Insn 1425: point = 433, n_alt = 7
   Insn 1424: point = 435, n_alt = 3
   Insn 1784: point = 436, n_alt = 8
   Insn 1423: point = 437, n_alt = 1
   Insn 1783: point = 438, n_alt = -1
   Insn 1422: point = 439, n_alt = 7
   Insn 1421: point = 441, n_alt = 3
   Insn 1420: point = 442, n_alt = 3
   Insn 1419: point = 443, n_alt = 8
   Insn 1418: point = 444, n_alt = 1
   Insn 1417: point = 446, n_alt = 7
   Insn 1416: point = 447, n_alt = 1
   Insn 1415: point = 449, n_alt = 1
   Insn 1414: point = 451, n_alt = 7
   Insn 1413: point = 452, n_alt = 1
   Insn 1412: point = 454, n_alt = 1
   Insn 1411: point = 456, n_alt = 7
   Insn 1410: point = 457, n_alt = 7
   Insn 1409: point = 459, n_alt = 3
   Insn 1782: point = 460, n_alt = -1
   Insn 1408: point = 462, n_alt = 1
   Insn 1781: point = 463, n_alt = -1
   Insn 1407: point = 464, n_alt = 7
   Insn 1406: point = 466, n_alt = 3
   Insn 1780: point = 467, n_alt = -1
   Insn 1405: point = 469, n_alt = 1
   Insn 1779: point = 470, n_alt = -1
   Insn 1404: point = 471, n_alt = 7
   Insn 1403: point = 472, n_alt = 8
   Insn 1402: point = 473, n_alt = 2
   Insn 1401: point = 475, n_alt = 1
   Insn 1400: point = 477, n_alt = 7
   Insn 1399: point = 479, n_alt = 3
   Insn 1398: point = 480, n_alt = 2
   Insn 1397: point = 482, n_alt = 7
   Insn 1396: point = 483, n_alt = 7
   Insn 1395: point = 484, n_alt = 8
   Insn 1394: point = 485, n_alt = 2
   Insn 1393: point = 487, n_alt = 1
   Insn 1392: point = 489, n_alt = 7
   Insn 1391: point = 490, n_alt = 1
   Insn 1390: point = 492, n_alt = 7
   Insn 1389: point = 493, n_alt = 7
   Insn 1778: point = 494, n_alt = -1
   Insn 1388: point = 496, n_alt = 1
   Insn 1777: point = 497, n_alt = -1
   Insn 1387: point = 498, n_alt = 7
   Insn 1386: point = 499, n_alt = 8
   Insn 1385: point = 500, n_alt = 1
   Insn 1384: point = 502, n_alt = -1
   Insn 1383: point = 504, n_alt = 2
   Insn 1382: point = 506, n_alt = 7
   Insn 1381: point = 507, n_alt = 0
   Insn 1776: point = 508, n_alt = -1
   Insn 1380: point = 510, n_alt = 2
   Insn 1775: point = 511, n_alt = -1
   Insn 1379: point = 513, n_alt = 7
   Insn 1378: point = 514, n_alt = 1
   Insn 1377: point = 516, n_alt = 7
   Insn 1376: point = 517, n_alt = 7
  BB 52
   Insn 1373: point = 518, n_alt = 8
   Insn 1372: point = 519, n_alt = 0
   Insn 1371: point = 521, n_alt = 2
   Insn 1370: point = 522, n_alt = 2
   Insn 1369: point = 524, n_alt = 7
   Insn 1368: point = 525, n_alt = 1
   Insn 1367: point = 527, n_alt = 7
   Insn 1366: point = 528, n_alt = 1
   Insn 1365: point = 530, n_alt = 7
   Insn 1364: point = 531, n_alt = 8
   Insn 1363: point = 532, n_alt = 7
   Insn 1362: point = 533, n_alt = 0
   Insn 1361: point = 533, n_alt = -1
   Insn 1360: point = 534, n_alt = 3
   Insn 1359: point = 535, n_alt = 0
   Insn 1358: point = 535, n_alt = -1
   Insn 1357: point = 536, n_alt = 4
   Insn 1356: point = 536, n_alt = 0
   Insn 1355: point = 536, n_alt = 3
   Insn 1354: point = 537, n_alt = 0
   Insn 1353: point = 537, n_alt = -1
   Insn 1352: point = 538, n_alt = 3
   Insn 1351: point = 539, n_alt = 1
   Insn 1350: point = 539, n_alt = 1
   Insn 1349: point = 539, n_alt = 1
   Insn 1348: point = 539, n_alt = 5
   Insn 1347: point = 540, n_alt = 4
  BB 51
   Insn 1345: point = 541, n_alt = -1
   Insn 1344: point = 541, n_alt = 0
   Insn 1343: point = 542, n_alt = 0
   Insn 1342: point = 542, n_alt = 0
  BB 49
   Insn 1685: point = 545, n_alt = -1
   Insn 1334: point = 545, n_alt = 1
  BB 50
   Insn 1339: point = 546, n_alt = 1
  BB 48
   Insn 1328: point = 547, n_alt = -1
   Insn 1327: point = 547, n_alt = 1
   Insn 1326: point = 548, n_alt = 7
  BB 47
   Insn 1325: point = 550, n_alt = -1
   Insn 1324: point = 550, n_alt = 1
   Insn 1323: point = 551, n_alt = 7
   Insn 1322: point = 552, n_alt = 7
   Insn 1321: point = 554, n_alt = 3
  BB 46
   Insn 1319: point = 555, n_alt = -1
   Insn 1318: point = 555, n_alt = 1
   Insn 1317: point = 556, n_alt = 7
   Insn 1316: point = 557, n_alt = 8
   Insn 1315: point = 558, n_alt = 1
   Insn 1314: point = 560, n_alt = 7
   Insn 1313: point = 561, n_alt = 2
   Insn 1312: point = 563, n_alt = 1
   Insn 1311: point = 565, n_alt = 7
   Insn 1310: point = 566, n_alt = 1
   Insn 1309: point = 568, n_alt = 7
   Insn 1308: point = 569, n_alt = 7
   Insn 1774: point = 570, n_alt = -1
   Insn 1307: point = 572, n_alt = 1
   Insn 1773: point = 573, n_alt = -1
   Insn 1306: point = 574, n_alt = 7
  BB 42
   Insn 1139: point = 575, n_alt = -1
   Insn 1138: point = 575, n_alt = 1
   Insn 1137: point = 576, n_alt = 7
  BB 41
   Insn 1136: point = 578, n_alt = -1
   Insn 1135: point = 578, n_alt = 1
   Insn 1134: point = 579, n_alt = 7
   Insn 1133: point = 580, n_alt = 7
   Insn 1132: point = 582, n_alt = 3
   Insn 1131: point = 583, n_alt = 0
   Insn 1130: point = 583, n_alt = -1
   Insn 1129: point = 584, n_alt = 3
   Insn 1128: point = 585, n_alt = 0
   Insn 1127: point = 585, n_alt = -1
   Insn 1126: point = 586, n_alt = -1
   Insn 1125: point = 587, n_alt = 0
   Insn 1124: point = 587, n_alt = 3
   Insn 1123: point = 588, n_alt = 3
   Insn 1122: point = 589, n_alt = 0
   Insn 1121: point = 589, n_alt = -1
   Insn 1120: point = 590, n_alt = -1
   Insn 1119: point = 591, n_alt = 0
   Insn 1118: point = 591, n_alt = 3
   Insn 1117: point = 592, n_alt = 3
   Insn 1116: point = 593, n_alt = 0
   Insn 1115: point = 593, n_alt = -1
   Insn 1114: point = 594, n_alt = -1
   Insn 1113: point = 595, n_alt = 0
   Insn 1112: point = 595, n_alt = 3
   Insn 1111: point = 596, n_alt = 3
   Insn 1110: point = 597, n_alt = 0
   Insn 1109: point = 597, n_alt = -1
   Insn 1108: point = 598, n_alt = -1
   Insn 1107: point = 599, n_alt = 0
   Insn 1106: point = 599, n_alt = 3
   Insn 1105: point = 600, n_alt = 3
   Insn 1104: point = 601, n_alt = 0
   Insn 1103: point = 601, n_alt = -1
   Insn 1102: point = 602, n_alt = 3
   Insn 1101: point = 603, n_alt = 1
   Insn 1100: point = 603, n_alt = 1
   Insn 1099: point = 603, n_alt = 1
   Insn 1098: point = 603, n_alt = 5
   Insn 1097: point = 604, n_alt = 4
   Insn 1096: point = 605, n_alt = 1
   Insn 1095: point = 605, n_alt = 5
   Insn 1094: point = 606, n_alt = 4
  BB 61
   Insn 1702: point = 607, n_alt = -1
  BB 37
   Insn 820: point = 607, n_alt = -1
   Insn 819: point = 607, n_alt = 0
   Insn 818: point = 608, n_alt = 0
   Insn 817: point = 609, n_alt = 0
  BB 40
   Insn 1680: point = 610, n_alt = -1
   Insn 1088: point = 610, n_alt = 1
   Insn 1087: point = 610, n_alt = 8
   Insn 1086: point = 611, n_alt = 3
   Insn 1085: point = 612, n_alt = 7
   Insn 1084: point = 613, n_alt = 3
   Insn 1083: point = 615, n_alt = 0
   Insn 1082: point = 617, n_alt = 0
   Insn 1081: point = 618, n_alt = 0
   Insn 1080: point = 618, n_alt = -1
   Insn 1079: point = 619, n_alt = 3
   Insn 1078: point = 620, n_alt = 0
   Insn 1077: point = 620, n_alt = -1
   Insn 1076: point = 621, n_alt = -1
   Insn 1075: point = 622, n_alt = 0
   Insn 1074: point = 622, n_alt = 3
   Insn 1073: point = 623, n_alt = 3
   Insn 1072: point = 624, n_alt = 0
   Insn 1071: point = 624, n_alt = -1
   Insn 1070: point = 625, n_alt = -1
   Insn 1069: point = 626, n_alt = 0
   Insn 1068: point = 626, n_alt = 3
   Insn 1067: point = 627, n_alt = 3
   Insn 1066: point = 628, n_alt = 0
   Insn 1065: point = 628, n_alt = -1
   Insn 1064: point = 629, n_alt = -1
   Insn 1063: point = 630, n_alt = 0
   Insn 1062: point = 630, n_alt = 3
   Insn 1061: point = 631, n_alt = 3
   Insn 1060: point = 632, n_alt = 0
   Insn 1059: point = 632, n_alt = -1
   Insn 1058: point = 633, n_alt = -1
   Insn 1057: point = 634, n_alt = 0
   Insn 1056: point = 634, n_alt = 3
   Insn 1055: point = 635, n_alt = 3
   Insn 1054: point = 636, n_alt = 0
   Insn 1053: point = 636, n_alt = -1
   Insn 1052: point = 637, n_alt = -1
   Insn 1051: point = 638, n_alt = 0
   Insn 1050: point = 638, n_alt = 3
   Insn 1049: point = 639, n_alt = 3
   Insn 1048: point = 640, n_alt = 0
   Insn 1047: point = 640, n_alt = -1
   Insn 1046: point = 641, n_alt = -1
   Insn 1045: point = 642, n_alt = 0
   Insn 1044: point = 642, n_alt = 3
   Insn 1043: point = 643, n_alt = 3
   Insn 1042: point = 644, n_alt = 0
   Insn 1041: point = 644, n_alt = -1
   Insn 1040: point = 645, n_alt = -1
   Insn 1039: point = 646, n_alt = 0
   Insn 1038: point = 646, n_alt = 3
   Insn 1037: point = 647, n_alt = 3
   Insn 1036: point = 648, n_alt = 0
   Insn 1035: point = 648, n_alt = -1
   Insn 1034: point = 649, n_alt = -1
   Insn 1033: point = 650, n_alt = 0
   Insn 1032: point = 650, n_alt = 3
   Insn 1031: point = 651, n_alt = 3
   Insn 1030: point = 652, n_alt = 0
   Insn 1029: point = 652, n_alt = -1
   Insn 1028: point = 653, n_alt = 3
   Insn 1027: point = 654, n_alt = 1
   Insn 1026: point = 654, n_alt = 1
   Insn 1025: point = 654, n_alt = 1
   Insn 1024: point = 654, n_alt = 5
   Insn 1023: point = 655, n_alt = 4
   Insn 1022: point = 656, n_alt = 1
   Insn 1021: point = 656, n_alt = 5
   Insn 1020: point = 657, n_alt = 4
   Insn 1019: point = 658, n_alt = 8
   Insn 1018: point = 659, n_alt = 1
   Insn 1017: point = 661, n_alt = 7
   Insn 1016: point = 662, n_alt = 1
   Insn 1015: point = 664, n_alt = 7
   Insn 1014: point = 665, n_alt = 8
   Insn 1013: point = 666, n_alt = 1
   Insn 1012: point = 668, n_alt = 7
   Insn 1011: point = 669, n_alt = 1
   Insn 1010: point = 671, n_alt = 7
   Insn 1009: point = 672, n_alt = 8
   Insn 1008: point = 673, n_alt = 1
   Insn 1007: point = 675, n_alt = 7
   Insn 1006: point = 676, n_alt = 1
   Insn 1005: point = 678, n_alt = 7
   Insn 1004: point = 679, n_alt = 8
   Insn 1003: point = 680, n_alt = 1
   Insn 1002: point = 682, n_alt = 7
   Insn 1001: point = 683, n_alt = 1
   Insn 1000: point = 685, n_alt = 7
   Insn 999: point = 686, n_alt = 8
   Insn 998: point = 687, n_alt = 2
   Insn 997: point = 689, n_alt = -1
   Insn 996: point = 691, n_alt = 1
   Insn 995: point = 693, n_alt = 7
   Insn 994: point = 694, n_alt = 1
   Insn 993: point = 696, n_alt = 7
   Insn 992: point = 697, n_alt = 7
   Insn 991: point = 698, n_alt = 1
   Insn 990: point = 700, n_alt = 7
   Insn 989: point = 701, n_alt = 1
   Insn 988: point = 703, n_alt = 7
   Insn 987: point = 704, n_alt = 1
   Insn 986: point = 706, n_alt = -1
   Insn 985: point = 708, n_alt = 1
   Insn 984: point = 710, n_alt = 7
   Insn 983: point = 711, n_alt = 1
   Insn 982: point = 713, n_alt = 7
   Insn 981: point = 714, n_alt = 1
   Insn 980: point = 716, n_alt = 7
   Insn 979: point = 717, n_alt = 1
   Insn 978: point = 719, n_alt = 7
   Insn 977: point = 720, n_alt = 8
   Insn 976: point = 721, n_alt = 1
   Insn 975: point = 723, n_alt = -1
   Insn 974: point = 725, n_alt = 1
   Insn 973: point = 727, n_alt = 7
   Insn 972: point = 728, n_alt = 1
   Insn 971: point = 730, n_alt = 7
   Insn 970: point = 731, n_alt = 1
   Insn 969: point = 733, n_alt = 7
   Insn 968: point = 734, n_alt = 1
   Insn 967: point = 736, n_alt = 7
   Insn 966: point = 737, n_alt = 7
   Insn 965: point = 738, n_alt = 8
   Insn 964: point = 739, n_alt = 2
   Insn 963: point = 741, n_alt = -1
   Insn 962: point = 743, n_alt = 1
   Insn 961: point = 745, n_alt = 7
   Insn 960: point = 746, n_alt = 1
   Insn 959: point = 748, n_alt = 7
   Insn 958: point = 749, n_alt = 7
   Insn 957: point = 750, n_alt = 1
   Insn 956: point = 752, n_alt = -1
   Insn 1756: point = 754, n_alt = -1
   Insn 955: point = 756, n_alt = 2
   Insn 1755: point = 757, n_alt = -1
   Insn 954: point = 759, n_alt = 7
   Insn 953: point = 760, n_alt = 2
   Insn 952: point = 762, n_alt = 7
   Insn 951: point = 763, n_alt = 7
   Insn 950: point = 764, n_alt = 1
   Insn 949: point = 766, n_alt = 7
   Insn 948: point = 767, n_alt = 1
   Insn 947: point = 769, n_alt = 7
   Insn 946: point = 770, n_alt = 8
   Insn 945: point = 771, n_alt = 1
   Insn 944: point = 773, n_alt = -1
   Insn 1754: point = 775, n_alt = -1
   Insn 943: point = 777, n_alt = 2
   Insn 1753: point = 778, n_alt = -1
   Insn 942: point = 780, n_alt = 7
   Insn 941: point = 781, n_alt = 2
   Insn 940: point = 783, n_alt = 7
   Insn 939: point = 784, n_alt = 7
   Insn 938: point = 785, n_alt = 1
   Insn 937: point = 787, n_alt = 7
   Insn 936: point = 788, n_alt = 1
   Insn 935: point = 790, n_alt = 7
   Insn 934: point = 791, n_alt = 7
   Insn 933: point = 792, n_alt = 8
   Insn 932: point = 793, n_alt = 2
   Insn 931: point = 795, n_alt = 7
   Insn 930: point = 797, n_alt = 3
   Insn 929: point = 798, n_alt = 3
   Insn 928: point = 800, n_alt = 0
   Insn 927: point = 802, n_alt = 0
   Insn 926: point = 803, n_alt = 7
   Insn 925: point = 805, n_alt = 3
   Insn 924: point = 806, n_alt = 3
   Insn 923: point = 808, n_alt = 0
   Insn 922: point = 810, n_alt = 0
   Insn 921: point = 811, n_alt = 8
   Insn 920: point = 812, n_alt = 2
   Insn 919: point = 814, n_alt = -1
   Insn 918: point = 816, n_alt = 1
   Insn 917: point = 818, n_alt = 7
   Insn 916: point = 819, n_alt = 1
   Insn 915: point = 821, n_alt = 7
   Insn 914: point = 822, n_alt = 7
   Insn 913: point = 823, n_alt = 1
   Insn 912: point = 825, n_alt = 7
   Insn 911: point = 826, n_alt = 1
   Insn 910: point = 828, n_alt = 7
   Insn 909: point = 829, n_alt = 8
   Insn 908: point = 830, n_alt = 1
   Insn 907: point = 832, n_alt = 7
   Insn 906: point = 833, n_alt = 0
   Insn 905: point = 835, n_alt = 1
   Insn 904: point = 837, n_alt = 7
   Insn 903: point = 838, n_alt = 1
   Insn 902: point = 840, n_alt = -1
   Insn 901: point = 842, n_alt = 2
   Insn 900: point = 844, n_alt = -1
   Insn 899: point = 846, n_alt = 1
   Insn 898: point = 848, n_alt = 7
   Insn 897: point = 849, n_alt = 1
   Insn 896: point = 851, n_alt = 7
   Insn 895: point = 852, n_alt = 7
   Insn 894: point = 854, n_alt = 3
   Insn 893: point = 855, n_alt = 1
   Insn 892: point = 857, n_alt = 7
   Insn 891: point = 858, n_alt = 7
   Insn 890: point = 860, n_alt = 3
   Insn 889: point = 861, n_alt = 8
   Insn 888: point = 862, n_alt = 2
   Insn 887: point = 864, n_alt = 7
   Insn 886: point = 865, n_alt = 1
   Insn 885: point = 867, n_alt = -1
   Insn 884: point = 868, n_alt = 0
   Insn 883: point = 868, n_alt = -1
   Insn 882: point = 869, n_alt = -1
   Insn 881: point = 870, n_alt = 7
   Insn 880: point = 871, n_alt = 0
   Insn 1752: point = 873, n_alt = -1
   Insn 879: point = 875, n_alt = 2
   Insn 1751: point = 876, n_alt = -1
   Insn 878: point = 878, n_alt = 7
   Insn 877: point = 879, n_alt = 1
   Insn 876: point = 881, n_alt = 7
   Insn 875: point = 882, n_alt = 4
   Insn 874: point = 883, n_alt = 9
   Insn 873: point = 884, n_alt = 0
   Insn 872: point = 884, n_alt = -1
   Insn 871: point = 885, n_alt = 1
   Insn 870: point = 887, n_alt = 2
   Insn 869: point = 888, n_alt = 7
   Insn 868: point = 889, n_alt = 8
  BB 39
   Insn 10: point = 891, n_alt = -1
  BB 38
   Insn 864: point = 894, n_alt = -1
   Insn 863: point = 894, n_alt = 0
   Insn 862: point = 895, n_alt = 0
   Insn 861: point = 897, n_alt = 0
   Insn 860: point = 898, n_alt = 1
   Insn 859: point = 898, n_alt = 0
   Insn 858: point = 899, n_alt = 1
   Insn 857: point = 899, n_alt = 2
   Insn 856: point = 901, n_alt = 7
   Insn 855: point = 903, n_alt = 3
   Insn 854: point = 904, n_alt = 1
   Insn 853: point = 906, n_alt = -1
   Insn 852: point = 908, n_alt = 2
   Insn 851: point = 910, n_alt = 7
   Insn 850: point = 911, n_alt = 7
   Insn 849: point = 912, n_alt = 1
   Insn 848: point = 914, n_alt = 7
   Insn 847: point = 915, n_alt = 7
   Insn 846: point = 917, n_alt = 3
   Insn 845: point = 918, n_alt = 7
   Insn 844: point = 919, n_alt = 8
   Insn 843: point = 920, n_alt = 2
   Insn 842: point = 922, n_alt = 7
   Insn 841: point = 924, n_alt = 3
   Insn 840: point = 925, n_alt = 7
   Insn 839: point = 926, n_alt = 8
   Insn 838: point = 927, n_alt = 2
   Insn 837: point = 929, n_alt = 7
   Insn 836: point = 931, n_alt = 3
   Insn 835: point = 932, n_alt = 7
   Insn 834: point = 934, n_alt = 3
   Insn 833: point = 935, n_alt = 3
   Insn 832: point = 937, n_alt = 0
   Insn 831: point = 939, n_alt = 0
   Insn 830: point = 940, n_alt = 8
   Insn 829: point = 941, n_alt = 2
   Insn 828: point = 943, n_alt = 7
   Insn 827: point = 945, n_alt = 3
   Insn 826: point = 946, n_alt = 7
   Insn 825: point = 948, n_alt = 3
   Insn 824: point = 949, n_alt = 3
   Insn 823: point = 951, n_alt = 0
   Insn 822: point = 953, n_alt = 0
  BB 36
   Insn 815: point = 955, n_alt = 1
   Insn 814: point = 955, n_alt = 0
   Insn 813: point = 957, n_alt = 3
   Insn 812: point = 958, n_alt = 8
   Insn 811: point = 959, n_alt = 7
   Insn 810: point = 960, n_alt = 8
   Insn 809: point = 961, n_alt = 7
   Insn 808: point = 962, n_alt = 8
   Insn 807: point = 963, n_alt = 7
   Insn 806: point = 964, n_alt = 8
   Insn 805: point = 965, n_alt = 7
   Insn 804: point = 966, n_alt = 0
   Insn 803: point = 966, n_alt = -1
   Insn 802: point = 967, n_alt = 3
   Insn 801: point = 968, n_alt = 0
   Insn 800: point = 968, n_alt = -1
   Insn 799: point = 969, n_alt = 4
   Insn 798: point = 969, n_alt = 0
   Insn 797: point = 969, n_alt = 3
   Insn 796: point = 970, n_alt = 0
   Insn 795: point = 970, n_alt = -1
   Insn 794: point = 971, n_alt = 3
   Insn 793: point = 972, n_alt = 1
   Insn 792: point = 972, n_alt = 1
   Insn 791: point = 972, n_alt = 1
   Insn 790: point = 972, n_alt = 5
   Insn 789: point = 973, n_alt = 4
   Insn 788: point = 974, n_alt = 0
   Insn 787: point = 974, n_alt = -1
   Insn 786: point = 975, n_alt = 3
   Insn 785: point = 976, n_alt = 0
   Insn 784: point = 976, n_alt = -1
   Insn 783: point = 977, n_alt = 3
   Insn 782: point = 978, n_alt = 1
   Insn 781: point = 978, n_alt = 1
   Insn 780: point = 978, n_alt = 1
   Insn 779: point = 978, n_alt = 5
   Insn 778: point = 979, n_alt = 4
   Insn 777: point = 980, n_alt = 0
   Insn 776: point = 980, n_alt = -1
   Insn 775: point = 981, n_alt = 3
   Insn 774: point = 982, n_alt = 0
   Insn 773: point = 982, n_alt = -1
   Insn 772: point = 983, n_alt = -1
   Insn 771: point = 984, n_alt = 0
   Insn 770: point = 984, n_alt = 3
   Insn 769: point = 985, n_alt = 3
   Insn 768: point = 986, n_alt = 0
   Insn 767: point = 986, n_alt = -1
   Insn 766: point = 987, n_alt = -1
   Insn 765: point = 988, n_alt = 0
   Insn 764: point = 988, n_alt = 3
   Insn 763: point = 989, n_alt = 3
   Insn 762: point = 990, n_alt = 0
   Insn 761: point = 990, n_alt = -1
   Insn 760: point = 991, n_alt = -1
   Insn 759: point = 992, n_alt = 0
   Insn 758: point = 992, n_alt = 3
   Insn 757: point = 993, n_alt = 3
   Insn 756: point = 994, n_alt = 1
   Insn 755: point = 995, n_alt = 0
   Insn 754: point = 997, n_alt = 7
   Insn 753: point = 999, n_alt = 3
   Insn 752: point = 1000, n_alt = 0
   Insn 751: point = 1000, n_alt = -1
   Insn 750: point = 1001, n_alt = 3
   Insn 749: point = 1002, n_alt = 1
   Insn 748: point = 1002, n_alt = 1
   Insn 747: point = 1002, n_alt = 1
   Insn 746: point = 1002, n_alt = 5
   Insn 745: point = 1003, n_alt = 4
   Insn 744: point = 1004, n_alt = 1
   Insn 743: point = 1004, n_alt = 5
   Insn 742: point = 1005, n_alt = 4
   Insn 741: point = 1006, n_alt = 8
   Insn 740: point = 1007, n_alt = 3
   Insn 739: point = 1008, n_alt = 2
   Insn 738: point = 1010, n_alt = 7
   Insn 737: point = 1011, n_alt = -1
   Insn 736: point = 1013, n_alt = 1
   Insn 735: point = 1015, n_alt = 7
   Insn 734: point = 1017, n_alt = 3
   Insn 733: point = 1018, n_alt = 7
   Insn 732: point = 1020, n_alt = 3
   Insn 731: point = 1021, n_alt = 8
   Insn 730: point = 1022, n_alt = 2
   Insn 729: point = 1024, n_alt = -1
   Insn 728: point = 1026, n_alt = 1
   Insn 727: point = 1028, n_alt = 7
   Insn 726: point = 1030, n_alt = 3
   Insn 725: point = 1031, n_alt = 7
   Insn 724: point = 1033, n_alt = 3
   Insn 723: point = 1034, n_alt = 7
   Insn 722: point = 1036, n_alt = 3
  BB 7
   Insn 1665: point = 1037, n_alt = -1
   Insn 281: point = 1037, n_alt = 8
   Insn 280: point = 1038, n_alt = 2
   Insn 279: point = 1040, n_alt = 7
   Insn 278: point = 1041, n_alt = -1
   Insn 277: point = 1043, n_alt = 1
   Insn 276: point = 1045, n_alt = 1
   Insn 275: point = 1047, n_alt = 7
   Insn 274: point = 1048, n_alt = 1
   Insn 273: point = 1050, n_alt = 1
   Insn 272: point = 1052, n_alt = 7
   Insn 271: point = 1053, n_alt = 7
   Insn 270: point = 1055, n_alt = 3
   Insn 1716: point = 1056, n_alt = -1
   Insn 269: point = 1058, n_alt = 1
   Insn 1715: point = 1059, n_alt = -1
   Insn 268: point = 1060, n_alt = 7
   Insn 267: point = 1062, n_alt = 3
   Insn 1714: point = 1063, n_alt = -1
   Insn 266: point = 1065, n_alt = 1
   Insn 1713: point = 1066, n_alt = -1
   Insn 265: point = 1067, n_alt = 7
   Insn 264: point = 1068, n_alt = 8
   Insn 263: point = 1069, n_alt = 1
   Insn 262: point = 1071, n_alt = 7
   Insn 261: point = 1072, n_alt = 7
   Insn 260: point = 1074, n_alt = 3
  BB 5
   Insn 1663: point = 1075, n_alt = -1
   Insn 227: point = 1075, n_alt = 8
   Insn 226: point = 1076, n_alt = 1
   Insn 225: point = 1078, n_alt = 7
   Insn 224: point = 1079, n_alt = 7
   Insn 223: point = 1080, n_alt = 8
   Insn 222: point = 1081, n_alt = 1
   Insn 221: point = 1083, n_alt = 7
   Insn 220: point = 1084, n_alt = 7
   Insn 219: point = 1085, n_alt = 0
   Insn 218: point = 1085, n_alt = -1
   Insn 217: point = 1086, n_alt = 3
   Insn 216: point = 1087, n_alt = 0
   Insn 215: point = 1087, n_alt = -1
   Insn 214: point = 1088, n_alt = -1
   Insn 213: point = 1089, n_alt = 0
   Insn 212: point = 1089, n_alt = 3
   Insn 211: point = 1090, n_alt = 3
   Insn 210: point = 1091, n_alt = 0
   Insn 209: point = 1091, n_alt = -1
   Insn 208: point = 1092, n_alt = 4
   Insn 207: point = 1092, n_alt = 0
   Insn 206: point = 1092, n_alt = 3
   Insn 205: point = 1093, n_alt = 0
   Insn 204: point = 1093, n_alt = -1
   Insn 203: point = 1094, n_alt = 3
   Insn 202: point = 1095, n_alt = 1
   Insn 201: point = 1095, n_alt = 1
   Insn 200: point = 1095, n_alt = 1
   Insn 199: point = 1095, n_alt = 5
   Insn 198: point = 1096, n_alt = 4
  BB 6
   Insn 257: point = 1097, n_alt = 8
   Insn 256: point = 1098, n_alt = 1
   Insn 255: point = 1100, n_alt = 7
   Insn 254: point = 1101, n_alt = -1
   Insn 253: point = 1103, n_alt = 2
   Insn 252: point = 1105, n_alt = 7
   Insn 251: point = 1107, n_alt = 3
   Insn 250: point = 1108, n_alt = 0
   Insn 249: point = 1110, n_alt = 1
   Insn 248: point = 1112, n_alt = 1
   Insn 247: point = 1114, n_alt = 7
   Insn 246: point = 1116, n_alt = 3
   Insn 245: point = 1117, n_alt = 8
   Insn 244: point = 1118, n_alt = 2
   Insn 243: point = 1120, n_alt = 7
   Insn 242: point = 1121, n_alt = -1
   Insn 241: point = 1123, n_alt = 1
   Insn 240: point = 1125, n_alt = 1
   Insn 239: point = 1127, n_alt = 7
   Insn 238: point = 1128, n_alt = 1
   Insn 237: point = 1130, n_alt = 7
   Insn 236: point = 1131, n_alt = 7
   Insn 235: point = 1133, n_alt = 3
   Insn 1712: point = 1134, n_alt = -1
   Insn 234: point = 1136, n_alt = 1
   Insn 1711: point = 1137, n_alt = -1
   Insn 233: point = 1138, n_alt = 7
   Insn 232: point = 1140, n_alt = 3
  BB 4
   Insn 193: point = 1141, n_alt = -1
   Insn 192: point = 1141, n_alt = 1
   Insn 191: point = 1142, n_alt = 7
   Insn 190: point = 1143, n_alt = 8
   Insn 189: point = 1144, n_alt = 1
   Insn 188: point = 1146, n_alt = -1
   Insn 187: point = 1148, n_alt = 1
   Insn 186: point = 1150, n_alt = 1
   Insn 185: point = 1152, n_alt = 7
   Insn 184: point = 1154, n_alt = 3
   Insn 183: point = 1155, n_alt = 1
   Insn 182: point = 1157, n_alt = 1
   Insn 181: point = 1159, n_alt = 1
   Insn 180: point = 1161, n_alt = 7
   Insn 179: point = 1162, n_alt = 7
   Insn 178: point = 1164, n_alt = 3
   Insn 1710: point = 1165, n_alt = -1
   Insn 177: point = 1167, n_alt = 1
   Insn 1709: point = 1168, n_alt = -1
   Insn 176: point = 1169, n_alt = 7
   Insn 1708: point = 1170, n_alt = -1
   Insn 175: point = 1172, n_alt = 1
   Insn 1707: point = 1173, n_alt = -1
   Insn 174: point = 1174, n_alt = 7
   Insn 173: point = 1176, n_alt = 3
   Insn 172: point = 1177, n_alt = 8
   Insn 171: point = 1178, n_alt = 0
   Insn 170: point = 1180, n_alt = 2
   Insn 169: point = 1181, n_alt = 1
   Insn 168: point = 1183, n_alt = 7
   Insn 167: point = 1184, n_alt = 7
   Insn 166: point = 1186, n_alt = 3
  BB 35
   Insn 719: point = 1187, n_alt = 8
   Insn 718: point = 1188, n_alt = 2
   Insn 717: point = 1190, n_alt = 7
   Insn 716: point = 1191, n_alt = -1
   Insn 715: point = 1193, n_alt = 1
   Insn 714: point = 1195, n_alt = 1
   Insn 713: point = 1197, n_alt = 7
   Insn 712: point = 1198, n_alt = 1
   Insn 711: point = 1200, n_alt = -1
   Insn 710: point = 1201, n_alt = 0
   Insn 709: point = 1201, n_alt = 10
   Insn 708: point = 1202, n_alt = 0
   Insn 1748: point = 1202, n_alt = 8
   Insn 707: point = 1203, n_alt = 1
   Insn 1747: point = 1204, n_alt = -1
   Insn 706: point = 1206, n_alt = 7
   Insn 705: point = 1207, n_alt = 7
   Insn 704: point = 1209, n_alt = 3
   Insn 1746: point = 1210, n_alt = 8
   Insn 703: point = 1211, n_alt = 1
   Insn 1745: point = 1212, n_alt = -1
   Insn 702: point = 1213, n_alt = 7
   Insn 701: point = 1215, n_alt = 3
   Insn 700: point = 1216, n_alt = 3
   Insn 699: point = 1217, n_alt = 8
   Insn 698: point = 1218, n_alt = 1
   Insn 697: point = 1220, n_alt = 7
   Insn 696: point = 1221, n_alt = 7
   Insn 695: point = 1223, n_alt = 3
  BB 34
   Insn 1695: point = 1224, n_alt = -1
   Insn 692: point = 1224, n_alt = 0
   Insn 691: point = 1224, n_alt = -1
   Insn 690: point = 1225, n_alt = 3
   Insn 689: point = 1226, n_alt = 0
   Insn 688: point = 1226, n_alt = -1
   Insn 687: point = 1227, n_alt = -1
   Insn 686: point = 1228, n_alt = 0
   Insn 685: point = 1228, n_alt = 3
   Insn 684: point = 1229, n_alt = 3
   Insn 683: point = 1230, n_alt = 0
   Insn 682: point = 1230, n_alt = -1
   Insn 681: point = 1231, n_alt = 4
   Insn 680: point = 1231, n_alt = 0
   Insn 679: point = 1231, n_alt = 3
   Insn 678: point = 1232, n_alt = 0
   Insn 677: point = 1232, n_alt = -1
   Insn 676: point = 1233, n_alt = 3
   Insn 675: point = 1234, n_alt = 1
   Insn 674: point = 1234, n_alt = 1
   Insn 673: point = 1234, n_alt = 1
   Insn 672: point = 1234, n_alt = 5
   Insn 671: point = 1235, n_alt = 4
  BB 59
   Insn 1694: point = 1236, n_alt = -1
  BB 60
   Insn 1699: point = 1236, n_alt = -1
  BB 29
   Insn 1676: point = 1236, n_alt = -1
   Insn 634: point = 1236, n_alt = 0
   Insn 633: point = 1236, n_alt = -1
   Insn 632: point = 1237, n_alt = 3
   Insn 631: point = 1238, n_alt = 0
   Insn 630: point = 1238, n_alt = -1
   Insn 629: point = 1239, n_alt = -1
   Insn 628: point = 1240, n_alt = 0
   Insn 627: point = 1240, n_alt = 3
   Insn 626: point = 1241, n_alt = 3
   Insn 625: point = 1242, n_alt = 0
   Insn 624: point = 1242, n_alt = -1
   Insn 623: point = 1243, n_alt = 4
   Insn 622: point = 1243, n_alt = 0
   Insn 621: point = 1243, n_alt = 3
   Insn 620: point = 1244, n_alt = 0
   Insn 619: point = 1244, n_alt = -1
   Insn 618: point = 1245, n_alt = 3
   Insn 617: point = 1246, n_alt = 1
   Insn 616: point = 1246, n_alt = 1
   Insn 615: point = 1246, n_alt = 1
   Insn 614: point = 1246, n_alt = 5
   Insn 613: point = 1247, n_alt = 4
  BB 28
   Insn 611: point = 1248, n_alt = -1
   Insn 610: point = 1248, n_alt = 0
   Insn 609: point = 1249, n_alt = 0
   Insn 608: point = 1249, n_alt = 0
  BB 26
   Insn 1674: point = 1252, n_alt = -1
   Insn 600: point = 1252, n_alt = 1
  BB 27
   Insn 605: point = 1253, n_alt = 1
  BB 25
   Insn 595: point = 1254, n_alt = -1
   Insn 594: point = 1254, n_alt = 1
   Insn 593: point = 1255, n_alt = 7
   Insn 592: point = 1256, n_alt = 7
  BB 24
   Insn 587: point = 1257, n_alt = -1
   Insn 586: point = 1257, n_alt = 1
   Insn 585: point = 1258, n_alt = 7
  BB 23
   Insn 584: point = 1259, n_alt = -1
   Insn 583: point = 1259, n_alt = 1
   Insn 582: point = 1260, n_alt = 7
   Insn 581: point = 1261, n_alt = 8
   Insn 580: point = 1262, n_alt = 0
   Insn 579: point = 1264, n_alt = 2
   Insn 578: point = 1265, n_alt = 2
   Insn 577: point = 1267, n_alt = 7
   Insn 576: point = 1268, n_alt = 8
   Insn 575: point = 1269, n_alt = 1
   Insn 574: point = 1271, n_alt = 1
   Insn 573: point = 1273, n_alt = -1
   Insn 572: point = 1275, n_alt = 1
   Insn 571: point = 1277, n_alt = 7
   Insn 570: point = 1279, n_alt = 3
   Insn 569: point = 1280, n_alt = 7
   Insn 568: point = 1282, n_alt = 3
   Insn 567: point = 1283, n_alt = 1
   Insn 566: point = 1285, n_alt = 1
   Insn 565: point = 1287, n_alt = 1
   Insn 564: point = 1289, n_alt = -1
   Insn 563: point = 1291, n_alt = 1
   Insn 562: point = 1293, n_alt = 1
   Insn 561: point = 1295, n_alt = 7
   Insn 560: point = 1297, n_alt = 3
   Insn 559: point = 1298, n_alt = 1
   Insn 558: point = 1300, n_alt = 7
   Insn 557: point = 1301, n_alt = 1
   Insn 556: point = 1303, n_alt = 7
   Insn 555: point = 1304, n_alt = 8
   Insn 554: point = 1305, n_alt = 2
   Insn 553: point = 1307, n_alt = 2
   Insn 552: point = 1309, n_alt = -1
   Insn 551: point = 1311, n_alt = 1
   Insn 550: point = 1313, n_alt = 1
   Insn 549: point = 1315, n_alt = 7
   Insn 548: point = 1316, n_alt = 1
   Insn 547: point = 1318, n_alt = 7
   Insn 546: point = 1319, n_alt = 7
   Insn 545: point = 1321, n_alt = 3
   Insn 544: point = 1322, n_alt = 1
   Insn 543: point = 1324, n_alt = 7
   Insn 542: point = 1325, n_alt = 7
   Insn 541: point = 1326, n_alt = 1
   Insn 540: point = 1328, n_alt = 1
   Insn 539: point = 1330, n_alt = 1
   Insn 538: point = 1332, n_alt = -1
   Insn 537: point = 1334, n_alt = 1
   Insn 536: point = 1336, n_alt = 7
   Insn 535: point = 1338, n_alt = 3
   Insn 534: point = 1339, n_alt = 7
   Insn 533: point = 1341, n_alt = 3
   Insn 532: point = 1342, n_alt = 1
   Insn 531: point = 1344, n_alt = 1
   Insn 530: point = 1346, n_alt = -1
   Insn 529: point = 1348, n_alt = 1
   Insn 528: point = 1350, n_alt = 1
   Insn 527: point = 1352, n_alt = 7
   Insn 526: point = 1354, n_alt = 3
   Insn 525: point = 1355, n_alt = -1
   Insn 524: point = 1356, n_alt = 0
   Insn 523: point = 1356, n_alt = 10
   Insn 522: point = 1357, n_alt = 0
   Insn 1742: point = 1357, n_alt = 8
   Insn 521: point = 1358, n_alt = 1
   Insn 1741: point = 1359, n_alt = -1
   Insn 520: point = 1360, n_alt = 7
   Insn 519: point = 1362, n_alt = 3
   Insn 1740: point = 1363, n_alt = 8
   Insn 518: point = 1364, n_alt = 1
   Insn 1739: point = 1365, n_alt = -1
   Insn 517: point = 1366, n_alt = 7
   Insn 516: point = 1367, n_alt = 3
  BB 22
   Insn 514: point = 1368, n_alt = -1
   Insn 513: point = 1368, n_alt = 0
   Insn 512: point = 1369, n_alt = 0
   Insn 511: point = 1370, n_alt = 0
  BB 33
   Insn 1678: point = 1370, n_alt = -1
   Insn 665: point = 1370, n_alt = 1
   Insn 664: point = 1370, n_alt = 8
  BB 32
   Insn 661: point = 1372, n_alt = 7
  BB 31
   Insn 659: point = 1373, n_alt = -1
   Insn 658: point = 1373, n_alt = 0
   Insn 657: point = 1374, n_alt = 0
   Insn 656: point = 1376, n_alt = 0
   Insn 655: point = 1377, n_alt = 1
   Insn 654: point = 1377, n_alt = 0
   Insn 653: point = 1378, n_alt = 1
   Insn 652: point = 1379, n_alt = 7
   Insn 651: point = 1380, n_alt = 7
  BB 30
   Insn 649: point = 1381, n_alt = -1
   Insn 648: point = 1381, n_alt = 1
   Insn 647: point = 1382, n_alt = 7
   Insn 646: point = 1383, n_alt = 0
   Insn 645: point = 1385, n_alt = 2
   Insn 644: point = 1386, n_alt = 2
   Insn 643: point = 1388, n_alt = 7
   Insn 642: point = 1389, n_alt = 8
   Insn 641: point = 1390, n_alt = 1
   Insn 640: point = 1392, n_alt = 7
   Insn 639: point = 1393, n_alt = 7
  BB 21
   Insn 509: point = 1394, n_alt = 1
   Insn 508: point = 1394, n_alt = 8
   Insn 507: point = 1395, n_alt = 1
   Insn 506: point = 1397, n_alt = 2
   Insn 505: point = 1398, n_alt = 7
  BB 17
   Insn 1672: point = 1399, n_alt = -1
   Insn 454: point = 1399, n_alt = 8
   Insn 453: point = 1400, n_alt = 1
   Insn 452: point = 1402, n_alt = 7
   Insn 451: point = 1403, n_alt = 7
   Insn 450: point = 1404, n_alt = 8
   Insn 449: point = 1405, n_alt = 1
   Insn 448: point = 1407, n_alt = 7
   Insn 447: point = 1408, n_alt = 7
   Insn 446: point = 1409, n_alt = 0
   Insn 445: point = 1409, n_alt = -1
   Insn 444: point = 1410, n_alt = 3
   Insn 443: point = 1411, n_alt = 0
   Insn 442: point = 1411, n_alt = -1
   Insn 441: point = 1412, n_alt = -1
   Insn 440: point = 1413, n_alt = 0
   Insn 439: point = 1413, n_alt = 3
   Insn 438: point = 1414, n_alt = 3
   Insn 437: point = 1415, n_alt = 0
   Insn 436: point = 1415, n_alt = -1
   Insn 435: point = 1416, n_alt = 4
   Insn 434: point = 1416, n_alt = 0
   Insn 433: point = 1416, n_alt = 3
   Insn 432: point = 1417, n_alt = 0
   Insn 431: point = 1417, n_alt = -1
   Insn 430: point = 1418, n_alt = 3
   Insn 429: point = 1419, n_alt = 1
   Insn 428: point = 1419, n_alt = 1
   Insn 427: point = 1419, n_alt = 1
   Insn 426: point = 1419, n_alt = 5
   Insn 425: point = 1420, n_alt = 4
  BB 20
   Insn 502: point = 1421, n_alt = 8
  BB 19
   Insn 9: point = 1423, n_alt = -1
  BB 18
   Insn 498: point = 1426, n_alt = -1
   Insn 497: point = 1426, n_alt = 0
   Insn 496: point = 1427, n_alt = 0
   Insn 495: point = 1429, n_alt = 0
   Insn 494: point = 1430, n_alt = 1
   Insn 493: point = 1430, n_alt = 0
   Insn 492: point = 1431, n_alt = 1
   Insn 491: point = 1431, n_alt = 1
   Insn 490: point = 1433, n_alt = 1
   Insn 489: point = 1435, n_alt = 7
   Insn 488: point = 1436, n_alt = 7
   Insn 487: point = 1437, n_alt = 7
   Insn 486: point = 1438, n_alt = 8
   Insn 485: point = 1439, n_alt = 3
   Insn 1738: point = 1441, n_alt = 6
   Insn 1737: point = 1442, n_alt = -1
   Insn 484: point = 1443, n_alt = 2
   Insn 483: point = 1444, n_alt = 2
   Insn 482: point = 1445, n_alt = 7
   Insn 481: point = 1446, n_alt = 7
   Insn 480: point = 1447, n_alt = 4
   Insn 479: point = 1448, n_alt = 9
   Insn 478: point = 1449, n_alt = 0
   Insn 477: point = 1449, n_alt = -1
   Insn 476: point = 1450, n_alt = 7
   Insn 475: point = 1450, n_alt = 1
   Insn 474: point = 1452, n_alt = 2
   Insn 473: point = 1453, n_alt = 7
   Insn 472: point = 1454, n_alt = 8
   Insn 471: point = 1455, n_alt = 2
   Insn 470: point = 1457, n_alt = 7
   Insn 469: point = 1458, n_alt = -1
   Insn 468: point = 1460, n_alt = 1
   Insn 467: point = 1462, n_alt = 1
   Insn 466: point = 1464, n_alt = 7
   Insn 465: point = 1465, n_alt = 1
   Insn 464: point = 1467, n_alt = 7
   Insn 463: point = 1468, n_alt = 7
   Insn 462: point = 1470, n_alt = 3
   Insn 1736: point = 1471, n_alt = -1
   Insn 461: point = 1473, n_alt = 1
   Insn 1735: point = 1474, n_alt = -1
   Insn 460: point = 1475, n_alt = 7
   Insn 459: point = 1477, n_alt = 3
  BB 16
   Insn 423: point = 1478, n_alt = -1
   Insn 422: point = 1478, n_alt = 0
   Insn 421: point = 1479, n_alt = 0
   Insn 420: point = 1479, n_alt = 0
  BB 14
   Insn 1670: point = 1482, n_alt = -1
   Insn 412: point = 1482, n_alt = 1
  BB 15
   Insn 417: point = 1483, n_alt = 1
  BB 13
   Insn 406: point = 1484, n_alt = -1
   Insn 405: point = 1484, n_alt = 1
   Insn 404: point = 1485, n_alt = 7
  BB 12
   Insn 401: point = 1486, n_alt = -1
   Insn 400: point = 1486, n_alt = 1
   Insn 399: point = 1487, n_alt = 7
  BB 11
   Insn 398: point = 1489, n_alt = -1
   Insn 397: point = 1489, n_alt = 1
   Insn 396: point = 1490, n_alt = 7
   Insn 395: point = 1491, n_alt = 7
   Insn 394: point = 1493, n_alt = 3
   Insn 393: point = 1494, n_alt = 8
   Insn 392: point = 1495, n_alt = 1
   Insn 391: point = 1497, n_alt = -1
   Insn 390: point = 1499, n_alt = 1
   Insn 389: point = 1501, n_alt = 1
   Insn 388: point = 1503, n_alt = 1
   Insn 387: point = 1505, n_alt = -1
   Insn 386: point = 1507, n_alt = 1
   Insn 385: point = 1509, n_alt = 7
   Insn 384: point = 1511, n_alt = 3
   Insn 383: point = 1512, n_alt = 7
   Insn 382: point = 1514, n_alt = 3
   Insn 381: point = 1515, n_alt = 1
   Insn 380: point = 1517, n_alt = 1
   Insn 379: point = 1519, n_alt = -1
   Insn 378: point = 1521, n_alt = 1
   Insn 377: point = 1523, n_alt = 1
   Insn 376: point = 1525, n_alt = 7
   Insn 375: point = 1527, n_alt = 3
   Insn 374: point = 1528, n_alt = -1
   Insn 373: point = 1529, n_alt = 0
   Insn 372: point = 1529, n_alt = 10
   Insn 371: point = 1530, n_alt = 0
   Insn 1732: point = 1530, n_alt = 8
   Insn 370: point = 1531, n_alt = 1
   Insn 1731: point = 1532, n_alt = -1
   Insn 369: point = 1533, n_alt = 1
   Insn 368: point = 1535, n_alt = 1
   Insn 367: point = 1537, n_alt = 7
   Insn 366: point = 1538, n_alt = 7
   Insn 365: point = 1540, n_alt = 3
   Insn 1730: point = 1541, n_alt = 8
   Insn 364: point = 1542, n_alt = 1
   Insn 1729: point = 1543, n_alt = -1
   Insn 363: point = 1544, n_alt = 7
   Insn 362: point = 1545, n_alt = 3
   Insn 1728: point = 1546, n_alt = -1
   Insn 361: point = 1548, n_alt = 1
   Insn 1727: point = 1549, n_alt = -1
   Insn 360: point = 1550, n_alt = 7
   Insn 359: point = 1552, n_alt = 3
   Insn 358: point = 1553, n_alt = 8
   Insn 357: point = 1554, n_alt = 1
   Insn 356: point = 1556, n_alt = 7
   Insn 355: point = 1557, n_alt = -1
   Insn 354: point = 1559, n_alt = 2
   Insn 1726: point = 1561, n_alt = -1
   Insn 353: point = 1563, n_alt = 2
   Insn 1725: point = 1564, n_alt = -1
   Insn 352: point = 1566, n_alt = 1
   Insn 351: point = 1568, n_alt = 7
   Insn 350: point = 1570, n_alt = 3
   Insn 349: point = 1571, n_alt = 0
   Insn 348: point = 1573, n_alt = 1
   Insn 347: point = 1575, n_alt = 1
   Insn 346: point = 1577, n_alt = 1
   Insn 345: point = 1579, n_alt = 7
   Insn 344: point = 1581, n_alt = 3
   Insn 1724: point = 1582, n_alt = -1
   Insn 343: point = 1584, n_alt = 1
   Insn 1723: point = 1585, n_alt = -1
   Insn 342: point = 1586, n_alt = 7
   Insn 1722: point = 1587, n_alt = -1
   Insn 341: point = 1589, n_alt = 1
   Insn 1721: point = 1590, n_alt = -1
   Insn 340: point = 1591, n_alt = 7
   Insn 339: point = 1593, n_alt = 3
   Insn 338: point = 1594, n_alt = 8
   Insn 337: point = 1595, n_alt = 2
   Insn 336: point = 1597, n_alt = 1
   Insn 335: point = 1599, n_alt = 1
   Insn 334: point = 1601, n_alt = 7
   Insn 333: point = 1603, n_alt = 3
   Insn 1720: point = 1604, n_alt = -1
   Insn 332: point = 1606, n_alt = 1
   Insn 1719: point = 1607, n_alt = -1
   Insn 331: point = 1608, n_alt = 7
   Insn 330: point = 1610, n_alt = 3
  BB 58
   Insn 1691: point = 1611, n_alt = -1
  BB 9
   Insn 295: point = 1611, n_alt = -1
   Insn 294: point = 1611, n_alt = 0
   Insn 293: point = 1612, n_alt = 0
   Insn 292: point = 1613, n_alt = 0
  BB 10
   Insn 1667: point = 1614, n_alt = -1
   Insn 324: point = 1614, n_alt = 1
   Insn 323: point = 1614, n_alt = 8
   Insn 322: point = 1615, n_alt = 1
   Insn 321: point = 1617, n_alt = 7
   Insn 320: point = 1618, n_alt = 1
   Insn 319: point = 1620, n_alt = 7
   Insn 318: point = 1622, n_alt = 3
   Insn 317: point = 1623, n_alt = 3
   Insn 316: point = 1625, n_alt = 0
   Insn 315: point = 1627, n_alt = 0
   Insn 314: point = 1628, n_alt = 1
   Insn 313: point = 1630, n_alt = 2
   Insn 312: point = 1632, n_alt = 7
   Insn 311: point = 1634, n_alt = 3
   Insn 310: point = 1635, n_alt = 3
   Insn 309: point = 1637, n_alt = 0
   Insn 308: point = 1639, n_alt = 0
   Insn 307: point = 1640, n_alt = 7
   Insn 306: point = 1642, n_alt = 3
   Insn 305: point = 1643, n_alt = 3
   Insn 304: point = 1645, n_alt = 0
   Insn 303: point = 1647, n_alt = 0
   Insn 1718: point = 1648, n_alt = -1
   Insn 302: point = 1650, n_alt = 1
   Insn 1717: point = 1651, n_alt = -1
   Insn 301: point = 1652, n_alt = 7
   Insn 300: point = 1654, n_alt = 3
   Insn 299: point = 1655, n_alt = 3
   Insn 298: point = 1657, n_alt = 0
   Insn 297: point = 1659, n_alt = 0
  BB 8
   Insn 290: point = 1661, n_alt = 1
   Insn 289: point = 1661, n_alt = 0
   Insn 288: point = 1663, n_alt = 3
   Insn 287: point = 1664, n_alt = 8
   Insn 286: point = 1665, n_alt = 7
  BB 3
   Insn 161: point = 1666, n_alt = -1
   Insn 160: point = 1666, n_alt = 1
   Insn 159: point = 1667, n_alt = 7
  BB 2
   Insn 158: point = 1669, n_alt = -1
   Insn 157: point = 1669, n_alt = 1
   Insn 156: point = 1670, n_alt = 7
   Insn 155: point = 1671, n_alt = 7
   Insn 154: point = 1673, n_alt = 3
   Insn 153: point = 1674, n_alt = 8
   Insn 152: point = 1675, n_alt = 7
   Insn 151: point = 1677, n_alt = 3
   Insn 150: point = 1678, n_alt = 8
   Insn 149: point = 1679, n_alt = 7
   Insn 148: point = 1681, n_alt = 3
   Insn 144: point = 1682, n_alt = 2
   Insn 143: point = 1683, n_alt = 3
   Insn 142: point = 1684, n_alt = -1
   Insn 140: point = 1686, n_alt = 1
   Insn 138: point = 1688, n_alt = 0
   Insn 139: point = 1688, n_alt = 2
   Insn 137: point = 1689, n_alt = 3
   Insn 136: point = 1690, n_alt = 5
   Insn 135: point = 1691, n_alt = 0
   Insn 134: point = 1693, n_alt = 0
   Insn 133: point = 1695, n_alt = 3
   Insn 129: point = 1696, n_alt = 5
   Insn 128: point = 1696, n_alt = 5
   Insn 127: point = 1697, n_alt = -1
   Insn 125: point = 1699, n_alt = 1
   Insn 123: point = 1701, n_alt = 0
   Insn 124: point = 1701, n_alt = 2
   Insn 122: point = 1702, n_alt = 3
   Insn 121: point = 1703, n_alt = 5
   Insn 120: point = 1704, n_alt = 0
   Insn 119: point = 1706, n_alt = 0
   Insn 118: point = 1708, n_alt = 3
   Insn 114: point = 1709, n_alt = 5
   Insn 113: point = 1709, n_alt = 5
   Insn 112: point = 1710, n_alt = -1
   Insn 110: point = 1712, n_alt = 1
   Insn 108: point = 1714, n_alt = 0
   Insn 109: point = 1714, n_alt = 2
   Insn 107: point = 1715, n_alt = 3
   Insn 106: point = 1716, n_alt = 5
   Insn 105: point = 1717, n_alt = 0
   Insn 104: point = 1719, n_alt = 0
   Insn 103: point = 1721, n_alt = 3
   Insn 99: point = 1722, n_alt = 5
   Insn 98: point = 1722, n_alt = 5
   Insn 97: point = 1723, n_alt = -1
   Insn 95: point = 1725, n_alt = 1
   Insn 93: point = 1727, n_alt = 0
   Insn 94: point = 1727, n_alt = 2
   Insn 92: point = 1728, n_alt = 3
   Insn 91: point = 1729, n_alt = 5
   Insn 90: point = 1730, n_alt = 0
   Insn 89: point = 1732, n_alt = 0
   Insn 88: point = 1734, n_alt = 3
   Insn 84: point = 1735, n_alt = 5
   Insn 83: point = 1735, n_alt = 5
   Insn 82: point = 1736, n_alt = -1
   Insn 80: point = 1738, n_alt = 1
   Insn 78: point = 1740, n_alt = 0
   Insn 79: point = 1740, n_alt = 2
   Insn 77: point = 1741, n_alt = 3
   Insn 76: point = 1742, n_alt = 5
   Insn 75: point = 1743, n_alt = 0
   Insn 74: point = 1745, n_alt = 0
   Insn 73: point = 1747, n_alt = 3
   Insn 69: point = 1748, n_alt = 5
   Insn 68: point = 1748, n_alt = 5
   Insn 67: point = 1749, n_alt = -1
   Insn 65: point = 1751, n_alt = 1
   Insn 63: point = 1753, n_alt = 0
   Insn 64: point = 1753, n_alt = 2
   Insn 62: point = 1754, n_alt = 3
   Insn 61: point = 1755, n_alt = 5
   Insn 60: point = 1756, n_alt = 0
   Insn 59: point = 1758, n_alt = 0
   Insn 58: point = 1760, n_alt = 3
   Insn 54: point = 1761, n_alt = 5
   Insn 53: point = 1761, n_alt = 5
   Insn 52: point = 1762, n_alt = -1
   Insn 50: point = 1764, n_alt = 1
   Insn 48: point = 1766, n_alt = 0
   Insn 49: point = 1766, n_alt = 2
   Insn 47: point = 1767, n_alt = 3
   Insn 46: point = 1768, n_alt = 5
   Insn 45: point = 1769, n_alt = 0
   Insn 44: point = 1771, n_alt = 0
   Insn 43: point = 1773, n_alt = 3
   Insn 39: point = 1774, n_alt = 2
   Insn 38: point = 1775, n_alt = 3
   Insn 37: point = 1776, n_alt = -1
   Insn 35: point = 1778, n_alt = 1
   Insn 33: point = 1780, n_alt = 0
   Insn 34: point = 1780, n_alt = 2
   Insn 32: point = 1781, n_alt = 3
   Insn 31: point = 1782, n_alt = 5
   Insn 30: point = 1783, n_alt = 0
   Insn 29: point = 1785, n_alt = 0
   Insn 28: point = 1787, n_alt = 3
   Insn 24: point = 1788, n_alt = 2
   Insn 23: point = 1789, n_alt = 3
   Insn 22: point = 1790, n_alt = -1
   Insn 20: point = 1792, n_alt = 1
   Insn 18: point = 1794, n_alt = 0
   Insn 19: point = 1794, n_alt = 2
   Insn 17: point = 1795, n_alt = 3
   Insn 16: point = 1796, n_alt = 5
   Insn 15: point = 1797, n_alt = 0
   Insn 14: point = 1799, n_alt = 0
   Insn 13: point = 1801, n_alt = 3
   Insn 7: point = 1802, n_alt = 5
   Insn 6: point = 1802, n_alt = 5
   Insn 5: point = 1802, n_alt = 5
   Insn 4: point = 1802, n_alt = 5
   Insn 3: point = 1802, n_alt = 5
   Insn 2: point = 1802, n_alt = 5
 r87: [1798..1799]
 r88: [1789..1790]
 r89: [1788..1802]
 r91: [1784..1785]
 r92: [1775..1776]
 r93: [1774..1802]
 r95: [1770..1771]
 r96: [1761..1762]
 r99: [1757..1758]
 r100: [1748..1749]
 r103: [1744..1745]
 r104: [1735..1736]
 r107: [1731..1732]
 r108: [1722..1723]
 r111: [1718..1719]
 r112: [1709..1710]
 r115: [1705..1706]
 r116: [1696..1697]
 r119: [1692..1693]
 r120: [1683..1684]
 r121: [1682..1802]
 r123: [1666..1671]
 r124: [1182..1184]
 r125: [1179..1181]
 r126: [1160..1162]
 r127: [1160..1161]
 r128: [1158..1159]
 r129: [1156..1157]
 r130: [1145..1155]
 r131: [1151..1152]
 r132: [1149..1150]
 r133: [1147..1148]
 r134: [1145..1146]
 r135: [1143..1144]
 r136: [1141..1142]
 r137: [1082..1084]
 r138: [1129..1131]
 r139: [1126..1128]
 r140: [1126..1127]
 r141: [1124..1125]
 r142: [1122..1123]
 r143: [1119..1121]
 r144: [1109..1110]
 r145: [1104..1108]
 r146: [1104..1105]
 r147: [1102..1103]
 r148: [1099..1101]
 r149: [1070..1072]
 r150: [1051..1053]
 r151: [1049..1050]
 r152: [1046..1048]
 r153: [1046..1047]
 r154: [1044..1045]
 r155: [1042..1043]
 r156: [1039..1041]
 r157: [1037..1038]
 r158: [1656..1657]
 r159: [1653..1655]
 r160: [1644..1645]
 r161: [1641..1643]
 r162: [1631..1640]
 r163: [1636..1637]
 r164: [1633..1635]
 r165: [1631..1632]
 r166: [1629..1630]
 r167: [1619..1628]
 r168: [1624..1625]
 r169: [1621..1623]
 r170: [1619..1620]
 r171: [1616..1618]
 r172: [1600..1601]
 r173: [1598..1599]
 r174: [1596..1597]
 r175: [1578..1579]
 r176: [1576..1577]
 r177: [1574..1575]
 r178: [1572..1573]
 r179: [1565..1571]
 r180: [1567..1568]
 r181: [1563..1566]
 r182: [1560..1561]
 r183: [1558..1559]
 r184: [1555..1557]
 r185: [1536..1538]
 r186: [1536..1537]
 r187: [1534..1535]
 r188: [1531..1533]
 r190: [1516..1528]
 r191: [1524..1525]
 r192: [1522..1523]
 r193: [1520..1521]
 r194: [1518..1519]
 r195: [1516..1517]
 r196: [1500..1515]
 r197: [1504..1512]
 r198: [1508..1509]
 r199: [1506..1507]
 r200: [1504..1505]
 r201: [1502..1503]
 r202: [1500..1501]
 r203: [1498..1499]
 r204: [1496..1497]
 r205: [1494..1495]
 r206: [1486..1491]
 r207: [1484..1485]
 r208: [1478..1479]
 r209: [1406..1408]
 r210: [1466..1468]
 r211: [1463..1465]
 r212: [1463..1464]
 r213: [1461..1462]
 r214: [1459..1460]
 r215: [1456..1458]
 r216: [1432..1433]
 r217: [1428..1430]
 r218: [1428..1429]
 r219: [1426..1427]
 r220: [1343..1355]
 r221: [1351..1352]
 r222: [1349..1350]
 r223: [1347..1348]
 r224: [1345..1346]
 r225: [1343..1344]
 r226: [1327..1342]
 r227: [1331..1339]
 r228: [1335..1336]
 r229: [1333..1334]
 r230: [1331..1332]
 r231: [1329..1330]
 r232: [1327..1328]
 r233: [1306..1326]
 r234: [1308..1322]
 r235: [1317..1319]
 r236: [1314..1316]
 r237: [1314..1315]
 r238: [1312..1313]
 r239: [1310..1311]
 r240: [1308..1309]
 r241: [1306..1307]
 r242: [1284..1298]
 r243: [1294..1295]
 r244: [1292..1293]
 r245: [1290..1291]
 r246: [1288..1289]
 r247: [1286..1287]
 r248: [1284..1285]
 r249: [1270..1283]
 r250: [1272..1280]
 r251: [1276..1277]
 r252: [1274..1275]
 r253: [1272..1273]
 r254: [1270..1271]
 r255: [1263..1265]
 r256: [1261..1262]
 r257: [1254..1256]
 r258: [1248..1249]
 r259: [1391..1393]
 r260: [1387..1388]
 r261: [1384..1386]
 r262: [1381..1383]
 r263: [1375..1377]
 r264: [1375..1376]
 r265: [1373..1374]
 r266: [1219..1221]
 r267: [1205..1207]
 r269: [1199..1200]
 r270: [1196..1198]
 r271: [1196..1197]
 r272: [1194..1195]
 r273: [1192..1193]
 r274: [1189..1191]
 r275: [1187..1188]
 r276: [1023..1034]
 r277: [1027..1031]
 r278: [1027..1028]
 r279: [1025..1026]
 r280: [1023..1024]
 r281: [1021..1022]
 r282: [1014..1018]
 r283: [1014..1015]
 r284: [1012..1013]
 r285: [1009..1011]
 r286: [1006..1008]
 r287: [996..997]
 r288: [994..995]
 r289: [950..951]
 r290: [947..949]
 r291: [942..946]
 r292: [942..943]
 r293: [940..941]
 r294: [936..937]
 r295: [933..935]
 r296: [928..932]
 r297: [928..929]
 r298: [921..925]
 r299: [921..922]
 r300: [919..920]
 r301: [913..915]
 r302: [905..912]
 r303: [909..911]
 r304: [907..908]
 r305: [905..906]
 r306: [900..904]
 r307: [900..901]
 r308: [896..898]
 r309: [896..897]
 r310: [894..895]
 r311: [884..885]
 r312: [875..879]
 r313: [872..873]
 r314: [868..871]
 r315: [866..867]
 r316: [863..865]
 r317: [863..864]
 r318: [861..862]
 r319: [856..858]
 r320: [843..855]
 r321: [850..852]
 r322: [850..851]
 r323: [847..849]
 r324: [847..848]
 r325: [845..846]
 r326: [843..844]
 r327: [841..842]
 r328: [834..835]
 r329: [831..833]
 r330: [831..832]
 r331: [827..828]
 r332: [824..826]
 r333: [824..825]
 r334: [813..823]
 r335: [820..822]
 r336: [820..821]
 r337: [817..819]
 r338: [815..816]
 r339: [813..814]
 r340: [811..812]
 r341: [807..808]
 r342: [804..806]
 r343: [794..803]
 r344: [799..800]
 r345: [796..798]
 r346: [794..795]
 r347: [789..791]
 r348: [786..788]
 r349: [786..787]
 r350: [772..785]
 r351: [782..784]
 r352: [777..781]
 r353: [774..775]
 r354: [772..773]
 r355: [770..771]
 r356: [768..769]
 r357: [765..767]
 r358: [765..766]
 r359: [751..764]
 r360: [761..763]
 r361: [756..760]
 r362: [753..754]
 r363: [751..752]
 r364: [740..750]
 r365: [747..749]
 r366: [747..748]
 r367: [744..746]
 r368: [742..743]
 r369: [740..741]
 r370: [738..739]
 r371: [735..737]
 r372: [732..734]
 r373: [732..733]
 r374: [722..731]
 r375: [729..730]
 r376: [726..728]
 r377: [724..725]
 r378: [722..723]
 r379: [720..721]
 r380: [718..719]
 r381: [715..717]
 r382: [715..716]
 r383: [705..714]
 r384: [712..713]
 r385: [709..711]
 r386: [707..708]
 r387: [705..706]
 r388: [702..704]
 r389: [702..703]
 r390: [699..701]
 r391: [699..700]
 r392: [688..698]
 r393: [695..697]
 r394: [695..696]
 r395: [692..694]
 r396: [690..691]
 r397: [688..689]
 r398: [686..687]
 r399: [684..685]
 r400: [681..683]
 r401: [681..682]
 r402: [679..680]
 r403: [677..678]
 r404: [674..676]
 r405: [674..675]
 r406: [672..673]
 r407: [670..671]
 r408: [667..669]
 r409: [667..668]
 r410: [665..666]
 r411: [663..664]
 r412: [660..662]
 r413: [660..661]
 r414: [658..659]
 r415: [614..615]
 r416: [610..613]
 r417: [610..612]
 r418: [575..580]
 r419: [375..377]
 r420: [372..374]
 r421: [372..373]
 r422: [370..371]
 r423: [365..369]
 r424: [342..344]
 r425: [342..343]
 r426: [340..341]
 r427: [337..339]
 r428: [334..336]
 r429: [334..335]
 r430: [323..333]
 r431: [328..332]
 r432: [325..326]
 r433: [323..324]
 r434: [321..322]
 r435: [315..317]
 r436: [315..316]
 r437: [310..314]
 r438: [312..313]
 r439: [310..311]
 r440: [308..309]
 r441: [305..307]
 r442: [305..306]
 r443: [300..304]
 r444: [300..301]
 r445: [298..299]
 r446: [296..297]
 r447: [279..281]
 r448: [277..278]
 r449: [274..276]
 r450: [274..275]
 r451: [272..273]
 r452: [269..271]
 r453: [269..270]
 r454: [267..268]
 r455: [255..257]
 r457: [249..250]
 r458: [246..248]
 r459: [246..247]
 r460: [244..245]
 r461: [241..243]
 r462: [241..242]
 r463: [239..240]
 r464: [567..569]
 r465: [564..566]
 r466: [564..565]
 r467: [562..563]
 r468: [559..561]
 r469: [547..552]
 r470: [541..542]
 r471: [523..525]
 r472: [523..524]
 r473: [520..522]
 r474: [518..519]
 r475: [515..517]
 r476: [512..514]
 r477: [510..513]
 r478: [501..508]
 r479: [505..507]
 r480: [503..504]
 r481: [501..502]
 r482: [499..500]
 r483: [491..493]
 r484: [491..492]
 r485: [486..490]
 r486: [488..489]
 r487: [486..487]
 r488: [484..485]
 r489: [481..483]
 r490: [481..482]
 r491: [476..480]
 r492: [476..477]
 r493: [474..475]
 r494: [472..473]
 r495: [455..457]
 r496: [453..454]
 r497: [450..452]
 r498: [450..451]
 r499: [448..449]
 r500: [445..447]
 r501: [445..446]
 r502: [443..444]
 r503: [431..433]
 r505: [425..426]
 r506: [422..424]
 r507: [422..423]
 r508: [420..421]
 r509: [417..419]
 r510: [417..418]
 r511: [415..416]
 r512: [199..200]
 r513: [196..198]
 r514: [194..195]
 r515: [182..191]
 r516: [187..188]
 r517: [184..186]
 r518: [180..183]
 r519: [166..178]
 r520: [168..175]
 r521: [172..174]
 r522: [170..171]
 r523: [168..169]
 r524: [165..167]
 r525: [145..154]
 r526: [150..151]
 r527: [147..149]
 r528: [145..146]
 r529: [143..144]
 r530: [133..135]
 r531: [131..134]
 r533: [126..127]
 r534: [124..125]
 r535: [115..116]
 r536: [107..108]
 r537: [104..106]
 r538: [94..103]
 r539: [99..100]
 r540: [96..98]
 r541: [94..95]
 r542: [92..93]
 r543: [82..91]
 r544: [87..88]
 r545: [84..86]
 r546: [80..83]
 r547: [72..78]
 r548: [74..75]
 r549: [69..73]
 r550: [69..71]
 r551: [62..63]
 r552: [57..61]
 r553: [57..58]
 r554: [55..56]
 r555: [52..54]
 r556: [52..53]
 r557: [49..51]
 r558: [49..50]
 r559: [47..48]
 r560: [37..46]
 r561: [37..43]
 r562: [39..40]
 r563: [34..38]
 r564: [34..36]
 r565: [30..31]
 r566: [27..29]
 r567: [25..26]
 r568: [6..24]
 r569: [20..21]
 r570: [17..19]
 r571: [15..16]
 r572: [13..14]
 r573: [6..12]
 r574: [8..9]
 r575: [3..7]
 r576: [3..5]
 r577: [1426..1437] [1421..1423]
 r578: [1370..1380]
 r579: [894..918] [889..891]
 r580: [1480..1483]
 r581: [1250..1253]
 r582: [543..546]
 r583: [1793..1795]
 r584: [1791..1792]
 r588: [1779..1781]
 r589: [1777..1778]
 r593: [1765..1767]
 r594: [1763..1764]
 r598: [1752..1754]
 r599: [1750..1751]
 r603: [1739..1741]
 r604: [1737..1738]
 r608: [1726..1728]
 r609: [1724..1725]
 r613: [1713..1715]
 r614: [1711..1712]
 r618: [1700..1702]
 r619: [1698..1699]
 r623: [1687..1689]
 r624: [1685..1686]
 r628: [1611..1661]
 r629: [1611..1612]
 r630: [1650..1652]
 r631: [1629..1648]
 r632: [1606..1608]
 r633: [1596..1604]
 r634: [1589..1591]
 r635: [1576..1587]
 r636: [1584..1586]
 r637: [1574..1582]
 r638: [1548..1550]
 r639: [1534..1546]
 r640: [1529..1545]
 r641: [1542..1544]
 r643: [1473..1475]
 r644: [1461..1471]
 r645: [1449..1450]
 r646: [1424..1431]
 r647: [1368..1369]
 r648: [1356..1367]
 r649: [1364..1366]
 r651: [1358..1360]
 r653: [1302..1303]
 r654: [1299..1301]
 r655: [1201..1216]
 r656: [1211..1213]
 r658: [1172..1174]
 r659: [1158..1170]
 r660: [1167..1169]
 r661: [1149..1165]
 r662: [1136..1138]
 r663: [1124..1134]
 r664: [1113..1114]
 r665: [1111..1112]
 r666: [1065..1067]
 r667: [1049..1063]
 r668: [1058..1060]
 r669: [1044..1056]
 r670: [607..955]
 r671: [607..608]
 r672: [892..899]
 r673: [839..840]
 r674: [836..838]
 r675: [572..574]
 r676: [562..570]
 r677: [529..530]
 r678: [526..528]
 r679: [496..498]
 r680: [488..494]
 r681: [469..471]
 r682: [453..467]
 r683: [462..464]
 r684: [448..460]
 r685: [427..442]
 r686: [437..439]
 r688: [380..382]
 r689: [370..378]
 r690: [348..349]
 r691: [345..347]
 r692: [319..320]
 r693: [312..318]
 r694: [293..295]
 r695: [277..291]
 r696: [286..288]
 r697: [272..284]
 r698: [251..266]
 r699: [261..263]
 r701: [0..204]
 r702: [0..1]
 r703: [158..160]
 r705: [140..142]
 r707: [121..123]
 r708: [115..119]
 r709: [66..68]
 r710: [47..64]
 r711: [1800..1801]
 r712: [1796..1797]
 r713: [1793..1794]
 r714: [1786..1787]
 r715: [1782..1783]
 r716: [1779..1780]
 r717: [1772..1773]
 r718: [1768..1769]
 r719: [1765..1766]
 r720: [1759..1760]
 r721: [1755..1756]
 r722: [1752..1753]
 r723: [1746..1747]
 r724: [1742..1743]
 r725: [1739..1740]
 r726: [1733..1734]
 r727: [1729..1730]
 r728: [1726..1727]
 r729: [1720..1721]
 r730: [1716..1717]
 r731: [1713..1714]
 r732: [1707..1708]
 r733: [1703..1704]
 r734: [1700..1701]
 r735: [1694..1695]
 r736: [1690..1691]
 r737: [1687..1688]
 r738: [1680..1681]
 r739: [1678..1679]
 r740: [1676..1677]
 r741: [1674..1675]
 r742: [1672..1673]
 r743: [1669..1670]
 r744: [1666..1667]
 r745: [1185..1186]
 r746: [1182..1183]
 r747: [1177..1178]
 r748: [1179..1180]
 r749: [1175..1176]
 r750: [1163..1164]
 r751: [1153..1154]
 r752: [1095..1096]
 r753: [1093..1094]
 r754: [1091..1092]
 r755: [1088..1090]
 r756: [1087..1089]
 r757: [1085..1086]
 r758: [1080..1081]
 r759: [1082..1083]
 r760: [1075..1076]
 r761: [1077..1079]
 r762: [1077..1078]
 r763: [1139..1140]
 r764: [1132..1133]
 r765: [1129..1130]
 r766: [1117..1118]
 r767: [1119..1120]
 r768: [1115..1116]
 r769: [1106..1107]
 r770: [1097..1098]
 r771: [1099..1100]
 r772: [1073..1074]
 r773: [1068..1069]
 r774: [1070..1071]
 r775: [1061..1062]
 r776: [1054..1055]
 r777: [1051..1052]
 r778: [1039..1040]
 r779: [1664..1665]
 r780: [1662..1663]
 r781: [1658..1659]
 r782: [1653..1654]
 r783: [1646..1647]
 r784: [1641..1642]
 r785: [1638..1639]
 r786: [1633..1634]
 r787: [1626..1627]
 r788: [1621..1622]
 r789: [1614..1615]
 r790: [1616..1617]
 r791: [1609..1610]
 r792: [1602..1603]
 r793: [1594..1595]
 r794: [1592..1593]
 r795: [1580..1581]
 r796: [1569..1570]
 r797: [1553..1554]
 r798: [1555..1556]
 r799: [1551..1552]
 r800: [1539..1540]
 r801: [1526..1527]
 r802: [1513..1514]
 r803: [1510..1511]
 r804: [1492..1493]
 r805: [1489..1490]
 r806: [1486..1487]
 r807: [1419..1420]
 r808: [1417..1418]
 r809: [1415..1416]
 r810: [1412..1414]
 r811: [1411..1413]
 r812: [1409..1410]
 r813: [1404..1405]
 r814: [1406..1407]
 r815: [1399..1400]
 r816: [1401..1403]
 r817: [1401..1402]
 r818: [1476..1477]
 r819: [1469..1470]
 r820: [1466..1467]
 r821: [1454..1455]
 r822: [1456..1457]
 r823: [1451..1453]
 r824: [1451..1452]
 r825: [1447..1448]
 r826: [1438..1439]
 r827: [1440..1446]
 r828: [1441..1445]
 r829: [1440..1444]
 r830: [1440..1443]
 r831: [1434..1436]
 r832: [1434..1435]
 r833: [1394..1395]
 r834: [1396..1398]
 r835: [1396..1397]
 r836: [1361..1362]
 r837: [1353..1354]
 r838: [1340..1341]
 r839: [1337..1338]
 r840: [1323..1325]
 r841: [1323..1324]
 r842: [1320..1321]
 r843: [1317..1318]
 r844: [1304..1305]
 r845: [1299..1300]
 r846: [1296..1297]
 r847: [1281..1282]
 r848: [1278..1279]
 r849: [1268..1269]
 r850: [1266..1267]
 r851: [1263..1264]
 r852: [1259..1260]
 r853: [1257..1258]
 r854: [1254..1255]
 r855: [1246..1247]
 r856: [1244..1245]
 r857: [1242..1243]
 r858: [1239..1241]
 r859: [1238..1240]
 r860: [1236..1237]
 r861: [1389..1390]
 r862: [1391..1392]
 r863: [1384..1385]
 r864: [1381..1382]
 r865: [1378..1379]
 r866: [1234..1235]
 r867: [1232..1233]
 r868: [1230..1231]
 r869: [1227..1229]
 r870: [1226..1228]
 r871: [1224..1225]
 r872: [1222..1223]
 r873: [1217..1218]
 r874: [1219..1220]
 r875: [1214..1215]
 r876: [1208..1209]
 r877: [1203..1206]
 r878: [1189..1190]
 r879: [1035..1036]
 r880: [1032..1033]
 r881: [1029..1030]
 r882: [1019..1020]
 r883: [1016..1017]
 r884: [1009..1010]
 r885: [1006..1007]
 r886: [1004..1005]
 r887: [1002..1003]
 r888: [1000..1001]
 r889: [998..999]
 r890: [991..993]
 r891: [990..992]
 r892: [987..989]
 r893: [986..988]
 r894: [983..985]
 r895: [982..984]
 r896: [980..981]
 r897: [978..979]
 r898: [976..977]
 r899: [974..975]
 r900: [972..973]
 r901: [970..971]
 r902: [968..969]
 r903: [966..967]
 r904: [964..965]
 r905: [962..963]
 r906: [960..961]
 r907: [958..959]
 r908: [956..957]
 r909: [952..953]
 r910: [947..948]
 r911: [944..945]
 r912: [938..939]
 r913: [933..934]
 r914: [930..931]
 r915: [926..927]
 r916: [923..924]
 r917: [916..917]
 r918: [913..914]
 r919: [909..910]
 r920: [902..903]
 r921: [886..888]
 r922: [886..887]
 r923: [882..883]
 r924: [880..881]
 r925: [877..878]
 r926: [869..870]
 r927: [859..860]
 r928: [856..857]
 r929: [853..854]
 r930: [836..837]
 r931: [829..830]
 r932: [817..818]
 r933: [809..810]
 r934: [804..805]
 r935: [801..802]
 r936: [796..797]
 r937: [792..793]
 r938: [789..790]
 r939: [782..783]
 r940: [779..780]
 r941: [761..762]
 r942: [758..759]
 r943: [744..745]
 r944: [735..736]
 r945: [726..727]
 r946: [709..710]
 r947: [692..693]
 r948: [656..657]
 r949: [654..655]
 r950: [652..653]
 r951: [649..651]
 r952: [648..650]
 r953: [645..647]
 r954: [644..646]
 r955: [641..643]
 r956: [640..642]
 r957: [637..639]
 r958: [636..638]
 r959: [633..635]
 r960: [632..634]
 r961: [629..631]
 r962: [628..630]
 r963: [625..627]
 r964: [624..626]
 r965: [621..623]
 r966: [620..622]
 r967: [618..619]
 r968: [616..617]
 r969: [610..611]
 r970: [605..606]
 r971: [603..604]
 r972: [601..602]
 r973: [598..600]
 r974: [597..599]
 r975: [594..596]
 r976: [593..595]
 r977: [590..592]
 r978: [589..591]
 r979: [586..588]
 r980: [585..587]
 r981: [583..584]
 r982: [581..582]
 r983: [578..579]
 r984: [575..576]
 r985: [375..376]
 r986: [362..363]
 r987: [367..368]
 r988: [360..361]
 r989: [358..359]
 r990: [356..357]
 r991: [354..355]
 r992: [352..353]
 r993: [350..351]
 r994: [345..346]
 r995: [337..338]
 r996: [330..331]
 r997: [302..303]
 r998: [289..290]
 r999: [282..283]
 r1000: [279..280]
 r1001: [264..265]
 r1002: [258..259]
 r1003: [253..256]
 r1004: [237..238]
 r1005: [235..236]
 r1006: [233..234]
 r1007: [230..232]
 r1008: [229..231]
 r1009: [226..228]
 r1010: [225..227]
 r1011: [222..224]
 r1012: [221..223]
 r1013: [218..220]
 r1014: [217..219]
 r1015: [214..216]
 r1016: [213..215]
 r1017: [210..212]
 r1018: [209..211]
 r1019: [207..208]
 r1020: [567..568]
 r1021: [557..558]
 r1022: [559..560]
 r1023: [555..556]
 r1024: [553..554]
 r1025: [550..551]
 r1026: [547..548]
 r1027: [539..540]
 r1028: [537..538]
 r1029: [535..536]
 r1030: [533..534]
 r1031: [531..532]
 r1032: [526..527]
 r1033: [520..521]
 r1034: [515..516]
 r1035: [505..506]
 r1036: [478..479]
 r1037: [465..466]
 r1038: [458..459]
 r1039: [455..456]
 r1040: [440..441]
 r1041: [434..435]
 r1042: [429..432]
 r1043: [413..414]
 r1044: [411..412]
 r1045: [409..410]
 r1046: [406..408]
 r1047: [405..407]
 r1048: [402..404]
 r1049: [401..403]
 r1050: [398..400]
 r1051: [397..399]
 r1052: [394..396]
 r1053: [393..395]
 r1054: [390..392]
 r1055: [389..391]
 r1056: [386..388]
 r1057: [385..387]
 r1058: [383..384]
 r1059: [205..206]
 r1060: [201..202]
 r1061: [196..197]
 r1062: [192..193]
 r1063: [189..190]
 r1064: [184..185]
 r1065: [176..177]
 r1066: [172..173]
 r1067: [163..164]
 r1068: [161..162]
 r1069: [155..156]
 r1070: [152..153]
 r1071: [147..148]
 r1072: [136..138]
 r1073: [136..137]
 r1074: [128..129]
 r1075: [113..114]
 r1076: [111..112]
 r1077: [109..110]
 r1078: [104..105]
 r1079: [101..102]
 r1080: [96..97]
 r1081: [89..90]
 r1082: [84..85]
 r1083: [76..77]
 r1084: [69..70]
 r1085: [59..60]
 r1086: [44..45]
 r1087: [41..42]
 r1088: [34..35]
 r1089: [32..33]
 r1090: [27..28]
 r1091: [22..23]
 r1092: [17..18]
 r1093: [10..11]
 r1094: [3..4]
 r1096: [1171..1173]
 r1097: [1166..1168]
 r1098: [1135..1137]
 r1099: [1064..1066]
 r1100: [1057..1059]
 r1101: [1649..1651]
 r1102: [1605..1607]
 r1103: [1588..1590]
 r1104: [1583..1585]
 r1105: [1562..1564]
 r1106: [1547..1549]
 r1107: [1541..1543]
 r1108: [1530..1532]
 r1111: [1472..1474]
 r1112: [1439..1442]
 r1113: [1363..1365]
 r1114: [1357..1359]
 r1117: [1210..1212]
 r1118: [1202..1204]
 r1121: [874..876]
 r1122: [776..778]
 r1123: [755..757]
 r1124: [379..381]
 r1125: [364..366]
 r1126: [327..329]
 r1127: [292..294]
 r1128: [285..287]
 r1129: [260..262]
 r1130: [252..254]
 r1133: [571..573]
 r1134: [509..511]
 r1135: [495..497]
 r1136: [468..470]
 r1137: [461..463]
 r1138: [436..438]
 r1139: [428..430]
 r1142: [179..181]
 r1143: [157..159]
 r1144: [139..141]
 r1145: [130..132]
 r1147: [120..122]
 r1148: [117..118]
 r1150: [79..81]
 r1151: [65..67]
Compressing live ranges: from 1803 to 1394 - 77%
Ranges after the compression:
 r87: [1390..1391]
 r88: [1382..1383]
 r89: [1382..1393]
 r91: [1378..1379]
 r92: [1370..1371]
 r93: [1370..1393]
 r95: [1366..1367]
 r96: [1358..1359]
 r99: [1354..1355]
 r100: [1346..1347]
 r103: [1342..1343]
 r104: [1334..1335]
 r107: [1330..1331]
 r108: [1322..1323]
 r111: [1318..1319]
 r112: [1310..1311]
 r115: [1306..1307]
 r116: [1298..1299]
 r119: [1294..1295]
 r120: [1286..1287]
 r121: [1286..1393]
 r123: [1272..1275]
 r124: [898..899]
 r125: [896..897]
 r126: [884..885]
 r127: [884..885]
 r128: [882..883]
 r129: [880..881]
 r130: [870..879]
 r131: [876..877]
 r132: [874..875]
 r133: [872..873]
 r134: [870..871]
 r135: [868..869]
 r136: [866..867]
 r137: [818..819]
 r138: [858..859]
 r139: [856..857]
 r140: [856..857]
 r141: [854..855]
 r142: [852..853]
 r143: [850..851]
 r144: [840..841]
 r145: [836..839]
 r146: [836..837]
 r147: [834..835]
 r148: [832..833]
 r149: [808..809]
 r150: [796..797]
 r151: [794..795]
 r152: [792..793]
 r153: [792..793]
 r154: [790..791]
 r155: [788..789]
 r156: [786..787]
 r157: [784..785]
 r158: [1264..1265]
 r159: [1262..1263]
 r160: [1256..1257]
 r161: [1254..1255]
 r162: [1246..1253]
 r163: [1250..1251]
 r164: [1248..1249]
 r165: [1246..1247]
 r166: [1244..1245]
 r167: [1236..1243]
 r168: [1240..1241]
 r169: [1238..1239]
 r170: [1236..1237]
 r171: [1234..1235]
 r172: [1222..1223]
 r173: [1220..1221]
 r174: [1218..1219]
 r175: [1206..1207]
 r176: [1204..1205]
 r177: [1202..1203]
 r178: [1200..1201]
 r179: [1194..1199]
 r180: [1196..1197]
 r181: [1192..1195]
 r182: [1190..1191]
 r183: [1188..1189]
 r184: [1186..1187]
 r185: [1174..1175]
 r186: [1174..1175]
 r187: [1172..1173]
 r188: [1170..1171]
 r190: [1158..1169]
 r191: [1166..1167]
 r192: [1164..1165]
 r193: [1162..1163]
 r194: [1160..1161]
 r195: [1158..1159]
 r196: [1144..1157]
 r197: [1148..1155]
 r198: [1152..1153]
 r199: [1150..1151]
 r200: [1148..1149]
 r201: [1146..1147]
 r202: [1144..1145]
 r203: [1142..1143]
 r204: [1140..1141]
 r205: [1138..1139]
 r206: [1132..1135]
 r207: [1130..1131]
 r208: [1126..1127]
 r209: [1076..1077]
 r210: [1118..1119]
 r211: [1116..1117]
 r212: [1116..1117]
 r213: [1114..1115]
 r214: [1112..1113]
 r215: [1110..1111]
 r216: [1094..1095]
 r217: [1092..1093]
 r218: [1092..1093]
 r219: [1090..1091]
 r220: [1030..1041]
 r221: [1038..1039]
 r222: [1036..1037]
 r223: [1034..1035]
 r224: [1032..1033]
 r225: [1030..1031]
 r226: [1016..1029]
 r227: [1020..1027]
 r228: [1024..1025]
 r229: [1022..1023]
 r230: [1020..1021]
 r231: [1018..1019]
 r232: [1016..1017]
 r233: [1000..1015]
 r234: [1002..1013]
 r235: [1010..1011]
 r236: [1008..1009]
 r237: [1008..1009]
 r238: [1006..1007]
 r239: [1004..1005]
 r240: [1002..1003]
 r241: [1000..1001]
 r242: [980..993]
 r243: [990..991]
 r244: [988..989]
 r245: [986..987]
 r246: [984..985]
 r247: [982..983]
 r248: [980..981]
 r249: [968..979]
 r250: [970..977]
 r251: [974..975]
 r252: [972..973]
 r253: [970..971]
 r254: [968..969]
 r255: [962..963]
 r256: [960..961]
 r257: [954..955]
 r258: [950..951]
 r259: [1064..1065]
 r260: [1060..1061]
 r261: [1058..1059]
 r262: [1056..1057]
 r263: [1052..1053]
 r264: [1052..1053]
 r265: [1050..1051]
 r266: [926..927]
 r267: [916..917]
 r269: [912..913]
 r270: [910..911]
 r271: [910..911]
 r272: [908..909]
 r273: [906..907]
 r274: [904..905]
 r275: [902..903]
 r276: [772..781]
 r277: [776..779]
 r278: [776..777]
 r279: [774..775]
 r280: [772..773]
 r281: [770..771]
 r282: [764..767]
 r283: [764..765]
 r284: [762..763]
 r285: [760..761]
 r286: [758..759]
 r287: [748..749]
 r288: [746..747]
 r289: [710..711]
 r290: [708..709]
 r291: [704..707]
 r292: [704..705]
 r293: [702..703]
 r294: [698..699]
 r295: [696..697]
 r296: [692..695]
 r297: [692..693]
 r298: [686..689]
 r299: [686..687]
 r300: [684..685]
 r301: [680..681]
 r302: [674..679]
 r303: [678..679]
 r304: [676..677]
 r305: [674..675]
 r306: [670..673]
 r307: [670..671]
 r308: [668..669]
 r309: [668..669]
 r310: [666..667]
 r311: [660..661]
 r312: [652..655]
 r313: [650..651]
 r314: [648..649]
 r315: [646..647]
 r316: [644..645]
 r317: [644..645]
 r318: [642..643]
 r319: [638..639]
 r320: [628..637]
 r321: [634..635]
 r322: [634..635]
 r323: [632..633]
 r324: [632..633]
 r325: [630..631]
 r326: [628..629]
 r327: [626..627]
 r328: [620..621]
 r329: [618..619]
 r330: [618..619]
 r331: [614..615]
 r332: [612..613]
 r333: [612..613]
 r334: [604..611]
 r335: [610..611]
 r336: [610..611]
 r337: [608..609]
 r338: [606..607]
 r339: [604..605]
 r340: [602..603]
 r341: [598..599]
 r342: [596..597]
 r343: [588..595]
 r344: [592..593]
 r345: [590..591]
 r346: [588..589]
 r347: [584..585]
 r348: [582..583]
 r349: [582..583]
 r350: [572..581]
 r351: [580..581]
 r352: [576..579]
 r353: [574..575]
 r354: [572..573]
 r355: [570..571]
 r356: [568..569]
 r357: [566..567]
 r358: [566..567]
 r359: [556..565]
 r360: [564..565]
 r361: [560..563]
 r362: [558..559]
 r363: [556..557]
 r364: [548..555]
 r365: [554..555]
 r366: [554..555]
 r367: [552..553]
 r368: [550..551]
 r369: [548..549]
 r370: [546..547]
 r371: [544..545]
 r372: [542..543]
 r373: [542..543]
 r374: [534..541]
 r375: [540..541]
 r376: [538..539]
 r377: [536..537]
 r378: [534..535]
 r379: [532..533]
 r380: [530..531]
 r381: [528..529]
 r382: [528..529]
 r383: [520..527]
 r384: [526..527]
 r385: [524..525]
 r386: [522..523]
 r387: [520..521]
 r388: [518..519]
 r389: [518..519]
 r390: [516..517]
 r391: [516..517]
 r392: [508..515]
 r393: [514..515]
 r394: [514..515]
 r395: [512..513]
 r396: [510..511]
 r397: [508..509]
 r398: [506..507]
 r399: [504..505]
 r400: [502..503]
 r401: [502..503]
 r402: [500..501]
 r403: [498..499]
 r404: [496..497]
 r405: [496..497]
 r406: [494..495]
 r407: [492..493]
 r408: [490..491]
 r409: [490..491]
 r410: [488..489]
 r411: [486..487]
 r412: [484..485]
 r413: [484..485]
 r414: [482..483]
 r415: [454..455]
 r416: [452..453]
 r417: [452..453]
 r418: [428..431]
 r419: [286..287]
 r420: [284..285]
 r421: [284..285]
 r422: [282..283]
 r423: [278..281]
 r424: [258..259]
 r425: [258..259]
 r426: [256..257]
 r427: [254..255]
 r428: [252..253]
 r429: [252..253]
 r430: [244..251]
 r431: [248..251]
 r432: [246..247]
 r433: [244..245]
 r434: [242..243]
 r435: [238..239]
 r436: [238..239]
 r437: [234..237]
 r438: [236..237]
 r439: [234..235]
 r440: [232..233]
 r441: [230..231]
 r442: [230..231]
 r443: [226..229]
 r444: [226..227]
 r445: [224..225]
 r446: [222..223]
 r447: [212..213]
 r448: [210..211]
 r449: [208..209]
 r450: [208..209]
 r451: [206..207]
 r452: [204..205]
 r453: [204..205]
 r454: [202..203]
 r455: [194..195]
 r457: [190..191]
 r458: [188..189]
 r459: [188..189]
 r460: [186..187]
 r461: [184..185]
 r462: [184..185]
 r463: [182..183]
 r464: [424..425]
 r465: [422..423]
 r466: [422..423]
 r467: [420..421]
 r468: [418..419]
 r469: [408..411]
 r470: [404..405]
 r471: [388..389]
 r472: [388..389]
 r473: [386..387]
 r474: [384..385]
 r475: [382..383]
 r476: [380..381]
 r477: [378..381]
 r478: [372..377]
 r479: [376..377]
 r480: [374..375]
 r481: [372..373]
 r482: [370..371]
 r483: [366..367]
 r484: [366..367]
 r485: [362..365]
 r486: [364..365]
 r487: [362..363]
 r488: [360..361]
 r489: [358..359]
 r490: [358..359]
 r491: [354..357]
 r492: [354..355]
 r493: [352..353]
 r494: [350..351]
 r495: [340..341]
 r496: [338..339]
 r497: [336..337]
 r498: [336..337]
 r499: [334..335]
 r500: [332..333]
 r501: [332..333]
 r502: [330..331]
 r503: [322..323]
 r505: [318..319]
 r506: [316..317]
 r507: [316..317]
 r508: [314..315]
 r509: [312..313]
 r510: [312..313]
 r511: [310..311]
 r512: [156..157]
 r513: [154..155]
 r514: [152..153]
 r515: [142..149]
 r516: [146..147]
 r517: [144..145]
 r518: [140..143]
 r519: [130..139]
 r520: [132..137]
 r521: [136..137]
 r522: [134..135]
 r523: [132..133]
 r524: [130..131]
 r525: [114..121]
 r526: [118..119]
 r527: [116..117]
 r528: [114..115]
 r529: [112..113]
 r530: [106..107]
 r531: [104..107]
 r533: [100..101]
 r534: [98..99]
 r535: [92..93]
 r536: [84..85]
 r537: [82..83]
 r538: [74..81]
 r539: [78..79]
 r540: [76..77]
 r541: [74..75]
 r542: [72..73]
 r543: [64..71]
 r544: [68..69]
 r545: [66..67]
 r546: [62..65]
 r547: [56..61]
 r548: [58..59]
 r549: [54..57]
 r550: [54..55]
 r551: [50..51]
 r552: [46..49]
 r553: [46..47]
 r554: [44..45]
 r555: [42..43]
 r556: [42..43]
 r557: [40..41]
 r558: [40..41]
 r559: [38..39]
 r560: [30..37]
 r561: [30..35]
 r562: [32..33]
 r563: [28..31]
 r564: [28..29]
 r565: [24..25]
 r566: [22..23]
 r567: [20..21]
 r568: [4..19]
 r569: [16..17]
 r570: [14..15]
 r571: [12..13]
 r572: [10..11]
 r573: [4..9]
 r574: [6..7]
 r575: [2..5]
 r576: [2..3]
 r577: [1088..1097]
 r578: [1050..1055]
 r579: [664..683]
 r580: [1128..1129]
 r581: [952..953]
 r582: [406..407]
 r583: [1386..1387]
 r584: [1384..1385]
 r588: [1374..1375]
 r589: [1372..1373]
 r593: [1362..1363]
 r594: [1360..1361]
 r598: [1350..1351]
 r599: [1348..1349]
 r603: [1338..1339]
 r604: [1336..1337]
 r608: [1326..1327]
 r609: [1324..1325]
 r613: [1314..1315]
 r614: [1312..1313]
 r618: [1302..1303]
 r619: [1300..1301]
 r623: [1290..1291]
 r624: [1288..1289]
 r628: [1230..1267]
 r629: [1230..1231]
 r630: [1260..1261]
 r631: [1244..1259]
 r632: [1226..1227]
 r633: [1218..1225]
 r634: [1212..1213]
 r635: [1204..1211]
 r636: [1210..1211]
 r637: [1202..1209]
 r638: [1180..1181]
 r639: [1172..1179]
 r640: [1170..1179]
 r641: [1178..1179]
 r643: [1122..1123]
 r644: [1114..1121]
 r645: [1104..1105]
 r646: [1090..1093]
 r647: [1048..1049]
 r648: [1042..1047]
 r649: [1046..1047]
 r651: [1042..1043]
 r653: [996..997]
 r654: [994..995]
 r655: [914..923]
 r656: [920..921]
 r658: [890..891]
 r659: [882..889]
 r660: [888..889]
 r661: [874..887]
 r662: [862..863]
 r663: [854..861]
 r664: [844..845]
 r665: [842..843]
 r666: [804..805]
 r667: [794..803]
 r668: [800..801]
 r669: [790..799]
 r670: [450..713]
 r671: [450..451]
 r672: [666..669]
 r673: [624..625]
 r674: [622..623]
 r675: [426..427]
 r676: [420..425]
 r677: [392..393]
 r678: [390..391]
 r679: [368..369]
 r680: [364..367]
 r681: [348..349]
 r682: [338..347]
 r683: [344..345]
 r684: [334..343]
 r685: [320..329]
 r686: [326..327]
 r688: [288..289]
 r689: [282..287]
 r690: [262..263]
 r691: [260..261]
 r692: [240..241]
 r693: [236..239]
 r694: [220..221]
 r695: [210..219]
 r696: [216..217]
 r697: [206..215]
 r698: [192..201]
 r699: [198..199]
 r701: [0..159]
 r702: [0..1]
 r703: [124..125]
 r705: [110..111]
 r707: [96..97]
 r708: [92..95]
 r709: [52..53]
 r710: [38..51]
 r711: [1392..1393]
 r712: [1388..1389]
 r713: [1386..1387]
 r714: [1380..1381]
 r715: [1376..1377]
 r716: [1374..1375]
 r717: [1368..1369]
 r718: [1364..1365]
 r719: [1362..1363]
 r720: [1356..1357]
 r721: [1352..1353]
 r722: [1350..1351]
 r723: [1344..1345]
 r724: [1340..1341]
 r725: [1338..1339]
 r726: [1332..1333]
 r727: [1328..1329]
 r728: [1326..1327]
 r729: [1320..1321]
 r730: [1316..1317]
 r731: [1314..1315]
 r732: [1308..1309]
 r733: [1304..1305]
 r734: [1302..1303]
 r735: [1296..1297]
 r736: [1292..1293]
 r737: [1290..1291]
 r738: [1284..1285]
 r739: [1282..1283]
 r740: [1280..1281]
 r741: [1278..1279]
 r742: [1276..1277]
 r743: [1274..1275]
 r744: [1272..1273]
 r745: [900..901]
 r746: [898..899]
 r747: [894..895]
 r748: [896..897]
 r749: [892..893]
 r750: [886..887]
 r751: [878..879]
 r752: [828..829]
 r753: [826..827]
 r754: [824..825]
 r755: [822..823]
 r756: [822..823]
 r757: [820..821]
 r758: [816..817]
 r759: [818..819]
 r760: [812..813]
 r761: [814..815]
 r762: [814..815]
 r763: [864..865]
 r764: [860..861]
 r765: [858..859]
 r766: [848..849]
 r767: [850..851]
 r768: [846..847]
 r769: [838..839]
 r770: [830..831]
 r771: [832..833]
 r772: [810..811]
 r773: [806..807]
 r774: [808..809]
 r775: [802..803]
 r776: [798..799]
 r777: [796..797]
 r778: [786..787]
 r779: [1270..1271]
 r780: [1268..1269]
 r781: [1266..1267]
 r782: [1262..1263]
 r783: [1258..1259]
 r784: [1254..1255]
 r785: [1252..1253]
 r786: [1248..1249]
 r787: [1242..1243]
 r788: [1238..1239]
 r789: [1232..1233]
 r790: [1234..1235]
 r791: [1228..1229]
 r792: [1224..1225]
 r793: [1216..1217]
 r794: [1214..1215]
 r795: [1208..1209]
 r796: [1198..1199]
 r797: [1184..1185]
 r798: [1186..1187]
 r799: [1182..1183]
 r800: [1176..1177]
 r801: [1168..1169]
 r802: [1156..1157]
 r803: [1154..1155]
 r804: [1136..1137]
 r805: [1134..1135]
 r806: [1132..1133]
 r807: [1086..1087]
 r808: [1084..1085]
 r809: [1082..1083]
 r810: [1080..1081]
 r811: [1080..1081]
 r812: [1078..1079]
 r813: [1074..1075]
 r814: [1076..1077]
 r815: [1070..1071]
 r816: [1072..1073]
 r817: [1072..1073]
 r818: [1124..1125]
 r819: [1120..1121]
 r820: [1118..1119]
 r821: [1108..1109]
 r822: [1110..1111]
 r823: [1106..1107]
 r824: [1106..1107]
 r825: [1102..1103]
 r826: [1098..1099]
 r827: [1100..1101]
 r828: [1100..1101]
 r829: [1100..1101]
 r830: [1100..1101]
 r831: [1096..1097]
 r832: [1096..1097]
 r833: [1066..1067]
 r834: [1068..1069]
 r835: [1068..1069]
 r836: [1044..1045]
 r837: [1040..1041]
 r838: [1028..1029]
 r839: [1026..1027]
 r840: [1014..1015]
 r841: [1014..1015]
 r842: [1012..1013]
 r843: [1010..1011]
 r844: [998..999]
 r845: [994..995]
 r846: [992..993]
 r847: [978..979]
 r848: [976..977]
 r849: [966..967]
 r850: [964..965]
 r851: [962..963]
 r852: [958..959]
 r853: [956..957]
 r854: [954..955]
 r855: [948..949]
 r856: [946..947]
 r857: [944..945]
 r858: [942..943]
 r859: [942..943]
 r860: [940..941]
 r861: [1062..1063]
 r862: [1064..1065]
 r863: [1058..1059]
 r864: [1056..1057]
 r865: [1054..1055]
 r866: [938..939]
 r867: [936..937]
 r868: [934..935]
 r869: [932..933]
 r870: [932..933]
 r871: [930..931]
 r872: [928..929]
 r873: [924..925]
 r874: [926..927]
 r875: [922..923]
 r876: [918..919]
 r877: [914..917]
 r878: [904..905]
 r879: [782..783]
 r880: [780..781]
 r881: [778..779]
 r882: [768..769]
 r883: [766..767]
 r884: [760..761]
 r885: [758..759]
 r886: [756..757]
 r887: [754..755]
 r888: [752..753]
 r889: [750..751]
 r890: [744..745]
 r891: [744..745]
 r892: [742..743]
 r893: [742..743]
 r894: [740..741]
 r895: [740..741]
 r896: [738..739]
 r897: [736..737]
 r898: [734..735]
 r899: [732..733]
 r900: [730..731]
 r901: [728..729]
 r902: [726..727]
 r903: [724..725]
 r904: [722..723]
 r905: [720..721]
 r906: [718..719]
 r907: [716..717]
 r908: [714..715]
 r909: [712..713]
 r910: [708..709]
 r911: [706..707]
 r912: [700..701]
 r913: [696..697]
 r914: [694..695]
 r915: [690..691]
 r916: [688..689]
 r917: [682..683]
 r918: [680..681]
 r919: [678..679]
 r920: [672..673]
 r921: [662..663]
 r922: [662..663]
 r923: [658..659]
 r924: [656..657]
 r925: [654..655]
 r926: [648..649]
 r927: [640..641]
 r928: [638..639]
 r929: [636..637]
 r930: [622..623]
 r931: [616..617]
 r932: [608..609]
 r933: [600..601]
 r934: [596..597]
 r935: [594..595]
 r936: [590..591]
 r937: [586..587]
 r938: [584..585]
 r939: [580..581]
 r940: [578..579]
 r941: [564..565]
 r942: [562..563]
 r943: [552..553]
 r944: [544..545]
 r945: [538..539]
 r946: [524..525]
 r947: [512..513]
 r948: [480..481]
 r949: [478..479]
 r950: [476..477]
 r951: [474..475]
 r952: [474..475]
 r953: [472..473]
 r954: [472..473]
 r955: [470..471]
 r956: [470..471]
 r957: [468..469]
 r958: [468..469]
 r959: [466..467]
 r960: [466..467]
 r961: [464..465]
 r962: [464..465]
 r963: [462..463]
 r964: [462..463]
 r965: [460..461]
 r966: [460..461]
 r967: [458..459]
 r968: [456..457]
 r969: [452..453]
 r970: [448..449]
 r971: [446..447]
 r972: [444..445]
 r973: [442..443]
 r974: [442..443]
 r975: [440..441]
 r976: [440..441]
 r977: [438..439]
 r978: [438..439]
 r979: [436..437]
 r980: [436..437]
 r981: [434..435]
 r982: [432..433]
 r983: [430..431]
 r984: [428..429]
 r985: [286..287]
 r986: [276..277]
 r987: [280..281]
 r988: [274..275]
 r989: [272..273]
 r990: [270..271]
 r991: [268..269]
 r992: [266..267]
 r993: [264..265]
 r994: [260..261]
 r995: [254..255]
 r996: [250..251]
 r997: [228..229]
 r998: [218..219]
 r999: [214..215]
 r1000: [212..213]
 r1001: [200..201]
 r1002: [196..197]
 r1003: [192..195]
 r1004: [180..181]
 r1005: [178..179]
 r1006: [176..177]
 r1007: [174..175]
 r1008: [174..175]
 r1009: [172..173]
 r1010: [172..173]
 r1011: [170..171]
 r1012: [170..171]
 r1013: [168..169]
 r1014: [168..169]
 r1015: [166..167]
 r1016: [166..167]
 r1017: [164..165]
 r1018: [164..165]
 r1019: [162..163]
 r1020: [424..425]
 r1021: [416..417]
 r1022: [418..419]
 r1023: [414..415]
 r1024: [412..413]
 r1025: [410..411]
 r1026: [408..409]
 r1027: [402..403]
 r1028: [400..401]
 r1029: [398..399]
 r1030: [396..397]
 r1031: [394..395]
 r1032: [390..391]
 r1033: [386..387]
 r1034: [382..383]
 r1035: [376..377]
 r1036: [356..357]
 r1037: [346..347]
 r1038: [342..343]
 r1039: [340..341]
 r1040: [328..329]
 r1041: [324..325]
 r1042: [320..323]
 r1043: [308..309]
 r1044: [306..307]
 r1045: [304..305]
 r1046: [302..303]
 r1047: [302..303]
 r1048: [300..301]
 r1049: [300..301]
 r1050: [298..299]
 r1051: [298..299]
 r1052: [296..297]
 r1053: [296..297]
 r1054: [294..295]
 r1055: [294..295]
 r1056: [292..293]
 r1057: [292..293]
 r1058: [290..291]
 r1059: [160..161]
 r1060: [158..159]
 r1061: [154..155]
 r1062: [150..151]
 r1063: [148..149]
 r1064: [144..145]
 r1065: [138..139]
 r1066: [136..137]
 r1067: [128..129]
 r1068: [126..127]
 r1069: [122..123]
 r1070: [120..121]
 r1071: [116..117]
 r1072: [108..109]
 r1073: [108..109]
 r1074: [102..103]
 r1075: [90..91]
 r1076: [88..89]
 r1077: [86..87]
 r1078: [82..83]
 r1079: [80..81]
 r1080: [76..77]
 r1081: [70..71]
 r1082: [66..67]
 r1083: [60..61]
 r1084: [54..55]
 r1085: [48..49]
 r1086: [36..37]
 r1087: [34..35]
 r1088: [28..29]
 r1089: [26..27]
 r1090: [22..23]
 r1091: [18..19]
 r1092: [14..15]
 r1093: [8..9]
 r1094: [2..3]
 r1096: [890..891]
 r1097: [888..889]
 r1098: [862..863]
 r1099: [804..805]
 r1100: [800..801]
 r1101: [1260..1261]
 r1102: [1226..1227]
 r1103: [1212..1213]
 r1104: [1210..1211]
 r1105: [1192..1193]
 r1106: [1180..1181]
 r1107: [1178..1179]
 r1108: [1170..1171]
 r1111: [1122..1123]
 r1112: [1099..1101]
 r1113: [1046..1047]
 r1114: [1042..1043]
 r1117: [920..921]
 r1118: [914..915]
 r1121: [652..653]
 r1122: [576..577]
 r1123: [560..561]
 r1124: [288..289]
 r1125: [278..279]
 r1126: [248..249]
 r1127: [220..221]
 r1128: [216..217]
 r1129: [198..199]
 r1130: [192..193]
 r1133: [426..427]
 r1134: [378..379]
 r1135: [368..369]
 r1136: [348..349]
 r1137: [344..345]
 r1138: [326..327]
 r1139: [320..321]
 r1142: [140..141]
 r1143: [124..125]
 r1144: [110..111]
 r1145: [104..105]
 r1147: [96..97]
 r1148: [94..95]
 r1150: [62..63]
 r1151: [52..53]

********** Assignment #3: **********


********** Local #5: **********

	   Spilling non-eliminable hard regs: 6
	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=960, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 20 to 7 (offset=896, prev_offset=0)
Can eliminate 20 to 6 (offset=-48, prev_offset=-48)
changing reg in insn 14
changing reg in insn 15
changing reg in insn 22
changing reg in insn 23
changing reg in insn 24
changing reg in insn 23
changing reg in insn 29
changing reg in insn 30
changing reg in insn 37
changing reg in insn 38
changing reg in insn 39
changing reg in insn 38
changing reg in insn 44
changing reg in insn 45
changing reg in insn 52
changing reg in insn 53
changing reg in insn 59
changing reg in insn 60
changing reg in insn 67
changing reg in insn 68
changing reg in insn 74
changing reg in insn 75
changing reg in insn 82
changing reg in insn 83
changing reg in insn 89
changing reg in insn 90
changing reg in insn 97
changing reg in insn 98
changing reg in insn 104
changing reg in insn 105
changing reg in insn 112
changing reg in insn 113
changing reg in insn 119
changing reg in insn 120
changing reg in insn 127
changing reg in insn 128
changing reg in insn 134
changing reg in insn 135
changing reg in insn 142
changing reg in insn 143
changing reg in insn 144
changing reg in insn 143
changing reg in insn 155
changing reg in insn 160
changing reg in insn 157
changing reg in insn 167
changing reg in insn 169
changing reg in insn 171
changing reg in insn 171
changing reg in insn 179
changing reg in insn 180
changing reg in insn 181
changing reg in insn 182
changing reg in insn 183
changing reg in insn 183
changing reg in insn 183
changing reg in insn 189
changing reg in insn 185
changing reg in insn 186
changing reg in insn 186
changing reg in insn 187
changing reg in insn 188
changing reg in insn 188
changing reg in insn 189
changing reg in insn 189
changing reg in insn 190
changing reg in insn 191
changing reg in insn 192
changing reg in insn 220
changing reg in insn 236
changing reg in insn 238
changing reg in insn 240
changing reg in insn 239
changing reg in insn 240
changing reg in insn 240
changing reg in insn 241
changing reg in insn 242
changing reg in insn 242
changing reg in insn 244
changing reg in insn 249
changing reg in insn 250
changing reg in insn 250
changing reg in insn 253
changing reg in insn 252
changing reg in insn 253
changing reg in insn 253
changing reg in insn 254
changing reg in insn 254
changing reg in insn 261
changing reg in insn 271
changing reg in insn 273
changing reg in insn 274
changing reg in insn 276
changing reg in insn 275
changing reg in insn 276
changing reg in insn 276
changing reg in insn 277
changing reg in insn 278
changing reg in insn 278
changing reg in insn 280
changing reg in insn 280
changing reg in insn 281
changing reg in insn 298
changing reg in insn 299
changing reg in insn 299
changing reg in insn 301
changing reg in insn 304
changing reg in insn 305
changing reg in insn 305
changing reg in insn 307
changing reg in insn 307
changing reg in insn 313
changing reg in insn 309
changing reg in insn 310
changing reg in insn 310
changing reg in insn 312
changing reg in insn 312
changing reg in insn 313
changing reg in insn 313
changing reg in insn 314
changing reg in insn 320
changing reg in insn 316
changing reg in insn 317
changing reg in insn 317
changing reg in insn 319
changing reg in insn 319
changing reg in insn 320
changing reg in insn 320
changing reg in insn 334
changing reg in insn 335
changing reg in insn 335
changing reg in insn 335
changing reg in insn 336
changing reg in insn 336
changing reg in insn 337
changing reg in insn 345
changing reg in insn 346
changing reg in insn 346
changing reg in insn 347
changing reg in insn 348
changing reg in insn 349
changing reg in insn 349
changing reg in insn 351
changing reg in insn 352
changing reg in insn 352
changing reg in insn 352
changing reg in insn 353
changing reg in insn 354
changing reg in insn 354
changing reg in insn 355
changing reg in insn 355
changing reg in insn 366
changing reg in insn 367
changing reg in insn 368
changing reg in insn 369
changing reg in insn 370
changing reg in insn 374
changing reg in insn 381
changing reg in insn 376
changing reg in insn 377
changing reg in insn 377
changing reg in insn 377
changing reg in insn 378
changing reg in insn 378
changing reg in insn 379
changing reg in insn 379
changing reg in insn 380
changing reg in insn 381
changing reg in insn 381
changing reg in insn 383
changing reg in insn 385
changing reg in insn 386
changing reg in insn 386
changing reg in insn 387
changing reg in insn 387
changing reg in insn 388
changing reg in insn 389
changing reg in insn 389
changing reg in insn 390
changing reg in insn 391
changing reg in insn 391
changing reg in insn 392
changing reg in insn 393
changing reg in insn 395
changing reg in insn 400
changing reg in insn 397
changing reg in insn 404
changing reg in insn 405
changing reg in insn 421
changing reg in insn 420
changing reg in insn 422
changing reg in insn 421
changing reg in insn 447
changing reg in insn 463
changing reg in insn 465
changing reg in insn 467
changing reg in insn 466
changing reg in insn 467
changing reg in insn 467
changing reg in insn 468
changing reg in insn 469
changing reg in insn 469
changing reg in insn 471
changing reg in insn 490
changing reg in insn 491
changing reg in insn 493
changing reg in insn 495
changing reg in insn 496
changing reg in insn 497
changing reg in insn 525
changing reg in insn 532
changing reg in insn 527
changing reg in insn 528
changing reg in insn 528
changing reg in insn 528
changing reg in insn 529
changing reg in insn 529
changing reg in insn 530
changing reg in insn 530
changing reg in insn 531
changing reg in insn 532
changing reg in insn 532
changing reg in insn 534
changing reg in insn 536
changing reg in insn 537
changing reg in insn 537
changing reg in insn 538
changing reg in insn 538
changing reg in insn 539
changing reg in insn 540
changing reg in insn 540
changing reg in insn 541
changing reg in insn 554
changing reg in insn 544
changing reg in insn 553
changing reg in insn 546
changing reg in insn 548
changing reg in insn 550
changing reg in insn 549
changing reg in insn 550
changing reg in insn 550
changing reg in insn 551
changing reg in insn 552
changing reg in insn 552
changing reg in insn 553
changing reg in insn 553
changing reg in insn 554
changing reg in insn 559
changing reg in insn 567
changing reg in insn 561
changing reg in insn 562
changing reg in insn 562
changing reg in insn 562
changing reg in insn 563
changing reg in insn 563
changing reg in insn 564
changing reg in insn 564
changing reg in insn 565
changing reg in insn 565
changing reg in insn 566
changing reg in insn 566
changing reg in insn 566
changing reg in insn 567
changing reg in insn 567
changing reg in insn 569
changing reg in insn 571
changing reg in insn 572
changing reg in insn 572
changing reg in insn 573
changing reg in insn 573
changing reg in insn 574
changing reg in insn 578
changing reg in insn 580
changing reg in insn 580
changing reg in insn 580
changing reg in insn 581
changing reg in insn 592
changing reg in insn 594
changing reg in insn 609
changing reg in insn 608
changing reg in insn 610
changing reg in insn 609
changing reg in insn 639
changing reg in insn 643
changing reg in insn 644
changing reg in insn 644
changing reg in insn 646
changing reg in insn 646
changing reg in insn 646
changing reg in insn 648
changing reg in insn 654
changing reg in insn 656
changing reg in insn 657
changing reg in insn 658
changing reg in insn 696
changing reg in insn 705
changing reg in insn 711
changing reg in insn 712
changing reg in insn 714
changing reg in insn 713
changing reg in insn 714
changing reg in insn 714
changing reg in insn 715
changing reg in insn 716
changing reg in insn 716
changing reg in insn 718
changing reg in insn 718
changing reg in insn 719
changing reg in insn 723
changing reg in insn 730
changing reg in insn 725
changing reg in insn 727
changing reg in insn 728
changing reg in insn 729
changing reg in insn 729
changing reg in insn 730
changing reg in insn 730
changing reg in insn 731
changing reg in insn 733
changing reg in insn 735
changing reg in insn 736
changing reg in insn 737
changing reg in insn 737
changing reg in insn 739
changing reg in insn 739
changing reg in insn 741
changing reg in insn 754
changing reg in insn 755
changing reg in insn 755
changing reg in insn 756
changing reg in insn 823
changing reg in insn 824
changing reg in insn 824
changing reg in insn 826
changing reg in insn 826
changing reg in insn 829
changing reg in insn 828
changing reg in insn 829
changing reg in insn 829
changing reg in insn 830
changing reg in insn 832
changing reg in insn 833
changing reg in insn 833
changing reg in insn 835
changing reg in insn 835
changing reg in insn 838
changing reg in insn 837
changing reg in insn 838
changing reg in insn 840
changing reg in insn 843
changing reg in insn 842
changing reg in insn 843
changing reg in insn 843
changing reg in insn 844
changing reg in insn 847
changing reg in insn 849
changing reg in insn 854
changing reg in insn 850
changing reg in insn 852
changing reg in insn 852
changing reg in insn 853
changing reg in insn 853
changing reg in insn 854
changing reg in insn 854
changing reg in insn 857
changing reg in insn 856
changing reg in insn 857
changing reg in insn 859
changing reg in insn 861
changing reg in insn 862
changing reg in insn 863
changing reg in insn 871
changing reg in insn 872
changing reg in insn 877
changing reg in insn 879
changing reg in insn 880
changing reg in insn 880
changing reg in insn 883
changing reg in insn 885
changing reg in insn 886
changing reg in insn 886
changing reg in insn 886
changing reg in insn 888
changing reg in insn 887
changing reg in insn 888
changing reg in insn 888
changing reg in insn 889
changing reg in insn 891
changing reg in insn 893
changing reg in insn 901
changing reg in insn 895
changing reg in insn 896
changing reg in insn 897
changing reg in insn 899
changing reg in insn 898
changing reg in insn 899
changing reg in insn 899
changing reg in insn 900
changing reg in insn 900
changing reg in insn 901
changing reg in insn 901
changing reg in insn 902
changing reg in insn 905
changing reg in insn 906
changing reg in insn 906
changing reg in insn 908
changing reg in insn 907
changing reg in insn 908
changing reg in insn 910
changing reg in insn 911
changing reg in insn 911
changing reg in insn 913
changing reg in insn 912
changing reg in insn 913
changing reg in insn 913
changing reg in insn 920
changing reg in insn 914
changing reg in insn 915
changing reg in insn 916
changing reg in insn 918
changing reg in insn 918
changing reg in insn 919
changing reg in insn 919
changing reg in insn 920
changing reg in insn 920
changing reg in insn 921
changing reg in insn 923
changing reg in insn 924
changing reg in insn 924
changing reg in insn 926
changing reg in insn 926
changing reg in insn 932
changing reg in insn 928
changing reg in insn 929
changing reg in insn 929
changing reg in insn 931
changing reg in insn 931
changing reg in insn 932
changing reg in insn 934
changing reg in insn 936
changing reg in insn 938
changing reg in insn 937
changing reg in insn 938
changing reg in insn 938
changing reg in insn 945
changing reg in insn 939
changing reg in insn 941
changing reg in insn 941
changing reg in insn 943
changing reg in insn 944
changing reg in insn 944
changing reg in insn 945
changing reg in insn 945
changing reg in insn 946
changing reg in insn 947
changing reg in insn 948
changing reg in insn 948
changing reg in insn 948
changing reg in insn 950
changing reg in insn 949
changing reg in insn 950
changing reg in insn 950
changing reg in insn 957
changing reg in insn 951
changing reg in insn 953
changing reg in insn 953
changing reg in insn 955
changing reg in insn 956
changing reg in insn 956
changing reg in insn 957
changing reg in insn 957
changing reg in insn 964
changing reg in insn 958
changing reg in insn 959
changing reg in insn 960
changing reg in insn 962
changing reg in insn 962
changing reg in insn 963
changing reg in insn 963
changing reg in insn 964
changing reg in insn 964
changing reg in insn 965
changing reg in insn 966
changing reg in insn 968
changing reg in insn 970
changing reg in insn 969
changing reg in insn 970
changing reg in insn 970
changing reg in insn 976
changing reg in insn 971
changing reg in insn 972
changing reg in insn 972
changing reg in insn 974
changing reg in insn 974
changing reg in insn 975
changing reg in insn 975
changing reg in insn 976
changing reg in insn 976
changing reg in insn 977
changing reg in insn 978
changing reg in insn 979
changing reg in insn 979
changing reg in insn 979
changing reg in insn 981
changing reg in insn 980
changing reg in insn 981
changing reg in insn 981
changing reg in insn 987
changing reg in insn 982
changing reg in insn 983
changing reg in insn 983
changing reg in insn 985
changing reg in insn 985
changing reg in insn 986
changing reg in insn 986
changing reg in insn 987
changing reg in insn 987
changing reg in insn 989
changing reg in insn 988
changing reg in insn 989
changing reg in insn 989
changing reg in insn 991
changing reg in insn 990
changing reg in insn 991
changing reg in insn 991
changing reg in insn 998
changing reg in insn 992
changing reg in insn 993
changing reg in insn 994
changing reg in insn 996
changing reg in insn 996
changing reg in insn 997
changing reg in insn 997
changing reg in insn 998
changing reg in insn 998
changing reg in insn 999
changing reg in insn 1000
changing reg in insn 1001
changing reg in insn 1001
changing reg in insn 1003
changing reg in insn 1002
changing reg in insn 1003
changing reg in insn 1003
changing reg in insn 1004
changing reg in insn 1005
changing reg in insn 1006
changing reg in insn 1006
changing reg in insn 1008
changing reg in insn 1007
changing reg in insn 1008
changing reg in insn 1008
changing reg in insn 1009
changing reg in insn 1010
changing reg in insn 1011
changing reg in insn 1011
changing reg in insn 1013
changing reg in insn 1012
changing reg in insn 1013
changing reg in insn 1013
changing reg in insn 1014
changing reg in insn 1015
changing reg in insn 1016
changing reg in insn 1016
changing reg in insn 1018
changing reg in insn 1017
changing reg in insn 1018
changing reg in insn 1018
changing reg in insn 1019
changing reg in insn 1083
changing reg in insn 1084
changing reg in insn 1084
changing reg in insn 1087
changing reg in insn 1085
changing reg in insn 1087
changing reg in insn 1133
changing reg in insn 1138
changing reg in insn 1135
changing reg in insn 1146
changing reg in insn 1148
changing reg in insn 1150
changing reg in insn 1149
changing reg in insn 1150
changing reg in insn 1150
changing reg in insn 1151
changing reg in insn 1151
changing reg in insn 1153
changing reg in insn 1183
changing reg in insn 1185
changing reg in insn 1184
changing reg in insn 1185
changing reg in insn 1185
changing reg in insn 1186
changing reg in insn 1189
changing reg in insn 1191
changing reg in insn 1193
changing reg in insn 1192
changing reg in insn 1193
changing reg in insn 1193
changing reg in insn 1198
changing reg in insn 1194
changing reg in insn 1196
changing reg in insn 1197
changing reg in insn 1197
changing reg in insn 1198
changing reg in insn 1198
changing reg in insn 1199
changing reg in insn 1202
changing reg in insn 1203
changing reg in insn 1204
changing reg in insn 1205
changing reg in insn 1206
changing reg in insn 1206
changing reg in insn 1207
changing reg in insn 1208
changing reg in insn 1209
changing reg in insn 1211
changing reg in insn 1210
changing reg in insn 1211
changing reg in insn 1211
changing reg in insn 1214
changing reg in insn 1213
changing reg in insn 1214
changing reg in insn 1214
changing reg in insn 1215
changing reg in insn 1215
changing reg in insn 1216
changing reg in insn 1223
changing reg in insn 1225
changing reg in insn 1226
changing reg in insn 1228
changing reg in insn 1227
changing reg in insn 1228
changing reg in insn 1228
changing reg in insn 1229
changing reg in insn 1231
changing reg in insn 1230
changing reg in insn 1231
changing reg in insn 1231
changing reg in insn 1232
changing reg in insn 1238
changing reg in insn 1244
changing reg in insn 1245
changing reg in insn 1247
changing reg in insn 1246
changing reg in insn 1247
changing reg in insn 1247
changing reg in insn 1248
changing reg in insn 1250
changing reg in insn 1249
changing reg in insn 1250
changing reg in insn 1250
changing reg in insn 1251
changing reg in insn 1308
changing reg in insn 1310
changing reg in insn 1312
changing reg in insn 1311
changing reg in insn 1312
changing reg in insn 1312
changing reg in insn 1313
changing reg in insn 1313
changing reg in insn 1315
changing reg in insn 1322
changing reg in insn 1327
changing reg in insn 1324
changing reg in insn 1343
changing reg in insn 1342
changing reg in insn 1344
changing reg in insn 1343
changing reg in insn 1368
changing reg in insn 1370
changing reg in insn 1369
changing reg in insn 1370
changing reg in insn 1370
changing reg in insn 1372
changing reg in insn 1372
changing reg in insn 1372
changing reg in insn 1373
changing reg in insn 1376
changing reg in insn 1378
changing reg in insn 1379
changing reg in insn 1380
changing reg in insn 1381
changing reg in insn 1383
changing reg in insn 1383
changing reg in insn 1384
changing reg in insn 1384
changing reg in insn 1385
changing reg in insn 1386
changing reg in insn 1389
changing reg in insn 1390
changing reg in insn 1391
changing reg in insn 1394
changing reg in insn 1392
changing reg in insn 1393
changing reg in insn 1393
changing reg in insn 1394
changing reg in insn 1394
changing reg in insn 1395
changing reg in insn 1396
changing reg in insn 1398
changing reg in insn 1397
changing reg in insn 1398
changing reg in insn 1398
changing reg in insn 1401
changing reg in insn 1400
changing reg in insn 1401
changing reg in insn 1401
changing reg in insn 1402
changing reg in insn 1402
changing reg in insn 1403
changing reg in insn 1410
changing reg in insn 1412
changing reg in insn 1413
changing reg in insn 1415
changing reg in insn 1414
changing reg in insn 1415
changing reg in insn 1415
changing reg in insn 1416
changing reg in insn 1418
changing reg in insn 1417
changing reg in insn 1418
changing reg in insn 1418
changing reg in insn 1419
changing reg in insn 1425
changing reg in insn 1431
changing reg in insn 1432
changing reg in insn 1434
changing reg in insn 1433
changing reg in insn 1434
changing reg in insn 1434
changing reg in insn 1435
changing reg in insn 1437
changing reg in insn 1436
changing reg in insn 1437
changing reg in insn 1437
changing reg in insn 1438
changing reg in insn 1501
changing reg in insn 1502
changing reg in insn 1502
changing reg in insn 1504
changing reg in insn 1504
changing reg in insn 1505
changing reg in insn 1507
changing reg in insn 1509
changing reg in insn 1510
changing reg in insn 1510
changing reg in insn 1512
changing reg in insn 1512
changing reg in insn 1513
changing reg in insn 1521
changing reg in insn 1515
changing reg in insn 1516
changing reg in insn 1518
changing reg in insn 1519
changing reg in insn 1519
changing reg in insn 1520
changing reg in insn 1522
changing reg in insn 1530
changing reg in insn 1532
changing reg in insn 1533
changing reg in insn 1533
changing reg in insn 1535
changing reg in insn 1535
changing reg in insn 1536
changing reg in insn 1537
changing reg in insn 1541
changing reg in insn 1542
changing reg in insn 1543
changing reg in insn 1547
changing reg in insn 1548
changing reg in insn 1549
changing reg in insn 1552
changing reg in insn 1557
changing reg in insn 1558
changing reg in insn 1558
changing reg in insn 1560
changing reg in insn 1560
changing reg in insn 1566
changing reg in insn 1562
changing reg in insn 1563
changing reg in insn 1563
changing reg in insn 1565
changing reg in insn 1565
changing reg in insn 1566
changing reg in insn 1566
changing reg in insn 1567
changing reg in insn 1567
changing reg in insn 1569
changing reg in insn 1570
changing reg in insn 1570
changing reg in insn 1572
changing reg in insn 1572
changing reg in insn 1573
changing reg in insn 1577
changing reg in insn 1575
changing reg in insn 1576
changing reg in insn 1576
changing reg in insn 1579
changing reg in insn 1577
changing reg in insn 1579
changing reg in insn 1582
changing reg in insn 1583
changing reg in insn 1583
changing reg in insn 1583
changing reg in insn 1586
changing reg in insn 1585
changing reg in insn 1586
changing reg in insn 1586
changing reg in insn 1587
changing reg in insn 1587
changing reg in insn 1588
changing reg in insn 1589
changing reg in insn 1591
changing reg in insn 1590
changing reg in insn 1591
changing reg in insn 1591
changing reg in insn 1592
changing reg in insn 1598
changing reg in insn 1594
changing reg in insn 1598
changing reg in insn 1596
changing reg in insn 1597
changing reg in insn 1597
changing reg in insn 1600
changing reg in insn 1598
changing reg in insn 1600
changing reg in insn 1602
changing reg in insn 1603
changing reg in insn 1603
changing reg in insn 1605
changing reg in insn 1605
changing reg in insn 1606
changing reg in insn 1606
changing reg in insn 1606
changing reg in insn 1617
changing reg in insn 1608
changing reg in insn 1609
changing reg in insn 1609
changing reg in insn 1611
changing reg in insn 1611
changing reg in insn 1612
changing reg in insn 1612
changing reg in insn 1613
changing reg in insn 1613
changing reg in insn 1617
changing reg in insn 1615
changing reg in insn 1616
changing reg in insn 1616
changing reg in insn 1619
changing reg in insn 1617
changing reg in insn 1619
changing reg in insn 9
changing reg in insn 487
changing reg in insn 502
changing reg in insn 494
changing reg in insn 494
changing reg in insn 492
changing reg in insn 661
changing reg in insn 651
changing reg in insn 664
changing reg in insn 655
changing reg in insn 655
changing reg in insn 653
changing reg in insn 10
changing reg in insn 845
changing reg in insn 868
changing reg in insn 860
changing reg in insn 860
changing reg in insn 858
changing reg in insn 417
changing reg in insn 412
changing reg in insn 420
changing reg in insn 605
changing reg in insn 600
changing reg in insn 608
changing reg in insn 1339
changing reg in insn 1334
changing reg in insn 1342
changing reg in insn 17
changing reg in insn 20
changing reg in insn 18
changing reg in insn 20
changing reg in insn 22
changing reg in insn 32
changing reg in insn 35
changing reg in insn 33
changing reg in insn 35
changing reg in insn 37
changing reg in insn 47
changing reg in insn 50
changing reg in insn 48
changing reg in insn 50
changing reg in insn 52
changing reg in insn 62
changing reg in insn 65
changing reg in insn 63
changing reg in insn 65
changing reg in insn 67
changing reg in insn 77
changing reg in insn 80
changing reg in insn 78
changing reg in insn 80
changing reg in insn 82
changing reg in insn 92
changing reg in insn 95
changing reg in insn 93
changing reg in insn 95
changing reg in insn 97
changing reg in insn 107
changing reg in insn 110
changing reg in insn 108
changing reg in insn 110
changing reg in insn 112
changing reg in insn 122
changing reg in insn 125
changing reg in insn 123
changing reg in insn 125
changing reg in insn 127
changing reg in insn 137
changing reg in insn 140
changing reg in insn 138
changing reg in insn 140
changing reg in insn 142
changing reg in insn 289
changing reg in insn 292
changing reg in insn 293
changing reg in insn 294
changing reg in insn 301
changing reg in insn 302
changing reg in insn 331
changing reg in insn 332
changing reg in insn 337
changing reg in insn 340
changing reg in insn 341
changing reg in insn 342
changing reg in insn 343
changing reg in insn 360
changing reg in insn 361
changing reg in insn 362
changing reg in insn 372
changing reg in insn 363
changing reg in insn 364
changing reg in insn 460
changing reg in insn 461
changing reg in insn 475
changing reg in insn 477
changing reg in insn 491
changing reg in insn 9
changing reg in insn 492
changing reg in insn 512
changing reg in insn 513
changing reg in insn 516
changing reg in insn 523
changing reg in insn 517
changing reg in insn 518
changing reg in insn 520
changing reg in insn 521
changing reg in insn 556
changing reg in insn 557
changing reg in insn 557
changing reg in insn 557
changing reg in insn 700
changing reg in insn 709
changing reg in insn 702
changing reg in insn 703
changing reg in insn 174
changing reg in insn 175
changing reg in insn 176
changing reg in insn 177
changing reg in insn 233
changing reg in insn 234
changing reg in insn 247
changing reg in insn 248
changing reg in insn 248
changing reg in insn 248
changing reg in insn 249
changing reg in insn 265
changing reg in insn 266
changing reg in insn 268
changing reg in insn 269
changing reg in insn 814
changing reg in insn 817
changing reg in insn 818
changing reg in insn 819
changing reg in insn 857
changing reg in insn 10
changing reg in insn 858
changing reg in insn 902
changing reg in insn 903
changing reg in insn 903
changing reg in insn 903
changing reg in insn 905
changing reg in insn 1306
changing reg in insn 1307
changing reg in insn 1313
changing reg in insn 1365
changing reg in insn 1366
changing reg in insn 1366
changing reg in insn 1366
changing reg in insn 1368
changing reg in insn 1387
changing reg in insn 1388
changing reg in insn 1393
changing reg in insn 1404
changing reg in insn 1405
changing reg in insn 1407
changing reg in insn 1408
changing reg in insn 1420
changing reg in insn 1429
changing reg in insn 1422
changing reg in insn 1423
changing reg in insn 1144
changing reg in insn 1145
changing reg in insn 1151
changing reg in insn 1180
changing reg in insn 1181
changing reg in insn 1181
changing reg in insn 1181
changing reg in insn 1183
changing reg in insn 1200
changing reg in insn 1201
changing reg in insn 1201
changing reg in insn 1201
changing reg in insn 1206
changing reg in insn 1217
changing reg in insn 1218
changing reg in insn 1220
changing reg in insn 1221
changing reg in insn 1233
changing reg in insn 1242
changing reg in insn 1235
changing reg in insn 1236
changing reg in insn 1492
changing reg in insn 1495
changing reg in insn 1496
changing reg in insn 1497
changing reg in insn 1527
changing reg in insn 1528
changing reg in insn 1537
changing reg in insn 1538
changing reg in insn 1549
changing reg in insn 1550
changing reg in insn 1552
changing reg in insn 1580
changing reg in insn 1581
changing reg in insn 13
changing reg in insn 14
changing reg in insn 15
changing reg in insn 16
changing reg in insn 19
changing reg in insn 20
changing reg in insn 28
changing reg in insn 29
changing reg in insn 30
changing reg in insn 31
changing reg in insn 34
changing reg in insn 35
changing reg in insn 43
changing reg in insn 44
changing reg in insn 45
changing reg in insn 46
changing reg in insn 49
changing reg in insn 50
changing reg in insn 58
changing reg in insn 59
changing reg in insn 60
changing reg in insn 61
changing reg in insn 64
changing reg in insn 65
changing reg in insn 73
changing reg in insn 74
changing reg in insn 75
changing reg in insn 76
changing reg in insn 79
changing reg in insn 80
changing reg in insn 88
changing reg in insn 89
changing reg in insn 90
changing reg in insn 91
changing reg in insn 94
changing reg in insn 95
changing reg in insn 103
changing reg in insn 104
changing reg in insn 105
changing reg in insn 106
changing reg in insn 109
changing reg in insn 110
changing reg in insn 118
changing reg in insn 119
changing reg in insn 120
changing reg in insn 121
changing reg in insn 124
changing reg in insn 125
changing reg in insn 133
changing reg in insn 134
changing reg in insn 135
changing reg in insn 136
changing reg in insn 139
changing reg in insn 140
changing reg in insn 148
changing reg in insn 149
changing reg in insn 149
changing reg in insn 150
changing reg in insn 151
changing reg in insn 152
changing reg in insn 152
changing reg in insn 153
changing reg in insn 154
changing reg in insn 155
changing reg in insn 156
changing reg in insn 157
changing reg in insn 159
changing reg in insn 160
changing reg in insn 166
changing reg in insn 167
changing reg in insn 168
changing reg in insn 171
changing reg in insn 172
changing reg in insn 170
changing reg in insn 171
changing reg in insn 173
changing reg in insn 174
changing reg in insn 178
changing reg in insn 179
changing reg in insn 184
changing reg in insn 185
changing reg in insn 198
changing reg in insn 199
changing reg in insn 203
changing reg in insn 204
changing reg in insn 206
changing reg in insn 209
changing reg in insn 211
changing reg in insn 214
changing reg in insn 212
changing reg in insn 215
changing reg in insn 217
changing reg in insn 218
changing reg in insn 222
changing reg in insn 223
changing reg in insn 221
changing reg in insn 226
changing reg in insn 227
changing reg in insn 224
changing reg in insn 225
changing reg in insn 232
changing reg in insn 233
changing reg in insn 235
changing reg in insn 236
changing reg in insn 237
changing reg in insn 244
changing reg in insn 245
changing reg in insn 243
changing reg in insn 244
changing reg in insn 246
changing reg in insn 247
changing reg in insn 251
changing reg in insn 252
changing reg in insn 256
changing reg in insn 257
changing reg in insn 255
changing reg in insn 260
changing reg in insn 261
changing reg in insn 263
changing reg in insn 264
changing reg in insn 262
changing reg in insn 267
changing reg in insn 268
changing reg in insn 270
changing reg in insn 271
changing reg in insn 272
changing reg in insn 279
changing reg in insn 280
changing reg in insn 286
changing reg in insn 287
changing reg in insn 288
changing reg in insn 289
changing reg in insn 297
changing reg in insn 298
changing reg in insn 300
changing reg in insn 301
changing reg in insn 303
changing reg in insn 304
changing reg in insn 306
changing reg in insn 307
changing reg in insn 308
changing reg in insn 309
changing reg in insn 311
changing reg in insn 312
changing reg in insn 315
changing reg in insn 316
changing reg in insn 318
changing reg in insn 319
changing reg in insn 322
changing reg in insn 323
changing reg in insn 321
changing reg in insn 330
changing reg in insn 331
changing reg in insn 333
changing reg in insn 334
changing reg in insn 337
changing reg in insn 338
changing reg in insn 339
changing reg in insn 340
changing reg in insn 344
changing reg in insn 345
changing reg in insn 350
changing reg in insn 351
changing reg in insn 357
changing reg in insn 358
changing reg in insn 356
changing reg in insn 359
changing reg in insn 360
changing reg in insn 365
changing reg in insn 366
changing reg in insn 375
changing reg in insn 376
changing reg in insn 382
changing reg in insn 383
changing reg in insn 384
changing reg in insn 385
changing reg in insn 394
changing reg in insn 395
changing reg in insn 396
changing reg in insn 397
changing reg in insn 399
changing reg in insn 400
changing reg in insn 425
changing reg in insn 426
changing reg in insn 430
changing reg in insn 431
changing reg in insn 433
changing reg in insn 436
changing reg in insn 438
changing reg in insn 441
changing reg in insn 439
changing reg in insn 442
changing reg in insn 444
changing reg in insn 445
changing reg in insn 449
changing reg in insn 450
changing reg in insn 448
changing reg in insn 453
changing reg in insn 454
changing reg in insn 451
changing reg in insn 452
changing reg in insn 459
changing reg in insn 460
changing reg in insn 462
changing reg in insn 463
changing reg in insn 464
changing reg in insn 471
changing reg in insn 472
changing reg in insn 470
changing reg in insn 471
changing reg in insn 473
changing reg in insn 475
changing reg in insn 475
changing reg in insn 474
changing reg in insn 475
changing reg in insn 479
changing reg in insn 480
changing reg in insn 485
changing reg in insn 486
changing reg in insn 481
changing reg in insn 485
changing reg in insn 482
changing reg in insn 483
changing reg in insn 485
changing reg in insn 484
changing reg in insn 485
changing reg in insn 488
changing reg in insn 489
changing reg in insn 507
changing reg in insn 508
changing reg in insn 505
changing reg in insn 507
changing reg in insn 507
changing reg in insn 506
changing reg in insn 507
changing reg in insn 519
changing reg in insn 520
changing reg in insn 526
changing reg in insn 527
changing reg in insn 533
changing reg in insn 534
changing reg in insn 535
changing reg in insn 536
changing reg in insn 542
changing reg in insn 543
changing reg in insn 545
changing reg in insn 546
changing reg in insn 547
changing reg in insn 554
changing reg in insn 555
changing reg in insn 558
changing reg in insn 560
changing reg in insn 561
changing reg in insn 568
changing reg in insn 569
changing reg in insn 570
changing reg in insn 571
changing reg in insn 575
changing reg in insn 576
changing reg in insn 577
changing reg in insn 578
changing reg in insn 579
changing reg in insn 580
changing reg in insn 582
changing reg in insn 583
changing reg in insn 585
changing reg in insn 586
changing reg in insn 593
changing reg in insn 594
changing reg in insn 613
changing reg in insn 614
changing reg in insn 618
changing reg in insn 619
changing reg in insn 621
changing reg in insn 624
changing reg in insn 626
changing reg in insn 629
changing reg in insn 627
changing reg in insn 630
changing reg in insn 632
changing reg in insn 633
changing reg in insn 641
changing reg in insn 642
changing reg in insn 640
changing reg in insn 645
changing reg in insn 646
changing reg in insn 647
changing reg in insn 648
changing reg in insn 652
changing reg in insn 653
changing reg in insn 671
changing reg in insn 672
changing reg in insn 676
changing reg in insn 677
changing reg in insn 679
changing reg in insn 682
changing reg in insn 684
changing reg in insn 687
changing reg in insn 685
changing reg in insn 688
changing reg in insn 690
changing reg in insn 691
changing reg in insn 695
changing reg in insn 696
changing reg in insn 698
changing reg in insn 699
changing reg in insn 697
changing reg in insn 701
changing reg in insn 702
changing reg in insn 704
changing reg in insn 705
changing reg in insn 706
changing reg in insn 707
changing reg in insn 717
changing reg in insn 718
changing reg in insn 722
changing reg in insn 723
changing reg in insn 724
changing reg in insn 725
changing reg in insn 726
changing reg in insn 727
changing reg in insn 732
changing reg in insn 733
changing reg in insn 734
changing reg in insn 735
changing reg in insn 738
changing reg in insn 739
changing reg in insn 740
changing reg in insn 741
changing reg in insn 742
changing reg in insn 743
changing reg in insn 745
changing reg in insn 746
changing reg in insn 750
changing reg in insn 751
changing reg in insn 753
changing reg in insn 754
changing reg in insn 757
changing reg in insn 760
changing reg in insn 758
changing reg in insn 761
changing reg in insn 763
changing reg in insn 766
changing reg in insn 764
changing reg in insn 767
changing reg in insn 769
changing reg in insn 772
changing reg in insn 770
changing reg in insn 773
changing reg in insn 775
changing reg in insn 776
changing reg in insn 778
changing reg in insn 779
changing reg in insn 783
changing reg in insn 784
changing reg in insn 786
changing reg in insn 787
changing reg in insn 789
changing reg in insn 790
changing reg in insn 794
changing reg in insn 795
changing reg in insn 797
changing reg in insn 800
changing reg in insn 802
changing reg in insn 803
changing reg in insn 805
changing reg in insn 806
changing reg in insn 807
changing reg in insn 808
changing reg in insn 809
changing reg in insn 810
changing reg in insn 811
changing reg in insn 812
changing reg in insn 813
changing reg in insn 814
changing reg in insn 822
changing reg in insn 823
changing reg in insn 825
changing reg in insn 826
changing reg in insn 827
changing reg in insn 828
changing reg in insn 831
changing reg in insn 832
changing reg in insn 834
changing reg in insn 835
changing reg in insn 836
changing reg in insn 837
changing reg in insn 838
changing reg in insn 839
changing reg in insn 841
changing reg in insn 842
changing reg in insn 846
changing reg in insn 847
changing reg in insn 848
changing reg in insn 851
changing reg in insn 852
changing reg in insn 855
changing reg in insn 856
changing reg in insn 869
changing reg in insn 871
changing reg in insn 871
changing reg in insn 870
changing reg in insn 871
changing reg in insn 874
changing reg in insn 875
changing reg in insn 876
changing reg in insn 877
changing reg in insn 878
changing reg in insn 881
changing reg in insn 882
changing reg in insn 890
changing reg in insn 891
changing reg in insn 892
changing reg in insn 894
changing reg in insn 895
changing reg in insn 904
changing reg in insn 905
changing reg in insn 908
changing reg in insn 909
changing reg in insn 917
changing reg in insn 918
changing reg in insn 922
changing reg in insn 923
changing reg in insn 925
changing reg in insn 926
changing reg in insn 927
changing reg in insn 928
changing reg in insn 930
changing reg in insn 931
changing reg in insn 932
changing reg in insn 933
changing reg in insn 935
changing reg in insn 940
changing reg in insn 941
changing reg in insn 942
changing reg in insn 952
changing reg in insn 953
changing reg in insn 954
changing reg in insn 961
changing reg in insn 962
changing reg in insn 967
changing reg in insn 973
changing reg in insn 974
changing reg in insn 984
changing reg in insn 985
changing reg in insn 995
changing reg in insn 996
changing reg in insn 1020
changing reg in insn 1021
changing reg in insn 1023
changing reg in insn 1024
changing reg in insn 1028
changing reg in insn 1029
changing reg in insn 1031
changing reg in insn 1034
changing reg in insn 1032
changing reg in insn 1035
changing reg in insn 1037
changing reg in insn 1040
changing reg in insn 1038
changing reg in insn 1041
changing reg in insn 1043
changing reg in insn 1046
changing reg in insn 1044
changing reg in insn 1047
changing reg in insn 1049
changing reg in insn 1052
changing reg in insn 1050
changing reg in insn 1053
changing reg in insn 1055
changing reg in insn 1058
changing reg in insn 1056
changing reg in insn 1059
changing reg in insn 1061
changing reg in insn 1064
changing reg in insn 1062
changing reg in insn 1065
changing reg in insn 1067
changing reg in insn 1070
changing reg in insn 1068
changing reg in insn 1071
changing reg in insn 1073
changing reg in insn 1076
changing reg in insn 1074
changing reg in insn 1077
changing reg in insn 1079
changing reg in insn 1080
changing reg in insn 1082
changing reg in insn 1083
changing reg in insn 1086
changing reg in insn 1087
changing reg in insn 1094
changing reg in insn 1095
changing reg in insn 1097
changing reg in insn 1098
changing reg in insn 1102
changing reg in insn 1103
changing reg in insn 1105
changing reg in insn 1108
changing reg in insn 1106
changing reg in insn 1109
changing reg in insn 1111
changing reg in insn 1114
changing reg in insn 1112
changing reg in insn 1115
changing reg in insn 1117
changing reg in insn 1120
changing reg in insn 1118
changing reg in insn 1121
changing reg in insn 1123
changing reg in insn 1126
changing reg in insn 1124
changing reg in insn 1127
changing reg in insn 1129
changing reg in insn 1130
changing reg in insn 1132
changing reg in insn 1133
changing reg in insn 1134
changing reg in insn 1135
changing reg in insn 1137
changing reg in insn 1138
changing reg in insn 1147
changing reg in insn 1154
changing reg in insn 1152
changing reg in insn 1155
changing reg in insn 1156
changing reg in insn 1162
changing reg in insn 1163
changing reg in insn 1167
changing reg in insn 1168
changing reg in insn 1170
changing reg in insn 1173
changing reg in insn 1175
changing reg in insn 1176
changing reg in insn 1178
changing reg in insn 1179
changing reg in insn 1182
changing reg in insn 1183
changing reg in insn 1190
changing reg in insn 1195
changing reg in insn 1212
changing reg in insn 1213
changing reg in insn 1219
changing reg in insn 1220
changing reg in insn 1222
changing reg in insn 1223
changing reg in insn 1224
changing reg in insn 1234
changing reg in insn 1235
changing reg in insn 1237
changing reg in insn 1238
changing reg in insn 1239
changing reg in insn 1240
changing reg in insn 1252
changing reg in insn 1253
changing reg in insn 1255
changing reg in insn 1256
changing reg in insn 1260
changing reg in insn 1261
changing reg in insn 1263
changing reg in insn 1266
changing reg in insn 1264
changing reg in insn 1267
changing reg in insn 1269
changing reg in insn 1272
changing reg in insn 1270
changing reg in insn 1273
changing reg in insn 1275
changing reg in insn 1278
changing reg in insn 1276
changing reg in insn 1279
changing reg in insn 1281
changing reg in insn 1284
changing reg in insn 1282
changing reg in insn 1285
changing reg in insn 1287
changing reg in insn 1290
changing reg in insn 1288
changing reg in insn 1291
changing reg in insn 1293
changing reg in insn 1296
changing reg in insn 1294
changing reg in insn 1297
changing reg in insn 1299
changing reg in insn 1300
changing reg in insn 1309
changing reg in insn 1315
changing reg in insn 1316
changing reg in insn 1314
changing reg in insn 1315
changing reg in insn 1317
changing reg in insn 1318
changing reg in insn 1321
changing reg in insn 1322
changing reg in insn 1323
changing reg in insn 1324
changing reg in insn 1326
changing reg in insn 1327
changing reg in insn 1347
changing reg in insn 1348
changing reg in insn 1352
changing reg in insn 1353
changing reg in insn 1355
changing reg in insn 1358
changing reg in insn 1360
changing reg in insn 1361
changing reg in insn 1363
changing reg in insn 1364
changing reg in insn 1367
changing reg in insn 1368
changing reg in insn 1371
changing reg in insn 1372
changing reg in insn 1377
changing reg in insn 1382
changing reg in insn 1383
changing reg in insn 1399
changing reg in insn 1400
changing reg in insn 1406
changing reg in insn 1407
changing reg in insn 1409
changing reg in insn 1410
changing reg in insn 1411
changing reg in insn 1421
changing reg in insn 1422
changing reg in insn 1424
changing reg in insn 1425
changing reg in insn 1426
changing reg in insn 1427
changing reg in insn 1439
changing reg in insn 1440
changing reg in insn 1442
changing reg in insn 1443
changing reg in insn 1447
changing reg in insn 1448
changing reg in insn 1450
changing reg in insn 1453
changing reg in insn 1451
changing reg in insn 1454
changing reg in insn 1456
changing reg in insn 1459
changing reg in insn 1457
changing reg in insn 1460
changing reg in insn 1462
changing reg in insn 1465
changing reg in insn 1463
changing reg in insn 1466
changing reg in insn 1468
changing reg in insn 1471
changing reg in insn 1469
changing reg in insn 1472
changing reg in insn 1474
changing reg in insn 1477
changing reg in insn 1475
changing reg in insn 1478
changing reg in insn 1480
changing reg in insn 1483
changing reg in insn 1481
changing reg in insn 1484
changing reg in insn 1486
changing reg in insn 1487
changing reg in insn 1491
changing reg in insn 1492
changing reg in insn 1500
changing reg in insn 1501
changing reg in insn 1503
changing reg in insn 1504
changing reg in insn 1506
changing reg in insn 1507
changing reg in insn 1508
changing reg in insn 1509
changing reg in insn 1511
changing reg in insn 1512
changing reg in insn 1514
changing reg in insn 1515
changing reg in insn 1517
changing reg in insn 1524
changing reg in insn 1525
changing reg in insn 1526
changing reg in insn 1527
changing reg in insn 1529
changing reg in insn 1530
changing reg in insn 1531
changing reg in insn 1532
changing reg in insn 1534
changing reg in insn 1535
changing reg in insn 1539
changing reg in insn 1540
changing reg in insn 1544
changing reg in insn 1545
changing reg in insn 1552
changing reg in insn 1553
changing reg in insn 1554
changing reg in insn 1555
changing reg in insn 1556
changing reg in insn 1557
changing reg in insn 1559
changing reg in insn 1560
changing reg in insn 1561
changing reg in insn 1562
changing reg in insn 1564
changing reg in insn 1565
changing reg in insn 1568
changing reg in insn 1569
changing reg in insn 1571
changing reg in insn 1572
changing reg in insn 1574
changing reg in insn 1575
changing reg in insn 1578
changing reg in insn 1579
changing reg in insn 1584
changing reg in insn 1585
changing reg in insn 1593
changing reg in insn 1594
changing reg in insn 1595
changing reg in insn 1596
changing reg in insn 1599
changing reg in insn 1600
changing reg in insn 1601
changing reg in insn 1602
changing reg in insn 1604
changing reg in insn 1605
changing reg in insn 1607
changing reg in insn 1608
changing reg in insn 1610
changing reg in insn 1611
changing reg in insn 1614
changing reg in insn 1615
changing reg in insn 1618
changing reg in insn 1619
deleting insn with uid = 22.
deleting insn with uid = 37.
deleting insn with uid = 52.
deleting insn with uid = 67.
deleting insn with uid = 82.
deleting insn with uid = 97.
deleting insn with uid = 112.
deleting insn with uid = 127.
deleting insn with uid = 142.
deleting insn with uid = 1708.
deleting insn with uid = 1710.
deleting insn with uid = 188.
deleting insn with uid = 1712.
deleting insn with uid = 1714.
deleting insn with uid = 1716.
deleting insn with uid = 1718.
deleting insn with uid = 1720.
deleting insn with uid = 1722.
deleting insn with uid = 1724.
deleting insn with uid = 1725.
deleting insn with uid = 1728.
deleting insn with uid = 1729.
deleting insn with uid = 379.
deleting insn with uid = 387.
deleting insn with uid = 391.
deleting insn with uid = 1736.
deleting insn with uid = 477.
deleting insn with uid = 1737.
deleting insn with uid = 1739.
deleting insn with uid = 530.
deleting insn with uid = 538.
deleting insn with uid = 552.
deleting insn with uid = 564.
deleting insn with uid = 573.
deleting insn with uid = 1745.
deleting insn with uid = 1747.
deleting insn with uid = 711.
deleting insn with uid = 729.
deleting insn with uid = 853.
deleting insn with uid = 872.
deleting insn with uid = 1751.
deleting insn with uid = 882.
deleting insn with uid = 883.
deleting insn with uid = 885.
deleting insn with uid = 900.
deleting insn with uid = 902.
deleting insn with uid = 919.
deleting insn with uid = 1753.
deleting insn with uid = 944.
deleting insn with uid = 1755.
deleting insn with uid = 956.
deleting insn with uid = 963.
deleting insn with uid = 975.
deleting insn with uid = 986.
deleting insn with uid = 997.
deleting insn with uid = 1758.
deleting insn with uid = 1759.
deleting insn with uid = 1761.
deleting insn with uid = 1197.
deleting insn with uid = 1764.
deleting insn with uid = 1766.
deleting insn with uid = 1767.
deleting insn with uid = 1769.
deleting insn with uid = 1244.
deleting insn with uid = 1774.
deleting insn with uid = 1775.
deleting insn with uid = 1384.
deleting insn with uid = 1778.
deleting insn with uid = 1780.
deleting insn with uid = 1782.
deleting insn with uid = 1783.
deleting insn with uid = 1785.
deleting insn with uid = 1431.
deleting insn with uid = 1790.
deleting insn with uid = 1522.
deleting insn with uid = 1791.
deleting insn with uid = 1537.
deleting insn with uid = 1547.
deleting insn with uid = 1549.
deleting insn with uid = 1799.
deleting insn with uid = 1801.
deleting insn with uid = 1803.
deleting insn with uid = 1806.
deleting insn with uid = 1613.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 205.
verify found no changes in insn with uid = 210.
verify found no changes in insn with uid = 216.
verify found no changes in insn with uid = 219.
verify found no changes in insn with uid = 373.
verify found no changes in insn with uid = 432.
verify found no changes in insn with uid = 437.
verify found no changes in insn with uid = 443.
verify found no changes in insn with uid = 446.
verify found no changes in insn with uid = 478.
verify found no changes in insn with uid = 524.
verify found no changes in insn with uid = 620.
verify found no changes in insn with uid = 625.
verify found no changes in insn with uid = 631.
verify found no changes in insn with uid = 634.
verify found no changes in insn with uid = 678.
verify found no changes in insn with uid = 683.
verify found no changes in insn with uid = 689.
verify found no changes in insn with uid = 692.
verify found no changes in insn with uid = 710.
verify found no changes in insn with uid = 752.
verify found no changes in insn with uid = 762.
verify found no changes in insn with uid = 768.
verify found no changes in insn with uid = 774.
verify found no changes in insn with uid = 777.
verify found no changes in insn with uid = 785.
verify found no changes in insn with uid = 788.
verify found no changes in insn with uid = 796.
verify found no changes in insn with uid = 801.
verify found no changes in insn with uid = 804.
verify found no changes in insn with uid = 873.
verify found no changes in insn with uid = 884.
verify found no changes in insn with uid = 1030.
verify found no changes in insn with uid = 1036.
verify found no changes in insn with uid = 1042.
verify found no changes in insn with uid = 1048.
verify found no changes in insn with uid = 1054.
verify found no changes in insn with uid = 1060.
verify found no changes in insn with uid = 1066.
verify found no changes in insn with uid = 1072.
verify found no changes in insn with uid = 1078.
verify found no changes in insn with uid = 1081.
verify found no changes in insn with uid = 1104.
verify found no changes in insn with uid = 1110.
verify found no changes in insn with uid = 1116.
verify found no changes in insn with uid = 1122.
verify found no changes in insn with uid = 1128.
verify found no changes in insn with uid = 1131.
verify found no changes in insn with uid = 1169.
verify found no changes in insn with uid = 1174.
verify found no changes in insn with uid = 1177.
verify found no changes in insn with uid = 1243.
verify found no changes in insn with uid = 1262.
verify found no changes in insn with uid = 1268.
verify found no changes in insn with uid = 1274.
verify found no changes in insn with uid = 1280.
verify found no changes in insn with uid = 1286.
verify found no changes in insn with uid = 1292.
verify found no changes in insn with uid = 1298.
verify found no changes in insn with uid = 1301.
verify found no changes in insn with uid = 1354.
verify found no changes in insn with uid = 1359.
verify found no changes in insn with uid = 1362.
verify found no changes in insn with uid = 1430.
verify found no changes in insn with uid = 1449.
verify found no changes in insn with uid = 1455.
verify found no changes in insn with uid = 1461.
verify found no changes in insn with uid = 1467.
verify found no changes in insn with uid = 1473.
verify found no changes in insn with uid = 1479.
verify found no changes in insn with uid = 1485.
verify found no changes in insn with uid = 1488.
verify found no changes in insn with uid = 1523.
verify found no changes in insn with uid = 1546.


tpdes

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;;  ref usage 	r0={359d,290u} r1={150d,76u} r2={110d,36u} r3={2d,2u} r4={113d,39u} r5={144d,70u} r6={1d,651u} r7={1d,136u} r8={74d} r9={74d} r10={74d} r11={74d} r12={74d} r13={74d} r14={74d} r15={74d} r17={250d,45u} r18={74d} r19={74d} r20={1d,1u} r21={422d,414u,4e} r22={262d,189u,3e} r23={140d,65u} r24={85d,10u} r25={79d,3u} r26={77d,2u} r27={79d,4u} r28={75d} r29={74d} r30={74d} r31={74d} r32={74d} r33={74d} r34={74d} r35={74d} r36={74d} r37={75d,1u} r38={75d,1u} r39={75d} r40={75d} r41={1d} r42={1d} r43={1d} r44={1d} r45={74d} r46={74d} r47={74d} r48={74d} r49={74d} r50={74d} r51={74d} r52={74d} r53={74d} r54={74d} r55={74d} r56={74d} r57={74d} r58={74d} r59={74d} r60={74d} r61={74d} r62={74d} r63={74d} r64={74d} r65={74d} r66={74d} r67={74d} r68={74d} r69={74d} r70={74d} r71={74d} r72={74d} r73={74d} r74={74d} r75={74d} r76={74d} r77={74d} r78={74d} r79={74d} r80={74d} 
;;    total ref usage 8692{6650d,2035u,7e} in 1478{1404 regular + 74 call} insns.
(note 1 0 11 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9] 89 93 121
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9] 89 93 97 101 105 109 113 117 121
;; lr  def 	 17 [flags] 87 88 91 92 95 96 99 100 103 104 107 108 111 112 115 116 119 120 123 583 584 588 589 593 594 598 599 603 604 608 609 613 614 618 619 623 624 711 712 713 714 715 716 717 718 719 720 721 722 723 724 725 726 727 728 729 730 731 732 733 734 735 736 737 738 739 740 741 742 743
(note 11 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 11 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -808 [0xfffffffffffffcd8])) [10 tdes1+0 S8 A64])
        (reg:DI 5 di [ tdes1 ])) "../src/tpdes.f":2 81 {*movdi_internal}
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -816 [0xfffffffffffffcd0])) [10 pdes1+0 S8 A64])
        (reg:DI 4 si [ pdes1 ])) "../src/tpdes.f":2 81 {*movdi_internal}
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -824 [0xfffffffffffffcc8])) [10 rho+0 S8 A64])
        (reg:DI 1 dx [ rho ])) "../src/tpdes.f":2 81 {*movdi_internal}
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -832 [0xfffffffffffffcc0])) [10 vel+0 S8 A64])
        (reg:DI 2 cx [ vel ])) "../src/tpdes.f":2 81 {*movdi_internal}
     (nil))
(insn 6 5 7 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -840 [0xfffffffffffffcb8])) [10 omg+0 S8 A64])
        (reg:DI 37 r8 [ omg ])) "../src/tpdes.f":2 81 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -848 [0xfffffffffffffcb0])) [10 rad+0 S8 A64])
        (reg:DI 38 r9 [ rad ])) "../src/tpdes.f":2 81 {*movdi_internal}
     (nil))
(note 8 7 13 2 NOTE_INSN_FUNCTION_BEG)
(insn 13 8 14 2 (set (reg/f:DI 0 ax [711])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 24 [0x18])) [11 n+0 S8 A64])) "../src/tpdes.f":3 81 {*movdi_internal}
     (nil))
(insn 14 13 15 2 (set (reg:SI 0 ax [orig:87 _1 ] [87])
        (mem:SI (reg/f:DI 0 ax [711]) [2 *n_522(D)+0 S4 A32])) "../src/tpdes.f":3 82 {*movsi_internal}
     (nil))
(insn 15 14 16 2 (set (reg:DI 0 ax [712])
        (sign_extend:DI (reg:SI 0 ax [orig:87 _1 ] [87]))) "../src/tpdes.f":3 145 {*extendsidi2_rex64}
     (nil))
(insn 16 15 17 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [3 ubound.2+0 S8 A64])
        (reg:DI 0 ax [712])) "../src/tpdes.f":3 81 {*movdi_internal}
     (nil))
(insn 17 16 19 2 (set (reg:DI 0 ax [orig:583 size.3_524 ] [583])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [3 ubound.2+0 S8 A64])) "../src/tpdes.f":3 81 {*movdi_internal}
     (nil))
(insn 19 17 18 2 (set (reg:DI 1 dx [713])
        (const_int 0 [0])) "../src/tpdes.f":3 81 {*movdi_internal}
     (nil))
(insn 18 19 20 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 0 ax [orig:583 size.3_524 ] [583])
            (const_int 0 [0]))) "../src/tpdes.f":3 4 {*cmpdi_ccno_1}
     (nil))
(insn 20 18 23 2 (set (reg:DI 0 ax [orig:584 size.3_525 ] [584])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 0 ax [orig:583 size.3_524 ] [583])
            (reg:DI 1 dx [713]))) "../src/tpdes.f":3 967 {*movdicc_noc}
     (nil))
(insn 23 20 24 2 (set (reg:DI 39 r10 [orig:89 _3 ] [89])
        (reg:DI 0 ax [orig:88 size.34_2 ] [88])) "../src/tpdes.f":3 81 {*movdi_internal}
     (nil))
(insn 24 23 28 2 (set (reg:DI 40 r11 [ _3+8 ])
        (const_int 0 [0])) "../src/tpdes.f":3 81 {*movdi_internal}
     (nil))
(insn 28 24 29 2 (set (reg/f:DI 0 ax [714])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 24 [0x18])) [11 n+0 S8 A64])) "../src/tpdes.f":3 81 {*movdi_internal}
     (nil))
(insn 29 28 30 2 (set (reg:SI 0 ax [orig:91 _5 ] [91])
        (mem:SI (reg/f:DI 0 ax [714]) [2 *n_522(D)+0 S4 A32])) "../src/tpdes.f":3 82 {*movsi_internal}
     (nil))
(insn 30 29 31 2 (set (reg:DI 0 ax [715])
        (sign_extend:DI (reg:SI 0 ax [orig:91 _5 ] [91]))) "../src/tpdes.f":3 145 {*extendsidi2_rex64}
     (nil))
(insn 31 30 32 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [3 ubound.6+0 S8 A64])
        (reg:DI 0 ax [715])) "../src/tpdes.f":3 81 {*movdi_internal}
     (nil))
(insn 32 31 34 2 (set (reg:DI 0 ax [orig:588 size.7_530 ] [588])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [3 ubound.6+0 S8 A64])) "../src/tpdes.f":3 81 {*movdi_internal}
     (nil))
(insn 34 32 33 2 (set (reg:DI 1 dx [716])
        (const_int 0 [0])) "../src/tpdes.f":3 81 {*movdi_internal}
     (nil))
(insn 33 34 35 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 0 ax [orig:588 size.7_530 ] [588])
            (const_int 0 [0]))) "../src/tpdes.f":3 4 {*cmpdi_ccno_1}
     (nil))
(insn 35 33 38 2 (set (reg:DI 0 ax [orig:589 size.7_531 ] [589])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 0 ax [orig:588 size.7_530 ] [588])
            (reg:DI 1 dx [716]))) "../src/tpdes.f":3 967 {*movdicc_noc}
     (nil))
(insn 38 35 39 2 (set (reg:DI 41 r12 [orig:93 _7 ] [93])
        (reg:DI 0 ax [orig:92 size.36_6 ] [92])) "../src/tpdes.f":3 81 {*movdi_internal}
     (nil))
(insn 39 38 43 2 (set (reg:DI 42 r13 [ _7+8 ])
        (const_int 0 [0])) "../src/tpdes.f":3 81 {*movdi_internal}
     (nil))
(insn 43 39 44 2 (set (reg/f:DI 0 ax [717])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 24 [0x18])) [11 n+0 S8 A64])) "../src/tpdes.f":3 81 {*movdi_internal}
     (nil))
(insn 44 43 45 2 (set (reg:SI 0 ax [orig:95 _9 ] [95])
        (mem:SI (reg/f:DI 0 ax [717]) [2 *n_522(D)+0 S4 A32])) "../src/tpdes.f":3 82 {*movsi_internal}
     (nil))
(insn 45 44 46 2 (set (reg:DI 0 ax [718])
        (sign_extend:DI (reg:SI 0 ax [orig:95 _9 ] [95]))) "../src/tpdes.f":3 145 {*extendsidi2_rex64}
     (nil))
(insn 46 45 47 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [3 ubound.16+0 S8 A64])
        (reg:DI 0 ax [718])) "../src/tpdes.f":3 81 {*movdi_internal}
     (nil))
(insn 47 46 49 2 (set (reg:DI 0 ax [orig:593 size.17_536 ] [593])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [3 ubound.16+0 S8 A64])) "../src/tpdes.f":3 81 {*movdi_internal}
     (nil))
(insn 49 47 48 2 (set (reg:DI 1 dx [719])
        (const_int 0 [0])) "../src/tpdes.f":3 81 {*movdi_internal}
     (nil))
(insn 48 49 50 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 0 ax [orig:593 size.17_536 ] [593])
            (const_int 0 [0]))) "../src/tpdes.f":3 4 {*cmpdi_ccno_1}
     (nil))
(insn 50 48 53 2 (set (reg:DI 0 ax [orig:594 size.17_537 ] [594])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 0 ax [orig:593 size.17_536 ] [593])
            (reg:DI 1 dx [719]))) "../src/tpdes.f":3 967 {*movdicc_noc}
     (nil))
(insn 53 50 54 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -864 [0xfffffffffffffca0])) [14 %sfp+-816 S8 A128])
        (reg:DI 0 ax [orig:96 size.38_10 ] [96])) "../src/tpdes.f":3 81 {*movdi_internal}
     (nil))
(insn 54 53 58 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -856 [0xfffffffffffffca8])) [14 %sfp+-808 S8 A64])
        (const_int 0 [0])) "../src/tpdes.f":3 81 {*movdi_internal}
     (nil))
(insn 58 54 59 2 (set (reg/f:DI 0 ax [720])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 24 [0x18])) [11 n+0 S8 A64])) "../src/tpdes.f":3 81 {*movdi_internal}
     (nil))
(insn 59 58 60 2 (set (reg:SI 0 ax [orig:99 _13 ] [99])
        (mem:SI (reg/f:DI 0 ax [720]) [2 *n_522(D)+0 S4 A32])) "../src/tpdes.f":3 82 {*movsi_internal}
     (nil))
(insn 60 59 61 2 (set (reg:DI 0 ax [721])
        (sign_extend:DI (reg:SI 0 ax [orig:99 _13 ] [99]))) "../src/tpdes.f":3 145 {*extendsidi2_rex64}
     (nil))
(insn 61 60 62 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [3 ubound.12+0 S8 A64])
        (reg:DI 0 ax [721])) "../src/tpdes.f":3 81 {*movdi_internal}
     (nil))
(insn 62 61 64 2 (set (reg:DI 0 ax [orig:598 size.13_542 ] [598])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [3 ubound.12+0 S8 A64])) "../src/tpdes.f":3 81 {*movdi_internal}
     (nil))
(insn 64 62 63 2 (set (reg:DI 1 dx [722])
        (const_int 0 [0])) "../src/tpdes.f":3 81 {*movdi_internal}
     (nil))
(insn 63 64 65 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 0 ax [orig:598 size.13_542 ] [598])
            (const_int 0 [0]))) "../src/tpdes.f":3 4 {*cmpdi_ccno_1}
     (nil))
(insn 65 63 68 2 (set (reg:DI 0 ax [orig:599 size.13_543 ] [599])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 0 ax [orig:598 size.13_542 ] [598])
            (reg:DI 1 dx [722]))) "../src/tpdes.f":3 967 {*movdicc_noc}
     (nil))
(insn 68 65 69 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -880 [0xfffffffffffffc90])) [14 %sfp+-832 S8 A128])
        (reg:DI 0 ax [orig:100 size.40_14 ] [100])) "../src/tpdes.f":3 81 {*movdi_internal}
     (nil))
(insn 69 68 73 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -872 [0xfffffffffffffc98])) [14 %sfp+-824 S8 A64])
        (const_int 0 [0])) "../src/tpdes.f":3 81 {*movdi_internal}
     (nil))
(insn 73 69 74 2 (set (reg/f:DI 0 ax [723])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 24 [0x18])) [11 n+0 S8 A64])) "../src/tpdes.f":4 81 {*movdi_internal}
     (nil))
(insn 74 73 75 2 (set (reg:SI 0 ax [orig:103 _17 ] [103])
        (mem:SI (reg/f:DI 0 ax [723]) [2 *n_522(D)+0 S4 A32])) "../src/tpdes.f":4 82 {*movsi_internal}
     (nil))
(insn 75 74 76 2 (set (reg:DI 0 ax [724])
        (sign_extend:DI (reg:SI 0 ax [orig:103 _17 ] [103]))) "../src/tpdes.f":4 145 {*extendsidi2_rex64}
     (nil))
(insn 76 75 77 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [3 ubound.14+0 S8 A64])
        (reg:DI 0 ax [724])) "../src/tpdes.f":4 81 {*movdi_internal}
     (nil))
(insn 77 76 79 2 (set (reg:DI 0 ax [orig:603 size.15_548 ] [603])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [3 ubound.14+0 S8 A64])) "../src/tpdes.f":4 81 {*movdi_internal}
     (nil))
(insn 79 77 78 2 (set (reg:DI 1 dx [725])
        (const_int 0 [0])) "../src/tpdes.f":4 81 {*movdi_internal}
     (nil))
(insn 78 79 80 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 0 ax [orig:603 size.15_548 ] [603])
            (const_int 0 [0]))) "../src/tpdes.f":4 4 {*cmpdi_ccno_1}
     (nil))
(insn 80 78 83 2 (set (reg:DI 0 ax [orig:604 size.15_549 ] [604])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 0 ax [orig:603 size.15_548 ] [603])
            (reg:DI 1 dx [725]))) "../src/tpdes.f":4 967 {*movdicc_noc}
     (nil))
(insn 83 80 84 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -896 [0xfffffffffffffc80])) [14 %sfp+-848 S8 A128])
        (reg:DI 0 ax [orig:104 size.42_18 ] [104])) "../src/tpdes.f":4 81 {*movdi_internal}
     (nil))
(insn 84 83 88 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -888 [0xfffffffffffffc88])) [14 %sfp+-840 S8 A64])
        (const_int 0 [0])) "../src/tpdes.f":4 81 {*movdi_internal}
     (nil))
(insn 88 84 89 2 (set (reg/f:DI 0 ax [726])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 24 [0x18])) [11 n+0 S8 A64])) "../src/tpdes.f":4 81 {*movdi_internal}
     (nil))
(insn 89 88 90 2 (set (reg:SI 0 ax [orig:107 _21 ] [107])
        (mem:SI (reg/f:DI 0 ax [726]) [2 *n_522(D)+0 S4 A32])) "../src/tpdes.f":4 82 {*movsi_internal}
     (nil))
(insn 90 89 91 2 (set (reg:DI 0 ax [727])
        (sign_extend:DI (reg:SI 0 ax [orig:107 _21 ] [107]))) "../src/tpdes.f":4 145 {*extendsidi2_rex64}
     (nil))
(insn 91 90 92 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -128 [0xffffffffffffff80])) [3 ubound.0+0 S8 A64])
        (reg:DI 0 ax [727])) "../src/tpdes.f":4 81 {*movdi_internal}
     (nil))
(insn 92 91 94 2 (set (reg:DI 0 ax [orig:608 size.1_554 ] [608])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -128 [0xffffffffffffff80])) [3 ubound.0+0 S8 A64])) "../src/tpdes.f":4 81 {*movdi_internal}
     (nil))
(insn 94 92 93 2 (set (reg:DI 1 dx [728])
        (const_int 0 [0])) "../src/tpdes.f":4 81 {*movdi_internal}
     (nil))
(insn 93 94 95 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 0 ax [orig:608 size.1_554 ] [608])
            (const_int 0 [0]))) "../src/tpdes.f":4 4 {*cmpdi_ccno_1}
     (nil))
(insn 95 93 98 2 (set (reg:DI 0 ax [orig:609 size.1_555 ] [609])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 0 ax [orig:608 size.1_554 ] [608])
            (reg:DI 1 dx [728]))) "../src/tpdes.f":4 967 {*movdicc_noc}
     (nil))
(insn 98 95 99 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -912 [0xfffffffffffffc70])) [14 %sfp+-864 S8 A128])
        (reg:DI 0 ax [orig:108 size.44_22 ] [108])) "../src/tpdes.f":4 81 {*movdi_internal}
     (nil))
(insn 99 98 103 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -904 [0xfffffffffffffc78])) [14 %sfp+-856 S8 A64])
        (const_int 0 [0])) "../src/tpdes.f":4 81 {*movdi_internal}
     (nil))
(insn 103 99 104 2 (set (reg/f:DI 0 ax [729])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 24 [0x18])) [11 n+0 S8 A64])) "../src/tpdes.f":3 81 {*movdi_internal}
     (nil))
(insn 104 103 105 2 (set (reg:SI 0 ax [orig:111 _25 ] [111])
        (mem:SI (reg/f:DI 0 ax [729]) [2 *n_522(D)+0 S4 A32])) "../src/tpdes.f":3 82 {*movsi_internal}
     (nil))
(insn 105 104 106 2 (set (reg:DI 0 ax [730])
        (sign_extend:DI (reg:SI 0 ax [orig:111 _25 ] [111]))) "../src/tpdes.f":3 145 {*extendsidi2_rex64}
     (nil))
(insn 106 105 107 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -136 [0xffffffffffffff78])) [3 ubound.8+0 S8 A64])
        (reg:DI 0 ax [730])) "../src/tpdes.f":3 81 {*movdi_internal}
     (nil))
(insn 107 106 109 2 (set (reg:DI 0 ax [orig:613 size.9_560 ] [613])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -136 [0xffffffffffffff78])) [3 ubound.8+0 S8 A64])) "../src/tpdes.f":3 81 {*movdi_internal}
     (nil))
(insn 109 107 108 2 (set (reg:DI 1 dx [731])
        (const_int 0 [0])) "../src/tpdes.f":3 81 {*movdi_internal}
     (nil))
(insn 108 109 110 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 0 ax [orig:613 size.9_560 ] [613])
            (const_int 0 [0]))) "../src/tpdes.f":3 4 {*cmpdi_ccno_1}
     (nil))
(insn 110 108 113 2 (set (reg:DI 0 ax [orig:614 size.9_561 ] [614])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 0 ax [orig:613 size.9_560 ] [613])
            (reg:DI 1 dx [731]))) "../src/tpdes.f":3 967 {*movdicc_noc}
     (nil))
(insn 113 110 114 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -928 [0xfffffffffffffc60])) [14 %sfp+-880 S8 A128])
        (reg:DI 0 ax [orig:112 size.46_26 ] [112])) "../src/tpdes.f":3 81 {*movdi_internal}
     (nil))
(insn 114 113 118 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -920 [0xfffffffffffffc68])) [14 %sfp+-872 S8 A64])
        (const_int 0 [0])) "../src/tpdes.f":3 81 {*movdi_internal}
     (nil))
(insn 118 114 119 2 (set (reg/f:DI 0 ax [732])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 24 [0x18])) [11 n+0 S8 A64])) "../src/tpdes.f":3 81 {*movdi_internal}
     (nil))
(insn 119 118 120 2 (set (reg:SI 0 ax [orig:115 _29 ] [115])
        (mem:SI (reg/f:DI 0 ax [732]) [2 *n_522(D)+0 S4 A32])) "../src/tpdes.f":3 82 {*movsi_internal}
     (nil))
(insn 120 119 121 2 (set (reg:DI 0 ax [733])
        (sign_extend:DI (reg:SI 0 ax [orig:115 _29 ] [115]))) "../src/tpdes.f":3 145 {*extendsidi2_rex64}
     (nil))
(insn 121 120 122 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -144 [0xffffffffffffff70])) [3 ubound.10+0 S8 A64])
        (reg:DI 0 ax [733])) "../src/tpdes.f":3 81 {*movdi_internal}
     (nil))
(insn 122 121 124 2 (set (reg:DI 0 ax [orig:618 size.11_566 ] [618])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -144 [0xffffffffffffff70])) [3 ubound.10+0 S8 A64])) "../src/tpdes.f":3 81 {*movdi_internal}
     (nil))
(insn 124 122 123 2 (set (reg:DI 1 dx [734])
        (const_int 0 [0])) "../src/tpdes.f":3 81 {*movdi_internal}
     (nil))
(insn 123 124 125 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 0 ax [orig:618 size.11_566 ] [618])
            (const_int 0 [0]))) "../src/tpdes.f":3 4 {*cmpdi_ccno_1}
     (nil))
(insn 125 123 128 2 (set (reg:DI 0 ax [orig:619 size.11_567 ] [619])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 0 ax [orig:618 size.11_566 ] [618])
            (reg:DI 1 dx [734]))) "../src/tpdes.f":3 967 {*movdicc_noc}
     (nil))
(insn 128 125 129 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -944 [0xfffffffffffffc50])) [14 %sfp+-896 S8 A128])
        (reg:DI 0 ax [orig:116 size.48_30 ] [116])) "../src/tpdes.f":3 81 {*movdi_internal}
     (nil))
(insn 129 128 133 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -936 [0xfffffffffffffc58])) [14 %sfp+-888 S8 A64])
        (const_int 0 [0])) "../src/tpdes.f":3 81 {*movdi_internal}
     (nil))
(insn 133 129 134 2 (set (reg/f:DI 0 ax [735])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 24 [0x18])) [11 n+0 S8 A64])) "../src/tpdes.f":4 81 {*movdi_internal}
     (nil))
(insn 134 133 135 2 (set (reg:SI 0 ax [orig:119 _33 ] [119])
        (mem:SI (reg/f:DI 0 ax [735]) [2 *n_522(D)+0 S4 A32])) "../src/tpdes.f":4 82 {*movsi_internal}
     (nil))
(insn 135 134 136 2 (set (reg:DI 0 ax [736])
        (sign_extend:DI (reg:SI 0 ax [orig:119 _33 ] [119]))) "../src/tpdes.f":4 145 {*extendsidi2_rex64}
     (nil))
(insn 136 135 137 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -152 [0xffffffffffffff68])) [3 ubound.4+0 S8 A64])
        (reg:DI 0 ax [736])) "../src/tpdes.f":4 81 {*movdi_internal}
     (nil))
(insn 137 136 139 2 (set (reg:DI 0 ax [orig:623 size.5_572 ] [623])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -152 [0xffffffffffffff68])) [3 ubound.4+0 S8 A64])) "../src/tpdes.f":4 81 {*movdi_internal}
     (nil))
(insn 139 137 138 2 (set (reg:DI 1 dx [737])
        (const_int 0 [0])) "../src/tpdes.f":4 81 {*movdi_internal}
     (nil))
(insn 138 139 140 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 0 ax [orig:623 size.5_572 ] [623])
            (const_int 0 [0]))) "../src/tpdes.f":4 4 {*cmpdi_ccno_1}
     (nil))
(insn 140 138 143 2 (set (reg:DI 0 ax [orig:624 size.5_573 ] [624])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 0 ax [orig:623 size.5_572 ] [623])
            (reg:DI 1 dx [737]))) "../src/tpdes.f":4 967 {*movdicc_noc}
     (nil))
(insn 143 140 144 2 (set (reg:DI 43 r14 [orig:121 _35 ] [121])
        (reg:DI 0 ax [orig:120 size.50_34 ] [120])) "../src/tpdes.f":4 81 {*movdi_internal}
     (nil))
(insn 144 143 148 2 (set (reg:DI 44 r15 [ _35+8 ])
        (const_int 0 [0])) "../src/tpdes.f":4 81 {*movdi_internal}
     (nil))
(insn 148 144 149 2 (set (reg/f:DI 0 ax [738])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -808 [0xfffffffffffffcd8])) [10 tdes1+0 S8 A64])) "../src/tpdes.f":39 81 {*movdi_internal}
     (nil))
(insn 149 148 150 2 (set (reg:SF 21 xmm0 [739])
        (mem:SF (reg/f:DI 0 ax [738]) [1 *tdes1_577(D)+0 S4 A32])) "../src/tpdes.f":39 127 {*movsf_internal}
     (nil))
(insn 150 149 151 2 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -76 [0xffffffffffffffb4])) [1 tdes+0 S4 A32])
        (reg:SF 21 xmm0 [739])) "../src/tpdes.f":39 127 {*movsf_internal}
     (nil))
(insn 151 150 152 2 (set (reg/f:DI 0 ax [740])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -816 [0xfffffffffffffcd0])) [10 pdes1+0 S8 A64])) "../src/tpdes.f":40 81 {*movdi_internal}
     (nil))
(insn 152 151 153 2 (set (reg:SF 21 xmm0 [741])
        (mem:SF (reg/f:DI 0 ax [740]) [1 *pdes1_579(D)+0 S4 A32])) "../src/tpdes.f":40 127 {*movsf_internal}
     (nil))
(insn 153 152 154 2 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -72 [0xffffffffffffffb8])) [1 pdes+0 S4 A32])
        (reg:SF 21 xmm0 [741])) "../src/tpdes.f":40 127 {*movsf_internal}
     (nil))
(insn 154 153 155 2 (set (reg/f:DI 0 ax [742])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -808 [0xfffffffffffffcd8])) [10 tdes1+0 S8 A64])) "../src/tpdes.f":45 81 {*movdi_internal}
     (nil))
(insn 155 154 156 2 (set (reg:SF 21 xmm0 [orig:123 _37 ] [123])
        (mem:SF (reg/f:DI 0 ax [742]) [1 *tdes1_577(D)+0 S4 A32])) "../src/tpdes.f":45 127 {*movsf_internal}
     (nil))
(insn 156 155 157 2 (set (reg:SF 22 xmm1 [743])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC0") [flags 0x2]) [1  S4 A32])) "../src/tpdes.f":45 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 157 156 158 2 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 21 xmm0 [orig:123 _37 ] [123])
            (reg:SF 22 xmm1 [743]))) "../src/tpdes.f":45 51 {*cmpiusf}
     (nil))
(jump_insn 158 157 1631 2 (set (pc)
        (if_then_else (unordered (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1653)
            (pc))) "../src/tpdes.f":45 617 {*jcc_1}
     (nil)
 -> 1653)
;;  succ:       4
;;              3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123
;; lr  def 	 17 [flags] 744
(note 1631 158 159 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 159 1631 160 3 (set (reg:SF 22 xmm1 [744])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC0") [flags 0x2]) [1  S4 A32])) "../src/tpdes.f":45 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 160 159 161 3 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 21 xmm0 [orig:123 _37 ] [123])
            (reg:SF 22 xmm1 [744]))) "../src/tpdes.f":45 51 {*cmpiusf}
     (nil))
(jump_insn 161 160 1653 3 (set (pc)
        (if_then_else (uneq (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1661)
            (pc))) "../src/tpdes.f":45 617 {*jcc_1}
     (nil)
 -> 1661)
;;  succ:       4 (FALLTHRU)
;;              8
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;;              2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 124 125 126 127 128 129 130 131 132 133 134 135 136 658 659 660 661 745 746 747 748 749 750 751
(code_label 1653 161 165 4 43 (nil) [1 uses])
(note 165 1653 166 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 166 165 167 4 (set (reg/f:DI 0 ax [745])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -832 [0xfffffffffffffcc0])) [10 vel+0 S8 A64])) "../src/tpdes.f":48 81 {*movdi_internal}
     (nil))
(insn 167 166 168 4 (set (reg:SF 22 xmm1 [orig:124 _38 ] [124])
        (mem:SF (reg/f:DI 0 ax [745]) [1 *vel_598(D)+0 S4 A32])) "../src/tpdes.f":48 127 {*movsf_internal}
     (nil))
(insn 168 167 169 4 (set (reg:SF 21 xmm0 [746])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC1") [flags 0x2]) [1  S4 A32])) "../src/tpdes.f":48 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 5.0e-1 [0x0.8p+0])
        (nil)))
(insn 169 168 170 4 (set (reg:SF 21 xmm0 [orig:125 _39 ] [125])
        (mult:SF (reg:SF 21 xmm0 [746])
            (reg:SF 22 xmm1 [orig:124 _38 ] [124]))) "../src/tpdes.f":48 802 {*fop_sf_comm}
     (nil))
(insn 170 169 171 4 (set (reg:V4SF 22 xmm1 [748])
        (mem/u/c:V4SF (symbol_ref/u:DI ("*lC2") [flags 0x2]) [1  S16 A128])) "../src/tpdes.f":48 1225 {movv4sf_internal}
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF -0.0 [-0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 171 170 172 4 (parallel [
            (set (reg:SF 21 xmm0 [747])
                (neg:SF (reg:SF 21 xmm0 [orig:125 _39 ] [125])))
            (use (reg:V4SF 22 xmm1 [748]))
            (clobber (reg:CC 17 flags))
        ]) "../src/tpdes.f":48 470 {*absnegsf2}
     (expr_list:REG_EQUAL (neg:SF (reg:SF 21 xmm0 [orig:125 _39 ] [125]))
        (nil)))
(insn 172 171 173 4 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -160 [0xffffffffffffff60])) [1 dvdmin+0 S4 A32])
        (reg:SF 21 xmm0 [747])) "../src/tpdes.f":48 127 {*movsf_internal}
     (nil))
(insn 173 172 174 4 (set (reg/f:DI 0 ax [749])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -848 [0xfffffffffffffcb0])) [10 rad+0 S8 A64])) "../src/tpdes.f":50 81 {*movdi_internal}
     (nil))
(insn 174 173 1707 4 (set (reg:SF 21 xmm0 [orig:658 _679 ] [658])
        (mem:SF (reg/f:DI 0 ax [749]) [1 *rad_593(D)+0 S4 A32])) "../src/tpdes.f":50 127 {*movsf_internal}
     (nil))
(insn 1707 174 175 4 (set (reg:SF 22 xmm1 [orig:658 _679 ] [658])
        (reg:SF 21 xmm0 [orig:658 _679 ] [658])) "../src/tpdes.f":50 127 {*movsf_internal}
     (nil))
(insn 175 1707 176 4 (set (reg:SF 22 xmm1 [orig:658 _679 ] [658])
        (mult:SF (reg:SF 22 xmm1 [orig:658 _679 ] [658])
            (reg:SF 21 xmm0 [orig:658 _679 ] [658]))) "../src/tpdes.f":50 802 {*fop_sf_comm}
     (nil))
(insn 176 175 1709 4 (set (reg:SF 21 xmm0 [orig:660 _681 ] [660])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -160 [0xffffffffffffff60])) [1 dvdmin+0 S4 A32])) "../src/tpdes.f":50 127 {*movsf_internal}
     (nil))
(insn 1709 176 177 4 (set (reg:SF 23 xmm2 [orig:660 _681 ] [660])
        (reg:SF 21 xmm0 [orig:660 _681 ] [660])) "../src/tpdes.f":50 127 {*movsf_internal}
     (nil))
(insn 177 1709 178 4 (set (reg:SF 23 xmm2 [orig:660 _681 ] [660])
        (mult:SF (reg:SF 23 xmm2 [orig:660 _681 ] [660])
            (reg:SF 21 xmm0 [orig:660 _681 ] [660]))) "../src/tpdes.f":50 802 {*fop_sf_comm}
     (nil))
(insn 178 177 179 4 (set (reg/f:DI 0 ax [750])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -824 [0xfffffffffffffcc8])) [10 rho+0 S8 A64])) "../src/tpdes.f":50 81 {*movdi_internal}
     (nil))
(insn 179 178 180 4 (set (reg:SF 24 xmm3 [orig:126 _40 ] [126])
        (mem:SF (reg/f:DI 0 ax [750]) [1 *rho_609(D)+0 S4 A32])) "../src/tpdes.f":50 127 {*movsf_internal}
     (nil))
(insn 180 179 181 4 (set (reg:SF 21 xmm0 [orig:127 pi.52_41 ] [127])
        (mem/c:SF (symbol_ref:DI ("pi.3583") [flags 0x1c02]  <var_decl 0x1427f2120 pi>) [1 pi+0 S4 A32])) "../src/tpdes.f":50 127 {*movsf_internal}
     (nil))
(insn 181 180 182 4 (set (reg:SF 21 xmm0 [orig:128 _42 ] [128])
        (mult:SF (reg:SF 21 xmm0 [orig:127 pi.52_41 ] [127])
            (reg:SF 24 xmm3 [orig:126 _40 ] [126]))) "../src/tpdes.f":50 802 {*fop_sf_comm}
     (nil))
(insn 182 181 183 4 (set (reg:SF 21 xmm0 [orig:129 _43 ] [129])
        (mult:SF (reg:SF 21 xmm0 [orig:128 _42 ] [128])
            (reg:SF 22 xmm1 [orig:659 _680 ] [659]))) "../src/tpdes.f":50 802 {*fop_sf_comm}
     (nil))
(insn 183 182 184 4 (set (reg:SF 21 xmm0 [orig:130 _44 ] [130])
        (plus:SF (reg:SF 21 xmm0 [orig:129 _43 ] [129])
            (reg:SF 21 xmm0 [orig:129 _43 ] [129]))) "../src/tpdes.f":50 802 {*fop_sf_comm}
     (nil))
(insn 184 183 185 4 (set (reg/f:DI 0 ax [751])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -832 [0xfffffffffffffcc0])) [10 vel+0 S8 A64])) "../src/tpdes.f":50 81 {*movdi_internal}
     (nil))
(insn 185 184 186 4 (set (reg:SF 22 xmm1 [orig:131 _45 ] [131])
        (mem:SF (reg/f:DI 0 ax [751]) [1 *vel_598(D)+0 S4 A32])) "../src/tpdes.f":50 127 {*movsf_internal}
     (nil))
(insn 186 185 187 4 (set (reg:SF 22 xmm1 [orig:132 _46 ] [132])
        (mult:SF (reg:SF 22 xmm1 [orig:131 _45 ] [131])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -160 [0xffffffffffffff60])) [1 dvdmin+0 S4 A32]))) "../src/tpdes.f":50 802 {*fop_sf_comm}
     (nil))
(insn 187 186 189 4 (set (reg:SF 22 xmm1 [orig:133 _47 ] [133])
        (plus:SF (reg:SF 22 xmm1 [orig:132 _46 ] [132])
            (reg:SF 23 xmm2 [orig:661 _682 ] [661]))) "../src/tpdes.f":50 802 {*fop_sf_comm}
     (nil))
(insn 189 187 190 4 (set (reg:SF 21 xmm0 [orig:135 _49 ] [135])
        (mult:SF (reg:SF 21 xmm0 [orig:130 _44 ] [130])
            (reg:SF 22 xmm1 [orig:134 _48 ] [134]))) "../src/tpdes.f":50 802 {*fop_sf_comm}
     (nil))
(insn 190 189 191 4 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -292 [0xfffffffffffffedc])) [1 tmin+0 S4 A32])
        (reg:SF 21 xmm0 [orig:135 _49 ] [135])) "../src/tpdes.f":50 127 {*movsf_internal}
     (nil))
(insn 191 190 192 4 (set (reg:SF 21 xmm0 [orig:136 tmin.53_50 ] [136])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -292 [0xfffffffffffffedc])) [1 tmin+0 S4 A32])) "../src/tpdes.f":53 127 {*movsf_internal}
     (nil))
(insn 192 191 193 4 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 21 xmm0 [orig:136 tmin.53_50 ] [136])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -76 [0xffffffffffffffb4])) [1 tdes+0 S4 A32]))) "../src/tpdes.f":53 51 {*cmpiusf}
     (nil))
(jump_insn 193 192 197 4 (set (pc)
        (if_then_else (unle (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1662)
            (pc))) "../src/tpdes.f":53 617 {*jcc_1}
     (nil)
 -> 1662)
;;  succ:       5 (FALLTHRU)
;;              6
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 137 752 753 754 755 756 757 758 759 760 761 762
(note 197 193 198 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 198 197 199 5 (set (reg/f:DI 0 ax [752])
        (symbol_ref/f:DI ("*lC3") [flags 0x2]  <var_decl 0x143135870 *lC3>)) "../src/tpdes.f":54 81 {*movdi_internal}
     (nil))
(insn 199 198 200 5 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -792 [0xfffffffffffffce8])) [6 dt_parm.18.common.filename+0 S8 A64])
        (reg/f:DI 0 ax [752])) "../src/tpdes.f":54 81 {*movdi_internal}
     (nil))
(insn 200 199 201 5 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -784 [0xfffffffffffffcf0])) [2 dt_parm.18.common.line+0 S4 A128])
        (const_int 54 [0x36])) "../src/tpdes.f":54 82 {*movsi_internal}
     (nil))
(insn 201 200 202 5 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -800 [0xfffffffffffffce0])) [2 dt_parm.18.common.flags+0 S4 A128])
        (const_int 128 [0x80])) "../src/tpdes.f":54 82 {*movsi_internal}
     (nil))
(insn 202 201 203 5 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -796 [0xfffffffffffffce4])) [2 dt_parm.18.common.unit+0 S4 A32])
        (const_int 6 [0x6])) "../src/tpdes.f":54 82 {*movsi_internal}
     (nil))
(insn 203 202 204 5 (parallel [
            (set (reg:DI 0 ax [753])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -800 [0xfffffffffffffce0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/tpdes.f":54 218 {*adddi_1}
     (nil))
(insn 204 203 205 5 (set (reg:DI 5 di)
        (reg:DI 0 ax [753])) "../src/tpdes.f":54 81 {*movdi_internal}
     (nil))
(call_insn 205 204 206 5 (call (mem:QI (symbol_ref:DI ("_gfortran_st_write") [flags 0x41]  <function_decl 0x1427e0800 _gfortran_st_write>) [0 _gfortran_st_write S1 A8])
        (const_int 0 [0])) "../src/tpdes.f":54 655 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 206 205 207 5 (parallel [
            (set (reg:DI 0 ax [754])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -800 [0xfffffffffffffce0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/tpdes.f":54 218 {*adddi_1}
     (nil))
(insn 207 206 208 5 (set (reg:SI 1 dx)
        (const_int 39 [0x27])) "../src/tpdes.f":54 82 {*movsi_internal}
     (nil))
(insn 208 207 209 5 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*lC4") [flags 0x2]  <var_decl 0x143135900 *lC4>)) "../src/tpdes.f":54 81 {*movdi_internal}
     (nil))
(insn 209 208 210 5 (set (reg:DI 5 di)
        (reg:DI 0 ax [754])) "../src/tpdes.f":54 81 {*movdi_internal}
     (nil))
(call_insn 210 209 211 5 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_character_write") [flags 0x41]  <function_decl 0x1427d4900 _gfortran_transfer_character_write>) [0 _gfortran_transfer_character_write S1 A8])
        (const_int 0 [0])) "../src/tpdes.f":54 655 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 211 210 212 5 (parallel [
            (set (reg:DI 2 cx [755])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -292 [0xfffffffffffffedc])))
            (clobber (reg:CC 17 flags))
        ]) "../src/tpdes.f":54 218 {*adddi_1}
     (nil))
(insn 212 211 213 5 (parallel [
            (set (reg:DI 0 ax [756])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -800 [0xfffffffffffffce0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/tpdes.f":54 218 {*adddi_1}
     (nil))
(insn 213 212 214 5 (set (reg:SI 1 dx)
        (const_int 4 [0x4])) "../src/tpdes.f":54 82 {*movsi_internal}
     (nil))
(insn 214 213 215 5 (set (reg:DI 4 si)
        (reg:DI 2 cx [755])) "../src/tpdes.f":54 81 {*movdi_internal}
     (nil))
(insn 215 214 216 5 (set (reg:DI 5 di)
        (reg:DI 0 ax [756])) "../src/tpdes.f":54 81 {*movdi_internal}
     (nil))
(call_insn 216 215 217 5 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_real_write") [flags 0x41]  <function_decl 0x1427d4d00 _gfortran_transfer_real_write>) [0 _gfortran_transfer_real_write S1 A8])
        (const_int 0 [0])) "../src/tpdes.f":54 655 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 217 216 218 5 (parallel [
            (set (reg:DI 0 ax [757])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -800 [0xfffffffffffffce0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/tpdes.f":54 218 {*adddi_1}
     (nil))
(insn 218 217 219 5 (set (reg:DI 5 di)
        (reg:DI 0 ax [757])) "../src/tpdes.f":54 81 {*movdi_internal}
     (nil))
(call_insn 219 218 220 5 (call (mem:QI (symbol_ref:DI ("_gfortran_st_write_done") [flags 0x41]  <function_decl 0x1427e4300 _gfortran_st_write_done>) [0 _gfortran_st_write_done S1 A8])
        (const_int 0 [0])) "../src/tpdes.f":54 655 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 220 219 221 5 (set (reg:SF 22 xmm1 [orig:137 tmin.54_51 ] [137])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -292 [0xfffffffffffffedc])) [1 tmin+0 S4 A32])) "../src/tpdes.f":55 127 {*movsf_internal}
     (nil))
(insn 221 220 222 5 (set (reg:SF 21 xmm0 [759])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC5") [flags 0x2]) [1  S4 A32])) "../src/tpdes.f":55 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 9.900000095367431640625e-1 [0x0.fd70a4p+0])
        (nil)))
(insn 222 221 223 5 (set (reg:SF 21 xmm0 [758])
        (mult:SF (reg:SF 21 xmm0 [759])
            (reg:SF 22 xmm1 [orig:137 tmin.54_51 ] [137]))) "../src/tpdes.f":55 802 {*fop_sf_comm}
     (nil))
(insn 223 222 224 5 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -76 [0xffffffffffffffb4])) [1 tdes+0 S4 A32])
        (reg:SF 21 xmm0 [758])) "../src/tpdes.f":55 127 {*movsf_internal}
     (nil))
(insn 224 223 225 5 (set (reg:SF 22 xmm1 [761])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -160 [0xffffffffffffff60])) [1 dvdmin+0 S4 A32])) "../src/tpdes.f":56 127 {*movsf_internal}
     (nil))
(insn 225 224 226 5 (set (reg:SF 21 xmm0 [762])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC6") [flags 0x2]) [1  S4 A32])) "../src/tpdes.f":56 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 8.9999997615814208984375e-1 [0x0.e66666p+0])
        (nil)))
(insn 226 225 227 5 (set (reg:SF 21 xmm0 [760])
        (mult:SF (reg:SF 21 xmm0 [762])
            (reg:SF 22 xmm1 [761]))) "../src/tpdes.f":56 802 {*fop_sf_comm}
     (nil))
(insn 227 226 1663 5 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [1 dvd+0 S4 A32])
        (reg:SF 21 xmm0 [760])) "../src/tpdes.f":56 127 {*movsf_internal}
     (nil))
(jump_insn 1663 227 1664 5 (set (pc)
        (label_ref 258)) 649 {jump}
     (nil)
 -> 258)
;;  succ:       7 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1664 1663 1662)
;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (RTL, MODIFIED)
;;  pred:       4
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 138 139 140 141 142 143 144 145 146 147 148 662 663 664 665 763 764 765 766 767 768 769 770 771
(code_label 1662 1664 231 6 51 (nil) [1 uses])
(note 231 1662 232 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 232 231 233 6 (set (reg/f:DI 0 ax [763])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -848 [0xfffffffffffffcb0])) [10 rad+0 S8 A64])) "../src/tpdes.f":58 81 {*movdi_internal}
     (nil))
(insn 233 232 1711 6 (set (reg:SF 21 xmm0 [orig:662 _684 ] [662])
        (mem:SF (reg/f:DI 0 ax [763]) [1 *rad_593(D)+0 S4 A32])) "../src/tpdes.f":58 127 {*movsf_internal}
     (nil))
(insn 1711 233 234 6 (set (reg:SF 22 xmm1 [orig:662 _684 ] [662])
        (reg:SF 21 xmm0 [orig:662 _684 ] [662])) "../src/tpdes.f":58 127 {*movsf_internal}
     (nil))
(insn 234 1711 235 6 (set (reg:SF 22 xmm1 [orig:662 _684 ] [662])
        (mult:SF (reg:SF 22 xmm1 [orig:662 _684 ] [662])
            (reg:SF 21 xmm0 [orig:662 _684 ] [662]))) "../src/tpdes.f":58 802 {*fop_sf_comm}
     (nil))
(insn 235 234 236 6 (set (reg/f:DI 0 ax [764])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -824 [0xfffffffffffffcc8])) [10 rho+0 S8 A64])) "../src/tpdes.f":58 81 {*movdi_internal}
     (nil))
(insn 236 235 237 6 (set (reg:SF 23 xmm2 [orig:138 _52 ] [138])
        (mem:SF (reg/f:DI 0 ax [764]) [1 *rho_609(D)+0 S4 A32])) "../src/tpdes.f":58 127 {*movsf_internal}
     (nil))
(insn 237 236 238 6 (set (reg:SF 21 xmm0 [765])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC1") [flags 0x2]) [1  S4 A32])) "../src/tpdes.f":58 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 5.0e-1 [0x0.8p+0])
        (nil)))
(insn 238 237 239 6 (set (reg:SF 21 xmm0 [orig:139 _53 ] [139])
        (mult:SF (reg:SF 21 xmm0 [765])
            (reg:SF 23 xmm2 [orig:138 _52 ] [138]))) "../src/tpdes.f":58 802 {*fop_sf_comm}
     (nil))
(insn 239 238 240 6 (set (reg:SF 23 xmm2 [orig:140 pi.55_54 ] [140])
        (mem/c:SF (symbol_ref:DI ("pi.3583") [flags 0x1c02]  <var_decl 0x1427f2120 pi>) [1 pi+0 S4 A32])) "../src/tpdes.f":58 127 {*movsf_internal}
     (nil))
(insn 240 239 241 6 (set (reg:SF 21 xmm0 [orig:141 _55 ] [141])
        (mult:SF (reg:SF 21 xmm0 [orig:139 _53 ] [139])
            (reg:SF 23 xmm2 [orig:140 pi.55_54 ] [140]))) "../src/tpdes.f":58 802 {*fop_sf_comm}
     (nil))
(insn 241 240 242 6 (set (reg:SF 21 xmm0 [orig:142 _56 ] [142])
        (mult:SF (reg:SF 21 xmm0 [orig:141 _55 ] [141])
            (reg:SF 22 xmm1 [orig:663 _685 ] [663]))) "../src/tpdes.f":58 802 {*fop_sf_comm}
     (nil))
(insn 242 241 243 6 (set (reg:SF 22 xmm1 [orig:143 _57 ] [143])
        (reg:SF 21 xmm0 [orig:142 _56 ] [142])) "../src/tpdes.f":58 127 {*movsf_internal}
     (nil))
(insn 243 242 244 6 (set (reg:SF 21 xmm0 [767])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -76 [0xffffffffffffffb4])) [1 tdes+0 S4 A32])) "../src/tpdes.f":58 127 {*movsf_internal}
     (nil))
(insn 244 243 245 6 (set (reg:SF 21 xmm0 [766])
        (div:SF (reg:SF 21 xmm0 [767])
            (reg:SF 22 xmm1 [orig:143 _57 ] [143]))) "../src/tpdes.f":58 805 {*fop_sf_1}
     (nil))
(insn 245 244 246 6 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [1 vt2+0 S4 A32])
        (reg:SF 21 xmm0 [766])) "../src/tpdes.f":58 127 {*movsf_internal}
     (nil))
(insn 246 245 247 6 (set (reg/f:DI 0 ax [768])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -832 [0xfffffffffffffcc0])) [10 vel+0 S8 A64])) "../src/tpdes.f":59 81 {*movdi_internal}
     (nil))
(insn 247 246 248 6 (set (reg:SF 21 xmm0 [orig:664 _687 ] [664])
        (mem:SF (reg/f:DI 0 ax [768]) [1 *vel_598(D)+0 S4 A32])) "../src/tpdes.f":59 127 {*movsf_internal}
     (nil))
(insn 248 247 249 6 (set (reg:SF 21 xmm0 [orig:665 _688 ] [665])
        (mult:SF (reg:SF 21 xmm0 [orig:664 _687 ] [664])
            (reg:SF 21 xmm0 [orig:664 _687 ] [664]))) "../src/tpdes.f":59 802 {*fop_sf_comm}
     (nil))
(insn 249 248 250 6 (set (reg:SF 21 xmm0 [orig:144 _58 ] [144])
        (plus:SF (reg:SF 21 xmm0 [orig:665 _688 ] [665])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -184 [0xffffffffffffff48])) [1 vt2+0 S4 A32]))) "../src/tpdes.f":59 802 {*fop_sf_comm}
     (nil))
(insn 250 249 251 6 (set (reg:SF 21 xmm0 [orig:145 _59 ] [145])
        (sqrt:SF (reg:SF 21 xmm0 [orig:144 _58 ] [144]))) "../src/tpdes.f":59 836 {*sqrtsf2_sse}
     (nil))
(insn 251 250 252 6 (set (reg/f:DI 0 ax [769])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -832 [0xfffffffffffffcc0])) [10 vel+0 S8 A64])) "../src/tpdes.f":59 81 {*movdi_internal}
     (nil))
(insn 252 251 253 6 (set (reg:SF 22 xmm1 [orig:146 _60 ] [146])
        (mem:SF (reg/f:DI 0 ax [769]) [1 *vel_598(D)+0 S4 A32])) "../src/tpdes.f":59 127 {*movsf_internal}
     (nil))
(insn 253 252 254 6 (set (reg:SF 21 xmm0 [orig:147 _61 ] [147])
        (minus:SF (reg:SF 21 xmm0 [orig:145 _59 ] [145])
            (reg:SF 22 xmm1 [orig:146 _60 ] [146]))) "../src/tpdes.f":59 805 {*fop_sf_1}
     (nil))
(insn 254 253 255 6 (set (reg:SF 22 xmm1 [orig:148 _62 ] [148])
        (reg:SF 21 xmm0 [orig:147 _61 ] [147])) "../src/tpdes.f":59 127 {*movsf_internal}
     (nil))
(insn 255 254 256 6 (set (reg:SF 21 xmm0 [771])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC1") [flags 0x2]) [1  S4 A32])) "../src/tpdes.f":59 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 5.0e-1 [0x0.8p+0])
        (nil)))
(insn 256 255 257 6 (set (reg:SF 21 xmm0 [770])
        (mult:SF (reg:SF 21 xmm0 [771])
            (reg:SF 22 xmm1 [orig:148 _62 ] [148]))) "../src/tpdes.f":59 802 {*fop_sf_comm}
     (nil))
(insn 257 256 258 6 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [1 dvd+0 S4 A32])
        (reg:SF 21 xmm0 [770])) "../src/tpdes.f":59 127 {*movsf_internal}
     (nil))
;;  succ:       7 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;;              5 [100.0%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 149 150 151 152 153 154 155 156 157 666 667 668 669 772 773 774 775 776 777 778
(code_label 258 257 259 7 6 (nil) [1 uses])
(note 259 258 260 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 260 259 261 7 (set (reg/f:DI 0 ax [772])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -832 [0xfffffffffffffcc0])) [10 vel+0 S8 A64])) "../src/tpdes.f":62 81 {*movdi_internal}
     (nil))
(insn 261 260 262 7 (set (reg:SF 21 xmm0 [orig:149 _63 ] [149])
        (mem:SF (reg/f:DI 0 ax [772]) [1 *vel_598(D)+0 S4 A32])) "../src/tpdes.f":62 127 {*movsf_internal}
     (nil))
(insn 262 261 263 7 (set (reg:SF 22 xmm1 [774])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [1 dvd+0 S4 A32])) "../src/tpdes.f":62 127 {*movsf_internal}
     (nil))
(insn 263 262 264 7 (set (reg:SF 21 xmm0 [773])
        (plus:SF (reg:SF 21 xmm0 [orig:149 _63 ] [149])
            (reg:SF 22 xmm1 [774]))) "../src/tpdes.f":62 802 {*fop_sf_comm}
     (nil))
(insn 264 263 265 7 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -80 [0xffffffffffffffb0])) [1 vd+0 S4 A32])
        (reg:SF 21 xmm0 [773])) "../src/tpdes.f":62 127 {*movsf_internal}
     (nil))
(insn 265 264 1713 7 (set (reg:SF 21 xmm0 [orig:666 _702 ] [666])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -80 [0xffffffffffffffb0])) [1 vd+0 S4 A32])) "../src/tpdes.f":63 127 {*movsf_internal}
     (nil))
(insn 1713 265 266 7 (set (reg:SF 23 xmm2 [orig:666 _702 ] [666])
        (reg:SF 21 xmm0 [orig:666 _702 ] [666])) "../src/tpdes.f":63 127 {*movsf_internal}
     (nil))
(insn 266 1713 267 7 (set (reg:SF 23 xmm2 [orig:666 _702 ] [666])
        (mult:SF (reg:SF 23 xmm2 [orig:666 _702 ] [666])
            (reg:SF 21 xmm0 [orig:666 _702 ] [666]))) "../src/tpdes.f":63 802 {*fop_sf_comm}
     (nil))
(insn 267 266 268 7 (set (reg/f:DI 0 ax [775])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -848 [0xfffffffffffffcb0])) [10 rad+0 S8 A64])) "../src/tpdes.f":63 81 {*movdi_internal}
     (nil))
(insn 268 267 1715 7 (set (reg:SF 21 xmm0 [orig:668 _704 ] [668])
        (mem:SF (reg/f:DI 0 ax [775]) [1 *rad_593(D)+0 S4 A32])) "../src/tpdes.f":63 127 {*movsf_internal}
     (nil))
(insn 1715 268 269 7 (set (reg:SF 22 xmm1 [orig:668 _704 ] [668])
        (reg:SF 21 xmm0 [orig:668 _704 ] [668])) "../src/tpdes.f":63 127 {*movsf_internal}
     (nil))
(insn 269 1715 270 7 (set (reg:SF 22 xmm1 [orig:668 _704 ] [668])
        (mult:SF (reg:SF 22 xmm1 [orig:668 _704 ] [668])
            (reg:SF 21 xmm0 [orig:668 _704 ] [668]))) "../src/tpdes.f":63 802 {*fop_sf_comm}
     (nil))
(insn 270 269 271 7 (set (reg/f:DI 0 ax [776])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -824 [0xfffffffffffffcc8])) [10 rho+0 S8 A64])) "../src/tpdes.f":63 81 {*movdi_internal}
     (nil))
(insn 271 270 272 7 (set (reg:SF 24 xmm3 [orig:150 _64 ] [150])
        (mem:SF (reg/f:DI 0 ax [776]) [1 *rho_609(D)+0 S4 A32])) "../src/tpdes.f":63 127 {*movsf_internal}
     (nil))
(insn 272 271 273 7 (set (reg:SF 21 xmm0 [777])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC1") [flags 0x2]) [1  S4 A32])) "../src/tpdes.f":63 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 5.0e-1 [0x0.8p+0])
        (nil)))
(insn 273 272 274 7 (set (reg:SF 21 xmm0 [orig:151 _65 ] [151])
        (mult:SF (reg:SF 21 xmm0 [777])
            (reg:SF 24 xmm3 [orig:150 _64 ] [150]))) "../src/tpdes.f":63 802 {*fop_sf_comm}
     (nil))
(insn 274 273 275 7 (set (reg:SF 21 xmm0 [orig:152 _66 ] [152])
        (mult:SF (reg:SF 21 xmm0 [orig:151 _65 ] [151])
            (reg:SF 23 xmm2 [orig:667 _703 ] [667]))) "../src/tpdes.f":63 802 {*fop_sf_comm}
     (nil))
(insn 275 274 276 7 (set (reg:SF 23 xmm2 [orig:153 pi.56_67 ] [153])
        (mem/c:SF (symbol_ref:DI ("pi.3583") [flags 0x1c02]  <var_decl 0x1427f2120 pi>) [1 pi+0 S4 A32])) "../src/tpdes.f":63 127 {*movsf_internal}
     (nil))
(insn 276 275 277 7 (set (reg:SF 21 xmm0 [orig:154 _68 ] [154])
        (mult:SF (reg:SF 21 xmm0 [orig:152 _66 ] [152])
            (reg:SF 23 xmm2 [orig:153 pi.56_67 ] [153]))) "../src/tpdes.f":63 802 {*fop_sf_comm}
     (nil))
(insn 277 276 278 7 (set (reg:SF 21 xmm0 [orig:155 _69 ] [155])
        (mult:SF (reg:SF 21 xmm0 [orig:154 _68 ] [154])
            (reg:SF 22 xmm1 [orig:669 _705 ] [669]))) "../src/tpdes.f":63 802 {*fop_sf_comm}
     (nil))
(insn 278 277 279 7 (set (reg:SF 22 xmm1 [orig:156 _70 ] [156])
        (reg:SF 21 xmm0 [orig:155 _69 ] [155])) "../src/tpdes.f":63 127 {*movsf_internal}
     (nil))
(insn 279 278 280 7 (set (reg:SF 21 xmm0 [778])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -76 [0xffffffffffffffb4])) [1 tdes+0 S4 A32])) "../src/tpdes.f":63 127 {*movsf_internal}
     (nil))
(insn 280 279 281 7 (set (reg:SF 21 xmm0 [orig:157 _71 ] [157])
        (div:SF (reg:SF 21 xmm0 [778])
            (reg:SF 22 xmm1 [orig:156 _70 ] [156]))) "../src/tpdes.f":63 805 {*fop_sf_1}
     (nil))
(insn 281 280 1665 7 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -288 [0xfffffffffffffee0])) [1 tc+0 S4 A128])
        (reg:SF 21 xmm0 [orig:157 _71 ] [157])) "../src/tpdes.f":63 127 {*movsf_internal}
     (nil))
(jump_insn 1665 281 1666 7 (set (pc)
        (label_ref 720)) 649 {jump}
     (nil)
 -> 720)
;;  succ:       36 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1666 1665 1661)
;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (RTL, MODIFIED)
;;  pred:       3
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 628 779 780
(code_label 1661 1666 285 8 50 (nil) [1 uses])
(note 285 1661 286 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 286 285 287 8 (set (reg:SF 21 xmm0 [779])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC0") [flags 0x2]) [1  S4 A32])) "../src/tpdes.f":68 127 {*movsf_internal}
     (nil))
(insn 287 286 288 8 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -60 [0xffffffffffffffc4])) [1 epsr3+0 S4 A32])
        (reg:SF 21 xmm0 [779])) "../src/tpdes.f":68 127 {*movsf_internal}
     (nil))
(insn 288 287 289 8 (set (reg/f:DI 0 ax [780])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 24 [0x18])) [11 n+0 S8 A64])) "../src/tpdes.f":69 81 {*movdi_internal}
     (nil))
(insn 289 288 290 8 (set (reg:SI 1 dx [orig:628 _582 ] [628])
        (mem:SI (reg/f:DI 0 ax [780]) [2 *n_522(D)+0 S4 A32])) "../src/tpdes.f":69 82 {*movsi_internal}
     (nil))
(insn 290 289 325 8 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [2 i+0 S4 A32])
        (const_int 1 [0x1])) "../src/tpdes.f":69 82 {*movsi_internal}
     (nil))
;;  succ:       9 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 628

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
;;              10 [100.0%] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 628
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 628
;; lr  def 	 17 [flags] 629
(code_label 325 290 291 9 9 (nil) [1 uses])
(note 291 325 292 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 292 291 293 9 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -64 [0xffffffffffffffc0])) [2 i+0 S4 A32])
            (reg:SI 1 dx [orig:628 _582 ] [628]))) "../src/tpdes.f":69 7 {*cmpsi_1}
     (nil))
(insn 293 292 294 9 (set (reg:QI 0 ax [orig:629 _584 ] [629])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "../src/tpdes.f":69 613 {*setcc_qi}
     (nil))
(insn 294 293 295 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:629 _584 ] [629])
            (const_int 0 [0]))) "../src/tpdes.f":69 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 295 294 296 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1690)
            (pc))) "../src/tpdes.f":69 617 {*jcc_1}
     (nil)
 -> 1690)
;;  succ:       58
;;              10 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 628

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 58, flags: (RTL, MODIFIED)
;;  pred:       9 (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 628
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 158 159 160 161 162 163 164 165 166 167 168 169 170 171 630 631 781 782 783 784 785 786 787 788 789 790
(note 296 295 297 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 297 296 298 10 (set (reg:SI 0 ax [781])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [2 i+0 S4 A32])) "../src/tpdes.f":70 82 {*movsi_internal}
     (nil))
(insn 298 297 299 10 (set (reg:DI 0 ax [orig:158 _72 ] [158])
        (sign_extend:DI (reg:SI 0 ax [781]))) "../src/tpdes.f":70 145 {*extendsidi2_rex64}
     (nil))
(insn 299 298 300 10 (parallel [
            (set (reg:DI 2 cx [orig:159 _73 ] [159])
                (plus:DI (reg:DI 0 ax [orig:158 _72 ] [158])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/tpdes.f":70 218 {*adddi_1}
     (nil))
(insn 300 299 301 10 (set (reg/f:DI 0 ax [782])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 32 [0x20])) [12 r+0 S8 A64])) "../src/tpdes.f":70 81 {*movdi_internal}
     (nil))
(insn 301 300 1717 10 (set (reg:SF 21 xmm0 [orig:630 _586 ] [630])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:159 _73 ] [159])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [782])) [1 *r_585(D) S4 A32])) "../src/tpdes.f":70 127 {*movsf_internal}
     (nil))
(insn 1717 301 302 10 (set (reg:SF 22 xmm1 [orig:630 _586 ] [630])
        (reg:SF 21 xmm0 [orig:630 _586 ] [630])) "../src/tpdes.f":70 127 {*movsf_internal}
     (nil))
(insn 302 1717 303 10 (set (reg:SF 22 xmm1 [orig:630 _586 ] [630])
        (mult:SF (reg:SF 22 xmm1 [orig:630 _586 ] [630])
            (reg:SF 21 xmm0 [orig:630 _586 ] [630]))) "../src/tpdes.f":70 802 {*fop_sf_comm}
     (nil))
(insn 303 302 304 10 (set (reg:SI 0 ax [783])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [2 i+0 S4 A32])) "../src/tpdes.f":70 82 {*movsi_internal}
     (nil))
(insn 304 303 305 10 (set (reg:DI 0 ax [orig:160 _74 ] [160])
        (sign_extend:DI (reg:SI 0 ax [783]))) "../src/tpdes.f":70 145 {*extendsidi2_rex64}
     (nil))
(insn 305 304 306 10 (parallel [
            (set (reg:DI 2 cx [orig:161 _75 ] [161])
                (plus:DI (reg:DI 0 ax [orig:160 _74 ] [160])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/tpdes.f":70 218 {*adddi_1}
     (nil))
(insn 306 305 307 10 (set (reg/f:DI 0 ax [784])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 56 [0x38])) [12 cd+0 S8 A64])) "../src/tpdes.f":70 81 {*movdi_internal}
     (nil))
(insn 307 306 308 10 (set (reg:SF 21 xmm0 [orig:162 _76 ] [162])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:161 _75 ] [161])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [784])) [1 *cd_588(D) S4 A32])) "../src/tpdes.f":70 127 {*movsf_internal}
     (nil))
(insn 308 307 309 10 (set (reg:SI 0 ax [785])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [2 i+0 S4 A32])) "../src/tpdes.f":70 82 {*movsi_internal}
     (nil))
(insn 309 308 310 10 (set (reg:DI 0 ax [orig:163 _77 ] [163])
        (sign_extend:DI (reg:SI 0 ax [785]))) "../src/tpdes.f":70 145 {*extendsidi2_rex64}
     (nil))
(insn 310 309 311 10 (parallel [
            (set (reg:DI 2 cx [orig:164 _78 ] [164])
                (plus:DI (reg:DI 0 ax [orig:163 _77 ] [163])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/tpdes.f":70 218 {*adddi_1}
     (nil))
(insn 311 310 312 10 (set (reg/f:DI 0 ax [786])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 48 [0x30])) [12 cl+0 S8 A64])) "../src/tpdes.f":70 81 {*movdi_internal}
     (nil))
(insn 312 311 313 10 (set (reg:SF 23 xmm2 [orig:165 _79 ] [165])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:164 _78 ] [164])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [786])) [1 *cl_589(D) S4 A32])) "../src/tpdes.f":70 127 {*movsf_internal}
     (nil))
(insn 313 312 314 10 (set (reg:SF 21 xmm0 [orig:166 _80 ] [166])
        (div:SF (reg:SF 21 xmm0 [orig:162 _76 ] [162])
            (reg:SF 23 xmm2 [orig:165 _79 ] [165]))) "../src/tpdes.f":70 805 {*fop_sf_1}
     (nil))
(insn 314 313 315 10 (set (reg:SF 21 xmm0 [orig:167 _81 ] [167])
        (mult:SF (reg:SF 21 xmm0 [orig:166 _80 ] [166])
            (reg:SF 22 xmm1 [orig:631 _587 ] [631]))) "../src/tpdes.f":70 802 {*fop_sf_comm}
     (nil))
(insn 315 314 316 10 (set (reg:SI 0 ax [787])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [2 i+0 S4 A32])) "../src/tpdes.f":70 82 {*movsi_internal}
     (nil))
(insn 316 315 317 10 (set (reg:DI 0 ax [orig:168 _82 ] [168])
        (sign_extend:DI (reg:SI 0 ax [787]))) "../src/tpdes.f":70 145 {*extendsidi2_rex64}
     (nil))
(insn 317 316 318 10 (parallel [
            (set (reg:DI 2 cx [orig:169 _83 ] [169])
                (plus:DI (reg:DI 0 ax [orig:168 _82 ] [168])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/tpdes.f":70 218 {*adddi_1}
     (nil))
(insn 318 317 319 10 (set (reg/f:DI 0 ax [788])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 40 [0x28])) [12 dr+0 S8 A64])) "../src/tpdes.f":70 81 {*movdi_internal}
     (nil))
(insn 319 318 320 10 (set (reg:SF 22 xmm1 [orig:170 _84 ] [170])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:169 _83 ] [169])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [788])) [1 *dr_590(D) S4 A32])) "../src/tpdes.f":70 127 {*movsf_internal}
     (nil))
(insn 320 319 321 10 (set (reg:SF 21 xmm0 [orig:171 _85 ] [171])
        (mult:SF (reg:SF 21 xmm0 [orig:167 _81 ] [167])
            (reg:SF 22 xmm1 [orig:170 _84 ] [170]))) "../src/tpdes.f":70 802 {*fop_sf_comm}
     (nil))
(insn 321 320 322 10 (set (reg:SF 22 xmm1 [790])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -60 [0xffffffffffffffc4])) [1 epsr3+0 S4 A32])) "../src/tpdes.f":70 127 {*movsf_internal}
     (nil))
(insn 322 321 323 10 (set (reg:SF 21 xmm0 [789])
        (plus:SF (reg:SF 21 xmm0 [orig:171 _85 ] [171])
            (reg:SF 22 xmm1 [790]))) "../src/tpdes.f":70 802 {*fop_sf_comm}
     (nil))
(insn 323 322 324 10 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -60 [0xffffffffffffffc4])) [1 epsr3+0 S4 A32])
        (reg:SF 21 xmm0 [789])) "../src/tpdes.f":70 127 {*movsf_internal}
     (nil))
(insn 324 323 1667 10 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -64 [0xffffffffffffffc0])) [2 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -64 [0xffffffffffffffc0])) [2 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/tpdes.f":69 217 {*addsi_1}
     (nil))
(jump_insn 1667 324 1668 10 (set (pc)
        (label_ref 325)) "../src/tpdes.f":69 649 {jump}
     (nil)
 -> 325)
;;  succ:       9 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 628

(barrier 1668 1667 1690)
;; basic block 58, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 11, flags: (RTL, MODIFIED)
;;  pred:       9
;; bb 58 artificial_defs: { }
;; bb 58 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 1690 1668 1689 58 54 (nil) [1 uses])
(note 1689 1690 1691 58 [bb 58] NOTE_INSN_BASIC_BLOCK)
(insn 1691 1689 328 58 (const_int 0 [0]) "../src/tpdes.f":70 682 {nop}
     (nil))
;;  succ:       11 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 58, next block 12, flags: (RTL, MODIFIED)
;;  pred:       58 [100.0%]  (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 632 633 634 635 636 637 638 639 640 641 642 791 792 793 794 795 796 797 798 799 800 801 802 803 804 805
(code_label 328 1691 329 11 8 (nil) [0 uses])
(note 329 328 330 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 330 329 331 11 (set (reg/f:DI 0 ax [791])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -848 [0xfffffffffffffcb0])) [10 rad+0 S8 A64])) "../src/tpdes.f":74 81 {*movdi_internal}
     (nil))
(insn 331 330 1719 11 (set (reg:SF 21 xmm0 [orig:632 _594 ] [632])
        (mem:SF (reg/f:DI 0 ax [791]) [1 *rad_593(D)+0 S4 A32])) "../src/tpdes.f":74 127 {*movsf_internal}
     (nil))
(insn 1719 331 332 11 (set (reg:SF 22 xmm1 [orig:632 _594 ] [632])
        (reg:SF 21 xmm0 [orig:632 _594 ] [632])) "../src/tpdes.f":74 127 {*movsf_internal}
     (nil))
(insn 332 1719 333 11 (set (reg:SF 22 xmm1 [orig:632 _594 ] [632])
        (mult:SF (reg:SF 22 xmm1 [orig:632 _594 ] [632])
            (reg:SF 21 xmm0 [orig:632 _594 ] [632]))) "../src/tpdes.f":74 802 {*fop_sf_comm}
     (nil))
(insn 333 332 334 11 (set (reg/f:DI 0 ax [792])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -840 [0xfffffffffffffcb8])) [10 omg+0 S8 A64])) "../src/tpdes.f":74 81 {*movdi_internal}
     (nil))
(insn 334 333 335 11 (set (reg:SF 21 xmm0 [orig:172 _86 ] [172])
        (mem:SF (reg/f:DI 0 ax [792]) [1 *omg_596(D)+0 S4 A32])) "../src/tpdes.f":74 127 {*movsf_internal}
     (nil))
(insn 335 334 336 11 (set (reg:SF 21 xmm0 [orig:173 _87 ] [173])
        (plus:SF (reg:SF 21 xmm0 [orig:172 _86 ] [172])
            (reg:SF 21 xmm0 [orig:172 _86 ] [172]))) "../src/tpdes.f":74 802 {*fop_sf_comm}
     (nil))
(insn 336 335 337 11 (set (reg:SF 21 xmm0 [orig:174 _88 ] [174])
        (mult:SF (reg:SF 21 xmm0 [orig:173 _87 ] [173])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -60 [0xffffffffffffffc4])) [1 epsr3+0 S4 A32]))) "../src/tpdes.f":74 802 {*fop_sf_comm}
     (nil))
(insn 337 336 338 11 (set (reg:SF 21 xmm0 [793])
        (div:SF (reg:SF 21 xmm0 [orig:174 _88 ] [174])
            (reg:SF 22 xmm1 [orig:633 _595 ] [633]))) "../src/tpdes.f":74 805 {*fop_sf_1}
     (nil))
(insn 338 337 339 11 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -156 [0xffffffffffffff64])) [1 vvis+0 S4 A32])
        (reg:SF 21 xmm0 [793])) "../src/tpdes.f":74 127 {*movsf_internal}
     (nil))
(insn 339 338 340 11 (set (reg/f:DI 0 ax [794])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -832 [0xfffffffffffffcc0])) [10 vel+0 S8 A64])) "../src/tpdes.f":78 81 {*movdi_internal}
     (nil))
(insn 340 339 1721 11 (set (reg:SF 21 xmm0 [orig:634 _599 ] [634])
        (mem:SF (reg/f:DI 0 ax [794]) [1 *vel_598(D)+0 S4 A32])) "../src/tpdes.f":78 127 {*movsf_internal}
     (nil))
(insn 1721 340 341 11 (set (reg:SF 23 xmm2 [orig:634 _599 ] [634])
        (reg:SF 21 xmm0 [orig:634 _599 ] [634])) "../src/tpdes.f":78 127 {*movsf_internal}
     (nil))
(insn 341 1721 342 11 (set (reg:SF 23 xmm2 [orig:634 _599 ] [634])
        (mult:SF (reg:SF 23 xmm2 [orig:634 _599 ] [634])
            (reg:SF 21 xmm0 [orig:634 _599 ] [634]))) "../src/tpdes.f":78 802 {*fop_sf_comm}
     (nil))
(insn 342 341 1723 11 (set (reg:SF 21 xmm0 [orig:636 _601 ] [636])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -156 [0xffffffffffffff64])) [1 vvis+0 S4 A32])) "../src/tpdes.f":78 127 {*movsf_internal}
     (nil))
(insn 1723 342 343 11 (set (reg:SF 22 xmm1 [orig:636 _601 ] [636])
        (reg:SF 21 xmm0 [orig:636 _601 ] [636])) "../src/tpdes.f":78 127 {*movsf_internal}
     (nil))
(insn 343 1723 344 11 (set (reg:SF 22 xmm1 [orig:636 _601 ] [636])
        (mult:SF (reg:SF 22 xmm1 [orig:636 _601 ] [636])
            (reg:SF 21 xmm0 [orig:636 _601 ] [636]))) "../src/tpdes.f":78 802 {*fop_sf_comm}
     (nil))
(insn 344 343 345 11 (set (reg/f:DI 0 ax [795])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -832 [0xfffffffffffffcc0])) [10 vel+0 S8 A64])) "../src/tpdes.f":78 81 {*movdi_internal}
     (nil))
(insn 345 344 346 11 (set (reg:SF 21 xmm0 [orig:175 _89 ] [175])
        (mem:SF (reg/f:DI 0 ax [795]) [1 *vel_598(D)+0 S4 A32])) "../src/tpdes.f":78 127 {*movsf_internal}
     (nil))
(insn 346 345 347 11 (set (reg:SF 21 xmm0 [orig:176 _90 ] [176])
        (mult:SF (reg:SF 21 xmm0 [orig:175 _89 ] [175])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -156 [0xffffffffffffff64])) [1 vvis+0 S4 A32]))) "../src/tpdes.f":78 802 {*fop_sf_comm}
     (nil))
(insn 347 346 348 11 (set (reg:SF 21 xmm0 [orig:177 _91 ] [177])
        (plus:SF (reg:SF 21 xmm0 [orig:176 _90 ] [176])
            (reg:SF 23 xmm2 [orig:635 _600 ] [635]))) "../src/tpdes.f":78 802 {*fop_sf_comm}
     (nil))
(insn 348 347 349 11 (set (reg:SF 21 xmm0 [orig:178 _92 ] [178])
        (plus:SF (reg:SF 21 xmm0 [orig:177 _91 ] [177])
            (reg:SF 22 xmm1 [orig:637 _602 ] [637]))) "../src/tpdes.f":78 802 {*fop_sf_comm}
     (nil))
(insn 349 348 350 11 (set (reg:SF 22 xmm1 [orig:179 _93 ] [179])
        (sqrt:SF (reg:SF 21 xmm0 [orig:178 _92 ] [178]))) "../src/tpdes.f":78 836 {*sqrtsf2_sse}
     (nil))
(insn 350 349 351 11 (set (reg/f:DI 0 ax [796])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -832 [0xfffffffffffffcc0])) [10 vel+0 S8 A64])) "../src/tpdes.f":78 81 {*movdi_internal}
     (nil))
(insn 351 350 352 11 (set (reg:SF 21 xmm0 [orig:180 _94 ] [180])
        (mem:SF (reg/f:DI 0 ax [796]) [1 *vel_598(D)+0 S4 A32])) "../src/tpdes.f":78 127 {*movsf_internal}
     (nil))
(insn 352 351 353 11 (set (reg:SF 21 xmm0 [orig:181 _95 ] [181])
        (plus:SF (reg:SF 21 xmm0 [orig:180 _94 ] [180])
            (reg:SF 21 xmm0 [orig:180 _94 ] [180]))) "../src/tpdes.f":78 802 {*fop_sf_comm}
     (nil))
(insn 353 352 1726 11 (set (reg:SF 22 xmm1 [orig:179 _93 ] [179])
        (minus:SF (reg:SF 22 xmm1 [orig:179 _93 ] [179])
            (reg:SF 21 xmm0 [orig:181 _95 ] [181]))) "../src/tpdes.f":78 805 {*fop_sf_1}
     (nil))
(insn 1726 353 354 11 (set (reg:SF 21 xmm0 [orig:182 _96 ] [182])
        (reg:SF 22 xmm1 [orig:179 _93 ] [179])) "../src/tpdes.f":78 127 {*movsf_internal}
     (nil))
(insn 354 1726 355 11 (set (reg:SF 21 xmm0 [orig:183 _97 ] [183])
        (minus:SF (reg:SF 21 xmm0 [orig:182 _96 ] [182])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -156 [0xffffffffffffff64])) [1 vvis+0 S4 A32]))) "../src/tpdes.f":78 805 {*fop_sf_1}
     (nil))
(insn 355 354 356 11 (set (reg:SF 22 xmm1 [orig:184 _98 ] [184])
        (reg:SF 21 xmm0 [orig:183 _97 ] [183])) "../src/tpdes.f":78 127 {*movsf_internal}
     (nil))
(insn 356 355 357 11 (set (reg:SF 21 xmm0 [798])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC7") [flags 0x2]) [1  S4 A32])) "../src/tpdes.f":78 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 3.300000131130218505859375e-1 [0x0.a8f5c3p-1])
        (nil)))
(insn 357 356 358 11 (set (reg:SF 21 xmm0 [797])
        (mult:SF (reg:SF 21 xmm0 [798])
            (reg:SF 22 xmm1 [orig:184 _98 ] [184]))) "../src/tpdes.f":78 802 {*fop_sf_comm}
     (nil))
(insn 358 357 359 11 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -160 [0xffffffffffffff60])) [1 dvdmin+0 S4 A32])
        (reg:SF 21 xmm0 [797])) "../src/tpdes.f":78 127 {*movsf_internal}
     (nil))
(insn 359 358 360 11 (set (reg/f:DI 0 ax [799])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -848 [0xfffffffffffffcb0])) [10 rad+0 S8 A64])) "../src/tpdes.f":82 81 {*movdi_internal}
     (nil))
(insn 360 359 1727 11 (set (reg:SF 21 xmm0 [orig:638 _604 ] [638])
        (mem:SF (reg/f:DI 0 ax [799]) [1 *rad_593(D)+0 S4 A32])) "../src/tpdes.f":82 127 {*movsf_internal}
     (nil))
(insn 1727 360 361 11 (set (reg:SF 22 xmm1 [orig:638 _604 ] [638])
        (reg:SF 21 xmm0 [orig:638 _604 ] [638])) "../src/tpdes.f":82 127 {*movsf_internal}
     (nil))
(insn 361 1727 362 11 (set (reg:SF 22 xmm1 [orig:638 _604 ] [638])
        (mult:SF (reg:SF 22 xmm1 [orig:638 _604 ] [638])
            (reg:SF 21 xmm0 [orig:638 _604 ] [638]))) "../src/tpdes.f":82 802 {*fop_sf_comm}
     (nil))
(insn 362 361 363 11 (set (reg:SF 0 ax [orig:640 _606 ] [640])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -160 [0xffffffffffffff60])) [1 dvdmin+0 S4 A32])) "../src/tpdes.f":82 127 {*movsf_internal}
     (nil))
(insn 363 362 364 11 (set (reg:SF 21 xmm0 [orig:641 _607 ] [641])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -160 [0xffffffffffffff60])) [1 dvdmin+0 S4 A32])) "../src/tpdes.f":82 127 {*movsf_internal}
     (nil))
(insn 364 363 1730 11 (set (reg:SF 21 xmm0 [orig:641 _607 ] [641])
        (mult:SF (reg:SF 21 xmm0 [orig:641 _607 ] [641])
            (reg:SF 21 xmm0 [orig:641 _607 ] [641]))) "../src/tpdes.f":82 802 {*fop_sf_comm}
     (nil))
(insn 1730 364 1833 11 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -880 [0xfffffffffffffc90])) [14 %sfp+-832 S4 A128])
        (reg:SF 21 xmm0 [orig:641 _607 ] [641])) "../src/tpdes.f":82 127 {*movsf_internal}
     (nil))
(note 1833 1730 1808 11 NOTE_INSN_DELETED)
(note 1808 1833 365 11 NOTE_INSN_DELETED)
(insn 365 1808 366 11 (set (reg/f:DI 1 dx [800])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -824 [0xfffffffffffffcc8])) [10 rho+0 S8 A64])) "../src/tpdes.f":82 81 {*movdi_internal}
     (nil))
(insn 366 365 367 11 (set (reg:SF 23 xmm2 [orig:185 _99 ] [185])
        (mem:SF (reg/f:DI 1 dx [800]) [1 *rho_609(D)+0 S4 A32])) "../src/tpdes.f":82 127 {*movsf_internal}
     (nil))
(insn 367 366 368 11 (set (reg:SF 21 xmm0 [orig:186 pi.57_100 ] [186])
        (mem/c:SF (symbol_ref:DI ("pi.3583") [flags 0x1c02]  <var_decl 0x1427f2120 pi>) [1 pi+0 S4 A32])) "../src/tpdes.f":82 127 {*movsf_internal}
     (nil))
(insn 368 367 369 11 (set (reg:SF 21 xmm0 [orig:187 _101 ] [187])
        (mult:SF (reg:SF 21 xmm0 [orig:186 pi.57_100 ] [186])
            (reg:SF 23 xmm2 [orig:185 _99 ] [185]))) "../src/tpdes.f":82 802 {*fop_sf_comm}
     (nil))
(insn 369 368 1731 11 (set (reg:SF 21 xmm0 [orig:188 _102 ] [188])
        (mult:SF (reg:SF 21 xmm0 [orig:187 _101 ] [187])
            (reg:SF 22 xmm1 [orig:639 _605 ] [639]))) "../src/tpdes.f":82 802 {*fop_sf_comm}
     (nil))
(insn 1731 369 370 11 (set (reg:SF 27 xmm6 [orig:188 _102 ] [188])
        (reg:SF 21 xmm0 [orig:188 _102 ] [188])) "../src/tpdes.f":82 127 {*movsf_internal}
     (nil))
(insn 370 1731 1732 11 (set (reg:SF 27 xmm6 [orig:188 _102 ] [188])
        (plus:SF (reg:SF 27 xmm6 [orig:188 _102 ] [188])
            (reg:SF 21 xmm0 [orig:188 _102 ] [188]))) "../src/tpdes.f":82 802 {*fop_sf_comm}
     (nil))
(insn 1732 370 1832 11 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -864 [0xfffffffffffffca0])) [14 %sfp+-816 S4 A128])
        (reg:SF 27 xmm6 [orig:188 _102 ] [188])) "../src/tpdes.f":82 127 {*movsf_internal}
     (nil))
(note 1832 1732 1807 11 NOTE_INSN_DELETED)
(note 1807 1832 371 11 NOTE_INSN_DELETED)
(insn 371 1807 372 11 (set (reg:SI 5 di)
        (const_int 3 [0x3])) "../src/tpdes.f":82 82 {*movsi_internal}
     (nil))
(insn 372 371 373 11 (set (reg:SF 21 xmm0)
        (reg:SF 0 ax [orig:640 _606 ] [640])) "../src/tpdes.f":82 127 {*movsf_internal}
     (nil))
(call_insn/u 373 372 374 11 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("__powisf2") [flags 0x41]) [0  S1 A8])
            (const_int 0 [0]))) "../src/tpdes.f":82 665 {*call_value}
     (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
        (nil))
    (expr_list (use (reg:SI 5 di))
        (expr_list (use (reg:SF 21 xmm0))
            (nil))))
(insn 374 373 375 11 (set (reg:SF 22 xmm1 [orig:190 _104 ] [190])
        (reg:SF 21 xmm0)) "../src/tpdes.f":82 127 {*movsf_internal}
     (nil))
(insn 375 374 376 11 (set (reg/f:DI 0 ax [801])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -832 [0xfffffffffffffcc0])) [10 vel+0 S8 A64])) "../src/tpdes.f":82 81 {*movdi_internal}
     (nil))
(insn 376 375 377 11 (set (reg:SF 21 xmm0 [orig:191 _105 ] [191])
        (mem:SF (reg/f:DI 0 ax [801]) [1 *vel_598(D)+0 S4 A32])) "../src/tpdes.f":82 127 {*movsf_internal}
     (nil))
(insn 377 376 378 11 (set (reg:SF 21 xmm0 [orig:192 _106 ] [192])
        (plus:SF (reg:SF 21 xmm0 [orig:191 _105 ] [191])
            (reg:SF 21 xmm0 [orig:191 _105 ] [191]))) "../src/tpdes.f":82 802 {*fop_sf_comm}
     (nil))
(insn 378 377 1733 11 (set (reg:SF 21 xmm0 [orig:193 _107 ] [193])
        (plus:SF (reg:SF 21 xmm0 [orig:192 _106 ] [192])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -156 [0xffffffffffffff64])) [1 vvis+0 S4 A32]))) "../src/tpdes.f":82 802 {*fop_sf_comm}
     (nil))
(note 1733 378 1831 11 NOTE_INSN_DELETED)
(note 1831 1733 380 11 NOTE_INSN_DELETED)
(insn 380 1831 381 11 (set (reg:SF 21 xmm0 [orig:195 _109 ] [195])
        (mult:SF (reg:SF 21 xmm0 [orig:194 _108 ] [194])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -880 [0xfffffffffffffc90])) [14 %sfp+-832 S4 A128]))) "../src/tpdes.f":82 802 {*fop_sf_comm}
     (nil))
(insn 381 380 382 11 (set (reg:SF 22 xmm1 [orig:196 _110 ] [196])
        (plus:SF (reg:SF 22 xmm1 [orig:190 _104 ] [190])
            (reg:SF 21 xmm0 [orig:195 _109 ] [195]))) "../src/tpdes.f":82 802 {*fop_sf_comm}
     (nil))
(insn 382 381 383 11 (set (reg/f:DI 0 ax [802])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -832 [0xfffffffffffffcc0])) [10 vel+0 S8 A64])) "../src/tpdes.f":82 81 {*movdi_internal}
     (nil))
(insn 383 382 384 11 (set (reg:SF 23 xmm2 [orig:197 _111 ] [197])
        (mem:SF (reg/f:DI 0 ax [802]) [1 *vel_598(D)+0 S4 A32])) "../src/tpdes.f":82 127 {*movsf_internal}
     (nil))
(insn 384 383 385 11 (set (reg/f:DI 0 ax [803])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -832 [0xfffffffffffffcc0])) [10 vel+0 S8 A64])) "../src/tpdes.f":82 81 {*movdi_internal}
     (nil))
(insn 385 384 386 11 (set (reg:SF 21 xmm0 [orig:198 _112 ] [198])
        (mem:SF (reg/f:DI 0 ax [803]) [1 *vel_598(D)+0 S4 A32])) "../src/tpdes.f":82 127 {*movsf_internal}
     (nil))
(insn 386 385 388 11 (set (reg:SF 21 xmm0 [orig:199 _113 ] [199])
        (plus:SF (reg:SF 21 xmm0 [orig:198 _112 ] [198])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -156 [0xffffffffffffff64])) [1 vvis+0 S4 A32]))) "../src/tpdes.f":82 802 {*fop_sf_comm}
     (nil))
(insn 388 386 389 11 (set (reg:SF 21 xmm0 [orig:201 _115 ] [201])
        (mult:SF (reg:SF 21 xmm0 [orig:200 _114 ] [200])
            (reg:SF 23 xmm2 [orig:197 _111 ] [197]))) "../src/tpdes.f":82 802 {*fop_sf_comm}
     (nil))
(insn 389 388 390 11 (set (reg:SF 21 xmm0 [orig:202 _116 ] [202])
        (mult:SF (reg:SF 21 xmm0 [orig:201 _115 ] [201])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -160 [0xffffffffffffff60])) [1 dvdmin+0 S4 A32]))) "../src/tpdes.f":82 802 {*fop_sf_comm}
     (nil))
(insn 390 389 1734 11 (set (reg:SF 21 xmm0 [orig:203 _117 ] [203])
        (plus:SF (reg:SF 21 xmm0 [orig:202 _116 ] [202])
            (reg:SF 22 xmm1 [orig:196 _110 ] [196]))) "../src/tpdes.f":82 802 {*fop_sf_comm}
     (nil))
(note 1734 390 1830 11 NOTE_INSN_DELETED)
(note 1830 1734 392 11 NOTE_INSN_DELETED)
(insn 392 1830 393 11 (set (reg:SF 21 xmm0 [orig:205 _119 ] [205])
        (mult:SF (reg:SF 21 xmm0 [orig:204 _118 ] [204])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -864 [0xfffffffffffffca0])) [14 %sfp+-816 S4 A128]))) "../src/tpdes.f":82 802 {*fop_sf_comm}
     (nil))
(insn 393 392 394 11 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -248 [0xffffffffffffff08])) [1 pmin+0 S4 A64])
        (reg:SF 21 xmm0 [orig:205 _119 ] [205])) "../src/tpdes.f":82 127 {*movsf_internal}
     (nil))
(insn 394 393 395 11 (set (reg/f:DI 0 ax [804])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -816 [0xfffffffffffffcd0])) [10 pdes1+0 S8 A64])) "../src/tpdes.f":85 81 {*movdi_internal}
     (nil))
(insn 395 394 396 11 (set (reg:SF 21 xmm0 [orig:206 _120 ] [206])
        (mem:SF (reg/f:DI 0 ax [804]) [1 *pdes1_579(D)+0 S4 A32])) "../src/tpdes.f":85 127 {*movsf_internal}
     (nil))
(insn 396 395 397 11 (set (reg:SF 22 xmm1 [805])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC0") [flags 0x2]) [1  S4 A32])) "../src/tpdes.f":85 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 397 396 398 11 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 21 xmm0 [orig:206 _120 ] [206])
            (reg:SF 22 xmm1 [805]))) "../src/tpdes.f":85 51 {*cmpiusf}
     (nil))
(jump_insn 398 397 1636 11 (set (pc)
        (if_then_else (unordered (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1655)
            (pc))) "../src/tpdes.f":85 617 {*jcc_1}
     (nil)
 -> 1655)
;;  succ:       13
;;              12 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 206

;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (RTL, MODIFIED)
;;  pred:       11 (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 206
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 206
;; lr  def 	 17 [flags] 806
(note 1636 398 399 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 399 1636 400 12 (set (reg:SF 22 xmm1 [806])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC0") [flags 0x2]) [1  S4 A32])) "../src/tpdes.f":85 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 400 399 401 12 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 21 xmm0 [orig:206 _120 ] [206])
            (reg:SF 22 xmm1 [806]))) "../src/tpdes.f":85 51 {*cmpiusf}
     (nil))
(jump_insn 401 400 1655 12 (set (pc)
        (if_then_else (uneq (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref 410)
            (pc))) "../src/tpdes.f":85 617 {*jcc_1}
     (nil)
 -> 410)
;;  succ:       14
;;              13 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 14, flags: (RTL, MODIFIED)
;;  pred:       12 (FALLTHRU)
;;              11
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 207
(code_label 1655 401 403 13 45 (nil) [1 uses])
(note 403 1655 404 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 404 403 405 13 (set (reg:SF 21 xmm0 [orig:207 pmin.59_121 ] [207])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -248 [0xffffffffffffff08])) [1 pmin+0 S4 A64])) "../src/tpdes.f":85 127 {*movsf_internal}
     (nil))
(insn 405 404 406 13 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 21 xmm0 [orig:207 pmin.59_121 ] [207])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -72 [0xffffffffffffffb8])) [1 pdes+0 S4 A32]))) "../src/tpdes.f":85 51 {*cmpiusf}
     (nil))
(jump_insn 406 405 410 13 (set (pc)
        (if_then_else (unle (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1669)
            (pc))) "../src/tpdes.f":85 617 {*jcc_1}
     (nil)
 -> 1669)
;;  succ:       14 (FALLTHRU)
;;              15
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 14, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 13, next block 15, flags: (RTL, MODIFIED)
;;  pred:       13 (FALLTHRU)
;;              12
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 580
(code_label 410 406 411 14 10 (nil) [1 uses])
(note 411 410 412 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 412 411 1670 14 (set (reg:QI 0 ax [orig:580 iftmp.58_508 ] [580])
        (const_int 1 [0x1])) "../src/tpdes.f":85 84 {*movqi_internal}
     (nil))
(jump_insn 1670 412 1671 14 (set (pc)
        (label_ref 418)) "../src/tpdes.f":85 649 {jump}
     (nil)
 -> 418)
;;  succ:       16 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 580

(barrier 1671 1670 1669)
;; basic block 15, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 14, next block 16, flags: (RTL, MODIFIED)
;;  pred:       13
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 580
(code_label 1669 1671 416 15 52 (nil) [1 uses])
(note 416 1669 417 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 417 416 418 15 (set (reg:QI 0 ax [orig:580 iftmp.58_508 ] [580])
        (const_int 0 [0])) "../src/tpdes.f":85 84 {*movqi_internal}
     (nil))
;;  succ:       16 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 580

;; basic block 16, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 15, next block 17, flags: (RTL, MODIFIED)
;;  pred:       15 (FALLTHRU)
;;              14 [100.0%] 
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 580
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 580
;; lr  def 	 17 [flags] 208
(code_label 418 417 419 16 14 (nil) [1 uses])
(note 419 418 420 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 420 419 421 16 (set (reg:SI 0 ax [orig:208 iftmp.60_122 ] [208])
        (zero_extend:SI (reg:QI 0 ax [orig:580 iftmp.58_508 ] [580]))) "../src/tpdes.f":85 136 {*zero_extendqisi2}
     (nil))
(insn 421 420 422 16 (parallel [
            (set (reg:SI 0 ax [orig:208 iftmp.60_122 ] [208])
                (and:SI (reg:SI 0 ax [orig:208 iftmp.60_122 ] [208])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/tpdes.f":85 391 {*andsi_1}
     (nil))
(insn 422 421 423 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:208 iftmp.60_122 ] [208])
            (const_int 0 [0]))) "../src/tpdes.f":85 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 423 422 424 16 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 457)
            (pc))) "../src/tpdes.f":85 617 {*jcc_1}
     (nil)
 -> 457)
;;  succ:       17 (FALLTHRU)
;;              18
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 17, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 16, next block 18, flags: (RTL, MODIFIED)
;;  pred:       16 (FALLTHRU)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 209 807 808 809 810 811 812 813 814 815 816 817
(note 424 423 425 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 425 424 426 17 (set (reg/f:DI 0 ax [807])
        (symbol_ref/f:DI ("*lC3") [flags 0x2]  <var_decl 0x143135870 *lC3>)) "../src/tpdes.f":87 81 {*movdi_internal}
     (nil))
(insn 426 425 427 17 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -792 [0xfffffffffffffce8])) [6 dt_parm.19.common.filename+0 S8 A64])
        (reg/f:DI 0 ax [807])) "../src/tpdes.f":87 81 {*movdi_internal}
     (nil))
(insn 427 426 428 17 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -784 [0xfffffffffffffcf0])) [2 dt_parm.19.common.line+0 S4 A128])
        (const_int 87 [0x57])) "../src/tpdes.f":87 82 {*movsi_internal}
     (nil))
(insn 428 427 429 17 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -800 [0xfffffffffffffce0])) [2 dt_parm.19.common.flags+0 S4 A128])
        (const_int 128 [0x80])) "../src/tpdes.f":87 82 {*movsi_internal}
     (nil))
(insn 429 428 430 17 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -796 [0xfffffffffffffce4])) [2 dt_parm.19.common.unit+0 S4 A32])
        (const_int 6 [0x6])) "../src/tpdes.f":87 82 {*movsi_internal}
     (nil))
(insn 430 429 431 17 (parallel [
            (set (reg:DI 0 ax [808])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -800 [0xfffffffffffffce0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/tpdes.f":87 218 {*adddi_1}
     (nil))
(insn 431 430 432 17 (set (reg:DI 5 di)
        (reg:DI 0 ax [808])) "../src/tpdes.f":87 81 {*movdi_internal}
     (nil))
(call_insn 432 431 433 17 (call (mem:QI (symbol_ref:DI ("_gfortran_st_write") [flags 0x41]  <function_decl 0x1427e0800 _gfortran_st_write>) [0 _gfortran_st_write S1 A8])
        (const_int 0 [0])) "../src/tpdes.f":87 655 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 433 432 434 17 (parallel [
            (set (reg:DI 0 ax [809])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -800 [0xfffffffffffffce0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/tpdes.f":87 218 {*adddi_1}
     (nil))
(insn 434 433 435 17 (set (reg:SI 1 dx)
        (const_int 38 [0x26])) "../src/tpdes.f":87 82 {*movsi_internal}
     (nil))
(insn 435 434 436 17 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*lC8") [flags 0x2]  <var_decl 0x143135990 *lC8>)) "../src/tpdes.f":87 81 {*movdi_internal}
     (nil))
(insn 436 435 437 17 (set (reg:DI 5 di)
        (reg:DI 0 ax [809])) "../src/tpdes.f":87 81 {*movdi_internal}
     (nil))
(call_insn 437 436 438 17 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_character_write") [flags 0x41]  <function_decl 0x1427d4900 _gfortran_transfer_character_write>) [0 _gfortran_transfer_character_write S1 A8])
        (const_int 0 [0])) "../src/tpdes.f":87 655 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 438 437 439 17 (parallel [
            (set (reg:DI 2 cx [810])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -248 [0xffffffffffffff08])))
            (clobber (reg:CC 17 flags))
        ]) "../src/tpdes.f":87 218 {*adddi_1}
     (nil))
(insn 439 438 440 17 (parallel [
            (set (reg:DI 0 ax [811])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -800 [0xfffffffffffffce0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/tpdes.f":87 218 {*adddi_1}
     (nil))
(insn 440 439 441 17 (set (reg:SI 1 dx)
        (const_int 4 [0x4])) "../src/tpdes.f":87 82 {*movsi_internal}
     (nil))
(insn 441 440 442 17 (set (reg:DI 4 si)
        (reg:DI 2 cx [810])) "../src/tpdes.f":87 81 {*movdi_internal}
     (nil))
(insn 442 441 443 17 (set (reg:DI 5 di)
        (reg:DI 0 ax [811])) "../src/tpdes.f":87 81 {*movdi_internal}
     (nil))
(call_insn 443 442 444 17 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_real_write") [flags 0x41]  <function_decl 0x1427d4d00 _gfortran_transfer_real_write>) [0 _gfortran_transfer_real_write S1 A8])
        (const_int 0 [0])) "../src/tpdes.f":87 655 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 444 443 445 17 (parallel [
            (set (reg:DI 0 ax [812])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -800 [0xfffffffffffffce0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/tpdes.f":87 218 {*adddi_1}
     (nil))
(insn 445 444 446 17 (set (reg:DI 5 di)
        (reg:DI 0 ax [812])) "../src/tpdes.f":87 81 {*movdi_internal}
     (nil))
(call_insn 446 445 447 17 (call (mem:QI (symbol_ref:DI ("_gfortran_st_write_done") [flags 0x41]  <function_decl 0x1427e4300 _gfortran_st_write_done>) [0 _gfortran_st_write_done S1 A8])
        (const_int 0 [0])) "../src/tpdes.f":87 655 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 447 446 448 17 (set (reg:SF 22 xmm1 [orig:209 pmin.61_123 ] [209])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -248 [0xffffffffffffff08])) [1 pmin+0 S4 A64])) "../src/tpdes.f":88 127 {*movsf_internal}
     (nil))
(insn 448 447 449 17 (set (reg:SF 21 xmm0 [814])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC5") [flags 0x2]) [1  S4 A32])) "../src/tpdes.f":88 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 9.900000095367431640625e-1 [0x0.fd70a4p+0])
        (nil)))
(insn 449 448 450 17 (set (reg:SF 21 xmm0 [813])
        (mult:SF (reg:SF 21 xmm0 [814])
            (reg:SF 22 xmm1 [orig:209 pmin.61_123 ] [209]))) "../src/tpdes.f":88 802 {*fop_sf_comm}
     (nil))
(insn 450 449 451 17 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -72 [0xffffffffffffffb8])) [1 pdes+0 S4 A32])
        (reg:SF 21 xmm0 [813])) "../src/tpdes.f":88 127 {*movsf_internal}
     (nil))
(insn 451 450 452 17 (set (reg:SF 22 xmm1 [816])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -160 [0xffffffffffffff60])) [1 dvdmin+0 S4 A32])) "../src/tpdes.f":89 127 {*movsf_internal}
     (nil))
(insn 452 451 453 17 (set (reg:SF 21 xmm0 [817])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC6") [flags 0x2]) [1  S4 A32])) "../src/tpdes.f":89 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 8.9999997615814208984375e-1 [0x0.e66666p+0])
        (nil)))
(insn 453 452 454 17 (set (reg:SF 21 xmm0 [815])
        (mult:SF (reg:SF 21 xmm0 [817])
            (reg:SF 22 xmm1 [816]))) "../src/tpdes.f":89 802 {*fop_sf_comm}
     (nil))
(insn 454 453 1672 17 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [1 dvd+0 S4 A32])
        (reg:SF 21 xmm0 [815])) "../src/tpdes.f":89 127 {*movsf_internal}
     (nil))
(jump_insn 1672 454 1673 17 (set (pc)
        (label_ref 503)) 649 {jump}
     (nil)
 -> 503)
;;  succ:       21 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1673 1672 457)
;; basic block 18, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 17, next block 19, flags: (RTL, MODIFIED)
;;  pred:       16
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 210 211 212 213 214 215 216 217 218 219 577 643 644 645 646 818 819 820 821 822 823 824 825 826 827 828 829 830 831 832
(code_label 457 1673 458 18 15 (nil) [1 uses])
(note 458 457 459 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 459 458 460 18 (set (reg/f:DI 0 ax [818])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -848 [0xfffffffffffffcb0])) [10 rad+0 S8 A64])) "../src/tpdes.f":93 81 {*movdi_internal}
     (nil))
(insn 460 459 1735 18 (set (reg:SF 21 xmm0 [orig:643 _613 ] [643])
        (mem:SF (reg/f:DI 0 ax [818]) [1 *rad_593(D)+0 S4 A32])) "../src/tpdes.f":93 127 {*movsf_internal}
     (nil))
(insn 1735 460 461 18 (set (reg:SF 22 xmm1 [orig:643 _613 ] [643])
        (reg:SF 21 xmm0 [orig:643 _613 ] [643])) "../src/tpdes.f":93 127 {*movsf_internal}
     (nil))
(insn 461 1735 462 18 (set (reg:SF 22 xmm1 [orig:643 _613 ] [643])
        (mult:SF (reg:SF 22 xmm1 [orig:643 _613 ] [643])
            (reg:SF 21 xmm0 [orig:643 _613 ] [643]))) "../src/tpdes.f":93 802 {*fop_sf_comm}
     (nil))
(insn 462 461 463 18 (set (reg/f:DI 0 ax [819])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -824 [0xfffffffffffffcc8])) [10 rho+0 S8 A64])) "../src/tpdes.f":93 81 {*movdi_internal}
     (nil))
(insn 463 462 464 18 (set (reg:SF 23 xmm2 [orig:210 _124 ] [210])
        (mem:SF (reg/f:DI 0 ax [819]) [1 *rho_609(D)+0 S4 A32])) "../src/tpdes.f":93 127 {*movsf_internal}
     (nil))
(insn 464 463 465 18 (set (reg:SF 21 xmm0 [820])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC1") [flags 0x2]) [1  S4 A32])) "../src/tpdes.f":93 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 5.0e-1 [0x0.8p+0])
        (nil)))
(insn 465 464 466 18 (set (reg:SF 21 xmm0 [orig:211 _125 ] [211])
        (mult:SF (reg:SF 21 xmm0 [820])
            (reg:SF 23 xmm2 [orig:210 _124 ] [210]))) "../src/tpdes.f":93 802 {*fop_sf_comm}
     (nil))
(insn 466 465 467 18 (set (reg:SF 23 xmm2 [orig:212 pi.62_126 ] [212])
        (mem/c:SF (symbol_ref:DI ("pi.3583") [flags 0x1c02]  <var_decl 0x1427f2120 pi>) [1 pi+0 S4 A32])) "../src/tpdes.f":93 127 {*movsf_internal}
     (nil))
(insn 467 466 468 18 (set (reg:SF 21 xmm0 [orig:213 _127 ] [213])
        (mult:SF (reg:SF 21 xmm0 [orig:211 _125 ] [211])
            (reg:SF 23 xmm2 [orig:212 pi.62_126 ] [212]))) "../src/tpdes.f":93 802 {*fop_sf_comm}
     (nil))
(insn 468 467 469 18 (set (reg:SF 21 xmm0 [orig:214 _128 ] [214])
        (mult:SF (reg:SF 21 xmm0 [orig:213 _127 ] [213])
            (reg:SF 22 xmm1 [orig:644 _614 ] [644]))) "../src/tpdes.f":93 802 {*fop_sf_comm}
     (nil))
(insn 469 468 470 18 (set (reg:SF 22 xmm1 [orig:215 _129 ] [215])
        (reg:SF 21 xmm0 [orig:214 _128 ] [214])) "../src/tpdes.f":93 127 {*movsf_internal}
     (nil))
(insn 470 469 471 18 (set (reg:SF 21 xmm0 [822])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -72 [0xffffffffffffffb8])) [1 pdes+0 S4 A32])) "../src/tpdes.f":93 127 {*movsf_internal}
     (nil))
(insn 471 470 472 18 (set (reg:SF 21 xmm0 [821])
        (div:SF (reg:SF 21 xmm0 [822])
            (reg:SF 22 xmm1 [orig:215 _129 ] [215]))) "../src/tpdes.f":93 805 {*fop_sf_1}
     (nil))
(insn 472 471 473 18 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -164 [0xffffffffffffff5c])) [1 vp3+0 S4 A32])
        (reg:SF 21 xmm0 [821])) "../src/tpdes.f":93 127 {*movsf_internal}
     (nil))
(insn 473 472 474 18 (set (reg:SF 22 xmm1 [823])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -164 [0xffffffffffffff5c])) [1 vp3+0 S4 A32])) "../src/tpdes.f":94 127 {*movsf_internal}
     (nil))
(insn 474 473 475 18 (set (reg:V4SF 21 xmm0 [824])
        (mem/u/c:V4SF (symbol_ref/u:DI ("*lC9") [flags 0x2]) [1  S16 A128])) "../src/tpdes.f":94 1225 {movv4sf_internal}
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF +QNaN [+QNaN])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 475 474 476 18 (parallel [
            (set (reg:SF 21 xmm0 [orig:645 _616 ] [645])
                (abs:SF (reg:SF 22 xmm1 [823])))
            (use (reg:V4SF 21 xmm0 [824]))
            (clobber (reg:CC 17 flags))
        ]) "../src/tpdes.f":94 470 {*absnegsf2}
     (expr_list:REG_EQUAL (abs:SF (reg:SF 22 xmm1 [823]))
        (nil)))
(insn 476 475 478 18 (set (reg:SF 22 xmm1)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC10") [flags 0x2]) [1  S4 A32])) "../src/tpdes.f":94 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 3.333333432674407958984375e-1 [0x0.aaaaabp-1])
        (nil)))
(call_insn/u 478 476 479 18 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("powf") [flags 0x41]  <function_decl 0x142648100 __builtin_powf>) [0 __builtin_powf S1 A8])
            (const_int 0 [0]))) "../src/tpdes.f":94 665 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (expr_list:SF (use (reg:SF 22 xmm1))
            (nil))))
(insn 479 478 480 18 (set (reg:SF 0 ax [825])
        (reg:SF 21 xmm0)) "../src/tpdes.f":94 127 {*movsf_internal}
     (nil))
(insn 480 479 481 18 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [1 dvda+0 S4 A32])
        (reg:SF 0 ax [825])) "../src/tpdes.f":94 127 {*movsf_internal}
     (nil))
(insn 481 480 482 18 (set (reg:SF 23 xmm2 [827])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [1 dvda+0 S4 A32])) "../src/tpdes.f":95 127 {*movsf_internal}
     (nil))
(insn 482 481 483 18 (set (reg:SF 24 xmm3 [828])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -164 [0xffffffffffffff5c])) [1 vp3+0 S4 A32])) "../src/tpdes.f":95 127 {*movsf_internal}
     (nil))
(insn 483 482 484 18 (set (reg:V4SF 21 xmm0 [829])
        (mem/u/c:V4SF (symbol_ref/u:DI ("*lC9") [flags 0x2]) [1  S16 A128])) "../src/tpdes.f":95 1225 {movv4sf_internal}
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF +QNaN [+QNaN])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 484 483 1738 18 (set (reg:V4SF 22 xmm1 [830])
        (mem/u/c:V4SF (symbol_ref/u:DI ("*lC2") [flags 0x2]) [1  S16 A128])) "../src/tpdes.f":95 1225 {movv4sf_internal}
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF -0.0 [-0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 1738 484 485 18 (set (reg:SF 25 xmm4 [1095])
        (reg:SF 24 xmm3 [828])) "../src/tpdes.f":95 127 {*movsf_internal}
     (nil))
(insn 485 1738 486 18 (parallel [
            (set (reg:SF 21 xmm0 [826])
                (unspec:SF [
                        (reg:SF 23 xmm2 [827])
                        (reg:SF 25 xmm4 [1095])
                        (reg:V4SF 21 xmm0 [829])
                        (reg:V4SF 22 xmm1 [830])
                    ] UNSPEC_COPYSIGN))
            (clobber (reg:V4SF 25 xmm4 [1095]))
        ]) "../src/tpdes.f":95 489 {copysignsf3_var}
     (nil))
(insn 486 485 487 18 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [1 dvd+0 S4 A32])
        (reg:SF 21 xmm0 [826])) "../src/tpdes.f":95 127 {*movsf_internal}
     (nil))
(insn 487 486 488 18 (set (reg:SF 21 xmm0 [orig:577 M.20_505 ] [577])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [1 dvd+0 S4 A32])) "../src/tpdes.f":97 127 {*movsf_internal}
     (nil))
(insn 488 487 489 18 (set (reg:SF 23 xmm2 [831])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -172 [0xffffffffffffff54])) [1 dvd0+0 S4 A32])) "../src/tpdes.f":97 127 {*movsf_internal}
     (nil))
(insn 489 488 490 18 (set (reg:SF 22 xmm1 [832])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC11") [flags 0x2]) [1  S4 A32])) "../src/tpdes.f":97 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.00000001490116119384765625e-1 [0x0.cccccdp-3])
        (nil)))
(insn 490 489 491 18 (set (reg:SF 22 xmm1 [orig:216 _130 ] [216])
        (mult:SF (reg:SF 22 xmm1 [832])
            (reg:SF 23 xmm2 [831]))) "../src/tpdes.f":97 802 {*fop_sf_comm}
     (nil))
(insn 491 490 492 18 (set (reg:SF 22 xmm1 [orig:646 _621 ] [646])
        (plus:SF (reg:SF 22 xmm1 [orig:216 _130 ] [216])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -160 [0xffffffffffffff60])) [1 dvdmin+0 S4 A32]))) "../src/tpdes.f":97 802 {*fop_sf_comm}
     (nil))
(insn 492 491 493 18 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 22 xmm1 [orig:646 _621 ] [646])
            (reg:SF 21 xmm0 [orig:577 M.20_505 ] [577]))) "../src/tpdes.f":97 51 {*cmpiusf}
     (nil))
(insn 493 492 494 18 (set (reg:QI 1 dx [orig:217 _131 ] [217])
        (gt:QI (reg:CCFPU 17 flags)
            (const_int 0 [0]))) "../src/tpdes.f":97 613 {*setcc_qi}
     (nil))
(insn 494 493 495 18 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 21 xmm0 [orig:577 M.20_505 ] [577])
            (reg:SF 21 xmm0 [orig:577 M.20_505 ] [577]))) "../src/tpdes.f":97 51 {*cmpiusf}
     (nil))
(insn 495 494 496 18 (set (reg:QI 0 ax [orig:218 _132 ] [218])
        (unordered:QI (reg:CCFPU 17 flags)
            (const_int 0 [0]))) "../src/tpdes.f":97 613 {*setcc_qi}
     (nil))
(insn 496 495 497 18 (parallel [
            (set (reg:QI 0 ax [orig:219 _133 ] [219])
                (ior:QI (reg:QI 0 ax [orig:218 _132 ] [218])
                    (reg:QI 1 dx [orig:217 _131 ] [217])))
            (clobber (reg:CC 17 flags))
        ]) "../src/tpdes.f":97 423 {*iorqi_1}
     (nil))
(insn 497 496 498 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:219 _133 ] [219])
            (const_int 0 [0]))) "../src/tpdes.f":97 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 498 497 499 18 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 500)
            (pc))) "../src/tpdes.f":97 617 {*jcc_1}
     (nil)
 -> 500)
;;  succ:       19 (FALLTHRU)
;;              20
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 577 646

;; basic block 19, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 18, next block 20, flags: (RTL, MODIFIED)
;;  pred:       18 (FALLTHRU)
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 646
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 646
;; lr  def 	 577
(note 499 498 9 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 9 499 500 19 (set (reg:SF 21 xmm0 [orig:577 M.20_505 ] [577])
        (reg:SF 22 xmm1 [orig:646 _621 ] [646])) "../src/tpdes.f":97 127 {*movsf_internal}
     (nil))
;;  succ:       20 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 577

;; basic block 20, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 19, next block 21, flags: (RTL, MODIFIED)
;;  pred:       18
;;              19 (FALLTHRU)
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 577
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 577
;; lr  def 	
(code_label 500 9 501 20 17 (nil) [1 uses])
(note 501 500 502 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 502 501 503 20 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [1 dvd+0 S4 A32])
        (reg:SF 21 xmm0 [orig:577 M.20_505 ] [577])) "../src/tpdes.f":97 127 {*movsf_internal}
     (nil))
;;  succ:       21 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 21, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 20, next block 22, flags: (RTL, MODIFIED)
;;  pred:       20 (FALLTHRU)
;;              17 [100.0%] 
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 833 834 835
(code_label 503 502 504 21 16 (nil) [1 uses])
(note 504 503 505 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 505 504 506 21 (set (reg:SF 22 xmm1 [834])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [1 dvd+0 S4 A32])) "../src/tpdes.f":100 127 {*movsf_internal}
     (nil))
(insn 506 505 507 21 (set (reg:V4SF 21 xmm0 [835])
        (mem/u/c:V4SF (symbol_ref/u:DI ("*lC9") [flags 0x2]) [1  S16 A128])) "../src/tpdes.f":100 1225 {movv4sf_internal}
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF +QNaN [+QNaN])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 507 506 508 21 (parallel [
            (set (reg:SF 21 xmm0 [833])
                (abs:SF (reg:SF 22 xmm1 [834])))
            (use (reg:V4SF 21 xmm0 [835]))
            (clobber (reg:CC 17 flags))
        ]) "../src/tpdes.f":100 470 {*absnegsf2}
     (expr_list:REG_EQUAL (abs:SF (reg:SF 22 xmm1 [834]))
        (nil)))
(insn 508 507 509 21 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -172 [0xffffffffffffff54])) [1 dvd0+0 S4 A32])
        (reg:SF 21 xmm0 [833])) "../src/tpdes.f":100 127 {*movsf_internal}
     (nil))
(insn 509 508 666 21 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -68 [0xffffffffffffffbc])) [2 iter+0 S4 A32])
        (const_int 1 [0x1])) "../src/tpdes.f":103 82 {*movsi_internal}
     (nil))
;;  succ:       22 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 22, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 21, next block 23, flags: (RTL, MODIFIED)
;;  pred:       21 (FALLTHRU)
;;              33 [100.0%] 
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 647
(code_label 666 509 510 22 26 (nil) [1 uses])
(note 510 666 511 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 511 510 512 22 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -68 [0xffffffffffffffbc])) [2 iter+0 S4 A32])
            (const_int 20 [0x14]))) "../src/tpdes.f":103 7 {*cmpsi_1}
     (nil))
(insn 512 511 513 22 (set (reg:QI 0 ax [orig:647 _637 ] [647])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "../src/tpdes.f":103 613 {*setcc_qi}
     (nil))
(insn 513 512 514 22 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:647 _637 ] [647])
            (const_int 0 [0]))) "../src/tpdes.f":103 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 514 513 515 22 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1693)
            (pc))) "../src/tpdes.f":103 617 {*jcc_1}
     (nil)
 -> 1693)
;;  succ:       59
;;              23 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 23, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 22, next block 24, flags: (RTL, MODIFIED)
;;  pred:       22 (FALLTHRU)
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 648 649 650 651 652 653 654 836 837 838 839 840 841 842 843 844 845 846 847 848 849 850 851 852
(note 515 514 516 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 516 515 517 23 (set (reg:SF 0 ax [orig:648 _638 ] [648])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [1 dvd+0 S4 A32])) "../src/tpdes.f":107 127 {*movsf_internal}
     (nil))
(insn 517 516 518 23 (set (reg:SF 21 xmm0 [orig:649 _639 ] [649])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [1 dvd+0 S4 A32])) "../src/tpdes.f":107 127 {*movsf_internal}
     (nil))
(insn 518 517 1740 23 (set (reg:SF 21 xmm0 [orig:649 _639 ] [649])
        (mult:SF (reg:SF 21 xmm0 [orig:649 _639 ] [649])
            (reg:SF 21 xmm0 [orig:649 _639 ] [649]))) "../src/tpdes.f":107 802 {*fop_sf_comm}
     (nil))
(insn 1740 518 1835 23 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -864 [0xfffffffffffffca0])) [14 %sfp+-816 S4 A128])
        (reg:SF 21 xmm0 [orig:649 _639 ] [649])) "../src/tpdes.f":107 127 {*movsf_internal}
     (nil))
(note 1835 1740 1810 23 NOTE_INSN_DELETED)
(note 1810 1835 519 23 NOTE_INSN_DELETED)
(insn 519 1810 520 23 (set (reg/f:DI 1 dx [836])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -848 [0xfffffffffffffcb0])) [10 rad+0 S8 A64])) "../src/tpdes.f":107 81 {*movdi_internal}
     (nil))
(insn 520 519 1741 23 (set (reg:SF 21 xmm0 [orig:651 _641 ] [651])
        (mem:SF (reg/f:DI 1 dx [836]) [1 *rad_593(D)+0 S4 A32])) "../src/tpdes.f":107 127 {*movsf_internal}
     (nil))
(insn 1741 520 521 23 (set (reg:SF 26 xmm5 [orig:651 _641 ] [651])
        (reg:SF 21 xmm0 [orig:651 _641 ] [651])) "../src/tpdes.f":107 127 {*movsf_internal}
     (nil))
(insn 521 1741 1742 23 (set (reg:SF 26 xmm5 [orig:651 _641 ] [651])
        (mult:SF (reg:SF 26 xmm5 [orig:651 _641 ] [651])
            (reg:SF 21 xmm0 [orig:651 _641 ] [651]))) "../src/tpdes.f":107 802 {*fop_sf_comm}
     (nil))
(insn 1742 521 1834 23 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -880 [0xfffffffffffffc90])) [14 %sfp+-832 S4 A128])
        (reg:SF 26 xmm5 [orig:651 _641 ] [651])) "../src/tpdes.f":107 127 {*movsf_internal}
     (nil))
(note 1834 1742 1809 23 NOTE_INSN_DELETED)
(note 1809 1834 522 23 NOTE_INSN_DELETED)
(insn 522 1809 523 23 (set (reg:SI 5 di)
        (const_int 3 [0x3])) "../src/tpdes.f":107 82 {*movsi_internal}
     (nil))
(insn 523 522 524 23 (set (reg:SF 21 xmm0)
        (reg:SF 0 ax [orig:648 _638 ] [648])) "../src/tpdes.f":107 127 {*movsf_internal}
     (nil))
(call_insn/u 524 523 525 23 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("__powisf2") [flags 0x41]) [0  S1 A8])
            (const_int 0 [0]))) "../src/tpdes.f":107 665 {*call_value}
     (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
        (nil))
    (expr_list (use (reg:SI 5 di))
        (expr_list (use (reg:SF 21 xmm0))
            (nil))))
(insn 525 524 526 23 (set (reg:SF 22 xmm1 [orig:220 _134 ] [220])
        (reg:SF 21 xmm0)) "../src/tpdes.f":107 127 {*movsf_internal}
     (nil))
(insn 526 525 527 23 (set (reg/f:DI 0 ax [837])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -832 [0xfffffffffffffcc0])) [10 vel+0 S8 A64])) "../src/tpdes.f":107 81 {*movdi_internal}
     (nil))
(insn 527 526 528 23 (set (reg:SF 21 xmm0 [orig:221 _135 ] [221])
        (mem:SF (reg/f:DI 0 ax [837]) [1 *vel_598(D)+0 S4 A32])) "../src/tpdes.f":107 127 {*movsf_internal}
     (nil))
(insn 528 527 529 23 (set (reg:SF 21 xmm0 [orig:222 _136 ] [222])
        (plus:SF (reg:SF 21 xmm0 [orig:221 _135 ] [221])
            (reg:SF 21 xmm0 [orig:221 _135 ] [221]))) "../src/tpdes.f":107 802 {*fop_sf_comm}
     (nil))
(insn 529 528 1743 23 (set (reg:SF 21 xmm0 [orig:223 _137 ] [223])
        (plus:SF (reg:SF 21 xmm0 [orig:222 _136 ] [222])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -156 [0xffffffffffffff64])) [1 vvis+0 S4 A32]))) "../src/tpdes.f":107 802 {*fop_sf_comm}
     (nil))
(note 1743 529 1829 23 NOTE_INSN_DELETED)
(note 1829 1743 531 23 NOTE_INSN_DELETED)
(insn 531 1829 532 23 (set (reg:SF 21 xmm0 [orig:225 _139 ] [225])
        (mult:SF (reg:SF 21 xmm0 [orig:224 _138 ] [224])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -864 [0xfffffffffffffca0])) [14 %sfp+-816 S4 A128]))) "../src/tpdes.f":107 802 {*fop_sf_comm}
     (nil))
(insn 532 531 533 23 (set (reg:SF 22 xmm1 [orig:226 _140 ] [226])
        (plus:SF (reg:SF 22 xmm1 [orig:220 _134 ] [220])
            (reg:SF 21 xmm0 [orig:225 _139 ] [225]))) "../src/tpdes.f":107 802 {*fop_sf_comm}
     (nil))
(insn 533 532 534 23 (set (reg/f:DI 0 ax [838])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -832 [0xfffffffffffffcc0])) [10 vel+0 S8 A64])) "../src/tpdes.f":107 81 {*movdi_internal}
     (nil))
(insn 534 533 535 23 (set (reg:SF 23 xmm2 [orig:227 _141 ] [227])
        (mem:SF (reg/f:DI 0 ax [838]) [1 *vel_598(D)+0 S4 A32])) "../src/tpdes.f":107 127 {*movsf_internal}
     (nil))
(insn 535 534 536 23 (set (reg/f:DI 0 ax [839])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -832 [0xfffffffffffffcc0])) [10 vel+0 S8 A64])) "../src/tpdes.f":107 81 {*movdi_internal}
     (nil))
(insn 536 535 537 23 (set (reg:SF 21 xmm0 [orig:228 _142 ] [228])
        (mem:SF (reg/f:DI 0 ax [839]) [1 *vel_598(D)+0 S4 A32])) "../src/tpdes.f":107 127 {*movsf_internal}
     (nil))
(insn 537 536 539 23 (set (reg:SF 21 xmm0 [orig:229 _143 ] [229])
        (plus:SF (reg:SF 21 xmm0 [orig:228 _142 ] [228])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -156 [0xffffffffffffff64])) [1 vvis+0 S4 A32]))) "../src/tpdes.f":107 802 {*fop_sf_comm}
     (nil))
(insn 539 537 540 23 (set (reg:SF 21 xmm0 [orig:231 _145 ] [231])
        (mult:SF (reg:SF 21 xmm0 [orig:230 _144 ] [230])
            (reg:SF 23 xmm2 [orig:227 _141 ] [227]))) "../src/tpdes.f":107 802 {*fop_sf_comm}
     (nil))
(insn 540 539 541 23 (set (reg:SF 21 xmm0 [orig:232 _146 ] [232])
        (mult:SF (reg:SF 21 xmm0 [orig:231 _145 ] [231])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -56 [0xffffffffffffffc8])) [1 dvd+0 S4 A32]))) "../src/tpdes.f":107 802 {*fop_sf_comm}
     (nil))
(insn 541 540 542 23 (set (reg:SF 21 xmm0 [orig:233 _147 ] [233])
        (plus:SF (reg:SF 21 xmm0 [orig:232 _146 ] [232])
            (reg:SF 22 xmm1 [orig:226 _140 ] [226]))) "../src/tpdes.f":107 802 {*fop_sf_comm}
     (nil))
(insn 542 541 543 23 (set (reg:SF 23 xmm2 [840])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -72 [0xffffffffffffffb8])) [1 pdes+0 S4 A32])) "../src/tpdes.f":107 127 {*movsf_internal}
     (nil))
(insn 543 542 544 23 (set (reg:SF 22 xmm1 [841])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC12") [flags 0x2]) [1  S4 A32])) "../src/tpdes.f":107 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 2.5e-1 [0x0.8p-1])
        (nil)))
(insn 544 543 545 23 (set (reg:SF 22 xmm1 [orig:234 _148 ] [234])
        (mult:SF (reg:SF 22 xmm1 [841])
            (reg:SF 23 xmm2 [840]))) "../src/tpdes.f":107 802 {*fop_sf_comm}
     (nil))
(insn 545 544 546 23 (set (reg/f:DI 0 ax [842])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -824 [0xfffffffffffffcc8])) [10 rho+0 S8 A64])) "../src/tpdes.f":107 81 {*movdi_internal}
     (nil))
(insn 546 545 547 23 (set (reg:SF 24 xmm3 [orig:235 _149 ] [235])
        (mem:SF (reg/f:DI 0 ax [842]) [1 *rho_609(D)+0 S4 A32])) "../src/tpdes.f":107 127 {*movsf_internal}
     (nil))
(insn 547 546 548 23 (set (reg:SF 23 xmm2 [843])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC1") [flags 0x2]) [1  S4 A32])) "../src/tpdes.f":107 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 5.0e-1 [0x0.8p+0])
        (nil)))
(insn 548 547 549 23 (set (reg:SF 23 xmm2 [orig:236 _150 ] [236])
        (mult:SF (reg:SF 23 xmm2 [843])
            (reg:SF 24 xmm3 [orig:235 _149 ] [235]))) "../src/tpdes.f":107 802 {*fop_sf_comm}
     (nil))
(insn 549 548 550 23 (set (reg:SF 24 xmm3 [orig:237 pi.63_151 ] [237])
        (mem/c:SF (symbol_ref:DI ("pi.3583") [flags 0x1c02]  <var_decl 0x1427f2120 pi>) [1 pi+0 S4 A32])) "../src/tpdes.f":107 127 {*movsf_internal}
     (nil))
(insn 550 549 1744 23 (set (reg:SF 23 xmm2 [orig:238 _152 ] [238])
        (mult:SF (reg:SF 23 xmm2 [orig:236 _150 ] [236])
            (reg:SF 24 xmm3 [orig:237 pi.63_151 ] [237]))) "../src/tpdes.f":107 802 {*fop_sf_comm}
     (nil))
(note 1744 550 1828 23 NOTE_INSN_DELETED)
(note 1828 1744 551 23 NOTE_INSN_DELETED)
(insn 551 1828 553 23 (set (reg:SF 23 xmm2 [orig:239 _153 ] [239])
        (mult:SF (reg:SF 23 xmm2 [orig:238 _152 ] [238])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -880 [0xfffffffffffffc90])) [14 %sfp+-832 S4 A128]))) "../src/tpdes.f":107 802 {*fop_sf_comm}
     (nil))
(insn 553 551 554 23 (set (reg:SF 22 xmm1 [orig:241 _155 ] [241])
        (div:SF (reg:SF 22 xmm1 [orig:234 _148 ] [234])
            (reg:SF 23 xmm2 [orig:240 _154 ] [240]))) "../src/tpdes.f":107 805 {*fop_sf_1}
     (nil))
(insn 554 553 555 23 (set (reg:SF 21 xmm0 [844])
        (minus:SF (reg:SF 21 xmm0 [orig:233 _147 ] [233])
            (reg:SF 22 xmm1 [orig:241 _155 ] [241]))) "../src/tpdes.f":107 805 {*fop_sf_1}
     (nil))
(insn 555 554 556 23 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -176 [0xffffffffffffff50])) [1 res+0 S4 A32])
        (reg:SF 21 xmm0 [844])) "../src/tpdes.f":107 127 {*movsf_internal}
     (nil))
(insn 556 555 557 23 (set (reg:SF 21 xmm0 [orig:653 _644 ] [653])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [1 dvd+0 S4 A32])) "../src/tpdes.f":110 127 {*movsf_internal}
     (nil))
(insn 557 556 558 23 (set (reg:SF 21 xmm0 [orig:654 _645 ] [654])
        (mult:SF (reg:SF 21 xmm0 [orig:653 _644 ] [653])
            (reg:SF 21 xmm0 [orig:653 _644 ] [653]))) "../src/tpdes.f":110 802 {*fop_sf_comm}
     (nil))
(insn 558 557 559 23 (set (reg:SF 22 xmm1 [845])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC13") [flags 0x2]) [1  S4 A32])) "../src/tpdes.f":110 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 3.0e+0 [0x0.cp+2])
        (nil)))
(insn 559 558 560 23 (set (reg:SF 22 xmm1 [orig:242 _156 ] [242])
        (mult:SF (reg:SF 22 xmm1 [845])
            (reg:SF 21 xmm0 [orig:654 _645 ] [654]))) "../src/tpdes.f":110 802 {*fop_sf_comm}
     (nil))
(insn 560 559 561 23 (set (reg/f:DI 0 ax [846])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -832 [0xfffffffffffffcc0])) [10 vel+0 S8 A64])) "../src/tpdes.f":110 81 {*movdi_internal}
     (nil))
(insn 561 560 562 23 (set (reg:SF 21 xmm0 [orig:243 _157 ] [243])
        (mem:SF (reg/f:DI 0 ax [846]) [1 *vel_598(D)+0 S4 A32])) "../src/tpdes.f":110 127 {*movsf_internal}
     (nil))
(insn 562 561 563 23 (set (reg:SF 21 xmm0 [orig:244 _158 ] [244])
        (plus:SF (reg:SF 21 xmm0 [orig:243 _157 ] [243])
            (reg:SF 21 xmm0 [orig:243 _157 ] [243]))) "../src/tpdes.f":110 802 {*fop_sf_comm}
     (nil))
(insn 563 562 565 23 (set (reg:SF 21 xmm0 [orig:245 _159 ] [245])
        (plus:SF (reg:SF 21 xmm0 [orig:244 _158 ] [244])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -156 [0xffffffffffffff64])) [1 vvis+0 S4 A32]))) "../src/tpdes.f":110 802 {*fop_sf_comm}
     (nil))
(insn 565 563 566 23 (set (reg:SF 21 xmm0 [orig:247 _161 ] [247])
        (mult:SF (reg:SF 21 xmm0 [orig:246 _160 ] [246])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -56 [0xffffffffffffffc8])) [1 dvd+0 S4 A32]))) "../src/tpdes.f":110 802 {*fop_sf_comm}
     (nil))
(insn 566 565 567 23 (set (reg:SF 21 xmm0 [orig:248 _162 ] [248])
        (plus:SF (reg:SF 21 xmm0 [orig:247 _161 ] [247])
            (reg:SF 21 xmm0 [orig:247 _161 ] [247]))) "../src/tpdes.f":110 802 {*fop_sf_comm}
     (nil))
(insn 567 566 568 23 (set (reg:SF 22 xmm1 [orig:249 _163 ] [249])
        (plus:SF (reg:SF 22 xmm1 [orig:242 _156 ] [242])
            (reg:SF 21 xmm0 [orig:248 _162 ] [248]))) "../src/tpdes.f":110 802 {*fop_sf_comm}
     (nil))
(insn 568 567 569 23 (set (reg/f:DI 0 ax [847])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -832 [0xfffffffffffffcc0])) [10 vel+0 S8 A64])) "../src/tpdes.f":110 81 {*movdi_internal}
     (nil))
(insn 569 568 570 23 (set (reg:SF 23 xmm2 [orig:250 _164 ] [250])
        (mem:SF (reg/f:DI 0 ax [847]) [1 *vel_598(D)+0 S4 A32])) "../src/tpdes.f":110 127 {*movsf_internal}
     (nil))
(insn 570 569 571 23 (set (reg/f:DI 0 ax [848])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -832 [0xfffffffffffffcc0])) [10 vel+0 S8 A64])) "../src/tpdes.f":110 81 {*movdi_internal}
     (nil))
(insn 571 570 572 23 (set (reg:SF 21 xmm0 [orig:251 _165 ] [251])
        (mem:SF (reg/f:DI 0 ax [848]) [1 *vel_598(D)+0 S4 A32])) "../src/tpdes.f":110 127 {*movsf_internal}
     (nil))
(insn 572 571 574 23 (set (reg:SF 21 xmm0 [orig:252 _166 ] [252])
        (plus:SF (reg:SF 21 xmm0 [orig:251 _165 ] [251])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -156 [0xffffffffffffff64])) [1 vvis+0 S4 A32]))) "../src/tpdes.f":110 802 {*fop_sf_comm}
     (nil))
(insn 574 572 575 23 (set (reg:SF 21 xmm0 [orig:254 _168 ] [254])
        (mult:SF (reg:SF 21 xmm0 [orig:253 _167 ] [253])
            (reg:SF 23 xmm2 [orig:250 _164 ] [250]))) "../src/tpdes.f":110 802 {*fop_sf_comm}
     (nil))
(insn 575 574 576 23 (set (reg:SF 21 xmm0 [849])
        (plus:SF (reg:SF 21 xmm0 [orig:254 _168 ] [254])
            (reg:SF 22 xmm1 [orig:249 _163 ] [249]))) "../src/tpdes.f":110 802 {*fop_sf_comm}
     (nil))
(insn 576 575 577 23 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -180 [0xffffffffffffff4c])) [1 res_dvd+0 S4 A32])
        (reg:SF 21 xmm0 [849])) "../src/tpdes.f":110 127 {*movsf_internal}
     (nil))
(insn 577 576 578 23 (set (reg:SF 21 xmm0 [850])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -176 [0xffffffffffffff50])) [1 res+0 S4 A32])) "../src/tpdes.f":112 127 {*movsf_internal}
     (nil))
(insn 578 577 579 23 (set (reg:SF 21 xmm0 [orig:255 _169 ] [255])
        (div:SF (reg:SF 21 xmm0 [850])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -180 [0xffffffffffffff4c])) [1 res_dvd+0 S4 A32]))) "../src/tpdes.f":112 805 {*fop_sf_1}
     (nil))
(insn 579 578 580 23 (set (reg:V4SF 22 xmm1 [851])
        (mem/u/c:V4SF (symbol_ref/u:DI ("*lC2") [flags 0x2]) [1  S16 A128])) "../src/tpdes.f":112 1225 {movv4sf_internal}
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF -0.0 [-0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 580 579 581 23 (parallel [
            (set (reg:SF 21 xmm0 [orig:256 _170 ] [256])
                (neg:SF (reg:SF 21 xmm0 [orig:255 _169 ] [255])))
            (use (reg:V4SF 22 xmm1 [851]))
            (clobber (reg:CC 17 flags))
        ]) "../src/tpdes.f":112 470 {*absnegsf2}
     (expr_list:REG_EQUAL (neg:SF (reg:SF 21 xmm0 [orig:255 _169 ] [255]))
        (nil)))
(insn 581 580 582 23 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -224 [0xffffffffffffff20])) [1 del+0 S4 A128])
        (reg:SF 21 xmm0 [orig:256 _170 ] [256])) "../src/tpdes.f":112 127 {*movsf_internal}
     (nil))
(insn 582 581 583 23 (set (reg:SF 21 xmm0 [852])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [1 dvd+0 S4 A32])) "../src/tpdes.f":116 127 {*movsf_internal}
     (nil))
(insn 583 582 584 23 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 21 xmm0 [852])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -160 [0xffffffffffffff60])) [1 dvdmin+0 S4 A32]))) "../src/tpdes.f":116 51 {*cmpiusf}
     (nil))
(jump_insn 584 583 1640 23 (set (pc)
        (if_then_else (unordered (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref 603)
            (pc))) "../src/tpdes.f":116 617 {*jcc_1}
     (nil)
 -> 603)
;;  succ:       27
;;              24 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 24, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 23, next block 25, flags: (RTL, MODIFIED)
;;  pred:       23 (FALLTHRU)
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 853
(note 1640 584 585 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 585 1640 586 24 (set (reg:SF 21 xmm0 [853])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [1 dvd+0 S4 A32])) "../src/tpdes.f":116 127 {*movsf_internal}
     (nil))
(insn 586 585 587 24 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 21 xmm0 [853])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -160 [0xffffffffffffff60])) [1 dvdmin+0 S4 A32]))) "../src/tpdes.f":116 51 {*cmpiusf}
     (nil))
(jump_insn 587 586 591 24 (set (pc)
        (if_then_else (ltgt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 603)
            (pc))) "../src/tpdes.f":116 617 {*jcc_1}
     (nil)
 -> 603)
;;  succ:       25 (FALLTHRU)
;;              27
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 25, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 24, next block 26, flags: (RTL, MODIFIED)
;;  pred:       24 (FALLTHRU)
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 257 854
(note 591 587 592 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 592 591 593 25 (set (reg:SF 22 xmm1 [orig:257 del.65_171 ] [257])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -224 [0xffffffffffffff20])) [1 del+0 S4 A128])) "../src/tpdes.f":116 127 {*movsf_internal}
     (nil))
(insn 593 592 594 25 (set (reg:SF 21 xmm0 [854])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC0") [flags 0x2]) [1  S4 A32])) "../src/tpdes.f":116 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 594 593 595 25 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 21 xmm0 [854])
            (reg:SF 22 xmm1 [orig:257 del.65_171 ] [257]))) "../src/tpdes.f":116 51 {*cmpiusf}
     (nil))
(jump_insn 595 594 599 25 (set (pc)
        (if_then_else (unle (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 603)
            (pc))) "../src/tpdes.f":116 617 {*jcc_1}
     (nil)
 -> 603)
;;  succ:       26 (FALLTHRU)
;;              27
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 26, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 25, next block 27, flags: (RTL, MODIFIED)
;;  pred:       25 (FALLTHRU)
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 581
(note 599 595 600 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 600 599 1674 26 (set (reg:QI 0 ax [orig:581 iftmp.64_509 ] [581])
        (const_int 1 [0x1])) "../src/tpdes.f":116 84 {*movqi_internal}
     (nil))
(jump_insn 1674 600 1675 26 (set (pc)
        (label_ref 606)) "../src/tpdes.f":116 649 {jump}
     (nil)
 -> 606)
;;  succ:       28 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 581

(barrier 1675 1674 603)
;; basic block 27, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 26, next block 28, flags: (RTL, MODIFIED)
;;  pred:       23
;;              24
;;              25
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 581
(code_label 603 1675 604 27 19 (nil) [3 uses])
(note 604 603 605 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 605 604 606 27 (set (reg:QI 0 ax [orig:581 iftmp.64_509 ] [581])
        (const_int 0 [0])) "../src/tpdes.f":116 84 {*movqi_internal}
     (nil))
;;  succ:       28 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 581

;; basic block 28, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 27, next block 29, flags: (RTL, MODIFIED)
;;  pred:       27 (FALLTHRU)
;;              26 [100.0%] 
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 581
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 581
;; lr  def 	 17 [flags] 258
(code_label 606 605 607 28 22 (nil) [1 uses])
(note 607 606 608 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 608 607 609 28 (set (reg:SI 0 ax [orig:258 iftmp.66_172 ] [258])
        (zero_extend:SI (reg:QI 0 ax [orig:581 iftmp.64_509 ] [581]))) "../src/tpdes.f":116 136 {*zero_extendqisi2}
     (nil))
(insn 609 608 610 28 (parallel [
            (set (reg:SI 0 ax [orig:258 iftmp.66_172 ] [258])
                (and:SI (reg:SI 0 ax [orig:258 iftmp.66_172 ] [258])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/tpdes.f":116 391 {*andsi_1}
     (nil))
(insn 610 609 611 28 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:258 iftmp.66_172 ] [258])
            (const_int 0 [0]))) "../src/tpdes.f":116 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 611 610 612 28 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 637)
            (pc))) "../src/tpdes.f":116 617 {*jcc_1}
     (nil)
 -> 637)
;;  succ:       29 (FALLTHRU)
;;              30
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 29, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 28, next block 30, flags: (RTL, MODIFIED)
;;  pred:       28 (FALLTHRU)
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 855 856 857 858 859 860
(note 612 611 613 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 613 612 614 29 (set (reg/f:DI 0 ax [855])
        (symbol_ref/f:DI ("*lC3") [flags 0x2]  <var_decl 0x143135870 *lC3>)) "../src/tpdes.f":117 81 {*movdi_internal}
     (nil))
(insn 614 613 615 29 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -792 [0xfffffffffffffce8])) [6 dt_parm.21.common.filename+0 S8 A64])
        (reg/f:DI 0 ax [855])) "../src/tpdes.f":117 81 {*movdi_internal}
     (nil))
(insn 615 614 616 29 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -784 [0xfffffffffffffcf0])) [2 dt_parm.21.common.line+0 S4 A128])
        (const_int 117 [0x75])) "../src/tpdes.f":117 82 {*movsi_internal}
     (nil))
(insn 616 615 617 29 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -800 [0xfffffffffffffce0])) [2 dt_parm.21.common.flags+0 S4 A128])
        (const_int 128 [0x80])) "../src/tpdes.f":117 82 {*movsi_internal}
     (nil))
(insn 617 616 618 29 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -796 [0xfffffffffffffce4])) [2 dt_parm.21.common.unit+0 S4 A32])
        (const_int 6 [0x6])) "../src/tpdes.f":117 82 {*movsi_internal}
     (nil))
(insn 618 617 619 29 (parallel [
            (set (reg:DI 0 ax [856])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -800 [0xfffffffffffffce0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/tpdes.f":117 218 {*adddi_1}
     (nil))
(insn 619 618 620 29 (set (reg:DI 5 di)
        (reg:DI 0 ax [856])) "../src/tpdes.f":117 81 {*movdi_internal}
     (nil))
(call_insn 620 619 621 29 (call (mem:QI (symbol_ref:DI ("_gfortran_st_write") [flags 0x41]  <function_decl 0x1427e0800 _gfortran_st_write>) [0 _gfortran_st_write S1 A8])
        (const_int 0 [0])) "../src/tpdes.f":117 655 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 621 620 622 29 (parallel [
            (set (reg:DI 0 ax [857])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -800 [0xfffffffffffffce0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/tpdes.f":117 218 {*adddi_1}
     (nil))
(insn 622 621 623 29 (set (reg:SI 1 dx)
        (const_int 36 [0x24])) "../src/tpdes.f":117 82 {*movsi_internal}
     (nil))
(insn 623 622 624 29 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*lC14") [flags 0x2]  <var_decl 0x143135a20 *lC14>)) "../src/tpdes.f":117 81 {*movdi_internal}
     (nil))
(insn 624 623 625 29 (set (reg:DI 5 di)
        (reg:DI 0 ax [857])) "../src/tpdes.f":117 81 {*movdi_internal}
     (nil))
(call_insn 625 624 626 29 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_character_write") [flags 0x41]  <function_decl 0x1427d4900 _gfortran_transfer_character_write>) [0 _gfortran_transfer_character_write S1 A8])
        (const_int 0 [0])) "../src/tpdes.f":117 655 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 626 625 627 29 (parallel [
            (set (reg:DI 2 cx [858])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -248 [0xffffffffffffff08])))
            (clobber (reg:CC 17 flags))
        ]) "../src/tpdes.f":117 218 {*adddi_1}
     (nil))
(insn 627 626 628 29 (parallel [
            (set (reg:DI 0 ax [859])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -800 [0xfffffffffffffce0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/tpdes.f":117 218 {*adddi_1}
     (nil))
(insn 628 627 629 29 (set (reg:SI 1 dx)
        (const_int 4 [0x4])) "../src/tpdes.f":117 82 {*movsi_internal}
     (nil))
(insn 629 628 630 29 (set (reg:DI 4 si)
        (reg:DI 2 cx [858])) "../src/tpdes.f":117 81 {*movdi_internal}
     (nil))
(insn 630 629 631 29 (set (reg:DI 5 di)
        (reg:DI 0 ax [859])) "../src/tpdes.f":117 81 {*movdi_internal}
     (nil))
(call_insn 631 630 632 29 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_real_write") [flags 0x41]  <function_decl 0x1427d4d00 _gfortran_transfer_real_write>) [0 _gfortran_transfer_real_write S1 A8])
        (const_int 0 [0])) "../src/tpdes.f":117 655 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 632 631 633 29 (parallel [
            (set (reg:DI 0 ax [860])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -800 [0xfffffffffffffce0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/tpdes.f":117 218 {*adddi_1}
     (nil))
(insn 633 632 634 29 (set (reg:DI 5 di)
        (reg:DI 0 ax [860])) "../src/tpdes.f":117 81 {*movdi_internal}
     (nil))
(call_insn 634 633 1676 29 (call (mem:QI (symbol_ref:DI ("_gfortran_st_write_done") [flags 0x41]  <function_decl 0x1427e4300 _gfortran_st_write_done>) [0 _gfortran_st_write_done S1 A8])
        (const_int 0 [0])) "../src/tpdes.f":117 655 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 1676 634 1677 29 (set (pc)
        (label_ref 693)) "../src/tpdes.f":118 649 {jump}
     (nil)
 -> 693)
;;  succ:       35 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1677 1676 637)
;; basic block 30, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 29, next block 31, flags: (RTL, MODIFIED)
;;  pred:       28
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 259 260 261 262 861 862 863 864
(code_label 637 1677 638 30 23 (nil) [1 uses])
(note 638 637 639 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 639 638 640 30 (set (reg:SF 21 xmm0 [orig:259 del.67_173 ] [259])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -224 [0xffffffffffffff20])) [1 del+0 S4 A128])) "../src/tpdes.f":120 127 {*movsf_internal}
     (nil))
(insn 640 639 641 30 (set (reg:SF 22 xmm1 [862])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [1 dvd+0 S4 A32])) "../src/tpdes.f":120 127 {*movsf_internal}
     (nil))
(insn 641 640 642 30 (set (reg:SF 21 xmm0 [861])
        (plus:SF (reg:SF 21 xmm0 [orig:259 del.67_173 ] [259])
            (reg:SF 22 xmm1 [862]))) "../src/tpdes.f":120 802 {*fop_sf_comm}
     (nil))
(insn 642 641 643 30 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [1 dvd+0 S4 A32])
        (reg:SF 21 xmm0 [861])) "../src/tpdes.f":120 127 {*movsf_internal}
     (nil))
(insn 643 642 644 30 (set (reg:SF 21 xmm0 [orig:260 del.68_174 ] [260])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -224 [0xffffffffffffff20])) [1 del+0 S4 A128])) "../src/tpdes.f":121 127 {*movsf_internal}
     (nil))
(insn 644 643 645 30 (set (reg:SF 21 xmm0 [orig:261 _175 ] [261])
        (div:SF (reg:SF 21 xmm0 [orig:260 del.68_174 ] [260])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -172 [0xffffffffffffff54])) [1 dvd0+0 S4 A32]))) "../src/tpdes.f":121 805 {*fop_sf_1}
     (nil))
(insn 645 644 646 30 (set (reg:V4SF 22 xmm1 [863])
        (mem/u/c:V4SF (symbol_ref/u:DI ("*lC9") [flags 0x2]) [1  S16 A128])) "../src/tpdes.f":121 1225 {movv4sf_internal}
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF +QNaN [+QNaN])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 646 645 647 30 (parallel [
            (set (reg:SF 21 xmm0 [orig:262 _176 ] [262])
                (abs:SF (reg:SF 21 xmm0 [orig:261 _175 ] [261])))
            (use (reg:V4SF 22 xmm1 [863]))
            (clobber (reg:CC 17 flags))
        ]) "../src/tpdes.f":121 470 {*absnegsf2}
     (expr_list:REG_EQUAL (abs:SF (reg:SF 21 xmm0 [orig:261 _175 ] [261]))
        (nil)))
(insn 647 646 648 30 (set (reg:SF 22 xmm1 [864])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC15") [flags 0x2]) [1  S4 A32])) "../src/tpdes.f":121 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 9.99999974737875163555145263671875e-6 [0x0.a7c5acp-16])
        (nil)))
(insn 648 647 649 30 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 22 xmm1 [864])
            (reg:SF 21 xmm0 [orig:262 _176 ] [262]))) "../src/tpdes.f":121 51 {*cmpiusf}
     (nil))
(jump_insn 649 648 650 30 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1698)
            (pc))) "../src/tpdes.f":121 617 {*jcc_1}
     (nil)
 -> 1698)
;;  succ:       60
;;              31 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 31, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 30, next block 32, flags: (RTL, MODIFIED)
;;  pred:       30 (FALLTHRU)
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 263 264 265 578 865
(note 650 649 651 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 651 650 652 31 (set (reg:SF 21 xmm0 [orig:578 M.22_506 ] [578])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [1 dvd+0 S4 A32])) "../src/tpdes.f":122 127 {*movsf_internal}
     (nil))
(insn 652 651 653 31 (set (reg:SF 22 xmm1 [865])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -160 [0xffffffffffffff60])) [1 dvdmin+0 S4 A32])) "../src/tpdes.f":122 127 {*movsf_internal}
     (nil))
(insn 653 652 654 31 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 22 xmm1 [865])
            (reg:SF 21 xmm0 [orig:578 M.22_506 ] [578]))) "../src/tpdes.f":122 51 {*cmpiusf}
     (nil))
(insn 654 653 655 31 (set (reg:QI 1 dx [orig:263 _177 ] [263])
        (gt:QI (reg:CCFPU 17 flags)
            (const_int 0 [0]))) "../src/tpdes.f":122 613 {*setcc_qi}
     (nil))
(insn 655 654 656 31 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 21 xmm0 [orig:578 M.22_506 ] [578])
            (reg:SF 21 xmm0 [orig:578 M.22_506 ] [578]))) "../src/tpdes.f":122 51 {*cmpiusf}
     (nil))
(insn 656 655 657 31 (set (reg:QI 0 ax [orig:264 _178 ] [264])
        (unordered:QI (reg:CCFPU 17 flags)
            (const_int 0 [0]))) "../src/tpdes.f":122 613 {*setcc_qi}
     (nil))
(insn 657 656 658 31 (parallel [
            (set (reg:QI 0 ax [orig:265 _179 ] [265])
                (ior:QI (reg:QI 0 ax [orig:264 _178 ] [264])
                    (reg:QI 1 dx [orig:263 _177 ] [263])))
            (clobber (reg:CC 17 flags))
        ]) "../src/tpdes.f":122 423 {*iorqi_1}
     (nil))
(insn 658 657 659 31 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:265 _179 ] [265])
            (const_int 0 [0]))) "../src/tpdes.f":122 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 659 658 660 31 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 662)
            (pc))) "../src/tpdes.f":122 617 {*jcc_1}
     (nil)
 -> 662)
;;  succ:       32 (FALLTHRU)
;;              33
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 578

;; basic block 32, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 31, next block 33, flags: (RTL, MODIFIED)
;;  pred:       31 (FALLTHRU)
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 578
(note 660 659 661 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 661 660 662 32 (set (reg:SF 21 xmm0 [orig:578 M.22_506 ] [578])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -160 [0xffffffffffffff60])) [1 dvdmin+0 S4 A32])) "../src/tpdes.f":122 127 {*movsf_internal}
     (nil))
;;  succ:       33 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 578

;; basic block 33, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 32, next block 59, flags: (RTL, MODIFIED)
;;  pred:       31
;;              32 (FALLTHRU)
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 578
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 578
;; lr  def 	 17 [flags]
(code_label 662 661 663 33 25 (nil) [1 uses])
(note 663 662 664 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 664 663 665 33 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [1 dvd+0 S4 A32])
        (reg:SF 21 xmm0 [orig:578 M.22_506 ] [578])) "../src/tpdes.f":122 127 {*movsf_internal}
     (nil))
(insn 665 664 1678 33 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -68 [0xffffffffffffffbc])) [2 iter+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -68 [0xffffffffffffffbc])) [2 iter+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/tpdes.f":103 217 {*addsi_1}
     (nil))
(jump_insn 1678 665 1679 33 (set (pc)
        (label_ref 666)) "../src/tpdes.f":103 649 {jump}
     (nil)
 -> 666)
;;  succ:       22 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1679 1678 1693)
;; basic block 59, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 33, next block 34, flags: (RTL, MODIFIED)
;;  pred:       22
;; bb 59 artificial_defs: { }
;; bb 59 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 1693 1679 1692 59 55 (nil) [1 uses])
(note 1692 1693 1694 59 [bb 59] NOTE_INSN_BASIC_BLOCK)
(insn 1694 1692 669 59 (const_int 0 [0]) "../src/tpdes.f":122 682 {nop}
     (nil))
;;  succ:       34 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 34, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 59, next block 60, flags: (RTL, MODIFIED)
;;  pred:       59 [100.0%]  (FALLTHRU)
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 866 867 868 869 870 871
(code_label 669 1694 670 34 18 (nil) [0 uses])
(note 670 669 671 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 671 670 672 34 (set (reg/f:DI 0 ax [866])
        (symbol_ref/f:DI ("*lC3") [flags 0x2]  <var_decl 0x143135870 *lC3>)) "../src/tpdes.f":124 81 {*movdi_internal}
     (nil))
(insn 672 671 673 34 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -792 [0xfffffffffffffce8])) [6 dt_parm.23.common.filename+0 S8 A64])
        (reg/f:DI 0 ax [866])) "../src/tpdes.f":124 81 {*movdi_internal}
     (nil))
(insn 673 672 674 34 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -784 [0xfffffffffffffcf0])) [2 dt_parm.23.common.line+0 S4 A128])
        (const_int 124 [0x7c])) "../src/tpdes.f":124 82 {*movsi_internal}
     (nil))
(insn 674 673 675 34 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -800 [0xfffffffffffffce0])) [2 dt_parm.23.common.flags+0 S4 A128])
        (const_int 128 [0x80])) "../src/tpdes.f":124 82 {*movsi_internal}
     (nil))
(insn 675 674 676 34 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -796 [0xfffffffffffffce4])) [2 dt_parm.23.common.unit+0 S4 A32])
        (const_int 6 [0x6])) "../src/tpdes.f":124 82 {*movsi_internal}
     (nil))
(insn 676 675 677 34 (parallel [
            (set (reg:DI 0 ax [867])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -800 [0xfffffffffffffce0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/tpdes.f":124 218 {*adddi_1}
     (nil))
(insn 677 676 678 34 (set (reg:DI 5 di)
        (reg:DI 0 ax [867])) "../src/tpdes.f":124 81 {*movdi_internal}
     (nil))
(call_insn 678 677 679 34 (call (mem:QI (symbol_ref:DI ("_gfortran_st_write") [flags 0x41]  <function_decl 0x1427e0800 _gfortran_st_write>) [0 _gfortran_st_write S1 A8])
        (const_int 0 [0])) "../src/tpdes.f":124 655 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 679 678 680 34 (parallel [
            (set (reg:DI 0 ax [868])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -800 [0xfffffffffffffce0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/tpdes.f":124 218 {*adddi_1}
     (nil))
(insn 680 679 681 34 (set (reg:SI 1 dx)
        (const_int 34 [0x22])) "../src/tpdes.f":124 82 {*movsi_internal}
     (nil))
(insn 681 680 682 34 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*lC16") [flags 0x2]  <var_decl 0x143135ab0 *lC16>)) "../src/tpdes.f":124 81 {*movdi_internal}
     (nil))
(insn 682 681 683 34 (set (reg:DI 5 di)
        (reg:DI 0 ax [868])) "../src/tpdes.f":124 81 {*movdi_internal}
     (nil))
(call_insn 683 682 684 34 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_character_write") [flags 0x41]  <function_decl 0x1427d4900 _gfortran_transfer_character_write>) [0 _gfortran_transfer_character_write S1 A8])
        (const_int 0 [0])) "../src/tpdes.f":124 655 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 684 683 685 34 (parallel [
            (set (reg:DI 2 cx [869])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -224 [0xffffffffffffff20])))
            (clobber (reg:CC 17 flags))
        ]) "../src/tpdes.f":124 218 {*adddi_1}
     (nil))
(insn 685 684 686 34 (parallel [
            (set (reg:DI 0 ax [870])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -800 [0xfffffffffffffce0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/tpdes.f":124 218 {*adddi_1}
     (nil))
(insn 686 685 687 34 (set (reg:SI 1 dx)
        (const_int 4 [0x4])) "../src/tpdes.f":124 82 {*movsi_internal}
     (nil))
(insn 687 686 688 34 (set (reg:DI 4 si)
        (reg:DI 2 cx [869])) "../src/tpdes.f":124 81 {*movdi_internal}
     (nil))
(insn 688 687 689 34 (set (reg:DI 5 di)
        (reg:DI 0 ax [870])) "../src/tpdes.f":124 81 {*movdi_internal}
     (nil))
(call_insn 689 688 690 34 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_real_write") [flags 0x41]  <function_decl 0x1427d4d00 _gfortran_transfer_real_write>) [0 _gfortran_transfer_real_write S1 A8])
        (const_int 0 [0])) "../src/tpdes.f":124 655 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 690 689 691 34 (parallel [
            (set (reg:DI 0 ax [871])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -800 [0xfffffffffffffce0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/tpdes.f":124 218 {*adddi_1}
     (nil))
(insn 691 690 692 34 (set (reg:DI 5 di)
        (reg:DI 0 ax [871])) "../src/tpdes.f":124 81 {*movdi_internal}
     (nil))
(call_insn 692 691 1695 34 (call (mem:QI (symbol_ref:DI ("_gfortran_st_write_done") [flags 0x41]  <function_decl 0x1427e4300 _gfortran_st_write_done>) [0 _gfortran_st_write_done S1 A8])
        (const_int 0 [0])) "../src/tpdes.f":124 655 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 1695 692 1696 34 (set (pc)
        (label_ref 693)) 649 {jump}
     (nil)
 -> 693)
;;  succ:       35
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1696 1695 1698)
;; basic block 60, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 34, next block 35, flags: (RTL, MODIFIED)
;;  pred:       30
;; bb 60 artificial_defs: { }
;; bb 60 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 1698 1696 1697 60 56 (nil) [1 uses])
(note 1697 1698 1699 60 [bb 60] NOTE_INSN_BASIC_BLOCK)
(insn 1699 1697 693 60 (const_int 0 [0]) "../src/tpdes.f":124 682 {nop}
     (nil))
;;  succ:       35 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 35, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 60, next block 36, flags: (RTL, MODIFIED)
;;  pred:       29 [100.0%] 
;;              60 [100.0%]  (FALLTHRU)
;;              34
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 266 267 268 269 270 271 272 273 274 275 655 656 657 872 873 874 875 876 877 878
(code_label 693 1699 694 35 24 (nil) [2 uses])
(note 694 693 695 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 695 694 696 35 (set (reg/f:DI 0 ax [872])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -832 [0xfffffffffffffcc0])) [10 vel+0 S8 A64])) "../src/tpdes.f":127 81 {*movdi_internal}
     (nil))
(insn 696 695 697 35 (set (reg:SF 21 xmm0 [orig:266 _180 ] [266])
        (mem:SF (reg/f:DI 0 ax [872]) [1 *vel_598(D)+0 S4 A32])) "../src/tpdes.f":127 127 {*movsf_internal}
     (nil))
(insn 697 696 698 35 (set (reg:SF 22 xmm1 [874])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [1 dvd+0 S4 A32])) "../src/tpdes.f":127 127 {*movsf_internal}
     (nil))
(insn 698 697 699 35 (set (reg:SF 21 xmm0 [873])
        (plus:SF (reg:SF 21 xmm0 [orig:266 _180 ] [266])
            (reg:SF 22 xmm1 [874]))) "../src/tpdes.f":127 802 {*fop_sf_comm}
     (nil))
(insn 699 698 700 35 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -80 [0xffffffffffffffb0])) [1 vd+0 S4 A32])
        (reg:SF 21 xmm0 [873])) "../src/tpdes.f":127 127 {*movsf_internal}
     (nil))
(insn 700 699 701 35 (set (reg:SF 0 ax [orig:655 _674 ] [655])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -80 [0xffffffffffffffb0])) [1 vd+0 S4 A32])) "../src/tpdes.f":128 127 {*movsf_internal}
     (nil))
(insn 701 700 702 35 (set (reg/f:DI 1 dx [875])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -848 [0xfffffffffffffcb0])) [10 rad+0 S8 A64])) "../src/tpdes.f":128 81 {*movdi_internal}
     (nil))
(insn 702 701 703 35 (set (reg:SF 21 xmm0 [orig:656 _675 ] [656])
        (mem:SF (reg/f:DI 1 dx [875]) [1 *rad_593(D)+0 S4 A32])) "../src/tpdes.f":128 127 {*movsf_internal}
     (nil))
(insn 703 702 1746 35 (set (reg:SF 21 xmm0 [orig:656 _675 ] [656])
        (mult:SF (reg:SF 21 xmm0 [orig:656 _675 ] [656])
            (reg:SF 21 xmm0 [orig:656 _675 ] [656]))) "../src/tpdes.f":128 802 {*fop_sf_comm}
     (nil))
(insn 1746 703 1837 35 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -880 [0xfffffffffffffc90])) [14 %sfp+-832 S4 A128])
        (reg:SF 21 xmm0 [orig:656 _675 ] [656])) "../src/tpdes.f":128 127 {*movsf_internal}
     (nil))
(note 1837 1746 1812 35 NOTE_INSN_DELETED)
(note 1812 1837 704 35 NOTE_INSN_DELETED)
(insn 704 1812 705 35 (set (reg/f:DI 1 dx [876])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -824 [0xfffffffffffffcc8])) [10 rho+0 S8 A64])) "../src/tpdes.f":128 81 {*movdi_internal}
     (nil))
(insn 705 704 706 35 (set (reg:SF 22 xmm1 [orig:267 _181 ] [267])
        (mem:SF (reg/f:DI 1 dx [876]) [1 *rho_609(D)+0 S4 A32])) "../src/tpdes.f":128 127 {*movsf_internal}
     (nil))
(insn 706 705 707 35 (set (reg:SF 21 xmm0 [877])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC1") [flags 0x2]) [1  S4 A32])) "../src/tpdes.f":128 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 5.0e-1 [0x0.8p+0])
        (nil)))
(insn 707 706 1748 35 (set (reg:SF 22 xmm1 [orig:267 _181 ] [267])
        (mult:SF (reg:SF 22 xmm1 [orig:267 _181 ] [267])
            (reg:SF 21 xmm0 [877]))) "../src/tpdes.f":128 802 {*fop_sf_comm}
     (nil))
(insn 1748 707 1836 35 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -864 [0xfffffffffffffca0])) [14 %sfp+-816 S4 A128])
        (reg:SF 22 xmm1 [orig:267 _181 ] [267])) "../src/tpdes.f":128 127 {*movsf_internal}
     (nil))
(note 1836 1748 1811 35 NOTE_INSN_DELETED)
(note 1811 1836 708 35 NOTE_INSN_DELETED)
(insn 708 1811 709 35 (set (reg:SI 5 di)
        (const_int 3 [0x3])) "../src/tpdes.f":128 82 {*movsi_internal}
     (nil))
(insn 709 708 710 35 (set (reg:SF 21 xmm0)
        (reg:SF 0 ax [orig:655 _674 ] [655])) "../src/tpdes.f":128 127 {*movsf_internal}
     (nil))
(call_insn/u 710 709 1749 35 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("__powisf2") [flags 0x41]) [0  S1 A8])
            (const_int 0 [0]))) "../src/tpdes.f":128 665 {*call_value}
     (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
        (nil))
    (expr_list (use (reg:SI 5 di))
        (expr_list (use (reg:SF 21 xmm0))
            (nil))))
(note 1749 710 1827 35 NOTE_INSN_DELETED)
(note 1827 1749 712 35 NOTE_INSN_DELETED)
(insn 712 1827 713 35 (set (reg:SF 21 xmm0 [orig:270 _184 ] [270])
        (mult:SF (reg:SF 21 xmm0 [orig:269 _183 ] [269])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -864 [0xfffffffffffffca0])) [14 %sfp+-816 S4 A128]))) "../src/tpdes.f":128 802 {*fop_sf_comm}
     (nil))
(insn 713 712 714 35 (set (reg:SF 22 xmm1 [orig:271 pi.69_185 ] [271])
        (mem/c:SF (symbol_ref:DI ("pi.3583") [flags 0x1c02]  <var_decl 0x1427f2120 pi>) [1 pi+0 S4 A32])) "../src/tpdes.f":128 127 {*movsf_internal}
     (nil))
(insn 714 713 1750 35 (set (reg:SF 21 xmm0 [orig:272 _186 ] [272])
        (mult:SF (reg:SF 21 xmm0 [orig:270 _184 ] [270])
            (reg:SF 22 xmm1 [orig:271 pi.69_185 ] [271]))) "../src/tpdes.f":128 802 {*fop_sf_comm}
     (nil))
(note 1750 714 1826 35 NOTE_INSN_DELETED)
(note 1826 1750 715 35 NOTE_INSN_DELETED)
(insn 715 1826 716 35 (set (reg:SF 21 xmm0 [orig:273 _187 ] [273])
        (mult:SF (reg:SF 21 xmm0 [orig:272 _186 ] [272])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -880 [0xfffffffffffffc90])) [14 %sfp+-832 S4 A128]))) "../src/tpdes.f":128 802 {*fop_sf_comm}
     (nil))
(insn 716 715 717 35 (set (reg:SF 22 xmm1 [orig:274 _188 ] [274])
        (reg:SF 21 xmm0 [orig:273 _187 ] [273])) "../src/tpdes.f":128 127 {*movsf_internal}
     (nil))
(insn 717 716 718 35 (set (reg:SF 21 xmm0 [878])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -72 [0xffffffffffffffb8])) [1 pdes+0 S4 A32])) "../src/tpdes.f":128 127 {*movsf_internal}
     (nil))
(insn 718 717 719 35 (set (reg:SF 21 xmm0 [orig:275 _189 ] [275])
        (div:SF (reg:SF 21 xmm0 [878])
            (reg:SF 22 xmm1 [orig:274 _188 ] [274]))) "../src/tpdes.f":128 805 {*fop_sf_1}
     (nil))
(insn 719 718 720 35 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -244 [0xffffffffffffff0c])) [1 pc+0 S4 A32])
        (reg:SF 21 xmm0 [orig:275 _189 ] [275])) "../src/tpdes.f":128 127 {*movsf_internal}
     (nil))
;;  succ:       36 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 36, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 35, next block 37, flags: (RTL, MODIFIED)
;;  pred:       35 (FALLTHRU)
;;              7 [100.0%] 
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 276 277 278 279 280 281 282 283 284 285 286 287 288 670 879 880 881 882 883 884 885 886 887 888 889 890 891 892 893 894 895 896 897 898 899 900 901 902 903 904 905 906 907 908
(code_label 720 719 721 36 7 (nil) [1 uses])
(note 721 720 722 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 722 721 723 36 (set (reg/f:DI 0 ax [879])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -832 [0xfffffffffffffcc0])) [10 vel+0 S8 A64])) "../src/tpdes.f":132 81 {*movdi_internal}
     (nil))
(insn 723 722 724 36 (set (reg:SF 21 xmm0 [orig:276 _190 ] [276])
        (mem:SF (reg/f:DI 0 ax [879]) [1 *vel_598(D)+0 S4 A32])) "../src/tpdes.f":132 127 {*movsf_internal}
     (nil))
(insn 724 723 725 36 (set (reg/f:DI 0 ax [880])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -840 [0xfffffffffffffcb8])) [10 omg+0 S8 A64])) "../src/tpdes.f":132 81 {*movdi_internal}
     (nil))
(insn 725 724 726 36 (set (reg:SF 23 xmm2 [orig:277 _191 ] [277])
        (mem:SF (reg/f:DI 0 ax [880]) [1 *omg_596(D)+0 S4 A32])) "../src/tpdes.f":132 127 {*movsf_internal}
     (nil))
(insn 726 725 727 36 (set (reg/f:DI 0 ax [881])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -848 [0xfffffffffffffcb0])) [10 rad+0 S8 A64])) "../src/tpdes.f":132 81 {*movdi_internal}
     (nil))
(insn 727 726 728 36 (set (reg:SF 22 xmm1 [orig:278 _192 ] [278])
        (mem:SF (reg/f:DI 0 ax [881]) [1 *rad_593(D)+0 S4 A32])) "../src/tpdes.f":132 127 {*movsf_internal}
     (nil))
(insn 728 727 730 36 (set (reg:SF 22 xmm1 [orig:279 _193 ] [279])
        (mult:SF (reg:SF 22 xmm1 [orig:278 _192 ] [278])
            (reg:SF 23 xmm2 [orig:277 _191 ] [277]))) "../src/tpdes.f":132 802 {*fop_sf_comm}
     (nil))
(insn 730 728 731 36 (set (reg:SF 21 xmm0 [orig:281 _195 ] [281])
        (div:SF (reg:SF 21 xmm0 [orig:276 _190 ] [276])
            (reg:SF 22 xmm1 [orig:280 _194 ] [280]))) "../src/tpdes.f":132 805 {*fop_sf_1}
     (nil))
(insn 731 730 732 36 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -220 [0xffffffffffffff24])) [1 adv+0 S4 A32])
        (reg:SF 21 xmm0 [orig:281 _195 ] [281])) "../src/tpdes.f":132 127 {*movsf_internal}
     (nil))
(insn 732 731 733 36 (set (reg/f:DI 0 ax [882])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -840 [0xfffffffffffffcb8])) [10 omg+0 S8 A64])) "../src/tpdes.f":133 81 {*movdi_internal}
     (nil))
(insn 733 732 734 36 (set (reg:SF 22 xmm1 [orig:282 _196 ] [282])
        (mem:SF (reg/f:DI 0 ax [882]) [1 *omg_596(D)+0 S4 A32])) "../src/tpdes.f":133 127 {*movsf_internal}
     (nil))
(insn 734 733 735 36 (set (reg/f:DI 0 ax [883])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -848 [0xfffffffffffffcb0])) [10 rad+0 S8 A64])) "../src/tpdes.f":133 81 {*movdi_internal}
     (nil))
(insn 735 734 736 36 (set (reg:SF 21 xmm0 [orig:283 _197 ] [283])
        (mem:SF (reg/f:DI 0 ax [883]) [1 *rad_593(D)+0 S4 A32])) "../src/tpdes.f":133 127 {*movsf_internal}
     (nil))
(insn 736 735 737 36 (set (reg:SF 21 xmm0 [orig:284 _198 ] [284])
        (mult:SF (reg:SF 21 xmm0 [orig:283 _197 ] [283])
            (reg:SF 22 xmm1 [orig:282 _196 ] [282]))) "../src/tpdes.f":133 802 {*fop_sf_comm}
     (nil))
(insn 737 736 738 36 (set (reg:SF 22 xmm1 [orig:285 _199 ] [285])
        (reg:SF 21 xmm0 [orig:284 _198 ] [284])) "../src/tpdes.f":133 127 {*movsf_internal}
     (nil))
(insn 738 737 739 36 (set (reg:SF 21 xmm0 [884])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -80 [0xffffffffffffffb0])) [1 vd+0 S4 A32])) "../src/tpdes.f":133 127 {*movsf_internal}
     (nil))
(insn 739 738 740 36 (set (reg:SF 21 xmm0 [orig:286 _200 ] [286])
        (div:SF (reg:SF 21 xmm0 [884])
            (reg:SF 22 xmm1 [orig:285 _199 ] [285]))) "../src/tpdes.f":133 805 {*fop_sf_1}
     (nil))
(insn 740 739 741 36 (set (reg/f:DI 0 ax [885])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 104 [0x68])) [10 adw+0 S8 A64])) "../src/tpdes.f":133 81 {*movdi_internal}
     (nil))
(insn 741 740 742 36 (set (mem:SF (reg/f:DI 0 ax [885]) [1 *adw_708(D)+0 S4 A32])
        (reg:SF 21 xmm0 [orig:286 _200 ] [286])) "../src/tpdes.f":133 127 {*movsf_internal}
     (nil))
(insn 742 741 743 36 (set (reg/f:DI 0 ax [886])
        (symbol_ref/f:DI ("*lC3") [flags 0x2]  <var_decl 0x143135870 *lC3>)) "../src/tpdes.f":136 81 {*movdi_internal}
     (nil))
(insn 743 742 744 36 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -792 [0xfffffffffffffce8])) [6 dt_parm.24.common.filename+0 S8 A64])
        (reg/f:DI 0 ax [886])) "../src/tpdes.f":136 81 {*movdi_internal}
     (nil))
(insn 744 743 745 36 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -784 [0xfffffffffffffcf0])) [2 dt_parm.24.common.line+0 S4 A128])
        (const_int 136 [0x88])) "../src/tpdes.f":136 82 {*movsi_internal}
     (nil))
(insn 745 744 746 36 (set (reg/f:DI 0 ax [887])
        (symbol_ref/f:DI ("*lC17") [flags 0x2]  <var_decl 0x143135b40 *lC17>)) "../src/tpdes.f":136 81 {*movdi_internal}
     (nil))
(insn 746 745 747 36 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -728 [0xfffffffffffffd28])) [6 dt_parm.24.format+0 S8 A64])
        (reg/f:DI 0 ax [887])) "../src/tpdes.f":136 81 {*movdi_internal}
     (nil))
(insn 747 746 748 36 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -720 [0xfffffffffffffd30])) [2 dt_parm.24.format_len+0 S4 A128])
        (const_int 306 [0x132])) "../src/tpdes.f":136 82 {*movsi_internal}
     (nil))
(insn 748 747 749 36 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -800 [0xfffffffffffffce0])) [2 dt_parm.24.common.flags+0 S4 A128])
        (const_int 4096 [0x1000])) "../src/tpdes.f":136 82 {*movsi_internal}
     (nil))
(insn 749 748 750 36 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -796 [0xfffffffffffffce4])) [2 dt_parm.24.common.unit+0 S4 A32])
        (const_int 6 [0x6])) "../src/tpdes.f":136 82 {*movsi_internal}
     (nil))
(insn 750 749 751 36 (parallel [
            (set (reg:DI 0 ax [888])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -800 [0xfffffffffffffce0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/tpdes.f":136 218 {*adddi_1}
     (nil))
(insn 751 750 752 36 (set (reg:DI 5 di)
        (reg:DI 0 ax [888])) "../src/tpdes.f":136 81 {*movdi_internal}
     (nil))
(call_insn 752 751 753 36 (call (mem:QI (symbol_ref:DI ("_gfortran_st_write") [flags 0x41]  <function_decl 0x1427e0800 _gfortran_st_write>) [0 _gfortran_st_write S1 A8])
        (const_int 0 [0])) "../src/tpdes.f":136 655 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 753 752 754 36 (set (reg/f:DI 0 ax [889])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 16 [0x10])) [10 blds+0 S8 A64])) "../src/tpdes.f":136 81 {*movdi_internal}
     (nil))
(insn 754 753 755 36 (set (reg:SF 21 xmm0 [orig:287 _201 ] [287])
        (mem:SF (reg/f:DI 0 ax [889]) [1 *blds_717(D)+0 S4 A32])) "../src/tpdes.f":136 127 {*movsf_internal}
     (nil))
(insn 755 754 756 36 (set (reg:SI 0 ax [orig:288 _202 ] [288])
        (fix:SI (reg:SF 21 xmm0 [orig:287 _201 ] [287]))) "../src/tpdes.f":136 170 {fix_truncsfsi_sse}
     (nil))
(insn 756 755 757 36 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -308 [0xfffffffffffffecc])) [2 D.3670+0 S4 A32])
        (reg:SI 0 ax [orig:288 _202 ] [288])) "../src/tpdes.f":136 82 {*movsi_internal}
     (nil))
(insn 757 756 758 36 (parallel [
            (set (reg:DI 2 cx [890])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -308 [0xfffffffffffffecc])))
            (clobber (reg:CC 17 flags))
        ]) "../src/tpdes.f":136 218 {*adddi_1}
     (nil))
(insn 758 757 759 36 (parallel [
            (set (reg:DI 0 ax [891])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -800 [0xfffffffffffffce0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/tpdes.f":136 218 {*adddi_1}
     (nil))
(insn 759 758 760 36 (set (reg:SI 1 dx)
        (const_int 4 [0x4])) "../src/tpdes.f":136 82 {*movsi_internal}
     (nil))
(insn 760 759 761 36 (set (reg:DI 4 si)
        (reg:DI 2 cx [890])) "../src/tpdes.f":136 81 {*movdi_internal}
     (nil))
(insn 761 760 762 36 (set (reg:DI 5 di)
        (reg:DI 0 ax [891])) "../src/tpdes.f":136 81 {*movdi_internal}
     (nil))
(call_insn 762 761 763 36 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_integer_write") [flags 0x41]  <function_decl 0x1427d4500 _gfortran_transfer_integer_write>) [0 _gfortran_transfer_integer_write S1 A8])
        (const_int 0 [0])) "../src/tpdes.f":136 655 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 763 762 764 36 (parallel [
            (set (reg:DI 2 cx [892])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -220 [0xffffffffffffff24])))
            (clobber (reg:CC 17 flags))
        ]) "../src/tpdes.f":136 218 {*adddi_1}
     (nil))
(insn 764 763 765 36 (parallel [
            (set (reg:DI 0 ax [893])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -800 [0xfffffffffffffce0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/tpdes.f":136 218 {*adddi_1}
     (nil))
(insn 765 764 766 36 (set (reg:SI 1 dx)
        (const_int 4 [0x4])) "../src/tpdes.f":136 82 {*movsi_internal}
     (nil))
(insn 766 765 767 36 (set (reg:DI 4 si)
        (reg:DI 2 cx [892])) "../src/tpdes.f":136 81 {*movdi_internal}
     (nil))
(insn 767 766 768 36 (set (reg:DI 5 di)
        (reg:DI 0 ax [893])) "../src/tpdes.f":136 81 {*movdi_internal}
     (nil))
(call_insn 768 767 769 36 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_real_write") [flags 0x41]  <function_decl 0x1427d4d00 _gfortran_transfer_real_write>) [0 _gfortran_transfer_real_write S1 A8])
        (const_int 0 [0])) "../src/tpdes.f":136 655 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 769 768 770 36 (set (reg:DI 2 cx [894])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 104 [0x68])) [10 adw+0 S8 A64])) "../src/tpdes.f":136 81 {*movdi_internal}
     (nil))
(insn 770 769 771 36 (parallel [
            (set (reg:DI 0 ax [895])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -800 [0xfffffffffffffce0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/tpdes.f":136 218 {*adddi_1}
     (nil))
(insn 771 770 772 36 (set (reg:SI 1 dx)
        (const_int 4 [0x4])) "../src/tpdes.f":136 82 {*movsi_internal}
     (nil))
(insn 772 771 773 36 (set (reg:DI 4 si)
        (reg:DI 2 cx [894])) "../src/tpdes.f":136 81 {*movdi_internal}
     (nil))
(insn 773 772 774 36 (set (reg:DI 5 di)
        (reg:DI 0 ax [895])) "../src/tpdes.f":136 81 {*movdi_internal}
     (nil))
(call_insn 774 773 775 36 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_real_write") [flags 0x41]  <function_decl 0x1427d4d00 _gfortran_transfer_real_write>) [0 _gfortran_transfer_real_write S1 A8])
        (const_int 0 [0])) "../src/tpdes.f":136 655 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 775 774 776 36 (parallel [
            (set (reg:DI 0 ax [896])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -800 [0xfffffffffffffce0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/tpdes.f":136 218 {*adddi_1}
     (nil))
(insn 776 775 777 36 (set (reg:DI 5 di)
        (reg:DI 0 ax [896])) "../src/tpdes.f":136 81 {*movdi_internal}
     (nil))
(call_insn 777 776 778 36 (call (mem:QI (symbol_ref:DI ("_gfortran_st_write_done") [flags 0x41]  <function_decl 0x1427e4300 _gfortran_st_write_done>) [0 _gfortran_st_write_done S1 A8])
        (const_int 0 [0])) "../src/tpdes.f":136 655 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 778 777 779 36 (set (reg/f:DI 0 ax [897])
        (symbol_ref/f:DI ("*lC3") [flags 0x2]  <var_decl 0x143135870 *lC3>)) "../src/tpdes.f":144 81 {*movdi_internal}
     (nil))
(insn 779 778 780 36 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -792 [0xfffffffffffffce8])) [6 dt_parm.25.common.filename+0 S8 A64])
        (reg/f:DI 0 ax [897])) "../src/tpdes.f":144 81 {*movdi_internal}
     (nil))
(insn 780 779 781 36 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -784 [0xfffffffffffffcf0])) [2 dt_parm.25.common.line+0 S4 A128])
        (const_int 144 [0x90])) "../src/tpdes.f":144 82 {*movsi_internal}
     (nil))
(insn 781 780 782 36 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -800 [0xfffffffffffffce0])) [2 dt_parm.25.common.flags+0 S4 A128])
        (const_int 128 [0x80])) "../src/tpdes.f":144 82 {*movsi_internal}
     (nil))
(insn 782 781 783 36 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -796 [0xfffffffffffffce4])) [2 dt_parm.25.common.unit+0 S4 A32])
        (const_int 6 [0x6])) "../src/tpdes.f":144 82 {*movsi_internal}
     (nil))
(insn 783 782 784 36 (parallel [
            (set (reg:DI 0 ax [898])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -800 [0xfffffffffffffce0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/tpdes.f":144 218 {*adddi_1}
     (nil))
(insn 784 783 785 36 (set (reg:DI 5 di)
        (reg:DI 0 ax [898])) "../src/tpdes.f":144 81 {*movdi_internal}
     (nil))
(call_insn 785 784 786 36 (call (mem:QI (symbol_ref:DI ("_gfortran_st_write") [flags 0x41]  <function_decl 0x1427e0800 _gfortran_st_write>) [0 _gfortran_st_write S1 A8])
        (const_int 0 [0])) "../src/tpdes.f":144 655 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 786 785 787 36 (parallel [
            (set (reg:DI 0 ax [899])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -800 [0xfffffffffffffce0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/tpdes.f":144 218 {*adddi_1}
     (nil))
(insn 787 786 788 36 (set (reg:DI 5 di)
        (reg:DI 0 ax [899])) "../src/tpdes.f":144 81 {*movdi_internal}
     (nil))
(call_insn 788 787 789 36 (call (mem:QI (symbol_ref:DI ("_gfortran_st_write_done") [flags 0x41]  <function_decl 0x1427e4300 _gfortran_st_write_done>) [0 _gfortran_st_write_done S1 A8])
        (const_int 0 [0])) "../src/tpdes.f":144 655 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 789 788 790 36 (set (reg/f:DI 0 ax [900])
        (symbol_ref/f:DI ("*lC3") [flags 0x2]  <var_decl 0x143135870 *lC3>)) "../src/tpdes.f":146 81 {*movdi_internal}
     (nil))
(insn 790 789 791 36 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -792 [0xfffffffffffffce8])) [6 dt_parm.26.common.filename+0 S8 A64])
        (reg/f:DI 0 ax [900])) "../src/tpdes.f":146 81 {*movdi_internal}
     (nil))
(insn 791 790 792 36 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -784 [0xfffffffffffffcf0])) [2 dt_parm.26.common.line+0 S4 A128])
        (const_int 146 [0x92])) "../src/tpdes.f":146 82 {*movsi_internal}
     (nil))
(insn 792 791 793 36 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -800 [0xfffffffffffffce0])) [2 dt_parm.26.common.flags+0 S4 A128])
        (const_int 128 [0x80])) "../src/tpdes.f":146 82 {*movsi_internal}
     (nil))
(insn 793 792 794 36 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -796 [0xfffffffffffffce4])) [2 dt_parm.26.common.unit+0 S4 A32])
        (const_int 6 [0x6])) "../src/tpdes.f":146 82 {*movsi_internal}
     (nil))
(insn 794 793 795 36 (parallel [
            (set (reg:DI 0 ax [901])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -800 [0xfffffffffffffce0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/tpdes.f":146 218 {*adddi_1}
     (nil))
(insn 795 794 796 36 (set (reg:DI 5 di)
        (reg:DI 0 ax [901])) "../src/tpdes.f":146 81 {*movdi_internal}
     (nil))
(call_insn 796 795 797 36 (call (mem:QI (symbol_ref:DI ("_gfortran_st_write") [flags 0x41]  <function_decl 0x1427e0800 _gfortran_st_write>) [0 _gfortran_st_write S1 A8])
        (const_int 0 [0])) "../src/tpdes.f":146 655 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 797 796 798 36 (parallel [
            (set (reg:DI 0 ax [902])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -800 [0xfffffffffffffce0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/tpdes.f":146 218 {*adddi_1}
     (nil))
(insn 798 797 799 36 (set (reg:SI 1 dx)
        (const_int 62 [0x3e])) "../src/tpdes.f":146 82 {*movsi_internal}
     (nil))
(insn 799 798 800 36 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*lC18") [flags 0x2]  <var_decl 0x143135bd0 *lC18>)) "../src/tpdes.f":146 81 {*movdi_internal}
     (nil))
(insn 800 799 801 36 (set (reg:DI 5 di)
        (reg:DI 0 ax [902])) "../src/tpdes.f":146 81 {*movdi_internal}
     (nil))
(call_insn 801 800 802 36 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_character_write") [flags 0x41]  <function_decl 0x1427d4900 _gfortran_transfer_character_write>) [0 _gfortran_transfer_character_write S1 A8])
        (const_int 0 [0])) "../src/tpdes.f":146 655 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 802 801 803 36 (parallel [
            (set (reg:DI 0 ax [903])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -800 [0xfffffffffffffce0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/tpdes.f":146 218 {*adddi_1}
     (nil))
(insn 803 802 804 36 (set (reg:DI 5 di)
        (reg:DI 0 ax [903])) "../src/tpdes.f":146 81 {*movdi_internal}
     (nil))
(call_insn 804 803 805 36 (call (mem:QI (symbol_ref:DI ("_gfortran_st_write_done") [flags 0x41]  <function_decl 0x1427e4300 _gfortran_st_write_done>) [0 _gfortran_st_write_done S1 A8])
        (const_int 0 [0])) "../src/tpdes.f":146 655 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 805 804 806 36 (set (reg:SF 21 xmm0 [904])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC0") [flags 0x2]) [1  S4 A32])) "../src/tpdes.f":147 127 {*movsf_internal}
     (nil))
(insn 806 805 807 36 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -252 [0xffffffffffffff04])) [1 ri1+0 S4 A32])
        (reg:SF 21 xmm0 [904])) "../src/tpdes.f":147 127 {*movsf_internal}
     (nil))
(insn 807 806 808 36 (set (reg:SF 21 xmm0 [905])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC0") [flags 0x2]) [1  S4 A32])) "../src/tpdes.f":148 127 {*movsf_internal}
     (nil))
(insn 808 807 809 36 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -256 [0xffffffffffffff00])) [1 ri2+0 S4 A128])
        (reg:SF 21 xmm0 [905])) "../src/tpdes.f":148 127 {*movsf_internal}
     (nil))
(insn 809 808 810 36 (set (reg:SF 21 xmm0 [906])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC0") [flags 0x2]) [1  S4 A32])) "../src/tpdes.f":149 127 {*movsf_internal}
     (nil))
(insn 810 809 811 36 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -268 [0xfffffffffffffef4])) [1 rj1+0 S4 A32])
        (reg:SF 21 xmm0 [906])) "../src/tpdes.f":149 127 {*movsf_internal}
     (nil))
(insn 811 810 812 36 (set (reg:SF 21 xmm0 [907])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC0") [flags 0x2]) [1  S4 A32])) "../src/tpdes.f":150 127 {*movsf_internal}
     (nil))
(insn 812 811 813 36 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 rj2+0 S4 A128])
        (reg:SF 21 xmm0 [907])) "../src/tpdes.f":150 127 {*movsf_internal}
     (nil))
(insn 813 812 814 36 (set (reg/f:DI 0 ax [908])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 24 [0x18])) [11 n+0 S8 A64])) "../src/tpdes.f":151 81 {*movdi_internal}
     (nil))
(insn 814 813 815 36 (set (reg:SI 3 bx [orig:670 _744 ] [670])
        (mem:SI (reg/f:DI 0 ax [908]) [2 *n_522(D)+0 S4 A32])) "../src/tpdes.f":151 82 {*movsi_internal}
     (nil))
(insn 815 814 1089 36 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [2 i+0 S4 A32])
        (const_int 1 [0x1])) "../src/tpdes.f":151 82 {*movsi_internal}
     (nil))
;;  succ:       37 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 670

;; basic block 37, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 36, next block 38, flags: (RTL, MODIFIED)
;;  pred:       36 (FALLTHRU)
;;              40 [100.0%] 
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 670
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 670
;; lr  def 	 17 [flags] 671
(code_label 1089 815 816 37 29 (nil) [1 uses])
(note 816 1089 817 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 817 816 818 37 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -64 [0xffffffffffffffc0])) [2 i+0 S4 A32])
            (reg:SI 3 bx [orig:670 _744 ] [670]))) "../src/tpdes.f":151 7 {*cmpsi_1}
     (nil))
(insn 818 817 819 37 (set (reg:QI 0 ax [orig:671 _746 ] [671])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "../src/tpdes.f":151 613 {*setcc_qi}
     (nil))
(insn 819 818 820 37 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:671 _746 ] [671])
            (const_int 0 [0]))) "../src/tpdes.f":151 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 820 819 821 37 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1701)
            (pc))) "../src/tpdes.f":151 617 {*jcc_1}
     (nil)
 -> 1701)
;;  succ:       61
;;              38 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 670

;; basic block 38, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 37, next block 39, flags: (RTL, MODIFIED)
;;  pred:       37 (FALLTHRU)
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 670
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 579 672 909 910 911 912 913 914 915 916 917 918 919 920
(note 821 820 822 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 822 821 823 38 (set (reg:SI 0 ax [909])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [2 i+0 S4 A32])) "../src/tpdes.f":152 82 {*movsi_internal}
     (nil))
(insn 823 822 824 38 (set (reg:DI 0 ax [orig:289 _203 ] [289])
        (sign_extend:DI (reg:SI 0 ax [909]))) "../src/tpdes.f":152 145 {*extendsidi2_rex64}
     (nil))
(insn 824 823 825 38 (parallel [
            (set (reg:DI 1 dx [orig:290 _204 ] [290])
                (plus:DI (reg:DI 0 ax [orig:289 _203 ] [289])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/tpdes.f":152 218 {*adddi_1}
     (nil))
(insn 825 824 826 38 (set (reg/f:DI 0 ax [910])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 32 [0x20])) [12 r+0 S8 A64])) "../src/tpdes.f":152 81 {*movdi_internal}
     (nil))
(insn 826 825 827 38 (set (reg:SF 21 xmm0 [orig:291 _205 ] [291])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:290 _204 ] [290])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [910])) [1 *r_585(D) S4 A32])) "../src/tpdes.f":152 127 {*movsf_internal}
     (nil))
(insn 827 826 828 38 (set (reg/f:DI 0 ax [911])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -848 [0xfffffffffffffcb0])) [10 rad+0 S8 A64])) "../src/tpdes.f":152 81 {*movdi_internal}
     (nil))
(insn 828 827 829 38 (set (reg:SF 22 xmm1 [orig:292 _206 ] [292])
        (mem:SF (reg/f:DI 0 ax [911]) [1 *rad_593(D)+0 S4 A32])) "../src/tpdes.f":152 127 {*movsf_internal}
     (nil))
(insn 829 828 830 38 (set (reg:SF 21 xmm0 [orig:293 _207 ] [293])
        (div:SF (reg:SF 21 xmm0 [orig:291 _205 ] [291])
            (reg:SF 22 xmm1 [orig:292 _206 ] [292]))) "../src/tpdes.f":152 805 {*fop_sf_1}
     (nil))
(insn 830 829 831 38 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -296 [0xfffffffffffffed8])) [1 xi+0 S4 A64])
        (reg:SF 21 xmm0 [orig:293 _207 ] [293])) "../src/tpdes.f":152 127 {*movsf_internal}
     (nil))
(insn 831 830 832 38 (set (reg:SI 0 ax [912])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [2 i+0 S4 A32])) "../src/tpdes.f":153 82 {*movsi_internal}
     (nil))
(insn 832 831 833 38 (set (reg:DI 0 ax [orig:294 _208 ] [294])
        (sign_extend:DI (reg:SI 0 ax [912]))) "../src/tpdes.f":153 145 {*extendsidi2_rex64}
     (nil))
(insn 833 832 834 38 (parallel [
            (set (reg:DI 1 dx [orig:295 _209 ] [295])
                (plus:DI (reg:DI 0 ax [orig:294 _208 ] [294])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/tpdes.f":153 218 {*adddi_1}
     (nil))
(insn 834 833 835 38 (set (reg/f:DI 0 ax [913])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 40 [0x28])) [12 dr+0 S8 A64])) "../src/tpdes.f":153 81 {*movdi_internal}
     (nil))
(insn 835 834 836 38 (set (reg:SF 21 xmm0 [orig:296 _210 ] [296])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:295 _209 ] [295])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [913])) [1 *dr_590(D) S4 A32])) "../src/tpdes.f":153 127 {*movsf_internal}
     (nil))
(insn 836 835 837 38 (set (reg/f:DI 0 ax [914])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -848 [0xfffffffffffffcb0])) [10 rad+0 S8 A64])) "../src/tpdes.f":153 81 {*movdi_internal}
     (nil))
(insn 837 836 838 38 (set (reg:SF 22 xmm1 [orig:297 _211 ] [297])
        (mem:SF (reg/f:DI 0 ax [914]) [1 *rad_593(D)+0 S4 A32])) "../src/tpdes.f":153 127 {*movsf_internal}
     (nil))
(insn 838 837 839 38 (set (reg:SF 21 xmm0 [915])
        (div:SF (reg:SF 21 xmm0 [orig:296 _210 ] [296])
            (reg:SF 22 xmm1 [orig:297 _211 ] [297]))) "../src/tpdes.f":153 805 {*fop_sf_1}
     (nil))
(insn 839 838 840 38 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -188 [0xffffffffffffff44])) [1 dxi+0 S4 A32])
        (reg:SF 21 xmm0 [915])) "../src/tpdes.f":153 127 {*movsf_internal}
     (nil))
(insn 840 839 841 38 (set (reg:SF 21 xmm0 [orig:298 xi.70_212 ] [298])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -296 [0xfffffffffffffed8])) [1 xi+0 S4 A64])) "../src/tpdes.f":155 127 {*movsf_internal}
     (nil))
(insn 841 840 842 38 (set (reg/f:DI 0 ax [916])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 104 [0x68])) [10 adw+0 S8 A64])) "../src/tpdes.f":155 81 {*movdi_internal}
     (nil))
(insn 842 841 843 38 (set (reg:SF 22 xmm1 [orig:299 _213 ] [299])
        (mem:SF (reg/f:DI 0 ax [916]) [1 *adw_708(D)+0 S4 A32])) "../src/tpdes.f":155 127 {*movsf_internal}
     (nil))
(insn 843 842 844 38 (set (reg:SF 21 xmm0 [orig:300 _214 ] [300])
        (div:SF (reg:SF 21 xmm0 [orig:298 xi.70_212 ] [298])
            (reg:SF 22 xmm1 [orig:299 _213 ] [299]))) "../src/tpdes.f":155 805 {*fop_sf_1}
     (nil))
(insn 844 843 845 38 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -300 [0xfffffffffffffed4])) [1 xx+0 S4 A32])
        (reg:SF 21 xmm0 [orig:300 _214 ] [300])) "../src/tpdes.f":155 127 {*movsf_internal}
     (nil))
(insn 845 844 846 38 (set (reg:SF 21 xmm0 [orig:579 M.27_507 ] [579])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC19") [flags 0x2]) [1  S4 A32])) "../src/tpdes.f":157 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 2.0e+1 [0x0.ap+5])
        (nil)))
(insn 846 845 847 38 (set (reg/f:DI 0 ax [917])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 16 [0x10])) [10 blds+0 S8 A64])) "../src/tpdes.f":157 81 {*movdi_internal}
     (nil))
(insn 847 846 848 38 (set (reg:SF 23 xmm2 [orig:301 _215 ] [301])
        (mem:SF (reg/f:DI 0 ax [917]) [1 *blds_717(D)+0 S4 A32])) "../src/tpdes.f":157 127 {*movsf_internal}
     (nil))
(insn 848 847 849 38 (set (reg:SF 22 xmm1 [918])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC1") [flags 0x2]) [1  S4 A32])) "../src/tpdes.f":157 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 5.0e-1 [0x0.8p+0])
        (nil)))
(insn 849 848 850 38 (set (reg:SF 22 xmm1 [orig:302 _216 ] [302])
        (mult:SF (reg:SF 22 xmm1 [918])
            (reg:SF 23 xmm2 [orig:301 _215 ] [301]))) "../src/tpdes.f":157 802 {*fop_sf_comm}
     (nil))
(insn 850 849 851 38 (set (reg:SF 24 xmm3 [orig:303 xi.71_217 ] [303])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -296 [0xfffffffffffffed8])) [1 xi+0 S4 A64])) "../src/tpdes.f":157 127 {*movsf_internal}
     (nil))
(insn 851 850 852 38 (set (reg:SF 23 xmm2 [919])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC20") [flags 0x2]) [1  S4 A32])) "../src/tpdes.f":157 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 852 851 854 38 (set (reg:SF 23 xmm2 [orig:304 _218 ] [304])
        (minus:SF (reg:SF 23 xmm2 [919])
            (reg:SF 24 xmm3 [orig:303 xi.71_217 ] [303]))) "../src/tpdes.f":157 805 {*fop_sf_1}
     (nil))
(insn 854 852 855 38 (set (reg:SF 22 xmm1 [orig:306 _220 ] [306])
        (mult:SF (reg:SF 22 xmm1 [orig:302 _216 ] [302])
            (reg:SF 23 xmm2 [orig:305 _219 ] [305]))) "../src/tpdes.f":157 802 {*fop_sf_comm}
     (nil))
(insn 855 854 856 38 (set (reg/f:DI 0 ax [920])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 104 [0x68])) [10 adw+0 S8 A64])) "../src/tpdes.f":157 81 {*movdi_internal}
     (nil))
(insn 856 855 857 38 (set (reg:SF 23 xmm2 [orig:307 _221 ] [307])
        (mem:SF (reg/f:DI 0 ax [920]) [1 *adw_708(D)+0 S4 A32])) "../src/tpdes.f":157 127 {*movsf_internal}
     (nil))
(insn 857 856 858 38 (set (reg:SF 22 xmm1 [orig:672 _751 ] [672])
        (div:SF (reg:SF 22 xmm1 [orig:306 _220 ] [306])
            (reg:SF 23 xmm2 [orig:307 _221 ] [307]))) "../src/tpdes.f":157 805 {*fop_sf_1}
     (nil))
(insn 858 857 859 38 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 21 xmm0 [orig:579 M.27_507 ] [579])
            (reg:SF 22 xmm1 [orig:672 _751 ] [672]))) "../src/tpdes.f":157 51 {*cmpiusf}
     (nil))
(insn 859 858 860 38 (set (reg:QI 1 dx [orig:308 _222 ] [308])
        (gt:QI (reg:CCFPU 17 flags)
            (const_int 0 [0]))) "../src/tpdes.f":157 613 {*setcc_qi}
     (nil))
(insn 860 859 861 38 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 21 xmm0 [orig:579 M.27_507 ] [579])
            (reg:SF 21 xmm0 [orig:579 M.27_507 ] [579]))) "../src/tpdes.f":157 51 {*cmpiusf}
     (nil))
(insn 861 860 862 38 (set (reg:QI 0 ax [orig:309 _223 ] [309])
        (unordered:QI (reg:CCFPU 17 flags)
            (const_int 0 [0]))) "../src/tpdes.f":157 613 {*setcc_qi}
     (nil))
(insn 862 861 863 38 (parallel [
            (set (reg:QI 0 ax [orig:310 _224 ] [310])
                (ior:QI (reg:QI 0 ax [orig:309 _223 ] [309])
                    (reg:QI 1 dx [orig:308 _222 ] [308])))
            (clobber (reg:CC 17 flags))
        ]) "../src/tpdes.f":157 423 {*iorqi_1}
     (nil))
(insn 863 862 864 38 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:310 _224 ] [310])
            (const_int 0 [0]))) "../src/tpdes.f":157 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 864 863 865 38 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 866)
            (pc))) "../src/tpdes.f":157 617 {*jcc_1}
     (nil)
 -> 866)
;;  succ:       39 (FALLTHRU)
;;              40
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 579 670 672

;; basic block 39, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 38, next block 40, flags: (RTL, MODIFIED)
;;  pred:       38 (FALLTHRU)
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 670 672
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 672
;; lr  def 	 579
(note 865 864 10 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 10 865 866 39 (set (reg:SF 21 xmm0 [orig:579 M.27_507 ] [579])
        (reg:SF 22 xmm1 [orig:672 _751 ] [672])) "../src/tpdes.f":157 127 {*movsf_internal}
     (nil))
;;  succ:       40 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 579 670

;; basic block 40, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 39, next block 61, flags: (RTL, MODIFIED)
;;  pred:       38
;;              39 (FALLTHRU)
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 579 670
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 579
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 673 674 921 922 923 924 925 926 927 928 929 930 931 932 933 934 935 936 937 938 939 940 941 942 943 944 945 946 947 948 949 950 951 952 953 954 955 956 957 958 959 960 961 962 963 964 965 966 967 968 969
(code_label 866 10 867 40 28 (nil) [1 uses])
(note 867 866 868 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 868 867 869 40 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [1 arg+0 S4 A32])
        (reg:SF 21 xmm0 [orig:579 M.27_507 ] [579])) "../src/tpdes.f":157 127 {*movsf_internal}
     (nil))
(insn 869 868 870 40 (set (reg:SF 22 xmm1 [921])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [1 arg+0 S4 A32])) "../src/tpdes.f":158 127 {*movsf_internal}
     (nil))
(insn 870 869 871 40 (set (reg:V4SF 21 xmm0 [922])
        (mem/u/c:V4SF (symbol_ref/u:DI ("*lC2") [flags 0x2]) [1  S16 A128])) "../src/tpdes.f":158 1225 {movv4sf_internal}
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF -0.0 [-0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 871 870 873 40 (parallel [
            (set (reg:SF 21 xmm0 [orig:311 _225 ] [311])
                (neg:SF (reg:SF 22 xmm1 [921])))
            (use (reg:V4SF 21 xmm0 [922]))
            (clobber (reg:CC 17 flags))
        ]) "../src/tpdes.f":158 470 {*absnegsf2}
     (expr_list:REG_EQUAL (neg:SF (reg:SF 22 xmm1 [921]))
        (nil)))
(call_insn/u 873 871 874 40 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("expf") [flags 0x41]  <function_decl 0x14263b300 __builtin_expf>) [0 __builtin_expf S1 A8])
            (const_int 0 [0]))) "../src/tpdes.f":158 665 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (nil)))
(insn 874 873 875 40 (set (reg:SF 0 ax [923])
        (reg:SF 21 xmm0)) "../src/tpdes.f":158 127 {*movsf_internal}
     (nil))
(insn 875 874 876 40 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -196 [0xffffffffffffff3c])) [1 ek+0 S4 A32])
        (reg:SF 0 ax [923])) "../src/tpdes.f":158 127 {*movsf_internal}
     (nil))
(insn 876 875 877 40 (set (reg:SF 21 xmm0 [924])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -196 [0xffffffffffffff3c])) [1 ek+0 S4 A32])) "../src/tpdes.f":159 127 {*movsf_internal}
     (nil))
(insn 877 876 878 40 (set (reg:SF 21 xmm0 [orig:312 _226 ] [312])
        (mult:SF (reg:SF 21 xmm0 [924])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -196 [0xffffffffffffff3c])) [1 ek+0 S4 A32]))) "../src/tpdes.f":159 802 {*fop_sf_comm}
     (nil))
(insn 878 877 879 40 (set (reg:SF 22 xmm1 [925])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC20") [flags 0x2]) [1  S4 A32])) "../src/tpdes.f":159 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 879 878 1752 40 (set (reg:SF 22 xmm1 [925])
        (minus:SF (reg:SF 22 xmm1 [925])
            (reg:SF 21 xmm0 [orig:312 _226 ] [312]))) "../src/tpdes.f":159 805 {*fop_sf_1}
     (nil))
(insn 1752 879 880 40 (set (reg:SF 21 xmm0 [orig:313 _227 ] [313])
        (reg:SF 22 xmm1 [925])) "../src/tpdes.f":159 127 {*movsf_internal}
     (nil))
(insn 880 1752 881 40 (set (reg:SF 21 xmm0 [orig:314 _228 ] [314])
        (sqrt:SF (reg:SF 21 xmm0 [orig:313 _227 ] [313]))) "../src/tpdes.f":159 836 {*sqrtsf2_sse}
     (nil))
(insn 881 880 884 40 (set (reg:SF 22 xmm1 [926])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -196 [0xffffffffffffff3c])) [1 ek+0 S4 A32])) "../src/tpdes.f":159 127 {*movsf_internal}
     (nil))
(call_insn/u 884 881 886 40 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("atan2f") [flags 0x41]  <function_decl 0x14263a400 __builtin_atan2f>) [0 __builtin_atan2f S1 A8])
            (const_int 0 [0]))) "../src/tpdes.f":159 665 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (expr_list:SF (use (reg:SF 22 xmm1))
            (nil))))
(insn 886 884 887 40 (set (reg:SF 21 xmm0 [orig:316 _230 ] [316])
        (plus:SF (reg:SF 21 xmm0 [orig:315 _229 ] [315])
            (reg:SF 21 xmm0 [orig:315 _229 ] [315]))) "../src/tpdes.f":159 802 {*fop_sf_comm}
     (nil))
(insn 887 886 888 40 (set (reg:SF 22 xmm1 [orig:317 pi.72_231 ] [317])
        (mem/c:SF (symbol_ref:DI ("pi.3583") [flags 0x1c02]  <var_decl 0x1427f2120 pi>) [1 pi+0 S4 A32])) "../src/tpdes.f":159 127 {*movsf_internal}
     (nil))
(insn 888 887 889 40 (set (reg:SF 21 xmm0 [orig:318 _232 ] [318])
        (div:SF (reg:SF 21 xmm0 [orig:316 _230 ] [316])
            (reg:SF 22 xmm1 [orig:317 pi.72_231 ] [317]))) "../src/tpdes.f":159 805 {*fop_sf_1}
     (nil))
(insn 889 888 890 40 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -232 [0xffffffffffffff18])) [1 f+0 S4 A64])
        (reg:SF 21 xmm0 [orig:318 _232 ] [318])) "../src/tpdes.f":159 127 {*movsf_internal}
     (nil))
(insn 890 889 891 40 (set (reg/f:DI 0 ax [927])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 104 [0x68])) [10 adw+0 S8 A64])) "../src/tpdes.f":161 81 {*movdi_internal}
     (nil))
(insn 891 890 892 40 (set (reg:SF 22 xmm1 [orig:319 _233 ] [319])
        (mem:SF (reg/f:DI 0 ax [927]) [1 *adw_708(D)+0 S4 A32])) "../src/tpdes.f":161 127 {*movsf_internal}
     (nil))
(insn 892 891 893 40 (set (reg:SF 21 xmm0 [928])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC21") [flags 0x2]) [1  S4 A32])) "../src/tpdes.f":161 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 4.0e+0 [0x0.8p+3])
        (nil)))
(insn 893 892 894 40 (set (reg:SF 21 xmm0 [orig:320 _234 ] [320])
        (mult:SF (reg:SF 21 xmm0 [928])
            (reg:SF 22 xmm1 [orig:319 _233 ] [319]))) "../src/tpdes.f":161 802 {*fop_sf_comm}
     (nil))
(insn 894 893 895 40 (set (reg/f:DI 0 ax [929])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 16 [0x10])) [10 blds+0 S8 A64])) "../src/tpdes.f":161 81 {*movdi_internal}
     (nil))
(insn 895 894 896 40 (set (reg:SF 23 xmm2 [orig:321 _235 ] [321])
        (mem:SF (reg/f:DI 0 ax [929]) [1 *blds_717(D)+0 S4 A32])) "../src/tpdes.f":161 127 {*movsf_internal}
     (nil))
(insn 896 895 897 40 (set (reg:SF 22 xmm1 [orig:322 pi.73_236 ] [322])
        (mem/c:SF (symbol_ref:DI ("pi.3583") [flags 0x1c02]  <var_decl 0x1427f2120 pi>) [1 pi+0 S4 A32])) "../src/tpdes.f":161 127 {*movsf_internal}
     (nil))
(insn 897 896 898 40 (set (reg:SF 22 xmm1 [orig:323 _237 ] [323])
        (mult:SF (reg:SF 22 xmm1 [orig:322 pi.73_236 ] [322])
            (reg:SF 23 xmm2 [orig:321 _235 ] [321]))) "../src/tpdes.f":161 802 {*fop_sf_comm}
     (nil))
(insn 898 897 899 40 (set (reg:SF 23 xmm2 [orig:324 xi.74_238 ] [324])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -296 [0xfffffffffffffed8])) [1 xi+0 S4 A64])) "../src/tpdes.f":161 127 {*movsf_internal}
     (nil))
(insn 899 898 901 40 (set (reg:SF 22 xmm1 [orig:325 _239 ] [325])
        (mult:SF (reg:SF 22 xmm1 [orig:323 _237 ] [323])
            (reg:SF 23 xmm2 [orig:324 xi.74_238 ] [324]))) "../src/tpdes.f":161 802 {*fop_sf_comm}
     (nil))
(insn 901 899 903 40 (set (reg:SF 21 xmm0 [orig:327 _241 ] [327])
        (div:SF (reg:SF 21 xmm0 [orig:320 _234 ] [320])
            (reg:SF 22 xmm1 [orig:326 _240 ] [326]))) "../src/tpdes.f":161 805 {*fop_sf_1}
     (nil))
(insn 903 901 904 40 (set (reg:SF 21 xmm0 [orig:674 _757 ] [674])
        (mult:SF (reg:SF 21 xmm0 [orig:673 _756 ] [673])
            (reg:SF 21 xmm0 [orig:673 _756 ] [673]))) "../src/tpdes.f":161 802 {*fop_sf_comm}
     (nil))
(insn 904 903 905 40 (set (reg:SF 22 xmm1 [930])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC20") [flags 0x2]) [1  S4 A32])) "../src/tpdes.f":161 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 905 904 906 40 (set (reg:SF 21 xmm0 [orig:328 _242 ] [328])
        (plus:SF (reg:SF 21 xmm0 [orig:674 _757 ] [674])
            (reg:SF 22 xmm1 [930]))) "../src/tpdes.f":161 802 {*fop_sf_comm}
     (nil))
(insn 906 905 907 40 (set (reg:SF 21 xmm0 [orig:329 _243 ] [329])
        (sqrt:SF (reg:SF 21 xmm0 [orig:328 _242 ] [328]))) "../src/tpdes.f":161 836 {*sqrtsf2_sse}
     (nil))
(insn 907 906 908 40 (set (reg:SF 22 xmm1 [orig:330 f.75_244 ] [330])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -232 [0xffffffffffffff18])) [1 f+0 S4 A64])) "../src/tpdes.f":161 127 {*movsf_internal}
     (nil))
(insn 908 907 909 40 (set (reg:SF 21 xmm0 [931])
        (mult:SF (reg:SF 21 xmm0 [orig:329 _243 ] [329])
            (reg:SF 22 xmm1 [orig:330 f.75_244 ] [330]))) "../src/tpdes.f":161 802 {*fop_sf_comm}
     (nil))
(insn 909 908 910 40 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [1 fmod+0 S4 A32])
        (reg:SF 21 xmm0 [931])) "../src/tpdes.f":161 127 {*movsf_internal}
     (nil))
(insn 910 909 911 40 (set (reg:SF 21 xmm0 [orig:331 xx.76_245 ] [331])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -300 [0xfffffffffffffed4])) [1 xx+0 S4 A32])) "../src/tpdes.f":163 127 {*movsf_internal}
     (nil))
(insn 911 910 912 40 (set (reg:SF 21 xmm0 [orig:332 _246 ] [332])
        (mult:SF (reg:SF 21 xmm0 [orig:331 xx.76_245 ] [331])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -200 [0xffffffffffffff38])) [1 fmod+0 S4 A32]))) "../src/tpdes.f":163 802 {*fop_sf_comm}
     (nil))
(insn 912 911 913 40 (set (reg:SF 22 xmm1 [orig:333 xx.77_247 ] [333])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -300 [0xfffffffffffffed4])) [1 xx+0 S4 A32])) "../src/tpdes.f":163 127 {*movsf_internal}
     (nil))
(insn 913 912 914 40 (set (reg:SF 21 xmm0 [orig:334 _248 ] [334])
        (mult:SF (reg:SF 21 xmm0 [orig:332 _246 ] [332])
            (reg:SF 22 xmm1 [orig:333 xx.77_247 ] [333]))) "../src/tpdes.f":163 802 {*fop_sf_comm}
     (nil))
(insn 914 913 915 40 (set (reg:SF 23 xmm2 [orig:335 xx.78_249 ] [335])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -300 [0xfffffffffffffed4])) [1 xx+0 S4 A32])) "../src/tpdes.f":163 127 {*movsf_internal}
     (nil))
(insn 915 914 916 40 (set (reg:SF 22 xmm1 [orig:336 xx.79_250 ] [336])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -300 [0xfffffffffffffed4])) [1 xx+0 S4 A32])) "../src/tpdes.f":163 127 {*movsf_internal}
     (nil))
(insn 916 915 917 40 (set (reg:SF 22 xmm1 [orig:337 _251 ] [337])
        (mult:SF (reg:SF 22 xmm1 [orig:336 xx.79_250 ] [336])
            (reg:SF 23 xmm2 [orig:335 xx.78_249 ] [335]))) "../src/tpdes.f":163 802 {*fop_sf_comm}
     (nil))
(insn 917 916 918 40 (set (reg:SF 23 xmm2 [932])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC20") [flags 0x2]) [1  S4 A32])) "../src/tpdes.f":163 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 918 917 920 40 (set (reg:SF 22 xmm1 [orig:338 _252 ] [338])
        (plus:SF (reg:SF 22 xmm1 [orig:337 _251 ] [337])
            (reg:SF 23 xmm2 [932]))) "../src/tpdes.f":163 802 {*fop_sf_comm}
     (nil))
(insn 920 918 921 40 (set (reg:SF 21 xmm0 [orig:340 _254 ] [340])
        (div:SF (reg:SF 21 xmm0 [orig:334 _248 ] [334])
            (reg:SF 22 xmm1 [orig:339 _253 ] [339]))) "../src/tpdes.f":163 805 {*fop_sf_1}
     (nil))
(insn 921 920 922 40 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -236 [0xffffffffffffff14])) [1 g+0 S4 A32])
        (reg:SF 21 xmm0 [orig:340 _254 ] [340])) "../src/tpdes.f":163 127 {*movsf_internal}
     (nil))
(insn 922 921 923 40 (set (reg:SI 0 ax [933])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [2 i+0 S4 A32])) "../src/tpdes.f":164 82 {*movsi_internal}
     (nil))
(insn 923 922 924 40 (set (reg:DI 0 ax [orig:341 _255 ] [341])
        (sign_extend:DI (reg:SI 0 ax [933]))) "../src/tpdes.f":164 145 {*extendsidi2_rex64}
     (nil))
(insn 924 923 925 40 (parallel [
            (set (reg:DI 1 dx [orig:342 _256 ] [342])
                (plus:DI (reg:DI 0 ax [orig:341 _255 ] [341])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/tpdes.f":164 218 {*adddi_1}
     (nil))
(insn 925 924 926 40 (set (reg/f:DI 0 ax [934])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 56 [0x38])) [12 cd+0 S8 A64])) "../src/tpdes.f":164 81 {*movdi_internal}
     (nil))
(insn 926 925 927 40 (set (reg:SF 21 xmm0 [orig:343 _257 ] [343])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:342 _256 ] [342])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [934])) [1 *cd_588(D) S4 A32])) "../src/tpdes.f":164 127 {*movsf_internal}
     (nil))
(insn 927 926 928 40 (set (reg:SI 0 ax [935])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [2 i+0 S4 A32])) "../src/tpdes.f":164 82 {*movsi_internal}
     (nil))
(insn 928 927 929 40 (set (reg:DI 0 ax [orig:344 _258 ] [344])
        (sign_extend:DI (reg:SI 0 ax [935]))) "../src/tpdes.f":164 145 {*extendsidi2_rex64}
     (nil))
(insn 929 928 930 40 (parallel [
            (set (reg:DI 1 dx [orig:345 _259 ] [345])
                (plus:DI (reg:DI 0 ax [orig:344 _258 ] [344])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/tpdes.f":164 218 {*adddi_1}
     (nil))
(insn 930 929 931 40 (set (reg/f:DI 0 ax [936])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 48 [0x30])) [12 cl+0 S8 A64])) "../src/tpdes.f":164 81 {*movdi_internal}
     (nil))
(insn 931 930 932 40 (set (reg:SF 22 xmm1 [orig:346 _260 ] [346])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:345 _259 ] [345])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [936])) [1 *cl_589(D) S4 A32])) "../src/tpdes.f":164 127 {*movsf_internal}
     (nil))
(insn 932 931 933 40 (set (reg:SF 21 xmm0 [937])
        (div:SF (reg:SF 21 xmm0 [orig:343 _257 ] [343])
            (reg:SF 22 xmm1 [orig:346 _260 ] [346]))) "../src/tpdes.f":164 805 {*fop_sf_1}
     (nil))
(insn 933 932 934 40 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -204 [0xffffffffffffff34])) [1 dol+0 S4 A32])
        (reg:SF 21 xmm0 [937])) "../src/tpdes.f":164 127 {*movsf_internal}
     (nil))
(insn 934 933 935 40 (set (reg:SF 22 xmm1 [orig:347 xi.80_261 ] [347])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -296 [0xfffffffffffffed8])) [1 xi+0 S4 A64])) "../src/tpdes.f":165 127 {*movsf_internal}
     (nil))
(insn 935 934 936 40 (set (reg:SF 21 xmm0 [938])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC21") [flags 0x2]) [1  S4 A32])) "../src/tpdes.f":165 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 4.0e+0 [0x0.8p+3])
        (nil)))
(insn 936 935 937 40 (set (reg:SF 21 xmm0 [orig:348 _262 ] [348])
        (mult:SF (reg:SF 21 xmm0 [938])
            (reg:SF 22 xmm1 [orig:347 xi.80_261 ] [347]))) "../src/tpdes.f":165 802 {*fop_sf_comm}
     (nil))
(insn 937 936 938 40 (set (reg:SF 22 xmm1 [orig:349 g.81_263 ] [349])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -236 [0xffffffffffffff14])) [1 g+0 S4 A32])) "../src/tpdes.f":165 127 {*movsf_internal}
     (nil))
(insn 938 937 939 40 (set (reg:SF 21 xmm0 [orig:350 _264 ] [350])
        (mult:SF (reg:SF 21 xmm0 [orig:348 _262 ] [348])
            (reg:SF 22 xmm1 [orig:349 g.81_263 ] [349]))) "../src/tpdes.f":165 802 {*fop_sf_comm}
     (nil))
(insn 939 938 940 40 (set (reg:SF 23 xmm2 [orig:351 xx.82_265 ] [351])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -300 [0xfffffffffffffed4])) [1 xx+0 S4 A32])) "../src/tpdes.f":165 127 {*movsf_internal}
     (nil))
(insn 940 939 941 40 (set (reg:SF 22 xmm1 [939])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -204 [0xffffffffffffff34])) [1 dol+0 S4 A32])) "../src/tpdes.f":165 127 {*movsf_internal}
     (nil))
(insn 941 940 942 40 (set (reg:SF 22 xmm1 [orig:352 _266 ] [352])
        (div:SF (reg:SF 22 xmm1 [939])
            (reg:SF 23 xmm2 [orig:351 xx.82_265 ] [351]))) "../src/tpdes.f":165 805 {*fop_sf_1}
     (nil))
(insn 942 941 943 40 (set (reg:SF 23 xmm2 [940])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC20") [flags 0x2]) [1  S4 A32])) "../src/tpdes.f":165 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 943 942 1754 40 (set (reg:SF 23 xmm2 [940])
        (minus:SF (reg:SF 23 xmm2 [940])
            (reg:SF 22 xmm1 [orig:352 _266 ] [352]))) "../src/tpdes.f":165 805 {*fop_sf_1}
     (nil))
(insn 1754 943 945 40 (set (reg:SF 22 xmm1 [orig:353 _267 ] [353])
        (reg:SF 23 xmm2 [940])) "../src/tpdes.f":165 127 {*movsf_internal}
     (nil))
(insn 945 1754 946 40 (set (reg:SF 21 xmm0 [orig:355 _269 ] [355])
        (mult:SF (reg:SF 21 xmm0 [orig:350 _264 ] [350])
            (reg:SF 22 xmm1 [orig:354 _268 ] [354]))) "../src/tpdes.f":165 802 {*fop_sf_comm}
     (nil))
(insn 946 945 947 40 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -260 [0xfffffffffffffefc])) [1 rix1+0 S4 A32])
        (reg:SF 21 xmm0 [orig:355 _269 ] [355])) "../src/tpdes.f":165 127 {*movsf_internal}
     (nil))
(insn 947 946 948 40 (set (reg:SF 21 xmm0 [orig:356 xi.83_270 ] [356])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -296 [0xfffffffffffffed8])) [1 xi+0 S4 A64])) "../src/tpdes.f":166 127 {*movsf_internal}
     (nil))
(insn 948 947 949 40 (set (reg:SF 21 xmm0 [orig:357 _271 ] [357])
        (plus:SF (reg:SF 21 xmm0 [orig:356 xi.83_270 ] [356])
            (reg:SF 21 xmm0 [orig:356 xi.83_270 ] [356]))) "../src/tpdes.f":166 802 {*fop_sf_comm}
     (nil))
(insn 949 948 950 40 (set (reg:SF 22 xmm1 [orig:358 g.84_272 ] [358])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -236 [0xffffffffffffff14])) [1 g+0 S4 A32])) "../src/tpdes.f":166 127 {*movsf_internal}
     (nil))
(insn 950 949 951 40 (set (reg:SF 21 xmm0 [orig:359 _273 ] [359])
        (mult:SF (reg:SF 21 xmm0 [orig:357 _271 ] [357])
            (reg:SF 22 xmm1 [orig:358 g.84_272 ] [358]))) "../src/tpdes.f":166 802 {*fop_sf_comm}
     (nil))
(insn 951 950 952 40 (set (reg:SF 23 xmm2 [orig:360 xx.85_274 ] [360])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -300 [0xfffffffffffffed4])) [1 xx+0 S4 A32])) "../src/tpdes.f":166 127 {*movsf_internal}
     (nil))
(insn 952 951 953 40 (set (reg:SF 22 xmm1 [941])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -204 [0xffffffffffffff34])) [1 dol+0 S4 A32])) "../src/tpdes.f":166 127 {*movsf_internal}
     (nil))
(insn 953 952 954 40 (set (reg:SF 22 xmm1 [orig:361 _275 ] [361])
        (div:SF (reg:SF 22 xmm1 [941])
            (reg:SF 23 xmm2 [orig:360 xx.85_274 ] [360]))) "../src/tpdes.f":166 805 {*fop_sf_1}
     (nil))
(insn 954 953 955 40 (set (reg:SF 23 xmm2 [942])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC20") [flags 0x2]) [1  S4 A32])) "../src/tpdes.f":166 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 955 954 1756 40 (set (reg:SF 23 xmm2 [942])
        (minus:SF (reg:SF 23 xmm2 [942])
            (reg:SF 22 xmm1 [orig:361 _275 ] [361]))) "../src/tpdes.f":166 805 {*fop_sf_1}
     (nil))
(insn 1756 955 957 40 (set (reg:SF 22 xmm1 [orig:362 _276 ] [362])
        (reg:SF 23 xmm2 [942])) "../src/tpdes.f":166 127 {*movsf_internal}
     (nil))
(insn 957 1756 958 40 (set (reg:SF 21 xmm0 [orig:364 _278 ] [364])
        (mult:SF (reg:SF 21 xmm0 [orig:359 _273 ] [359])
            (reg:SF 22 xmm1 [orig:363 _277 ] [363]))) "../src/tpdes.f":166 802 {*fop_sf_comm}
     (nil))
(insn 958 957 959 40 (set (reg:SF 23 xmm2 [orig:365 xx.86_279 ] [365])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -300 [0xfffffffffffffed4])) [1 xx+0 S4 A32])) "../src/tpdes.f":166 127 {*movsf_internal}
     (nil))
(insn 959 958 960 40 (set (reg:SF 22 xmm1 [orig:366 xx.87_280 ] [366])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -300 [0xfffffffffffffed4])) [1 xx+0 S4 A32])) "../src/tpdes.f":166 127 {*movsf_internal}
     (nil))
(insn 960 959 961 40 (set (reg:SF 22 xmm1 [orig:367 _281 ] [367])
        (mult:SF (reg:SF 22 xmm1 [orig:366 xx.87_280 ] [366])
            (reg:SF 23 xmm2 [orig:365 xx.86_279 ] [365]))) "../src/tpdes.f":166 802 {*fop_sf_comm}
     (nil))
(insn 961 960 962 40 (set (reg:SF 23 xmm2 [943])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC20") [flags 0x2]) [1  S4 A32])) "../src/tpdes.f":166 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 962 961 964 40 (set (reg:SF 22 xmm1 [orig:368 _282 ] [368])
        (plus:SF (reg:SF 22 xmm1 [orig:367 _281 ] [367])
            (reg:SF 23 xmm2 [943]))) "../src/tpdes.f":166 802 {*fop_sf_comm}
     (nil))
(insn 964 962 965 40 (set (reg:SF 21 xmm0 [orig:370 _284 ] [370])
        (div:SF (reg:SF 21 xmm0 [orig:364 _278 ] [364])
            (reg:SF 22 xmm1 [orig:369 _283 ] [369]))) "../src/tpdes.f":166 805 {*fop_sf_1}
     (nil))
(insn 965 964 966 40 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -264 [0xfffffffffffffef8])) [1 rix2+0 S4 A64])
        (reg:SF 21 xmm0 [orig:370 _284 ] [370])) "../src/tpdes.f":166 127 {*movsf_internal}
     (nil))
(insn 966 965 967 40 (set (reg:SF 22 xmm1 [orig:371 xi.88_285 ] [371])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -296 [0xfffffffffffffed8])) [1 xi+0 S4 A64])) "../src/tpdes.f":167 127 {*movsf_internal}
     (nil))
(insn 967 966 968 40 (set (reg:SF 21 xmm0 [944])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC21") [flags 0x2]) [1  S4 A32])) "../src/tpdes.f":167 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 4.0e+0 [0x0.8p+3])
        (nil)))
(insn 968 967 969 40 (set (reg:SF 21 xmm0 [orig:372 _286 ] [372])
        (mult:SF (reg:SF 21 xmm0 [944])
            (reg:SF 22 xmm1 [orig:371 xi.88_285 ] [371]))) "../src/tpdes.f":167 802 {*fop_sf_comm}
     (nil))
(insn 969 968 970 40 (set (reg:SF 22 xmm1 [orig:373 g.89_287 ] [373])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -236 [0xffffffffffffff14])) [1 g+0 S4 A32])) "../src/tpdes.f":167 127 {*movsf_internal}
     (nil))
(insn 970 969 971 40 (set (reg:SF 21 xmm0 [orig:374 _288 ] [374])
        (mult:SF (reg:SF 21 xmm0 [orig:372 _286 ] [372])
            (reg:SF 22 xmm1 [orig:373 g.89_287 ] [373]))) "../src/tpdes.f":167 802 {*fop_sf_comm}
     (nil))
(insn 971 970 972 40 (set (reg:SF 22 xmm1 [orig:375 xx.90_289 ] [375])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -300 [0xfffffffffffffed4])) [1 xx+0 S4 A32])) "../src/tpdes.f":167 127 {*movsf_internal}
     (nil))
(insn 972 971 973 40 (set (reg:SF 22 xmm1 [orig:376 _290 ] [376])
        (mult:SF (reg:SF 22 xmm1 [orig:375 xx.90_289 ] [375])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -204 [0xffffffffffffff34])) [1 dol+0 S4 A32]))) "../src/tpdes.f":167 802 {*fop_sf_comm}
     (nil))
(insn 973 972 974 40 (set (reg:SF 23 xmm2 [945])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC20") [flags 0x2]) [1  S4 A32])) "../src/tpdes.f":167 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 974 973 976 40 (set (reg:SF 22 xmm1 [orig:377 _291 ] [377])
        (plus:SF (reg:SF 22 xmm1 [orig:376 _290 ] [376])
            (reg:SF 23 xmm2 [945]))) "../src/tpdes.f":167 802 {*fop_sf_comm}
     (nil))
(insn 976 974 977 40 (set (reg:SF 21 xmm0 [orig:379 _293 ] [379])
        (mult:SF (reg:SF 21 xmm0 [orig:374 _288 ] [374])
            (reg:SF 22 xmm1 [orig:378 _292 ] [378]))) "../src/tpdes.f":167 802 {*fop_sf_comm}
     (nil))
(insn 977 976 978 40 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -276 [0xfffffffffffffeec])) [1 rjx1+0 S4 A32])
        (reg:SF 21 xmm0 [orig:379 _293 ] [379])) "../src/tpdes.f":167 127 {*movsf_internal}
     (nil))
(insn 978 977 979 40 (set (reg:SF 21 xmm0 [orig:380 xi.91_294 ] [380])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -296 [0xfffffffffffffed8])) [1 xi+0 S4 A64])) "../src/tpdes.f":168 127 {*movsf_internal}
     (nil))
(insn 979 978 980 40 (set (reg:SF 21 xmm0 [orig:381 _295 ] [381])
        (plus:SF (reg:SF 21 xmm0 [orig:380 xi.91_294 ] [380])
            (reg:SF 21 xmm0 [orig:380 xi.91_294 ] [380]))) "../src/tpdes.f":168 802 {*fop_sf_comm}
     (nil))
(insn 980 979 981 40 (set (reg:SF 22 xmm1 [orig:382 g.92_296 ] [382])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -236 [0xffffffffffffff14])) [1 g+0 S4 A32])) "../src/tpdes.f":168 127 {*movsf_internal}
     (nil))
(insn 981 980 982 40 (set (reg:SF 21 xmm0 [orig:383 _297 ] [383])
        (mult:SF (reg:SF 21 xmm0 [orig:381 _295 ] [381])
            (reg:SF 22 xmm1 [orig:382 g.92_296 ] [382]))) "../src/tpdes.f":168 802 {*fop_sf_comm}
     (nil))
(insn 982 981 983 40 (set (reg:SF 22 xmm1 [orig:384 xx.93_298 ] [384])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -300 [0xfffffffffffffed4])) [1 xx+0 S4 A32])) "../src/tpdes.f":168 127 {*movsf_internal}
     (nil))
(insn 983 982 984 40 (set (reg:SF 22 xmm1 [orig:385 _299 ] [385])
        (mult:SF (reg:SF 22 xmm1 [orig:384 xx.93_298 ] [384])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -204 [0xffffffffffffff34])) [1 dol+0 S4 A32]))) "../src/tpdes.f":168 802 {*fop_sf_comm}
     (nil))
(insn 984 983 985 40 (set (reg:SF 23 xmm2 [946])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC20") [flags 0x2]) [1  S4 A32])) "../src/tpdes.f":168 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 985 984 987 40 (set (reg:SF 22 xmm1 [orig:386 _300 ] [386])
        (plus:SF (reg:SF 22 xmm1 [orig:385 _299 ] [385])
            (reg:SF 23 xmm2 [946]))) "../src/tpdes.f":168 802 {*fop_sf_comm}
     (nil))
(insn 987 985 988 40 (set (reg:SF 21 xmm0 [orig:388 _302 ] [388])
        (mult:SF (reg:SF 21 xmm0 [orig:383 _297 ] [383])
            (reg:SF 22 xmm1 [orig:387 _301 ] [387]))) "../src/tpdes.f":168 802 {*fop_sf_comm}
     (nil))
(insn 988 987 989 40 (set (reg:SF 22 xmm1 [orig:389 xx.94_303 ] [389])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -300 [0xfffffffffffffed4])) [1 xx+0 S4 A32])) "../src/tpdes.f":168 127 {*movsf_internal}
     (nil))
(insn 989 988 990 40 (set (reg:SF 21 xmm0 [orig:390 _304 ] [390])
        (mult:SF (reg:SF 21 xmm0 [orig:388 _302 ] [388])
            (reg:SF 22 xmm1 [orig:389 xx.94_303 ] [389]))) "../src/tpdes.f":168 802 {*fop_sf_comm}
     (nil))
(insn 990 989 991 40 (set (reg:SF 22 xmm1 [orig:391 xx.95_305 ] [391])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -300 [0xfffffffffffffed4])) [1 xx+0 S4 A32])) "../src/tpdes.f":168 127 {*movsf_internal}
     (nil))
(insn 991 990 992 40 (set (reg:SF 21 xmm0 [orig:392 _306 ] [392])
        (mult:SF (reg:SF 21 xmm0 [orig:390 _304 ] [390])
            (reg:SF 22 xmm1 [orig:391 xx.95_305 ] [391]))) "../src/tpdes.f":168 802 {*fop_sf_comm}
     (nil))
(insn 992 991 993 40 (set (reg:SF 23 xmm2 [orig:393 xx.96_307 ] [393])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -300 [0xfffffffffffffed4])) [1 xx+0 S4 A32])) "../src/tpdes.f":168 127 {*movsf_internal}
     (nil))
(insn 993 992 994 40 (set (reg:SF 22 xmm1 [orig:394 xx.97_308 ] [394])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -300 [0xfffffffffffffed4])) [1 xx+0 S4 A32])) "../src/tpdes.f":168 127 {*movsf_internal}
     (nil))
(insn 994 993 995 40 (set (reg:SF 22 xmm1 [orig:395 _309 ] [395])
        (mult:SF (reg:SF 22 xmm1 [orig:394 xx.97_308 ] [394])
            (reg:SF 23 xmm2 [orig:393 xx.96_307 ] [393]))) "../src/tpdes.f":168 802 {*fop_sf_comm}
     (nil))
(insn 995 994 996 40 (set (reg:SF 23 xmm2 [947])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC20") [flags 0x2]) [1  S4 A32])) "../src/tpdes.f":168 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 996 995 998 40 (set (reg:SF 22 xmm1 [orig:396 _310 ] [396])
        (plus:SF (reg:SF 22 xmm1 [orig:395 _309 ] [395])
            (reg:SF 23 xmm2 [947]))) "../src/tpdes.f":168 802 {*fop_sf_comm}
     (nil))
(insn 998 996 999 40 (set (reg:SF 21 xmm0 [orig:398 _312 ] [398])
        (div:SF (reg:SF 21 xmm0 [orig:392 _306 ] [392])
            (reg:SF 22 xmm1 [orig:397 _311 ] [397]))) "../src/tpdes.f":168 805 {*fop_sf_1}
     (nil))
(insn 999 998 1000 40 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -280 [0xfffffffffffffee8])) [1 rjx2+0 S4 A64])
        (reg:SF 21 xmm0 [orig:398 _312 ] [398])) "../src/tpdes.f":168 127 {*movsf_internal}
     (nil))
(insn 1000 999 1001 40 (set (reg:SF 21 xmm0 [orig:399 rix1.98_313 ] [399])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -260 [0xfffffffffffffefc])) [1 rix1+0 S4 A32])) "../src/tpdes.f":169 127 {*movsf_internal}
     (nil))
(insn 1001 1000 1002 40 (set (reg:SF 21 xmm0 [orig:400 _314 ] [400])
        (mult:SF (reg:SF 21 xmm0 [orig:399 rix1.98_313 ] [399])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -188 [0xffffffffffffff44])) [1 dxi+0 S4 A32]))) "../src/tpdes.f":169 802 {*fop_sf_comm}
     (nil))
(insn 1002 1001 1003 40 (set (reg:SF 22 xmm1 [orig:401 ri1.99_315 ] [401])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -252 [0xffffffffffffff04])) [1 ri1+0 S4 A32])) "../src/tpdes.f":169 127 {*movsf_internal}
     (nil))
(insn 1003 1002 1004 40 (set (reg:SF 21 xmm0 [orig:402 _316 ] [402])
        (plus:SF (reg:SF 21 xmm0 [orig:400 _314 ] [400])
            (reg:SF 22 xmm1 [orig:401 ri1.99_315 ] [401]))) "../src/tpdes.f":169 802 {*fop_sf_comm}
     (nil))
(insn 1004 1003 1005 40 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -252 [0xffffffffffffff04])) [1 ri1+0 S4 A32])
        (reg:SF 21 xmm0 [orig:402 _316 ] [402])) "../src/tpdes.f":169 127 {*movsf_internal}
     (nil))
(insn 1005 1004 1006 40 (set (reg:SF 21 xmm0 [orig:403 rix2.100_317 ] [403])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -264 [0xfffffffffffffef8])) [1 rix2+0 S4 A64])) "../src/tpdes.f":170 127 {*movsf_internal}
     (nil))
(insn 1006 1005 1007 40 (set (reg:SF 21 xmm0 [orig:404 _318 ] [404])
        (mult:SF (reg:SF 21 xmm0 [orig:403 rix2.100_317 ] [403])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -188 [0xffffffffffffff44])) [1 dxi+0 S4 A32]))) "../src/tpdes.f":170 802 {*fop_sf_comm}
     (nil))
(insn 1007 1006 1008 40 (set (reg:SF 22 xmm1 [orig:405 ri2.101_319 ] [405])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -256 [0xffffffffffffff00])) [1 ri2+0 S4 A128])) "../src/tpdes.f":170 127 {*movsf_internal}
     (nil))
(insn 1008 1007 1009 40 (set (reg:SF 21 xmm0 [orig:406 _320 ] [406])
        (plus:SF (reg:SF 21 xmm0 [orig:404 _318 ] [404])
            (reg:SF 22 xmm1 [orig:405 ri2.101_319 ] [405]))) "../src/tpdes.f":170 802 {*fop_sf_comm}
     (nil))
(insn 1009 1008 1010 40 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -256 [0xffffffffffffff00])) [1 ri2+0 S4 A128])
        (reg:SF 21 xmm0 [orig:406 _320 ] [406])) "../src/tpdes.f":170 127 {*movsf_internal}
     (nil))
(insn 1010 1009 1011 40 (set (reg:SF 21 xmm0 [orig:407 rjx1.102_321 ] [407])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -276 [0xfffffffffffffeec])) [1 rjx1+0 S4 A32])) "../src/tpdes.f":171 127 {*movsf_internal}
     (nil))
(insn 1011 1010 1012 40 (set (reg:SF 21 xmm0 [orig:408 _322 ] [408])
        (mult:SF (reg:SF 21 xmm0 [orig:407 rjx1.102_321 ] [407])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -188 [0xffffffffffffff44])) [1 dxi+0 S4 A32]))) "../src/tpdes.f":171 802 {*fop_sf_comm}
     (nil))
(insn 1012 1011 1013 40 (set (reg:SF 22 xmm1 [orig:409 rj1.103_323 ] [409])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -268 [0xfffffffffffffef4])) [1 rj1+0 S4 A32])) "../src/tpdes.f":171 127 {*movsf_internal}
     (nil))
(insn 1013 1012 1014 40 (set (reg:SF 21 xmm0 [orig:410 _324 ] [410])
        (plus:SF (reg:SF 21 xmm0 [orig:408 _322 ] [408])
            (reg:SF 22 xmm1 [orig:409 rj1.103_323 ] [409]))) "../src/tpdes.f":171 802 {*fop_sf_comm}
     (nil))
(insn 1014 1013 1015 40 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -268 [0xfffffffffffffef4])) [1 rj1+0 S4 A32])
        (reg:SF 21 xmm0 [orig:410 _324 ] [410])) "../src/tpdes.f":171 127 {*movsf_internal}
     (nil))
(insn 1015 1014 1016 40 (set (reg:SF 21 xmm0 [orig:411 rjx2.104_325 ] [411])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -280 [0xfffffffffffffee8])) [1 rjx2+0 S4 A64])) "../src/tpdes.f":172 127 {*movsf_internal}
     (nil))
(insn 1016 1015 1017 40 (set (reg:SF 21 xmm0 [orig:412 _326 ] [412])
        (mult:SF (reg:SF 21 xmm0 [orig:411 rjx2.104_325 ] [411])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -188 [0xffffffffffffff44])) [1 dxi+0 S4 A32]))) "../src/tpdes.f":172 802 {*fop_sf_comm}
     (nil))
(insn 1017 1016 1018 40 (set (reg:SF 22 xmm1 [orig:413 rj2.105_327 ] [413])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 rj2+0 S4 A128])) "../src/tpdes.f":172 127 {*movsf_internal}
     (nil))
(insn 1018 1017 1019 40 (set (reg:SF 21 xmm0 [orig:414 _328 ] [414])
        (plus:SF (reg:SF 21 xmm0 [orig:412 _326 ] [412])
            (reg:SF 22 xmm1 [orig:413 rj2.105_327 ] [413]))) "../src/tpdes.f":172 802 {*fop_sf_comm}
     (nil))
(insn 1019 1018 1020 40 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 rj2+0 S4 A128])
        (reg:SF 21 xmm0 [orig:414 _328 ] [414])) "../src/tpdes.f":172 127 {*movsf_internal}
     (nil))
(insn 1020 1019 1021 40 (set (reg/f:DI 0 ax [948])
        (symbol_ref/f:DI ("*lC3") [flags 0x2]  <var_decl 0x143135870 *lC3>)) "../src/tpdes.f":173 81 {*movdi_internal}
     (nil))
(insn 1021 1020 1022 40 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -792 [0xfffffffffffffce8])) [6 dt_parm.28.common.filename+0 S8 A64])
        (reg/f:DI 0 ax [948])) "../src/tpdes.f":173 81 {*movdi_internal}
     (nil))
(insn 1022 1021 1023 40 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -784 [0xfffffffffffffcf0])) [2 dt_parm.28.common.line+0 S4 A128])
        (const_int 173 [0xad])) "../src/tpdes.f":173 82 {*movsi_internal}
     (nil))
(insn 1023 1022 1024 40 (set (reg/f:DI 0 ax [949])
        (symbol_ref/f:DI ("*lC22") [flags 0x2]  <var_decl 0x143135c60 *lC22>)) "../src/tpdes.f":173 81 {*movdi_internal}
     (nil))
(insn 1024 1023 1025 40 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -728 [0xfffffffffffffd28])) [6 dt_parm.28.format+0 S8 A64])
        (reg/f:DI 0 ax [949])) "../src/tpdes.f":173 81 {*movdi_internal}
     (nil))
(insn 1025 1024 1026 40 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -720 [0xfffffffffffffd30])) [2 dt_parm.28.format_len+0 S4 A128])
        (const_int 16 [0x10])) "../src/tpdes.f":173 82 {*movsi_internal}
     (nil))
(insn 1026 1025 1027 40 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -800 [0xfffffffffffffce0])) [2 dt_parm.28.common.flags+0 S4 A128])
        (const_int 4096 [0x1000])) "../src/tpdes.f":173 82 {*movsi_internal}
     (nil))
(insn 1027 1026 1028 40 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -796 [0xfffffffffffffce4])) [2 dt_parm.28.common.unit+0 S4 A32])
        (const_int 6 [0x6])) "../src/tpdes.f":173 82 {*movsi_internal}
     (nil))
(insn 1028 1027 1029 40 (parallel [
            (set (reg:DI 0 ax [950])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -800 [0xfffffffffffffce0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/tpdes.f":173 218 {*adddi_1}
     (nil))
(insn 1029 1028 1030 40 (set (reg:DI 5 di)
        (reg:DI 0 ax [950])) "../src/tpdes.f":173 81 {*movdi_internal}
     (nil))
(call_insn 1030 1029 1031 40 (call (mem:QI (symbol_ref:DI ("_gfortran_st_write") [flags 0x41]  <function_decl 0x1427e0800 _gfortran_st_write>) [0 _gfortran_st_write S1 A8])
        (const_int 0 [0])) "../src/tpdes.f":173 655 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 1031 1030 1032 40 (parallel [
            (set (reg:DI 2 cx [951])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -296 [0xfffffffffffffed8])))
            (clobber (reg:CC 17 flags))
        ]) "../src/tpdes.f":173 218 {*adddi_1}
     (nil))
(insn 1032 1031 1033 40 (parallel [
            (set (reg:DI 0 ax [952])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -800 [0xfffffffffffffce0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/tpdes.f":173 218 {*adddi_1}
     (nil))
(insn 1033 1032 1034 40 (set (reg:SI 1 dx)
        (const_int 4 [0x4])) "../src/tpdes.f":173 82 {*movsi_internal}
     (nil))
(insn 1034 1033 1035 40 (set (reg:DI 4 si)
        (reg:DI 2 cx [951])) "../src/tpdes.f":173 81 {*movdi_internal}
     (nil))
(insn 1035 1034 1036 40 (set (reg:DI 5 di)
        (reg:DI 0 ax [952])) "../src/tpdes.f":173 81 {*movdi_internal}
     (nil))
(call_insn 1036 1035 1037 40 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_real_write") [flags 0x41]  <function_decl 0x1427d4d00 _gfortran_transfer_real_write>) [0 _gfortran_transfer_real_write S1 A8])
        (const_int 0 [0])) "../src/tpdes.f":173 655 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 1037 1036 1038 40 (parallel [
            (set (reg:DI 2 cx [953])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -300 [0xfffffffffffffed4])))
            (clobber (reg:CC 17 flags))
        ]) "../src/tpdes.f":173 218 {*adddi_1}
     (nil))
(insn 1038 1037 1039 40 (parallel [
            (set (reg:DI 0 ax [954])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -800 [0xfffffffffffffce0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/tpdes.f":173 218 {*adddi_1}
     (nil))
(insn 1039 1038 1040 40 (set (reg:SI 1 dx)
        (const_int 4 [0x4])) "../src/tpdes.f":173 82 {*movsi_internal}
     (nil))
(insn 1040 1039 1041 40 (set (reg:DI 4 si)
        (reg:DI 2 cx [953])) "../src/tpdes.f":173 81 {*movdi_internal}
     (nil))
(insn 1041 1040 1042 40 (set (reg:DI 5 di)
        (reg:DI 0 ax [954])) "../src/tpdes.f":173 81 {*movdi_internal}
     (nil))
(call_insn 1042 1041 1043 40 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_real_write") [flags 0x41]  <function_decl 0x1427d4d00 _gfortran_transfer_real_write>) [0 _gfortran_transfer_real_write S1 A8])
        (const_int 0 [0])) "../src/tpdes.f":173 655 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 1043 1042 1044 40 (parallel [
            (set (reg:DI 2 cx [955])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -232 [0xffffffffffffff18])))
            (clobber (reg:CC 17 flags))
        ]) "../src/tpdes.f":173 218 {*adddi_1}
     (nil))
(insn 1044 1043 1045 40 (parallel [
            (set (reg:DI 0 ax [956])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -800 [0xfffffffffffffce0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/tpdes.f":173 218 {*adddi_1}
     (nil))
(insn 1045 1044 1046 40 (set (reg:SI 1 dx)
        (const_int 4 [0x4])) "../src/tpdes.f":173 82 {*movsi_internal}
     (nil))
(insn 1046 1045 1047 40 (set (reg:DI 4 si)
        (reg:DI 2 cx [955])) "../src/tpdes.f":173 81 {*movdi_internal}
     (nil))
(insn 1047 1046 1048 40 (set (reg:DI 5 di)
        (reg:DI 0 ax [956])) "../src/tpdes.f":173 81 {*movdi_internal}
     (nil))
(call_insn 1048 1047 1049 40 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_real_write") [flags 0x41]  <function_decl 0x1427d4d00 _gfortran_transfer_real_write>) [0 _gfortran_transfer_real_write S1 A8])
        (const_int 0 [0])) "../src/tpdes.f":173 655 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 1049 1048 1050 40 (parallel [
            (set (reg:DI 2 cx [957])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -236 [0xffffffffffffff14])))
            (clobber (reg:CC 17 flags))
        ]) "../src/tpdes.f":173 218 {*adddi_1}
     (nil))
(insn 1050 1049 1051 40 (parallel [
            (set (reg:DI 0 ax [958])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -800 [0xfffffffffffffce0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/tpdes.f":173 218 {*adddi_1}
     (nil))
(insn 1051 1050 1052 40 (set (reg:SI 1 dx)
        (const_int 4 [0x4])) "../src/tpdes.f":173 82 {*movsi_internal}
     (nil))
(insn 1052 1051 1053 40 (set (reg:DI 4 si)
        (reg:DI 2 cx [957])) "../src/tpdes.f":173 81 {*movdi_internal}
     (nil))
(insn 1053 1052 1054 40 (set (reg:DI 5 di)
        (reg:DI 0 ax [958])) "../src/tpdes.f":173 81 {*movdi_internal}
     (nil))
(call_insn 1054 1053 1055 40 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_real_write") [flags 0x41]  <function_decl 0x1427d4d00 _gfortran_transfer_real_write>) [0 _gfortran_transfer_real_write S1 A8])
        (const_int 0 [0])) "../src/tpdes.f":173 655 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 1055 1054 1056 40 (parallel [
            (set (reg:DI 2 cx [959])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -260 [0xfffffffffffffefc])))
            (clobber (reg:CC 17 flags))
        ]) "../src/tpdes.f":173 218 {*adddi_1}
     (nil))
(insn 1056 1055 1057 40 (parallel [
            (set (reg:DI 0 ax [960])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -800 [0xfffffffffffffce0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/tpdes.f":173 218 {*adddi_1}
     (nil))
(insn 1057 1056 1058 40 (set (reg:SI 1 dx)
        (const_int 4 [0x4])) "../src/tpdes.f":173 82 {*movsi_internal}
     (nil))
(insn 1058 1057 1059 40 (set (reg:DI 4 si)
        (reg:DI 2 cx [959])) "../src/tpdes.f":173 81 {*movdi_internal}
     (nil))
(insn 1059 1058 1060 40 (set (reg:DI 5 di)
        (reg:DI 0 ax [960])) "../src/tpdes.f":173 81 {*movdi_internal}
     (nil))
(call_insn 1060 1059 1061 40 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_real_write") [flags 0x41]  <function_decl 0x1427d4d00 _gfortran_transfer_real_write>) [0 _gfortran_transfer_real_write S1 A8])
        (const_int 0 [0])) "../src/tpdes.f":173 655 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 1061 1060 1062 40 (parallel [
            (set (reg:DI 2 cx [961])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -264 [0xfffffffffffffef8])))
            (clobber (reg:CC 17 flags))
        ]) "../src/tpdes.f":173 218 {*adddi_1}
     (nil))
(insn 1062 1061 1063 40 (parallel [
            (set (reg:DI 0 ax [962])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -800 [0xfffffffffffffce0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/tpdes.f":173 218 {*adddi_1}
     (nil))
(insn 1063 1062 1064 40 (set (reg:SI 1 dx)
        (const_int 4 [0x4])) "../src/tpdes.f":173 82 {*movsi_internal}
     (nil))
(insn 1064 1063 1065 40 (set (reg:DI 4 si)
        (reg:DI 2 cx [961])) "../src/tpdes.f":173 81 {*movdi_internal}
     (nil))
(insn 1065 1064 1066 40 (set (reg:DI 5 di)
        (reg:DI 0 ax [962])) "../src/tpdes.f":173 81 {*movdi_internal}
     (nil))
(call_insn 1066 1065 1067 40 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_real_write") [flags 0x41]  <function_decl 0x1427d4d00 _gfortran_transfer_real_write>) [0 _gfortran_transfer_real_write S1 A8])
        (const_int 0 [0])) "../src/tpdes.f":173 655 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 1067 1066 1068 40 (parallel [
            (set (reg:DI 2 cx [963])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -276 [0xfffffffffffffeec])))
            (clobber (reg:CC 17 flags))
        ]) "../src/tpdes.f":173 218 {*adddi_1}
     (nil))
(insn 1068 1067 1069 40 (parallel [
            (set (reg:DI 0 ax [964])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -800 [0xfffffffffffffce0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/tpdes.f":173 218 {*adddi_1}
     (nil))
(insn 1069 1068 1070 40 (set (reg:SI 1 dx)
        (const_int 4 [0x4])) "../src/tpdes.f":173 82 {*movsi_internal}
     (nil))
(insn 1070 1069 1071 40 (set (reg:DI 4 si)
        (reg:DI 2 cx [963])) "../src/tpdes.f":173 81 {*movdi_internal}
     (nil))
(insn 1071 1070 1072 40 (set (reg:DI 5 di)
        (reg:DI 0 ax [964])) "../src/tpdes.f":173 81 {*movdi_internal}
     (nil))
(call_insn 1072 1071 1073 40 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_real_write") [flags 0x41]  <function_decl 0x1427d4d00 _gfortran_transfer_real_write>) [0 _gfortran_transfer_real_write S1 A8])
        (const_int 0 [0])) "../src/tpdes.f":173 655 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 1073 1072 1074 40 (parallel [
            (set (reg:DI 2 cx [965])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -280 [0xfffffffffffffee8])))
            (clobber (reg:CC 17 flags))
        ]) "../src/tpdes.f":173 218 {*adddi_1}
     (nil))
(insn 1074 1073 1075 40 (parallel [
            (set (reg:DI 0 ax [966])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -800 [0xfffffffffffffce0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/tpdes.f":173 218 {*adddi_1}
     (nil))
(insn 1075 1074 1076 40 (set (reg:SI 1 dx)
        (const_int 4 [0x4])) "../src/tpdes.f":173 82 {*movsi_internal}
     (nil))
(insn 1076 1075 1077 40 (set (reg:DI 4 si)
        (reg:DI 2 cx [965])) "../src/tpdes.f":173 81 {*movdi_internal}
     (nil))
(insn 1077 1076 1078 40 (set (reg:DI 5 di)
        (reg:DI 0 ax [966])) "../src/tpdes.f":173 81 {*movdi_internal}
     (nil))
(call_insn 1078 1077 1079 40 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_real_write") [flags 0x41]  <function_decl 0x1427d4d00 _gfortran_transfer_real_write>) [0 _gfortran_transfer_real_write S1 A8])
        (const_int 0 [0])) "../src/tpdes.f":173 655 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 1079 1078 1080 40 (parallel [
            (set (reg:DI 0 ax [967])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -800 [0xfffffffffffffce0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/tpdes.f":173 218 {*adddi_1}
     (nil))
(insn 1080 1079 1081 40 (set (reg:DI 5 di)
        (reg:DI 0 ax [967])) "../src/tpdes.f":173 81 {*movdi_internal}
     (nil))
(call_insn 1081 1080 1082 40 (call (mem:QI (symbol_ref:DI ("_gfortran_st_write_done") [flags 0x41]  <function_decl 0x1427e4300 _gfortran_st_write_done>) [0 _gfortran_st_write_done S1 A8])
        (const_int 0 [0])) "../src/tpdes.f":173 655 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 1082 1081 1083 40 (set (reg:SI 0 ax [968])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [2 i+0 S4 A32])) "../src/tpdes.f":177 82 {*movsi_internal}
     (nil))
(insn 1083 1082 1084 40 (set (reg:DI 0 ax [orig:415 _329 ] [415])
        (sign_extend:DI (reg:SI 0 ax [968]))) "../src/tpdes.f":177 145 {*extendsidi2_rex64}
     (nil))
(insn 1084 1083 1085 40 (parallel [
            (set (reg:DI 1 dx [orig:416 _330 ] [416])
                (plus:DI (reg:DI 0 ax [orig:415 _329 ] [415])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/tpdes.f":177 218 {*adddi_1}
     (nil))
(insn 1085 1084 1086 40 (set (reg:SF 21 xmm0 [orig:417 g.106_331 ] [417])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -236 [0xffffffffffffff14])) [1 g+0 S4 A32])) "../src/tpdes.f":177 127 {*movsf_internal}
     (nil))
(insn 1086 1085 1087 40 (set (reg/f:DI 0 ax [969])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 80 [0x50])) [12 gam+0 S8 A64])) "../src/tpdes.f":177 81 {*movdi_internal}
     (nil))
(insn 1087 1086 1088 40 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:416 _330 ] [416])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [969])) [1 *gam_786(D) S4 A32])
        (reg:SF 21 xmm0 [orig:417 g.106_331 ] [417])) "../src/tpdes.f":177 127 {*movsf_internal}
     (nil))
(insn 1088 1087 1680 40 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -64 [0xffffffffffffffc0])) [2 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -64 [0xffffffffffffffc0])) [2 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/tpdes.f":151 217 {*addsi_1}
     (nil))
(jump_insn 1680 1088 1681 40 (set (pc)
        (label_ref 1089)) "../src/tpdes.f":151 649 {jump}
     (nil)
 -> 1089)
;;  succ:       37 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 670

(barrier 1681 1680 1701)
;; basic block 61, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 40, next block 41, flags: (RTL, MODIFIED)
;;  pred:       37
;; bb 61 artificial_defs: { }
;; bb 61 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 1701 1681 1700 61 57 (nil) [1 uses])
(note 1700 1701 1702 61 [bb 61] NOTE_INSN_BASIC_BLOCK)
(insn 1702 1700 1092 61 (const_int 0 [0]) "../src/tpdes.f":178 682 {nop}
     (nil))
;;  succ:       41 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 41, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 61, next block 42, flags: (RTL, MODIFIED)
;;  pred:       61 [100.0%]  (FALLTHRU)
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 418 970 971 972 973 974 975 976 977 978 979 980 981 982 983
(code_label 1092 1702 1093 41 27 (nil) [0 uses])
(note 1093 1092 1094 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 1094 1093 1095 41 (set (reg/f:DI 0 ax [970])
        (symbol_ref/f:DI ("*lC3") [flags 0x2]  <var_decl 0x143135870 *lC3>)) "../src/tpdes.f":180 81 {*movdi_internal}
     (nil))
(insn 1095 1094 1096 41 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -792 [0xfffffffffffffce8])) [6 dt_parm.29.common.filename+0 S8 A64])
        (reg/f:DI 0 ax [970])) "../src/tpdes.f":180 81 {*movdi_internal}
     (nil))
(insn 1096 1095 1097 41 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -784 [0xfffffffffffffcf0])) [2 dt_parm.29.common.line+0 S4 A128])
        (const_int 180 [0xb4])) "../src/tpdes.f":180 82 {*movsi_internal}
     (nil))
(insn 1097 1096 1098 41 (set (reg/f:DI 0 ax [971])
        (symbol_ref/f:DI ("*lC23") [flags 0x2]  <var_decl 0x143135cf0 *lC23>)) "../src/tpdes.f":180 81 {*movdi_internal}
     (nil))
(insn 1098 1097 1099 41 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -728 [0xfffffffffffffd28])) [6 dt_parm.29.format+0 S8 A64])
        (reg/f:DI 0 ax [971])) "../src/tpdes.f":180 81 {*movdi_internal}
     (nil))
(insn 1099 1098 1100 41 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -720 [0xfffffffffffffd30])) [2 dt_parm.29.format_len+0 S4 A128])
        (const_int 105 [0x69])) "../src/tpdes.f":180 82 {*movsi_internal}
     (nil))
(insn 1100 1099 1101 41 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -800 [0xfffffffffffffce0])) [2 dt_parm.29.common.flags+0 S4 A128])
        (const_int 4096 [0x1000])) "../src/tpdes.f":180 82 {*movsi_internal}
     (nil))
(insn 1101 1100 1102 41 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -796 [0xfffffffffffffce4])) [2 dt_parm.29.common.unit+0 S4 A32])
        (const_int 6 [0x6])) "../src/tpdes.f":180 82 {*movsi_internal}
     (nil))
(insn 1102 1101 1103 41 (parallel [
            (set (reg:DI 0 ax [972])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -800 [0xfffffffffffffce0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/tpdes.f":180 218 {*adddi_1}
     (nil))
(insn 1103 1102 1104 41 (set (reg:DI 5 di)
        (reg:DI 0 ax [972])) "../src/tpdes.f":180 81 {*movdi_internal}
     (nil))
(call_insn 1104 1103 1105 41 (call (mem:QI (symbol_ref:DI ("_gfortran_st_write") [flags 0x41]  <function_decl 0x1427e0800 _gfortran_st_write>) [0 _gfortran_st_write S1 A8])
        (const_int 0 [0])) "../src/tpdes.f":180 655 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 1105 1104 1106 41 (parallel [
            (set (reg:DI 2 cx [973])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -252 [0xffffffffffffff04])))
            (clobber (reg:CC 17 flags))
        ]) "../src/tpdes.f":180 218 {*adddi_1}
     (nil))
(insn 1106 1105 1107 41 (parallel [
            (set (reg:DI 0 ax [974])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -800 [0xfffffffffffffce0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/tpdes.f":180 218 {*adddi_1}
     (nil))
(insn 1107 1106 1108 41 (set (reg:SI 1 dx)
        (const_int 4 [0x4])) "../src/tpdes.f":180 82 {*movsi_internal}
     (nil))
(insn 1108 1107 1109 41 (set (reg:DI 4 si)
        (reg:DI 2 cx [973])) "../src/tpdes.f":180 81 {*movdi_internal}
     (nil))
(insn 1109 1108 1110 41 (set (reg:DI 5 di)
        (reg:DI 0 ax [974])) "../src/tpdes.f":180 81 {*movdi_internal}
     (nil))
(call_insn 1110 1109 1111 41 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_real_write") [flags 0x41]  <function_decl 0x1427d4d00 _gfortran_transfer_real_write>) [0 _gfortran_transfer_real_write S1 A8])
        (const_int 0 [0])) "../src/tpdes.f":180 655 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 1111 1110 1112 41 (parallel [
            (set (reg:DI 2 cx [975])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -256 [0xffffffffffffff00])))
            (clobber (reg:CC 17 flags))
        ]) "../src/tpdes.f":180 218 {*adddi_1}
     (nil))
(insn 1112 1111 1113 41 (parallel [
            (set (reg:DI 0 ax [976])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -800 [0xfffffffffffffce0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/tpdes.f":180 218 {*adddi_1}
     (nil))
(insn 1113 1112 1114 41 (set (reg:SI 1 dx)
        (const_int 4 [0x4])) "../src/tpdes.f":180 82 {*movsi_internal}
     (nil))
(insn 1114 1113 1115 41 (set (reg:DI 4 si)
        (reg:DI 2 cx [975])) "../src/tpdes.f":180 81 {*movdi_internal}
     (nil))
(insn 1115 1114 1116 41 (set (reg:DI 5 di)
        (reg:DI 0 ax [976])) "../src/tpdes.f":180 81 {*movdi_internal}
     (nil))
(call_insn 1116 1115 1117 41 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_real_write") [flags 0x41]  <function_decl 0x1427d4d00 _gfortran_transfer_real_write>) [0 _gfortran_transfer_real_write S1 A8])
        (const_int 0 [0])) "../src/tpdes.f":180 655 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 1117 1116 1118 41 (parallel [
            (set (reg:DI 2 cx [977])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -268 [0xfffffffffffffef4])))
            (clobber (reg:CC 17 flags))
        ]) "../src/tpdes.f":180 218 {*adddi_1}
     (nil))
(insn 1118 1117 1119 41 (parallel [
            (set (reg:DI 0 ax [978])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -800 [0xfffffffffffffce0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/tpdes.f":180 218 {*adddi_1}
     (nil))
(insn 1119 1118 1120 41 (set (reg:SI 1 dx)
        (const_int 4 [0x4])) "../src/tpdes.f":180 82 {*movsi_internal}
     (nil))
(insn 1120 1119 1121 41 (set (reg:DI 4 si)
        (reg:DI 2 cx [977])) "../src/tpdes.f":180 81 {*movdi_internal}
     (nil))
(insn 1121 1120 1122 41 (set (reg:DI 5 di)
        (reg:DI 0 ax [978])) "../src/tpdes.f":180 81 {*movdi_internal}
     (nil))
(call_insn 1122 1121 1123 41 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_real_write") [flags 0x41]  <function_decl 0x1427d4d00 _gfortran_transfer_real_write>) [0 _gfortran_transfer_real_write S1 A8])
        (const_int 0 [0])) "../src/tpdes.f":180 655 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 1123 1122 1124 41 (parallel [
            (set (reg:DI 2 cx [979])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -272 [0xfffffffffffffef0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/tpdes.f":180 218 {*adddi_1}
     (nil))
(insn 1124 1123 1125 41 (parallel [
            (set (reg:DI 0 ax [980])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -800 [0xfffffffffffffce0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/tpdes.f":180 218 {*adddi_1}
     (nil))
(insn 1125 1124 1126 41 (set (reg:SI 1 dx)
        (const_int 4 [0x4])) "../src/tpdes.f":180 82 {*movsi_internal}
     (nil))
(insn 1126 1125 1127 41 (set (reg:DI 4 si)
        (reg:DI 2 cx [979])) "../src/tpdes.f":180 81 {*movdi_internal}
     (nil))
(insn 1127 1126 1128 41 (set (reg:DI 5 di)
        (reg:DI 0 ax [980])) "../src/tpdes.f":180 81 {*movdi_internal}
     (nil))
(call_insn 1128 1127 1129 41 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_real_write") [flags 0x41]  <function_decl 0x1427d4d00 _gfortran_transfer_real_write>) [0 _gfortran_transfer_real_write S1 A8])
        (const_int 0 [0])) "../src/tpdes.f":180 655 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 1129 1128 1130 41 (parallel [
            (set (reg:DI 0 ax [981])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -800 [0xfffffffffffffce0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/tpdes.f":180 218 {*adddi_1}
     (nil))
(insn 1130 1129 1131 41 (set (reg:DI 5 di)
        (reg:DI 0 ax [981])) "../src/tpdes.f":180 81 {*movdi_internal}
     (nil))
(call_insn 1131 1130 1132 41 (call (mem:QI (symbol_ref:DI ("_gfortran_st_write_done") [flags 0x41]  <function_decl 0x1427e4300 _gfortran_st_write_done>) [0 _gfortran_st_write_done S1 A8])
        (const_int 0 [0])) "../src/tpdes.f":180 655 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 1132 1131 1133 41 (set (reg/f:DI 0 ax [982])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -808 [0xfffffffffffffcd8])) [10 tdes1+0 S8 A64])) "../src/tpdes.f":185 81 {*movdi_internal}
     (nil))
(insn 1133 1132 1134 41 (set (reg:SF 21 xmm0 [orig:418 _332 ] [418])
        (mem:SF (reg/f:DI 0 ax [982]) [1 *tdes1_577(D)+0 S4 A32])) "../src/tpdes.f":185 127 {*movsf_internal}
     (nil))
(insn 1134 1133 1135 41 (set (reg:SF 22 xmm1 [983])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC0") [flags 0x2]) [1  S4 A32])) "../src/tpdes.f":185 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 1135 1134 1136 41 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 21 xmm0 [orig:418 _332 ] [418])
            (reg:SF 22 xmm1 [983]))) "../src/tpdes.f":185 51 {*cmpiusf}
     (nil))
(jump_insn 1136 1135 1645 41 (set (pc)
        (if_then_else (unordered (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1658)
            (pc))) "../src/tpdes.f":185 617 {*jcc_1}
     (nil)
 -> 1658)
;;  succ:       43
;;              42 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 418

;; basic block 42, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 41, next block 43, flags: (RTL, MODIFIED)
;;  pred:       41 (FALLTHRU)
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 418
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 418
;; lr  def 	 17 [flags] 984
(note 1645 1136 1137 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 1137 1645 1138 42 (set (reg:SF 22 xmm1 [984])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC0") [flags 0x2]) [1  S4 A32])) "../src/tpdes.f":185 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 1138 1137 1139 42 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 21 xmm0 [orig:418 _332 ] [418])
            (reg:SF 22 xmm1 [984]))) "../src/tpdes.f":185 51 {*cmpiusf}
     (nil))
(jump_insn 1139 1138 1658 42 (set (pc)
        (if_then_else (uneq (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1682)
            (pc))) "../src/tpdes.f":185 617 {*jcc_1}
     (nil)
 -> 1682)
;;  succ:       43 (FALLTHRU)
;;              46
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 43, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 42, next block 44, flags: (RTL, MODIFIED)
;;  pred:       42 (FALLTHRU)
;;              41
;; bb 43 artificial_defs: { }
;; bb 43 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 419 420 421 422 423 688 689 985 986 987 988
(code_label 1658 1139 1143 43 48 (nil) [1 uses])
(note 1143 1658 1144 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 1144 1143 1757 43 (set (reg:SF 21 xmm0 [orig:688 _848 ] [688])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -252 [0xffffffffffffff04])) [1 ri1+0 S4 A32])) "../src/tpdes.f":186 127 {*movsf_internal}
     (nil))
(insn 1757 1144 1145 43 (set (reg:SF 22 xmm1 [orig:688 _848 ] [688])
        (reg:SF 21 xmm0 [orig:688 _848 ] [688])) "../src/tpdes.f":186 127 {*movsf_internal}
     (nil))
(insn 1145 1757 1146 43 (set (reg:SF 22 xmm1 [orig:688 _848 ] [688])
        (mult:SF (reg:SF 22 xmm1 [orig:688 _848 ] [688])
            (reg:SF 21 xmm0 [orig:688 _848 ] [688]))) "../src/tpdes.f":186 802 {*fop_sf_comm}
     (nil))
(insn 1146 1145 1147 43 (set (reg:SF 23 xmm2 [orig:419 tc.107_333 ] [419])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -288 [0xfffffffffffffee0])) [1 tc+0 S4 A128])) "../src/tpdes.f":186 127 {*movsf_internal}
     (nil))
(insn 1147 1146 1148 43 (set (reg:SF 21 xmm0 [985])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC21") [flags 0x2]) [1  S4 A32])) "../src/tpdes.f":186 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 4.0e+0 [0x0.8p+3])
        (nil)))
(insn 1148 1147 1149 43 (set (reg:SF 21 xmm0 [orig:420 _334 ] [420])
        (mult:SF (reg:SF 21 xmm0 [985])
            (reg:SF 23 xmm2 [orig:419 tc.107_333 ] [419]))) "../src/tpdes.f":186 802 {*fop_sf_comm}
     (nil))
(insn 1149 1148 1150 43 (set (reg:SF 23 xmm2 [orig:421 ri2.108_335 ] [421])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -256 [0xffffffffffffff00])) [1 ri2+0 S4 A128])) "../src/tpdes.f":186 127 {*movsf_internal}
     (nil))
(insn 1150 1149 1151 43 (set (reg:SF 21 xmm0 [orig:422 _336 ] [422])
        (mult:SF (reg:SF 21 xmm0 [orig:420 _334 ] [420])
            (reg:SF 23 xmm2 [orig:421 ri2.108_335 ] [421]))) "../src/tpdes.f":186 802 {*fop_sf_comm}
     (nil))
(insn 1151 1150 1152 43 (set (reg:SF 21 xmm0 [orig:423 _337 ] [423])
        (div:SF (reg:SF 21 xmm0 [orig:422 _336 ] [422])
            (reg:SF 22 xmm1 [orig:689 _849 ] [689]))) "../src/tpdes.f":186 805 {*fop_sf_1}
     (nil))
(insn 1152 1151 1153 43 (set (reg:SF 22 xmm1 [987])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC20") [flags 0x2]) [1  S4 A32])) "../src/tpdes.f":186 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 1153 1152 1760 43 (set (reg:SF 22 xmm1 [987])
        (minus:SF (reg:SF 22 xmm1 [987])
            (reg:SF 21 xmm0 [orig:423 _337 ] [423]))) "../src/tpdes.f":186 805 {*fop_sf_1}
     (nil))
(insn 1760 1153 1154 43 (set (reg:SF 21 xmm0 [986])
        (reg:SF 22 xmm1 [987])) "../src/tpdes.f":186 127 {*movsf_internal}
     (nil))
(insn 1154 1760 1155 43 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [1 discr+0 S4 A32])
        (reg:SF 21 xmm0 [986])) "../src/tpdes.f":186 127 {*movsf_internal}
     (nil))
(insn 1155 1154 1156 43 (set (reg:SF 21 xmm0 [988])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC0") [flags 0x2]) [1  S4 A32])) "../src/tpdes.f":187 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 1156 1155 1157 43 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 21 xmm0 [988])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -52 [0xffffffffffffffcc])) [1 discr+0 S4 A32]))) "../src/tpdes.f":187 51 {*cmpiusf}
     (nil))
(jump_insn 1157 1156 1161 43 (set (pc)
        (if_then_else (unle (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1187)
            (pc))) "../src/tpdes.f":187 617 {*jcc_1}
     (nil)
 -> 1187)
;;  succ:       44 (FALLTHRU)
;;              45
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 44, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 43, next block 45, flags: (RTL, MODIFIED)
;;  pred:       43 (FALLTHRU)
;; bb 44 artificial_defs: { }
;; bb 44 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 424 425 426 690 691 989 990 991 992 993 994
(note 1161 1157 1162 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 1162 1161 1163 44 (set (reg/f:DI 0 ax [989])
        (symbol_ref/f:DI ("*lC3") [flags 0x2]  <var_decl 0x143135870 *lC3>)) "../src/tpdes.f":188 81 {*movdi_internal}
     (nil))
(insn 1163 1162 1164 44 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -792 [0xfffffffffffffce8])) [6 dt_parm.30.common.filename+0 S8 A64])
        (reg/f:DI 0 ax [989])) "../src/tpdes.f":188 81 {*movdi_internal}
     (nil))
(insn 1164 1163 1165 44 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -784 [0xfffffffffffffcf0])) [2 dt_parm.30.common.line+0 S4 A128])
        (const_int 188 [0xbc])) "../src/tpdes.f":188 82 {*movsi_internal}
     (nil))
(insn 1165 1164 1166 44 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -800 [0xfffffffffffffce0])) [2 dt_parm.30.common.flags+0 S4 A128])
        (const_int 128 [0x80])) "../src/tpdes.f":188 82 {*movsi_internal}
     (nil))
(insn 1166 1165 1167 44 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -796 [0xfffffffffffffce4])) [2 dt_parm.30.common.unit+0 S4 A32])
        (const_int 6 [0x6])) "../src/tpdes.f":188 82 {*movsi_internal}
     (nil))
(insn 1167 1166 1168 44 (parallel [
            (set (reg:DI 0 ax [990])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -800 [0xfffffffffffffce0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/tpdes.f":188 218 {*adddi_1}
     (nil))
(insn 1168 1167 1169 44 (set (reg:DI 5 di)
        (reg:DI 0 ax [990])) "../src/tpdes.f":188 81 {*movdi_internal}
     (nil))
(call_insn 1169 1168 1170 44 (call (mem:QI (symbol_ref:DI ("_gfortran_st_write") [flags 0x41]  <function_decl 0x1427e0800 _gfortran_st_write>) [0 _gfortran_st_write S1 A8])
        (const_int 0 [0])) "../src/tpdes.f":188 655 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 1170 1169 1171 44 (parallel [
            (set (reg:DI 0 ax [991])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -800 [0xfffffffffffffce0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/tpdes.f":188 218 {*adddi_1}
     (nil))
(insn 1171 1170 1172 44 (set (reg:SI 1 dx)
        (const_int 25 [0x19])) "../src/tpdes.f":188 82 {*movsi_internal}
     (nil))
(insn 1172 1171 1173 44 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*lC24") [flags 0x2]  <var_decl 0x143135d80 *lC24>)) "../src/tpdes.f":188 81 {*movdi_internal}
     (nil))
(insn 1173 1172 1174 44 (set (reg:DI 5 di)
        (reg:DI 0 ax [991])) "../src/tpdes.f":188 81 {*movdi_internal}
     (nil))
(call_insn 1174 1173 1175 44 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_character_write") [flags 0x41]  <function_decl 0x1427d4900 _gfortran_transfer_character_write>) [0 _gfortran_transfer_character_write S1 A8])
        (const_int 0 [0])) "../src/tpdes.f":188 655 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 1175 1174 1176 44 (parallel [
            (set (reg:DI 0 ax [992])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -800 [0xfffffffffffffce0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/tpdes.f":188 218 {*adddi_1}
     (nil))
(insn 1176 1175 1177 44 (set (reg:DI 5 di)
        (reg:DI 0 ax [992])) "../src/tpdes.f":188 81 {*movdi_internal}
     (nil))
(call_insn 1177 1176 1178 44 (call (mem:QI (symbol_ref:DI ("_gfortran_st_write_done") [flags 0x41]  <function_decl 0x1427e4300 _gfortran_st_write_done>) [0 _gfortran_st_write_done S1 A8])
        (const_int 0 [0])) "../src/tpdes.f":188 655 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 1178 1177 1179 44 (set (reg:SF 21 xmm0 [993])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC0") [flags 0x2]) [1  S4 A32])) "../src/tpdes.f":189 127 {*movsf_internal}
     (nil))
(insn 1179 1178 1180 44 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [1 discr+0 S4 A32])
        (reg:SF 21 xmm0 [993])) "../src/tpdes.f":189 127 {*movsf_internal}
     (nil))
(insn 1180 1179 1181 44 (set (reg:SF 21 xmm0 [orig:690 _860 ] [690])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -252 [0xffffffffffffff04])) [1 ri1+0 S4 A32])) "../src/tpdes.f":190 127 {*movsf_internal}
     (nil))
(insn 1181 1180 1182 44 (set (reg:SF 21 xmm0 [orig:691 _861 ] [691])
        (mult:SF (reg:SF 21 xmm0 [orig:690 _860 ] [690])
            (reg:SF 21 xmm0 [orig:690 _860 ] [690]))) "../src/tpdes.f":190 802 {*fop_sf_comm}
     (nil))
(insn 1182 1181 1183 44 (set (reg:SF 22 xmm1 [994])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC12") [flags 0x2]) [1  S4 A32])) "../src/tpdes.f":190 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 2.5e-1 [0x0.8p-1])
        (nil)))
(insn 1183 1182 1184 44 (set (reg:SF 21 xmm0 [orig:424 _338 ] [424])
        (mult:SF (reg:SF 21 xmm0 [orig:691 _861 ] [691])
            (reg:SF 22 xmm1 [994]))) "../src/tpdes.f":190 802 {*fop_sf_comm}
     (nil))
(insn 1184 1183 1185 44 (set (reg:SF 22 xmm1 [orig:425 ri2.109_339 ] [425])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -256 [0xffffffffffffff00])) [1 ri2+0 S4 A128])) "../src/tpdes.f":190 127 {*movsf_internal}
     (nil))
(insn 1185 1184 1186 44 (set (reg:SF 21 xmm0 [orig:426 _340 ] [426])
        (div:SF (reg:SF 21 xmm0 [orig:424 _338 ] [424])
            (reg:SF 22 xmm1 [orig:425 ri2.109_339 ] [425]))) "../src/tpdes.f":190 805 {*fop_sf_1}
     (nil))
(insn 1186 1185 1187 44 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -288 [0xfffffffffffffee0])) [1 tc+0 S4 A128])
        (reg:SF 21 xmm0 [orig:426 _340 ] [426])) "../src/tpdes.f":190 127 {*movsf_internal}
     (nil))
;;  succ:       45 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 45, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 44, next block 46, flags: (RTL, MODIFIED)
;;  pred:       44 (FALLTHRU)
;;              43
;; bb 45 artificial_defs: { }
;; bb 45 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 427 428 429 430 431 432 433 434 435 436 437 438 439 440 441 442 443 444 445 446 447 448 449 450 451 452 453 454 455 456 457 458 459 460 461 462 463 692 693 694 695 696 697 698 699 700 995 996 997 998 999 1000 1001 1002 1003 1004 1005 1006 1007 1008 1009 1010 1011 1012 1013 1014 1015 1016 1017 1018 1019
(code_label 1187 1186 1188 45 32 (nil) [1 uses])
(note 1188 1187 1189 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 1189 1188 1190 45 (set (reg:SF 22 xmm1 [orig:427 ri1.110_341 ] [427])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -252 [0xffffffffffffff04])) [1 ri1+0 S4 A32])) "../src/tpdes.f":192 127 {*movsf_internal}
     (nil))
(insn 1190 1189 1191 45 (set (reg:SF 21 xmm0 [995])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC1") [flags 0x2]) [1  S4 A32])) "../src/tpdes.f":192 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 5.0e-1 [0x0.8p+0])
        (nil)))
(insn 1191 1190 1192 45 (set (reg:SF 21 xmm0 [orig:428 _342 ] [428])
        (mult:SF (reg:SF 21 xmm0 [995])
            (reg:SF 22 xmm1 [orig:427 ri1.110_341 ] [427]))) "../src/tpdes.f":192 802 {*fop_sf_comm}
     (nil))
(insn 1192 1191 1193 45 (set (reg:SF 22 xmm1 [orig:429 ri2.111_343 ] [429])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -256 [0xffffffffffffff00])) [1 ri2+0 S4 A128])) "../src/tpdes.f":192 127 {*movsf_internal}
     (nil))
(insn 1193 1192 1194 45 (set (reg:SF 21 xmm0 [orig:430 _344 ] [430])
        (div:SF (reg:SF 21 xmm0 [orig:428 _342 ] [428])
            (reg:SF 22 xmm1 [orig:429 ri2.111_343 ] [429]))) "../src/tpdes.f":192 805 {*fop_sf_1}
     (nil))
(insn 1194 1193 1195 45 (set (reg:SF 22 xmm1 [orig:431 _345 ] [431])
        (sqrt:SF (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -52 [0xffffffffffffffcc])) [1 discr+0 S4 A32]))) "../src/tpdes.f":192 836 {*sqrtsf2_sse}
     (nil))
(insn 1195 1194 1196 45 (set (reg:SF 23 xmm2 [996])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC20") [flags 0x2]) [1  S4 A32])) "../src/tpdes.f":192 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 1196 1195 1762 45 (set (reg:SF 23 xmm2 [996])
        (minus:SF (reg:SF 23 xmm2 [996])
            (reg:SF 22 xmm1 [orig:431 _345 ] [431]))) "../src/tpdes.f":192 805 {*fop_sf_1}
     (nil))
(insn 1762 1196 1198 45 (set (reg:SF 22 xmm1 [orig:432 _346 ] [432])
        (reg:SF 23 xmm2 [996])) "../src/tpdes.f":192 127 {*movsf_internal}
     (nil))
(insn 1198 1762 1199 45 (set (reg:SF 21 xmm0 [orig:434 _348 ] [434])
        (mult:SF (reg:SF 21 xmm0 [orig:430 _344 ] [430])
            (reg:SF 22 xmm1 [orig:433 _347 ] [433]))) "../src/tpdes.f":192 802 {*fop_sf_comm}
     (nil))
(insn 1199 1198 1200 45 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -304 [0xfffffffffffffed0])) [1 zeta+0 S4 A128])
        (reg:SF 21 xmm0 [orig:434 _348 ] [434])) "../src/tpdes.f":192 127 {*movsf_internal}
     (nil))
(insn 1200 1199 1201 45 (set (reg:SF 21 xmm0 [orig:692 _864 ] [692])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -304 [0xfffffffffffffed0])) [1 zeta+0 S4 A128])) "../src/tpdes.f":193 127 {*movsf_internal}
     (nil))
(insn 1201 1200 1202 45 (set (reg:SF 21 xmm0 [orig:693 _865 ] [693])
        (mult:SF (reg:SF 21 xmm0 [orig:692 _864 ] [692])
            (reg:SF 21 xmm0 [orig:692 _864 ] [692]))) "../src/tpdes.f":193 802 {*fop_sf_comm}
     (nil))
(insn 1202 1201 1203 45 (set (reg:SF 23 xmm2 [orig:435 rj1.112_349 ] [435])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -268 [0xfffffffffffffef4])) [1 rj1+0 S4 A32])) "../src/tpdes.f":193 127 {*movsf_internal}
     (nil))
(insn 1203 1202 1204 45 (set (reg:SF 22 xmm1 [orig:436 zeta.113_350 ] [436])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -304 [0xfffffffffffffed0])) [1 zeta+0 S4 A128])) "../src/tpdes.f":193 127 {*movsf_internal}
     (nil))
(insn 1204 1203 1205 45 (set (reg:SF 22 xmm1 [orig:437 _351 ] [437])
        (mult:SF (reg:SF 22 xmm1 [orig:436 zeta.113_350 ] [436])
            (reg:SF 23 xmm2 [orig:435 rj1.112_349 ] [435]))) "../src/tpdes.f":193 802 {*fop_sf_comm}
     (nil))
(insn 1205 1204 1206 45 (set (reg:SF 23 xmm2 [orig:438 rj2.114_352 ] [438])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 rj2+0 S4 A128])) "../src/tpdes.f":193 127 {*movsf_internal}
     (nil))
(insn 1206 1205 1207 45 (set (reg:SF 21 xmm0 [orig:439 _353 ] [439])
        (mult:SF (reg:SF 21 xmm0 [orig:693 _865 ] [693])
            (reg:SF 23 xmm2 [orig:438 rj2.114_352 ] [438]))) "../src/tpdes.f":193 802 {*fop_sf_comm}
     (nil))
(insn 1207 1206 1208 45 (set (reg:SF 21 xmm0 [orig:440 _354 ] [440])
        (plus:SF (reg:SF 21 xmm0 [orig:439 _353 ] [439])
            (reg:SF 22 xmm1 [orig:437 _351 ] [437]))) "../src/tpdes.f":193 802 {*fop_sf_comm}
     (nil))
(insn 1208 1207 1209 45 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -244 [0xffffffffffffff0c])) [1 pc+0 S4 A32])
        (reg:SF 21 xmm0 [orig:440 _354 ] [440])) "../src/tpdes.f":193 127 {*movsf_internal}
     (nil))
(insn 1209 1208 1210 45 (set (reg:SF 21 xmm0 [orig:441 tc.115_355 ] [441])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -288 [0xfffffffffffffee0])) [1 tc+0 S4 A128])) "../src/tpdes.f":194 127 {*movsf_internal}
     (nil))
(insn 1210 1209 1211 45 (set (reg:SF 22 xmm1 [orig:442 pc.116_356 ] [442])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -244 [0xffffffffffffff0c])) [1 pc+0 S4 A32])) "../src/tpdes.f":194 127 {*movsf_internal}
     (nil))
(insn 1211 1210 1212 45 (set (reg:SF 21 xmm0 [orig:443 _357 ] [443])
        (div:SF (reg:SF 21 xmm0 [orig:441 tc.115_355 ] [441])
            (reg:SF 22 xmm1 [orig:442 pc.116_356 ] [442]))) "../src/tpdes.f":194 805 {*fop_sf_1}
     (nil))
(insn 1212 1211 1213 45 (set (reg/f:DI 0 ax [997])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -832 [0xfffffffffffffcc0])) [10 vel+0 S8 A64])) "../src/tpdes.f":194 81 {*movdi_internal}
     (nil))
(insn 1213 1212 1214 45 (set (reg:SF 22 xmm1 [orig:444 _358 ] [444])
        (mem:SF (reg/f:DI 0 ax [997]) [1 *vel_598(D)+0 S4 A32])) "../src/tpdes.f":194 127 {*movsf_internal}
     (nil))
(insn 1214 1213 1215 45 (set (reg:SF 21 xmm0 [orig:445 _359 ] [445])
        (mult:SF (reg:SF 21 xmm0 [orig:443 _357 ] [443])
            (reg:SF 22 xmm1 [orig:444 _358 ] [444]))) "../src/tpdes.f":194 802 {*fop_sf_comm}
     (nil))
(insn 1215 1214 1216 45 (set (reg:SF 21 xmm0 [orig:446 _360 ] [446])
        (div:SF (reg:SF 21 xmm0 [orig:445 _359 ] [445])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -80 [0xffffffffffffffb0])) [1 vd+0 S4 A32]))) "../src/tpdes.f":194 805 {*fop_sf_1}
     (nil))
(insn 1216 1215 1217 45 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -228 [0xffffffffffffff1c])) [1 eta+0 S4 A32])
        (reg:SF 21 xmm0 [orig:446 _360 ] [446])) "../src/tpdes.f":194 127 {*movsf_internal}
     (nil))
(insn 1217 1216 1763 45 (set (reg:SF 21 xmm0 [orig:694 _868 ] [694])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -80 [0xffffffffffffffb0])) [1 vd+0 S4 A32])) "../src/tpdes.f":195 127 {*movsf_internal}
     (nil))
(insn 1763 1217 1218 45 (set (reg:SF 23 xmm2 [orig:694 _868 ] [694])
        (reg:SF 21 xmm0 [orig:694 _868 ] [694])) "../src/tpdes.f":195 127 {*movsf_internal}
     (nil))
(insn 1218 1763 1219 45 (set (reg:SF 23 xmm2 [orig:694 _868 ] [694])
        (mult:SF (reg:SF 23 xmm2 [orig:694 _868 ] [694])
            (reg:SF 21 xmm0 [orig:694 _868 ] [694]))) "../src/tpdes.f":195 802 {*fop_sf_comm}
     (nil))
(insn 1219 1218 1220 45 (set (reg/f:DI 0 ax [998])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -848 [0xfffffffffffffcb0])) [10 rad+0 S8 A64])) "../src/tpdes.f":195 81 {*movdi_internal}
     (nil))
(insn 1220 1219 1765 45 (set (reg:SF 21 xmm0 [orig:696 _870 ] [696])
        (mem:SF (reg/f:DI 0 ax [998]) [1 *rad_593(D)+0 S4 A32])) "../src/tpdes.f":195 127 {*movsf_internal}
     (nil))
(insn 1765 1220 1221 45 (set (reg:SF 22 xmm1 [orig:696 _870 ] [696])
        (reg:SF 21 xmm0 [orig:696 _870 ] [696])) "../src/tpdes.f":195 127 {*movsf_internal}
     (nil))
(insn 1221 1765 1222 45 (set (reg:SF 22 xmm1 [orig:696 _870 ] [696])
        (mult:SF (reg:SF 22 xmm1 [orig:696 _870 ] [696])
            (reg:SF 21 xmm0 [orig:696 _870 ] [696]))) "../src/tpdes.f":195 802 {*fop_sf_comm}
     (nil))
(insn 1222 1221 1223 45 (set (reg/f:DI 0 ax [999])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -824 [0xfffffffffffffcc8])) [10 rho+0 S8 A64])) "../src/tpdes.f":195 81 {*movdi_internal}
     (nil))
(insn 1223 1222 1224 45 (set (reg:SF 24 xmm3 [orig:447 _361 ] [447])
        (mem:SF (reg/f:DI 0 ax [999]) [1 *rho_609(D)+0 S4 A32])) "../src/tpdes.f":195 127 {*movsf_internal}
     (nil))
(insn 1224 1223 1225 45 (set (reg:SF 21 xmm0 [1000])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC1") [flags 0x2]) [1  S4 A32])) "../src/tpdes.f":195 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 5.0e-1 [0x0.8p+0])
        (nil)))
(insn 1225 1224 1226 45 (set (reg:SF 21 xmm0 [orig:448 _362 ] [448])
        (mult:SF (reg:SF 21 xmm0 [1000])
            (reg:SF 24 xmm3 [orig:447 _361 ] [447]))) "../src/tpdes.f":195 802 {*fop_sf_comm}
     (nil))
(insn 1226 1225 1227 45 (set (reg:SF 21 xmm0 [orig:449 _363 ] [449])
        (mult:SF (reg:SF 21 xmm0 [orig:448 _362 ] [448])
            (reg:SF 23 xmm2 [orig:695 _869 ] [695]))) "../src/tpdes.f":195 802 {*fop_sf_comm}
     (nil))
(insn 1227 1226 1228 45 (set (reg:SF 23 xmm2 [orig:450 pi.117_364 ] [450])
        (mem/c:SF (symbol_ref:DI ("pi.3583") [flags 0x1c02]  <var_decl 0x1427f2120 pi>) [1 pi+0 S4 A32])) "../src/tpdes.f":195 127 {*movsf_internal}
     (nil))
(insn 1228 1227 1229 45 (set (reg:SF 21 xmm0 [orig:451 _365 ] [451])
        (mult:SF (reg:SF 21 xmm0 [orig:449 _363 ] [449])
            (reg:SF 23 xmm2 [orig:450 pi.117_364 ] [450]))) "../src/tpdes.f":195 802 {*fop_sf_comm}
     (nil))
(insn 1229 1228 1230 45 (set (reg:SF 21 xmm0 [orig:452 _366 ] [452])
        (mult:SF (reg:SF 21 xmm0 [orig:451 _365 ] [451])
            (reg:SF 22 xmm1 [orig:697 _871 ] [697]))) "../src/tpdes.f":195 802 {*fop_sf_comm}
     (nil))
(insn 1230 1229 1231 45 (set (reg:SF 22 xmm1 [orig:453 tc.118_367 ] [453])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -288 [0xfffffffffffffee0])) [1 tc+0 S4 A128])) "../src/tpdes.f":195 127 {*movsf_internal}
     (nil))
(insn 1231 1230 1232 45 (set (reg:SF 21 xmm0 [orig:454 _368 ] [454])
        (mult:SF (reg:SF 21 xmm0 [orig:452 _366 ] [452])
            (reg:SF 22 xmm1 [orig:453 tc.118_367 ] [453]))) "../src/tpdes.f":195 802 {*fop_sf_comm}
     (nil))
(insn 1232 1231 1233 45 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -284 [0xfffffffffffffee4])) [1 t+0 S4 A32])
        (reg:SF 21 xmm0 [orig:454 _368 ] [454])) "../src/tpdes.f":195 127 {*movsf_internal}
     (nil))
(insn 1233 1232 1234 45 (set (reg:SF 0 ax [orig:698 _873 ] [698])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -80 [0xffffffffffffffb0])) [1 vd+0 S4 A32])) "../src/tpdes.f":196 127 {*movsf_internal}
     (nil))
(insn 1234 1233 1235 45 (set (reg/f:DI 1 dx [1001])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -848 [0xfffffffffffffcb0])) [10 rad+0 S8 A64])) "../src/tpdes.f":196 81 {*movdi_internal}
     (nil))
(insn 1235 1234 1236 45 (set (reg:SF 21 xmm0 [orig:699 _874 ] [699])
        (mem:SF (reg/f:DI 1 dx [1001]) [1 *rad_593(D)+0 S4 A32])) "../src/tpdes.f":196 127 {*movsf_internal}
     (nil))
(insn 1236 1235 1768 45 (set (reg:SF 21 xmm0 [orig:699 _874 ] [699])
        (mult:SF (reg:SF 21 xmm0 [orig:699 _874 ] [699])
            (reg:SF 21 xmm0 [orig:699 _874 ] [699]))) "../src/tpdes.f":196 802 {*fop_sf_comm}
     (nil))
(insn 1768 1236 1839 45 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -880 [0xfffffffffffffc90])) [14 %sfp+-832 S4 A128])
        (reg:SF 21 xmm0 [orig:699 _874 ] [699])) "../src/tpdes.f":196 127 {*movsf_internal}
     (nil))
(note 1839 1768 1814 45 NOTE_INSN_DELETED)
(note 1814 1839 1237 45 NOTE_INSN_DELETED)
(insn 1237 1814 1238 45 (set (reg/f:DI 1 dx [1002])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -824 [0xfffffffffffffcc8])) [10 rho+0 S8 A64])) "../src/tpdes.f":196 81 {*movdi_internal}
     (nil))
(insn 1238 1237 1239 45 (set (reg:SF 22 xmm1 [orig:455 _369 ] [455])
        (mem:SF (reg/f:DI 1 dx [1002]) [1 *rho_609(D)+0 S4 A32])) "../src/tpdes.f":196 127 {*movsf_internal}
     (nil))
(insn 1239 1238 1240 45 (set (reg:SF 21 xmm0 [1003])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC1") [flags 0x2]) [1  S4 A32])) "../src/tpdes.f":196 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 5.0e-1 [0x0.8p+0])
        (nil)))
(insn 1240 1239 1770 45 (set (reg:SF 22 xmm1 [orig:455 _369 ] [455])
        (mult:SF (reg:SF 22 xmm1 [orig:455 _369 ] [455])
            (reg:SF 21 xmm0 [1003]))) "../src/tpdes.f":196 802 {*fop_sf_comm}
     (nil))
(insn 1770 1240 1838 45 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -864 [0xfffffffffffffca0])) [14 %sfp+-816 S4 A128])
        (reg:SF 22 xmm1 [orig:455 _369 ] [455])) "../src/tpdes.f":196 127 {*movsf_internal}
     (nil))
(note 1838 1770 1813 45 NOTE_INSN_DELETED)
(note 1813 1838 1241 45 NOTE_INSN_DELETED)
(insn 1241 1813 1242 45 (set (reg:SI 5 di)
        (const_int 3 [0x3])) "../src/tpdes.f":196 82 {*movsi_internal}
     (nil))
(insn 1242 1241 1243 45 (set (reg:SF 21 xmm0)
        (reg:SF 0 ax [orig:698 _873 ] [698])) "../src/tpdes.f":196 127 {*movsf_internal}
     (nil))
(call_insn/u 1243 1242 1771 45 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("__powisf2") [flags 0x41]) [0  S1 A8])
            (const_int 0 [0]))) "../src/tpdes.f":196 665 {*call_value}
     (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
        (nil))
    (expr_list (use (reg:SI 5 di))
        (expr_list (use (reg:SF 21 xmm0))
            (nil))))
(note 1771 1243 1825 45 NOTE_INSN_DELETED)
(note 1825 1771 1245 45 NOTE_INSN_DELETED)
(insn 1245 1825 1246 45 (set (reg:SF 21 xmm0 [orig:458 _372 ] [458])
        (mult:SF (reg:SF 21 xmm0 [orig:457 _371 ] [457])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -864 [0xfffffffffffffca0])) [14 %sfp+-816 S4 A128]))) "../src/tpdes.f":196 802 {*fop_sf_comm}
     (nil))
(insn 1246 1245 1247 45 (set (reg:SF 22 xmm1 [orig:459 pi.119_373 ] [459])
        (mem/c:SF (symbol_ref:DI ("pi.3583") [flags 0x1c02]  <var_decl 0x1427f2120 pi>) [1 pi+0 S4 A32])) "../src/tpdes.f":196 127 {*movsf_internal}
     (nil))
(insn 1247 1246 1772 45 (set (reg:SF 21 xmm0 [orig:460 _374 ] [460])
        (mult:SF (reg:SF 21 xmm0 [orig:458 _372 ] [458])
            (reg:SF 22 xmm1 [orig:459 pi.119_373 ] [459]))) "../src/tpdes.f":196 802 {*fop_sf_comm}
     (nil))
(note 1772 1247 1824 45 NOTE_INSN_DELETED)
(note 1824 1772 1248 45 NOTE_INSN_DELETED)
(insn 1248 1824 1249 45 (set (reg:SF 21 xmm0 [orig:461 _375 ] [461])
        (mult:SF (reg:SF 21 xmm0 [orig:460 _374 ] [460])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -880 [0xfffffffffffffc90])) [14 %sfp+-832 S4 A128]))) "../src/tpdes.f":196 802 {*fop_sf_comm}
     (nil))
(insn 1249 1248 1250 45 (set (reg:SF 22 xmm1 [orig:462 pc.120_376 ] [462])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -244 [0xffffffffffffff0c])) [1 pc+0 S4 A32])) "../src/tpdes.f":196 127 {*movsf_internal}
     (nil))
(insn 1250 1249 1251 45 (set (reg:SF 21 xmm0 [orig:463 _377 ] [463])
        (mult:SF (reg:SF 21 xmm0 [orig:461 _375 ] [461])
            (reg:SF 22 xmm1 [orig:462 pc.120_376 ] [462]))) "../src/tpdes.f":196 802 {*fop_sf_comm}
     (nil))
(insn 1251 1250 1252 45 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -240 [0xffffffffffffff10])) [1 p+0 S4 A128])
        (reg:SF 21 xmm0 [orig:463 _377 ] [463])) "../src/tpdes.f":196 127 {*movsf_internal}
     (nil))
(insn 1252 1251 1253 45 (set (reg/f:DI 0 ax [1004])
        (symbol_ref/f:DI ("*lC3") [flags 0x2]  <var_decl 0x143135870 *lC3>)) "../src/tpdes.f":197 81 {*movdi_internal}
     (nil))
(insn 1253 1252 1254 45 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -792 [0xfffffffffffffce8])) [6 dt_parm.31.common.filename+0 S8 A64])
        (reg/f:DI 0 ax [1004])) "../src/tpdes.f":197 81 {*movdi_internal}
     (nil))
(insn 1254 1253 1255 45 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -784 [0xfffffffffffffcf0])) [2 dt_parm.31.common.line+0 S4 A128])
        (const_int 197 [0xc5])) "../src/tpdes.f":197 82 {*movsi_internal}
     (nil))
(insn 1255 1254 1256 45 (set (reg/f:DI 0 ax [1005])
        (symbol_ref/f:DI ("*lC25") [flags 0x2]  <var_decl 0x143135e10 *lC25>)) "../src/tpdes.f":197 81 {*movdi_internal}
     (nil))
(insn 1256 1255 1257 45 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -728 [0xfffffffffffffd28])) [6 dt_parm.31.format+0 S8 A64])
        (reg/f:DI 0 ax [1005])) "../src/tpdes.f":197 81 {*movdi_internal}
     (nil))
(insn 1257 1256 1258 45 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -720 [0xfffffffffffffd30])) [2 dt_parm.31.format_len+0 S4 A128])
        (const_int 118 [0x76])) "../src/tpdes.f":197 82 {*movsi_internal}
     (nil))
(insn 1258 1257 1259 45 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -800 [0xfffffffffffffce0])) [2 dt_parm.31.common.flags+0 S4 A128])
        (const_int 4096 [0x1000])) "../src/tpdes.f":197 82 {*movsi_internal}
     (nil))
(insn 1259 1258 1260 45 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -796 [0xfffffffffffffce4])) [2 dt_parm.31.common.unit+0 S4 A32])
        (const_int 6 [0x6])) "../src/tpdes.f":197 82 {*movsi_internal}
     (nil))
(insn 1260 1259 1261 45 (parallel [
            (set (reg:DI 0 ax [1006])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -800 [0xfffffffffffffce0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/tpdes.f":197 218 {*adddi_1}
     (nil))
(insn 1261 1260 1262 45 (set (reg:DI 5 di)
        (reg:DI 0 ax [1006])) "../src/tpdes.f":197 81 {*movdi_internal}
     (nil))
(call_insn 1262 1261 1263 45 (call (mem:QI (symbol_ref:DI ("_gfortran_st_write") [flags 0x41]  <function_decl 0x1427e0800 _gfortran_st_write>) [0 _gfortran_st_write S1 A8])
        (const_int 0 [0])) "../src/tpdes.f":197 655 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 1263 1262 1264 45 (parallel [
            (set (reg:DI 2 cx [1007])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -288 [0xfffffffffffffee0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/tpdes.f":197 218 {*adddi_1}
     (nil))
(insn 1264 1263 1265 45 (parallel [
            (set (reg:DI 0 ax [1008])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -800 [0xfffffffffffffce0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/tpdes.f":197 218 {*adddi_1}
     (nil))
(insn 1265 1264 1266 45 (set (reg:SI 1 dx)
        (const_int 4 [0x4])) "../src/tpdes.f":197 82 {*movsi_internal}
     (nil))
(insn 1266 1265 1267 45 (set (reg:DI 4 si)
        (reg:DI 2 cx [1007])) "../src/tpdes.f":197 81 {*movdi_internal}
     (nil))
(insn 1267 1266 1268 45 (set (reg:DI 5 di)
        (reg:DI 0 ax [1008])) "../src/tpdes.f":197 81 {*movdi_internal}
     (nil))
(call_insn 1268 1267 1269 45 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_real_write") [flags 0x41]  <function_decl 0x1427d4d00 _gfortran_transfer_real_write>) [0 _gfortran_transfer_real_write S1 A8])
        (const_int 0 [0])) "../src/tpdes.f":197 655 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 1269 1268 1270 45 (parallel [
            (set (reg:DI 2 cx [1009])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -284 [0xfffffffffffffee4])))
            (clobber (reg:CC 17 flags))
        ]) "../src/tpdes.f":197 218 {*adddi_1}
     (nil))
(insn 1270 1269 1271 45 (parallel [
            (set (reg:DI 0 ax [1010])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -800 [0xfffffffffffffce0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/tpdes.f":197 218 {*adddi_1}
     (nil))
(insn 1271 1270 1272 45 (set (reg:SI 1 dx)
        (const_int 4 [0x4])) "../src/tpdes.f":197 82 {*movsi_internal}
     (nil))
(insn 1272 1271 1273 45 (set (reg:DI 4 si)
        (reg:DI 2 cx [1009])) "../src/tpdes.f":197 81 {*movdi_internal}
     (nil))
(insn 1273 1272 1274 45 (set (reg:DI 5 di)
        (reg:DI 0 ax [1010])) "../src/tpdes.f":197 81 {*movdi_internal}
     (nil))
(call_insn 1274 1273 1275 45 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_real_write") [flags 0x41]  <function_decl 0x1427d4d00 _gfortran_transfer_real_write>) [0 _gfortran_transfer_real_write S1 A8])
        (const_int 0 [0])) "../src/tpdes.f":197 655 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 1275 1274 1276 45 (parallel [
            (set (reg:DI 2 cx [1011])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -304 [0xfffffffffffffed0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/tpdes.f":197 218 {*adddi_1}
     (nil))
(insn 1276 1275 1277 45 (parallel [
            (set (reg:DI 0 ax [1012])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -800 [0xfffffffffffffce0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/tpdes.f":197 218 {*adddi_1}
     (nil))
(insn 1277 1276 1278 45 (set (reg:SI 1 dx)
        (const_int 4 [0x4])) "../src/tpdes.f":197 82 {*movsi_internal}
     (nil))
(insn 1278 1277 1279 45 (set (reg:DI 4 si)
        (reg:DI 2 cx [1011])) "../src/tpdes.f":197 81 {*movdi_internal}
     (nil))
(insn 1279 1278 1280 45 (set (reg:DI 5 di)
        (reg:DI 0 ax [1012])) "../src/tpdes.f":197 81 {*movdi_internal}
     (nil))
(call_insn 1280 1279 1281 45 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_real_write") [flags 0x41]  <function_decl 0x1427d4d00 _gfortran_transfer_real_write>) [0 _gfortran_transfer_real_write S1 A8])
        (const_int 0 [0])) "../src/tpdes.f":197 655 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 1281 1280 1282 45 (parallel [
            (set (reg:DI 2 cx [1013])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -244 [0xffffffffffffff0c])))
            (clobber (reg:CC 17 flags))
        ]) "../src/tpdes.f":197 218 {*adddi_1}
     (nil))
(insn 1282 1281 1283 45 (parallel [
            (set (reg:DI 0 ax [1014])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -800 [0xfffffffffffffce0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/tpdes.f":197 218 {*adddi_1}
     (nil))
(insn 1283 1282 1284 45 (set (reg:SI 1 dx)
        (const_int 4 [0x4])) "../src/tpdes.f":197 82 {*movsi_internal}
     (nil))
(insn 1284 1283 1285 45 (set (reg:DI 4 si)
        (reg:DI 2 cx [1013])) "../src/tpdes.f":197 81 {*movdi_internal}
     (nil))
(insn 1285 1284 1286 45 (set (reg:DI 5 di)
        (reg:DI 0 ax [1014])) "../src/tpdes.f":197 81 {*movdi_internal}
     (nil))
(call_insn 1286 1285 1287 45 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_real_write") [flags 0x41]  <function_decl 0x1427d4d00 _gfortran_transfer_real_write>) [0 _gfortran_transfer_real_write S1 A8])
        (const_int 0 [0])) "../src/tpdes.f":197 655 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 1287 1286 1288 45 (parallel [
            (set (reg:DI 2 cx [1015])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -240 [0xffffffffffffff10])))
            (clobber (reg:CC 17 flags))
        ]) "../src/tpdes.f":197 218 {*adddi_1}
     (nil))
(insn 1288 1287 1289 45 (parallel [
            (set (reg:DI 0 ax [1016])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -800 [0xfffffffffffffce0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/tpdes.f":197 218 {*adddi_1}
     (nil))
(insn 1289 1288 1290 45 (set (reg:SI 1 dx)
        (const_int 4 [0x4])) "../src/tpdes.f":197 82 {*movsi_internal}
     (nil))
(insn 1290 1289 1291 45 (set (reg:DI 4 si)
        (reg:DI 2 cx [1015])) "../src/tpdes.f":197 81 {*movdi_internal}
     (nil))
(insn 1291 1290 1292 45 (set (reg:DI 5 di)
        (reg:DI 0 ax [1016])) "../src/tpdes.f":197 81 {*movdi_internal}
     (nil))
(call_insn 1292 1291 1293 45 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_real_write") [flags 0x41]  <function_decl 0x1427d4d00 _gfortran_transfer_real_write>) [0 _gfortran_transfer_real_write S1 A8])
        (const_int 0 [0])) "../src/tpdes.f":197 655 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 1293 1292 1294 45 (parallel [
            (set (reg:DI 2 cx [1017])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -228 [0xffffffffffffff1c])))
            (clobber (reg:CC 17 flags))
        ]) "../src/tpdes.f":197 218 {*adddi_1}
     (nil))
(insn 1294 1293 1295 45 (parallel [
            (set (reg:DI 0 ax [1018])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -800 [0xfffffffffffffce0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/tpdes.f":197 218 {*adddi_1}
     (nil))
(insn 1295 1294 1296 45 (set (reg:SI 1 dx)
        (const_int 4 [0x4])) "../src/tpdes.f":197 82 {*movsi_internal}
     (nil))
(insn 1296 1295 1297 45 (set (reg:DI 4 si)
        (reg:DI 2 cx [1017])) "../src/tpdes.f":197 81 {*movdi_internal}
     (nil))
(insn 1297 1296 1298 45 (set (reg:DI 5 di)
        (reg:DI 0 ax [1018])) "../src/tpdes.f":197 81 {*movdi_internal}
     (nil))
(call_insn 1298 1297 1299 45 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_real_write") [flags 0x41]  <function_decl 0x1427d4d00 _gfortran_transfer_real_write>) [0 _gfortran_transfer_real_write S1 A8])
        (const_int 0 [0])) "../src/tpdes.f":197 655 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 1299 1298 1300 45 (parallel [
            (set (reg:DI 0 ax [1019])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -800 [0xfffffffffffffce0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/tpdes.f":197 218 {*adddi_1}
     (nil))
(insn 1300 1299 1301 45 (set (reg:DI 5 di)
        (reg:DI 0 ax [1019])) "../src/tpdes.f":197 81 {*movdi_internal}
     (nil))
(call_insn 1301 1300 1683 45 (call (mem:QI (symbol_ref:DI ("_gfortran_st_write_done") [flags 0x41]  <function_decl 0x1427e4300 _gfortran_st_write_done>) [0 _gfortran_st_write_done S1 A8])
        (const_int 0 [0])) "../src/tpdes.f":197 655 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 1683 1301 1684 45 (set (pc)
        (label_ref 1489)) 649 {jump}
     (nil)
 -> 1489)
;;  succ:       54 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1684 1683 1682)
;; basic block 46, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 45, next block 47, flags: (RTL, MODIFIED)
;;  pred:       42
;; bb 46 artificial_defs: { }
;; bb 46 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 464 465 466 467 468 675 676 1020 1021 1022 1023
(code_label 1682 1684 1305 46 53 (nil) [1 uses])
(note 1305 1682 1306 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 1306 1305 1773 46 (set (reg:SF 21 xmm0 [orig:675 _802 ] [675])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -268 [0xfffffffffffffef4])) [1 rj1+0 S4 A32])) "../src/tpdes.f":202 127 {*movsf_internal}
     (nil))
(insn 1773 1306 1307 46 (set (reg:SF 22 xmm1 [orig:675 _802 ] [675])
        (reg:SF 21 xmm0 [orig:675 _802 ] [675])) "../src/tpdes.f":202 127 {*movsf_internal}
     (nil))
(insn 1307 1773 1308 46 (set (reg:SF 22 xmm1 [orig:675 _802 ] [675])
        (mult:SF (reg:SF 22 xmm1 [orig:675 _802 ] [675])
            (reg:SF 21 xmm0 [orig:675 _802 ] [675]))) "../src/tpdes.f":202 802 {*fop_sf_comm}
     (nil))
(insn 1308 1307 1309 46 (set (reg:SF 23 xmm2 [orig:464 pc.121_378 ] [464])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -244 [0xffffffffffffff0c])) [1 pc+0 S4 A32])) "../src/tpdes.f":202 127 {*movsf_internal}
     (nil))
(insn 1309 1308 1310 46 (set (reg:SF 21 xmm0 [1020])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC21") [flags 0x2]) [1  S4 A32])) "../src/tpdes.f":202 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 4.0e+0 [0x0.8p+3])
        (nil)))
(insn 1310 1309 1311 46 (set (reg:SF 21 xmm0 [orig:465 _379 ] [465])
        (mult:SF (reg:SF 21 xmm0 [1020])
            (reg:SF 23 xmm2 [orig:464 pc.121_378 ] [464]))) "../src/tpdes.f":202 802 {*fop_sf_comm}
     (nil))
(insn 1311 1310 1312 46 (set (reg:SF 23 xmm2 [orig:466 rj2.122_380 ] [466])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 rj2+0 S4 A128])) "../src/tpdes.f":202 127 {*movsf_internal}
     (nil))
(insn 1312 1311 1313 46 (set (reg:SF 21 xmm0 [orig:467 _381 ] [467])
        (mult:SF (reg:SF 21 xmm0 [orig:465 _379 ] [465])
            (reg:SF 23 xmm2 [orig:466 rj2.122_380 ] [466]))) "../src/tpdes.f":202 802 {*fop_sf_comm}
     (nil))
(insn 1313 1312 1314 46 (set (reg:SF 21 xmm0 [orig:468 _382 ] [468])
        (div:SF (reg:SF 21 xmm0 [orig:467 _381 ] [467])
            (reg:SF 22 xmm1 [orig:676 _803 ] [676]))) "../src/tpdes.f":202 805 {*fop_sf_1}
     (nil))
(insn 1314 1313 1315 46 (set (reg:SF 22 xmm1 [1022])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC20") [flags 0x2]) [1  S4 A32])) "../src/tpdes.f":202 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 1315 1314 1316 46 (set (reg:SF 21 xmm0 [1021])
        (plus:SF (reg:SF 21 xmm0 [orig:468 _382 ] [468])
            (reg:SF 22 xmm1 [1022]))) "../src/tpdes.f":202 802 {*fop_sf_comm}
     (nil))
(insn 1316 1315 1317 46 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [1 discr+0 S4 A32])
        (reg:SF 21 xmm0 [1021])) "../src/tpdes.f":202 127 {*movsf_internal}
     (nil))
(insn 1317 1316 1318 46 (set (reg:SF 21 xmm0 [1023])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC0") [flags 0x2]) [1  S4 A32])) "../src/tpdes.f":203 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 1318 1317 1319 46 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 21 xmm0 [1023])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -52 [0xffffffffffffffcc])) [1 discr+0 S4 A32]))) "../src/tpdes.f":203 51 {*cmpiusf}
     (nil))
(jump_insn 1319 1318 1320 46 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref 1332)
            (pc))) "../src/tpdes.f":203 617 {*jcc_1}
     (nil)
 -> 1332)
;;  succ:       49
;;              47 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 47, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 46, next block 48, flags: (RTL, MODIFIED)
;;  pred:       46 (FALLTHRU)
;; bb 47 artificial_defs: { }
;; bb 47 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 469 1024 1025
(note 1320 1319 1321 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 1321 1320 1322 47 (set (reg/f:DI 0 ax [1024])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -816 [0xfffffffffffffcd0])) [10 pdes1+0 S8 A64])) "../src/tpdes.f":203 81 {*movdi_internal}
     (nil))
(insn 1322 1321 1323 47 (set (reg:SF 21 xmm0 [orig:469 _383 ] [469])
        (mem:SF (reg/f:DI 0 ax [1024]) [1 *pdes1_579(D)+0 S4 A32])) "../src/tpdes.f":203 127 {*movsf_internal}
     (nil))
(insn 1323 1322 1324 47 (set (reg:SF 22 xmm1 [1025])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC0") [flags 0x2]) [1  S4 A32])) "../src/tpdes.f":203 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 1324 1323 1325 47 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 21 xmm0 [orig:469 _383 ] [469])
            (reg:SF 22 xmm1 [1025]))) "../src/tpdes.f":203 51 {*cmpiusf}
     (nil))
(jump_insn 1325 1324 1650 47 (set (pc)
        (if_then_else (unordered (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref 1337)
            (pc))) "../src/tpdes.f":203 617 {*jcc_1}
     (nil)
 -> 1337)
;;  succ:       50
;;              48 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 469

;; basic block 48, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 47, next block 49, flags: (RTL, MODIFIED)
;;  pred:       47 (FALLTHRU)
;; bb 48 artificial_defs: { }
;; bb 48 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 469
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 469
;; lr  def 	 17 [flags] 1026
(note 1650 1325 1326 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(insn 1326 1650 1327 48 (set (reg:SF 22 xmm1 [1026])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC0") [flags 0x2]) [1  S4 A32])) "../src/tpdes.f":203 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 1327 1326 1328 48 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 21 xmm0 [orig:469 _383 ] [469])
            (reg:SF 22 xmm1 [1026]))) "../src/tpdes.f":203 51 {*cmpiusf}
     (nil))
(jump_insn 1328 1327 1332 48 (set (pc)
        (if_then_else (ltgt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1337)
            (pc))) "../src/tpdes.f":203 617 {*jcc_1}
     (nil)
 -> 1337)
;;  succ:       49 (FALLTHRU)
;;              50
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 49, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 48, next block 50, flags: (RTL, MODIFIED)
;;  pred:       46
;;              48 (FALLTHRU)
;; bb 49 artificial_defs: { }
;; bb 49 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 582
(code_label 1332 1328 1333 49 35 (nil) [1 uses])
(note 1333 1332 1334 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(insn 1334 1333 1685 49 (set (reg:QI 0 ax [orig:582 iftmp.123_510 ] [582])
        (const_int 1 [0x1])) "../src/tpdes.f":203 84 {*movqi_internal}
     (nil))
(jump_insn 1685 1334 1686 49 (set (pc)
        (label_ref 1340)) "../src/tpdes.f":203 649 {jump}
     (nil)
 -> 1340)
;;  succ:       51 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 582

(barrier 1686 1685 1337)
;; basic block 50, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 49, next block 51, flags: (RTL, MODIFIED)
;;  pred:       47
;;              48
;; bb 50 artificial_defs: { }
;; bb 50 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 582
(code_label 1337 1686 1338 50 36 (nil) [2 uses])
(note 1338 1337 1339 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(insn 1339 1338 1340 50 (set (reg:QI 0 ax [orig:582 iftmp.123_510 ] [582])
        (const_int 0 [0])) "../src/tpdes.f":203 84 {*movqi_internal}
     (nil))
;;  succ:       51 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 582

;; basic block 51, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 50, next block 52, flags: (RTL, MODIFIED)
;;  pred:       50 (FALLTHRU)
;;              49 [100.0%] 
;; bb 51 artificial_defs: { }
;; bb 51 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 582
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 582
;; lr  def 	 17 [flags] 470
(code_label 1340 1339 1341 51 38 (nil) [1 uses])
(note 1341 1340 1342 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(insn 1342 1341 1343 51 (set (reg:SI 0 ax [orig:470 iftmp.124_384 ] [470])
        (zero_extend:SI (reg:QI 0 ax [orig:582 iftmp.123_510 ] [582]))) "../src/tpdes.f":203 136 {*zero_extendqisi2}
     (nil))
(insn 1343 1342 1344 51 (parallel [
            (set (reg:SI 0 ax [orig:470 iftmp.124_384 ] [470])
                (and:SI (reg:SI 0 ax [orig:470 iftmp.124_384 ] [470])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/tpdes.f":203 391 {*andsi_1}
     (nil))
(insn 1344 1343 1345 51 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:470 iftmp.124_384 ] [470])
            (const_int 0 [0]))) "../src/tpdes.f":203 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1345 1344 1346 51 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1374)
            (pc))) "../src/tpdes.f":203 617 {*jcc_1}
     (nil)
 -> 1374)
;;  succ:       52 (FALLTHRU)
;;              53
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 52, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 51, next block 53, flags: (RTL, MODIFIED)
;;  pred:       51 (FALLTHRU)
;; bb 52 artificial_defs: { }
;; bb 52 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 471 472 473 474 677 678 1027 1028 1029 1030 1031 1032 1033
(note 1346 1345 1347 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(insn 1347 1346 1348 52 (set (reg/f:DI 0 ax [1027])
        (symbol_ref/f:DI ("*lC3") [flags 0x2]  <var_decl 0x143135870 *lC3>)) "../src/tpdes.f":204 81 {*movdi_internal}
     (nil))
(insn 1348 1347 1349 52 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -792 [0xfffffffffffffce8])) [6 dt_parm.32.common.filename+0 S8 A64])
        (reg/f:DI 0 ax [1027])) "../src/tpdes.f":204 81 {*movdi_internal}
     (nil))
(insn 1349 1348 1350 52 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -784 [0xfffffffffffffcf0])) [2 dt_parm.32.common.line+0 S4 A128])
        (const_int 204 [0xcc])) "../src/tpdes.f":204 82 {*movsi_internal}
     (nil))
(insn 1350 1349 1351 52 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -800 [0xfffffffffffffce0])) [2 dt_parm.32.common.flags+0 S4 A128])
        (const_int 128 [0x80])) "../src/tpdes.f":204 82 {*movsi_internal}
     (nil))
(insn 1351 1350 1352 52 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -796 [0xfffffffffffffce4])) [2 dt_parm.32.common.unit+0 S4 A32])
        (const_int 6 [0x6])) "../src/tpdes.f":204 82 {*movsi_internal}
     (nil))
(insn 1352 1351 1353 52 (parallel [
            (set (reg:DI 0 ax [1028])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -800 [0xfffffffffffffce0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/tpdes.f":204 218 {*adddi_1}
     (nil))
(insn 1353 1352 1354 52 (set (reg:DI 5 di)
        (reg:DI 0 ax [1028])) "../src/tpdes.f":204 81 {*movdi_internal}
     (nil))
(call_insn 1354 1353 1355 52 (call (mem:QI (symbol_ref:DI ("_gfortran_st_write") [flags 0x41]  <function_decl 0x1427e0800 _gfortran_st_write>) [0 _gfortran_st_write S1 A8])
        (const_int 0 [0])) "../src/tpdes.f":204 655 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 1355 1354 1356 52 (parallel [
            (set (reg:DI 0 ax [1029])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -800 [0xfffffffffffffce0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/tpdes.f":204 218 {*adddi_1}
     (nil))
(insn 1356 1355 1357 52 (set (reg:SI 1 dx)
        (const_int 24 [0x18])) "../src/tpdes.f":204 82 {*movsi_internal}
     (nil))
(insn 1357 1356 1358 52 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*lC26") [flags 0x2]  <var_decl 0x143135ea0 *lC26>)) "../src/tpdes.f":204 81 {*movdi_internal}
     (nil))
(insn 1358 1357 1359 52 (set (reg:DI 5 di)
        (reg:DI 0 ax [1029])) "../src/tpdes.f":204 81 {*movdi_internal}
     (nil))
(call_insn 1359 1358 1360 52 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_character_write") [flags 0x41]  <function_decl 0x1427d4900 _gfortran_transfer_character_write>) [0 _gfortran_transfer_character_write S1 A8])
        (const_int 0 [0])) "../src/tpdes.f":204 655 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 1360 1359 1361 52 (parallel [
            (set (reg:DI 0 ax [1030])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -800 [0xfffffffffffffce0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/tpdes.f":204 218 {*adddi_1}
     (nil))
(insn 1361 1360 1362 52 (set (reg:DI 5 di)
        (reg:DI 0 ax [1030])) "../src/tpdes.f":204 81 {*movdi_internal}
     (nil))
(call_insn 1362 1361 1363 52 (call (mem:QI (symbol_ref:DI ("_gfortran_st_write_done") [flags 0x41]  <function_decl 0x1427e4300 _gfortran_st_write_done>) [0 _gfortran_st_write_done S1 A8])
        (const_int 0 [0])) "../src/tpdes.f":204 655 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 1363 1362 1364 52 (set (reg:SF 21 xmm0 [1031])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC0") [flags 0x2]) [1  S4 A32])) "../src/tpdes.f":205 127 {*movsf_internal}
     (nil))
(insn 1364 1363 1365 52 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [1 discr+0 S4 A32])
        (reg:SF 21 xmm0 [1031])) "../src/tpdes.f":205 127 {*movsf_internal}
     (nil))
(insn 1365 1364 1366 52 (set (reg:SF 21 xmm0 [orig:677 _816 ] [677])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -268 [0xfffffffffffffef4])) [1 rj1+0 S4 A32])) "../src/tpdes.f":206 127 {*movsf_internal}
     (nil))
(insn 1366 1365 1367 52 (set (reg:SF 21 xmm0 [orig:678 _817 ] [678])
        (mult:SF (reg:SF 21 xmm0 [orig:677 _816 ] [677])
            (reg:SF 21 xmm0 [orig:677 _816 ] [677]))) "../src/tpdes.f":206 802 {*fop_sf_comm}
     (nil))
(insn 1367 1366 1368 52 (set (reg:SF 22 xmm1 [1032])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC12") [flags 0x2]) [1  S4 A32])) "../src/tpdes.f":206 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 2.5e-1 [0x0.8p-1])
        (nil)))
(insn 1368 1367 1369 52 (set (reg:SF 21 xmm0 [orig:471 _385 ] [471])
        (mult:SF (reg:SF 21 xmm0 [orig:678 _817 ] [678])
            (reg:SF 22 xmm1 [1032]))) "../src/tpdes.f":206 802 {*fop_sf_comm}
     (nil))
(insn 1369 1368 1370 52 (set (reg:SF 22 xmm1 [orig:472 rj2.125_386 ] [472])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 rj2+0 S4 A128])) "../src/tpdes.f":206 127 {*movsf_internal}
     (nil))
(insn 1370 1369 1371 52 (set (reg:SF 21 xmm0 [orig:473 _387 ] [473])
        (div:SF (reg:SF 21 xmm0 [orig:471 _385 ] [471])
            (reg:SF 22 xmm1 [orig:472 rj2.125_386 ] [472]))) "../src/tpdes.f":206 805 {*fop_sf_1}
     (nil))
(insn 1371 1370 1372 52 (set (reg:V4SF 22 xmm1 [1033])
        (mem/u/c:V4SF (symbol_ref/u:DI ("*lC2") [flags 0x2]) [1  S16 A128])) "../src/tpdes.f":206 1225 {movv4sf_internal}
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF -0.0 [-0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 1372 1371 1373 52 (parallel [
            (set (reg:SF 21 xmm0 [orig:474 _388 ] [474])
                (neg:SF (reg:SF 21 xmm0 [orig:473 _387 ] [473])))
            (use (reg:V4SF 22 xmm1 [1033]))
            (clobber (reg:CC 17 flags))
        ]) "../src/tpdes.f":206 470 {*absnegsf2}
     (expr_list:REG_EQUAL (neg:SF (reg:SF 21 xmm0 [orig:473 _387 ] [473]))
        (nil)))
(insn 1373 1372 1374 52 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -244 [0xffffffffffffff0c])) [1 pc+0 S4 A32])
        (reg:SF 21 xmm0 [orig:474 _388 ] [474])) "../src/tpdes.f":206 127 {*movsf_internal}
     (nil))
;;  succ:       53 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 53, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 52, next block 54, flags: (RTL, MODIFIED)
;;  pred:       51
;;              52 (FALLTHRU)
;; bb 53 artificial_defs: { }
;; bb 53 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 475 476 477 478 479 480 481 482 483 484 485 486 487 488 489 490 491 492 493 494 495 496 497 498 499 500 501 502 503 504 505 506 507 508 509 510 511 679 680 681 682 683 684 685 686 687 1034 1035 1036 1037 1038 1039 1040 1041 1042 1043 1044 1045 1046 1047 1048 1049 1050 1051 1052 1053 1054 1055 1056 1057 1058
(code_label 1374 1373 1375 53 39 (nil) [1 uses])
(note 1375 1374 1376 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(insn 1376 1375 1377 53 (set (reg:SF 22 xmm1 [orig:475 rj1.126_389 ] [475])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -268 [0xfffffffffffffef4])) [1 rj1+0 S4 A32])) "../src/tpdes.f":208 127 {*movsf_internal}
     (nil))
(insn 1377 1376 1378 53 (set (reg:SF 21 xmm0 [1034])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC1") [flags 0x2]) [1  S4 A32])) "../src/tpdes.f":208 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 5.0e-1 [0x0.8p+0])
        (nil)))
(insn 1378 1377 1379 53 (set (reg:SF 21 xmm0 [orig:476 _390 ] [476])
        (mult:SF (reg:SF 21 xmm0 [1034])
            (reg:SF 22 xmm1 [orig:475 rj1.126_389 ] [475]))) "../src/tpdes.f":208 802 {*fop_sf_comm}
     (nil))
(insn 1379 1378 1380 53 (set (reg:SF 22 xmm1 [orig:477 rj2.127_391 ] [477])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 rj2+0 S4 A128])) "../src/tpdes.f":208 127 {*movsf_internal}
     (nil))
(insn 1380 1379 1776 53 (set (reg:SF 21 xmm0 [orig:476 _390 ] [476])
        (div:SF (reg:SF 21 xmm0 [orig:476 _390 ] [476])
            (reg:SF 22 xmm1 [orig:477 rj2.127_391 ] [477]))) "../src/tpdes.f":208 805 {*fop_sf_1}
     (nil))
(insn 1776 1380 1381 53 (set (reg:SF 22 xmm1 [orig:478 _392 ] [478])
        (reg:SF 21 xmm0 [orig:476 _390 ] [476])) "../src/tpdes.f":208 127 {*movsf_internal}
     (nil))
(insn 1381 1776 1382 53 (set (reg:SF 21 xmm0 [orig:479 _393 ] [479])
        (sqrt:SF (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -52 [0xffffffffffffffcc])) [1 discr+0 S4 A32]))) "../src/tpdes.f":208 836 {*sqrtsf2_sse}
     (nil))
(insn 1382 1381 1383 53 (set (reg:SF 23 xmm2 [1035])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC20") [flags 0x2]) [1  S4 A32])) "../src/tpdes.f":208 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 1383 1382 1385 53 (set (reg:SF 21 xmm0 [orig:480 _394 ] [480])
        (minus:SF (reg:SF 21 xmm0 [orig:479 _393 ] [479])
            (reg:SF 23 xmm2 [1035]))) "../src/tpdes.f":208 805 {*fop_sf_1}
     (nil))
(insn 1385 1383 1386 53 (set (reg:SF 21 xmm0 [orig:482 _396 ] [482])
        (mult:SF (reg:SF 21 xmm0 [orig:481 _395 ] [481])
            (reg:SF 22 xmm1 [orig:478 _392 ] [478]))) "../src/tpdes.f":208 802 {*fop_sf_comm}
     (nil))
(insn 1386 1385 1387 53 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -304 [0xfffffffffffffed0])) [1 zeta+0 S4 A128])
        (reg:SF 21 xmm0 [orig:482 _396 ] [482])) "../src/tpdes.f":208 127 {*movsf_internal}
     (nil))
(insn 1387 1386 1777 53 (set (reg:SF 21 xmm0 [orig:679 _820 ] [679])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -304 [0xfffffffffffffed0])) [1 zeta+0 S4 A128])) "../src/tpdes.f":209 127 {*movsf_internal}
     (nil))
(insn 1777 1387 1388 53 (set (reg:SF 22 xmm1 [orig:679 _820 ] [679])
        (reg:SF 21 xmm0 [orig:679 _820 ] [679])) "../src/tpdes.f":209 127 {*movsf_internal}
     (nil))
(insn 1388 1777 1389 53 (set (reg:SF 22 xmm1 [orig:679 _820 ] [679])
        (mult:SF (reg:SF 22 xmm1 [orig:679 _820 ] [679])
            (reg:SF 21 xmm0 [orig:679 _820 ] [679]))) "../src/tpdes.f":209 802 {*fop_sf_comm}
     (nil))
(insn 1389 1388 1390 53 (set (reg:SF 23 xmm2 [orig:483 ri1.128_397 ] [483])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -252 [0xffffffffffffff04])) [1 ri1+0 S4 A32])) "../src/tpdes.f":209 127 {*movsf_internal}
     (nil))
(insn 1390 1389 1391 53 (set (reg:SF 21 xmm0 [orig:484 zeta.129_398 ] [484])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -304 [0xfffffffffffffed0])) [1 zeta+0 S4 A128])) "../src/tpdes.f":209 127 {*movsf_internal}
     (nil))
(insn 1391 1390 1392 53 (set (reg:SF 21 xmm0 [orig:485 _399 ] [485])
        (mult:SF (reg:SF 21 xmm0 [orig:484 zeta.129_398 ] [484])
            (reg:SF 23 xmm2 [orig:483 ri1.128_397 ] [483]))) "../src/tpdes.f":209 802 {*fop_sf_comm}
     (nil))
(insn 1392 1391 1393 53 (set (reg:SF 23 xmm2 [orig:486 ri2.130_400 ] [486])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -256 [0xffffffffffffff00])) [1 ri2+0 S4 A128])) "../src/tpdes.f":209 127 {*movsf_internal}
     (nil))
(insn 1393 1392 1394 53 (set (reg:SF 22 xmm1 [orig:487 _401 ] [487])
        (mult:SF (reg:SF 22 xmm1 [orig:680 _821 ] [680])
            (reg:SF 23 xmm2 [orig:486 ri2.130_400 ] [486]))) "../src/tpdes.f":209 802 {*fop_sf_comm}
     (nil))
(insn 1394 1393 1395 53 (set (reg:SF 21 xmm0 [orig:488 _402 ] [488])
        (minus:SF (reg:SF 21 xmm0 [orig:485 _399 ] [485])
            (reg:SF 22 xmm1 [orig:487 _401 ] [487]))) "../src/tpdes.f":209 805 {*fop_sf_1}
     (nil))
(insn 1395 1394 1396 53 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -288 [0xfffffffffffffee0])) [1 tc+0 S4 A128])
        (reg:SF 21 xmm0 [orig:488 _402 ] [488])) "../src/tpdes.f":209 127 {*movsf_internal}
     (nil))
(insn 1396 1395 1397 53 (set (reg:SF 21 xmm0 [orig:489 tc.131_403 ] [489])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -288 [0xfffffffffffffee0])) [1 tc+0 S4 A128])) "../src/tpdes.f":210 127 {*movsf_internal}
     (nil))
(insn 1397 1396 1398 53 (set (reg:SF 22 xmm1 [orig:490 pc.132_404 ] [490])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -244 [0xffffffffffffff0c])) [1 pc+0 S4 A32])) "../src/tpdes.f":210 127 {*movsf_internal}
     (nil))
(insn 1398 1397 1399 53 (set (reg:SF 21 xmm0 [orig:491 _405 ] [491])
        (div:SF (reg:SF 21 xmm0 [orig:489 tc.131_403 ] [489])
            (reg:SF 22 xmm1 [orig:490 pc.132_404 ] [490]))) "../src/tpdes.f":210 805 {*fop_sf_1}
     (nil))
(insn 1399 1398 1400 53 (set (reg/f:DI 0 ax [1036])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -832 [0xfffffffffffffcc0])) [10 vel+0 S8 A64])) "../src/tpdes.f":210 81 {*movdi_internal}
     (nil))
(insn 1400 1399 1401 53 (set (reg:SF 22 xmm1 [orig:492 _406 ] [492])
        (mem:SF (reg/f:DI 0 ax [1036]) [1 *vel_598(D)+0 S4 A32])) "../src/tpdes.f":210 127 {*movsf_internal}
     (nil))
(insn 1401 1400 1402 53 (set (reg:SF 21 xmm0 [orig:493 _407 ] [493])
        (mult:SF (reg:SF 21 xmm0 [orig:491 _405 ] [491])
            (reg:SF 22 xmm1 [orig:492 _406 ] [492]))) "../src/tpdes.f":210 802 {*fop_sf_comm}
     (nil))
(insn 1402 1401 1403 53 (set (reg:SF 21 xmm0 [orig:494 _408 ] [494])
        (div:SF (reg:SF 21 xmm0 [orig:493 _407 ] [493])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -80 [0xffffffffffffffb0])) [1 vd+0 S4 A32]))) "../src/tpdes.f":210 805 {*fop_sf_1}
     (nil))
(insn 1403 1402 1404 53 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -228 [0xffffffffffffff1c])) [1 eta+0 S4 A32])
        (reg:SF 21 xmm0 [orig:494 _408 ] [494])) "../src/tpdes.f":210 127 {*movsf_internal}
     (nil))
(insn 1404 1403 1779 53 (set (reg:SF 21 xmm0 [orig:681 _824 ] [681])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -80 [0xffffffffffffffb0])) [1 vd+0 S4 A32])) "../src/tpdes.f":211 127 {*movsf_internal}
     (nil))
(insn 1779 1404 1405 53 (set (reg:SF 23 xmm2 [orig:681 _824 ] [681])
        (reg:SF 21 xmm0 [orig:681 _824 ] [681])) "../src/tpdes.f":211 127 {*movsf_internal}
     (nil))
(insn 1405 1779 1406 53 (set (reg:SF 23 xmm2 [orig:681 _824 ] [681])
        (mult:SF (reg:SF 23 xmm2 [orig:681 _824 ] [681])
            (reg:SF 21 xmm0 [orig:681 _824 ] [681]))) "../src/tpdes.f":211 802 {*fop_sf_comm}
     (nil))
(insn 1406 1405 1407 53 (set (reg/f:DI 0 ax [1037])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -848 [0xfffffffffffffcb0])) [10 rad+0 S8 A64])) "../src/tpdes.f":211 81 {*movdi_internal}
     (nil))
(insn 1407 1406 1781 53 (set (reg:SF 21 xmm0 [orig:683 _826 ] [683])
        (mem:SF (reg/f:DI 0 ax [1037]) [1 *rad_593(D)+0 S4 A32])) "../src/tpdes.f":211 127 {*movsf_internal}
     (nil))
(insn 1781 1407 1408 53 (set (reg:SF 22 xmm1 [orig:683 _826 ] [683])
        (reg:SF 21 xmm0 [orig:683 _826 ] [683])) "../src/tpdes.f":211 127 {*movsf_internal}
     (nil))
(insn 1408 1781 1409 53 (set (reg:SF 22 xmm1 [orig:683 _826 ] [683])
        (mult:SF (reg:SF 22 xmm1 [orig:683 _826 ] [683])
            (reg:SF 21 xmm0 [orig:683 _826 ] [683]))) "../src/tpdes.f":211 802 {*fop_sf_comm}
     (nil))
(insn 1409 1408 1410 53 (set (reg/f:DI 0 ax [1038])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -824 [0xfffffffffffffcc8])) [10 rho+0 S8 A64])) "../src/tpdes.f":211 81 {*movdi_internal}
     (nil))
(insn 1410 1409 1411 53 (set (reg:SF 24 xmm3 [orig:495 _409 ] [495])
        (mem:SF (reg/f:DI 0 ax [1038]) [1 *rho_609(D)+0 S4 A32])) "../src/tpdes.f":211 127 {*movsf_internal}
     (nil))
(insn 1411 1410 1412 53 (set (reg:SF 21 xmm0 [1039])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC1") [flags 0x2]) [1  S4 A32])) "../src/tpdes.f":211 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 5.0e-1 [0x0.8p+0])
        (nil)))
(insn 1412 1411 1413 53 (set (reg:SF 21 xmm0 [orig:496 _410 ] [496])
        (mult:SF (reg:SF 21 xmm0 [1039])
            (reg:SF 24 xmm3 [orig:495 _409 ] [495]))) "../src/tpdes.f":211 802 {*fop_sf_comm}
     (nil))
(insn 1413 1412 1414 53 (set (reg:SF 21 xmm0 [orig:497 _411 ] [497])
        (mult:SF (reg:SF 21 xmm0 [orig:496 _410 ] [496])
            (reg:SF 23 xmm2 [orig:682 _825 ] [682]))) "../src/tpdes.f":211 802 {*fop_sf_comm}
     (nil))
(insn 1414 1413 1415 53 (set (reg:SF 23 xmm2 [orig:498 pi.133_412 ] [498])
        (mem/c:SF (symbol_ref:DI ("pi.3583") [flags 0x1c02]  <var_decl 0x1427f2120 pi>) [1 pi+0 S4 A32])) "../src/tpdes.f":211 127 {*movsf_internal}
     (nil))
(insn 1415 1414 1416 53 (set (reg:SF 21 xmm0 [orig:499 _413 ] [499])
        (mult:SF (reg:SF 21 xmm0 [orig:497 _411 ] [497])
            (reg:SF 23 xmm2 [orig:498 pi.133_412 ] [498]))) "../src/tpdes.f":211 802 {*fop_sf_comm}
     (nil))
(insn 1416 1415 1417 53 (set (reg:SF 21 xmm0 [orig:500 _414 ] [500])
        (mult:SF (reg:SF 21 xmm0 [orig:499 _413 ] [499])
            (reg:SF 22 xmm1 [orig:684 _827 ] [684]))) "../src/tpdes.f":211 802 {*fop_sf_comm}
     (nil))
(insn 1417 1416 1418 53 (set (reg:SF 22 xmm1 [orig:501 tc.134_415 ] [501])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -288 [0xfffffffffffffee0])) [1 tc+0 S4 A128])) "../src/tpdes.f":211 127 {*movsf_internal}
     (nil))
(insn 1418 1417 1419 53 (set (reg:SF 21 xmm0 [orig:502 _416 ] [502])
        (mult:SF (reg:SF 21 xmm0 [orig:500 _414 ] [500])
            (reg:SF 22 xmm1 [orig:501 tc.134_415 ] [501]))) "../src/tpdes.f":211 802 {*fop_sf_comm}
     (nil))
(insn 1419 1418 1420 53 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -284 [0xfffffffffffffee4])) [1 t+0 S4 A32])
        (reg:SF 21 xmm0 [orig:502 _416 ] [502])) "../src/tpdes.f":211 127 {*movsf_internal}
     (nil))
(insn 1420 1419 1421 53 (set (reg:SF 0 ax [orig:685 _829 ] [685])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -80 [0xffffffffffffffb0])) [1 vd+0 S4 A32])) "../src/tpdes.f":212 127 {*movsf_internal}
     (nil))
(insn 1421 1420 1422 53 (set (reg/f:DI 1 dx [1040])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -848 [0xfffffffffffffcb0])) [10 rad+0 S8 A64])) "../src/tpdes.f":212 81 {*movdi_internal}
     (nil))
(insn 1422 1421 1423 53 (set (reg:SF 21 xmm0 [orig:686 _830 ] [686])
        (mem:SF (reg/f:DI 1 dx [1040]) [1 *rad_593(D)+0 S4 A32])) "../src/tpdes.f":212 127 {*movsf_internal}
     (nil))
(insn 1423 1422 1784 53 (set (reg:SF 21 xmm0 [orig:686 _830 ] [686])
        (mult:SF (reg:SF 21 xmm0 [orig:686 _830 ] [686])
            (reg:SF 21 xmm0 [orig:686 _830 ] [686]))) "../src/tpdes.f":212 802 {*fop_sf_comm}
     (nil))
(insn 1784 1423 1841 53 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -880 [0xfffffffffffffc90])) [14 %sfp+-832 S4 A128])
        (reg:SF 21 xmm0 [orig:686 _830 ] [686])) "../src/tpdes.f":212 127 {*movsf_internal}
     (nil))
(note 1841 1784 1816 53 NOTE_INSN_DELETED)
(note 1816 1841 1424 53 NOTE_INSN_DELETED)
(insn 1424 1816 1425 53 (set (reg/f:DI 1 dx [1041])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -824 [0xfffffffffffffcc8])) [10 rho+0 S8 A64])) "../src/tpdes.f":212 81 {*movdi_internal}
     (nil))
(insn 1425 1424 1426 53 (set (reg:SF 22 xmm1 [orig:503 _417 ] [503])
        (mem:SF (reg/f:DI 1 dx [1041]) [1 *rho_609(D)+0 S4 A32])) "../src/tpdes.f":212 127 {*movsf_internal}
     (nil))
(insn 1426 1425 1427 53 (set (reg:SF 21 xmm0 [1042])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC1") [flags 0x2]) [1  S4 A32])) "../src/tpdes.f":212 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 5.0e-1 [0x0.8p+0])
        (nil)))
(insn 1427 1426 1786 53 (set (reg:SF 22 xmm1 [orig:503 _417 ] [503])
        (mult:SF (reg:SF 22 xmm1 [orig:503 _417 ] [503])
            (reg:SF 21 xmm0 [1042]))) "../src/tpdes.f":212 802 {*fop_sf_comm}
     (nil))
(insn 1786 1427 1840 53 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -864 [0xfffffffffffffca0])) [14 %sfp+-816 S4 A128])
        (reg:SF 22 xmm1 [orig:503 _417 ] [503])) "../src/tpdes.f":212 127 {*movsf_internal}
     (nil))
(note 1840 1786 1815 53 NOTE_INSN_DELETED)
(note 1815 1840 1428 53 NOTE_INSN_DELETED)
(insn 1428 1815 1429 53 (set (reg:SI 5 di)
        (const_int 3 [0x3])) "../src/tpdes.f":212 82 {*movsi_internal}
     (nil))
(insn 1429 1428 1430 53 (set (reg:SF 21 xmm0)
        (reg:SF 0 ax [orig:685 _829 ] [685])) "../src/tpdes.f":212 127 {*movsf_internal}
     (nil))
(call_insn/u 1430 1429 1787 53 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("__powisf2") [flags 0x41]) [0  S1 A8])
            (const_int 0 [0]))) "../src/tpdes.f":212 665 {*call_value}
     (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
        (nil))
    (expr_list (use (reg:SI 5 di))
        (expr_list (use (reg:SF 21 xmm0))
            (nil))))
(note 1787 1430 1823 53 NOTE_INSN_DELETED)
(note 1823 1787 1432 53 NOTE_INSN_DELETED)
(insn 1432 1823 1433 53 (set (reg:SF 21 xmm0 [orig:506 _420 ] [506])
        (mult:SF (reg:SF 21 xmm0 [orig:505 _419 ] [505])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -864 [0xfffffffffffffca0])) [14 %sfp+-816 S4 A128]))) "../src/tpdes.f":212 802 {*fop_sf_comm}
     (nil))
(insn 1433 1432 1434 53 (set (reg:SF 22 xmm1 [orig:507 pi.135_421 ] [507])
        (mem/c:SF (symbol_ref:DI ("pi.3583") [flags 0x1c02]  <var_decl 0x1427f2120 pi>) [1 pi+0 S4 A32])) "../src/tpdes.f":212 127 {*movsf_internal}
     (nil))
(insn 1434 1433 1788 53 (set (reg:SF 21 xmm0 [orig:508 _422 ] [508])
        (mult:SF (reg:SF 21 xmm0 [orig:506 _420 ] [506])
            (reg:SF 22 xmm1 [orig:507 pi.135_421 ] [507]))) "../src/tpdes.f":212 802 {*fop_sf_comm}
     (nil))
(note 1788 1434 1822 53 NOTE_INSN_DELETED)
(note 1822 1788 1435 53 NOTE_INSN_DELETED)
(insn 1435 1822 1436 53 (set (reg:SF 21 xmm0 [orig:509 _423 ] [509])
        (mult:SF (reg:SF 21 xmm0 [orig:508 _422 ] [508])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -880 [0xfffffffffffffc90])) [14 %sfp+-832 S4 A128]))) "../src/tpdes.f":212 802 {*fop_sf_comm}
     (nil))
(insn 1436 1435 1437 53 (set (reg:SF 22 xmm1 [orig:510 pc.136_424 ] [510])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -244 [0xffffffffffffff0c])) [1 pc+0 S4 A32])) "../src/tpdes.f":212 127 {*movsf_internal}
     (nil))
(insn 1437 1436 1438 53 (set (reg:SF 21 xmm0 [orig:511 _425 ] [511])
        (mult:SF (reg:SF 21 xmm0 [orig:509 _423 ] [509])
            (reg:SF 22 xmm1 [orig:510 pc.136_424 ] [510]))) "../src/tpdes.f":212 802 {*fop_sf_comm}
     (nil))
(insn 1438 1437 1439 53 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -240 [0xffffffffffffff10])) [1 p+0 S4 A128])
        (reg:SF 21 xmm0 [orig:511 _425 ] [511])) "../src/tpdes.f":212 127 {*movsf_internal}
     (nil))
(insn 1439 1438 1440 53 (set (reg/f:DI 0 ax [1043])
        (symbol_ref/f:DI ("*lC3") [flags 0x2]  <var_decl 0x143135870 *lC3>)) "../src/tpdes.f":213 81 {*movdi_internal}
     (nil))
(insn 1440 1439 1441 53 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -792 [0xfffffffffffffce8])) [6 dt_parm.33.common.filename+0 S8 A64])
        (reg/f:DI 0 ax [1043])) "../src/tpdes.f":213 81 {*movdi_internal}
     (nil))
(insn 1441 1440 1442 53 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -784 [0xfffffffffffffcf0])) [2 dt_parm.33.common.line+0 S4 A128])
        (const_int 213 [0xd5])) "../src/tpdes.f":213 82 {*movsi_internal}
     (nil))
(insn 1442 1441 1443 53 (set (reg/f:DI 0 ax [1044])
        (symbol_ref/f:DI ("*lC27") [flags 0x2]  <var_decl 0x143135f30 *lC27>)) "../src/tpdes.f":213 81 {*movdi_internal}
     (nil))
(insn 1443 1442 1444 53 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -728 [0xfffffffffffffd28])) [6 dt_parm.33.format+0 S8 A64])
        (reg/f:DI 0 ax [1044])) "../src/tpdes.f":213 81 {*movdi_internal}
     (nil))
(insn 1444 1443 1445 53 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -720 [0xfffffffffffffd30])) [2 dt_parm.33.format_len+0 S4 A128])
        (const_int 118 [0x76])) "../src/tpdes.f":213 82 {*movsi_internal}
     (nil))
(insn 1445 1444 1446 53 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -800 [0xfffffffffffffce0])) [2 dt_parm.33.common.flags+0 S4 A128])
        (const_int 4096 [0x1000])) "../src/tpdes.f":213 82 {*movsi_internal}
     (nil))
(insn 1446 1445 1447 53 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -796 [0xfffffffffffffce4])) [2 dt_parm.33.common.unit+0 S4 A32])
        (const_int 6 [0x6])) "../src/tpdes.f":213 82 {*movsi_internal}
     (nil))
(insn 1447 1446 1448 53 (parallel [
            (set (reg:DI 0 ax [1045])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -800 [0xfffffffffffffce0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/tpdes.f":213 218 {*adddi_1}
     (nil))
(insn 1448 1447 1449 53 (set (reg:DI 5 di)
        (reg:DI 0 ax [1045])) "../src/tpdes.f":213 81 {*movdi_internal}
     (nil))
(call_insn 1449 1448 1450 53 (call (mem:QI (symbol_ref:DI ("_gfortran_st_write") [flags 0x41]  <function_decl 0x1427e0800 _gfortran_st_write>) [0 _gfortran_st_write S1 A8])
        (const_int 0 [0])) "../src/tpdes.f":213 655 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 1450 1449 1451 53 (parallel [
            (set (reg:DI 2 cx [1046])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -244 [0xffffffffffffff0c])))
            (clobber (reg:CC 17 flags))
        ]) "../src/tpdes.f":213 218 {*adddi_1}
     (nil))
(insn 1451 1450 1452 53 (parallel [
            (set (reg:DI 0 ax [1047])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -800 [0xfffffffffffffce0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/tpdes.f":213 218 {*adddi_1}
     (nil))
(insn 1452 1451 1453 53 (set (reg:SI 1 dx)
        (const_int 4 [0x4])) "../src/tpdes.f":213 82 {*movsi_internal}
     (nil))
(insn 1453 1452 1454 53 (set (reg:DI 4 si)
        (reg:DI 2 cx [1046])) "../src/tpdes.f":213 81 {*movdi_internal}
     (nil))
(insn 1454 1453 1455 53 (set (reg:DI 5 di)
        (reg:DI 0 ax [1047])) "../src/tpdes.f":213 81 {*movdi_internal}
     (nil))
(call_insn 1455 1454 1456 53 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_real_write") [flags 0x41]  <function_decl 0x1427d4d00 _gfortran_transfer_real_write>) [0 _gfortran_transfer_real_write S1 A8])
        (const_int 0 [0])) "../src/tpdes.f":213 655 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 1456 1455 1457 53 (parallel [
            (set (reg:DI 2 cx [1048])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -240 [0xffffffffffffff10])))
            (clobber (reg:CC 17 flags))
        ]) "../src/tpdes.f":213 218 {*adddi_1}
     (nil))
(insn 1457 1456 1458 53 (parallel [
            (set (reg:DI 0 ax [1049])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -800 [0xfffffffffffffce0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/tpdes.f":213 218 {*adddi_1}
     (nil))
(insn 1458 1457 1459 53 (set (reg:SI 1 dx)
        (const_int 4 [0x4])) "../src/tpdes.f":213 82 {*movsi_internal}
     (nil))
(insn 1459 1458 1460 53 (set (reg:DI 4 si)
        (reg:DI 2 cx [1048])) "../src/tpdes.f":213 81 {*movdi_internal}
     (nil))
(insn 1460 1459 1461 53 (set (reg:DI 5 di)
        (reg:DI 0 ax [1049])) "../src/tpdes.f":213 81 {*movdi_internal}
     (nil))
(call_insn 1461 1460 1462 53 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_real_write") [flags 0x41]  <function_decl 0x1427d4d00 _gfortran_transfer_real_write>) [0 _gfortran_transfer_real_write S1 A8])
        (const_int 0 [0])) "../src/tpdes.f":213 655 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 1462 1461 1463 53 (parallel [
            (set (reg:DI 2 cx [1050])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -304 [0xfffffffffffffed0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/tpdes.f":213 218 {*adddi_1}
     (nil))
(insn 1463 1462 1464 53 (parallel [
            (set (reg:DI 0 ax [1051])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -800 [0xfffffffffffffce0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/tpdes.f":213 218 {*adddi_1}
     (nil))
(insn 1464 1463 1465 53 (set (reg:SI 1 dx)
        (const_int 4 [0x4])) "../src/tpdes.f":213 82 {*movsi_internal}
     (nil))
(insn 1465 1464 1466 53 (set (reg:DI 4 si)
        (reg:DI 2 cx [1050])) "../src/tpdes.f":213 81 {*movdi_internal}
     (nil))
(insn 1466 1465 1467 53 (set (reg:DI 5 di)
        (reg:DI 0 ax [1051])) "../src/tpdes.f":213 81 {*movdi_internal}
     (nil))
(call_insn 1467 1466 1468 53 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_real_write") [flags 0x41]  <function_decl 0x1427d4d00 _gfortran_transfer_real_write>) [0 _gfortran_transfer_real_write S1 A8])
        (const_int 0 [0])) "../src/tpdes.f":213 655 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 1468 1467 1469 53 (parallel [
            (set (reg:DI 2 cx [1052])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -288 [0xfffffffffffffee0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/tpdes.f":213 218 {*adddi_1}
     (nil))
(insn 1469 1468 1470 53 (parallel [
            (set (reg:DI 0 ax [1053])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -800 [0xfffffffffffffce0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/tpdes.f":213 218 {*adddi_1}
     (nil))
(insn 1470 1469 1471 53 (set (reg:SI 1 dx)
        (const_int 4 [0x4])) "../src/tpdes.f":213 82 {*movsi_internal}
     (nil))
(insn 1471 1470 1472 53 (set (reg:DI 4 si)
        (reg:DI 2 cx [1052])) "../src/tpdes.f":213 81 {*movdi_internal}
     (nil))
(insn 1472 1471 1473 53 (set (reg:DI 5 di)
        (reg:DI 0 ax [1053])) "../src/tpdes.f":213 81 {*movdi_internal}
     (nil))
(call_insn 1473 1472 1474 53 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_real_write") [flags 0x41]  <function_decl 0x1427d4d00 _gfortran_transfer_real_write>) [0 _gfortran_transfer_real_write S1 A8])
        (const_int 0 [0])) "../src/tpdes.f":213 655 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 1474 1473 1475 53 (parallel [
            (set (reg:DI 2 cx [1054])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -284 [0xfffffffffffffee4])))
            (clobber (reg:CC 17 flags))
        ]) "../src/tpdes.f":213 218 {*adddi_1}
     (nil))
(insn 1475 1474 1476 53 (parallel [
            (set (reg:DI 0 ax [1055])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -800 [0xfffffffffffffce0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/tpdes.f":213 218 {*adddi_1}
     (nil))
(insn 1476 1475 1477 53 (set (reg:SI 1 dx)
        (const_int 4 [0x4])) "../src/tpdes.f":213 82 {*movsi_internal}
     (nil))
(insn 1477 1476 1478 53 (set (reg:DI 4 si)
        (reg:DI 2 cx [1054])) "../src/tpdes.f":213 81 {*movdi_internal}
     (nil))
(insn 1478 1477 1479 53 (set (reg:DI 5 di)
        (reg:DI 0 ax [1055])) "../src/tpdes.f":213 81 {*movdi_internal}
     (nil))
(call_insn 1479 1478 1480 53 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_real_write") [flags 0x41]  <function_decl 0x1427d4d00 _gfortran_transfer_real_write>) [0 _gfortran_transfer_real_write S1 A8])
        (const_int 0 [0])) "../src/tpdes.f":213 655 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 1480 1479 1481 53 (parallel [
            (set (reg:DI 2 cx [1056])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -228 [0xffffffffffffff1c])))
            (clobber (reg:CC 17 flags))
        ]) "../src/tpdes.f":213 218 {*adddi_1}
     (nil))
(insn 1481 1480 1482 53 (parallel [
            (set (reg:DI 0 ax [1057])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -800 [0xfffffffffffffce0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/tpdes.f":213 218 {*adddi_1}
     (nil))
(insn 1482 1481 1483 53 (set (reg:SI 1 dx)
        (const_int 4 [0x4])) "../src/tpdes.f":213 82 {*movsi_internal}
     (nil))
(insn 1483 1482 1484 53 (set (reg:DI 4 si)
        (reg:DI 2 cx [1056])) "../src/tpdes.f":213 81 {*movdi_internal}
     (nil))
(insn 1484 1483 1485 53 (set (reg:DI 5 di)
        (reg:DI 0 ax [1057])) "../src/tpdes.f":213 81 {*movdi_internal}
     (nil))
(call_insn 1485 1484 1486 53 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_real_write") [flags 0x41]  <function_decl 0x1427d4d00 _gfortran_transfer_real_write>) [0 _gfortran_transfer_real_write S1 A8])
        (const_int 0 [0])) "../src/tpdes.f":213 655 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 1486 1485 1487 53 (parallel [
            (set (reg:DI 0 ax [1058])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -800 [0xfffffffffffffce0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/tpdes.f":213 218 {*adddi_1}
     (nil))
(insn 1487 1486 1488 53 (set (reg:DI 5 di)
        (reg:DI 0 ax [1058])) "../src/tpdes.f":213 81 {*movdi_internal}
     (nil))
(call_insn 1488 1487 1489 53 (call (mem:QI (symbol_ref:DI ("_gfortran_st_write_done") [flags 0x41]  <function_decl 0x1427e4300 _gfortran_st_write_done>) [0 _gfortran_st_write_done S1 A8])
        (const_int 0 [0])) "../src/tpdes.f":213 655 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       54 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 54, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 53, next block 55, flags: (RTL, MODIFIED)
;;  pred:       53 (FALLTHRU)
;;              45 [100.0%] 
;; bb 54 artificial_defs: { }
;; bb 54 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 701 1059
(code_label 1489 1488 1490 54 34 (nil) [1 uses])
(note 1490 1489 1491 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(insn 1491 1490 1492 54 (set (reg/f:DI 0 ax [1059])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 24 [0x18])) [11 n+0 S8 A64])) "../src/tpdes.f":220 81 {*movdi_internal}
     (nil))
(insn 1492 1491 1493 54 (set (reg:SI 3 bx [orig:701 _892 ] [701])
        (mem:SI (reg/f:DI 0 ax [1059]) [2 *n_522(D)+0 S4 A32])) "../src/tpdes.f":220 82 {*movsi_internal}
     (nil))
(insn 1493 1492 1621 54 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [2 i+0 S4 A32])
        (const_int 1 [0x1])) "../src/tpdes.f":220 82 {*movsi_internal}
     (nil))
;;  succ:       55 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 701

;; basic block 55, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 54, next block 56, flags: (RTL, MODIFIED)
;;  pred:       54 (FALLTHRU)
;;              56 [100.0%] 
;; bb 55 artificial_defs: { }
;; bb 55 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 701
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 701
;; lr  def 	 17 [flags] 702
(code_label 1621 1493 1494 55 41 (nil) [1 uses])
(note 1494 1621 1495 55 [bb 55] NOTE_INSN_BASIC_BLOCK)
(insn 1495 1494 1496 55 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -64 [0xffffffffffffffc0])) [2 i+0 S4 A32])
            (reg:SI 3 bx [orig:701 _892 ] [701]))) "../src/tpdes.f":220 7 {*cmpsi_1}
     (nil))
(insn 1496 1495 1497 55 (set (reg:QI 0 ax [orig:702 _894 ] [702])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "../src/tpdes.f":220 613 {*setcc_qi}
     (nil))
(insn 1497 1496 1498 55 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:702 _894 ] [702])
            (const_int 0 [0]))) "../src/tpdes.f":220 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 1498 1497 1499 55 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1704)
            (pc))) "../src/tpdes.f":220 617 {*jcc_1}
     (nil)
 -> 1704)
;;  succ:       62
;;              56 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 701

;; basic block 56, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 55, next block 62, flags: (RTL, MODIFIED)
;;  pred:       55 (FALLTHRU)
;; bb 56 artificial_defs: { }
;; bb 56 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 701
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 512 513 514 515 516 517 518 519 520 521 522 523 524 525 526 527 528 529 530 531 532 533 534 535 536 537 538 539 540 541 542 543 544 545 546 547 548 549 550 551 552 553 554 555 556 557 558 559 560 561 562 563 564 565 566 567 568 569 570 571 572 573 574 575 576 703 704 705 706 707 708 709 710 1060 1061 1062 1063 1064 1065 1066 1067 1068 1069 1070 1071 1072 1073 1074 1075 1076 1077 1078 1079 1080 1081 1082 1083 1084 1085 1086 1087 1088 1089 1090 1091 1092 1093 1094
(note 1499 1498 1500 56 [bb 56] NOTE_INSN_BASIC_BLOCK)
(insn 1500 1499 1501 56 (set (reg:SI 0 ax [1060])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [2 i+0 S4 A32])) "../src/tpdes.f":221 82 {*movsi_internal}
     (nil))
(insn 1501 1500 1502 56 (set (reg:DI 0 ax [orig:512 _426 ] [512])
        (sign_extend:DI (reg:SI 0 ax [1060]))) "../src/tpdes.f":221 145 {*extendsidi2_rex64}
     (nil))
(insn 1502 1501 1503 56 (parallel [
            (set (reg:DI 1 dx [orig:513 _427 ] [513])
                (plus:DI (reg:DI 0 ax [orig:512 _426 ] [512])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/tpdes.f":221 218 {*adddi_1}
     (nil))
(insn 1503 1502 1504 56 (set (reg/f:DI 0 ax [1061])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 80 [0x50])) [12 gam+0 S8 A64])) "../src/tpdes.f":221 81 {*movdi_internal}
     (nil))
(insn 1504 1503 1505 56 (set (reg:SF 21 xmm0 [orig:514 _428 ] [514])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:513 _427 ] [513])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1061])) [1 *gam_786(D) S4 A32])) "../src/tpdes.f":221 127 {*movsf_internal}
     (nil))
(insn 1505 1504 1506 56 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -236 [0xffffffffffffff14])) [1 g+0 S4 A32])
        (reg:SF 21 xmm0 [orig:514 _428 ] [514])) "../src/tpdes.f":221 127 {*movsf_internal}
     (nil))
(insn 1506 1505 1507 56 (set (reg/f:DI 0 ax [1062])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -840 [0xfffffffffffffcb8])) [10 omg+0 S8 A64])) "../src/tpdes.f":223 81 {*movdi_internal}
     (nil))
(insn 1507 1506 1508 56 (set (reg:SF 22 xmm1 [orig:515 _429 ] [515])
        (mem:SF (reg/f:DI 0 ax [1062]) [1 *omg_596(D)+0 S4 A32])) "../src/tpdes.f":223 127 {*movsf_internal}
     (nil))
(insn 1508 1507 1509 56 (set (reg:SI 0 ax [1063])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [2 i+0 S4 A32])) "../src/tpdes.f":223 82 {*movsi_internal}
     (nil))
(insn 1509 1508 1510 56 (set (reg:DI 0 ax [orig:516 _430 ] [516])
        (sign_extend:DI (reg:SI 0 ax [1063]))) "../src/tpdes.f":223 145 {*extendsidi2_rex64}
     (nil))
(insn 1510 1509 1511 56 (parallel [
            (set (reg:DI 1 dx [orig:517 _431 ] [517])
                (plus:DI (reg:DI 0 ax [orig:516 _430 ] [516])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/tpdes.f":223 218 {*adddi_1}
     (nil))
(insn 1511 1510 1512 56 (set (reg/f:DI 0 ax [1064])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 32 [0x20])) [12 r+0 S8 A64])) "../src/tpdes.f":223 81 {*movdi_internal}
     (nil))
(insn 1512 1511 1789 56 (set (reg:SF 21 xmm0 [orig:518 _432 ] [518])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:517 _431 ] [517])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1064])) [1 *r_585(D) S4 A32])) "../src/tpdes.f":223 127 {*movsf_internal}
     (nil))
(insn 1789 1512 1513 56 (set (reg:SF 24 xmm3 [orig:515 _429 ] [515])
        (reg:SF 22 xmm1 [orig:515 _429 ] [515])) "../src/tpdes.f":223 127 {*movsf_internal}
     (nil))
(insn 1513 1789 1514 56 (set (reg:SF 24 xmm3 [orig:515 _429 ] [515])
        (mult:SF (reg:SF 24 xmm3 [orig:515 _429 ] [515])
            (reg:SF 21 xmm0 [orig:518 _432 ] [518]))) "../src/tpdes.f":223 802 {*fop_sf_comm}
     (nil))
(insn 1514 1513 1515 56 (set (reg/f:DI 0 ax [1065])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -832 [0xfffffffffffffcc0])) [10 vel+0 S8 A64])) "../src/tpdes.f":223 81 {*movdi_internal}
     (nil))
(insn 1515 1514 1516 56 (set (reg:SF 22 xmm1 [orig:520 _434 ] [520])
        (mem:SF (reg/f:DI 0 ax [1065]) [1 *vel_598(D)+0 S4 A32])) "../src/tpdes.f":223 127 {*movsf_internal}
     (nil))
(insn 1516 1515 1517 56 (set (reg:SF 23 xmm2 [orig:521 zeta.137_435 ] [521])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -304 [0xfffffffffffffed0])) [1 zeta+0 S4 A128])) "../src/tpdes.f":223 127 {*movsf_internal}
     (nil))
(insn 1517 1516 1518 56 (set (reg:SF 21 xmm0 [1066])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC1") [flags 0x2]) [1  S4 A32])) "../src/tpdes.f":223 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 5.0e-1 [0x0.8p+0])
        (nil)))
(insn 1518 1517 1519 56 (set (reg:SF 21 xmm0 [orig:522 _436 ] [522])
        (mult:SF (reg:SF 21 xmm0 [1066])
            (reg:SF 23 xmm2 [orig:521 zeta.137_435 ] [521]))) "../src/tpdes.f":223 802 {*fop_sf_comm}
     (nil))
(insn 1519 1518 1520 56 (set (reg:SF 21 xmm0 [orig:523 _437 ] [523])
        (mult:SF (reg:SF 21 xmm0 [orig:522 _436 ] [522])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -80 [0xffffffffffffffb0])) [1 vd+0 S4 A32]))) "../src/tpdes.f":223 802 {*fop_sf_comm}
     (nil))
(insn 1520 1519 1521 56 (set (reg:SF 21 xmm0 [orig:524 _438 ] [524])
        (plus:SF (reg:SF 21 xmm0 [orig:523 _437 ] [523])
            (reg:SF 22 xmm1 [orig:520 _434 ] [520]))) "../src/tpdes.f":223 802 {*fop_sf_comm}
     (nil))
(insn 1521 1520 1523 56 (set (reg:SF 22 xmm1)
        (reg:SF 24 xmm3 [orig:519 _433 ] [519])) "../src/tpdes.f":223 127 {*movsf_internal}
     (nil))
(call_insn/u 1523 1521 1524 56 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("atan2f") [flags 0x41]  <function_decl 0x14263a400 __builtin_atan2f>) [0 __builtin_atan2f S1 A8])
            (const_int 0 [0]))) "../src/tpdes.f":223 665 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (expr_list:SF (use (reg:SF 22 xmm1))
            (nil))))
(insn 1524 1523 1525 56 (set (reg:SF 0 ax [1067])
        (reg:SF 21 xmm0)) "../src/tpdes.f":223 127 {*movsf_internal}
     (nil))
(insn 1525 1524 1526 56 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -208 [0xffffffffffffff30])) [1 phi+0 S4 A32])
        (reg:SF 0 ax [1067])) "../src/tpdes.f":223 127 {*movsf_internal}
     (nil))
(insn 1526 1525 1527 56 (set (reg/f:DI 0 ax [1068])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -832 [0xfffffffffffffcc0])) [10 vel+0 S8 A64])) "../src/tpdes.f":224 81 {*movdi_internal}
     (nil))
(insn 1527 1526 1528 56 (set (reg:SF 21 xmm0 [orig:703 _897 ] [703])
        (mem:SF (reg/f:DI 0 ax [1068]) [1 *vel_598(D)+0 S4 A32])) "../src/tpdes.f":224 127 {*movsf_internal}
     (nil))
(insn 1528 1527 1792 56 (set (reg:SF 21 xmm0 [orig:703 _897 ] [703])
        (mult:SF (reg:SF 21 xmm0 [orig:703 _897 ] [703])
            (reg:SF 21 xmm0 [orig:703 _897 ] [703]))) "../src/tpdes.f":224 802 {*fop_sf_comm}
     (nil))
(insn 1792 1528 1844 56 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -880 [0xfffffffffffffc90])) [14 %sfp+-832 S4 A128])
        (reg:SF 21 xmm0 [orig:703 _897 ] [703])) "../src/tpdes.f":224 127 {*movsf_internal}
     (nil))
(note 1844 1792 1819 56 NOTE_INSN_DELETED)
(note 1819 1844 1529 56 NOTE_INSN_DELETED)
(insn 1529 1819 1530 56 (set (reg/f:DI 0 ax [1069])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -840 [0xfffffffffffffcb8])) [10 omg+0 S8 A64])) "../src/tpdes.f":224 81 {*movdi_internal}
     (nil))
(insn 1530 1529 1531 56 (set (reg:SF 22 xmm1 [orig:525 _439 ] [525])
        (mem:SF (reg/f:DI 0 ax [1069]) [1 *omg_596(D)+0 S4 A32])) "../src/tpdes.f":224 127 {*movsf_internal}
     (nil))
(insn 1531 1530 1532 56 (set (reg:SI 0 ax [1070])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [2 i+0 S4 A32])) "../src/tpdes.f":224 82 {*movsi_internal}
     (nil))
(insn 1532 1531 1533 56 (set (reg:DI 0 ax [orig:526 _440 ] [526])
        (sign_extend:DI (reg:SI 0 ax [1070]))) "../src/tpdes.f":224 145 {*extendsidi2_rex64}
     (nil))
(insn 1533 1532 1534 56 (parallel [
            (set (reg:DI 1 dx [orig:527 _441 ] [527])
                (plus:DI (reg:DI 0 ax [orig:526 _440 ] [526])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/tpdes.f":224 218 {*adddi_1}
     (nil))
(insn 1534 1533 1535 56 (set (reg/f:DI 0 ax [1071])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 32 [0x20])) [12 r+0 S8 A64])) "../src/tpdes.f":224 81 {*movdi_internal}
     (nil))
(insn 1535 1534 1536 56 (set (reg:SF 21 xmm0 [orig:528 _442 ] [528])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:527 _441 ] [527])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1071])) [1 *r_585(D) S4 A32])) "../src/tpdes.f":224 127 {*movsf_internal}
     (nil))
(insn 1536 1535 1793 56 (set (reg:SF 21 xmm0 [orig:529 _443 ] [529])
        (mult:SF (reg:SF 21 xmm0 [orig:528 _442 ] [528])
            (reg:SF 22 xmm1 [orig:525 _439 ] [525]))) "../src/tpdes.f":224 802 {*fop_sf_comm}
     (nil))
(insn 1793 1536 1538 56 (set (reg:SF 27 xmm6 [orig:705 _899 ] [705])
        (reg:SF 21 xmm0 [orig:705 _899 ] [705])) "../src/tpdes.f":224 127 {*movsf_internal}
     (nil))
(insn 1538 1793 1794 56 (set (reg:SF 27 xmm6 [orig:705 _899 ] [705])
        (mult:SF (reg:SF 27 xmm6 [orig:705 _899 ] [705])
            (reg:SF 21 xmm0 [orig:705 _899 ] [705]))) "../src/tpdes.f":224 802 {*fop_sf_comm}
     (nil))
(insn 1794 1538 1843 56 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -896 [0xfffffffffffffc80])) [14 %sfp+-848 S4 A128])
        (reg:SF 27 xmm6 [orig:705 _899 ] [705])) "../src/tpdes.f":224 127 {*movsf_internal}
     (nil))
(note 1843 1794 1818 56 NOTE_INSN_DELETED)
(note 1818 1843 1539 56 NOTE_INSN_DELETED)
(insn 1539 1818 1540 56 (set (reg:SF 22 xmm1 [1072])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -80 [0xffffffffffffffb0])) [1 vd+0 S4 A32])) "../src/tpdes.f":224 127 {*movsf_internal}
     (nil))
(insn 1540 1539 1541 56 (set (reg:SF 21 xmm0 [1073])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC1") [flags 0x2]) [1  S4 A32])) "../src/tpdes.f":224 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 5.0e-1 [0x0.8p+0])
        (nil)))
(insn 1541 1540 1542 56 (set (reg:SF 21 xmm0 [orig:530 _444 ] [530])
        (mult:SF (reg:SF 21 xmm0 [1073])
            (reg:SF 22 xmm1 [1072]))) "../src/tpdes.f":224 802 {*fop_sf_comm}
     (nil))
(insn 1542 1541 1795 56 (set (reg:SF 22 xmm1 [orig:531 zeta.138_445 ] [531])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -304 [0xfffffffffffffed0])) [1 zeta+0 S4 A128])) "../src/tpdes.f":224 127 {*movsf_internal}
     (nil))
(insn 1795 1542 1543 56 (set (reg:SF 25 xmm4 [orig:530 _444 ] [530])
        (reg:SF 21 xmm0 [orig:530 _444 ] [530])) "../src/tpdes.f":224 127 {*movsf_internal}
     (nil))
(insn 1543 1795 1796 56 (set (reg:SF 25 xmm4 [orig:530 _444 ] [530])
        (mult:SF (reg:SF 25 xmm4 [orig:530 _444 ] [530])
            (reg:SF 22 xmm1 [orig:531 zeta.138_445 ] [531]))) "../src/tpdes.f":224 802 {*fop_sf_comm}
     (nil))
(insn 1796 1543 1842 56 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -864 [0xfffffffffffffca0])) [14 %sfp+-816 S4 A128])
        (reg:SF 25 xmm4 [orig:530 _444 ] [530])) "../src/tpdes.f":224 127 {*movsf_internal}
     (nil))
(note 1842 1796 1817 56 NOTE_INSN_DELETED)
(note 1817 1842 1544 56 NOTE_INSN_DELETED)
(insn 1544 1817 1545 56 (set (reg:SF 0 ax [1074])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -208 [0xffffffffffffff30])) [1 phi+0 S4 A32])) "../src/tpdes.f":224 127 {*movsf_internal}
     (nil))
(insn 1545 1544 1546 56 (set (reg:SF 21 xmm0)
        (reg:SF 0 ax [1074])) "../src/tpdes.f":224 127 {*movsf_internal}
     (nil))
(call_insn/u 1546 1545 1797 56 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("cosf") [flags 0x41]  <function_decl 0x14263a700 __builtin_cosf>) [0 __builtin_cosf S1 A8])
            (const_int 0 [0]))) "../src/tpdes.f":224 665 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (nil)))
(note 1797 1546 1821 56 NOTE_INSN_DELETED)
(note 1821 1797 1548 56 NOTE_INSN_DELETED)
(insn 1548 1821 1798 56 (set (reg:SF 21 xmm0 [orig:534 _448 ] [534])
        (mult:SF (reg:SF 21 xmm0 [orig:533 _447 ] [533])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -864 [0xfffffffffffffca0])) [14 %sfp+-816 S4 A128]))) "../src/tpdes.f":224 802 {*fop_sf_comm}
     (nil))
(insn 1798 1548 1550 56 (set (reg:SF 22 xmm1 [orig:707 _901 ] [707])
        (reg:SF 21 xmm0 [orig:707 _901 ] [707])) "../src/tpdes.f":224 127 {*movsf_internal}
     (nil))
(insn 1550 1798 1800 56 (set (reg:SF 22 xmm1 [orig:707 _901 ] [707])
        (mult:SF (reg:SF 22 xmm1 [orig:707 _901 ] [707])
            (reg:SF 21 xmm0 [orig:707 _901 ] [707]))) "../src/tpdes.f":224 802 {*fop_sf_comm}
     (nil))
(insn 1800 1550 1802 56 (set (reg:SF 21 xmm0 [orig:704 _898 ] [704])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -880 [0xfffffffffffffc90])) [14 %sfp+-832 S4 A128])) "../src/tpdes.f":224 127 {*movsf_internal}
     (nil))
(note 1802 1800 1820 56 NOTE_INSN_DELETED)
(note 1820 1802 1551 56 NOTE_INSN_DELETED)
(insn 1551 1820 1552 56 (set (reg:SF 21 xmm0 [orig:704 _898 ] [704])
        (plus:SF (reg:SF 21 xmm0 [orig:704 _898 ] [704])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -896 [0xfffffffffffffc80])) [14 %sfp+-848 S4 A128]))) "../src/tpdes.f":224 802 {*fop_sf_comm}
     (nil))
(insn 1552 1551 1553 56 (set (reg:SF 21 xmm0 [1075])
        (minus:SF (reg:SF 21 xmm0 [orig:535 _449 ] [535])
            (reg:SF 22 xmm1 [orig:708 _902 ] [708]))) "../src/tpdes.f":224 805 {*fop_sf_1}
     (nil))
(insn 1553 1552 1554 56 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -212 [0xffffffffffffff2c])) [1 wsq+0 S4 A32])
        (reg:SF 21 xmm0 [1075])) "../src/tpdes.f":224 127 {*movsf_internal}
     (nil))
(insn 1554 1553 1555 56 (set (reg:SF 21 xmm0 [1076])
        (sqrt:SF (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -212 [0xffffffffffffff2c])) [1 wsq+0 S4 A32]))) "../src/tpdes.f":225 836 {*sqrtsf2_sse}
     (nil))
(insn 1555 1554 1556 56 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -216 [0xffffffffffffff28])) [1 w+0 S4 A32])
        (reg:SF 21 xmm0 [1076])) "../src/tpdes.f":225 127 {*movsf_internal}
     (nil))
(insn 1556 1555 1557 56 (set (reg:SI 0 ax [1077])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [2 i+0 S4 A32])) "../src/tpdes.f":227 82 {*movsi_internal}
     (nil))
(insn 1557 1556 1558 56 (set (reg:DI 0 ax [orig:536 _450 ] [536])
        (sign_extend:DI (reg:SI 0 ax [1077]))) "../src/tpdes.f":227 145 {*extendsidi2_rex64}
     (nil))
(insn 1558 1557 1559 56 (parallel [
            (set (reg:DI 1 dx [orig:537 _451 ] [537])
                (plus:DI (reg:DI 0 ax [orig:536 _450 ] [536])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/tpdes.f":227 218 {*adddi_1}
     (nil))
(insn 1559 1558 1560 56 (set (reg/f:DI 0 ax [1078])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 48 [0x30])) [12 cl+0 S8 A64])) "../src/tpdes.f":227 81 {*movdi_internal}
     (nil))
(insn 1560 1559 1561 56 (set (reg:SF 21 xmm0 [orig:538 _452 ] [538])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:537 _451 ] [537])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1078])) [1 *cl_589(D) S4 A32])) "../src/tpdes.f":227 127 {*movsf_internal}
     (nil))
(insn 1561 1560 1562 56 (set (reg:SI 0 ax [1079])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [2 i+0 S4 A32])) "../src/tpdes.f":227 82 {*movsi_internal}
     (nil))
(insn 1562 1561 1563 56 (set (reg:DI 0 ax [orig:539 _453 ] [539])
        (sign_extend:DI (reg:SI 0 ax [1079]))) "../src/tpdes.f":227 145 {*extendsidi2_rex64}
     (nil))
(insn 1563 1562 1564 56 (parallel [
            (set (reg:DI 1 dx [orig:540 _454 ] [540])
                (plus:DI (reg:DI 0 ax [orig:539 _453 ] [539])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/tpdes.f":227 218 {*adddi_1}
     (nil))
(insn 1564 1563 1565 56 (set (reg/f:DI 0 ax [1080])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 64 [0x40])) [12 cl0+0 S8 A64])) "../src/tpdes.f":227 81 {*movdi_internal}
     (nil))
(insn 1565 1564 1566 56 (set (reg:SF 22 xmm1 [orig:541 _455 ] [541])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:540 _454 ] [540])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1080])) [1 *cl0_905(D) S4 A32])) "../src/tpdes.f":227 127 {*movsf_internal}
     (nil))
(insn 1566 1565 1567 56 (set (reg:SF 21 xmm0 [orig:542 _456 ] [542])
        (minus:SF (reg:SF 21 xmm0 [orig:538 _452 ] [538])
            (reg:SF 22 xmm1 [orig:541 _455 ] [541]))) "../src/tpdes.f":227 805 {*fop_sf_1}
     (nil))
(insn 1567 1566 1568 56 (set (reg:SF 22 xmm1 [orig:543 _457 ] [543])
        (reg:SF 21 xmm0 [orig:542 _456 ] [542])) "../src/tpdes.f":227 127 {*movsf_internal}
     (nil))
(insn 1568 1567 1569 56 (set (reg:SI 0 ax [1081])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [2 i+0 S4 A32])) "../src/tpdes.f":227 82 {*movsi_internal}
     (nil))
(insn 1569 1568 1570 56 (set (reg:DI 0 ax [orig:544 _458 ] [544])
        (sign_extend:DI (reg:SI 0 ax [1081]))) "../src/tpdes.f":227 145 {*extendsidi2_rex64}
     (nil))
(insn 1570 1569 1571 56 (parallel [
            (set (reg:DI 1 dx [orig:545 _459 ] [545])
                (plus:DI (reg:DI 0 ax [orig:544 _458 ] [544])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/tpdes.f":227 218 {*adddi_1}
     (nil))
(insn 1571 1570 1572 56 (set (reg/f:DI 0 ax [1082])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 72 [0x48])) [12 dclda+0 S8 A64])) "../src/tpdes.f":227 81 {*movdi_internal}
     (nil))
(insn 1572 1571 1573 56 (set (reg:SF 21 xmm0 [orig:546 _460 ] [546])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:545 _459 ] [545])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1082])) [1 *dclda_906(D) S4 A32])) "../src/tpdes.f":227 127 {*movsf_internal}
     (nil))
(insn 1573 1572 1804 56 (set (reg:SF 22 xmm1 [orig:543 _457 ] [543])
        (div:SF (reg:SF 22 xmm1 [orig:543 _457 ] [543])
            (reg:SF 21 xmm0 [orig:546 _460 ] [546]))) "../src/tpdes.f":227 805 {*fop_sf_1}
     (nil))
(insn 1804 1573 1574 56 (set (reg:SF 21 xmm0 [orig:547 _461 ] [547])
        (reg:SF 22 xmm1 [orig:543 _457 ] [543])) "../src/tpdes.f":227 127 {*movsf_internal}
     (nil))
(insn 1574 1804 1575 56 (set (reg:SI 0 ax [1083])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [2 i+0 S4 A32])) "../src/tpdes.f":227 82 {*movsi_internal}
     (nil))
(insn 1575 1574 1576 56 (set (reg:DI 0 ax [orig:548 _462 ] [548])
        (sign_extend:DI (reg:SI 0 ax [1083]))) "../src/tpdes.f":227 145 {*extendsidi2_rex64}
     (nil))
(insn 1576 1575 1577 56 (parallel [
            (set (reg:DI 1 dx [orig:549 _463 ] [549])
                (plus:DI (reg:DI 0 ax [orig:548 _462 ] [548])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/tpdes.f":227 218 {*adddi_1}
     (nil))
(insn 1577 1576 1578 56 (set (reg:SF 21 xmm0 [orig:550 _464 ] [550])
        (plus:SF (reg:SF 21 xmm0 [orig:547 _461 ] [547])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -208 [0xffffffffffffff30])) [1 phi+0 S4 A32]))) "../src/tpdes.f":227 802 {*fop_sf_comm}
     (nil))
(insn 1578 1577 1579 56 (set (reg/f:DI 0 ax [1084])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 96 [0x60])) [12 beta+0 S8 A64])) "../src/tpdes.f":227 81 {*movdi_internal}
     (nil))
(insn 1579 1578 1580 56 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:549 _463 ] [549])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1084])) [1 *beta_907(D) S4 A32])
        (reg:SF 21 xmm0 [orig:550 _464 ] [550])) "../src/tpdes.f":227 127 {*movsf_internal}
     (nil))
(insn 1580 1579 1805 56 (set (reg:SF 21 xmm0 [orig:709 _909 ] [709])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -80 [0xffffffffffffffb0])) [1 vd+0 S4 A32])) "../src/tpdes.f":229 127 {*movsf_internal}
     (nil))
(insn 1805 1580 1581 56 (set (reg:SF 22 xmm1 [orig:709 _909 ] [709])
        (reg:SF 21 xmm0 [orig:709 _909 ] [709])) "../src/tpdes.f":229 127 {*movsf_internal}
     (nil))
(insn 1581 1805 1582 56 (set (reg:SF 22 xmm1 [orig:709 _909 ] [709])
        (mult:SF (reg:SF 22 xmm1 [orig:709 _909 ] [709])
            (reg:SF 21 xmm0 [orig:709 _909 ] [709]))) "../src/tpdes.f":229 802 {*fop_sf_comm}
     (nil))
(insn 1582 1581 1583 56 (set (reg:SF 21 xmm0 [orig:551 pi.139_465 ] [551])
        (mem/c:SF (symbol_ref:DI ("pi.3583") [flags 0x1c02]  <var_decl 0x1427f2120 pi>) [1 pi+0 S4 A32])) "../src/tpdes.f":229 127 {*movsf_internal}
     (nil))
(insn 1583 1582 1584 56 (set (reg:SF 21 xmm0 [orig:552 _466 ] [552])
        (plus:SF (reg:SF 21 xmm0 [orig:551 pi.139_465 ] [551])
            (reg:SF 21 xmm0 [orig:551 pi.139_465 ] [551]))) "../src/tpdes.f":229 802 {*fop_sf_comm}
     (nil))
(insn 1584 1583 1585 56 (set (reg/f:DI 0 ax [1085])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 16 [0x10])) [10 blds+0 S8 A64])) "../src/tpdes.f":229 81 {*movdi_internal}
     (nil))
(insn 1585 1584 1586 56 (set (reg:SF 23 xmm2 [orig:553 _467 ] [553])
        (mem:SF (reg/f:DI 0 ax [1085]) [1 *blds_717(D)+0 S4 A32])) "../src/tpdes.f":229 127 {*movsf_internal}
     (nil))
(insn 1586 1585 1587 56 (set (reg:SF 21 xmm0 [orig:554 _468 ] [554])
        (div:SF (reg:SF 21 xmm0 [orig:552 _466 ] [552])
            (reg:SF 23 xmm2 [orig:553 _467 ] [553]))) "../src/tpdes.f":229 805 {*fop_sf_1}
     (nil))
(insn 1587 1586 1588 56 (set (reg:SF 23 xmm2 [orig:555 _469 ] [555])
        (reg:SF 21 xmm0 [orig:554 _468 ] [554])) "../src/tpdes.f":229 127 {*movsf_internal}
     (nil))
(insn 1588 1587 1589 56 (set (reg:SF 21 xmm0 [orig:556 g.140_470 ] [556])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -236 [0xffffffffffffff14])) [1 g+0 S4 A32])) "../src/tpdes.f":229 127 {*movsf_internal}
     (nil))
(insn 1589 1588 1590 56 (set (reg:SF 21 xmm0 [orig:557 _471 ] [557])
        (mult:SF (reg:SF 21 xmm0 [orig:556 g.140_470 ] [556])
            (reg:SF 23 xmm2 [orig:555 _469 ] [555]))) "../src/tpdes.f":229 802 {*fop_sf_comm}
     (nil))
(insn 1590 1589 1591 56 (set (reg:SF 23 xmm2 [orig:558 zeta.141_472 ] [558])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -304 [0xfffffffffffffed0])) [1 zeta+0 S4 A128])) "../src/tpdes.f":229 127 {*movsf_internal}
     (nil))
(insn 1591 1590 1592 56 (set (reg:SF 21 xmm0 [orig:559 _473 ] [559])
        (mult:SF (reg:SF 21 xmm0 [orig:557 _471 ] [557])
            (reg:SF 23 xmm2 [orig:558 zeta.141_472 ] [558]))) "../src/tpdes.f":229 802 {*fop_sf_comm}
     (nil))
(insn 1592 1591 1593 56 (set (reg:SF 21 xmm0 [orig:560 _474 ] [560])
        (mult:SF (reg:SF 21 xmm0 [orig:559 _473 ] [559])
            (reg:SF 22 xmm1 [orig:710 _910 ] [710]))) "../src/tpdes.f":229 802 {*fop_sf_comm}
     (nil))
(insn 1593 1592 1594 56 (set (reg/f:DI 0 ax [1086])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -840 [0xfffffffffffffcb8])) [10 omg+0 S8 A64])) "../src/tpdes.f":229 81 {*movdi_internal}
     (nil))
(insn 1594 1593 1595 56 (set (reg:SF 22 xmm1 [orig:561 _475 ] [561])
        (mem:SF (reg/f:DI 0 ax [1086]) [1 *omg_596(D)+0 S4 A32])) "../src/tpdes.f":229 127 {*movsf_internal}
     (nil))
(insn 1595 1594 1596 56 (set (reg:SI 0 ax [1087])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [2 i+0 S4 A32])) "../src/tpdes.f":229 82 {*movsi_internal}
     (nil))
(insn 1596 1595 1597 56 (set (reg:DI 0 ax [orig:562 _476 ] [562])
        (sign_extend:DI (reg:SI 0 ax [1087]))) "../src/tpdes.f":229 145 {*extendsidi2_rex64}
     (nil))
(insn 1597 1596 1598 56 (parallel [
            (set (reg:DI 1 dx [orig:563 _477 ] [563])
                (plus:DI (reg:DI 0 ax [orig:562 _476 ] [562])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/tpdes.f":229 218 {*adddi_1}
     (nil))
(insn 1598 1597 1599 56 (set (reg:SF 21 xmm0 [orig:564 _478 ] [564])
        (div:SF (reg:SF 21 xmm0 [orig:560 _474 ] [560])
            (reg:SF 22 xmm1 [orig:561 _475 ] [561]))) "../src/tpdes.f":229 805 {*fop_sf_1}
     (nil))
(insn 1599 1598 1600 56 (set (reg/f:DI 0 ax [1088])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 80 [0x50])) [12 gam+0 S8 A64])) "../src/tpdes.f":229 81 {*movdi_internal}
     (nil))
(insn 1600 1599 1601 56 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:563 _477 ] [563])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1088])) [1 *gam_786(D) S4 A32])
        (reg:SF 21 xmm0 [orig:564 _478 ] [564])) "../src/tpdes.f":229 127 {*movsf_internal}
     (nil))
(insn 1601 1600 1602 56 (set (reg:SI 0 ax [1089])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [2 i+0 S4 A32])) "../src/tpdes.f":230 82 {*movsi_internal}
     (nil))
(insn 1602 1601 1603 56 (set (reg:DI 0 ax [orig:565 _479 ] [565])
        (sign_extend:DI (reg:SI 0 ax [1089]))) "../src/tpdes.f":230 145 {*extendsidi2_rex64}
     (nil))
(insn 1603 1602 1604 56 (parallel [
            (set (reg:DI 1 dx [orig:566 _480 ] [566])
                (plus:DI (reg:DI 0 ax [orig:565 _479 ] [565])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/tpdes.f":230 218 {*adddi_1}
     (nil))
(insn 1604 1603 1605 56 (set (reg/f:DI 0 ax [1090])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 80 [0x50])) [12 gam+0 S8 A64])) "../src/tpdes.f":230 81 {*movdi_internal}
     (nil))
(insn 1605 1604 1606 56 (set (reg:SF 21 xmm0 [orig:567 _481 ] [567])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:566 _480 ] [566])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1090])) [1 *gam_786(D) S4 A32])) "../src/tpdes.f":230 127 {*movsf_internal}
     (nil))
(insn 1606 1605 1607 56 (set (reg:SF 21 xmm0 [orig:568 _482 ] [568])
        (plus:SF (reg:SF 21 xmm0 [orig:567 _481 ] [567])
            (reg:SF 21 xmm0 [orig:567 _481 ] [567]))) "../src/tpdes.f":230 802 {*fop_sf_comm}
     (nil))
(insn 1607 1606 1608 56 (set (reg:SI 0 ax [1091])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [2 i+0 S4 A32])) "../src/tpdes.f":230 82 {*movsi_internal}
     (nil))
(insn 1608 1607 1609 56 (set (reg:DI 0 ax [orig:569 _483 ] [569])
        (sign_extend:DI (reg:SI 0 ax [1091]))) "../src/tpdes.f":230 145 {*extendsidi2_rex64}
     (nil))
(insn 1609 1608 1610 56 (parallel [
            (set (reg:DI 1 dx [orig:570 _484 ] [570])
                (plus:DI (reg:DI 0 ax [orig:569 _483 ] [569])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/tpdes.f":230 218 {*adddi_1}
     (nil))
(insn 1610 1609 1611 56 (set (reg/f:DI 0 ax [1092])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 48 [0x30])) [12 cl+0 S8 A64])) "../src/tpdes.f":230 81 {*movdi_internal}
     (nil))
(insn 1611 1610 1612 56 (set (reg:SF 22 xmm1 [orig:571 _485 ] [571])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:570 _484 ] [570])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1092])) [1 *cl_589(D) S4 A32])) "../src/tpdes.f":230 127 {*movsf_internal}
     (nil))
(insn 1612 1611 1614 56 (set (reg:SF 22 xmm1 [orig:572 _486 ] [572])
        (mult:SF (reg:SF 22 xmm1 [orig:571 _485 ] [571])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -216 [0xffffffffffffff28])) [1 w+0 S4 A32]))) "../src/tpdes.f":230 802 {*fop_sf_comm}
     (nil))
(insn 1614 1612 1615 56 (set (reg:SI 0 ax [1093])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [2 i+0 S4 A32])) "../src/tpdes.f":230 82 {*movsi_internal}
     (nil))
(insn 1615 1614 1616 56 (set (reg:DI 0 ax [orig:574 _488 ] [574])
        (sign_extend:DI (reg:SI 0 ax [1093]))) "../src/tpdes.f":230 145 {*extendsidi2_rex64}
     (nil))
(insn 1616 1615 1617 56 (parallel [
            (set (reg:DI 1 dx [orig:575 _489 ] [575])
                (plus:DI (reg:DI 0 ax [orig:574 _488 ] [574])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/tpdes.f":230 218 {*adddi_1}
     (nil))
(insn 1617 1616 1618 56 (set (reg:SF 21 xmm0 [orig:576 _490 ] [576])
        (div:SF (reg:SF 21 xmm0 [orig:568 _482 ] [568])
            (reg:SF 22 xmm1 [orig:573 _487 ] [573]))) "../src/tpdes.f":230 805 {*fop_sf_1}
     (nil))
(insn 1618 1617 1619 56 (set (reg/f:DI 0 ax [1094])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 88 [0x58])) [12 ch+0 S8 A64])) "../src/tpdes.f":230 81 {*movdi_internal}
     (nil))
(insn 1619 1618 1620 56 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:575 _489 ] [575])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1094])) [1 *ch_912(D) S4 A32])
        (reg:SF 21 xmm0 [orig:576 _490 ] [576])) "../src/tpdes.f":230 127 {*movsf_internal}
     (nil))
(insn 1620 1619 1687 56 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -64 [0xffffffffffffffc0])) [2 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -64 [0xffffffffffffffc0])) [2 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/tpdes.f":220 217 {*addsi_1}
     (nil))
(jump_insn 1687 1620 1688 56 (set (pc)
        (label_ref 1621)) "../src/tpdes.f":220 649 {jump}
     (nil)
 -> 1621)
;;  succ:       55 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 701

(barrier 1688 1687 1704)
;; basic block 62, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 56, next block 57, flags: (RTL, MODIFIED)
;;  pred:       55
;; bb 62 artificial_defs: { }
;; bb 62 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 1704 1688 1703 62 58 (nil) [1 uses])
(note 1703 1704 1705 62 [bb 62] NOTE_INSN_BASIC_BLOCK)
(insn 1705 1703 1624 62 (const_int 0 [0]) "../src/tpdes.f":230 682 {nop}
     (nil))
;;  succ:       57 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 57, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 62, next block 1, flags: (RTL, MODIFIED)
;;  pred:       62 [100.0%]  (FALLTHRU)
;; bb 57 artificial_defs: { }
;; bb 57 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 1624 1705 1625 57 40 (nil) [0 uses])
(note 1625 1624 1660 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(insn 1660 1625 1706 57 (const_int 0 [0]) "../src/tpdes.f":233 682 {nop}
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(note 1706 1660 0 NOTE_INSN_DELETED)
