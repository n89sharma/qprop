
;; Function sevall (sevall_, funcdef_no=0, decl_uid=3502, cgraph_uid=0, symbol_order=0)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 10 n_edges 11 count 10 (    1)
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 9 8
;;
;; Loop 1
;;  header 3, latch 7
;;  depth 1, outer 0
;;  nodes: 3 7 6 5 4
;; 2 succs { 3 }
;; 3 succs { 9 4 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 3 }
;; 9 succs { 8 }
;; 8 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r277: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r277,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r276: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r276,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r275: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r275,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r274: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r274,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r273: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r273,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r272: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a15 (r272,l0) best SSE_REGS, allocno SSE_REGS
    r271: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a16 (r271,l0) best SSE_REGS, allocno SSE_REGS
    r270: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a17 (r270,l0) best SSE_REGS, allocno SSE_REGS
    r269: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r269,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r268: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a26 (r268,l0) best SSE_REGS, allocno SSE_REGS
    r267: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a27 (r267,l0) best SSE_REGS, allocno SSE_REGS
    r266: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a28 (r266,l0) best SSE_REGS, allocno SSE_REGS
    r265: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r265,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r264: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a38 (r264,l0) best SSE_REGS, allocno SSE_REGS
    r263: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a39 (r263,l0) best SSE_REGS, allocno SSE_REGS
    r262: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a46 (r262,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r261: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a50 (r261,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r260: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a51 (r260,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r259: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a54 (r259,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r258: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a59 (r258,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r257: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a62 (r257,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r256: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a63 (r256,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r255: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a67 (r255,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r254: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a68 (r254,l0) best SSE_REGS, allocno SSE_REGS
    r253: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a75 (r253,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r252: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a78 (r252,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r251: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a80 (r251,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r250: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a84 (r250,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r249: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a85 (r249,l0) best SSE_REGS, allocno SSE_REGS
    r248: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a90 (r248,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r247: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a94 (r247,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r246: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a95 (r246,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r245: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a98 (r245,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r244: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a101 (r244,l0) best SSE_REGS, allocno SSE_REGS
    r243: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a99 (r243,l0) best SSE_REGS, allocno SSE_REGS
    r242: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a102 (r242,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r241: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a106 (r241,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r240: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a107 (r240,l0) best SSE_REGS, allocno SSE_REGS
    r239: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a108 (r239,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r238: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a112 (r238,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r237: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a113 (r237,l0) best SSE_REGS, allocno SSE_REGS
    r236: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a118 (r236,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r235: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a122 (r235,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r234: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a123 (r234,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r233: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a124 (r233,l0) best SSE_REGS, allocno SSE_REGS
    r232: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a127 (r232,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r231: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a131 (r231,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r230: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a132 (r230,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r229: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a135 (r229,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r228: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a136 (r228,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r227: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a137 (r227,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r226: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a140 (r226,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r225: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a143 (r225,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r224: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a144 (r224,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r223: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a145 (r223,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r222: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a146 (r222,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r221: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a148 (r221,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r220: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a149 (r220,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r219: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a150 (r219,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r218: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a152 (r218,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r217: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a153 (r217,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r216: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a154 (r216,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r215: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a158 (r215,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r214: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a160 (r214,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r213: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a162 (r213,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r212: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a166 (r212,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r211: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a168 (r211,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r210: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a170 (r210,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r209: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a174 (r209,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r208: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a176 (r208,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r207: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a178 (r207,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r206: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a2 (r206,l0) best SSE_REGS, allocno SSE_REGS
    r205: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a5 (r205,l0) best SSE_REGS, allocno SSE_REGS
    r201: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a157 (r201,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r200: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a159 (r200,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r196: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a165 (r196,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r195: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a167 (r195,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r191: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a173 (r191,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r190: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a175 (r190,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r189: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a1 (r189,l0) best SSE_REGS, allocno SSE_REGS
    r188: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a3 (r188,l0) best SSE_REGS, allocno SSE_REGS
    r187: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a7 (r187,l0) best SSE_REGS, allocno SSE_REGS
    r186: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a8 (r186,l0) best SSE_REGS, allocno SSE_REGS
    r185: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a11 (r185,l0) best SSE_REGS, allocno SSE_REGS
    r184: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a12 (r184,l0) best SSE_REGS, allocno SSE_REGS
    r183: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a14 (r183,l0) best SSE_REGS, allocno SSE_REGS
    r182: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a13 (r182,l0) best SSE_REGS, allocno SSE_REGS
    r181: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a19 (r181,l0) best SSE_REGS, allocno SSE_REGS
    r180: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a20 (r180,l0) best SSE_REGS, allocno SSE_REGS
    r179: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a21 (r179,l0) best SSE_REGS, allocno SSE_REGS
    r178: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a22 (r178,l0) best SSE_REGS, allocno SSE_REGS
    r177: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a23 (r177,l0) best SSE_REGS, allocno SSE_REGS
    r176: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a25 (r176,l0) best SSE_REGS, allocno SSE_REGS
    r175: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a24 (r175,l0) best SSE_REGS, allocno SSE_REGS
    r174: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a30 (r174,l0) best SSE_REGS, allocno SSE_REGS
    r173: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a31 (r173,l0) best SSE_REGS, allocno SSE_REGS
    r172: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a32 (r172,l0) best SSE_REGS, allocno SSE_REGS
    r171: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a33 (r171,l0) best SSE_REGS, allocno SSE_REGS
    r170: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a34 (r170,l0) best SSE_REGS, allocno SSE_REGS
    r169: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a35 (r169,l0) best SSE_REGS, allocno SSE_REGS
    r168: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a36 (r168,l0) best SSE_REGS, allocno SSE_REGS
    r167: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a37 (r167,l0) best SSE_REGS, allocno SSE_REGS
    r166: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a40 (r166,l0) best SSE_REGS, allocno SSE_REGS
    r165: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a42 (r165,l0) best SSE_REGS, allocno SSE_REGS
    r164: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a43 (r164,l0) best SSE_REGS, allocno SSE_REGS
    r163: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a44 (r163,l0) best SSE_REGS, allocno SSE_REGS
    r162: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a47 (r162,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r161: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a48 (r161,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r160: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a49 (r160,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r159: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a45 (r159,l0) best SSE_REGS, allocno SSE_REGS
    r158: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a52 (r158,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r157: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a53 (r157,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r156: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a41 (r156,l0) best SSE_REGS, allocno SSE_REGS
    r155: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a55 (r155,l0) best SSE_REGS, allocno SSE_REGS
    r154: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a56 (r154,l0) best SSE_REGS, allocno SSE_REGS
    r153: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a57 (r153,l0) best SSE_REGS, allocno SSE_REGS
    r152: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a60 (r152,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r151: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a61 (r151,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r150: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a58 (r150,l0) best SSE_REGS, allocno SSE_REGS
    r149: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a64 (r149,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r148: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a65 (r148,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r147: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a66 (r147,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r146: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a69 (r146,l0) best SSE_REGS, allocno SSE_REGS
    r145: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a71 (r145,l0) best SSE_REGS, allocno SSE_REGS
    r144: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a72 (r144,l0) best SSE_REGS, allocno SSE_REGS
    r143: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a73 (r143,l0) best SSE_REGS, allocno SSE_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a76 (r142,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a77 (r141,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r140: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a74 (r140,l0) best SSE_REGS, allocno SSE_REGS
    r139: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a79 (r139,l0) best SSE_REGS, allocno SSE_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a81 (r138,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a82 (r137,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a83 (r136,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r135: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a70 (r135,l0) best SSE_REGS, allocno SSE_REGS
    r134: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a86 (r134,l0) best SSE_REGS, allocno SSE_REGS
    r133: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a87 (r133,l0) best SSE_REGS, allocno SSE_REGS
    r132: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a88 (r132,l0) best SSE_REGS, allocno SSE_REGS
    r131: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a91 (r131,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r130: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a92 (r130,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r129: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a93 (r129,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r128: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a89 (r128,l0) best SSE_REGS, allocno SSE_REGS
    r127: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a96 (r127,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r126: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a97 (r126,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r125: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a100 (r125,l0) best SSE_REGS, allocno SSE_REGS
    r124: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a103 (r124,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r123: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a104 (r123,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r122: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a105 (r122,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a109 (r121,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r120: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a110 (r120,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a111 (r119,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r118: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a114 (r118,l0) best SSE_REGS, allocno SSE_REGS
    r117: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a115 (r117,l0) best SSE_REGS, allocno SSE_REGS
    r116: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a116 (r116,l0) best SSE_REGS, allocno SSE_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a119 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a120 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a121 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r112: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a117 (r112,l0) best SSE_REGS, allocno SSE_REGS
    r111: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a125 (r111,l0) best SSE_REGS, allocno SSE_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a128 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a129 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a130 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a126 (r107,l0) best SSE_REGS, allocno SSE_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a133 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a134 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a139 (r104,l0) best SSE_REGS, allocno SSE_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a141 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a142 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a138 (r101,l0) best SSE_REGS, allocno SSE_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a147 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a151 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a155 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a156 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a161 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a163 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a164 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a169 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a171 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a172 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a177 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r277,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a1(r189,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a2(r206,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a3(r188,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a4(r276,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a5(r205,l0) costs: AREG:18 DREG:18 CREG:18 BREG:18 SIREG:18 DIREG:18 AD_REGS:18 CLOBBERED_REGS:18 Q_REGS:18 NON_Q_REGS:18 TLS_GOTBASE_REGS:18 GENERAL_REGS:18 FP_TOP_REG:54 FP_SECOND_REG:54 FLOAT_REGS:54 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:48 FP_TOP_SSE_REGS:56 FP_SECOND_SSE_REGS:56 FLOAT_SSE_REGS:56 FLOAT_INT_REGS:54 INT_SSE_REGS:37 FLOAT_INT_SSE_REGS:56 ALL_REGS:56 MEM:20
  a6(r275,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a7(r187,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a8(r186,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a9(r274,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a10(r273,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a11(r185,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a12(r184,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a13(r182,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a14(r183,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:16
  a15(r272,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a16(r271,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a17(r270,l0) costs: AREG:18 DREG:18 CREG:18 BREG:18 SIREG:18 DIREG:18 AD_REGS:18 CLOBBERED_REGS:18 Q_REGS:18 NON_Q_REGS:18 TLS_GOTBASE_REGS:18 GENERAL_REGS:18 FP_TOP_REG:54 FP_SECOND_REG:54 FLOAT_REGS:54 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:48 FP_TOP_SSE_REGS:56 FP_SECOND_SSE_REGS:56 FLOAT_SSE_REGS:56 FLOAT_INT_REGS:54 INT_SSE_REGS:37 FLOAT_INT_SSE_REGS:56 ALL_REGS:56 MEM:20
  a18(r269,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a19(r181,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a20(r180,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:16
  a21(r179,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 ALL_REGS:29 MEM:9
  a22(r178,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:9
  a23(r177,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a24(r175,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a25(r176,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:16
  a26(r268,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a27(r267,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a28(r266,l0) costs: AREG:18 DREG:18 CREG:18 BREG:18 SIREG:18 DIREG:18 AD_REGS:18 CLOBBERED_REGS:18 Q_REGS:18 NON_Q_REGS:18 TLS_GOTBASE_REGS:18 GENERAL_REGS:18 FP_TOP_REG:54 FP_SECOND_REG:54 FLOAT_REGS:54 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:48 FP_TOP_SSE_REGS:56 FP_SECOND_SSE_REGS:56 FLOAT_SSE_REGS:56 FLOAT_INT_REGS:54 INT_SSE_REGS:37 FLOAT_INT_SSE_REGS:56 ALL_REGS:56 MEM:20
  a29(r265,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a30(r174,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a31(r173,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:16
  a32(r172,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 ALL_REGS:29 MEM:9
  a33(r171,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:9
  a34(r170,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:16
  a35(r169,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 ALL_REGS:29 MEM:9
  a36(r168,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:9
  a37(r167,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:16
  a38(r264,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a39(r263,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a40(r166,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a41(r156,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:16
  a42(r165,l0) costs: AREG:18 DREG:18 CREG:18 BREG:18 SIREG:18 DIREG:18 AD_REGS:18 CLOBBERED_REGS:18 Q_REGS:18 NON_Q_REGS:18 TLS_GOTBASE_REGS:18 GENERAL_REGS:18 FP_TOP_REG:48 FP_SECOND_REG:48 FLOAT_REGS:48 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:42 FP_TOP_SSE_REGS:50 FP_SECOND_SSE_REGS:50 FLOAT_SSE_REGS:50 FLOAT_INT_REGS:48 INT_SSE_REGS:34 FLOAT_INT_SSE_REGS:50 ALL_REGS:50 MEM:15
  a43(r164,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:9
  a44(r163,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a45(r159,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a46(r262,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a47(r162,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a48(r161,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a49(r160,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a50(r261,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a51(r260,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a52(r158,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a53(r157,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a54(r259,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a55(r155,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 ALL_REGS:29 MEM:9
  a56(r154,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:9
  a57(r153,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a58(r150,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a59(r258,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a60(r152,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a61(r151,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a62(r257,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a63(r256,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a64(r149,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a65(r148,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a66(r147,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a67(r255,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a68(r254,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a69(r146,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a70(r135,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:16
  a71(r145,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 ALL_REGS:29 MEM:9
  a72(r144,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:9
  a73(r143,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a74(r140,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a75(r253,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a76(r142,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a77(r141,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a78(r252,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a79(r139,l0) costs: AREG:18 DREG:18 CREG:18 BREG:18 SIREG:18 DIREG:18 AD_REGS:18 CLOBBERED_REGS:18 Q_REGS:18 NON_Q_REGS:18 TLS_GOTBASE_REGS:18 GENERAL_REGS:18 FP_TOP_REG:54 FP_SECOND_REG:54 FLOAT_REGS:54 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:48 FP_TOP_SSE_REGS:56 FP_SECOND_SSE_REGS:56 FLOAT_SSE_REGS:56 FLOAT_INT_REGS:54 INT_SSE_REGS:37 FLOAT_INT_SSE_REGS:56 ALL_REGS:56 MEM:20
  a80(r251,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a81(r138,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a82(r137,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a83(r136,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a84(r250,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a85(r249,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a86(r134,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 ALL_REGS:29 MEM:8
  a87(r133,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:9
  a88(r132,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a89(r128,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a90(r248,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a91(r131,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a92(r130,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a93(r129,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a94(r247,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a95(r246,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a96(r127,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a97(r126,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a98(r245,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a99(r243,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a100(r125,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a101(r244,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a102(r242,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a103(r124,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a104(r123,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a105(r122,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a106(r241,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a107(r240,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 CLOBBERED_REGS:4 Q_REGS:4 NON_Q_REGS:4 TLS_GOTBASE_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:29 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:12
  a108(r239,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a109(r121,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a110(r120,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a111(r119,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a112(r238,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a113(r237,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a114(r118,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 ALL_REGS:29 MEM:9
  a115(r117,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:9
  a116(r116,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a117(r112,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a118(r236,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a119(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a120(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a121(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a122(r235,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a123(r234,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a124(r233,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a125(r111,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a126(r107,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a127(r232,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a128(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a129(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a130(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a131(r231,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a132(r230,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a133(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a134(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a135(r229,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a136(r228,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a137(r227,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a138(r101,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a139(r104,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a140(r226,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a141(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a142(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a143(r225,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a144(r224,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a145(r223,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a146(r222,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a147(r100,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 CLOBBERED_REGS:2 Q_REGS:2 NON_Q_REGS:2 TLS_GOTBASE_REGS:2 GENERAL_REGS:2 SSE_FIRST_REG:26 NO_REX_SSE_REGS:26 SSE_REGS:26 MMX_REGS:41 INT_SSE_REGS:29 ALL_REGS:626 MEM:11
  a148(r221,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 CLOBBERED_REGS:2 Q_REGS:2 NON_Q_REGS:2 TLS_GOTBASE_REGS:2 GENERAL_REGS:2 SSE_FIRST_REG:18 NO_REX_SSE_REGS:18 SSE_REGS:18 MMX_REGS:28 INT_SSE_REGS:20 ALL_REGS:418 MEM:8
  a149(r220,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a150(r219,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a151(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a152(r218,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a153(r217,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a154(r216,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a155(r97,l0) costs: AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:2
  a156(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a157(r201,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a158(r215,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a159(r200,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:38 INT_SSE_REGS:27 ALL_REGS:520 MEM:11
  a160(r214,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:8
  a161(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a162(r213,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a163(r93,l0) costs: AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:2
  a164(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a165(r196,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a166(r212,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a167(r195,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:38 INT_SSE_REGS:27 ALL_REGS:520 MEM:11
  a168(r211,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:8
  a169(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a170(r210,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a171(r89,l0) costs: AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:2
  a172(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a173(r191,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a174(r209,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a175(r190,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:38 INT_SSE_REGS:27 ALL_REGS:520 MEM:11
  a176(r208,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:8
  a177(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a178(r207,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8

   Insn 255(l0): point = 0
   Insn 247(l0): point = 2
   Insn 246(l0): point = 4
   Insn 245(l0): point = 6
   Insn 244(l0): point = 8
   Insn 243(l0): point = 10
   Insn 242(l0): point = 12
   Insn 241(l0): point = 14
   Insn 240(l0): point = 16
   Insn 239(l0): point = 18
   Insn 238(l0): point = 20
   Insn 237(l0): point = 22
   Insn 236(l0): point = 24
   Insn 235(l0): point = 26
   Insn 234(l0): point = 28
   Insn 233(l0): point = 30
   Insn 232(l0): point = 32
   Insn 231(l0): point = 34
   Insn 230(l0): point = 36
   Insn 229(l0): point = 38
   Insn 228(l0): point = 40
   Insn 227(l0): point = 42
   Insn 226(l0): point = 44
   Insn 225(l0): point = 46
   Insn 224(l0): point = 48
   Insn 223(l0): point = 50
   Insn 222(l0): point = 52
   Insn 221(l0): point = 54
   Insn 220(l0): point = 56
   Insn 219(l0): point = 58
   Insn 218(l0): point = 60
   Insn 217(l0): point = 62
   Insn 216(l0): point = 64
   Insn 215(l0): point = 66
   Insn 214(l0): point = 68
   Insn 213(l0): point = 70
   Insn 212(l0): point = 72
   Insn 211(l0): point = 74
   Insn 210(l0): point = 76
   Insn 209(l0): point = 78
   Insn 208(l0): point = 80
   Insn 207(l0): point = 82
   Insn 206(l0): point = 84
   Insn 205(l0): point = 86
   Insn 204(l0): point = 88
   Insn 203(l0): point = 90
   Insn 202(l0): point = 92
   Insn 201(l0): point = 94
   Insn 200(l0): point = 96
   Insn 199(l0): point = 98
   Insn 198(l0): point = 100
   Insn 197(l0): point = 102
   Insn 196(l0): point = 104
   Insn 195(l0): point = 106
   Insn 194(l0): point = 108
   Insn 193(l0): point = 110
   Insn 192(l0): point = 112
   Insn 191(l0): point = 114
   Insn 190(l0): point = 116
   Insn 189(l0): point = 118
   Insn 188(l0): point = 120
   Insn 187(l0): point = 122
   Insn 186(l0): point = 124
   Insn 185(l0): point = 126
   Insn 184(l0): point = 128
   Insn 183(l0): point = 130
   Insn 182(l0): point = 132
   Insn 181(l0): point = 134
   Insn 180(l0): point = 136
   Insn 179(l0): point = 138
   Insn 178(l0): point = 140
   Insn 177(l0): point = 142
   Insn 176(l0): point = 144
   Insn 175(l0): point = 146
   Insn 174(l0): point = 148
   Insn 173(l0): point = 150
   Insn 172(l0): point = 152
   Insn 171(l0): point = 154
   Insn 170(l0): point = 156
   Insn 169(l0): point = 158
   Insn 168(l0): point = 160
   Insn 167(l0): point = 162
   Insn 166(l0): point = 164
   Insn 165(l0): point = 166
   Insn 164(l0): point = 168
   Insn 163(l0): point = 170
   Insn 162(l0): point = 172
   Insn 161(l0): point = 174
   Insn 160(l0): point = 176
   Insn 159(l0): point = 178
   Insn 158(l0): point = 180
   Insn 157(l0): point = 182
   Insn 156(l0): point = 184
   Insn 155(l0): point = 186
   Insn 154(l0): point = 188
   Insn 153(l0): point = 190
   Insn 152(l0): point = 192
   Insn 151(l0): point = 194
   Insn 150(l0): point = 196
   Insn 149(l0): point = 198
   Insn 148(l0): point = 200
   Insn 147(l0): point = 202
   Insn 146(l0): point = 204
   Insn 145(l0): point = 206
   Insn 144(l0): point = 208
   Insn 143(l0): point = 210
   Insn 142(l0): point = 212
   Insn 141(l0): point = 214
   Insn 140(l0): point = 216
   Insn 139(l0): point = 218
   Insn 138(l0): point = 220
   Insn 137(l0): point = 222
   Insn 136(l0): point = 224
   Insn 135(l0): point = 226
   Insn 134(l0): point = 228
   Insn 133(l0): point = 230
   Insn 132(l0): point = 232
   Insn 131(l0): point = 234
   Insn 130(l0): point = 236
   Insn 129(l0): point = 238
   Insn 128(l0): point = 240
   Insn 127(l0): point = 242
   Insn 126(l0): point = 244
   Insn 125(l0): point = 246
   Insn 124(l0): point = 248
   Insn 123(l0): point = 250
   Insn 122(l0): point = 252
   Insn 121(l0): point = 254
   Insn 120(l0): point = 256
   Insn 119(l0): point = 258
   Insn 118(l0): point = 260
   Insn 117(l0): point = 262
   Insn 116(l0): point = 264
   Insn 115(l0): point = 266
   Insn 114(l0): point = 268
   Insn 113(l0): point = 270
   Insn 112(l0): point = 272
   Insn 111(l0): point = 274
   Insn 110(l0): point = 276
   Insn 109(l0): point = 278
   Insn 108(l0): point = 280
   Insn 107(l0): point = 282
   Insn 106(l0): point = 284
   Insn 105(l0): point = 286
   Insn 104(l0): point = 288
   Insn 103(l0): point = 290
   Insn 102(l0): point = 292
   Insn 101(l0): point = 294
   Insn 263(l0): point = 297
   Insn 64(l0): point = 300
   Insn 63(l0): point = 302
   Insn 62(l0): point = 304
   Insn 61(l0): point = 306
   Insn 259(l0): point = 309
   Insn 93(l0): point = 312
   Insn 92(l0): point = 314
   Insn 257(l0): point = 317
   Insn 87(l0): point = 319
   Insn 86(l0): point = 321
   Insn 81(l0): point = 324
   Insn 80(l0): point = 326
   Insn 79(l0): point = 328
   Insn 78(l0): point = 330
   Insn 77(l0): point = 332
   Insn 76(l0): point = 334
   Insn 75(l0): point = 336
   Insn 74(l0): point = 338
   Insn 73(l0): point = 340
   Insn 72(l0): point = 342
   Insn 71(l0): point = 344
   Insn 70(l0): point = 346
   Insn 69(l0): point = 348
   Insn 68(l0): point = 350
   Insn 67(l0): point = 352
   Insn 66(l0): point = 354
   Insn 59(l0): point = 357
   Insn 58(l0): point = 359
   Insn 57(l0): point = 361
   Insn 56(l0): point = 363
   Insn 52(l0): point = 365
   Insn 51(l0): point = 367
   Insn 50(l0): point = 369
   Insn 48(l0): point = 371
   Insn 46(l0): point = 373
   Insn 47(l0): point = 375
   Insn 45(l0): point = 377
   Insn 44(l0): point = 379
   Insn 43(l0): point = 381
   Insn 42(l0): point = 383
   Insn 41(l0): point = 385
   Insn 37(l0): point = 387
   Insn 36(l0): point = 389
   Insn 35(l0): point = 391
   Insn 33(l0): point = 393
   Insn 31(l0): point = 395
   Insn 32(l0): point = 397
   Insn 30(l0): point = 399
   Insn 29(l0): point = 401
   Insn 28(l0): point = 403
   Insn 27(l0): point = 405
   Insn 26(l0): point = 407
   Insn 22(l0): point = 409
   Insn 21(l0): point = 411
   Insn 20(l0): point = 413
   Insn 18(l0): point = 415
   Insn 16(l0): point = 417
   Insn 17(l0): point = 419
   Insn 15(l0): point = 421
   Insn 14(l0): point = 423
   Insn 13(l0): point = 425
   Insn 12(l0): point = 427
   Insn 11(l0): point = 429
   Insn 7(l0): point = 431
   Insn 6(l0): point = 433
   Insn 5(l0): point = 435
   Insn 4(l0): point = 437
   Insn 3(l0): point = 439
   Insn 2(l0): point = 441
 a0(r277): [3..4]
 a1(r189): [3..6]
 a2(r206): [7..12]
 a3(r188): [7..8]
 a4(r276): [9..10]
 a5(r205): [13..14]
 a6(r275): [17..18]
 a7(r187): [17..20]
 a8(r186): [21..22]
 a9(r274): [23..24]
 a10(r273): [27..28]
 a11(r185): [27..30]
 a12(r184): [31..32]
 a13(r182): [31..40]
 a14(r183): [33..34]
 a15(r272): [35..36]
 a16(r271): [35..38]
 a17(r270): [41..42]
 a18(r269): [45..46]
 a19(r181): [45..48]
 a20(r180): [49..50]
 a21(r179): [51..52]
 a22(r178): [53..54]
 a23(r177): [55..56]
 a24(r175): [55..64]
 a25(r176): [57..58]
 a26(r268): [59..60]
 a27(r267): [59..62]
 a28(r266): [65..66]
 a29(r265): [69..70]
 a30(r174): [69..72]
 a31(r173): [73..74]
 a32(r172): [75..76]
 a33(r171): [77..78]
 a34(r170): [79..80]
 a35(r169): [81..82]
 a36(r168): [83..84]
 a37(r167): [85..86]
 a38(r264): [87..88]
 a39(r263): [91..92]
 a40(r166): [93..94]
 a41(r156): [93..122]
 a42(r165): [95..96]
 a43(r164): [97..98]
 a44(r163): [99..100]
 a45(r159): [99..112]
 a46(r262): [101..102]
 a47(r162): [101..104]
 a48(r161): [105..106]
 a49(r160): [107..108]
 a50(r261): [109..110]
 a51(r260): [113..114]
 a52(r158): [113..116]
 a53(r157): [117..118]
 a54(r259): [119..120]
 a55(r155): [123..124]
 a56(r154): [125..126]
 a57(r153): [127..128]
 a58(r150): [127..138]
 a59(r258): [129..130]
 a60(r152): [129..132]
 a61(r151): [133..134]
 a62(r257): [135..136]
 a63(r256): [139..140]
 a64(r149): [139..142]
 a65(r148): [143..144]
 a66(r147): [145..146]
 a67(r255): [147..148]
 a68(r254): [151..152]
 a69(r146): [153..154]
 a70(r135): [153..184]
 a71(r145): [155..156]
 a72(r144): [157..158]
 a73(r143): [159..160]
 a74(r140): [159..170]
 a75(r253): [161..162]
 a76(r142): [161..164]
 a77(r141): [165..166]
 a78(r252): [167..168]
 a79(r139): [171..172]
 a80(r251): [173..174]
 a81(r138): [173..176]
 a82(r137): [177..178]
 a83(r136): [179..180]
 a84(r250): [181..182]
 a85(r249): [185..186]
 a86(r134): [185..188]
 a87(r133): [189..190]
 a88(r132): [191..192]
 a89(r128): [191..204]
 a90(r248): [193..194]
 a91(r131): [193..196]
 a92(r130): [197..198]
 a93(r129): [199..200]
 a94(r247): [201..202]
 a95(r246): [205..206]
 a96(r127): [205..208]
 a97(r126): [209..210]
 a98(r245): [211..212]
 a99(r243): [215..216]
 a100(r125): [217..220]
 a101(r244): [217..218]
 a102(r242): [221..222]
 a103(r124): [221..224]
 a104(r123): [225..226]
 a105(r122): [227..228]
 a106(r241): [229..230]
 a107(r240): [233..234]
 a108(r239): [235..236]
 a109(r121): [235..238]
 a110(r120): [239..240]
 a111(r119): [241..242]
 a112(r238): [243..244]
 a113(r237): [247..248]
 a114(r118): [249..250]
 a115(r117): [251..252]
 a116(r116): [253..254]
 a117(r112): [253..266]
 a118(r236): [255..256]
 a119(r115): [255..258]
 a120(r114): [259..260]
 a121(r113): [261..262]
 a122(r235): [263..264]
 a123(r234): [267..268]
 a124(r233): [271..272]
 a125(r111): [273..274]
 a126(r107): [273..286]
 a127(r232): [275..276]
 a128(r110): [275..278]
 a129(r109): [279..280]
 a130(r108): [281..282]
 a131(r231): [283..284]
 a132(r230): [287..288]
 a133(r106): [287..290]
 a134(r105): [291..292]
 a135(r229): [293..294]
 a136(r228): [313..314]
 a137(r227): [320..321]
 a138(r101): [327..338]
 a139(r104): [327..328]
 a140(r226): [329..330]
 a141(r103): [329..332]
 a142(r102): [333..334]
 a143(r225): [335..336]
 a144(r224): [339..340]
 a145(r223): [343..344]
 a146(r222): [345..346]
 a147(r100): [347..350]
 a148(r221): [347..348]
 a149(r220): [351..352]
 a150(r219): [351..354]
 a151(r99): [303..304]
 a152(r218): [305..306]
 a153(r217): [358..359]
 a154(r216): [360..361]
 a155(r97 [0]): [366..443]
 a155(r97 [1]): [365..443]
 a156(r96): [368..369]
 a157(r201): [370..371]
 a158(r215): [372..375]
 a159(r200): [372..377]
 a160(r214): [380..381]
 a161(r95): [382..383]
 a162(r213): [384..385]
 a163(r93 [0]): [388..443]
 a163(r93 [1]): [387..443]
 a164(r92): [390..391]
 a165(r196): [392..393]
 a166(r212): [394..397]
 a167(r195): [394..399]
 a168(r211): [402..403]
 a169(r91): [404..405]
 a170(r210): [406..407]
 a171(r89 [0]): [410..443]
 a171(r89 [1]): [409..443]
 a172(r88): [412..413]
 a173(r191): [414..415]
 a174(r209): [416..419]
 a175(r190): [416..421]
 a176(r208): [424..425]
 a177(r87): [426..427]
 a178(r207): [428..429]
Compressing live ranges: from 444 to 272 - 61%
Ranges after the compression:
 a0(r277): [0..1]
 a1(r189): [0..1]
 a2(r206): [2..5]
 a3(r188): [2..3]
 a4(r276): [4..5]
 a5(r205): [6..7]
 a6(r275): [8..9]
 a7(r187): [8..9]
 a8(r186): [10..11]
 a9(r274): [12..13]
 a10(r273): [14..15]
 a11(r185): [14..15]
 a12(r184): [16..17]
 a13(r182): [16..21]
 a14(r183): [18..19]
 a15(r272): [20..21]
 a16(r271): [20..21]
 a17(r270): [22..23]
 a18(r269): [24..25]
 a19(r181): [24..25]
 a20(r180): [26..27]
 a21(r179): [28..29]
 a22(r178): [30..31]
 a23(r177): [32..33]
 a24(r175): [32..37]
 a25(r176): [34..35]
 a26(r268): [36..37]
 a27(r267): [36..37]
 a28(r266): [38..39]
 a29(r265): [40..41]
 a30(r174): [40..41]
 a31(r173): [42..43]
 a32(r172): [44..45]
 a33(r171): [46..47]
 a34(r170): [48..49]
 a35(r169): [50..51]
 a36(r168): [52..53]
 a37(r167): [54..55]
 a38(r264): [56..57]
 a39(r263): [58..59]
 a40(r166): [60..61]
 a41(r156): [60..81]
 a42(r165): [62..63]
 a43(r164): [64..65]
 a44(r163): [66..67]
 a45(r159): [66..75]
 a46(r262): [68..69]
 a47(r162): [68..69]
 a48(r161): [70..71]
 a49(r160): [72..73]
 a50(r261): [74..75]
 a51(r260): [76..77]
 a52(r158): [76..77]
 a53(r157): [78..79]
 a54(r259): [80..81]
 a55(r155): [82..83]
 a56(r154): [84..85]
 a57(r153): [86..87]
 a58(r150): [86..93]
 a59(r258): [88..89]
 a60(r152): [88..89]
 a61(r151): [90..91]
 a62(r257): [92..93]
 a63(r256): [94..95]
 a64(r149): [94..95]
 a65(r148): [96..97]
 a66(r147): [98..99]
 a67(r255): [100..101]
 a68(r254): [102..103]
 a69(r146): [104..105]
 a70(r135): [104..127]
 a71(r145): [106..107]
 a72(r144): [108..109]
 a73(r143): [110..111]
 a74(r140): [110..117]
 a75(r253): [112..113]
 a76(r142): [112..113]
 a77(r141): [114..115]
 a78(r252): [116..117]
 a79(r139): [118..119]
 a80(r251): [120..121]
 a81(r138): [120..121]
 a82(r137): [122..123]
 a83(r136): [124..125]
 a84(r250): [126..127]
 a85(r249): [128..129]
 a86(r134): [128..129]
 a87(r133): [130..131]
 a88(r132): [132..133]
 a89(r128): [132..141]
 a90(r248): [134..135]
 a91(r131): [134..135]
 a92(r130): [136..137]
 a93(r129): [138..139]
 a94(r247): [140..141]
 a95(r246): [142..143]
 a96(r127): [142..143]
 a97(r126): [144..145]
 a98(r245): [146..147]
 a99(r243): [148..149]
 a100(r125): [150..151]
 a101(r244): [150..151]
 a102(r242): [152..153]
 a103(r124): [152..153]
 a104(r123): [154..155]
 a105(r122): [156..157]
 a106(r241): [158..159]
 a107(r240): [160..161]
 a108(r239): [162..163]
 a109(r121): [162..163]
 a110(r120): [164..165]
 a111(r119): [166..167]
 a112(r238): [168..169]
 a113(r237): [170..171]
 a114(r118): [172..173]
 a115(r117): [174..175]
 a116(r116): [176..177]
 a117(r112): [176..185]
 a118(r236): [178..179]
 a119(r115): [178..179]
 a120(r114): [180..181]
 a121(r113): [182..183]
 a122(r235): [184..185]
 a123(r234): [186..187]
 a124(r233): [188..189]
 a125(r111): [190..191]
 a126(r107): [190..199]
 a127(r232): [192..193]
 a128(r110): [192..193]
 a129(r109): [194..195]
 a130(r108): [196..197]
 a131(r231): [198..199]
 a132(r230): [200..201]
 a133(r106): [200..201]
 a134(r105): [202..203]
 a135(r229): [204..205]
 a136(r228): [210..211]
 a137(r227): [212..213]
 a138(r101): [214..221]
 a139(r104): [214..215]
 a140(r226): [216..217]
 a141(r103): [216..217]
 a142(r102): [218..219]
 a143(r225): [220..221]
 a144(r224): [222..223]
 a145(r223): [224..225]
 a146(r222): [226..227]
 a147(r100): [228..229]
 a148(r221): [228..229]
 a149(r220): [230..231]
 a150(r219): [230..231]
 a151(r99): [206..207]
 a152(r218): [208..209]
 a153(r217): [232..233]
 a154(r216): [234..235]
 a155(r97 [0]): [236..271]
 a155(r97 [1]): [236..271]
 a156(r96): [236..237]
 a157(r201): [238..239]
 a158(r215): [240..241]
 a159(r200): [240..241]
 a160(r214): [242..243]
 a161(r95): [244..245]
 a162(r213): [246..247]
 a163(r93 [0]): [248..271]
 a163(r93 [1]): [248..271]
 a164(r92): [248..249]
 a165(r196): [250..251]
 a166(r212): [252..253]
 a167(r195): [252..253]
 a168(r211): [254..255]
 a169(r91): [256..257]
 a170(r210): [258..259]
 a171(r89 [0]): [260..271]
 a171(r89 [1]): [260..271]
 a172(r88): [260..261]
 a173(r191): [262..263]
 a174(r209): [264..265]
 a175(r190): [264..265]
 a176(r208): [266..267]
 a177(r87): [268..269]
 a178(r207): [270..271]
  regions=1, blocks=10, points=272
    allocnos=179 (big 3), copies=0, conflicts=0, ranges=182
Disposition:
  177:r87  l0     0  172:r88  l0     0  171:r89  l0    43  169:r91  l0     0
  164:r92  l0     0  163:r93  l0    41  161:r95  l0     0  156:r96  l0     0
  155:r97  l0    39  151:r99  l0     0  147:r100 l0     0  138:r101 l0    22
  142:r102 l0     0  141:r103 l0     1  139:r104 l0    21  134:r105 l0     0
  133:r106 l0     1  126:r107 l0    21  130:r108 l0     0  129:r109 l0     0
  128:r110 l0     1  125:r111 l0    22  117:r112 l0    21  121:r113 l0     0
  120:r114 l0     0  119:r115 l0     1  116:r116 l0    22  115:r117 l0    21
  114:r118 l0    21  111:r119 l0     0  110:r120 l0     0  109:r121 l0     1
  105:r122 l0     0  104:r123 l0     0  103:r124 l0     1  100:r125 l0    21
   97:r126 l0     0   96:r127 l0     1   89:r128 l0    21   93:r129 l0     0
   92:r130 l0     0   91:r131 l0     1   88:r132 l0    22   87:r133 l0    21
   86:r134 l0    22   70:r135 l0    22   83:r136 l0     0   82:r137 l0     0
   81:r138 l0     1   79:r139 l0    21   74:r140 l0    21   77:r141 l0     0
   76:r142 l0     1   73:r143 l0    23   72:r144 l0    21   71:r145 l0    21
   69:r146 l0    21   66:r147 l0     0   65:r148 l0     0   64:r149 l0     1
   58:r150 l0    22   61:r151 l0     0   60:r152 l0     1   57:r153 l0    21
   56:r154 l0    21   55:r155 l0    21   41:r156 l0    21   53:r157 l0     0
   52:r158 l0     1   45:r159 l0    22   49:r160 l0     0   48:r161 l0     0
   47:r162 l0     1   44:r163 l0    23   43:r164 l0    22   42:r165 l0    22
   40:r166 l0    22   37:r167 l0    21   36:r168 l0    21   35:r169 l0    21
   34:r170 l0    21   33:r171 l0    21   32:r172 l0    21   31:r173 l0    21
   30:r174 l0    21   24:r175 l0    22   25:r176 l0    21   23:r177 l0    21
   22:r178 l0    21   21:r179 l0    21   20:r180 l0    21   19:r181 l0    21
   13:r182 l0    22   14:r183 l0    21   12:r184 l0    21   11:r185 l0    21
    8:r186 l0    21    7:r187 l0    21    3:r188 l0    22    1:r189 l0    21
  175:r190 l0     0  173:r191 l0     0  167:r195 l0     0  165:r196 l0     0
  159:r200 l0     0  157:r201 l0     0    5:r205 l0    21    2:r206 l0    21
  178:r207 l0     0  176:r208 l0     0  174:r209 l0     1  170:r210 l0     0
  168:r211 l0     0  166:r212 l0     1  162:r213 l0     0  160:r214 l0     0
  158:r215 l0     1  154:r216 l0     0  153:r217 l0     0  152:r218 l0     0
  150:r219 l0     1  149:r220 l0     0  148:r221 l0     1  146:r222 l0     0
  145:r223 l0     0  144:r224 l0     0  143:r225 l0     0  140:r226 l0     0
  137:r227 l0     0  136:r228 l0     0  135:r229 l0     0  132:r230 l0     0
  131:r231 l0     0  127:r232 l0     0  124:r233 l0    21  123:r234 l0     0
  122:r235 l0     0  118:r236 l0     0  113:r237 l0    21  112:r238 l0     0
  108:r239 l0     0  107:r240 l0    21  106:r241 l0     0  102:r242 l0     0
   99:r243 l0    21  101:r244 l0    22   98:r245 l0     0   95:r246 l0     0
   94:r247 l0     0   90:r248 l0     0   85:r249 l0    21   84:r250 l0     0
   80:r251 l0     0   78:r252 l0     0   75:r253 l0     0   68:r254 l0    21
   67:r255 l0     0   63:r256 l0     0   62:r257 l0     0   59:r258 l0     0
   54:r259 l0     0   51:r260 l0     0   50:r261 l0     0   46:r262 l0     0
   39:r263 l0    21   38:r264 l0    21   29:r265 l0     0   28:r266 l0    21
   27:r267 l0    23   26:r268 l0    21   18:r269 l0     0   17:r270 l0    21
   16:r271 l0    23   15:r272 l0    21   10:r273 l0     0    9:r274 l0     0
    6:r275 l0     0    4:r276 l0     0    0:r277 l0     0
+++Costs: overall 10, reg 10, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


sevall

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 17 [flags] 37 [r8] 38 [r9]
;;  ref usage 	r0={1d} r1={1d,1u} r2={1d,1u} r4={1d,1u} r5={1d,1u} r6={1d,9u} r7={1d,9u} r16={1d,14u} r17={32d,5u} r20={1d,94u,12e} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d,1u} r38={1d,1u} r87={1d,1u} r88={1d,1u} r89={2d,2u} r91={1d,1u} r92={1d,1u} r93={2d,2u} r95={1d,1u} r96={1d,1u} r97={2d,2u} r99={1d,1u} r100={1d,2u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,1u} r127={1d,1u} r128={1d,1u} r129={1d,1u} r130={1d,1u} r131={1d,1u} r132={1d,1u} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,2u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d,1u} r165={1d,2u} r166={1d,1u} r167={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,1u} r171={1d,1u} r172={1d,1u} r173={1d,1u} r174={1d,1u} r175={1d,1u} r176={1d,1u} r177={1d,1u} r178={1d,1u} r179={1d,1u} r180={1d,1u} r181={1d,1u} r182={1d,1u} r183={1d,1u} r184={1d,1u} r185={1d,1u} r186={1d,1u} r187={1d,1u} r188={1d,1u} r189={1d,1u} r190={1d,2u} r191={1d,1u} r195={1d,2u} r196={1d,1u} r200={1d,2u} r201={1d,1u} r205={1d,2u} r206={1d,1u} r207={1d,1u} r208={1d,1u} r209={1d,1u} r210={1d,1u} r211={1d,1u} r212={1d,1u} r213={1d,1u} r214={1d,1u} r215={1d,1u} r216={1d,1u} r217={1d,1u} r218={1d,1u} r219={1d,1u} r220={1d,1u} r221={1d,1u} r222={1d,1u} r223={1d,1u} r224={1d,1u} r225={1d,1u} r226={1d,1u} r227={1d,1u} r228={1d,1u} r229={1d,1u} r230={1d,1u} r231={1d,1u} r232={1d,1u} r233={1d,1u} r234={1d,1u} r235={1d,1u} r236={1d,1u} r237={1d,1u} r238={1d,1u} r239={1d,1u} r240={1d,1u} r241={1d,1u} r242={1d,1u} r243={1d,1u} r244={1d,1u} r245={1d,1u} r246={1d,1u} r247={1d,1u} r248={1d,1u} r249={1d,1u} r250={1d,1u} r251={1d,1u} r252={1d,1u} r253={1d,1u} r254={1d,1u} r255={1d,1u} r256={1d,1u} r257={1d,1u} r258={1d,1u} r259={1d,1u} r260={1d,1u} r261={1d,1u} r262={1d,1u} r263={1d,1u} r264={1d,1u} r265={1d,1u} r266={1d,2u} r267={1d,1u} r268={1d,1u} r269={1d,1u} r270={1d,2u} r271={1d,1u} r272={1d,1u} r273={1d,1u} r274={1d,1u} r275={1d,1u} r276={1d,1u} r277={1d,1u} 
;;    total ref usage 573{233d,328u,12e} in 218{218 regular + 0 call} insns.
(note 1 0 9 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9] 89 93 97
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9] 89 93 97
;; lr  def 	 17 [flags] 87 88 91 92 95 96 190 191 195 196 200 201 207 208 209 210 211 212 213 214 215 216 217
(note 9 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 9 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [4 ss+0 S8 A64])
        (reg:DI 5 di [ ss ])) "../src/spline.f":398 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ ss ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [5 x+0 S8 A64])
        (reg:DI 4 si [ x ])) "../src/spline.f":398 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ x ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -88 [0xffffffffffffffa8])) [5 xs+0 S8 A64])
        (reg:DI 1 dx [ xs ])) "../src/spline.f":398 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ xs ])
        (nil)))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [5 s+0 S8 A64])
        (reg:DI 2 cx [ s ])) "../src/spline.f":398 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [ s ])
        (nil)))
(insn 6 5 7 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -104 [0xffffffffffffff98])) [6 n+0 S8 A64])
        (reg:DI 37 r8 [ n ])) "../src/spline.f":398 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 37 r8 [ n ])
        (nil)))
(insn 7 6 8 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -112 [0xffffffffffffff90])) [4 xx+0 S8 A64])
        (reg:DI 38 r9 [ xx ])) "../src/spline.f":398 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 38 r9 [ xx ])
        (nil)))
(note 8 7 11 2 NOTE_INSN_FUNCTION_BEG)
(insn 11 8 12 2 (set (reg/f:DI 207)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -104 [0xffffffffffffff98])) [6 n+0 S8 A64])) "../src/spline.f":398 81 {*movdi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:SI 87 [ _1 ])
        (mem:SI (reg/f:DI 207) [1 *n_109(D)+0 S4 A32])) "../src/spline.f":398 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 207)
        (nil)))
(insn 13 12 14 2 (set (reg:DI 208)
        (sign_extend:DI (reg:SI 87 [ _1 ]))) "../src/spline.f":398 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 87 [ _1 ])
        (nil)))
(insn 14 13 15 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 ubound.0+0 S8 A64])
        (reg:DI 208)) "../src/spline.f":398 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 208)
        (nil)))
(insn 15 14 17 2 (set (reg:DI 190 [ size.1_111 ])
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 ubound.0+0 S8 A64])) "../src/spline.f":398 81 {*movdi_internal}
     (nil))
(insn 17 15 16 2 (set (reg:DI 209)
        (const_int 0 [0])) "../src/spline.f":398 81 {*movdi_internal}
     (nil))
(insn 16 17 18 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 190 [ size.1_111 ])
            (const_int 0 [0]))) "../src/spline.f":398 4 {*cmpdi_ccno_1}
     (nil))
(insn 18 16 20 2 (set (reg:DI 191 [ size.1_112 ])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 190 [ size.1_111 ])
            (reg:DI 209))) "../src/spline.f":398 967 {*movdicc_noc}
     (expr_list:REG_DEAD (reg:DI 209)
        (expr_list:REG_DEAD (reg:DI 190 [ size.1_111 ])
            (expr_list:REG_DEAD (reg:CCGOC 17 flags)
                (nil)))))
(insn 20 18 21 2 (set (reg:DI 88 [ size.144_2 ])
        (reg:DI 191 [ size.1_112 ])) "../src/spline.f":398 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 191 [ size.1_112 ])
        (nil)))
(insn 21 20 22 2 (set (subreg:DI (reg:TI 89 [ _3 ]) 0)
        (reg:DI 88 [ size.144_2 ])) "../src/spline.f":398 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88 [ size.144_2 ])
        (nil)))
(insn 22 21 26 2 (set (subreg:DI (reg:TI 89 [ _3 ]) 8)
        (const_int 0 [0])) "../src/spline.f":398 81 {*movdi_internal}
     (expr_list:REG_UNUSED (reg:TI 89 [ _3 ])
        (nil)))
(insn 26 22 27 2 (set (reg/f:DI 210)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -104 [0xffffffffffffff98])) [6 n+0 S8 A64])) "../src/spline.f":398 81 {*movdi_internal}
     (nil))
(insn 27 26 28 2 (set (reg:SI 91 [ _5 ])
        (mem:SI (reg/f:DI 210) [1 *n_109(D)+0 S4 A32])) "../src/spline.f":398 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 210)
        (nil)))
(insn 28 27 29 2 (set (reg:DI 211)
        (sign_extend:DI (reg:SI 91 [ _5 ]))) "../src/spline.f":398 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 91 [ _5 ])
        (nil)))
(insn 29 28 30 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [2 ubound.2+0 S8 A64])
        (reg:DI 211)) "../src/spline.f":398 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 211)
        (nil)))
(insn 30 29 32 2 (set (reg:DI 195 [ size.3_117 ])
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [2 ubound.2+0 S8 A64])) "../src/spline.f":398 81 {*movdi_internal}
     (nil))
(insn 32 30 31 2 (set (reg:DI 212)
        (const_int 0 [0])) "../src/spline.f":398 81 {*movdi_internal}
     (nil))
(insn 31 32 33 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 195 [ size.3_117 ])
            (const_int 0 [0]))) "../src/spline.f":398 4 {*cmpdi_ccno_1}
     (nil))
(insn 33 31 35 2 (set (reg:DI 196 [ size.3_118 ])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 195 [ size.3_117 ])
            (reg:DI 212))) "../src/spline.f":398 967 {*movdicc_noc}
     (expr_list:REG_DEAD (reg:DI 212)
        (expr_list:REG_DEAD (reg:DI 195 [ size.3_117 ])
            (expr_list:REG_DEAD (reg:CCGOC 17 flags)
                (nil)))))
(insn 35 33 36 2 (set (reg:DI 92 [ size.146_6 ])
        (reg:DI 196 [ size.3_118 ])) "../src/spline.f":398 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 196 [ size.3_118 ])
        (nil)))
(insn 36 35 37 2 (set (subreg:DI (reg:TI 93 [ _7 ]) 0)
        (reg:DI 92 [ size.146_6 ])) "../src/spline.f":398 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 92 [ size.146_6 ])
        (nil)))
(insn 37 36 41 2 (set (subreg:DI (reg:TI 93 [ _7 ]) 8)
        (const_int 0 [0])) "../src/spline.f":398 81 {*movdi_internal}
     (expr_list:REG_UNUSED (reg:TI 93 [ _7 ])
        (nil)))
(insn 41 37 42 2 (set (reg/f:DI 213)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -104 [0xffffffffffffff98])) [6 n+0 S8 A64])) "../src/spline.f":398 81 {*movdi_internal}
     (nil))
(insn 42 41 43 2 (set (reg:SI 95 [ _9 ])
        (mem:SI (reg/f:DI 213) [1 *n_109(D)+0 S4 A32])) "../src/spline.f":398 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 213)
        (nil)))
(insn 43 42 44 2 (set (reg:DI 214)
        (sign_extend:DI (reg:SI 95 [ _9 ]))) "../src/spline.f":398 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 95 [ _9 ])
        (nil)))
(insn 44 43 45 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [2 ubound.4+0 S8 A64])
        (reg:DI 214)) "../src/spline.f":398 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 214)
        (nil)))
(insn 45 44 47 2 (set (reg:DI 200 [ size.5_123 ])
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [2 ubound.4+0 S8 A64])) "../src/spline.f":398 81 {*movdi_internal}
     (nil))
(insn 47 45 46 2 (set (reg:DI 215)
        (const_int 0 [0])) "../src/spline.f":398 81 {*movdi_internal}
     (nil))
(insn 46 47 48 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 200 [ size.5_123 ])
            (const_int 0 [0]))) "../src/spline.f":398 4 {*cmpdi_ccno_1}
     (nil))
(insn 48 46 50 2 (set (reg:DI 201 [ size.5_124 ])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 200 [ size.5_123 ])
            (reg:DI 215))) "../src/spline.f":398 967 {*movdicc_noc}
     (expr_list:REG_DEAD (reg:DI 215)
        (expr_list:REG_DEAD (reg:DI 200 [ size.5_123 ])
            (expr_list:REG_DEAD (reg:CCGOC 17 flags)
                (nil)))))
(insn 50 48 51 2 (set (reg:DI 96 [ size.148_10 ])
        (reg:DI 201 [ size.5_124 ])) "../src/spline.f":398 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 201 [ size.5_124 ])
        (nil)))
(insn 51 50 52 2 (set (subreg:DI (reg:TI 97 [ _11 ]) 0)
        (reg:DI 96 [ size.148_10 ])) "../src/spline.f":398 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 96 [ size.148_10 ])
        (nil)))
(insn 52 51 56 2 (set (subreg:DI (reg:TI 97 [ _11 ]) 8)
        (const_int 0 [0])) "../src/spline.f":398 81 {*movdi_internal}
     (expr_list:REG_UNUSED (reg:TI 97 [ _11 ])
        (nil)))
(insn 56 52 57 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 ilow+0 S4 A32])
        (const_int 1 [0x1])) "../src/spline.f":406 82 {*movsi_internal}
     (nil))
(insn 57 56 58 2 (set (reg/f:DI 216)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -104 [0xffffffffffffff98])) [6 n+0 S8 A64])) "../src/spline.f":407 81 {*movdi_internal}
     (nil))
(insn 58 57 59 2 (set (reg:SI 217)
        (mem:SI (reg/f:DI 216) [1 *n_109(D)+0 S4 A32])) "../src/spline.f":407 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 216)
        (nil)))
(insn 59 58 96 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
        (reg:SI 217)) "../src/spline.f":407 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 217)
        (nil)))
;;  succ:       3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 (FALLTHRU)
;;              7 [100.0%] 
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 99 218
(code_label 96 59 60 3 6 (nil) [1 uses])
(note 60 96 61 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 61 60 62 3 (set (reg:SI 218)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":409 82 {*movsi_internal}
     (nil))
(insn 62 61 63 3 (parallel [
            (set (reg:SI 99 [ _13 ])
                (minus:SI (reg:SI 218)
                    (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [1 ilow+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":409 273 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 218)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [1 ilow+0 S4 A32]))
                (nil)))))
(insn 63 62 64 3 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 99 [ _13 ])
            (const_int 1 [0x1]))) "../src/spline.f":409 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 99 [ _13 ])
        (nil)))
(jump_insn 64 63 65 3 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 262)
            (pc))) "../src/spline.f":409 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 262)
;;  succ:       9
;;              4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 100 101 102 103 104 219 220 221 222 223 224 225 226
(note 65 64 66 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 66 65 67 4 (set (reg:SI 219)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":411 82 {*movsi_internal}
     (nil))
(insn 67 66 68 4 (set (reg:SI 220)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 ilow+0 S4 A32])) "../src/spline.f":411 82 {*movsi_internal}
     (nil))
(insn 68 67 69 4 (parallel [
            (set (reg:SI 100 [ _14 ])
                (plus:SI (reg:SI 219)
                    (reg:SI 220)))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":411 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 220)
        (expr_list:REG_DEAD (reg:SI 219)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                                (const_int -8 [0xfffffffffffffff8])) [1 ilow+0 S4 A32]))
                    (nil))))))
(insn 69 68 70 4 (parallel [
            (set (reg:SI 221)
                (lshiftrt:SI (reg:SI 100 [ _14 ])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":411 544 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 70 69 71 4 (parallel [
            (set (reg:SI 222)
                (plus:SI (reg:SI 221)
                    (reg:SI 100 [ _14 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":411 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 221)
        (expr_list:REG_DEAD (reg:SI 100 [ _14 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 71 70 72 4 (parallel [
            (set (reg:SI 223)
                (ashiftrt:SI (reg:SI 222)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":411 545 {*ashrsi3_1}
     (expr_list:REG_DEAD (reg:SI 222)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 72 71 73 4 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -36 [0xffffffffffffffdc])) [1 imid+0 S4 A32])
        (reg:SI 223)) "../src/spline.f":411 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 223)
        (nil)))
(insn 73 72 74 4 (set (reg/f:DI 224)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [4 ss+0 S8 A64])) "../src/spline.f":412 81 {*movdi_internal}
     (nil))
(insn 74 73 75 4 (set (reg:SF 101 [ _15 ])
        (mem:SF (reg/f:DI 224) [3 *ss_131(D)+0 S4 A32])) "../src/spline.f":412 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 224)
        (nil)))
(insn 75 74 76 4 (set (reg:SI 225)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -36 [0xffffffffffffffdc])) [1 imid+0 S4 A32])) "../src/spline.f":412 82 {*movsi_internal}
     (nil))
(insn 76 75 77 4 (set (reg:DI 102 [ _16 ])
        (sign_extend:DI (reg:SI 225))) "../src/spline.f":412 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 225)
        (nil)))
(insn 77 76 78 4 (parallel [
            (set (reg:DI 103 [ _17 ])
                (plus:DI (reg:DI 102 [ _16 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":412 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 102 [ _16 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 78 77 79 4 (set (reg/f:DI 226)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [5 s+0 S8 A64])) "../src/spline.f":412 81 {*movdi_internal}
     (nil))
(insn 79 78 80 4 (set (reg:SF 104 [ _18 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 103 [ _17 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 226)) [3 *s_132(D) S4 A32])) "../src/spline.f":412 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 226)
        (expr_list:REG_DEAD (reg:DI 103 [ _17 ])
            (nil))))
(insn 80 79 81 4 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 104 [ _18 ])
            (reg:SF 101 [ _15 ]))) "../src/spline.f":412 51 {*cmpiusf}
     (expr_list:REG_DEAD (reg:SF 104 [ _18 ])
        (expr_list:REG_DEAD (reg:SF 101 [ _15 ])
            (nil))))
(jump_insn 81 80 85 4 (set (pc)
        (if_then_else (unle (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 256)
            (pc))) "../src/spline.f":412 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil))
 -> 256)
;;  succ:       5 (FALLTHRU)
;;              6
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 227
(note 85 81 86 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 86 85 87 5 (set (reg:SI 227)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -36 [0xffffffffffffffdc])) [1 imid+0 S4 A32])) "../src/spline.f":413 82 {*movsi_internal}
     (nil))
(insn 87 86 257 5 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
        (reg:SI 227)) "../src/spline.f":413 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 227)
        (nil)))
(jump_insn 257 87 258 5 (set (pc)
        (label_ref 94)) 649 {jump}
     (nil)
 -> 94)
;;  succ:       7 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 258 257 256)
;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (RTL)
;;  pred:       4
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 228
(code_label 256 258 91 6 9 (nil) [1 uses])
(note 91 256 92 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 92 91 93 6 (set (reg:SI 228)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -36 [0xffffffffffffffdc])) [1 imid+0 S4 A32])) "../src/spline.f":415 82 {*movsi_internal}
     (nil))
(insn 93 92 94 6 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 ilow+0 S4 A32])
        (reg:SI 228)) "../src/spline.f":415 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 228)
        (nil)))
;;  succ:       7 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 9, flags: (RTL)
;;  pred:       6 (FALLTHRU)
;;              5 [100.0%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 94 93 95 7 5 (nil) [1 uses])
(note 95 94 259 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(jump_insn 259 95 260 7 (set (pc)
        (label_ref 96)) "../src/spline.f":417 649 {jump}
     (nil)
 -> 96)
;;  succ:       3 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 260 259 262)
;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 8, flags: (RTL)
;;  pred:       3
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 262 260 261 9 10 (nil) [1 uses])
(note 261 262 263 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 263 261 99 9 (const_int 0 [0]) "../src/spline.f":417 682 {nop}
     (nil))
;;  succ:       8 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 1, flags: (RTL)
;;  pred:       9 [100.0%]  (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags
(code_label 99 263 100 8 2 (nil) [0 uses])
(note 100 99 101 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 101 100 102 8 (set (reg:SI 229)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":419 82 {*movsi_internal}
     (nil))
(insn 102 101 103 8 (set (reg:DI 105 [ _19 ])
        (sign_extend:DI (reg:SI 229))) "../src/spline.f":419 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 229)
        (nil)))
(insn 103 102 104 8 (parallel [
            (set (reg:DI 106 [ _20 ])
                (plus:DI (reg:DI 105 [ _19 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":419 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 105 [ _19 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 104 103 105 8 (set (reg/f:DI 230)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [5 s+0 S8 A64])) "../src/spline.f":419 81 {*movdi_internal}
     (nil))
(insn 105 104 106 8 (set (reg:SF 107 [ _21 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 106 [ _20 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 230)) [3 *s_132(D) S4 A32])) "../src/spline.f":419 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 230)
        (expr_list:REG_DEAD (reg:DI 106 [ _20 ])
            (nil))))
(insn 106 105 107 8 (set (reg:SI 231)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":419 82 {*movsi_internal}
     (nil))
(insn 107 106 108 8 (parallel [
            (set (reg:SI 108 [ _22 ])
                (plus:SI (reg:SI 231)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":419 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 231)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff]))
                (nil)))))
(insn 108 107 109 8 (set (reg:DI 109 [ _23 ])
        (sign_extend:DI (reg:SI 108 [ _22 ]))) "../src/spline.f":419 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 108 [ _22 ])
        (nil)))
(insn 109 108 110 8 (parallel [
            (set (reg:DI 110 [ _24 ])
                (plus:DI (reg:DI 109 [ _23 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":419 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 109 [ _23 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 110 109 111 8 (set (reg/f:DI 232)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [5 s+0 S8 A64])) "../src/spline.f":419 81 {*movdi_internal}
     (nil))
(insn 111 110 112 8 (set (reg:SF 111 [ _25 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 110 [ _24 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 232)) [3 *s_132(D) S4 A32])) "../src/spline.f":419 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 232)
        (expr_list:REG_DEAD (reg:DI 110 [ _24 ])
            (nil))))
(insn 112 111 113 8 (set (reg:SF 233)
        (minus:SF (reg:SF 107 [ _21 ])
            (reg:SF 111 [ _25 ]))) "../src/spline.f":419 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 111 [ _25 ])
        (expr_list:REG_DEAD (reg:SF 107 [ _21 ])
            (nil))))
(insn 113 112 114 8 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [3 ds+0 S4 A32])
        (reg:SF 233)) "../src/spline.f":419 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 233)
        (nil)))
(insn 114 113 115 8 (set (reg/f:DI 234)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [4 ss+0 S8 A64])) "../src/spline.f":420 81 {*movdi_internal}
     (nil))
(insn 115 114 116 8 (set (reg:SF 112 [ _26 ])
        (mem:SF (reg/f:DI 234) [3 *ss_131(D)+0 S4 A32])) "../src/spline.f":420 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 234)
        (nil)))
(insn 116 115 117 8 (set (reg:SI 235)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":420 82 {*movsi_internal}
     (nil))
(insn 117 116 118 8 (parallel [
            (set (reg:SI 113 [ _27 ])
                (plus:SI (reg:SI 235)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":420 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 235)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff]))
                (nil)))))
(insn 118 117 119 8 (set (reg:DI 114 [ _28 ])
        (sign_extend:DI (reg:SI 113 [ _27 ]))) "../src/spline.f":420 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 113 [ _27 ])
        (nil)))
(insn 119 118 120 8 (parallel [
            (set (reg:DI 115 [ _29 ])
                (plus:DI (reg:DI 114 [ _28 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":420 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 114 [ _28 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 120 119 121 8 (set (reg/f:DI 236)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [5 s+0 S8 A64])) "../src/spline.f":420 81 {*movdi_internal}
     (nil))
(insn 121 120 122 8 (set (reg:SF 116 [ _30 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 115 [ _29 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 236)) [3 *s_132(D) S4 A32])) "../src/spline.f":420 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 236)
        (expr_list:REG_DEAD (reg:DI 115 [ _29 ])
            (nil))))
(insn 122 121 123 8 (set (reg:SF 117 [ _31 ])
        (minus:SF (reg:SF 112 [ _26 ])
            (reg:SF 116 [ _30 ]))) "../src/spline.f":420 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 116 [ _30 ])
        (expr_list:REG_DEAD (reg:SF 112 [ _26 ])
            (nil))))
(insn 123 122 124 8 (set (reg:SF 118 [ _32 ])
        (reg:SF 117 [ _31 ])) "../src/spline.f":420 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 117 [ _31 ])
        (nil)))
(insn 124 123 125 8 (set (reg:SF 237)
        (div:SF (reg:SF 118 [ _32 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -40 [0xffffffffffffffd8])) [3 ds+0 S4 A32]))) "../src/spline.f":420 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 118 [ _32 ])
        (nil)))
(insn 125 124 126 8 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -44 [0xffffffffffffffd4])) [3 t+0 S4 A32])
        (reg:SF 237)) "../src/spline.f":420 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 237)
        (nil)))
(insn 126 125 127 8 (set (reg:SI 238)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":422 82 {*movsi_internal}
     (nil))
(insn 127 126 128 8 (parallel [
            (set (reg:SI 119 [ _33 ])
                (plus:SI (reg:SI 238)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":422 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 238)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff]))
                (nil)))))
(insn 128 127 129 8 (set (reg:DI 120 [ _34 ])
        (sign_extend:DI (reg:SI 119 [ _33 ]))) "../src/spline.f":422 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 119 [ _33 ])
        (nil)))
(insn 129 128 130 8 (parallel [
            (set (reg:DI 121 [ _35 ])
                (plus:DI (reg:DI 120 [ _34 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":422 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 120 [ _34 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 130 129 131 8 (set (reg/f:DI 239)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [5 x+0 S8 A64])) "../src/spline.f":422 81 {*movdi_internal}
     (nil))
(insn 131 130 132 8 (set (reg:SF 240)
        (mem:SF (plus:DI (mult:DI (reg:DI 121 [ _35 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 239)) [3 *x_137(D) S4 A32])) "../src/spline.f":422 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 239)
        (expr_list:REG_DEAD (reg:DI 121 [ _35 ])
            (nil))))
(insn 132 131 133 8 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [3 f0+0 S4 A32])
        (reg:SF 240)) "../src/spline.f":422 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 240)
        (nil)))
(insn 133 132 134 8 (set (reg:SI 241)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":423 82 {*movsi_internal}
     (nil))
(insn 134 133 135 8 (parallel [
            (set (reg:SI 122 [ _36 ])
                (plus:SI (reg:SI 241)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":423 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 241)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff]))
                (nil)))))
(insn 135 134 136 8 (set (reg:DI 123 [ _37 ])
        (sign_extend:DI (reg:SI 122 [ _36 ]))) "../src/spline.f":423 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 122 [ _36 ])
        (nil)))
(insn 136 135 137 8 (parallel [
            (set (reg:DI 124 [ _38 ])
                (plus:DI (reg:DI 123 [ _37 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":423 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 123 [ _37 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 137 136 138 8 (set (reg/f:DI 242)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -88 [0xffffffffffffffa8])) [5 xs+0 S8 A64])) "../src/spline.f":423 81 {*movdi_internal}
     (nil))
(insn 138 137 139 8 (set (reg:SF 125 [ _39 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 124 [ _38 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 242)) [3 *xs_139(D) S4 A32])) "../src/spline.f":423 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 242)
        (expr_list:REG_DEAD (reg:DI 124 [ _38 ])
            (nil))))
(insn 139 138 140 8 (set (reg:SF 244)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [3 ds+0 S4 A32])) "../src/spline.f":423 127 {*movsf_internal}
     (nil))
(insn 140 139 141 8 (set (reg:SF 243)
        (mult:SF (reg:SF 244)
            (reg:SF 125 [ _39 ]))) "../src/spline.f":423 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 244)
        (expr_list:REG_DEAD (reg:SF 125 [ _39 ])
            (nil))))
(insn 141 140 142 8 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -52 [0xffffffffffffffcc])) [3 f1+0 S4 A32])
        (reg:SF 243)) "../src/spline.f":423 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 243)
        (nil)))
(insn 142 141 143 8 (set (reg:SI 245)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":424 82 {*movsi_internal}
     (nil))
(insn 143 142 144 8 (set (reg:DI 126 [ _40 ])
        (sign_extend:DI (reg:SI 245))) "../src/spline.f":424 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 245)
        (nil)))
(insn 144 143 145 8 (parallel [
            (set (reg:DI 127 [ _41 ])
                (plus:DI (reg:DI 126 [ _40 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":424 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 126 [ _40 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 145 144 146 8 (set (reg/f:DI 246)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [5 x+0 S8 A64])) "../src/spline.f":424 81 {*movdi_internal}
     (nil))
(insn 146 145 147 8 (set (reg:SF 128 [ _42 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 127 [ _41 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 246)) [3 *x_137(D) S4 A32])) "../src/spline.f":424 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 246)
        (expr_list:REG_DEAD (reg:DI 127 [ _41 ])
            (nil))))
(insn 147 146 148 8 (set (reg:SI 247)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":424 82 {*movsi_internal}
     (nil))
(insn 148 147 149 8 (parallel [
            (set (reg:SI 129 [ _43 ])
                (plus:SI (reg:SI 247)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":424 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 247)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff]))
                (nil)))))
(insn 149 148 150 8 (set (reg:DI 130 [ _44 ])
        (sign_extend:DI (reg:SI 129 [ _43 ]))) "../src/spline.f":424 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 129 [ _43 ])
        (nil)))
(insn 150 149 151 8 (parallel [
            (set (reg:DI 131 [ _45 ])
                (plus:DI (reg:DI 130 [ _44 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":424 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 130 [ _44 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 151 150 152 8 (set (reg/f:DI 248)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [5 x+0 S8 A64])) "../src/spline.f":424 81 {*movdi_internal}
     (nil))
(insn 152 151 153 8 (set (reg:SF 132 [ _46 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 131 [ _45 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 248)) [3 *x_137(D) S4 A32])) "../src/spline.f":424 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 248)
        (expr_list:REG_DEAD (reg:DI 131 [ _45 ])
            (nil))))
(insn 153 152 154 8 (set (reg:SF 133 [ _47 ])
        (minus:SF (reg:SF 128 [ _42 ])
            (reg:SF 132 [ _46 ]))) "../src/spline.f":424 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 132 [ _46 ])
        (expr_list:REG_DEAD (reg:SF 128 [ _42 ])
            (nil))))
(insn 154 153 155 8 (set (reg:SF 134 [ _48 ])
        (reg:SF 133 [ _47 ])) "../src/spline.f":424 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 133 [ _47 ])
        (nil)))
(insn 155 154 156 8 (set (reg:SF 249)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC0") [flags 0x2]) [3  S4 A32])) "../src/spline.f":424 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 3.0e+0 [0x0.cp+2])
        (nil)))
(insn 156 155 157 8 (set (reg:SF 135 [ _49 ])
        (mult:SF (reg:SF 134 [ _48 ])
            (reg:SF 249))) "../src/spline.f":424 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 249)
        (expr_list:REG_DEAD (reg:SF 134 [ _48 ])
            (nil))))
(insn 157 156 158 8 (set (reg:SI 250)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":424 82 {*movsi_internal}
     (nil))
(insn 158 157 159 8 (parallel [
            (set (reg:SI 136 [ _50 ])
                (plus:SI (reg:SI 250)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":424 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 250)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff]))
                (nil)))))
(insn 159 158 160 8 (set (reg:DI 137 [ _51 ])
        (sign_extend:DI (reg:SI 136 [ _50 ]))) "../src/spline.f":424 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 136 [ _50 ])
        (nil)))
(insn 160 159 161 8 (parallel [
            (set (reg:DI 138 [ _52 ])
                (plus:DI (reg:DI 137 [ _51 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":424 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 137 [ _51 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 161 160 162 8 (set (reg/f:DI 251)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -88 [0xffffffffffffffa8])) [5 xs+0 S8 A64])) "../src/spline.f":424 81 {*movdi_internal}
     (nil))
(insn 162 161 163 8 (set (reg:SF 139 [ _53 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 138 [ _52 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 251)) [3 *xs_139(D) S4 A32])) "../src/spline.f":424 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 251)
        (expr_list:REG_DEAD (reg:DI 138 [ _52 ])
            (nil))))
(insn 163 162 164 8 (set (reg:SF 140 [ _54 ])
        (plus:SF (reg:SF 139 [ _53 ])
            (reg:SF 139 [ _53 ]))) "../src/spline.f":424 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 139 [ _53 ])
        (nil)))
(insn 164 163 165 8 (set (reg:SI 252)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":424 82 {*movsi_internal}
     (nil))
(insn 165 164 166 8 (set (reg:DI 141 [ _55 ])
        (sign_extend:DI (reg:SI 252))) "../src/spline.f":424 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 252)
        (nil)))
(insn 166 165 167 8 (parallel [
            (set (reg:DI 142 [ _56 ])
                (plus:DI (reg:DI 141 [ _55 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":424 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 141 [ _55 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 167 166 168 8 (set (reg/f:DI 253)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -88 [0xffffffffffffffa8])) [5 xs+0 S8 A64])) "../src/spline.f":424 81 {*movdi_internal}
     (nil))
(insn 168 167 169 8 (set (reg:SF 143 [ _57 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 142 [ _56 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 253)) [3 *xs_139(D) S4 A32])) "../src/spline.f":424 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 253)
        (expr_list:REG_DEAD (reg:DI 142 [ _56 ])
            (nil))))
(insn 169 168 170 8 (set (reg:SF 144 [ _58 ])
        (plus:SF (reg:SF 140 [ _54 ])
            (reg:SF 143 [ _57 ]))) "../src/spline.f":424 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 143 [ _57 ])
        (expr_list:REG_DEAD (reg:SF 140 [ _54 ])
            (nil))))
(insn 170 169 171 8 (set (reg:SF 145 [ _59 ])
        (reg:SF 144 [ _58 ])) "../src/spline.f":424 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 144 [ _58 ])
        (nil)))
(insn 171 170 172 8 (set (reg:SF 146 [ _60 ])
        (mult:SF (reg:SF 145 [ _59 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -40 [0xffffffffffffffd8])) [3 ds+0 S4 A32]))) "../src/spline.f":424 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 145 [ _59 ])
        (nil)))
(insn 172 171 173 8 (set (reg:SF 254)
        (minus:SF (reg:SF 135 [ _49 ])
            (reg:SF 146 [ _60 ]))) "../src/spline.f":424 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 146 [ _60 ])
        (expr_list:REG_DEAD (reg:SF 135 [ _49 ])
            (nil))))
(insn 173 172 174 8 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [3 f2+0 S4 A32])
        (reg:SF 254)) "../src/spline.f":424 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 254)
        (nil)))
(insn 174 173 175 8 (set (reg:SI 255)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":425 82 {*movsi_internal}
     (nil))
(insn 175 174 176 8 (parallel [
            (set (reg:SI 147 [ _61 ])
                (plus:SI (reg:SI 255)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":425 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 255)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff]))
                (nil)))))
(insn 176 175 177 8 (set (reg:DI 148 [ _62 ])
        (sign_extend:DI (reg:SI 147 [ _61 ]))) "../src/spline.f":425 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 147 [ _61 ])
        (nil)))
(insn 177 176 178 8 (parallel [
            (set (reg:DI 149 [ _63 ])
                (plus:DI (reg:DI 148 [ _62 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":425 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 148 [ _62 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 178 177 179 8 (set (reg/f:DI 256)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -88 [0xffffffffffffffa8])) [5 xs+0 S8 A64])) "../src/spline.f":425 81 {*movdi_internal}
     (nil))
(insn 179 178 180 8 (set (reg:SF 150 [ _64 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 149 [ _63 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 256)) [3 *xs_139(D) S4 A32])) "../src/spline.f":425 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 256)
        (expr_list:REG_DEAD (reg:DI 149 [ _63 ])
            (nil))))
(insn 180 179 181 8 (set (reg:SI 257)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":425 82 {*movsi_internal}
     (nil))
(insn 181 180 182 8 (set (reg:DI 151 [ _65 ])
        (sign_extend:DI (reg:SI 257))) "../src/spline.f":425 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 257)
        (nil)))
(insn 182 181 183 8 (parallel [
            (set (reg:DI 152 [ _66 ])
                (plus:DI (reg:DI 151 [ _65 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":425 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 151 [ _65 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 183 182 184 8 (set (reg/f:DI 258)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -88 [0xffffffffffffffa8])) [5 xs+0 S8 A64])) "../src/spline.f":425 81 {*movdi_internal}
     (nil))
(insn 184 183 185 8 (set (reg:SF 153 [ _67 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 152 [ _66 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 258)) [3 *xs_139(D) S4 A32])) "../src/spline.f":425 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 258)
        (expr_list:REG_DEAD (reg:DI 152 [ _66 ])
            (nil))))
(insn 185 184 186 8 (set (reg:SF 154 [ _68 ])
        (plus:SF (reg:SF 150 [ _64 ])
            (reg:SF 153 [ _67 ]))) "../src/spline.f":425 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 153 [ _67 ])
        (expr_list:REG_DEAD (reg:SF 150 [ _64 ])
            (nil))))
(insn 186 185 187 8 (set (reg:SF 155 [ _69 ])
        (reg:SF 154 [ _68 ])) "../src/spline.f":425 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 154 [ _68 ])
        (nil)))
(insn 187 186 188 8 (set (reg:SF 156 [ _70 ])
        (mult:SF (reg:SF 155 [ _69 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -40 [0xffffffffffffffd8])) [3 ds+0 S4 A32]))) "../src/spline.f":425 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 155 [ _69 ])
        (nil)))
(insn 188 187 189 8 (set (reg:SI 259)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":425 82 {*movsi_internal}
     (nil))
(insn 189 188 190 8 (set (reg:DI 157 [ _71 ])
        (sign_extend:DI (reg:SI 259))) "../src/spline.f":425 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 259)
        (nil)))
(insn 190 189 191 8 (parallel [
            (set (reg:DI 158 [ _72 ])
                (plus:DI (reg:DI 157 [ _71 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":425 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 157 [ _71 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 191 190 192 8 (set (reg/f:DI 260)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [5 x+0 S8 A64])) "../src/spline.f":425 81 {*movdi_internal}
     (nil))
(insn 192 191 193 8 (set (reg:SF 159 [ _73 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 158 [ _72 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 260)) [3 *x_137(D) S4 A32])) "../src/spline.f":425 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 260)
        (expr_list:REG_DEAD (reg:DI 158 [ _72 ])
            (nil))))
(insn 193 192 194 8 (set (reg:SI 261)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":425 82 {*movsi_internal}
     (nil))
(insn 194 193 195 8 (parallel [
            (set (reg:SI 160 [ _74 ])
                (plus:SI (reg:SI 261)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":425 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 261)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff]))
                (nil)))))
(insn 195 194 196 8 (set (reg:DI 161 [ _75 ])
        (sign_extend:DI (reg:SI 160 [ _74 ]))) "../src/spline.f":425 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 160 [ _74 ])
        (nil)))
(insn 196 195 197 8 (parallel [
            (set (reg:DI 162 [ _76 ])
                (plus:DI (reg:DI 161 [ _75 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":425 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 161 [ _75 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 197 196 198 8 (set (reg/f:DI 262)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [5 x+0 S8 A64])) "../src/spline.f":425 81 {*movdi_internal}
     (nil))
(insn 198 197 199 8 (set (reg:SF 163 [ _77 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 162 [ _76 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 262)) [3 *x_137(D) S4 A32])) "../src/spline.f":425 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 262)
        (expr_list:REG_DEAD (reg:DI 162 [ _76 ])
            (nil))))
(insn 199 198 200 8 (set (reg:SF 164 [ _78 ])
        (minus:SF (reg:SF 159 [ _73 ])
            (reg:SF 163 [ _77 ]))) "../src/spline.f":425 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 163 [ _77 ])
        (expr_list:REG_DEAD (reg:SF 159 [ _73 ])
            (nil))))
(insn 200 199 201 8 (set (reg:SF 165 [ _79 ])
        (reg:SF 164 [ _78 ])) "../src/spline.f":425 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 164 [ _78 ])
        (nil)))
(insn 201 200 202 8 (set (reg:SF 166 [ _80 ])
        (plus:SF (reg:SF 165 [ _79 ])
            (reg:SF 165 [ _79 ]))) "../src/spline.f":425 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 165 [ _79 ])
        (nil)))
(insn 202 201 203 8 (set (reg:SF 263)
        (minus:SF (reg:SF 156 [ _70 ])
            (reg:SF 166 [ _80 ]))) "../src/spline.f":425 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 166 [ _80 ])
        (expr_list:REG_DEAD (reg:SF 156 [ _70 ])
            (nil))))
(insn 203 202 204 8 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -60 [0xffffffffffffffc4])) [3 f3+0 S4 A32])
        (reg:SF 263)) "../src/spline.f":425 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 263)
        (nil)))
(insn 204 203 205 8 (set (reg:SF 264)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -44 [0xffffffffffffffd4])) [3 t+0 S4 A32])) "../src/spline.f":427 127 {*movsf_internal}
     (nil))
(insn 205 204 206 8 (set (reg:SF 167 [ _81 ])
        (mult:SF (reg:SF 264)
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -60 [0xffffffffffffffc4])) [3 f3+0 S4 A32]))) "../src/spline.f":427 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 264)
        (nil)))
(insn 206 205 207 8 (set (reg:SF 168 [ _82 ])
        (plus:SF (reg:SF 167 [ _81 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -56 [0xffffffffffffffc8])) [3 f2+0 S4 A32]))) "../src/spline.f":427 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 167 [ _81 ])
        (nil)))
(insn 207 206 208 8 (set (reg:SF 169 [ _83 ])
        (reg:SF 168 [ _82 ])) "../src/spline.f":427 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 168 [ _82 ])
        (nil)))
(insn 208 207 209 8 (set (reg:SF 170 [ _84 ])
        (mult:SF (reg:SF 169 [ _83 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -44 [0xffffffffffffffd4])) [3 t+0 S4 A32]))) "../src/spline.f":427 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 169 [ _83 ])
        (nil)))
(insn 209 208 210 8 (set (reg:SF 171 [ _85 ])
        (plus:SF (reg:SF 170 [ _84 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -52 [0xffffffffffffffcc])) [3 f1+0 S4 A32]))) "../src/spline.f":427 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 170 [ _84 ])
        (nil)))
(insn 210 209 211 8 (set (reg:SF 172 [ _86 ])
        (reg:SF 171 [ _85 ])) "../src/spline.f":427 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 171 [ _85 ])
        (nil)))
(insn 211 210 212 8 (set (reg:SF 173 [ _87 ])
        (mult:SF (reg:SF 172 [ _86 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -44 [0xffffffffffffffd4])) [3 t+0 S4 A32]))) "../src/spline.f":427 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 172 [ _86 ])
        (nil)))
(insn 212 211 213 8 (set (reg:SF 174 [ _88 ])
        (plus:SF (reg:SF 173 [ _87 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -48 [0xffffffffffffffd0])) [3 f0+0 S4 A32]))) "../src/spline.f":427 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 173 [ _87 ])
        (nil)))
(insn 213 212 214 8 (set (reg/f:DI 265)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -112 [0xffffffffffffff90])) [4 xx+0 S8 A64])) "../src/spline.f":427 81 {*movdi_internal}
     (nil))
(insn 214 213 215 8 (set (mem:SF (reg/f:DI 265) [3 *xx_143(D)+0 S4 A32])
        (reg:SF 174 [ _88 ])) "../src/spline.f":427 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 265)
        (expr_list:REG_DEAD (reg:SF 174 [ _88 ])
            (nil))))
(insn 215 214 216 8 (set (reg:SF 266)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [3 f2+0 S4 A32])) "../src/spline.f":428 127 {*movsf_internal}
     (nil))
(insn 216 215 217 8 (set (reg:SF 175 [ _89 ])
        (plus:SF (reg:SF 266)
            (reg:SF 266))) "../src/spline.f":428 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 266)
        (nil)))
(insn 217 216 218 8 (set (reg:SF 267)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -44 [0xffffffffffffffd4])) [3 t+0 S4 A32])) "../src/spline.f":428 127 {*movsf_internal}
     (nil))
(insn 218 217 219 8 (set (reg:SF 268)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC0") [flags 0x2]) [3  S4 A32])) "../src/spline.f":428 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 3.0e+0 [0x0.cp+2])
        (nil)))
(insn 219 218 220 8 (set (reg:SF 176 [ _90 ])
        (mult:SF (reg:SF 267)
            (reg:SF 268))) "../src/spline.f":428 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 268)
        (expr_list:REG_DEAD (reg:SF 267)
            (nil))))
(insn 220 219 221 8 (set (reg:SF 177 [ _91 ])
        (mult:SF (reg:SF 176 [ _90 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -60 [0xffffffffffffffc4])) [3 f3+0 S4 A32]))) "../src/spline.f":428 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 176 [ _90 ])
        (nil)))
(insn 221 220 222 8 (set (reg:SF 178 [ _92 ])
        (plus:SF (reg:SF 175 [ _89 ])
            (reg:SF 177 [ _91 ]))) "../src/spline.f":428 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 177 [ _91 ])
        (expr_list:REG_DEAD (reg:SF 175 [ _89 ])
            (nil))))
(insn 222 221 223 8 (set (reg:SF 179 [ _93 ])
        (reg:SF 178 [ _92 ])) "../src/spline.f":428 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 178 [ _92 ])
        (nil)))
(insn 223 222 224 8 (set (reg:SF 180 [ _94 ])
        (mult:SF (reg:SF 179 [ _93 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -44 [0xffffffffffffffd4])) [3 t+0 S4 A32]))) "../src/spline.f":428 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 179 [ _93 ])
        (nil)))
(insn 224 223 225 8 (set (reg:SF 181 [ _95 ])
        (plus:SF (reg:SF 180 [ _94 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -52 [0xffffffffffffffcc])) [3 f1+0 S4 A32]))) "../src/spline.f":428 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 180 [ _94 ])
        (nil)))
(insn 225 224 226 8 (set (reg/f:DI 269)
        (mem/f/c:DI (reg/f:DI 16 argp) [4 xxs+0 S8 A64])) "../src/spline.f":428 81 {*movdi_internal}
     (nil))
(insn 226 225 227 8 (set (mem:SF (reg/f:DI 269) [3 *xxs_145(D)+0 S4 A32])
        (reg:SF 181 [ _95 ])) "../src/spline.f":428 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 269)
        (expr_list:REG_DEAD (reg:SF 181 [ _95 ])
            (nil))))
(insn 227 226 228 8 (set (reg:SF 270)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [3 f2+0 S4 A32])) "../src/spline.f":429 127 {*movsf_internal}
     (nil))
(insn 228 227 229 8 (set (reg:SF 182 [ _96 ])
        (plus:SF (reg:SF 270)
            (reg:SF 270))) "../src/spline.f":429 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 270)
        (nil)))
(insn 229 228 230 8 (set (reg:SF 271)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -44 [0xffffffffffffffd4])) [3 t+0 S4 A32])) "../src/spline.f":429 127 {*movsf_internal}
     (nil))
(insn 230 229 231 8 (set (reg:SF 272)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC1") [flags 0x2]) [3  S4 A32])) "../src/spline.f":429 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 6.0e+0 [0x0.cp+3])
        (nil)))
(insn 231 230 232 8 (set (reg:SF 183 [ _97 ])
        (mult:SF (reg:SF 271)
            (reg:SF 272))) "../src/spline.f":429 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 272)
        (expr_list:REG_DEAD (reg:SF 271)
            (nil))))
(insn 232 231 233 8 (set (reg:SF 184 [ _98 ])
        (mult:SF (reg:SF 183 [ _97 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -60 [0xffffffffffffffc4])) [3 f3+0 S4 A32]))) "../src/spline.f":429 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 183 [ _97 ])
        (nil)))
(insn 233 232 234 8 (set (reg:SF 185 [ _99 ])
        (plus:SF (reg:SF 182 [ _96 ])
            (reg:SF 184 [ _98 ]))) "../src/spline.f":429 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 184 [ _98 ])
        (expr_list:REG_DEAD (reg:SF 182 [ _96 ])
            (nil))))
(insn 234 233 235 8 (set (reg/f:DI 273)
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 8 [0x8])) [4 xxss+0 S8 A64])) "../src/spline.f":429 81 {*movdi_internal}
     (nil))
(insn 235 234 236 8 (set (mem:SF (reg/f:DI 273) [3 *xxss_147(D)+0 S4 A32])
        (reg:SF 185 [ _99 ])) "../src/spline.f":429 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 273)
        (expr_list:REG_DEAD (reg:SF 185 [ _99 ])
            (nil))))
(insn 236 235 237 8 (set (reg/f:DI 274)
        (mem/f/c:DI (reg/f:DI 16 argp) [4 xxs+0 S8 A64])) "../src/spline.f":431 81 {*movdi_internal}
     (nil))
(insn 237 236 238 8 (set (reg:SF 186 [ _100 ])
        (mem:SF (reg/f:DI 274) [3 *xxs_145(D)+0 S4 A32])) "../src/spline.f":431 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 274)
        (nil)))
(insn 238 237 239 8 (set (reg:SF 187 [ _101 ])
        (div:SF (reg:SF 186 [ _100 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -40 [0xffffffffffffffd8])) [3 ds+0 S4 A32]))) "../src/spline.f":431 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 186 [ _100 ])
        (nil)))
(insn 239 238 240 8 (set (reg/f:DI 275)
        (mem/f/c:DI (reg/f:DI 16 argp) [4 xxs+0 S8 A64])) "../src/spline.f":431 81 {*movdi_internal}
     (nil))
(insn 240 239 241 8 (set (mem:SF (reg/f:DI 275) [3 *xxs_145(D)+0 S4 A32])
        (reg:SF 187 [ _101 ])) "../src/spline.f":431 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 275)
        (expr_list:REG_DEAD (reg:SF 187 [ _101 ])
            (nil))))
(insn 241 240 242 8 (set (reg:SF 205 [ _150 ])
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [3 ds+0 S4 A32])) "../src/spline.f":432 127 {*movsf_internal}
     (nil))
(insn 242 241 243 8 (set (reg:SF 206 [ _151 ])
        (mult:SF (reg:SF 205 [ _150 ])
            (reg:SF 205 [ _150 ]))) "../src/spline.f":432 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 205 [ _150 ])
        (nil)))
(insn 243 242 244 8 (set (reg/f:DI 276)
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 8 [0x8])) [4 xxss+0 S8 A64])) "../src/spline.f":432 81 {*movdi_internal}
     (nil))
(insn 244 243 245 8 (set (reg:SF 188 [ _102 ])
        (mem:SF (reg/f:DI 276) [3 *xxss_147(D)+0 S4 A32])) "../src/spline.f":432 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 276)
        (nil)))
(insn 245 244 246 8 (set (reg:SF 189 [ _103 ])
        (div:SF (reg:SF 188 [ _102 ])
            (reg:SF 206 [ _151 ]))) "../src/spline.f":432 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 206 [ _151 ])
        (expr_list:REG_DEAD (reg:SF 188 [ _102 ])
            (nil))))
(insn 246 245 247 8 (set (reg/f:DI 277)
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 8 [0x8])) [4 xxss+0 S8 A64])) "../src/spline.f":432 81 {*movdi_internal}
     (nil))
(insn 247 246 255 8 (set (mem:SF (reg/f:DI 277) [3 *xxss_147(D)+0 S4 A32])
        (reg:SF 189 [ _103 ])) "../src/spline.f":432 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 277)
        (expr_list:REG_DEAD (reg:SF 189 [ _103 ])
            (nil))))
(insn 255 247 0 8 (const_int 0 [0]) "../src/spline.f":434 682 {nop}
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function deval (deval_, funcdef_no=1, decl_uid=3551, cgraph_uid=1, symbol_order=1)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 10 n_edges 11 count 10 (    1)
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 9 8
;;
;; Loop 1
;;  header 3, latch 7
;;  depth 1, outer 0
;;  nodes: 3 7 6 5 4
;; 2 succs { 3 }
;; 3 succs { 9 4 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 3 }
;; 9 succs { 8 }
;; 8 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r241: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a10 (r241,l0) best SSE_REGS, allocno SSE_REGS
    r240: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a12 (r240,l0) best SSE_REGS, allocno SSE_REGS
    r239: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a13 (r239,l0) best SSE_REGS, allocno SSE_REGS
    r238: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a21 (r238,l0) best SSE_REGS, allocno SSE_REGS
    r237: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a22 (r237,l0) best SSE_REGS, allocno SSE_REGS
    r236: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a24 (r236,l0) best SSE_REGS, allocno SSE_REGS
    r235: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a25 (r235,l0) best SSE_REGS, allocno SSE_REGS
    r234: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a26 (r234,l0) best SSE_REGS, allocno SSE_REGS
    r233: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r233,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r232: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a33 (r232,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r231: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a34 (r231,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r230: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a37 (r230,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r229: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a38 (r229,l0) best SSE_REGS, allocno SSE_REGS
    r228: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a41 (r228,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r227: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a45 (r227,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r226: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a48 (r226,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r225: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a51 (r225,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r224: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a53 (r224,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r223: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a56 (r223,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r222: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a57 (r222,l0) best SSE_REGS, allocno SSE_REGS
    r221: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a60 (r221,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r220: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a64 (r220,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r219: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a67 (r219,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r218: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a70 (r218,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r217: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a72 (r217,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r216: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a76 (r216,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r215: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a77 (r215,l0) best SSE_REGS, allocno SSE_REGS
    r214: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a82 (r214,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r213: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a86 (r213,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r212: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a87 (r212,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r211: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a88 (r211,l0) best SSE_REGS, allocno SSE_REGS
    r210: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a91 (r210,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r209: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a95 (r209,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r208: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a96 (r208,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r207: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a99 (r207,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r206: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a100 (r206,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r205: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a101 (r205,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r204: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a104 (r204,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r203: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a107 (r203,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r202: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a108 (r202,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r201: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a109 (r201,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r200: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a110 (r200,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r199: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a112 (r199,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r198: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a113 (r198,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r197: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a114 (r197,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r196: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a116 (r196,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r195: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a117 (r195,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r194: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a118 (r194,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r193: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a122 (r193,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r192: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a124 (r192,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r191: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a126 (r191,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r190: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a130 (r190,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r189: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a132 (r189,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r188: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a134 (r188,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r187: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a138 (r187,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r186: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a140 (r186,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r185: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a142 (r185,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r184: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a0 (r184,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r183: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a1 (r183,l0) best SSE_REGS, allocno SSE_REGS
    r179: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a121 (r179,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r178: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a123 (r178,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r174: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a129 (r174,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r173: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a131 (r173,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r169: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a137 (r169,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r168: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a139 (r168,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r167: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a2 (r167,l0) best SSE_REGS, allocno SSE_REGS
    r166: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a3 (r166,l0) best SSE_REGS, allocno SSE_REGS
    r165: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a4 (r165,l0) best SSE_REGS, allocno SSE_REGS
    r164: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a5 (r164,l0) best SSE_REGS, allocno SSE_REGS
    r163: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a7 (r163,l0) best SSE_REGS, allocno SSE_REGS
    r162: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a8 (r162,l0) best SSE_REGS, allocno SSE_REGS
    r161: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a9 (r161,l0) best SSE_REGS, allocno SSE_REGS
    r160: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a11 (r160,l0) best SSE_REGS, allocno SSE_REGS
    r159: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a6 (r159,l0) best SSE_REGS, allocno SSE_REGS
    r158: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a14 (r158,l0) best SSE_REGS, allocno SSE_REGS
    r157: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a16 (r157,l0) best SSE_REGS, allocno SSE_REGS
    r156: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a17 (r156,l0) best SSE_REGS, allocno SSE_REGS
    r155: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a18 (r155,l0) best SSE_REGS, allocno SSE_REGS
    r154: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a20 (r154,l0) best SSE_REGS, allocno SSE_REGS
    r153: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a19 (r153,l0) best SSE_REGS, allocno SSE_REGS
    r152: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a23 (r152,l0) best SSE_REGS, allocno SSE_REGS
    r151: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a15 (r151,l0) best SSE_REGS, allocno SSE_REGS
    r150: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a27 (r150,l0) best SSE_REGS, allocno SSE_REGS
    r149: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r149,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r148: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a31 (r148,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r147: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r147,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r146: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a28 (r146,l0) best SSE_REGS, allocno SSE_REGS
    r145: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a35 (r145,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r144: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a36 (r144,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r143: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a39 (r143,l0) best SSE_REGS, allocno SSE_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a42 (r142,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a43 (r141,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a44 (r140,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r139: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a40 (r139,l0) best SSE_REGS, allocno SSE_REGS
    r138: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a46 (r138,l0) best SSE_REGS, allocno SSE_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a49 (r137,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a50 (r136,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r135: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a47 (r135,l0) best SSE_REGS, allocno SSE_REGS
    r134: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a52 (r134,l0) best SSE_REGS, allocno SSE_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a54 (r133,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r132: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a55 (r132,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r131: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a58 (r131,l0) best SSE_REGS, allocno SSE_REGS
    r130: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a61 (r130,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r129: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a62 (r129,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r128: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a63 (r128,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r127: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a59 (r127,l0) best SSE_REGS, allocno SSE_REGS
    r126: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a65 (r126,l0) best SSE_REGS, allocno SSE_REGS
    r125: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a68 (r125,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r124: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a69 (r124,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r123: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a66 (r123,l0) best SSE_REGS, allocno SSE_REGS
    r122: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a71 (r122,l0) best SSE_REGS, allocno SSE_REGS
    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a73 (r121,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r120: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a74 (r120,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a75 (r119,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r118: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a78 (r118,l0) best SSE_REGS, allocno SSE_REGS
    r117: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a79 (r117,l0) best SSE_REGS, allocno SSE_REGS
    r116: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a80 (r116,l0) best SSE_REGS, allocno SSE_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a83 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a84 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a85 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r112: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a81 (r112,l0) best SSE_REGS, allocno SSE_REGS
    r111: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a89 (r111,l0) best SSE_REGS, allocno SSE_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a92 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a93 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a94 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a90 (r107,l0) best SSE_REGS, allocno SSE_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a97 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a98 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a103 (r104,l0) best SSE_REGS, allocno SSE_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a105 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a106 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a102 (r101,l0) best SSE_REGS, allocno SSE_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a111 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a115 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a119 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a120 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a125 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a127 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a128 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a133 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a135 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a136 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a141 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r184,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 CLOBBERED_REGS:4 Q_REGS:4 NON_Q_REGS:4 TLS_GOTBASE_REGS:4 GENERAL_REGS:4 FP_TOP_REG:18 FP_SECOND_REG:18 FLOAT_REGS:18 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:16 FP_TOP_SSE_REGS:20 FP_SECOND_SSE_REGS:20 FLOAT_SSE_REGS:20 FLOAT_INT_REGS:18 INT_SSE_REGS:16 FLOAT_INT_SSE_REGS:20 ALL_REGS:20 MEM:2
  a1(r183,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 CLOBBERED_REGS:4 Q_REGS:4 NON_Q_REGS:4 TLS_GOTBASE_REGS:4 GENERAL_REGS:4 FP_TOP_REG:24 FP_SECOND_REG:24 FLOAT_REGS:24 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:22 FP_TOP_SSE_REGS:26 FP_SECOND_SSE_REGS:26 FLOAT_SSE_REGS:26 FLOAT_INT_REGS:24 INT_SSE_REGS:19 FLOAT_INT_SSE_REGS:26 ALL_REGS:26 MEM:7
  a2(r167,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a3(r166,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a4(r165,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a5(r164,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a6(r159,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a7(r163,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:16
  a8(r162,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 ALL_REGS:29 MEM:9
  a9(r161,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:9
  a10(r241,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a11(r160,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:16
  a12(r240,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a13(r239,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a14(r158,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a15(r151,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a16(r157,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 ALL_REGS:29 MEM:9
  a17(r156,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:9
  a18(r155,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a19(r153,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a20(r154,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:16
  a21(r238,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a22(r237,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a23(r152,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a24(r236,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a25(r235,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a26(r234,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a27(r150,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a28(r146,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a29(r233,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a30(r149,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a31(r148,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a32(r147,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a33(r232,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a34(r231,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a35(r145,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a36(r144,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a37(r230,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a38(r229,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a39(r143,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a40(r139,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a41(r228,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a42(r142,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a43(r141,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a44(r140,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a45(r227,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a46(r138,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a47(r135,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:16
  a48(r226,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a49(r137,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a50(r136,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a51(r225,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a52(r134,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a53(r224,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a54(r133,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a55(r132,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a56(r223,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a57(r222,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a58(r131,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a59(r127,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a60(r221,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a61(r130,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a62(r129,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a63(r128,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a64(r220,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a65(r126,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a66(r123,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:16
  a67(r219,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a68(r125,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a69(r124,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a70(r218,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a71(r122,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a72(r217,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a73(r121,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a74(r120,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a75(r119,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a76(r216,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a77(r215,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a78(r118,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 ALL_REGS:29 MEM:9
  a79(r117,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:9
  a80(r116,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a81(r112,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a82(r214,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a83(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a84(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a85(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a86(r213,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a87(r212,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a88(r211,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a89(r111,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a90(r107,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a91(r210,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a92(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a93(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a94(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a95(r209,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a96(r208,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a97(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a98(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a99(r207,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a100(r206,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a101(r205,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a102(r101,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a103(r104,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a104(r204,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a105(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a106(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a107(r203,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a108(r202,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a109(r201,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a110(r200,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a111(r100,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 CLOBBERED_REGS:2 Q_REGS:2 NON_Q_REGS:2 TLS_GOTBASE_REGS:2 GENERAL_REGS:2 SSE_FIRST_REG:26 NO_REX_SSE_REGS:26 SSE_REGS:26 MMX_REGS:41 INT_SSE_REGS:29 ALL_REGS:626 MEM:11
  a112(r199,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 CLOBBERED_REGS:2 Q_REGS:2 NON_Q_REGS:2 TLS_GOTBASE_REGS:2 GENERAL_REGS:2 SSE_FIRST_REG:18 NO_REX_SSE_REGS:18 SSE_REGS:18 MMX_REGS:28 INT_SSE_REGS:20 ALL_REGS:418 MEM:8
  a113(r198,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a114(r197,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a115(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a116(r196,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a117(r195,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a118(r194,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a119(r97,l0) costs: AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:2
  a120(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a121(r179,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a122(r193,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a123(r178,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:38 INT_SSE_REGS:27 ALL_REGS:520 MEM:11
  a124(r192,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:8
  a125(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a126(r191,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a127(r93,l0) costs: AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:2
  a128(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a129(r174,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a130(r190,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a131(r173,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:38 INT_SSE_REGS:27 ALL_REGS:520 MEM:11
  a132(r189,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:8
  a133(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a134(r188,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a135(r89,l0) costs: AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:2
  a136(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a137(r169,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a138(r187,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a139(r168,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:38 INT_SSE_REGS:27 ALL_REGS:520 MEM:11
  a140(r186,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:8
  a141(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a142(r185,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8

   Insn 212(l0): point = 0
   Insn 211(l0): point = 2
   Insn 207(l0): point = 4
   Insn 204(l0): point = 6
   Insn 203(l0): point = 8
   Insn 202(l0): point = 10
   Insn 201(l0): point = 12
   Insn 200(l0): point = 14
   Insn 199(l0): point = 16
   Insn 198(l0): point = 18
   Insn 197(l0): point = 20
   Insn 196(l0): point = 22
   Insn 195(l0): point = 24
   Insn 194(l0): point = 26
   Insn 193(l0): point = 28
   Insn 192(l0): point = 30
   Insn 191(l0): point = 32
   Insn 190(l0): point = 34
   Insn 189(l0): point = 36
   Insn 188(l0): point = 38
   Insn 187(l0): point = 40
   Insn 186(l0): point = 42
   Insn 185(l0): point = 44
   Insn 184(l0): point = 46
   Insn 183(l0): point = 48
   Insn 182(l0): point = 50
   Insn 181(l0): point = 52
   Insn 180(l0): point = 54
   Insn 179(l0): point = 56
   Insn 178(l0): point = 58
   Insn 177(l0): point = 60
   Insn 176(l0): point = 62
   Insn 175(l0): point = 64
   Insn 174(l0): point = 66
   Insn 173(l0): point = 68
   Insn 172(l0): point = 70
   Insn 171(l0): point = 72
   Insn 170(l0): point = 74
   Insn 169(l0): point = 76
   Insn 168(l0): point = 78
   Insn 167(l0): point = 80
   Insn 166(l0): point = 82
   Insn 165(l0): point = 84
   Insn 164(l0): point = 86
   Insn 163(l0): point = 88
   Insn 162(l0): point = 90
   Insn 161(l0): point = 92
   Insn 160(l0): point = 94
   Insn 159(l0): point = 96
   Insn 158(l0): point = 98
   Insn 157(l0): point = 100
   Insn 156(l0): point = 102
   Insn 155(l0): point = 104
   Insn 154(l0): point = 106
   Insn 153(l0): point = 108
   Insn 152(l0): point = 110
   Insn 151(l0): point = 112
   Insn 150(l0): point = 114
   Insn 149(l0): point = 116
   Insn 148(l0): point = 118
   Insn 147(l0): point = 120
   Insn 146(l0): point = 122
   Insn 145(l0): point = 124
   Insn 144(l0): point = 126
   Insn 143(l0): point = 128
   Insn 142(l0): point = 130
   Insn 141(l0): point = 132
   Insn 140(l0): point = 134
   Insn 139(l0): point = 136
   Insn 138(l0): point = 138
   Insn 137(l0): point = 140
   Insn 136(l0): point = 142
   Insn 135(l0): point = 144
   Insn 134(l0): point = 146
   Insn 133(l0): point = 148
   Insn 132(l0): point = 150
   Insn 131(l0): point = 152
   Insn 130(l0): point = 154
   Insn 129(l0): point = 156
   Insn 128(l0): point = 158
   Insn 127(l0): point = 160
   Insn 126(l0): point = 162
   Insn 125(l0): point = 164
   Insn 124(l0): point = 166
   Insn 123(l0): point = 168
   Insn 122(l0): point = 170
   Insn 121(l0): point = 172
   Insn 120(l0): point = 174
   Insn 119(l0): point = 176
   Insn 118(l0): point = 178
   Insn 117(l0): point = 180
   Insn 116(l0): point = 182
   Insn 115(l0): point = 184
   Insn 114(l0): point = 186
   Insn 113(l0): point = 188
   Insn 112(l0): point = 190
   Insn 111(l0): point = 192
   Insn 110(l0): point = 194
   Insn 109(l0): point = 196
   Insn 108(l0): point = 198
   Insn 107(l0): point = 200
   Insn 106(l0): point = 202
   Insn 105(l0): point = 204
   Insn 104(l0): point = 206
   Insn 103(l0): point = 208
   Insn 102(l0): point = 210
   Insn 101(l0): point = 212
   Insn 100(l0): point = 214
   Insn 224(l0): point = 217
   Insn 63(l0): point = 220
   Insn 62(l0): point = 222
   Insn 61(l0): point = 224
   Insn 60(l0): point = 226
   Insn 220(l0): point = 229
   Insn 92(l0): point = 232
   Insn 91(l0): point = 234
   Insn 218(l0): point = 237
   Insn 86(l0): point = 239
   Insn 85(l0): point = 241
   Insn 80(l0): point = 244
   Insn 79(l0): point = 246
   Insn 78(l0): point = 248
   Insn 77(l0): point = 250
   Insn 76(l0): point = 252
   Insn 75(l0): point = 254
   Insn 74(l0): point = 256
   Insn 73(l0): point = 258
   Insn 72(l0): point = 260
   Insn 71(l0): point = 262
   Insn 70(l0): point = 264
   Insn 69(l0): point = 266
   Insn 68(l0): point = 268
   Insn 67(l0): point = 270
   Insn 66(l0): point = 272
   Insn 65(l0): point = 274
   Insn 58(l0): point = 277
   Insn 57(l0): point = 279
   Insn 56(l0): point = 281
   Insn 55(l0): point = 283
   Insn 51(l0): point = 285
   Insn 50(l0): point = 287
   Insn 49(l0): point = 289
   Insn 47(l0): point = 291
   Insn 45(l0): point = 293
   Insn 46(l0): point = 295
   Insn 44(l0): point = 297
   Insn 43(l0): point = 299
   Insn 42(l0): point = 301
   Insn 41(l0): point = 303
   Insn 40(l0): point = 305
   Insn 36(l0): point = 307
   Insn 35(l0): point = 309
   Insn 34(l0): point = 311
   Insn 32(l0): point = 313
   Insn 30(l0): point = 315
   Insn 31(l0): point = 317
   Insn 29(l0): point = 319
   Insn 28(l0): point = 321
   Insn 27(l0): point = 323
   Insn 26(l0): point = 325
   Insn 25(l0): point = 327
   Insn 21(l0): point = 329
   Insn 20(l0): point = 331
   Insn 19(l0): point = 333
   Insn 17(l0): point = 335
   Insn 15(l0): point = 337
   Insn 16(l0): point = 339
   Insn 14(l0): point = 341
   Insn 13(l0): point = 343
   Insn 12(l0): point = 345
   Insn 11(l0): point = 347
   Insn 10(l0): point = 349
   Insn 6(l0): point = 351
   Insn 5(l0): point = 353
   Insn 4(l0): point = 355
   Insn 3(l0): point = 357
   Insn 2(l0): point = 359
 a0(r184): [3..4]
 a1(r183): [5..6]
 a2(r167): [9..10]
 a3(r166): [11..12]
 a4(r165): [15..16]
 a5(r164): [17..18]
 a6(r159): [17..34]
 a7(r163): [19..20]
 a8(r162): [21..22]
 a9(r161): [23..24]
 a10(r241): [25..26]
 a11(r160): [25..28]
 a12(r240): [29..30]
 a13(r239): [29..32]
 a14(r158): [35..36]
 a15(r151): [35..60]
 a16(r157): [37..38]
 a17(r156): [39..40]
 a18(r155): [41..42]
 a19(r153): [41..50]
 a20(r154): [43..44]
 a21(r238): [45..46]
 a22(r237): [45..48]
 a23(r152): [51..54]
 a24(r236): [51..52]
 a25(r235): [55..56]
 a26(r234): [55..58]
 a27(r150): [61..62]
 a28(r146): [61..74]
 a29(r233): [63..64]
 a30(r149): [63..66]
 a31(r148): [67..68]
 a32(r147): [69..70]
 a33(r232): [71..72]
 a34(r231): [75..76]
 a35(r145): [75..78]
 a36(r144): [79..80]
 a37(r230): [81..82]
 a38(r229): [85..86]
 a39(r143): [87..88]
 a40(r139): [87..100]
 a41(r228): [89..90]
 a42(r142): [89..92]
 a43(r141): [93..94]
 a44(r140): [95..96]
 a45(r227): [97..98]
 a46(r138): [101..102]
 a47(r135): [101..112]
 a48(r226): [103..104]
 a49(r137): [103..106]
 a50(r136): [107..108]
 a51(r225): [109..110]
 a52(r134): [113..114]
 a53(r224): [115..116]
 a54(r133): [115..118]
 a55(r132): [119..120]
 a56(r223): [121..122]
 a57(r222): [125..126]
 a58(r131): [127..128]
 a59(r127): [127..140]
 a60(r221): [129..130]
 a61(r130): [129..132]
 a62(r129): [133..134]
 a63(r128): [135..136]
 a64(r220): [137..138]
 a65(r126): [141..142]
 a66(r123): [141..152]
 a67(r219): [143..144]
 a68(r125): [143..146]
 a69(r124): [147..148]
 a70(r218): [149..150]
 a71(r122): [153..154]
 a72(r217): [155..156]
 a73(r121): [155..158]
 a74(r120): [159..160]
 a75(r119): [161..162]
 a76(r216): [163..164]
 a77(r215): [167..168]
 a78(r118): [169..170]
 a79(r117): [171..172]
 a80(r116): [173..174]
 a81(r112): [173..186]
 a82(r214): [175..176]
 a83(r115): [175..178]
 a84(r114): [179..180]
 a85(r113): [181..182]
 a86(r213): [183..184]
 a87(r212): [187..188]
 a88(r211): [191..192]
 a89(r111): [193..194]
 a90(r107): [193..206]
 a91(r210): [195..196]
 a92(r110): [195..198]
 a93(r109): [199..200]
 a94(r108): [201..202]
 a95(r209): [203..204]
 a96(r208): [207..208]
 a97(r106): [207..210]
 a98(r105): [211..212]
 a99(r207): [213..214]
 a100(r206): [233..234]
 a101(r205): [240..241]
 a102(r101): [247..258]
 a103(r104): [247..248]
 a104(r204): [249..250]
 a105(r103): [249..252]
 a106(r102): [253..254]
 a107(r203): [255..256]
 a108(r202): [259..260]
 a109(r201): [263..264]
 a110(r200): [265..266]
 a111(r100): [267..270]
 a112(r199): [267..268]
 a113(r198): [271..272]
 a114(r197): [271..274]
 a115(r99): [223..224]
 a116(r196): [225..226]
 a117(r195): [278..279]
 a118(r194): [280..281]
 a119(r97 [0]): [286..361]
 a119(r97 [1]): [285..361]
 a120(r96): [288..289]
 a121(r179): [290..291]
 a122(r193): [292..295]
 a123(r178): [292..297]
 a124(r192): [300..301]
 a125(r95): [302..303]
 a126(r191): [304..305]
 a127(r93 [0]): [308..361]
 a127(r93 [1]): [307..361]
 a128(r92): [310..311]
 a129(r174): [312..313]
 a130(r190): [314..317]
 a131(r173): [314..319]
 a132(r189): [322..323]
 a133(r91): [324..325]
 a134(r188): [326..327]
 a135(r89 [0]): [330..361]
 a135(r89 [1]): [329..361]
 a136(r88): [332..333]
 a137(r169): [334..335]
 a138(r187): [336..339]
 a139(r168): [336..341]
 a140(r186): [344..345]
 a141(r87): [346..347]
 a142(r185): [348..349]
Compressing live ranges: from 362 to 214 - 59%
Ranges after the compression:
 a0(r184): [0..1]
 a1(r183): [2..3]
 a2(r167): [4..5]
 a3(r166): [6..7]
 a4(r165): [8..9]
 a5(r164): [10..11]
 a6(r159): [10..21]
 a7(r163): [12..13]
 a8(r162): [14..15]
 a9(r161): [16..17]
 a10(r241): [18..19]
 a11(r160): [18..19]
 a12(r240): [20..21]
 a13(r239): [20..21]
 a14(r158): [22..23]
 a15(r151): [22..37]
 a16(r157): [24..25]
 a17(r156): [26..27]
 a18(r155): [28..29]
 a19(r153): [28..33]
 a20(r154): [30..31]
 a21(r238): [32..33]
 a22(r237): [32..33]
 a23(r152): [34..35]
 a24(r236): [34..35]
 a25(r235): [36..37]
 a26(r234): [36..37]
 a27(r150): [38..39]
 a28(r146): [38..47]
 a29(r233): [40..41]
 a30(r149): [40..41]
 a31(r148): [42..43]
 a32(r147): [44..45]
 a33(r232): [46..47]
 a34(r231): [48..49]
 a35(r145): [48..49]
 a36(r144): [50..51]
 a37(r230): [52..53]
 a38(r229): [54..55]
 a39(r143): [56..57]
 a40(r139): [56..65]
 a41(r228): [58..59]
 a42(r142): [58..59]
 a43(r141): [60..61]
 a44(r140): [62..63]
 a45(r227): [64..65]
 a46(r138): [66..67]
 a47(r135): [66..73]
 a48(r226): [68..69]
 a49(r137): [68..69]
 a50(r136): [70..71]
 a51(r225): [72..73]
 a52(r134): [74..75]
 a53(r224): [76..77]
 a54(r133): [76..77]
 a55(r132): [78..79]
 a56(r223): [80..81]
 a57(r222): [82..83]
 a58(r131): [84..85]
 a59(r127): [84..93]
 a60(r221): [86..87]
 a61(r130): [86..87]
 a62(r129): [88..89]
 a63(r128): [90..91]
 a64(r220): [92..93]
 a65(r126): [94..95]
 a66(r123): [94..101]
 a67(r219): [96..97]
 a68(r125): [96..97]
 a69(r124): [98..99]
 a70(r218): [100..101]
 a71(r122): [102..103]
 a72(r217): [104..105]
 a73(r121): [104..105]
 a74(r120): [106..107]
 a75(r119): [108..109]
 a76(r216): [110..111]
 a77(r215): [112..113]
 a78(r118): [114..115]
 a79(r117): [116..117]
 a80(r116): [118..119]
 a81(r112): [118..127]
 a82(r214): [120..121]
 a83(r115): [120..121]
 a84(r114): [122..123]
 a85(r113): [124..125]
 a86(r213): [126..127]
 a87(r212): [128..129]
 a88(r211): [130..131]
 a89(r111): [132..133]
 a90(r107): [132..141]
 a91(r210): [134..135]
 a92(r110): [134..135]
 a93(r109): [136..137]
 a94(r108): [138..139]
 a95(r209): [140..141]
 a96(r208): [142..143]
 a97(r106): [142..143]
 a98(r105): [144..145]
 a99(r207): [146..147]
 a100(r206): [152..153]
 a101(r205): [154..155]
 a102(r101): [156..163]
 a103(r104): [156..157]
 a104(r204): [158..159]
 a105(r103): [158..159]
 a106(r102): [160..161]
 a107(r203): [162..163]
 a108(r202): [164..165]
 a109(r201): [166..167]
 a110(r200): [168..169]
 a111(r100): [170..171]
 a112(r199): [170..171]
 a113(r198): [172..173]
 a114(r197): [172..173]
 a115(r99): [148..149]
 a116(r196): [150..151]
 a117(r195): [174..175]
 a118(r194): [176..177]
 a119(r97 [0]): [178..213]
 a119(r97 [1]): [178..213]
 a120(r96): [178..179]
 a121(r179): [180..181]
 a122(r193): [182..183]
 a123(r178): [182..183]
 a124(r192): [184..185]
 a125(r95): [186..187]
 a126(r191): [188..189]
 a127(r93 [0]): [190..213]
 a127(r93 [1]): [190..213]
 a128(r92): [190..191]
 a129(r174): [192..193]
 a130(r190): [194..195]
 a131(r173): [194..195]
 a132(r189): [196..197]
 a133(r91): [198..199]
 a134(r188): [200..201]
 a135(r89 [0]): [202..213]
 a135(r89 [1]): [202..213]
 a136(r88): [202..203]
 a137(r169): [204..205]
 a138(r187): [206..207]
 a139(r168): [206..207]
 a140(r186): [208..209]
 a141(r87): [210..211]
 a142(r185): [212..213]
  regions=1, blocks=10, points=214
    allocnos=143 (big 3), copies=0, conflicts=0, ranges=146
Disposition:
  141:r87  l0     0  136:r88  l0     0  135:r89  l0    42  133:r91  l0     0
  128:r92  l0     0  127:r93  l0    40  125:r95  l0     0  120:r96  l0     0
  119:r97  l0    38  115:r99  l0     0  111:r100 l0     0  102:r101 l0    22
  106:r102 l0     0  105:r103 l0     1  103:r104 l0    21   98:r105 l0     0
   97:r106 l0     1   90:r107 l0    21   94:r108 l0     0   93:r109 l0     0
   92:r110 l0     1   89:r111 l0    22   81:r112 l0    21   85:r113 l0     0
   84:r114 l0     0   83:r115 l0     1   80:r116 l0    22   79:r117 l0    21
   78:r118 l0    21   75:r119 l0     0   74:r120 l0     0   73:r121 l0     1
   71:r122 l0    21   66:r123 l0    21   69:r124 l0     0   68:r125 l0     1
   65:r126 l0    22   59:r127 l0    21   63:r128 l0     0   62:r129 l0     0
   61:r130 l0     1   58:r131 l0    22   55:r132 l0     0   54:r133 l0     1
   52:r134 l0    21   47:r135 l0    21   50:r136 l0     0   49:r137 l0     1
   46:r138 l0    22   40:r139 l0    21   44:r140 l0     0   43:r141 l0     0
   42:r142 l0     1   39:r143 l0    22   36:r144 l0     0   35:r145 l0     1
   28:r146 l0    21   32:r147 l0     0   31:r148 l0     0   30:r149 l0     1
   27:r150 l0    22   15:r151 l0    22   23:r152 l0    21   19:r153 l0    23
   20:r154 l0    21   18:r155 l0    21   17:r156 l0    21   16:r157 l0    21
   14:r158 l0    21    6:r159 l0    22   11:r160 l0    21    9:r161 l0    21
    8:r162 l0    21    7:r163 l0    21    5:r164 l0    21    4:r165 l0    21
    3:r166 l0    21    2:r167 l0    21  139:r168 l0     0  137:r169 l0     0
  131:r173 l0     0  129:r174 l0     0  123:r178 l0     0  121:r179 l0     0
    1:r183 l0    21    0:r184 l0    21  142:r185 l0     0  140:r186 l0     0
  138:r187 l0     1  134:r188 l0     0  132:r189 l0     0  130:r190 l0     1
  126:r191 l0     0  124:r192 l0     0  122:r193 l0     1  118:r194 l0     0
  117:r195 l0     0  116:r196 l0     0  114:r197 l0     1  113:r198 l0     0
  112:r199 l0     1  110:r200 l0     0  109:r201 l0     0  108:r202 l0     0
  107:r203 l0     0  104:r204 l0     0  101:r205 l0     0  100:r206 l0     0
   99:r207 l0     0   96:r208 l0     0   95:r209 l0     0   91:r210 l0     0
   88:r211 l0    21   87:r212 l0     0   86:r213 l0     0   82:r214 l0     0
   77:r215 l0    21   76:r216 l0     0   72:r217 l0     0   70:r218 l0     0
   67:r219 l0     0   64:r220 l0     0   60:r221 l0     0   57:r222 l0    21
   56:r223 l0     0   53:r224 l0     0   51:r225 l0     0   48:r226 l0     0
   45:r227 l0     0   41:r228 l0     0   38:r229 l0    21   37:r230 l0     0
   34:r231 l0     0   33:r232 l0     0   29:r233 l0     0   26:r234 l0    23
   25:r235 l0    21   24:r236 l0    23   22:r237 l0    24   21:r238 l0    21
   13:r239 l0    23   12:r240 l0    21   10:r241 l0    23
+++Costs: overall 3, reg 3, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


deval

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame] 21 [xmm0]
;;  regs ever live 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 17 [flags] 21 [xmm0] 37 [r8]
;;  ref usage 	r0={1d} r1={1d,1u} r2={1d,1u} r4={1d,1u} r5={1d,1u} r6={1d,9u} r7={1d,9u} r16={1d,8u} r17={28d,5u} r20={1d,80u,10e} r21={2d,2u} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d,1u} r38={1d} r87={1d,1u} r88={1d,1u} r89={2d,2u} r91={1d,1u} r92={1d,1u} r93={2d,2u} r95={1d,1u} r96={1d,1u} r97={2d,2u} r99={1d,1u} r100={1d,2u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,1u} r127={1d,1u} r128={1d,1u} r129={1d,1u} r130={1d,1u} r131={1d,1u} r132={1d,1u} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d,1u} r165={1d,1u} r166={1d,1u} r167={1d,1u} r168={1d,2u} r169={1d,1u} r173={1d,2u} r174={1d,1u} r178={1d,2u} r179={1d,1u} r183={1d,1u} r184={1d,1u} r185={1d,1u} r186={1d,1u} r187={1d,1u} r188={1d,1u} r189={1d,1u} r190={1d,1u} r191={1d,1u} r192={1d,1u} r193={1d,1u} r194={1d,1u} r195={1d,1u} r196={1d,1u} r197={1d,1u} r198={1d,1u} r199={1d,1u} r200={1d,1u} r201={1d,1u} r202={1d,1u} r203={1d,1u} r204={1d,1u} r205={1d,1u} r206={1d,1u} r207={1d,1u} r208={1d,1u} r209={1d,1u} r210={1d,1u} r211={1d,1u} r212={1d,1u} r213={1d,1u} r214={1d,1u} r215={1d,1u} r216={1d,1u} r217={1d,1u} r218={1d,1u} r219={1d,1u} r220={1d,1u} r221={1d,1u} r222={1d,1u} r223={1d,1u} r224={1d,1u} r225={1d,1u} r226={1d,1u} r227={1d,1u} r228={1d,1u} r229={1d,1u} r230={1d,1u} r231={1d,1u} r232={1d,1u} r233={1d,1u} r234={1d,1u} r235={1d,1u} r236={1d,1u} r237={1d,1u} r238={1d,1u} r239={1d,1u} r240={1d,1u} r241={1d,1u} 
;;    total ref usage 472{194d,268u,10e} in 177{177 regular + 0 call} insns.
(note 1 0 8 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 89 93 97
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 89 93 97
;; lr  def 	 17 [flags] 87 88 91 92 95 96 168 169 173 174 178 179 185 186 187 188 189 190 191 192 193 194 195
(note 8 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 8 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [4 ss+0 S8 A64])
        (reg:DI 5 di [ ss ])) "../src/spline.f":341 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ ss ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [5 x+0 S8 A64])
        (reg:DI 4 si [ x ])) "../src/spline.f":341 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ x ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -88 [0xffffffffffffffa8])) [5 xs+0 S8 A64])
        (reg:DI 1 dx [ xs ])) "../src/spline.f":341 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ xs ])
        (nil)))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [5 s+0 S8 A64])
        (reg:DI 2 cx [ s ])) "../src/spline.f":341 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [ s ])
        (nil)))
(insn 6 5 7 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -104 [0xffffffffffffff98])) [6 n+0 S8 A64])
        (reg:DI 37 r8 [ n ])) "../src/spline.f":341 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 37 r8 [ n ])
        (nil)))
(note 7 6 10 2 NOTE_INSN_FUNCTION_BEG)
(insn 10 7 11 2 (set (reg/f:DI 185)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -104 [0xffffffffffffff98])) [6 n+0 S8 A64])) "../src/spline.f":341 81 {*movdi_internal}
     (nil))
(insn 11 10 12 2 (set (reg:SI 87 [ _1 ])
        (mem:SI (reg/f:DI 185) [1 *n_87(D)+0 S4 A32])) "../src/spline.f":341 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 185)
        (nil)))
(insn 12 11 13 2 (set (reg:DI 186)
        (sign_extend:DI (reg:SI 87 [ _1 ]))) "../src/spline.f":341 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 87 [ _1 ])
        (nil)))
(insn 13 12 14 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 ubound.6+0 S8 A64])
        (reg:DI 186)) "../src/spline.f":341 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 186)
        (nil)))
(insn 14 13 16 2 (set (reg:DI 168 [ size.7_89 ])
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 ubound.6+0 S8 A64])) "../src/spline.f":341 81 {*movdi_internal}
     (nil))
(insn 16 14 15 2 (set (reg:DI 187)
        (const_int 0 [0])) "../src/spline.f":341 81 {*movdi_internal}
     (nil))
(insn 15 16 17 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 168 [ size.7_89 ])
            (const_int 0 [0]))) "../src/spline.f":341 4 {*cmpdi_ccno_1}
     (nil))
(insn 17 15 19 2 (set (reg:DI 169 [ size.7_90 ])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 168 [ size.7_89 ])
            (reg:DI 187))) "../src/spline.f":341 967 {*movdicc_noc}
     (expr_list:REG_DEAD (reg:DI 187)
        (expr_list:REG_DEAD (reg:DI 168 [ size.7_89 ])
            (expr_list:REG_DEAD (reg:CCGOC 17 flags)
                (nil)))))
(insn 19 17 20 2 (set (reg:DI 88 [ size.150_2 ])
        (reg:DI 169 [ size.7_90 ])) "../src/spline.f":341 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 169 [ size.7_90 ])
        (nil)))
(insn 20 19 21 2 (set (subreg:DI (reg:TI 89 [ _3 ]) 0)
        (reg:DI 88 [ size.150_2 ])) "../src/spline.f":341 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88 [ size.150_2 ])
        (nil)))
(insn 21 20 25 2 (set (subreg:DI (reg:TI 89 [ _3 ]) 8)
        (const_int 0 [0])) "../src/spline.f":341 81 {*movdi_internal}
     (expr_list:REG_UNUSED (reg:TI 89 [ _3 ])
        (nil)))
(insn 25 21 26 2 (set (reg/f:DI 188)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -104 [0xffffffffffffff98])) [6 n+0 S8 A64])) "../src/spline.f":341 81 {*movdi_internal}
     (nil))
(insn 26 25 27 2 (set (reg:SI 91 [ _5 ])
        (mem:SI (reg/f:DI 188) [1 *n_87(D)+0 S4 A32])) "../src/spline.f":341 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 188)
        (nil)))
(insn 27 26 28 2 (set (reg:DI 189)
        (sign_extend:DI (reg:SI 91 [ _5 ]))) "../src/spline.f":341 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 91 [ _5 ])
        (nil)))
(insn 28 27 29 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [2 ubound.10+0 S8 A64])
        (reg:DI 189)) "../src/spline.f":341 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 189)
        (nil)))
(insn 29 28 31 2 (set (reg:DI 173 [ size.11_95 ])
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [2 ubound.10+0 S8 A64])) "../src/spline.f":341 81 {*movdi_internal}
     (nil))
(insn 31 29 30 2 (set (reg:DI 190)
        (const_int 0 [0])) "../src/spline.f":341 81 {*movdi_internal}
     (nil))
(insn 30 31 32 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 173 [ size.11_95 ])
            (const_int 0 [0]))) "../src/spline.f":341 4 {*cmpdi_ccno_1}
     (nil))
(insn 32 30 34 2 (set (reg:DI 174 [ size.11_96 ])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 173 [ size.11_95 ])
            (reg:DI 190))) "../src/spline.f":341 967 {*movdicc_noc}
     (expr_list:REG_DEAD (reg:DI 190)
        (expr_list:REG_DEAD (reg:DI 173 [ size.11_95 ])
            (expr_list:REG_DEAD (reg:CCGOC 17 flags)
                (nil)))))
(insn 34 32 35 2 (set (reg:DI 92 [ size.152_6 ])
        (reg:DI 174 [ size.11_96 ])) "../src/spline.f":341 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 174 [ size.11_96 ])
        (nil)))
(insn 35 34 36 2 (set (subreg:DI (reg:TI 93 [ _7 ]) 0)
        (reg:DI 92 [ size.152_6 ])) "../src/spline.f":341 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 92 [ size.152_6 ])
        (nil)))
(insn 36 35 40 2 (set (subreg:DI (reg:TI 93 [ _7 ]) 8)
        (const_int 0 [0])) "../src/spline.f":341 81 {*movdi_internal}
     (expr_list:REG_UNUSED (reg:TI 93 [ _7 ])
        (nil)))
(insn 40 36 41 2 (set (reg/f:DI 191)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -104 [0xffffffffffffff98])) [6 n+0 S8 A64])) "../src/spline.f":341 81 {*movdi_internal}
     (nil))
(insn 41 40 42 2 (set (reg:SI 95 [ _9 ])
        (mem:SI (reg/f:DI 191) [1 *n_87(D)+0 S4 A32])) "../src/spline.f":341 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 191)
        (nil)))
(insn 42 41 43 2 (set (reg:DI 192)
        (sign_extend:DI (reg:SI 95 [ _9 ]))) "../src/spline.f":341 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 95 [ _9 ])
        (nil)))
(insn 43 42 44 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [2 ubound.8+0 S8 A64])
        (reg:DI 192)) "../src/spline.f":341 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 192)
        (nil)))
(insn 44 43 46 2 (set (reg:DI 178 [ size.9_101 ])
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [2 ubound.8+0 S8 A64])) "../src/spline.f":341 81 {*movdi_internal}
     (nil))
(insn 46 44 45 2 (set (reg:DI 193)
        (const_int 0 [0])) "../src/spline.f":341 81 {*movdi_internal}
     (nil))
(insn 45 46 47 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 178 [ size.9_101 ])
            (const_int 0 [0]))) "../src/spline.f":341 4 {*cmpdi_ccno_1}
     (nil))
(insn 47 45 49 2 (set (reg:DI 179 [ size.9_102 ])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 178 [ size.9_101 ])
            (reg:DI 193))) "../src/spline.f":341 967 {*movdicc_noc}
     (expr_list:REG_DEAD (reg:DI 193)
        (expr_list:REG_DEAD (reg:DI 178 [ size.9_101 ])
            (expr_list:REG_DEAD (reg:CCGOC 17 flags)
                (nil)))))
(insn 49 47 50 2 (set (reg:DI 96 [ size.154_10 ])
        (reg:DI 179 [ size.9_102 ])) "../src/spline.f":341 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 179 [ size.9_102 ])
        (nil)))
(insn 50 49 51 2 (set (subreg:DI (reg:TI 97 [ _11 ]) 0)
        (reg:DI 96 [ size.154_10 ])) "../src/spline.f":341 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 96 [ size.154_10 ])
        (nil)))
(insn 51 50 55 2 (set (subreg:DI (reg:TI 97 [ _11 ]) 8)
        (const_int 0 [0])) "../src/spline.f":341 81 {*movdi_internal}
     (expr_list:REG_UNUSED (reg:TI 97 [ _11 ])
        (nil)))
(insn 55 51 56 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 ilow+0 S4 A32])
        (const_int 1 [0x1])) "../src/spline.f":347 82 {*movsi_internal}
     (nil))
(insn 56 55 57 2 (set (reg/f:DI 194)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -104 [0xffffffffffffff98])) [6 n+0 S8 A64])) "../src/spline.f":348 81 {*movdi_internal}
     (nil))
(insn 57 56 58 2 (set (reg:SI 195)
        (mem:SI (reg/f:DI 194) [1 *n_87(D)+0 S4 A32])) "../src/spline.f":348 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 194)
        (nil)))
(insn 58 57 95 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
        (reg:SI 195)) "../src/spline.f":348 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 195)
        (nil)))
;;  succ:       3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 (FALLTHRU)
;;              7 [100.0%] 
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 99 196
(code_label 95 58 59 3 16 (nil) [1 uses])
(note 59 95 60 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 60 59 61 3 (set (reg:SI 196)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":350 82 {*movsi_internal}
     (nil))
(insn 61 60 62 3 (parallel [
            (set (reg:SI 99 [ _13 ])
                (minus:SI (reg:SI 196)
                    (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [1 ilow+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":350 273 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 196)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [1 ilow+0 S4 A32]))
                (nil)))))
(insn 62 61 63 3 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 99 [ _13 ])
            (const_int 1 [0x1]))) "../src/spline.f":350 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 99 [ _13 ])
        (nil)))
(jump_insn 63 62 64 3 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 223)
            (pc))) "../src/spline.f":350 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 223)
;;  succ:       9
;;              4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 100 101 102 103 104 197 198 199 200 201 202 203 204
(note 64 63 65 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 65 64 66 4 (set (reg:SI 197)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":352 82 {*movsi_internal}
     (nil))
(insn 66 65 67 4 (set (reg:SI 198)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 ilow+0 S4 A32])) "../src/spline.f":352 82 {*movsi_internal}
     (nil))
(insn 67 66 68 4 (parallel [
            (set (reg:SI 100 [ _14 ])
                (plus:SI (reg:SI 197)
                    (reg:SI 198)))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":352 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 198)
        (expr_list:REG_DEAD (reg:SI 197)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                                (const_int -8 [0xfffffffffffffff8])) [1 ilow+0 S4 A32]))
                    (nil))))))
(insn 68 67 69 4 (parallel [
            (set (reg:SI 199)
                (lshiftrt:SI (reg:SI 100 [ _14 ])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":352 544 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 69 68 70 4 (parallel [
            (set (reg:SI 200)
                (plus:SI (reg:SI 199)
                    (reg:SI 100 [ _14 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":352 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 199)
        (expr_list:REG_DEAD (reg:SI 100 [ _14 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 70 69 71 4 (parallel [
            (set (reg:SI 201)
                (ashiftrt:SI (reg:SI 200)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":352 545 {*ashrsi3_1}
     (expr_list:REG_DEAD (reg:SI 200)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 71 70 72 4 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -36 [0xffffffffffffffdc])) [1 imid+0 S4 A32])
        (reg:SI 201)) "../src/spline.f":352 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 201)
        (nil)))
(insn 72 71 73 4 (set (reg/f:DI 202)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [4 ss+0 S8 A64])) "../src/spline.f":353 81 {*movdi_internal}
     (nil))
(insn 73 72 74 4 (set (reg:SF 101 [ _15 ])
        (mem:SF (reg/f:DI 202) [3 *ss_109(D)+0 S4 A32])) "../src/spline.f":353 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 202)
        (nil)))
(insn 74 73 75 4 (set (reg:SI 203)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -36 [0xffffffffffffffdc])) [1 imid+0 S4 A32])) "../src/spline.f":353 82 {*movsi_internal}
     (nil))
(insn 75 74 76 4 (set (reg:DI 102 [ _16 ])
        (sign_extend:DI (reg:SI 203))) "../src/spline.f":353 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 203)
        (nil)))
(insn 76 75 77 4 (parallel [
            (set (reg:DI 103 [ _17 ])
                (plus:DI (reg:DI 102 [ _16 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":353 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 102 [ _16 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 77 76 78 4 (set (reg/f:DI 204)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [5 s+0 S8 A64])) "../src/spline.f":353 81 {*movdi_internal}
     (nil))
(insn 78 77 79 4 (set (reg:SF 104 [ _18 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 103 [ _17 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 204)) [3 *s_110(D) S4 A32])) "../src/spline.f":353 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 204)
        (expr_list:REG_DEAD (reg:DI 103 [ _17 ])
            (nil))))
(insn 79 78 80 4 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 104 [ _18 ])
            (reg:SF 101 [ _15 ]))) "../src/spline.f":353 51 {*cmpiusf}
     (expr_list:REG_DEAD (reg:SF 104 [ _18 ])
        (expr_list:REG_DEAD (reg:SF 101 [ _15 ])
            (nil))))
(jump_insn 80 79 84 4 (set (pc)
        (if_then_else (unle (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 217)
            (pc))) "../src/spline.f":353 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil))
 -> 217)
;;  succ:       5 (FALLTHRU)
;;              6
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 205
(note 84 80 85 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 85 84 86 5 (set (reg:SI 205)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -36 [0xffffffffffffffdc])) [1 imid+0 S4 A32])) "../src/spline.f":354 82 {*movsi_internal}
     (nil))
(insn 86 85 218 5 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
        (reg:SI 205)) "../src/spline.f":354 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 205)
        (nil)))
(jump_insn 218 86 219 5 (set (pc)
        (label_ref 93)) 649 {jump}
     (nil)
 -> 93)
;;  succ:       7 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 219 218 217)
;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (RTL)
;;  pred:       4
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 206
(code_label 217 219 90 6 19 (nil) [1 uses])
(note 90 217 91 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 91 90 92 6 (set (reg:SI 206)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -36 [0xffffffffffffffdc])) [1 imid+0 S4 A32])) "../src/spline.f":356 82 {*movsi_internal}
     (nil))
(insn 92 91 93 6 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 ilow+0 S4 A32])
        (reg:SI 206)) "../src/spline.f":356 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 206)
        (nil)))
;;  succ:       7 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 9, flags: (RTL)
;;  pred:       6 (FALLTHRU)
;;              5 [100.0%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 93 92 94 7 15 (nil) [1 uses])
(note 94 93 220 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(jump_insn 220 94 221 7 (set (pc)
        (label_ref 95)) "../src/spline.f":358 649 {jump}
     (nil)
 -> 95)
;;  succ:       3 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 221 220 223)
;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 8, flags: (RTL)
;;  pred:       3
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 223 221 222 9 20 (nil) [1 uses])
(note 222 223 224 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 224 222 98 9 (const_int 0 [0]) "../src/spline.f":358 682 {nop}
     (nil))
;;  succ:       8 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 1, flags: (RTL)
;;  pred:       9 [100.0%]  (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 21 [xmm0] 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 183 184 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241
(code_label 98 224 99 8 12 (nil) [0 uses])
(note 99 98 100 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 100 99 101 8 (set (reg:SI 207)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":360 82 {*movsi_internal}
     (nil))
(insn 101 100 102 8 (set (reg:DI 105 [ _19 ])
        (sign_extend:DI (reg:SI 207))) "../src/spline.f":360 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 207)
        (nil)))
(insn 102 101 103 8 (parallel [
            (set (reg:DI 106 [ _20 ])
                (plus:DI (reg:DI 105 [ _19 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":360 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 105 [ _19 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 103 102 104 8 (set (reg/f:DI 208)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [5 s+0 S8 A64])) "../src/spline.f":360 81 {*movdi_internal}
     (nil))
(insn 104 103 105 8 (set (reg:SF 107 [ _21 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 106 [ _20 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 208)) [3 *s_110(D) S4 A32])) "../src/spline.f":360 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 208)
        (expr_list:REG_DEAD (reg:DI 106 [ _20 ])
            (nil))))
(insn 105 104 106 8 (set (reg:SI 209)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":360 82 {*movsi_internal}
     (nil))
(insn 106 105 107 8 (parallel [
            (set (reg:SI 108 [ _22 ])
                (plus:SI (reg:SI 209)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":360 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 209)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff]))
                (nil)))))
(insn 107 106 108 8 (set (reg:DI 109 [ _23 ])
        (sign_extend:DI (reg:SI 108 [ _22 ]))) "../src/spline.f":360 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 108 [ _22 ])
        (nil)))
(insn 108 107 109 8 (parallel [
            (set (reg:DI 110 [ _24 ])
                (plus:DI (reg:DI 109 [ _23 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":360 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 109 [ _23 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 109 108 110 8 (set (reg/f:DI 210)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [5 s+0 S8 A64])) "../src/spline.f":360 81 {*movdi_internal}
     (nil))
(insn 110 109 111 8 (set (reg:SF 111 [ _25 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 110 [ _24 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 210)) [3 *s_110(D) S4 A32])) "../src/spline.f":360 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 210)
        (expr_list:REG_DEAD (reg:DI 110 [ _24 ])
            (nil))))
(insn 111 110 112 8 (set (reg:SF 211)
        (minus:SF (reg:SF 107 [ _21 ])
            (reg:SF 111 [ _25 ]))) "../src/spline.f":360 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 111 [ _25 ])
        (expr_list:REG_DEAD (reg:SF 107 [ _21 ])
            (nil))))
(insn 112 111 113 8 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [3 ds+0 S4 A32])
        (reg:SF 211)) "../src/spline.f":360 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 211)
        (nil)))
(insn 113 112 114 8 (set (reg/f:DI 212)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [4 ss+0 S8 A64])) "../src/spline.f":361 81 {*movdi_internal}
     (nil))
(insn 114 113 115 8 (set (reg:SF 112 [ _26 ])
        (mem:SF (reg/f:DI 212) [3 *ss_109(D)+0 S4 A32])) "../src/spline.f":361 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 212)
        (nil)))
(insn 115 114 116 8 (set (reg:SI 213)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":361 82 {*movsi_internal}
     (nil))
(insn 116 115 117 8 (parallel [
            (set (reg:SI 113 [ _27 ])
                (plus:SI (reg:SI 213)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":361 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 213)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff]))
                (nil)))))
(insn 117 116 118 8 (set (reg:DI 114 [ _28 ])
        (sign_extend:DI (reg:SI 113 [ _27 ]))) "../src/spline.f":361 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 113 [ _27 ])
        (nil)))
(insn 118 117 119 8 (parallel [
            (set (reg:DI 115 [ _29 ])
                (plus:DI (reg:DI 114 [ _28 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":361 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 114 [ _28 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 119 118 120 8 (set (reg/f:DI 214)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [5 s+0 S8 A64])) "../src/spline.f":361 81 {*movdi_internal}
     (nil))
(insn 120 119 121 8 (set (reg:SF 116 [ _30 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 115 [ _29 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 214)) [3 *s_110(D) S4 A32])) "../src/spline.f":361 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 214)
        (expr_list:REG_DEAD (reg:DI 115 [ _29 ])
            (nil))))
(insn 121 120 122 8 (set (reg:SF 117 [ _31 ])
        (minus:SF (reg:SF 112 [ _26 ])
            (reg:SF 116 [ _30 ]))) "../src/spline.f":361 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 116 [ _30 ])
        (expr_list:REG_DEAD (reg:SF 112 [ _26 ])
            (nil))))
(insn 122 121 123 8 (set (reg:SF 118 [ _32 ])
        (reg:SF 117 [ _31 ])) "../src/spline.f":361 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 117 [ _31 ])
        (nil)))
(insn 123 122 124 8 (set (reg:SF 215)
        (div:SF (reg:SF 118 [ _32 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -40 [0xffffffffffffffd8])) [3 ds+0 S4 A32]))) "../src/spline.f":361 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 118 [ _32 ])
        (nil)))
(insn 124 123 125 8 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -44 [0xffffffffffffffd4])) [3 t+0 S4 A32])
        (reg:SF 215)) "../src/spline.f":361 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 215)
        (nil)))
(insn 125 124 126 8 (set (reg:SI 216)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":362 82 {*movsi_internal}
     (nil))
(insn 126 125 127 8 (parallel [
            (set (reg:SI 119 [ _33 ])
                (plus:SI (reg:SI 216)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":362 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 216)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff]))
                (nil)))))
(insn 127 126 128 8 (set (reg:DI 120 [ _34 ])
        (sign_extend:DI (reg:SI 119 [ _33 ]))) "../src/spline.f":362 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 119 [ _33 ])
        (nil)))
(insn 128 127 129 8 (parallel [
            (set (reg:DI 121 [ _35 ])
                (plus:DI (reg:DI 120 [ _34 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":362 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 120 [ _34 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 129 128 130 8 (set (reg/f:DI 217)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -88 [0xffffffffffffffa8])) [5 xs+0 S8 A64])) "../src/spline.f":362 81 {*movdi_internal}
     (nil))
(insn 130 129 131 8 (set (reg:SF 122 [ _36 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 121 [ _35 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 217)) [3 *xs_115(D) S4 A32])) "../src/spline.f":362 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 217)
        (expr_list:REG_DEAD (reg:DI 121 [ _35 ])
            (nil))))
(insn 131 130 132 8 (set (reg:SF 123 [ _37 ])
        (mult:SF (reg:SF 122 [ _36 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -40 [0xffffffffffffffd8])) [3 ds+0 S4 A32]))) "../src/spline.f":362 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 122 [ _36 ])
        (nil)))
(insn 132 131 133 8 (set (reg:SI 218)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":362 82 {*movsi_internal}
     (nil))
(insn 133 132 134 8 (set (reg:DI 124 [ _38 ])
        (sign_extend:DI (reg:SI 218))) "../src/spline.f":362 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 218)
        (nil)))
(insn 134 133 135 8 (parallel [
            (set (reg:DI 125 [ _39 ])
                (plus:DI (reg:DI 124 [ _38 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":362 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 124 [ _38 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 135 134 136 8 (set (reg/f:DI 219)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [5 x+0 S8 A64])) "../src/spline.f":362 81 {*movdi_internal}
     (nil))
(insn 136 135 137 8 (set (reg:SF 126 [ _40 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 125 [ _39 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 219)) [3 *x_116(D) S4 A32])) "../src/spline.f":362 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 219)
        (expr_list:REG_DEAD (reg:DI 125 [ _39 ])
            (nil))))
(insn 137 136 138 8 (set (reg:SF 127 [ _41 ])
        (minus:SF (reg:SF 123 [ _37 ])
            (reg:SF 126 [ _40 ]))) "../src/spline.f":362 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 126 [ _40 ])
        (expr_list:REG_DEAD (reg:SF 123 [ _37 ])
            (nil))))
(insn 138 137 139 8 (set (reg:SI 220)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":362 82 {*movsi_internal}
     (nil))
(insn 139 138 140 8 (parallel [
            (set (reg:SI 128 [ _42 ])
                (plus:SI (reg:SI 220)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":362 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 220)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff]))
                (nil)))))
(insn 140 139 141 8 (set (reg:DI 129 [ _43 ])
        (sign_extend:DI (reg:SI 128 [ _42 ]))) "../src/spline.f":362 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 128 [ _42 ])
        (nil)))
(insn 141 140 142 8 (parallel [
            (set (reg:DI 130 [ _44 ])
                (plus:DI (reg:DI 129 [ _43 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":362 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 129 [ _43 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 142 141 143 8 (set (reg/f:DI 221)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [5 x+0 S8 A64])) "../src/spline.f":362 81 {*movdi_internal}
     (nil))
(insn 143 142 144 8 (set (reg:SF 131 [ _45 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 130 [ _44 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 221)) [3 *x_116(D) S4 A32])) "../src/spline.f":362 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 221)
        (expr_list:REG_DEAD (reg:DI 130 [ _44 ])
            (nil))))
(insn 144 143 145 8 (set (reg:SF 222)
        (plus:SF (reg:SF 127 [ _41 ])
            (reg:SF 131 [ _45 ]))) "../src/spline.f":362 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 131 [ _45 ])
        (expr_list:REG_DEAD (reg:SF 127 [ _41 ])
            (nil))))
(insn 145 144 146 8 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [3 cx1+0 S4 A32])
        (reg:SF 222)) "../src/spline.f":362 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 222)
        (nil)))
(insn 146 145 147 8 (set (reg:SI 223)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":363 82 {*movsi_internal}
     (nil))
(insn 147 146 148 8 (set (reg:DI 132 [ _46 ])
        (sign_extend:DI (reg:SI 223))) "../src/spline.f":363 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 223)
        (nil)))
(insn 148 147 149 8 (parallel [
            (set (reg:DI 133 [ _47 ])
                (plus:DI (reg:DI 132 [ _46 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":363 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 132 [ _46 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 149 148 150 8 (set (reg/f:DI 224)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -88 [0xffffffffffffffa8])) [5 xs+0 S8 A64])) "../src/spline.f":363 81 {*movdi_internal}
     (nil))
(insn 150 149 151 8 (set (reg:SF 134 [ _48 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 133 [ _47 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 224)) [3 *xs_115(D) S4 A32])) "../src/spline.f":363 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 224)
        (expr_list:REG_DEAD (reg:DI 133 [ _47 ])
            (nil))))
(insn 151 150 152 8 (set (reg:SF 135 [ _49 ])
        (mult:SF (reg:SF 134 [ _48 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -40 [0xffffffffffffffd8])) [3 ds+0 S4 A32]))) "../src/spline.f":363 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 134 [ _48 ])
        (nil)))
(insn 152 151 153 8 (set (reg:SI 225)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":363 82 {*movsi_internal}
     (nil))
(insn 153 152 154 8 (set (reg:DI 136 [ _50 ])
        (sign_extend:DI (reg:SI 225))) "../src/spline.f":363 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 225)
        (nil)))
(insn 154 153 155 8 (parallel [
            (set (reg:DI 137 [ _51 ])
                (plus:DI (reg:DI 136 [ _50 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":363 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 136 [ _50 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 155 154 156 8 (set (reg/f:DI 226)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [5 x+0 S8 A64])) "../src/spline.f":363 81 {*movdi_internal}
     (nil))
(insn 156 155 157 8 (set (reg:SF 138 [ _52 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 137 [ _51 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 226)) [3 *x_116(D) S4 A32])) "../src/spline.f":363 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 226)
        (expr_list:REG_DEAD (reg:DI 137 [ _51 ])
            (nil))))
(insn 157 156 158 8 (set (reg:SF 139 [ _53 ])
        (minus:SF (reg:SF 135 [ _49 ])
            (reg:SF 138 [ _52 ]))) "../src/spline.f":363 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 138 [ _52 ])
        (expr_list:REG_DEAD (reg:SF 135 [ _49 ])
            (nil))))
(insn 158 157 159 8 (set (reg:SI 227)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":363 82 {*movsi_internal}
     (nil))
(insn 159 158 160 8 (parallel [
            (set (reg:SI 140 [ _54 ])
                (plus:SI (reg:SI 227)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":363 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 227)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff]))
                (nil)))))
(insn 160 159 161 8 (set (reg:DI 141 [ _55 ])
        (sign_extend:DI (reg:SI 140 [ _54 ]))) "../src/spline.f":363 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 140 [ _54 ])
        (nil)))
(insn 161 160 162 8 (parallel [
            (set (reg:DI 142 [ _56 ])
                (plus:DI (reg:DI 141 [ _55 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":363 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 141 [ _55 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 162 161 163 8 (set (reg/f:DI 228)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [5 x+0 S8 A64])) "../src/spline.f":363 81 {*movdi_internal}
     (nil))
(insn 163 162 164 8 (set (reg:SF 143 [ _57 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 142 [ _56 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 228)) [3 *x_116(D) S4 A32])) "../src/spline.f":363 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 228)
        (expr_list:REG_DEAD (reg:DI 142 [ _56 ])
            (nil))))
(insn 164 163 165 8 (set (reg:SF 229)
        (plus:SF (reg:SF 139 [ _53 ])
            (reg:SF 143 [ _57 ]))) "../src/spline.f":363 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 143 [ _57 ])
        (expr_list:REG_DEAD (reg:SF 139 [ _53 ])
            (nil))))
(insn 165 164 166 8 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -52 [0xffffffffffffffcc])) [3 cx2+0 S4 A32])
        (reg:SF 229)) "../src/spline.f":363 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 229)
        (nil)))
(insn 166 165 167 8 (set (reg:SI 230)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":364 82 {*movsi_internal}
     (nil))
(insn 167 166 168 8 (set (reg:DI 144 [ _58 ])
        (sign_extend:DI (reg:SI 230))) "../src/spline.f":364 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 230)
        (nil)))
(insn 168 167 169 8 (parallel [
            (set (reg:DI 145 [ _59 ])
                (plus:DI (reg:DI 144 [ _58 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":364 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 144 [ _58 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 169 168 170 8 (set (reg/f:DI 231)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [5 x+0 S8 A64])) "../src/spline.f":364 81 {*movdi_internal}
     (nil))
(insn 170 169 171 8 (set (reg:SF 146 [ _60 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 145 [ _59 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 231)) [3 *x_116(D) S4 A32])) "../src/spline.f":364 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 231)
        (expr_list:REG_DEAD (reg:DI 145 [ _59 ])
            (nil))))
(insn 171 170 172 8 (set (reg:SI 232)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":364 82 {*movsi_internal}
     (nil))
(insn 172 171 173 8 (parallel [
            (set (reg:SI 147 [ _61 ])
                (plus:SI (reg:SI 232)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":364 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 232)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff]))
                (nil)))))
(insn 173 172 174 8 (set (reg:DI 148 [ _62 ])
        (sign_extend:DI (reg:SI 147 [ _61 ]))) "../src/spline.f":364 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 147 [ _61 ])
        (nil)))
(insn 174 173 175 8 (parallel [
            (set (reg:DI 149 [ _63 ])
                (plus:DI (reg:DI 148 [ _62 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":364 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 148 [ _62 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 175 174 176 8 (set (reg/f:DI 233)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [5 x+0 S8 A64])) "../src/spline.f":364 81 {*movdi_internal}
     (nil))
(insn 176 175 177 8 (set (reg:SF 150 [ _64 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 149 [ _63 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 233)) [3 *x_116(D) S4 A32])) "../src/spline.f":364 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 233)
        (expr_list:REG_DEAD (reg:DI 149 [ _63 ])
            (nil))))
(insn 177 176 178 8 (set (reg:SF 151 [ _65 ])
        (minus:SF (reg:SF 146 [ _60 ])
            (reg:SF 150 [ _64 ]))) "../src/spline.f":364 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 150 [ _64 ])
        (expr_list:REG_DEAD (reg:SF 146 [ _60 ])
            (nil))))
(insn 178 177 179 8 (set (reg:SF 234)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -44 [0xffffffffffffffd4])) [3 t+0 S4 A32])) "../src/spline.f":364 127 {*movsf_internal}
     (nil))
(insn 179 178 180 8 (set (reg:SF 235)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC2") [flags 0x2]) [3  S4 A32])) "../src/spline.f":364 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 4.0e+0 [0x0.8p+3])
        (nil)))
(insn 180 179 181 8 (set (reg:SF 152 [ _66 ])
        (mult:SF (reg:SF 234)
            (reg:SF 235))) "../src/spline.f":364 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 235)
        (expr_list:REG_DEAD (reg:SF 234)
            (nil))))
(insn 181 180 182 8 (set (reg:SF 236)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC3") [flags 0x2]) [3  S4 A32])) "../src/spline.f":364 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 182 181 183 8 (set (reg:SF 153 [ _67 ])
        (minus:SF (reg:SF 236)
            (reg:SF 152 [ _66 ]))) "../src/spline.f":364 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 236)
        (expr_list:REG_DEAD (reg:SF 152 [ _66 ])
            (nil))))
(insn 183 182 184 8 (set (reg:SF 237)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -44 [0xffffffffffffffd4])) [3 t+0 S4 A32])) "../src/spline.f":364 127 {*movsf_internal}
     (nil))
(insn 184 183 185 8 (set (reg:SF 238)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC0") [flags 0x2]) [3  S4 A32])) "../src/spline.f":364 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 3.0e+0 [0x0.cp+2])
        (nil)))
(insn 185 184 186 8 (set (reg:SF 154 [ _68 ])
        (mult:SF (reg:SF 237)
            (reg:SF 238))) "../src/spline.f":364 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 238)
        (expr_list:REG_DEAD (reg:SF 237)
            (nil))))
(insn 186 185 187 8 (set (reg:SF 155 [ _69 ])
        (mult:SF (reg:SF 154 [ _68 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -44 [0xffffffffffffffd4])) [3 t+0 S4 A32]))) "../src/spline.f":364 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 154 [ _68 ])
        (nil)))
(insn 187 186 188 8 (set (reg:SF 156 [ _70 ])
        (plus:SF (reg:SF 153 [ _67 ])
            (reg:SF 155 [ _69 ]))) "../src/spline.f":364 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 155 [ _69 ])
        (expr_list:REG_DEAD (reg:SF 153 [ _67 ])
            (nil))))
(insn 188 187 189 8 (set (reg:SF 157 [ _71 ])
        (reg:SF 156 [ _70 ])) "../src/spline.f":364 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 156 [ _70 ])
        (nil)))
(insn 189 188 190 8 (set (reg:SF 158 [ _72 ])
        (mult:SF (reg:SF 157 [ _71 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -48 [0xffffffffffffffd0])) [3 cx1+0 S4 A32]))) "../src/spline.f":364 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 157 [ _71 ])
        (nil)))
(insn 190 189 191 8 (set (reg:SF 159 [ _73 ])
        (plus:SF (reg:SF 151 [ _65 ])
            (reg:SF 158 [ _72 ]))) "../src/spline.f":364 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 158 [ _72 ])
        (expr_list:REG_DEAD (reg:SF 151 [ _65 ])
            (nil))))
(insn 191 190 192 8 (set (reg:SF 239)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -44 [0xffffffffffffffd4])) [3 t+0 S4 A32])) "../src/spline.f":364 127 {*movsf_internal}
     (nil))
(insn 192 191 193 8 (set (reg:SF 240)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC0") [flags 0x2]) [3  S4 A32])) "../src/spline.f":364 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 3.0e+0 [0x0.cp+2])
        (nil)))
(insn 193 192 194 8 (set (reg:SF 160 [ _74 ])
        (mult:SF (reg:SF 239)
            (reg:SF 240))) "../src/spline.f":364 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 240)
        (expr_list:REG_DEAD (reg:SF 239)
            (nil))))
(insn 194 193 195 8 (set (reg:SF 241)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC4") [flags 0x2]) [3  S4 A32])) "../src/spline.f":364 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 2.0e+0 [0x0.8p+2])
        (nil)))
(insn 195 194 196 8 (set (reg:SF 161 [ _75 ])
        (minus:SF (reg:SF 160 [ _74 ])
            (reg:SF 241))) "../src/spline.f":364 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 241)
        (expr_list:REG_DEAD (reg:SF 160 [ _74 ])
            (nil))))
(insn 196 195 197 8 (set (reg:SF 162 [ _76 ])
        (reg:SF 161 [ _75 ])) "../src/spline.f":364 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 161 [ _75 ])
        (nil)))
(insn 197 196 198 8 (set (reg:SF 163 [ _77 ])
        (mult:SF (reg:SF 162 [ _76 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -44 [0xffffffffffffffd4])) [3 t+0 S4 A32]))) "../src/spline.f":364 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 162 [ _76 ])
        (nil)))
(insn 198 197 199 8 (set (reg:SF 164 [ _78 ])
        (mult:SF (reg:SF 163 [ _77 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -52 [0xffffffffffffffcc])) [3 cx2+0 S4 A32]))) "../src/spline.f":364 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 163 [ _77 ])
        (nil)))
(insn 199 198 200 8 (set (reg:SF 165 [ _79 ])
        (plus:SF (reg:SF 159 [ _73 ])
            (reg:SF 164 [ _78 ]))) "../src/spline.f":364 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 164 [ _78 ])
        (expr_list:REG_DEAD (reg:SF 159 [ _73 ])
            (nil))))
(insn 200 199 201 8 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [3 __result_deval+0 S4 A64])
        (reg:SF 165 [ _79 ])) "../src/spline.f":364 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 165 [ _79 ])
        (nil)))
(insn 201 200 202 8 (set (reg:SF 166 [ __result_deval.156_80 ])
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [3 __result_deval+0 S4 A64])) "../src/spline.f":365 127 {*movsf_internal}
     (nil))
(insn 202 201 203 8 (set (reg:SF 167 [ _81 ])
        (div:SF (reg:SF 166 [ __result_deval.156_80 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -40 [0xffffffffffffffd8])) [3 ds+0 S4 A32]))) "../src/spline.f":365 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 166 [ __result_deval.156_80 ])
        (nil)))
(insn 203 202 204 8 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [3 __result_deval+0 S4 A64])
        (reg:SF 167 [ _81 ])) "../src/spline.f":365 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 167 [ _81 ])
        (nil)))
(insn 204 203 207 8 (set (reg:SF 183 [ _121 ])
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [3 __result_deval+0 S4 A64])) "../src/spline.f":366 127 {*movsf_internal}
     (nil))
(insn 207 204 211 8 (set (reg:SF 184 [ <retval> ])
        (reg:SF 183 [ _121 ])) 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 183 [ _121 ])
        (nil)))
(insn 211 207 212 8 (set (reg/i:SF 21 xmm0)
        (reg:SF 184 [ <retval> ])) "../src/spline.f":367 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 184 [ <retval> ])
        (nil)))
(insn 212 211 0 8 (use (reg/i:SF 21 xmm0)) "../src/spline.f":367 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0]


;; Function seval (seval_, funcdef_no=2, decl_uid=3594, cgraph_uid=2, symbol_order=2)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 10 n_edges 11 count 10 (    1)
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 9 8
;;
;; Loop 1
;;  header 3, latch 7
;;  depth 1, outer 0
;;  nodes: 3 7 6 5 4
;; 2 succs { 3 }
;; 3 succs { 9 4 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 3 }
;; 9 succs { 8 }
;; 8 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r237: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a10 (r237,l0) best SSE_REGS, allocno SSE_REGS
    r236: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a13 (r236,l0) best SSE_REGS, allocno SSE_REGS
    r235: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a16 (r235,l0) best SSE_REGS, allocno SSE_REGS
    r234: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a17 (r234,l0) best SSE_REGS, allocno SSE_REGS
    r233: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r233,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r232: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r232,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r231: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a28 (r231,l0) best SSE_REGS, allocno SSE_REGS
    r230: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r230,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r229: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a33 (r229,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r228: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a34 (r228,l0) best SSE_REGS, allocno SSE_REGS
    r227: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a37 (r227,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r226: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a41 (r226,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r225: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a44 (r225,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r224: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a47 (r224,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r223: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a49 (r223,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r222: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a52 (r222,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r221: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a53 (r221,l0) best SSE_REGS, allocno SSE_REGS
    r220: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a56 (r220,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r219: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a60 (r219,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r218: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a63 (r218,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r217: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a66 (r217,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r216: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a68 (r216,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r215: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a72 (r215,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r214: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a73 (r214,l0) best SSE_REGS, allocno SSE_REGS
    r213: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a78 (r213,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r212: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a82 (r212,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r211: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a83 (r211,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r210: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a84 (r210,l0) best SSE_REGS, allocno SSE_REGS
    r209: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a87 (r209,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r208: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a91 (r208,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r207: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a92 (r207,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r206: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a95 (r206,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r205: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a96 (r205,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r204: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a97 (r204,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r203: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a100 (r203,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r202: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a103 (r202,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r201: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a104 (r201,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r200: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a105 (r200,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r199: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a106 (r199,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r198: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a108 (r198,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r197: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a109 (r197,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r196: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a110 (r196,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r195: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a112 (r195,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r194: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a113 (r194,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r193: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a114 (r193,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r192: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a118 (r192,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r191: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a120 (r191,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r190: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a122 (r190,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r189: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a126 (r189,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r188: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a128 (r188,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r187: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a130 (r187,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r186: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a134 (r186,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r185: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a136 (r185,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r184: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a138 (r184,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r183: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a0 (r183,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r182: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a1 (r182,l0) best SSE_REGS, allocno SSE_REGS
    r178: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a117 (r178,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r177: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a119 (r177,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r173: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a125 (r173,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r172: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a127 (r172,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r168: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a133 (r168,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r167: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a135 (r167,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r166: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a2 (r166,l0) best SSE_REGS, allocno SSE_REGS
    r165: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a3 (r165,l0) best SSE_REGS, allocno SSE_REGS
    r164: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a5 (r164,l0) best SSE_REGS, allocno SSE_REGS
    r163: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a7 (r163,l0) best SSE_REGS, allocno SSE_REGS
    r162: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a8 (r162,l0) best SSE_REGS, allocno SSE_REGS
    r161: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a9 (r161,l0) best SSE_REGS, allocno SSE_REGS
    r160: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a11 (r160,l0) best SSE_REGS, allocno SSE_REGS
    r159: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a12 (r159,l0) best SSE_REGS, allocno SSE_REGS
    r158: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a6 (r158,l0) best SSE_REGS, allocno SSE_REGS
    r157: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a14 (r157,l0) best SSE_REGS, allocno SSE_REGS
    r156: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a15 (r156,l0) best SSE_REGS, allocno SSE_REGS
    r155: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a4 (r155,l0) best SSE_REGS, allocno SSE_REGS
    r154: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a18 (r154,l0) best SSE_REGS, allocno SSE_REGS
    r153: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a20 (r153,l0) best SSE_REGS, allocno SSE_REGS
    r152: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r152,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r151: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r151,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r150: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r150,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r149: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a21 (r149,l0) best SSE_REGS, allocno SSE_REGS
    r148: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a27 (r148,l0) best SSE_REGS, allocno SSE_REGS
    r147: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a19 (r147,l0) best SSE_REGS, allocno SSE_REGS
    r146: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a29 (r146,l0) best SSE_REGS, allocno SSE_REGS
    r145: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a31 (r145,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r144: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r144,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r143: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a35 (r143,l0) best SSE_REGS, allocno SSE_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a38 (r142,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a39 (r141,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a40 (r140,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r139: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a36 (r139,l0) best SSE_REGS, allocno SSE_REGS
    r138: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a42 (r138,l0) best SSE_REGS, allocno SSE_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a45 (r137,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a46 (r136,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r135: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a43 (r135,l0) best SSE_REGS, allocno SSE_REGS
    r134: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a48 (r134,l0) best SSE_REGS, allocno SSE_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a50 (r133,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r132: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a51 (r132,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r131: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a54 (r131,l0) best SSE_REGS, allocno SSE_REGS
    r130: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a57 (r130,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r129: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a58 (r129,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r128: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a59 (r128,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r127: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a55 (r127,l0) best SSE_REGS, allocno SSE_REGS
    r126: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a61 (r126,l0) best SSE_REGS, allocno SSE_REGS
    r125: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a64 (r125,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r124: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a65 (r124,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r123: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a62 (r123,l0) best SSE_REGS, allocno SSE_REGS
    r122: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a67 (r122,l0) best SSE_REGS, allocno SSE_REGS
    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a69 (r121,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r120: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a70 (r120,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a71 (r119,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r118: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a74 (r118,l0) best SSE_REGS, allocno SSE_REGS
    r117: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a75 (r117,l0) best SSE_REGS, allocno SSE_REGS
    r116: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a76 (r116,l0) best SSE_REGS, allocno SSE_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a79 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a80 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a81 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r112: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a77 (r112,l0) best SSE_REGS, allocno SSE_REGS
    r111: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a85 (r111,l0) best SSE_REGS, allocno SSE_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a88 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a89 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a90 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a86 (r107,l0) best SSE_REGS, allocno SSE_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a93 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a94 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a99 (r104,l0) best SSE_REGS, allocno SSE_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a101 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a102 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a98 (r101,l0) best SSE_REGS, allocno SSE_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a107 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a111 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a115 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a116 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a121 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a123 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a124 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a129 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a131 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a132 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a137 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r183,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 CLOBBERED_REGS:4 Q_REGS:4 NON_Q_REGS:4 TLS_GOTBASE_REGS:4 GENERAL_REGS:4 FP_TOP_REG:18 FP_SECOND_REG:18 FLOAT_REGS:18 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:16 FP_TOP_SSE_REGS:20 FP_SECOND_SSE_REGS:20 FLOAT_SSE_REGS:20 FLOAT_INT_REGS:18 INT_SSE_REGS:16 FLOAT_INT_SSE_REGS:20 ALL_REGS:20 MEM:2
  a1(r182,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 CLOBBERED_REGS:4 Q_REGS:4 NON_Q_REGS:4 TLS_GOTBASE_REGS:4 GENERAL_REGS:4 FP_TOP_REG:24 FP_SECOND_REG:24 FLOAT_REGS:24 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:22 FP_TOP_SSE_REGS:26 FP_SECOND_SSE_REGS:26 FLOAT_SSE_REGS:26 FLOAT_INT_REGS:24 INT_SSE_REGS:19 FLOAT_INT_SSE_REGS:26 ALL_REGS:26 MEM:7
  a2(r166,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a3(r165,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a4(r155,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a5(r164,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 ALL_REGS:29 MEM:8
  a6(r158,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 ALL_REGS:29 MEM:8
  a7(r163,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:9
  a8(r162,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a9(r161,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:16
  a10(r237,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a11(r160,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 ALL_REGS:29 MEM:9
  a12(r159,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:9
  a13(r236,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a14(r157,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:9
  a15(r156,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a16(r235,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a17(r234,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a18(r154,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a19(r147,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a20(r153,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a21(r149,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 ALL_REGS:29 MEM:8
  a22(r233,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a23(r152,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a24(r151,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a25(r150,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a26(r232,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a27(r148,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:9
  a28(r231,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a29(r146,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a30(r230,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a31(r145,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a32(r144,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a33(r229,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a34(r228,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a35(r143,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a36(r139,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a37(r227,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a38(r142,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a39(r141,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a40(r140,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a41(r226,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a42(r138,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a43(r135,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:16
  a44(r225,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a45(r137,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a46(r136,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a47(r224,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a48(r134,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a49(r223,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a50(r133,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a51(r132,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a52(r222,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a53(r221,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a54(r131,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a55(r127,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a56(r220,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a57(r130,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a58(r129,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a59(r128,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a60(r219,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a61(r126,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a62(r123,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:16
  a63(r218,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a64(r125,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a65(r124,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a66(r217,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a67(r122,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a68(r216,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a69(r121,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a70(r120,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a71(r119,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a72(r215,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a73(r214,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a74(r118,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 ALL_REGS:29 MEM:9
  a75(r117,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:9
  a76(r116,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a77(r112,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a78(r213,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a79(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a80(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a81(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a82(r212,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a83(r211,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a84(r210,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a85(r111,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a86(r107,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a87(r209,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a88(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a89(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a90(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a91(r208,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a92(r207,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a93(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a94(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a95(r206,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a96(r205,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a97(r204,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a98(r101,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a99(r104,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a100(r203,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a101(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a102(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a103(r202,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a104(r201,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a105(r200,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a106(r199,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a107(r100,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 CLOBBERED_REGS:2 Q_REGS:2 NON_Q_REGS:2 TLS_GOTBASE_REGS:2 GENERAL_REGS:2 SSE_FIRST_REG:26 NO_REX_SSE_REGS:26 SSE_REGS:26 MMX_REGS:41 INT_SSE_REGS:29 ALL_REGS:626 MEM:11
  a108(r198,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 CLOBBERED_REGS:2 Q_REGS:2 NON_Q_REGS:2 TLS_GOTBASE_REGS:2 GENERAL_REGS:2 SSE_FIRST_REG:18 NO_REX_SSE_REGS:18 SSE_REGS:18 MMX_REGS:28 INT_SSE_REGS:20 ALL_REGS:418 MEM:8
  a109(r197,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a110(r196,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a111(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a112(r195,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a113(r194,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a114(r193,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a115(r97,l0) costs: AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:2
  a116(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a117(r178,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a118(r192,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a119(r177,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:38 INT_SSE_REGS:27 ALL_REGS:520 MEM:11
  a120(r191,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:8
  a121(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a122(r190,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a123(r93,l0) costs: AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:2
  a124(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a125(r173,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a126(r189,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a127(r172,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:38 INT_SSE_REGS:27 ALL_REGS:520 MEM:11
  a128(r188,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:8
  a129(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a130(r187,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a131(r89,l0) costs: AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:2
  a132(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a133(r168,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a134(r186,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a135(r167,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:38 INT_SSE_REGS:27 ALL_REGS:520 MEM:11
  a136(r185,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:8
  a137(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a138(r184,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8

   Insn 207(l0): point = 0
   Insn 206(l0): point = 2
   Insn 202(l0): point = 4
   Insn 199(l0): point = 6
   Insn 198(l0): point = 8
   Insn 197(l0): point = 10
   Insn 196(l0): point = 12
   Insn 195(l0): point = 14
   Insn 194(l0): point = 16
   Insn 193(l0): point = 18
   Insn 192(l0): point = 20
   Insn 191(l0): point = 22
   Insn 190(l0): point = 24
   Insn 189(l0): point = 26
   Insn 188(l0): point = 28
   Insn 187(l0): point = 30
   Insn 186(l0): point = 32
   Insn 185(l0): point = 34
   Insn 184(l0): point = 36
   Insn 183(l0): point = 38
   Insn 182(l0): point = 40
   Insn 181(l0): point = 42
   Insn 180(l0): point = 44
   Insn 179(l0): point = 46
   Insn 178(l0): point = 48
   Insn 177(l0): point = 50
   Insn 176(l0): point = 52
   Insn 175(l0): point = 54
   Insn 174(l0): point = 56
   Insn 173(l0): point = 58
   Insn 172(l0): point = 60
   Insn 171(l0): point = 62
   Insn 170(l0): point = 64
   Insn 169(l0): point = 66
   Insn 168(l0): point = 68
   Insn 167(l0): point = 70
   Insn 166(l0): point = 72
   Insn 165(l0): point = 74
   Insn 164(l0): point = 76
   Insn 163(l0): point = 78
   Insn 162(l0): point = 80
   Insn 161(l0): point = 82
   Insn 160(l0): point = 84
   Insn 159(l0): point = 86
   Insn 158(l0): point = 88
   Insn 157(l0): point = 90
   Insn 156(l0): point = 92
   Insn 155(l0): point = 94
   Insn 154(l0): point = 96
   Insn 153(l0): point = 98
   Insn 152(l0): point = 100
   Insn 151(l0): point = 102
   Insn 150(l0): point = 104
   Insn 149(l0): point = 106
   Insn 148(l0): point = 108
   Insn 147(l0): point = 110
   Insn 146(l0): point = 112
   Insn 145(l0): point = 114
   Insn 144(l0): point = 116
   Insn 143(l0): point = 118
   Insn 142(l0): point = 120
   Insn 141(l0): point = 122
   Insn 140(l0): point = 124
   Insn 139(l0): point = 126
   Insn 138(l0): point = 128
   Insn 137(l0): point = 130
   Insn 136(l0): point = 132
   Insn 135(l0): point = 134
   Insn 134(l0): point = 136
   Insn 133(l0): point = 138
   Insn 132(l0): point = 140
   Insn 131(l0): point = 142
   Insn 130(l0): point = 144
   Insn 129(l0): point = 146
   Insn 128(l0): point = 148
   Insn 127(l0): point = 150
   Insn 126(l0): point = 152
   Insn 125(l0): point = 154
   Insn 124(l0): point = 156
   Insn 123(l0): point = 158
   Insn 122(l0): point = 160
   Insn 121(l0): point = 162
   Insn 120(l0): point = 164
   Insn 119(l0): point = 166
   Insn 118(l0): point = 168
   Insn 117(l0): point = 170
   Insn 116(l0): point = 172
   Insn 115(l0): point = 174
   Insn 114(l0): point = 176
   Insn 113(l0): point = 178
   Insn 112(l0): point = 180
   Insn 111(l0): point = 182
   Insn 110(l0): point = 184
   Insn 109(l0): point = 186
   Insn 108(l0): point = 188
   Insn 107(l0): point = 190
   Insn 106(l0): point = 192
   Insn 105(l0): point = 194
   Insn 104(l0): point = 196
   Insn 103(l0): point = 198
   Insn 102(l0): point = 200
   Insn 101(l0): point = 202
   Insn 100(l0): point = 204
   Insn 219(l0): point = 207
   Insn 63(l0): point = 210
   Insn 62(l0): point = 212
   Insn 61(l0): point = 214
   Insn 60(l0): point = 216
   Insn 215(l0): point = 219
   Insn 92(l0): point = 222
   Insn 91(l0): point = 224
   Insn 213(l0): point = 227
   Insn 86(l0): point = 229
   Insn 85(l0): point = 231
   Insn 80(l0): point = 234
   Insn 79(l0): point = 236
   Insn 78(l0): point = 238
   Insn 77(l0): point = 240
   Insn 76(l0): point = 242
   Insn 75(l0): point = 244
   Insn 74(l0): point = 246
   Insn 73(l0): point = 248
   Insn 72(l0): point = 250
   Insn 71(l0): point = 252
   Insn 70(l0): point = 254
   Insn 69(l0): point = 256
   Insn 68(l0): point = 258
   Insn 67(l0): point = 260
   Insn 66(l0): point = 262
   Insn 65(l0): point = 264
   Insn 58(l0): point = 267
   Insn 57(l0): point = 269
   Insn 56(l0): point = 271
   Insn 55(l0): point = 273
   Insn 51(l0): point = 275
   Insn 50(l0): point = 277
   Insn 49(l0): point = 279
   Insn 47(l0): point = 281
   Insn 45(l0): point = 283
   Insn 46(l0): point = 285
   Insn 44(l0): point = 287
   Insn 43(l0): point = 289
   Insn 42(l0): point = 291
   Insn 41(l0): point = 293
   Insn 40(l0): point = 295
   Insn 36(l0): point = 297
   Insn 35(l0): point = 299
   Insn 34(l0): point = 301
   Insn 32(l0): point = 303
   Insn 30(l0): point = 305
   Insn 31(l0): point = 307
   Insn 29(l0): point = 309
   Insn 28(l0): point = 311
   Insn 27(l0): point = 313
   Insn 26(l0): point = 315
   Insn 25(l0): point = 317
   Insn 21(l0): point = 319
   Insn 20(l0): point = 321
   Insn 19(l0): point = 323
   Insn 17(l0): point = 325
   Insn 15(l0): point = 327
   Insn 16(l0): point = 329
   Insn 14(l0): point = 331
   Insn 13(l0): point = 333
   Insn 12(l0): point = 335
   Insn 11(l0): point = 337
   Insn 10(l0): point = 339
   Insn 6(l0): point = 341
   Insn 5(l0): point = 343
   Insn 4(l0): point = 345
   Insn 3(l0): point = 347
   Insn 2(l0): point = 349
 a0(r183): [3..4]
 a1(r182): [5..6]
 a2(r166): [9..10]
 a3(r165): [11..12]
 a4(r155): [11..40]
 a5(r164): [13..14]
 a6(r158): [13..30]
 a7(r163): [15..16]
 a8(r162): [17..18]
 a9(r161): [17..22]
 a10(r237): [19..20]
 a11(r160): [23..24]
 a12(r159): [25..26]
 a13(r236): [27..28]
 a14(r157): [31..32]
 a15(r156): [33..36]
 a16(r235): [33..34]
 a17(r234): [37..38]
 a18(r154): [41..42]
 a19(r147): [41..62]
 a20(r153): [43..44]
 a21(r149): [43..56]
 a22(r233): [45..46]
 a23(r152): [45..48]
 a24(r151): [49..50]
 a25(r150): [51..52]
 a26(r232): [53..54]
 a27(r148): [57..58]
 a28(r231): [59..60]
 a29(r146): [63..64]
 a30(r230): [65..66]
 a31(r145): [65..68]
 a32(r144): [69..70]
 a33(r229): [71..72]
 a34(r228): [75..76]
 a35(r143): [77..78]
 a36(r139): [77..90]
 a37(r227): [79..80]
 a38(r142): [79..82]
 a39(r141): [83..84]
 a40(r140): [85..86]
 a41(r226): [87..88]
 a42(r138): [91..92]
 a43(r135): [91..102]
 a44(r225): [93..94]
 a45(r137): [93..96]
 a46(r136): [97..98]
 a47(r224): [99..100]
 a48(r134): [103..104]
 a49(r223): [105..106]
 a50(r133): [105..108]
 a51(r132): [109..110]
 a52(r222): [111..112]
 a53(r221): [115..116]
 a54(r131): [117..118]
 a55(r127): [117..130]
 a56(r220): [119..120]
 a57(r130): [119..122]
 a58(r129): [123..124]
 a59(r128): [125..126]
 a60(r219): [127..128]
 a61(r126): [131..132]
 a62(r123): [131..142]
 a63(r218): [133..134]
 a64(r125): [133..136]
 a65(r124): [137..138]
 a66(r217): [139..140]
 a67(r122): [143..144]
 a68(r216): [145..146]
 a69(r121): [145..148]
 a70(r120): [149..150]
 a71(r119): [151..152]
 a72(r215): [153..154]
 a73(r214): [157..158]
 a74(r118): [159..160]
 a75(r117): [161..162]
 a76(r116): [163..164]
 a77(r112): [163..176]
 a78(r213): [165..166]
 a79(r115): [165..168]
 a80(r114): [169..170]
 a81(r113): [171..172]
 a82(r212): [173..174]
 a83(r211): [177..178]
 a84(r210): [181..182]
 a85(r111): [183..184]
 a86(r107): [183..196]
 a87(r209): [185..186]
 a88(r110): [185..188]
 a89(r109): [189..190]
 a90(r108): [191..192]
 a91(r208): [193..194]
 a92(r207): [197..198]
 a93(r106): [197..200]
 a94(r105): [201..202]
 a95(r206): [203..204]
 a96(r205): [223..224]
 a97(r204): [230..231]
 a98(r101): [237..248]
 a99(r104): [237..238]
 a100(r203): [239..240]
 a101(r103): [239..242]
 a102(r102): [243..244]
 a103(r202): [245..246]
 a104(r201): [249..250]
 a105(r200): [253..254]
 a106(r199): [255..256]
 a107(r100): [257..260]
 a108(r198): [257..258]
 a109(r197): [261..262]
 a110(r196): [261..264]
 a111(r99): [213..214]
 a112(r195): [215..216]
 a113(r194): [268..269]
 a114(r193): [270..271]
 a115(r97 [0]): [276..351]
 a115(r97 [1]): [275..351]
 a116(r96): [278..279]
 a117(r178): [280..281]
 a118(r192): [282..285]
 a119(r177): [282..287]
 a120(r191): [290..291]
 a121(r95): [292..293]
 a122(r190): [294..295]
 a123(r93 [0]): [298..351]
 a123(r93 [1]): [297..351]
 a124(r92): [300..301]
 a125(r173): [302..303]
 a126(r189): [304..307]
 a127(r172): [304..309]
 a128(r188): [312..313]
 a129(r91): [314..315]
 a130(r187): [316..317]
 a131(r89 [0]): [320..351]
 a131(r89 [1]): [319..351]
 a132(r88): [322..323]
 a133(r168): [324..325]
 a134(r186): [326..329]
 a135(r167): [326..331]
 a136(r185): [334..335]
 a137(r87): [336..337]
 a138(r184): [338..339]
Compressing live ranges: from 352 to 212 - 60%
Ranges after the compression:
 a0(r183): [0..1]
 a1(r182): [2..3]
 a2(r166): [4..5]
 a3(r165): [6..7]
 a4(r155): [6..27]
 a5(r164): [8..9]
 a6(r158): [8..21]
 a7(r163): [10..11]
 a8(r162): [12..13]
 a9(r161): [12..15]
 a10(r237): [14..15]
 a11(r160): [16..17]
 a12(r159): [18..19]
 a13(r236): [20..21]
 a14(r157): [22..23]
 a15(r156): [24..25]
 a16(r235): [24..25]
 a17(r234): [26..27]
 a18(r154): [28..29]
 a19(r147): [28..43]
 a20(r153): [30..31]
 a21(r149): [30..39]
 a22(r233): [32..33]
 a23(r152): [32..33]
 a24(r151): [34..35]
 a25(r150): [36..37]
 a26(r232): [38..39]
 a27(r148): [40..41]
 a28(r231): [42..43]
 a29(r146): [44..45]
 a30(r230): [46..47]
 a31(r145): [46..47]
 a32(r144): [48..49]
 a33(r229): [50..51]
 a34(r228): [52..53]
 a35(r143): [54..55]
 a36(r139): [54..63]
 a37(r227): [56..57]
 a38(r142): [56..57]
 a39(r141): [58..59]
 a40(r140): [60..61]
 a41(r226): [62..63]
 a42(r138): [64..65]
 a43(r135): [64..71]
 a44(r225): [66..67]
 a45(r137): [66..67]
 a46(r136): [68..69]
 a47(r224): [70..71]
 a48(r134): [72..73]
 a49(r223): [74..75]
 a50(r133): [74..75]
 a51(r132): [76..77]
 a52(r222): [78..79]
 a53(r221): [80..81]
 a54(r131): [82..83]
 a55(r127): [82..91]
 a56(r220): [84..85]
 a57(r130): [84..85]
 a58(r129): [86..87]
 a59(r128): [88..89]
 a60(r219): [90..91]
 a61(r126): [92..93]
 a62(r123): [92..99]
 a63(r218): [94..95]
 a64(r125): [94..95]
 a65(r124): [96..97]
 a66(r217): [98..99]
 a67(r122): [100..101]
 a68(r216): [102..103]
 a69(r121): [102..103]
 a70(r120): [104..105]
 a71(r119): [106..107]
 a72(r215): [108..109]
 a73(r214): [110..111]
 a74(r118): [112..113]
 a75(r117): [114..115]
 a76(r116): [116..117]
 a77(r112): [116..125]
 a78(r213): [118..119]
 a79(r115): [118..119]
 a80(r114): [120..121]
 a81(r113): [122..123]
 a82(r212): [124..125]
 a83(r211): [126..127]
 a84(r210): [128..129]
 a85(r111): [130..131]
 a86(r107): [130..139]
 a87(r209): [132..133]
 a88(r110): [132..133]
 a89(r109): [134..135]
 a90(r108): [136..137]
 a91(r208): [138..139]
 a92(r207): [140..141]
 a93(r106): [140..141]
 a94(r105): [142..143]
 a95(r206): [144..145]
 a96(r205): [150..151]
 a97(r204): [152..153]
 a98(r101): [154..161]
 a99(r104): [154..155]
 a100(r203): [156..157]
 a101(r103): [156..157]
 a102(r102): [158..159]
 a103(r202): [160..161]
 a104(r201): [162..163]
 a105(r200): [164..165]
 a106(r199): [166..167]
 a107(r100): [168..169]
 a108(r198): [168..169]
 a109(r197): [170..171]
 a110(r196): [170..171]
 a111(r99): [146..147]
 a112(r195): [148..149]
 a113(r194): [172..173]
 a114(r193): [174..175]
 a115(r97 [0]): [176..211]
 a115(r97 [1]): [176..211]
 a116(r96): [176..177]
 a117(r178): [178..179]
 a118(r192): [180..181]
 a119(r177): [180..181]
 a120(r191): [182..183]
 a121(r95): [184..185]
 a122(r190): [186..187]
 a123(r93 [0]): [188..211]
 a123(r93 [1]): [188..211]
 a124(r92): [188..189]
 a125(r173): [190..191]
 a126(r189): [192..193]
 a127(r172): [192..193]
 a128(r188): [194..195]
 a129(r91): [196..197]
 a130(r187): [198..199]
 a131(r89 [0]): [200..211]
 a131(r89 [1]): [200..211]
 a132(r88): [200..201]
 a133(r168): [202..203]
 a134(r186): [204..205]
 a135(r167): [204..205]
 a136(r185): [206..207]
 a137(r87): [208..209]
 a138(r184): [210..211]
  regions=1, blocks=10, points=212
    allocnos=139 (big 3), copies=0, conflicts=0, ranges=142
Disposition:
  137:r87  l0     0  132:r88  l0     0  131:r89  l0    42  129:r91  l0     0
  124:r92  l0     0  123:r93  l0    40  121:r95  l0     0  116:r96  l0     0
  115:r97  l0    38  111:r99  l0     0  107:r100 l0     0   98:r101 l0    22
  102:r102 l0     0  101:r103 l0     1   99:r104 l0    21   94:r105 l0     0
   93:r106 l0     1   86:r107 l0    21   90:r108 l0     0   89:r109 l0     0
   88:r110 l0     1   85:r111 l0    22   77:r112 l0    21   81:r113 l0     0
   80:r114 l0     0   79:r115 l0     1   76:r116 l0    22   75:r117 l0    21
   74:r118 l0    21   71:r119 l0     0   70:r120 l0     0   69:r121 l0     1
   67:r122 l0    21   62:r123 l0    21   65:r124 l0     0   64:r125 l0     1
   61:r126 l0    22   55:r127 l0    21   59:r128 l0     0   58:r129 l0     0
   57:r130 l0     1   54:r131 l0    22   51:r132 l0     0   50:r133 l0     1
   48:r134 l0    21   43:r135 l0    21   46:r136 l0     0   45:r137 l0     1
   42:r138 l0    22   36:r139 l0    21   40:r140 l0     0   39:r141 l0     0
   38:r142 l0     1   35:r143 l0    22   32:r144 l0     0   31:r145 l0     1
   29:r146 l0    21   19:r147 l0    22   27:r148 l0    21   21:r149 l0    23
   25:r150 l0     0   24:r151 l0     0   23:r152 l0     1   20:r153 l0    21
   18:r154 l0    21    4:r155 l0    22   15:r156 l0    21   14:r157 l0    21
    6:r158 l0    24   12:r159 l0    21   11:r160 l0    21    9:r161 l0    21
    8:r162 l0    23    7:r163 l0    21    5:r164 l0    21    3:r165 l0    21
    2:r166 l0    21  135:r167 l0     0  133:r168 l0     0  127:r172 l0     0
  125:r173 l0     0  119:r177 l0     0  117:r178 l0     0    1:r182 l0    21
    0:r183 l0    21  138:r184 l0     0  136:r185 l0     0  134:r186 l0     1
  130:r187 l0     0  128:r188 l0     0  126:r189 l0     1  122:r190 l0     0
  120:r191 l0     0  118:r192 l0     1  114:r193 l0     0  113:r194 l0     0
  112:r195 l0     0  110:r196 l0     1  109:r197 l0     0  108:r198 l0     1
  106:r199 l0     0  105:r200 l0     0  104:r201 l0     0  103:r202 l0     0
  100:r203 l0     0   97:r204 l0     0   96:r205 l0     0   95:r206 l0     0
   92:r207 l0     0   91:r208 l0     0   87:r209 l0     0   84:r210 l0    21
   83:r211 l0     0   82:r212 l0     0   78:r213 l0     0   73:r214 l0    21
   72:r215 l0     0   68:r216 l0     0   66:r217 l0     0   63:r218 l0     0
   60:r219 l0     0   56:r220 l0     0   53:r221 l0    21   52:r222 l0     0
   49:r223 l0     0   47:r224 l0     0   44:r225 l0     0   41:r226 l0     0
   37:r227 l0     0   34:r228 l0    21   33:r229 l0     0   30:r230 l0     0
   28:r231 l0    21   26:r232 l0     0   22:r233 l0     0   17:r234 l0    21
   16:r235 l0    23   13:r236 l0    21   10:r237 l0    23
+++Costs: overall 3, reg 3, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


seval

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame] 21 [xmm0]
;;  regs ever live 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 17 [flags] 21 [xmm0] 37 [r8]
;;  ref usage 	r0={1d} r1={1d,1u} r2={1d,1u} r4={1d,1u} r5={1d,1u} r6={1d,9u} r7={1d,9u} r16={1d,8u} r17={28d,5u} r20={1d,79u,10e} r21={2d,2u} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d,1u} r38={1d} r87={1d,1u} r88={1d,1u} r89={2d,2u} r91={1d,1u} r92={1d,1u} r93={2d,2u} r95={1d,1u} r96={1d,1u} r97={2d,2u} r99={1d,1u} r100={1d,2u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,1u} r127={1d,1u} r128={1d,1u} r129={1d,1u} r130={1d,1u} r131={1d,1u} r132={1d,1u} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d,1u} r165={1d,1u} r166={1d,1u} r167={1d,2u} r168={1d,1u} r172={1d,2u} r173={1d,1u} r177={1d,2u} r178={1d,1u} r182={1d,1u} r183={1d,1u} r184={1d,1u} r185={1d,1u} r186={1d,1u} r187={1d,1u} r188={1d,1u} r189={1d,1u} r190={1d,1u} r191={1d,1u} r192={1d,1u} r193={1d,1u} r194={1d,1u} r195={1d,1u} r196={1d,1u} r197={1d,1u} r198={1d,1u} r199={1d,1u} r200={1d,1u} r201={1d,1u} r202={1d,1u} r203={1d,1u} r204={1d,1u} r205={1d,1u} r206={1d,1u} r207={1d,1u} r208={1d,1u} r209={1d,1u} r210={1d,1u} r211={1d,1u} r212={1d,1u} r213={1d,1u} r214={1d,1u} r215={1d,1u} r216={1d,1u} r217={1d,1u} r218={1d,1u} r219={1d,1u} r220={1d,1u} r221={1d,1u} r222={1d,1u} r223={1d,1u} r224={1d,1u} r225={1d,1u} r226={1d,1u} r227={1d,1u} r228={1d,1u} r229={1d,1u} r230={1d,1u} r231={1d,1u} r232={1d,1u} r233={1d,1u} r234={1d,1u} r235={1d,1u} r236={1d,1u} r237={1d,1u} 
;;    total ref usage 463{190d,263u,10e} in 172{172 regular + 0 call} insns.
(note 1 0 8 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 89 93 97
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 89 93 97
;; lr  def 	 17 [flags] 87 88 91 92 95 96 167 168 172 173 177 178 184 185 186 187 188 189 190 191 192 193 194
(note 8 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 8 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [4 ss+0 S8 A64])
        (reg:DI 5 di [ ss ])) "../src/spline.f":313 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ ss ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [5 x+0 S8 A64])
        (reg:DI 4 si [ x ])) "../src/spline.f":313 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ x ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -88 [0xffffffffffffffa8])) [5 xs+0 S8 A64])
        (reg:DI 1 dx [ xs ])) "../src/spline.f":313 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ xs ])
        (nil)))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [5 s+0 S8 A64])
        (reg:DI 2 cx [ s ])) "../src/spline.f":313 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [ s ])
        (nil)))
(insn 6 5 7 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -104 [0xffffffffffffff98])) [6 n+0 S8 A64])
        (reg:DI 37 r8 [ n ])) "../src/spline.f":313 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 37 r8 [ n ])
        (nil)))
(note 7 6 10 2 NOTE_INSN_FUNCTION_BEG)
(insn 10 7 11 2 (set (reg/f:DI 184)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -104 [0xffffffffffffff98])) [6 n+0 S8 A64])) "../src/spline.f":313 81 {*movdi_internal}
     (nil))
(insn 11 10 12 2 (set (reg:SI 87 [ _1 ])
        (mem:SI (reg/f:DI 184) [1 *n_86(D)+0 S4 A32])) "../src/spline.f":313 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 184)
        (nil)))
(insn 12 11 13 2 (set (reg:DI 185)
        (sign_extend:DI (reg:SI 87 [ _1 ]))) "../src/spline.f":313 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 87 [ _1 ])
        (nil)))
(insn 13 12 14 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 ubound.12+0 S8 A64])
        (reg:DI 185)) "../src/spline.f":313 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 185)
        (nil)))
(insn 14 13 16 2 (set (reg:DI 167 [ size.13_88 ])
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 ubound.12+0 S8 A64])) "../src/spline.f":313 81 {*movdi_internal}
     (nil))
(insn 16 14 15 2 (set (reg:DI 186)
        (const_int 0 [0])) "../src/spline.f":313 81 {*movdi_internal}
     (nil))
(insn 15 16 17 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 167 [ size.13_88 ])
            (const_int 0 [0]))) "../src/spline.f":313 4 {*cmpdi_ccno_1}
     (nil))
(insn 17 15 19 2 (set (reg:DI 168 [ size.13_89 ])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 167 [ size.13_88 ])
            (reg:DI 186))) "../src/spline.f":313 967 {*movdicc_noc}
     (expr_list:REG_DEAD (reg:DI 186)
        (expr_list:REG_DEAD (reg:DI 167 [ size.13_88 ])
            (expr_list:REG_DEAD (reg:CCGOC 17 flags)
                (nil)))))
(insn 19 17 20 2 (set (reg:DI 88 [ size.157_2 ])
        (reg:DI 168 [ size.13_89 ])) "../src/spline.f":313 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 168 [ size.13_89 ])
        (nil)))
(insn 20 19 21 2 (set (subreg:DI (reg:TI 89 [ _3 ]) 0)
        (reg:DI 88 [ size.157_2 ])) "../src/spline.f":313 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88 [ size.157_2 ])
        (nil)))
(insn 21 20 25 2 (set (subreg:DI (reg:TI 89 [ _3 ]) 8)
        (const_int 0 [0])) "../src/spline.f":313 81 {*movdi_internal}
     (expr_list:REG_UNUSED (reg:TI 89 [ _3 ])
        (nil)))
(insn 25 21 26 2 (set (reg/f:DI 187)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -104 [0xffffffffffffff98])) [6 n+0 S8 A64])) "../src/spline.f":313 81 {*movdi_internal}
     (nil))
(insn 26 25 27 2 (set (reg:SI 91 [ _5 ])
        (mem:SI (reg/f:DI 187) [1 *n_86(D)+0 S4 A32])) "../src/spline.f":313 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 187)
        (nil)))
(insn 27 26 28 2 (set (reg:DI 188)
        (sign_extend:DI (reg:SI 91 [ _5 ]))) "../src/spline.f":313 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 91 [ _5 ])
        (nil)))
(insn 28 27 29 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [2 ubound.16+0 S8 A64])
        (reg:DI 188)) "../src/spline.f":313 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 188)
        (nil)))
(insn 29 28 31 2 (set (reg:DI 172 [ size.17_94 ])
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [2 ubound.16+0 S8 A64])) "../src/spline.f":313 81 {*movdi_internal}
     (nil))
(insn 31 29 30 2 (set (reg:DI 189)
        (const_int 0 [0])) "../src/spline.f":313 81 {*movdi_internal}
     (nil))
(insn 30 31 32 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 172 [ size.17_94 ])
            (const_int 0 [0]))) "../src/spline.f":313 4 {*cmpdi_ccno_1}
     (nil))
(insn 32 30 34 2 (set (reg:DI 173 [ size.17_95 ])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 172 [ size.17_94 ])
            (reg:DI 189))) "../src/spline.f":313 967 {*movdicc_noc}
     (expr_list:REG_DEAD (reg:DI 189)
        (expr_list:REG_DEAD (reg:DI 172 [ size.17_94 ])
            (expr_list:REG_DEAD (reg:CCGOC 17 flags)
                (nil)))))
(insn 34 32 35 2 (set (reg:DI 92 [ size.159_6 ])
        (reg:DI 173 [ size.17_95 ])) "../src/spline.f":313 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 173 [ size.17_95 ])
        (nil)))
(insn 35 34 36 2 (set (subreg:DI (reg:TI 93 [ _7 ]) 0)
        (reg:DI 92 [ size.159_6 ])) "../src/spline.f":313 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 92 [ size.159_6 ])
        (nil)))
(insn 36 35 40 2 (set (subreg:DI (reg:TI 93 [ _7 ]) 8)
        (const_int 0 [0])) "../src/spline.f":313 81 {*movdi_internal}
     (expr_list:REG_UNUSED (reg:TI 93 [ _7 ])
        (nil)))
(insn 40 36 41 2 (set (reg/f:DI 190)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -104 [0xffffffffffffff98])) [6 n+0 S8 A64])) "../src/spline.f":313 81 {*movdi_internal}
     (nil))
(insn 41 40 42 2 (set (reg:SI 95 [ _9 ])
        (mem:SI (reg/f:DI 190) [1 *n_86(D)+0 S4 A32])) "../src/spline.f":313 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 190)
        (nil)))
(insn 42 41 43 2 (set (reg:DI 191)
        (sign_extend:DI (reg:SI 95 [ _9 ]))) "../src/spline.f":313 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 95 [ _9 ])
        (nil)))
(insn 43 42 44 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [2 ubound.14+0 S8 A64])
        (reg:DI 191)) "../src/spline.f":313 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 191)
        (nil)))
(insn 44 43 46 2 (set (reg:DI 177 [ size.15_100 ])
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [2 ubound.14+0 S8 A64])) "../src/spline.f":313 81 {*movdi_internal}
     (nil))
(insn 46 44 45 2 (set (reg:DI 192)
        (const_int 0 [0])) "../src/spline.f":313 81 {*movdi_internal}
     (nil))
(insn 45 46 47 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 177 [ size.15_100 ])
            (const_int 0 [0]))) "../src/spline.f":313 4 {*cmpdi_ccno_1}
     (nil))
(insn 47 45 49 2 (set (reg:DI 178 [ size.15_101 ])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 177 [ size.15_100 ])
            (reg:DI 192))) "../src/spline.f":313 967 {*movdicc_noc}
     (expr_list:REG_DEAD (reg:DI 192)
        (expr_list:REG_DEAD (reg:DI 177 [ size.15_100 ])
            (expr_list:REG_DEAD (reg:CCGOC 17 flags)
                (nil)))))
(insn 49 47 50 2 (set (reg:DI 96 [ size.161_10 ])
        (reg:DI 178 [ size.15_101 ])) "../src/spline.f":313 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 178 [ size.15_101 ])
        (nil)))
(insn 50 49 51 2 (set (subreg:DI (reg:TI 97 [ _11 ]) 0)
        (reg:DI 96 [ size.161_10 ])) "../src/spline.f":313 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 96 [ size.161_10 ])
        (nil)))
(insn 51 50 55 2 (set (subreg:DI (reg:TI 97 [ _11 ]) 8)
        (const_int 0 [0])) "../src/spline.f":313 81 {*movdi_internal}
     (expr_list:REG_UNUSED (reg:TI 97 [ _11 ])
        (nil)))
(insn 55 51 56 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 ilow+0 S4 A32])
        (const_int 1 [0x1])) "../src/spline.f":319 82 {*movsi_internal}
     (nil))
(insn 56 55 57 2 (set (reg/f:DI 193)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -104 [0xffffffffffffff98])) [6 n+0 S8 A64])) "../src/spline.f":320 81 {*movdi_internal}
     (nil))
(insn 57 56 58 2 (set (reg:SI 194)
        (mem:SI (reg/f:DI 193) [1 *n_86(D)+0 S4 A32])) "../src/spline.f":320 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 193)
        (nil)))
(insn 58 57 95 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
        (reg:SI 194)) "../src/spline.f":320 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 194)
        (nil)))
;;  succ:       3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 (FALLTHRU)
;;              7 [100.0%] 
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 99 195
(code_label 95 58 59 3 26 (nil) [1 uses])
(note 59 95 60 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 60 59 61 3 (set (reg:SI 195)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":322 82 {*movsi_internal}
     (nil))
(insn 61 60 62 3 (parallel [
            (set (reg:SI 99 [ _13 ])
                (minus:SI (reg:SI 195)
                    (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [1 ilow+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":322 273 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 195)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [1 ilow+0 S4 A32]))
                (nil)))))
(insn 62 61 63 3 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 99 [ _13 ])
            (const_int 1 [0x1]))) "../src/spline.f":322 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 99 [ _13 ])
        (nil)))
(jump_insn 63 62 64 3 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 218)
            (pc))) "../src/spline.f":322 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 218)
;;  succ:       9
;;              4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 100 101 102 103 104 196 197 198 199 200 201 202 203
(note 64 63 65 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 65 64 66 4 (set (reg:SI 196)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":324 82 {*movsi_internal}
     (nil))
(insn 66 65 67 4 (set (reg:SI 197)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 ilow+0 S4 A32])) "../src/spline.f":324 82 {*movsi_internal}
     (nil))
(insn 67 66 68 4 (parallel [
            (set (reg:SI 100 [ _14 ])
                (plus:SI (reg:SI 196)
                    (reg:SI 197)))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":324 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 197)
        (expr_list:REG_DEAD (reg:SI 196)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                                (const_int -8 [0xfffffffffffffff8])) [1 ilow+0 S4 A32]))
                    (nil))))))
(insn 68 67 69 4 (parallel [
            (set (reg:SI 198)
                (lshiftrt:SI (reg:SI 100 [ _14 ])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":324 544 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 69 68 70 4 (parallel [
            (set (reg:SI 199)
                (plus:SI (reg:SI 198)
                    (reg:SI 100 [ _14 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":324 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 198)
        (expr_list:REG_DEAD (reg:SI 100 [ _14 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 70 69 71 4 (parallel [
            (set (reg:SI 200)
                (ashiftrt:SI (reg:SI 199)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":324 545 {*ashrsi3_1}
     (expr_list:REG_DEAD (reg:SI 199)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 71 70 72 4 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -36 [0xffffffffffffffdc])) [1 imid+0 S4 A32])
        (reg:SI 200)) "../src/spline.f":324 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 200)
        (nil)))
(insn 72 71 73 4 (set (reg/f:DI 201)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [4 ss+0 S8 A64])) "../src/spline.f":325 81 {*movdi_internal}
     (nil))
(insn 73 72 74 4 (set (reg:SF 101 [ _15 ])
        (mem:SF (reg/f:DI 201) [3 *ss_108(D)+0 S4 A32])) "../src/spline.f":325 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 201)
        (nil)))
(insn 74 73 75 4 (set (reg:SI 202)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -36 [0xffffffffffffffdc])) [1 imid+0 S4 A32])) "../src/spline.f":325 82 {*movsi_internal}
     (nil))
(insn 75 74 76 4 (set (reg:DI 102 [ _16 ])
        (sign_extend:DI (reg:SI 202))) "../src/spline.f":325 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 202)
        (nil)))
(insn 76 75 77 4 (parallel [
            (set (reg:DI 103 [ _17 ])
                (plus:DI (reg:DI 102 [ _16 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":325 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 102 [ _16 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 77 76 78 4 (set (reg/f:DI 203)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [5 s+0 S8 A64])) "../src/spline.f":325 81 {*movdi_internal}
     (nil))
(insn 78 77 79 4 (set (reg:SF 104 [ _18 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 103 [ _17 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 203)) [3 *s_109(D) S4 A32])) "../src/spline.f":325 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 203)
        (expr_list:REG_DEAD (reg:DI 103 [ _17 ])
            (nil))))
(insn 79 78 80 4 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 104 [ _18 ])
            (reg:SF 101 [ _15 ]))) "../src/spline.f":325 51 {*cmpiusf}
     (expr_list:REG_DEAD (reg:SF 104 [ _18 ])
        (expr_list:REG_DEAD (reg:SF 101 [ _15 ])
            (nil))))
(jump_insn 80 79 84 4 (set (pc)
        (if_then_else (unle (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 212)
            (pc))) "../src/spline.f":325 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil))
 -> 212)
;;  succ:       5 (FALLTHRU)
;;              6
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 204
(note 84 80 85 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 85 84 86 5 (set (reg:SI 204)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -36 [0xffffffffffffffdc])) [1 imid+0 S4 A32])) "../src/spline.f":326 82 {*movsi_internal}
     (nil))
(insn 86 85 213 5 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
        (reg:SI 204)) "../src/spline.f":326 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 204)
        (nil)))
(jump_insn 213 86 214 5 (set (pc)
        (label_ref 93)) 649 {jump}
     (nil)
 -> 93)
;;  succ:       7 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 214 213 212)
;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (RTL)
;;  pred:       4
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 205
(code_label 212 214 90 6 29 (nil) [1 uses])
(note 90 212 91 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 91 90 92 6 (set (reg:SI 205)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -36 [0xffffffffffffffdc])) [1 imid+0 S4 A32])) "../src/spline.f":328 82 {*movsi_internal}
     (nil))
(insn 92 91 93 6 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 ilow+0 S4 A32])
        (reg:SI 205)) "../src/spline.f":328 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 205)
        (nil)))
;;  succ:       7 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 9, flags: (RTL)
;;  pred:       6 (FALLTHRU)
;;              5 [100.0%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 93 92 94 7 25 (nil) [1 uses])
(note 94 93 215 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(jump_insn 215 94 216 7 (set (pc)
        (label_ref 95)) "../src/spline.f":330 649 {jump}
     (nil)
 -> 95)
;;  succ:       3 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 216 215 218)
;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 8, flags: (RTL)
;;  pred:       3
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 218 216 217 9 30 (nil) [1 uses])
(note 217 218 219 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 219 217 98 9 (const_int 0 [0]) "../src/spline.f":330 682 {nop}
     (nil))
;;  succ:       8 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 1, flags: (RTL)
;;  pred:       9 [100.0%]  (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 21 [xmm0] 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 182 183 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237
(code_label 98 219 99 8 22 (nil) [0 uses])
(note 99 98 100 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 100 99 101 8 (set (reg:SI 206)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":332 82 {*movsi_internal}
     (nil))
(insn 101 100 102 8 (set (reg:DI 105 [ _19 ])
        (sign_extend:DI (reg:SI 206))) "../src/spline.f":332 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 206)
        (nil)))
(insn 102 101 103 8 (parallel [
            (set (reg:DI 106 [ _20 ])
                (plus:DI (reg:DI 105 [ _19 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":332 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 105 [ _19 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 103 102 104 8 (set (reg/f:DI 207)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [5 s+0 S8 A64])) "../src/spline.f":332 81 {*movdi_internal}
     (nil))
(insn 104 103 105 8 (set (reg:SF 107 [ _21 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 106 [ _20 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 207)) [3 *s_109(D) S4 A32])) "../src/spline.f":332 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 207)
        (expr_list:REG_DEAD (reg:DI 106 [ _20 ])
            (nil))))
(insn 105 104 106 8 (set (reg:SI 208)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":332 82 {*movsi_internal}
     (nil))
(insn 106 105 107 8 (parallel [
            (set (reg:SI 108 [ _22 ])
                (plus:SI (reg:SI 208)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":332 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 208)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff]))
                (nil)))))
(insn 107 106 108 8 (set (reg:DI 109 [ _23 ])
        (sign_extend:DI (reg:SI 108 [ _22 ]))) "../src/spline.f":332 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 108 [ _22 ])
        (nil)))
(insn 108 107 109 8 (parallel [
            (set (reg:DI 110 [ _24 ])
                (plus:DI (reg:DI 109 [ _23 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":332 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 109 [ _23 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 109 108 110 8 (set (reg/f:DI 209)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [5 s+0 S8 A64])) "../src/spline.f":332 81 {*movdi_internal}
     (nil))
(insn 110 109 111 8 (set (reg:SF 111 [ _25 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 110 [ _24 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 209)) [3 *s_109(D) S4 A32])) "../src/spline.f":332 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 209)
        (expr_list:REG_DEAD (reg:DI 110 [ _24 ])
            (nil))))
(insn 111 110 112 8 (set (reg:SF 210)
        (minus:SF (reg:SF 107 [ _21 ])
            (reg:SF 111 [ _25 ]))) "../src/spline.f":332 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 111 [ _25 ])
        (expr_list:REG_DEAD (reg:SF 107 [ _21 ])
            (nil))))
(insn 112 111 113 8 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [3 ds+0 S4 A32])
        (reg:SF 210)) "../src/spline.f":332 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 210)
        (nil)))
(insn 113 112 114 8 (set (reg/f:DI 211)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [4 ss+0 S8 A64])) "../src/spline.f":333 81 {*movdi_internal}
     (nil))
(insn 114 113 115 8 (set (reg:SF 112 [ _26 ])
        (mem:SF (reg/f:DI 211) [3 *ss_108(D)+0 S4 A32])) "../src/spline.f":333 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 211)
        (nil)))
(insn 115 114 116 8 (set (reg:SI 212)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":333 82 {*movsi_internal}
     (nil))
(insn 116 115 117 8 (parallel [
            (set (reg:SI 113 [ _27 ])
                (plus:SI (reg:SI 212)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":333 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 212)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff]))
                (nil)))))
(insn 117 116 118 8 (set (reg:DI 114 [ _28 ])
        (sign_extend:DI (reg:SI 113 [ _27 ]))) "../src/spline.f":333 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 113 [ _27 ])
        (nil)))
(insn 118 117 119 8 (parallel [
            (set (reg:DI 115 [ _29 ])
                (plus:DI (reg:DI 114 [ _28 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":333 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 114 [ _28 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 119 118 120 8 (set (reg/f:DI 213)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [5 s+0 S8 A64])) "../src/spline.f":333 81 {*movdi_internal}
     (nil))
(insn 120 119 121 8 (set (reg:SF 116 [ _30 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 115 [ _29 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 213)) [3 *s_109(D) S4 A32])) "../src/spline.f":333 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 213)
        (expr_list:REG_DEAD (reg:DI 115 [ _29 ])
            (nil))))
(insn 121 120 122 8 (set (reg:SF 117 [ _31 ])
        (minus:SF (reg:SF 112 [ _26 ])
            (reg:SF 116 [ _30 ]))) "../src/spline.f":333 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 116 [ _30 ])
        (expr_list:REG_DEAD (reg:SF 112 [ _26 ])
            (nil))))
(insn 122 121 123 8 (set (reg:SF 118 [ _32 ])
        (reg:SF 117 [ _31 ])) "../src/spline.f":333 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 117 [ _31 ])
        (nil)))
(insn 123 122 124 8 (set (reg:SF 214)
        (div:SF (reg:SF 118 [ _32 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -40 [0xffffffffffffffd8])) [3 ds+0 S4 A32]))) "../src/spline.f":333 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 118 [ _32 ])
        (nil)))
(insn 124 123 125 8 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -44 [0xffffffffffffffd4])) [3 t+0 S4 A32])
        (reg:SF 214)) "../src/spline.f":333 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 214)
        (nil)))
(insn 125 124 126 8 (set (reg:SI 215)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":334 82 {*movsi_internal}
     (nil))
(insn 126 125 127 8 (parallel [
            (set (reg:SI 119 [ _33 ])
                (plus:SI (reg:SI 215)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":334 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 215)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff]))
                (nil)))))
(insn 127 126 128 8 (set (reg:DI 120 [ _34 ])
        (sign_extend:DI (reg:SI 119 [ _33 ]))) "../src/spline.f":334 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 119 [ _33 ])
        (nil)))
(insn 128 127 129 8 (parallel [
            (set (reg:DI 121 [ _35 ])
                (plus:DI (reg:DI 120 [ _34 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":334 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 120 [ _34 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 129 128 130 8 (set (reg/f:DI 216)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -88 [0xffffffffffffffa8])) [5 xs+0 S8 A64])) "../src/spline.f":334 81 {*movdi_internal}
     (nil))
(insn 130 129 131 8 (set (reg:SF 122 [ _36 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 121 [ _35 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 216)) [3 *xs_114(D) S4 A32])) "../src/spline.f":334 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 216)
        (expr_list:REG_DEAD (reg:DI 121 [ _35 ])
            (nil))))
(insn 131 130 132 8 (set (reg:SF 123 [ _37 ])
        (mult:SF (reg:SF 122 [ _36 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -40 [0xffffffffffffffd8])) [3 ds+0 S4 A32]))) "../src/spline.f":334 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 122 [ _36 ])
        (nil)))
(insn 132 131 133 8 (set (reg:SI 217)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":334 82 {*movsi_internal}
     (nil))
(insn 133 132 134 8 (set (reg:DI 124 [ _38 ])
        (sign_extend:DI (reg:SI 217))) "../src/spline.f":334 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 217)
        (nil)))
(insn 134 133 135 8 (parallel [
            (set (reg:DI 125 [ _39 ])
                (plus:DI (reg:DI 124 [ _38 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":334 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 124 [ _38 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 135 134 136 8 (set (reg/f:DI 218)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [5 x+0 S8 A64])) "../src/spline.f":334 81 {*movdi_internal}
     (nil))
(insn 136 135 137 8 (set (reg:SF 126 [ _40 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 125 [ _39 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 218)) [3 *x_115(D) S4 A32])) "../src/spline.f":334 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 218)
        (expr_list:REG_DEAD (reg:DI 125 [ _39 ])
            (nil))))
(insn 137 136 138 8 (set (reg:SF 127 [ _41 ])
        (minus:SF (reg:SF 123 [ _37 ])
            (reg:SF 126 [ _40 ]))) "../src/spline.f":334 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 126 [ _40 ])
        (expr_list:REG_DEAD (reg:SF 123 [ _37 ])
            (nil))))
(insn 138 137 139 8 (set (reg:SI 219)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":334 82 {*movsi_internal}
     (nil))
(insn 139 138 140 8 (parallel [
            (set (reg:SI 128 [ _42 ])
                (plus:SI (reg:SI 219)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":334 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 219)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff]))
                (nil)))))
(insn 140 139 141 8 (set (reg:DI 129 [ _43 ])
        (sign_extend:DI (reg:SI 128 [ _42 ]))) "../src/spline.f":334 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 128 [ _42 ])
        (nil)))
(insn 141 140 142 8 (parallel [
            (set (reg:DI 130 [ _44 ])
                (plus:DI (reg:DI 129 [ _43 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":334 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 129 [ _43 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 142 141 143 8 (set (reg/f:DI 220)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [5 x+0 S8 A64])) "../src/spline.f":334 81 {*movdi_internal}
     (nil))
(insn 143 142 144 8 (set (reg:SF 131 [ _45 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 130 [ _44 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 220)) [3 *x_115(D) S4 A32])) "../src/spline.f":334 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 220)
        (expr_list:REG_DEAD (reg:DI 130 [ _44 ])
            (nil))))
(insn 144 143 145 8 (set (reg:SF 221)
        (plus:SF (reg:SF 127 [ _41 ])
            (reg:SF 131 [ _45 ]))) "../src/spline.f":334 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 131 [ _45 ])
        (expr_list:REG_DEAD (reg:SF 127 [ _41 ])
            (nil))))
(insn 145 144 146 8 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [3 cx1+0 S4 A32])
        (reg:SF 221)) "../src/spline.f":334 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 221)
        (nil)))
(insn 146 145 147 8 (set (reg:SI 222)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":335 82 {*movsi_internal}
     (nil))
(insn 147 146 148 8 (set (reg:DI 132 [ _46 ])
        (sign_extend:DI (reg:SI 222))) "../src/spline.f":335 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 222)
        (nil)))
(insn 148 147 149 8 (parallel [
            (set (reg:DI 133 [ _47 ])
                (plus:DI (reg:DI 132 [ _46 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":335 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 132 [ _46 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 149 148 150 8 (set (reg/f:DI 223)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -88 [0xffffffffffffffa8])) [5 xs+0 S8 A64])) "../src/spline.f":335 81 {*movdi_internal}
     (nil))
(insn 150 149 151 8 (set (reg:SF 134 [ _48 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 133 [ _47 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 223)) [3 *xs_114(D) S4 A32])) "../src/spline.f":335 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 223)
        (expr_list:REG_DEAD (reg:DI 133 [ _47 ])
            (nil))))
(insn 151 150 152 8 (set (reg:SF 135 [ _49 ])
        (mult:SF (reg:SF 134 [ _48 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -40 [0xffffffffffffffd8])) [3 ds+0 S4 A32]))) "../src/spline.f":335 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 134 [ _48 ])
        (nil)))
(insn 152 151 153 8 (set (reg:SI 224)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":335 82 {*movsi_internal}
     (nil))
(insn 153 152 154 8 (set (reg:DI 136 [ _50 ])
        (sign_extend:DI (reg:SI 224))) "../src/spline.f":335 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 224)
        (nil)))
(insn 154 153 155 8 (parallel [
            (set (reg:DI 137 [ _51 ])
                (plus:DI (reg:DI 136 [ _50 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":335 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 136 [ _50 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 155 154 156 8 (set (reg/f:DI 225)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [5 x+0 S8 A64])) "../src/spline.f":335 81 {*movdi_internal}
     (nil))
(insn 156 155 157 8 (set (reg:SF 138 [ _52 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 137 [ _51 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 225)) [3 *x_115(D) S4 A32])) "../src/spline.f":335 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 225)
        (expr_list:REG_DEAD (reg:DI 137 [ _51 ])
            (nil))))
(insn 157 156 158 8 (set (reg:SF 139 [ _53 ])
        (minus:SF (reg:SF 135 [ _49 ])
            (reg:SF 138 [ _52 ]))) "../src/spline.f":335 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 138 [ _52 ])
        (expr_list:REG_DEAD (reg:SF 135 [ _49 ])
            (nil))))
(insn 158 157 159 8 (set (reg:SI 226)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":335 82 {*movsi_internal}
     (nil))
(insn 159 158 160 8 (parallel [
            (set (reg:SI 140 [ _54 ])
                (plus:SI (reg:SI 226)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":335 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 226)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff]))
                (nil)))))
(insn 160 159 161 8 (set (reg:DI 141 [ _55 ])
        (sign_extend:DI (reg:SI 140 [ _54 ]))) "../src/spline.f":335 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 140 [ _54 ])
        (nil)))
(insn 161 160 162 8 (parallel [
            (set (reg:DI 142 [ _56 ])
                (plus:DI (reg:DI 141 [ _55 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":335 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 141 [ _55 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 162 161 163 8 (set (reg/f:DI 227)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [5 x+0 S8 A64])) "../src/spline.f":335 81 {*movdi_internal}
     (nil))
(insn 163 162 164 8 (set (reg:SF 143 [ _57 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 142 [ _56 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 227)) [3 *x_115(D) S4 A32])) "../src/spline.f":335 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 227)
        (expr_list:REG_DEAD (reg:DI 142 [ _56 ])
            (nil))))
(insn 164 163 165 8 (set (reg:SF 228)
        (plus:SF (reg:SF 139 [ _53 ])
            (reg:SF 143 [ _57 ]))) "../src/spline.f":335 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 143 [ _57 ])
        (expr_list:REG_DEAD (reg:SF 139 [ _53 ])
            (nil))))
(insn 165 164 166 8 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -52 [0xffffffffffffffcc])) [3 cx2+0 S4 A32])
        (reg:SF 228)) "../src/spline.f":335 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 228)
        (nil)))
(insn 166 165 167 8 (set (reg:SI 229)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":336 82 {*movsi_internal}
     (nil))
(insn 167 166 168 8 (set (reg:DI 144 [ _58 ])
        (sign_extend:DI (reg:SI 229))) "../src/spline.f":336 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 229)
        (nil)))
(insn 168 167 169 8 (parallel [
            (set (reg:DI 145 [ _59 ])
                (plus:DI (reg:DI 144 [ _58 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":336 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 144 [ _58 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 169 168 170 8 (set (reg/f:DI 230)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [5 x+0 S8 A64])) "../src/spline.f":336 81 {*movdi_internal}
     (nil))
(insn 170 169 171 8 (set (reg:SF 146 [ _60 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 145 [ _59 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 230)) [3 *x_115(D) S4 A32])) "../src/spline.f":336 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 230)
        (expr_list:REG_DEAD (reg:DI 145 [ _59 ])
            (nil))))
(insn 171 170 172 8 (set (reg:SF 147 [ _61 ])
        (mult:SF (reg:SF 146 [ _60 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -44 [0xffffffffffffffd4])) [3 t+0 S4 A32]))) "../src/spline.f":336 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 146 [ _60 ])
        (nil)))
(insn 172 171 173 8 (set (reg:SF 231)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC3") [flags 0x2]) [3  S4 A32])) "../src/spline.f":336 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 173 172 174 8 (set (reg:SF 148 [ _62 ])
        (minus:SF (reg:SF 231)
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -44 [0xffffffffffffffd4])) [3 t+0 S4 A32]))) "../src/spline.f":336 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 231)
        (nil)))
(insn 174 173 175 8 (set (reg:SF 149 [ _63 ])
        (reg:SF 148 [ _62 ])) "../src/spline.f":336 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 148 [ _62 ])
        (nil)))
(insn 175 174 176 8 (set (reg:SI 232)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":336 82 {*movsi_internal}
     (nil))
(insn 176 175 177 8 (parallel [
            (set (reg:SI 150 [ _64 ])
                (plus:SI (reg:SI 232)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":336 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 232)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff]))
                (nil)))))
(insn 177 176 178 8 (set (reg:DI 151 [ _65 ])
        (sign_extend:DI (reg:SI 150 [ _64 ]))) "../src/spline.f":336 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 150 [ _64 ])
        (nil)))
(insn 178 177 179 8 (parallel [
            (set (reg:DI 152 [ _66 ])
                (plus:DI (reg:DI 151 [ _65 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":336 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 151 [ _65 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 179 178 180 8 (set (reg/f:DI 233)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [5 x+0 S8 A64])) "../src/spline.f":336 81 {*movdi_internal}
     (nil))
(insn 180 179 181 8 (set (reg:SF 153 [ _67 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 152 [ _66 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 233)) [3 *x_115(D) S4 A32])) "../src/spline.f":336 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 233)
        (expr_list:REG_DEAD (reg:DI 152 [ _66 ])
            (nil))))
(insn 181 180 182 8 (set (reg:SF 154 [ _68 ])
        (mult:SF (reg:SF 149 [ _63 ])
            (reg:SF 153 [ _67 ]))) "../src/spline.f":336 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 153 [ _67 ])
        (expr_list:REG_DEAD (reg:SF 149 [ _63 ])
            (nil))))
(insn 182 181 183 8 (set (reg:SF 155 [ _69 ])
        (plus:SF (reg:SF 147 [ _61 ])
            (reg:SF 154 [ _68 ]))) "../src/spline.f":336 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 154 [ _68 ])
        (expr_list:REG_DEAD (reg:SF 147 [ _61 ])
            (nil))))
(insn 183 182 184 8 (set (reg:SF 234)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -44 [0xffffffffffffffd4])) [3 t+0 S4 A32])) "../src/spline.f":336 127 {*movsf_internal}
     (nil))
(insn 184 183 185 8 (set (reg:SF 156 [ _70 ])
        (mult:SF (reg:SF 234)
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -44 [0xffffffffffffffd4])) [3 t+0 S4 A32]))) "../src/spline.f":336 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 234)
        (nil)))
(insn 185 184 186 8 (set (reg:SF 235)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -44 [0xffffffffffffffd4])) [3 t+0 S4 A32])) "../src/spline.f":336 127 {*movsf_internal}
     (nil))
(insn 186 185 187 8 (set (reg:SF 157 [ _71 ])
        (minus:SF (reg:SF 235)
            (reg:SF 156 [ _70 ]))) "../src/spline.f":336 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 235)
        (expr_list:REG_DEAD (reg:SF 156 [ _70 ])
            (nil))))
(insn 187 186 188 8 (set (reg:SF 158 [ _72 ])
        (reg:SF 157 [ _71 ])) "../src/spline.f":336 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 157 [ _71 ])
        (nil)))
(insn 188 187 189 8 (set (reg:SF 236)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC3") [flags 0x2]) [3  S4 A32])) "../src/spline.f":336 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 189 188 190 8 (set (reg:SF 159 [ _73 ])
        (minus:SF (reg:SF 236)
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -44 [0xffffffffffffffd4])) [3 t+0 S4 A32]))) "../src/spline.f":336 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 236)
        (nil)))
(insn 190 189 191 8 (set (reg:SF 160 [ _74 ])
        (reg:SF 159 [ _73 ])) "../src/spline.f":336 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 159 [ _73 ])
        (nil)))
(insn 191 190 192 8 (set (reg:SF 161 [ _75 ])
        (mult:SF (reg:SF 160 [ _74 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -48 [0xffffffffffffffd0])) [3 cx1+0 S4 A32]))) "../src/spline.f":336 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 160 [ _74 ])
        (nil)))
(insn 192 191 193 8 (set (reg:SF 237)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -44 [0xffffffffffffffd4])) [3 t+0 S4 A32])) "../src/spline.f":336 127 {*movsf_internal}
     (nil))
(insn 193 192 194 8 (set (reg:SF 162 [ _76 ])
        (mult:SF (reg:SF 237)
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -52 [0xffffffffffffffcc])) [3 cx2+0 S4 A32]))) "../src/spline.f":336 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 237)
        (nil)))
(insn 194 193 195 8 (set (reg:SF 163 [ _77 ])
        (minus:SF (reg:SF 161 [ _75 ])
            (reg:SF 162 [ _76 ]))) "../src/spline.f":336 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 162 [ _76 ])
        (expr_list:REG_DEAD (reg:SF 161 [ _75 ])
            (nil))))
(insn 195 194 196 8 (set (reg:SF 164 [ _78 ])
        (reg:SF 163 [ _77 ])) "../src/spline.f":336 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 163 [ _77 ])
        (nil)))
(insn 196 195 197 8 (set (reg:SF 165 [ _79 ])
        (mult:SF (reg:SF 158 [ _72 ])
            (reg:SF 164 [ _78 ]))) "../src/spline.f":336 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 164 [ _78 ])
        (expr_list:REG_DEAD (reg:SF 158 [ _72 ])
            (nil))))
(insn 197 196 198 8 (set (reg:SF 166 [ _80 ])
        (plus:SF (reg:SF 155 [ _69 ])
            (reg:SF 165 [ _79 ]))) "../src/spline.f":336 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 165 [ _79 ])
        (expr_list:REG_DEAD (reg:SF 155 [ _69 ])
            (nil))))
(insn 198 197 199 8 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [3 __result_seval+0 S4 A64])
        (reg:SF 166 [ _80 ])) "../src/spline.f":336 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 166 [ _80 ])
        (nil)))
(insn 199 198 202 8 (set (reg:SF 182 [ _119 ])
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [3 __result_seval+0 S4 A64])) "../src/spline.f":337 127 {*movsf_internal}
     (nil))
(insn 202 199 206 8 (set (reg:SF 183 [ <retval> ])
        (reg:SF 182 [ _119 ])) 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 182 [ _119 ])
        (nil)))
(insn 206 202 207 8 (set (reg/i:SF 21 xmm0)
        (reg:SF 183 [ <retval> ])) "../src/spline.f":338 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 183 [ <retval> ])
        (nil)))
(insn 207 206 0 8 (use (reg/i:SF 21 xmm0)) "../src/spline.f":338 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0]


;; Function splind (splind_, funcdef_no=3, decl_uid=3637, cgraph_uid=3, symbol_order=3)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 35 n_edges 50 count 35 (    1)
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 34 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33
;;
;; Loop 1
;;  header 5, latch 6
;;  depth 1, outer 0
;;  nodes: 5 6
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 5 }
;; 5 succs { 34 6 }
;; 6 succs { 5 }
;; 34 succs { 7 }
;; 7 succs { 10 8 }
;; 8 succs { 9 10 }
;; 9 succs { 14 }
;; 10 succs { 13 11 }
;; 11 succs { 12 13 }
;; 12 succs { 14 }
;; 13 succs { 14 }
;; 14 succs { 17 15 }
;; 15 succs { 16 17 }
;; 16 succs { 21 }
;; 17 succs { 20 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 21 }
;; 21 succs { 22 25 }
;; 22 succs { 25 23 }
;; 23 succs { 24 25 }
;; 24 succs { 26 }
;; 25 succs { 26 }
;; 26 succs { 27 30 }
;; 27 succs { 30 28 }
;; 28 succs { 29 30 }
;; 29 succs { 31 }
;; 30 succs { 31 }
;; 31 succs { 32 33 }
;; 32 succs { 33 }
;; 33 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 63.
verify found no changes in insn with uid = 510.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r428: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r428,l0) best DIREG, allocno GENERAL_REGS
    r427: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r427,l0) best SIREG, allocno GENERAL_REGS
    r426: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r426,l0) best DREG, allocno GENERAL_REGS
    r425: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r425,l0) best CREG, allocno GENERAL_REGS
    r424: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r424,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r423: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r423,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r422: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r422,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r421: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r421,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r420: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r420,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r419: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r419,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r418: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r418,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r417: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a27 (r417,l0) best SSE_REGS, allocno SSE_REGS
    r416: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r416,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r415: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a37 (r415,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r414: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a38 (r414,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r413: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a42 (r413,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r412: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a44 (r412,l0) best SSE_REGS, allocno SSE_REGS
    r411: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a47 (r411,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r410: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a49 (r410,l0) best SSE_REGS, allocno SSE_REGS
    r409: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a52 (r409,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r408: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a56 (r408,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r407: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a60 (r407,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r406: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a62 (r406,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r405: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a63 (r405,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r404: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a66 (r404,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r403: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a69 (r403,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r402: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a71 (r402,l0) best SSE_REGS, allocno SSE_REGS
    r401: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a74 (r401,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r400: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a76 (r400,l0) best SSE_REGS, allocno SSE_REGS
    r399: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a79 (r399,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r398: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a80 (r398,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r397: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a87 (r397,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r396: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a91 (r396,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r395: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a96 (r395,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r394: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a97 (r394,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r393: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a101 (r393,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r392: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a106 (r392,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r391: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a111 (r391,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r390: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a112 (r390,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r389: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a116 (r389,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r388: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a118 (r388,l0) best SSE_REGS, allocno SSE_REGS
    r387: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a121 (r387,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r386: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a123 (r386,l0) best SSE_REGS, allocno SSE_REGS
    r385: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a126 (r385,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r384: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a128 (r384,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r383: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a129 (r383,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r382: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a136 (r382,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r381: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a140 (r381,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r380: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a145 (r380,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r379: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a146 (r379,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r378: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a150 (r378,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r377: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a151 (r377,l0) best SSE_REGS, allocno SSE_REGS
    r376: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a156 (r376,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r375: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a161 (r375,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r374: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a162 (r374,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r373: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a166 (r373,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r372: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a168 (r372,l0) best SSE_REGS, allocno SSE_REGS
    r371: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a171 (r371,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r370: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a173 (r370,l0) best SSE_REGS, allocno SSE_REGS
    r369: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a176 (r369,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r368: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a178 (r368,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r367: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a179 (r367,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r366: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a181 (r366,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r365: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a182 (r365,l0) best SSE_REGS, allocno SSE_REGS
    r364: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a183 (r364,l0) best SSE_REGS, allocno SSE_REGS
    r363: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a184 (r363,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r362: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a191 (r362,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r361: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a192 (r361,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r360: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a197 (r360,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r359: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a198 (r359,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r358: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a199 (r358,l0) best SSE_REGS, allocno SSE_REGS
    r357: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a200 (r357,l0) best SSE_REGS, allocno SSE_REGS
    r356: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a202 (r356,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r355: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a203 (r355,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r354: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a210 (r354,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r353: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a211 (r353,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r352: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a212 (r352,l0) best SSE_REGS, allocno SSE_REGS
    r351: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a217 (r351,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r350: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a218 (r350,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r349: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a219 (r349,l0) best SSE_REGS, allocno SSE_REGS
    r348: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a220 (r348,l0) best SSE_REGS, allocno SSE_REGS
    r347: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a222 (r347,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r346: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a223 (r346,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r345: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a226 (r345,l0) best SSE_REGS, allocno SSE_REGS
    r344: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a229 (r344,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r343: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a238 (r343,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r342: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a242 (r342,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r341: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a243 (r341,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r340: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a246 (r340,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r339: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a252 (r339,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r338: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a255 (r338,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r337: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a256 (r337,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r336: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a260 (r336,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r335: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a262 (r335,l0) best SSE_REGS, allocno SSE_REGS
    r334: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a264 (r334,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r333: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a269 (r333,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r332: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a271 (r332,l0) best SSE_REGS, allocno SSE_REGS
    r331: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a273 (r331,l0) best SSE_REGS, allocno SSE_REGS
    r330: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a275 (r330,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r329: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a276 (r329,l0) best SSE_REGS, allocno SSE_REGS
    r328: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a279 (r328,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r327: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a282 (r327,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r326: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a283 (r326,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r325: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a287 (r325,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r324: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a288 (r324,l0) best SSE_REGS, allocno SSE_REGS
    r323: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a291 (r323,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r322: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a295 (r322,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r321: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a296 (r321,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r320: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a299 (r320,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r319: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a303 (r319,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r318: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a305 (r318,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r317: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a309 (r317,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r316: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a311 (r316,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r315: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a313 (r315,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r314: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a317 (r314,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r313: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a319 (r313,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r312: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a321 (r312,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r311: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a325 (r311,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r310: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a327 (r310,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r309: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a329 (r309,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r308: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a301 (r308,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r307: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a300 (r307,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r303: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a308 (r303,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r302: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a310 (r302,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r298: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a316 (r298,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r297: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a318 (r297,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r293: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a324 (r293,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r292: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a326 (r292,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r291: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a58 (r291,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r290: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a54 (r290,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r289: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a7 (r289,l0) best SSE_REGS, allocno SSE_REGS
    r288: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r288,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r287: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r287,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r286: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r286,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r285: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a8 (r285,l0) best SSE_REGS, allocno SSE_REGS
    r284: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a13 (r284,l0) best SSE_REGS, allocno SSE_REGS
    r283: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a14 (r283,l0) best SSE_REGS, allocno SSE_REGS
    r282: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r282,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r281: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r281,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r280: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r280,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r279: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r279,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r278: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a15 (r278,l0) best SSE_REGS, allocno SSE_REGS
    r277: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r277,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r276: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r276,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r275: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r275,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r274: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a9 (r274,l0) best SSE_REGS, allocno SSE_REGS
    r273: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a28 (r273,l0) best SSE_REGS, allocno SSE_REGS
    r272: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a29 (r272,l0) best SSE_REGS, allocno SSE_REGS
    r271: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a30 (r271,l0) best SSE_REGS, allocno SSE_REGS
    r270: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a33 (r270,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r269: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a34 (r269,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r268: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a35 (r268,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r267: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a36 (r267,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r266: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a31 (r266,l0) best SSE_REGS, allocno SSE_REGS
    r265: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a39 (r265,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r264: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a40 (r264,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r263: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a41 (r263,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r262: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a43 (r262,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r261: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a45 (r261,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r260: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a46 (r260,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r259: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a48 (r259,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r258: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a50 (r258,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r257: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a51 (r257,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r256: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a53 (r256,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r255: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a55 (r255,l0) best SSE_REGS, allocno SSE_REGS
    r254: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a57 (r254,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r253: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a59 (r253,l0) best SSE_REGS, allocno SSE_REGS
    r252: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a61 (r252,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r251: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a65 (r251,l0) best SSE_REGS, allocno SSE_REGS
    r250: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a64 (r250,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r249: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a67 (r249,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r248: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a68 (r248,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r247: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a70 (r247,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r246: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a72 (r246,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r245: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a73 (r245,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r244: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a75 (r244,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r243: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a77 (r243,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r242: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a78 (r242,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r241: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a82 (r241,l0) best SSE_REGS, allocno SSE_REGS
    r240: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a81 (r240,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r239: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a85 (r239,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r238: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a86 (r238,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r237: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a83 (r237,l0) best SSE_REGS, allocno SSE_REGS
    r236: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a88 (r236,l0) best SSE_REGS, allocno SSE_REGS
    r235: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a89 (r235,l0) best SSE_REGS, allocno SSE_REGS
    r234: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a92 (r234,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r233: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a93 (r233,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r232: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a94 (r232,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r231: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a95 (r231,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r230: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a90 (r230,l0) best SSE_REGS, allocno SSE_REGS
    r229: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a98 (r229,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r228: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a99 (r228,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r227: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a100 (r227,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r226: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a84 (r226,l0) best SSE_REGS, allocno SSE_REGS
    r225: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a102 (r225,l0) best SSE_REGS, allocno SSE_REGS
    r224: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a103 (r224,l0) best SSE_REGS, allocno SSE_REGS
    r223: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a104 (r223,l0) best SSE_REGS, allocno SSE_REGS
    r222: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a107 (r222,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r221: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a108 (r221,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r220: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a109 (r220,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r219: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a110 (r219,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r218: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a105 (r218,l0) best SSE_REGS, allocno SSE_REGS
    r217: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a113 (r217,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r216: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a114 (r216,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r215: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a115 (r215,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r214: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a117 (r214,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r213: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a119 (r213,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r212: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a120 (r212,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r211: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a122 (r211,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r210: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a124 (r210,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r209: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a125 (r209,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r208: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a127 (r208,l0) best SSE_REGS, allocno SSE_REGS
    r207: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a131 (r207,l0) best SSE_REGS, allocno SSE_REGS
    r206: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a130 (r206,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r205: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a134 (r205,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r204: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a135 (r204,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r203: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a132 (r203,l0) best SSE_REGS, allocno SSE_REGS
    r202: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a137 (r202,l0) best SSE_REGS, allocno SSE_REGS
    r201: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a138 (r201,l0) best SSE_REGS, allocno SSE_REGS
    r200: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a141 (r200,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r199: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a142 (r199,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r198: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a143 (r198,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r197: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a144 (r197,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r196: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a139 (r196,l0) best SSE_REGS, allocno SSE_REGS
    r195: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a147 (r195,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r194: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a148 (r194,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r193: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a149 (r193,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r192: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a133 (r192,l0) best SSE_REGS, allocno SSE_REGS
    r191: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a152 (r191,l0) best SSE_REGS, allocno SSE_REGS
    r190: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a153 (r190,l0) best SSE_REGS, allocno SSE_REGS
    r189: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a154 (r189,l0) best SSE_REGS, allocno SSE_REGS
    r188: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a157 (r188,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r187: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a158 (r187,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r186: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a159 (r186,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r185: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a160 (r185,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r184: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a155 (r184,l0) best SSE_REGS, allocno SSE_REGS
    r183: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a163 (r183,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r182: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a164 (r182,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r181: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a165 (r181,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r180: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a167 (r180,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r179: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a169 (r179,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r178: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a170 (r178,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r177: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a172 (r177,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r176: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a174 (r176,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r175: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a175 (r175,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r174: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a177 (r174,l0) best SSE_REGS, allocno SSE_REGS
    r173: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a180 (r173,l0) best SSE_REGS, allocno SSE_REGS
    r172: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a185 (r172,l0) best SSE_REGS, allocno SSE_REGS
    r171: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a186 (r171,l0) best SSE_REGS, allocno SSE_REGS
    r170: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a188 (r170,l0) best SSE_REGS, allocno SSE_REGS
    r169: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a189 (r169,l0) best SSE_REGS, allocno SSE_REGS
    r168: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a190 (r168,l0) best SSE_REGS, allocno SSE_REGS
    r167: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a187 (r167,l0) best SSE_REGS, allocno SSE_REGS
    r166: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a193 (r166,l0) best SSE_REGS, allocno SSE_REGS
    r165: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a194 (r165,l0) best SSE_REGS, allocno SSE_REGS
    r164: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a195 (r164,l0) best SSE_REGS, allocno SSE_REGS
    r163: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a196 (r163,l0) best SSE_REGS, allocno SSE_REGS
    r162: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a201 (r162,l0) best SSE_REGS, allocno SSE_REGS
    r161: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a204 (r161,l0) best SSE_REGS, allocno SSE_REGS
    r160: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a205 (r160,l0) best SSE_REGS, allocno SSE_REGS
    r159: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a207 (r159,l0) best SSE_REGS, allocno SSE_REGS
    r158: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a208 (r158,l0) best SSE_REGS, allocno SSE_REGS
    r157: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a209 (r157,l0) best SSE_REGS, allocno SSE_REGS
    r156: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a206 (r156,l0) best SSE_REGS, allocno SSE_REGS
    r155: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a213 (r155,l0) best SSE_REGS, allocno SSE_REGS
    r154: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a214 (r154,l0) best SSE_REGS, allocno SSE_REGS
    r153: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a215 (r153,l0) best SSE_REGS, allocno SSE_REGS
    r152: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a216 (r152,l0) best SSE_REGS, allocno SSE_REGS
    r151: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a221 (r151,l0) best SSE_REGS, allocno SSE_REGS
    r150: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a225 (r150,l0) best SSE_REGS, allocno SSE_REGS
    r149: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a224 (r149,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r148: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a228 (r148,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r147: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a227 (r147,l0) best SSE_REGS, allocno SSE_REGS
    r146: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a230 (r146,l0) best SSE_REGS, allocno SSE_REGS
    r145: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a231 (r145,l0) best SSE_REGS, allocno SSE_REGS
    r144: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a233 (r144,l0) best SSE_REGS, allocno SSE_REGS
    r143: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a234 (r143,l0) best SSE_REGS, allocno SSE_REGS
    r142: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a235 (r142,l0) best SSE_REGS, allocno SSE_REGS
    r141: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a236 (r141,l0) best SSE_REGS, allocno SSE_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a239 (r140,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a240 (r139,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a241 (r138,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r137: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a237 (r137,l0) best SSE_REGS, allocno SSE_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a244 (r136,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a245 (r135,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r134: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a232 (r134,l0) best SSE_REGS, allocno SSE_REGS
    r133: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a247 (r133,l0) best SSE_REGS, allocno SSE_REGS
    r132: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a248 (r132,l0) best SSE_REGS, allocno SSE_REGS
    r131: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a249 (r131,l0) best SSE_REGS, allocno SSE_REGS
    r130: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a250 (r130,l0) best SSE_REGS, allocno SSE_REGS
    r129: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a253 (r129,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r128: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a254 (r128,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r127: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a251 (r127,l0) best SSE_REGS, allocno SSE_REGS
    r126: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a257 (r126,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r125: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a258 (r125,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r124: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a259 (r124,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r123: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a261 (r123,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r122: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a263 (r122,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r121: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a266 (r121,l0) best SSE_REGS, allocno SSE_REGS
    r120: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a265 (r120,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a268 (r119,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r118: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a267 (r118,l0) best SSE_REGS, allocno SSE_REGS
    r117: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a270 (r117,l0) best SSE_REGS, allocno SSE_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a272 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a274 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a277 (r114,l0) best SSE_REGS, allocno SSE_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a280 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r112: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a281 (r112,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r111: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a278 (r111,l0) best SSE_REGS, allocno SSE_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a284 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a285 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a286 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a289 (r107,l0) best SSE_REGS, allocno SSE_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a292 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a293 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a294 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a290 (r103,l0) best SSE_REGS, allocno SSE_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a297 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a298 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a302 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a304 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a306 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a307 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a312 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a314 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a315 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a320 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a322 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a323 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a328 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r428,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a1(r427,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a2(r426,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a3(r425,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a4(r424,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a5(r423,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a6(r288,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a7(r289,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a8(r285,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 ALL_REGS:29 MEM:8
  a9(r274,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:16
  a10(r287,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a11(r286,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a12(r422,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a13(r284,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:9
  a14(r283,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a15(r278,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a16(r421,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a17(r282,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a18(r281,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a19(r280,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a20(r279,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a21(r420,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a22(r419,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a23(r277,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a24(r276,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a25(r275,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a26(r418,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a27(r417,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a28(r273,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 ALL_REGS:29 MEM:8
  a29(r272,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:9
  a30(r271,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a31(r266,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a32(r416,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a33(r270,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a34(r269,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a35(r268,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a36(r267,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a37(r415,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a38(r414,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a39(r265,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a40(r264,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a41(r263,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a42(r413,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a43(r262,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a44(r412,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 CLOBBERED_REGS:4 Q_REGS:4 NON_Q_REGS:4 TLS_GOTBASE_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:29 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:12
  a45(r261,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a46(r260,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a47(r411,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a48(r259,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a49(r410,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 CLOBBERED_REGS:4 Q_REGS:4 NON_Q_REGS:4 TLS_GOTBASE_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:29 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:12
  a50(r258,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a51(r257,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a52(r409,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a53(r256,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:32 NO_REX_SSE_REGS:32 SSE_REGS:32 MMX_REGS:52 INT_SSE_REGS:36 ALL_REGS:832 MEM:14
  a54(r290,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:5
  a55(r255,l0) costs: AREG:18 DREG:18 CREG:18 BREG:18 SIREG:18 DIREG:18 AD_REGS:18 CLOBBERED_REGS:18 Q_REGS:18 NON_Q_REGS:18 TLS_GOTBASE_REGS:18 GENERAL_REGS:18 FP_TOP_REG:54 FP_SECOND_REG:54 FLOAT_REGS:54 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:48 FP_TOP_SSE_REGS:56 FP_SECOND_SSE_REGS:56 FLOAT_SSE_REGS:56 FLOAT_INT_REGS:54 INT_SSE_REGS:37 FLOAT_INT_SSE_REGS:56 ALL_REGS:56 MEM:22
  a56(r408,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a57(r254,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:32 NO_REX_SSE_REGS:32 SSE_REGS:32 MMX_REGS:52 INT_SSE_REGS:36 ALL_REGS:832 MEM:14
  a58(r291,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:5
  a59(r253,l0) costs: AREG:18 DREG:18 CREG:18 BREG:18 SIREG:18 DIREG:18 AD_REGS:18 CLOBBERED_REGS:18 Q_REGS:18 NON_Q_REGS:18 TLS_GOTBASE_REGS:18 GENERAL_REGS:18 FP_TOP_REG:54 FP_SECOND_REG:54 FLOAT_REGS:54 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:48 FP_TOP_SSE_REGS:56 FP_SECOND_SSE_REGS:56 FLOAT_SSE_REGS:56 FLOAT_INT_REGS:54 INT_SSE_REGS:37 FLOAT_INT_SSE_REGS:56 ALL_REGS:56 MEM:22
  a60(r407,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a61(r252,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a62(r406,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a63(r405,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a64(r250,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a65(r251,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 CLOBBERED_REGS:4 Q_REGS:4 NON_Q_REGS:4 TLS_GOTBASE_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:29 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:12
  a66(r404,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a67(r249,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a68(r248,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a69(r403,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a70(r247,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a71(r402,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 CLOBBERED_REGS:4 Q_REGS:4 NON_Q_REGS:4 TLS_GOTBASE_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:29 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:12
  a72(r246,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a73(r245,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a74(r401,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a75(r244,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a76(r400,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 CLOBBERED_REGS:4 Q_REGS:4 NON_Q_REGS:4 TLS_GOTBASE_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:29 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:12
  a77(r243,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a78(r242,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a79(r399,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a80(r398,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a81(r240,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a82(r241,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a83(r237,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 ALL_REGS:29 MEM:8
  a84(r226,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:16
  a85(r239,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a86(r238,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a87(r397,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a88(r236,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:9
  a89(r235,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a90(r230,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a91(r396,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a92(r234,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a93(r233,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a94(r232,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a95(r231,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a96(r395,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a97(r394,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a98(r229,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a99(r228,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a100(r227,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a101(r393,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a102(r225,l0) costs: AREG:18 DREG:18 CREG:18 BREG:18 SIREG:18 DIREG:18 AD_REGS:18 CLOBBERED_REGS:18 Q_REGS:18 NON_Q_REGS:18 TLS_GOTBASE_REGS:18 GENERAL_REGS:18 FP_TOP_REG:48 FP_SECOND_REG:48 FLOAT_REGS:48 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:42 FP_TOP_SSE_REGS:50 FP_SECOND_SSE_REGS:50 FLOAT_SSE_REGS:50 FLOAT_INT_REGS:48 INT_SSE_REGS:34 FLOAT_INT_SSE_REGS:50 ALL_REGS:50 MEM:15
  a103(r224,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:9
  a104(r223,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a105(r218,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a106(r392,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a107(r222,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a108(r221,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a109(r220,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a110(r219,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a111(r391,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a112(r390,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a113(r217,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a114(r216,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a115(r215,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a116(r389,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a117(r214,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a118(r388,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 CLOBBERED_REGS:4 Q_REGS:4 NON_Q_REGS:4 TLS_GOTBASE_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:29 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:12
  a119(r213,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a120(r212,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a121(r387,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a122(r211,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a123(r386,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 CLOBBERED_REGS:4 Q_REGS:4 NON_Q_REGS:4 TLS_GOTBASE_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:29 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:12
  a124(r210,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a125(r209,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a126(r385,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a127(r208,l0) costs: AREG:18 DREG:18 CREG:18 BREG:18 SIREG:18 DIREG:18 AD_REGS:18 CLOBBERED_REGS:18 Q_REGS:18 NON_Q_REGS:18 TLS_GOTBASE_REGS:18 GENERAL_REGS:18 FP_TOP_REG:54 FP_SECOND_REG:54 FLOAT_REGS:54 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:48 FP_TOP_SSE_REGS:56 FP_SECOND_SSE_REGS:56 FLOAT_SSE_REGS:56 FLOAT_INT_REGS:54 INT_SSE_REGS:37 FLOAT_INT_SSE_REGS:56 ALL_REGS:56 MEM:22
  a128(r384,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a129(r383,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a130(r206,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a131(r207,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a132(r203,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 ALL_REGS:29 MEM:8
  a133(r192,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:16
  a134(r205,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a135(r204,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a136(r382,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a137(r202,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:9
  a138(r201,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a139(r196,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a140(r381,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a141(r200,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a142(r199,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a143(r198,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a144(r197,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a145(r380,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a146(r379,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a147(r195,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a148(r194,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a149(r193,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a150(r378,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a151(r377,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a152(r191,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 ALL_REGS:29 MEM:8
  a153(r190,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:9
  a154(r189,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a155(r184,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a156(r376,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a157(r188,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a158(r187,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a159(r186,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a160(r185,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a161(r375,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a162(r374,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a163(r183,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a164(r182,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a165(r181,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a166(r373,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a167(r180,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a168(r372,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 CLOBBERED_REGS:4 Q_REGS:4 NON_Q_REGS:4 TLS_GOTBASE_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:29 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:12
  a169(r179,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a170(r178,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a171(r371,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a172(r177,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a173(r370,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 CLOBBERED_REGS:4 Q_REGS:4 NON_Q_REGS:4 TLS_GOTBASE_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:29 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:12
  a174(r176,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a175(r175,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a176(r369,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a177(r174,l0) costs: AREG:18 DREG:18 CREG:18 BREG:18 SIREG:18 DIREG:18 AD_REGS:18 CLOBBERED_REGS:18 Q_REGS:18 NON_Q_REGS:18 TLS_GOTBASE_REGS:18 GENERAL_REGS:18 FP_TOP_REG:54 FP_SECOND_REG:54 FLOAT_REGS:54 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:48 FP_TOP_SSE_REGS:56 FP_SECOND_SSE_REGS:56 FLOAT_SSE_REGS:56 FLOAT_INT_REGS:54 INT_SSE_REGS:37 FLOAT_INT_SSE_REGS:56 ALL_REGS:56 MEM:22
  a178(r368,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a179(r367,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a180(r173,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 CLOBBERED_REGS:4 Q_REGS:4 NON_Q_REGS:4 TLS_GOTBASE_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:29 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:12
  a181(r366,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a182(r365,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 CLOBBERED_REGS:4 Q_REGS:4 NON_Q_REGS:4 TLS_GOTBASE_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:29 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:12
  a183(r364,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 CLOBBERED_REGS:4 Q_REGS:4 NON_Q_REGS:4 TLS_GOTBASE_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:29 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:12
  a184(r363,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a185(r172,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a186(r171,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 ALL_REGS:29 MEM:8
  a187(r167,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:16
  a188(r170,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:9
  a189(r169,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a190(r168,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a191(r362,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a192(r361,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a193(r166,l0) costs: AREG:18 DREG:18 CREG:18 BREG:18 SIREG:18 DIREG:18 AD_REGS:18 CLOBBERED_REGS:18 Q_REGS:18 NON_Q_REGS:18 TLS_GOTBASE_REGS:18 GENERAL_REGS:18 FP_TOP_REG:48 FP_SECOND_REG:48 FLOAT_REGS:48 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:42 FP_TOP_SSE_REGS:50 FP_SECOND_SSE_REGS:50 FLOAT_SSE_REGS:50 FLOAT_INT_REGS:48 INT_SSE_REGS:34 FLOAT_INT_SSE_REGS:50 ALL_REGS:50 MEM:15
  a194(r165,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:9
  a195(r164,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a196(r163,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a197(r360,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a198(r359,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a199(r358,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 CLOBBERED_REGS:4 Q_REGS:4 NON_Q_REGS:4 TLS_GOTBASE_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:29 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:12
  a200(r357,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 CLOBBERED_REGS:4 Q_REGS:4 NON_Q_REGS:4 TLS_GOTBASE_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:29 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:12
  a201(r162,l0) costs: AREG:18 DREG:18 CREG:18 BREG:18 SIREG:18 DIREG:18 AD_REGS:18 CLOBBERED_REGS:18 Q_REGS:18 NON_Q_REGS:18 TLS_GOTBASE_REGS:18 GENERAL_REGS:18 FP_TOP_REG:54 FP_SECOND_REG:54 FLOAT_REGS:54 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:48 FP_TOP_SSE_REGS:56 FP_SECOND_SSE_REGS:56 FLOAT_SSE_REGS:56 FLOAT_INT_REGS:54 INT_SSE_REGS:37 FLOAT_INT_SSE_REGS:56 ALL_REGS:56 MEM:22
  a202(r356,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a203(r355,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a204(r161,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a205(r160,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 ALL_REGS:29 MEM:8
  a206(r156,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:16
  a207(r159,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:9
  a208(r158,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a209(r157,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a210(r354,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a211(r353,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a212(r352,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a213(r155,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 ALL_REGS:29 MEM:8
  a214(r154,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:9
  a215(r153,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a216(r152,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a217(r351,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a218(r350,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a219(r349,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 CLOBBERED_REGS:4 Q_REGS:4 NON_Q_REGS:4 TLS_GOTBASE_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:29 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:12
  a220(r348,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 CLOBBERED_REGS:4 Q_REGS:4 NON_Q_REGS:4 TLS_GOTBASE_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:29 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:12
  a221(r151,l0) costs: AREG:18 DREG:18 CREG:18 BREG:18 SIREG:18 DIREG:18 AD_REGS:18 CLOBBERED_REGS:18 Q_REGS:18 NON_Q_REGS:18 TLS_GOTBASE_REGS:18 GENERAL_REGS:18 FP_TOP_REG:54 FP_SECOND_REG:54 FLOAT_REGS:54 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:48 FP_TOP_SSE_REGS:56 FP_SECOND_SSE_REGS:56 FLOAT_SSE_REGS:56 FLOAT_INT_REGS:54 INT_SSE_REGS:37 FLOAT_INT_SSE_REGS:56 ALL_REGS:56 MEM:22
  a222(r347,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a223(r346,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a224(r149,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a225(r150,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a226(r345,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a227(r147,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 ALL_REGS:29 MEM:8
  a228(r148,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a229(r344,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a230(r146,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:9
  a231(r145,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a232(r134,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a233(r144,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:16
  a234(r143,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 ALL_REGS:29 MEM:9
  a235(r142,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:9
  a236(r141,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a237(r137,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a238(r343,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a239(r140,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a240(r139,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a241(r138,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a242(r342,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a243(r341,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a244(r136,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a245(r135,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a246(r340,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a247(r133,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:16
  a248(r132,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 ALL_REGS:29 MEM:9
  a249(r131,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:9
  a250(r130,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a251(r127,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a252(r339,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a253(r129,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a254(r128,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a255(r338,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a256(r337,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a257(r126,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a258(r125,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a259(r124,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a260(r336,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a261(r123,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a262(r335,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 CLOBBERED_REGS:4 Q_REGS:4 NON_Q_REGS:4 TLS_GOTBASE_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:29 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:12
  a263(r122,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a264(r334,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a265(r120,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a266(r121,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a267(r118,l0) costs: AREG:18 DREG:18 CREG:18 BREG:18 SIREG:18 DIREG:18 AD_REGS:18 CLOBBERED_REGS:18 Q_REGS:18 NON_Q_REGS:18 TLS_GOTBASE_REGS:18 GENERAL_REGS:18 FP_TOP_REG:48 FP_SECOND_REG:48 FLOAT_REGS:48 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:42 FP_TOP_SSE_REGS:50 FP_SECOND_SSE_REGS:50 FLOAT_SSE_REGS:50 FLOAT_INT_REGS:48 INT_SSE_REGS:34 FLOAT_INT_SSE_REGS:50 ALL_REGS:50 MEM:15
  a268(r119,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a269(r333,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a270(r117,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:9
  a271(r332,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a272(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a273(r331,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 CLOBBERED_REGS:4 Q_REGS:4 NON_Q_REGS:4 TLS_GOTBASE_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:29 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:12
  a274(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a275(r330,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a276(r329,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a277(r114,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a278(r111,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a279(r328,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a280(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a281(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a282(r327,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a283(r326,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a284(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a285(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a286(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a287(r325,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a288(r324,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a289(r107,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a290(r103,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a291(r323,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a292(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a293(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a294(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a295(r322,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a296(r321,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a297(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a298(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a299(r320,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a300(r307,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a301(r308,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7
  a302(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a303(r319,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a304(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a305(r318,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a306(r97,l0) costs: AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:2
  a307(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a308(r303,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a309(r317,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a310(r302,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:38 INT_SSE_REGS:27 ALL_REGS:520 MEM:11
  a311(r316,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:8
  a312(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a313(r315,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a314(r93,l0) costs: AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:2
  a315(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a316(r298,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a317(r314,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a318(r297,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:38 INT_SSE_REGS:27 ALL_REGS:520 MEM:11
  a319(r313,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:8
  a320(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a321(r312,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a322(r89,l0) costs: AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:2
  a323(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a324(r293,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a325(r311,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a326(r292,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:38 INT_SSE_REGS:27 ALL_REGS:520 MEM:11
  a327(r310,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:8
  a328(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a329(r309,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8

   Insn 540(l0): point = 0
   Insn 510(l0): point = 2
   Insn 509(l0): point = 4
   Insn 508(l0): point = 6
   Insn 507(l0): point = 8
   Insn 506(l0): point = 10
   Insn 505(l0): point = 12
   Insn 504(l0): point = 14
   Insn 503(l0): point = 16
   Insn 502(l0): point = 18
   Insn 501(l0): point = 20
   Insn 500(l0): point = 22
   Insn 497(l0): point = 25
   Insn 496(l0): point = 27
   Insn 495(l0): point = 29
   Insn 494(l0): point = 31
   Insn 493(l0): point = 33
   Insn 492(l0): point = 35
   Insn 491(l0): point = 37
   Insn 490(l0): point = 39
   Insn 489(l0): point = 41
   Insn 488(l0): point = 43
   Insn 487(l0): point = 45
   Insn 486(l0): point = 47
   Insn 485(l0): point = 49
   Insn 484(l0): point = 51
   Insn 483(l0): point = 53
   Insn 482(l0): point = 55
   Insn 481(l0): point = 57
   Insn 480(l0): point = 59
   Insn 479(l0): point = 61
   Insn 478(l0): point = 63
   Insn 477(l0): point = 65
   Insn 476(l0): point = 67
   Insn 475(l0): point = 69
   Insn 474(l0): point = 71
   Insn 473(l0): point = 73
   Insn 472(l0): point = 75
   Insn 471(l0): point = 77
   Insn 470(l0): point = 79
   Insn 469(l0): point = 81
   Insn 468(l0): point = 83
   Insn 467(l0): point = 85
   Insn 466(l0): point = 87
   Insn 465(l0): point = 89
   Insn 464(l0): point = 91
   Insn 463(l0): point = 93
   Insn 462(l0): point = 95
   Insn 461(l0): point = 97
   Insn 460(l0): point = 99
   Insn 459(l0): point = 101
   Insn 458(l0): point = 103
   Insn 457(l0): point = 105
   Insn 456(l0): point = 107
   Insn 455(l0): point = 109
   Insn 454(l0): point = 111
   Insn 453(l0): point = 113
   Insn 452(l0): point = 115
   Insn 451(l0): point = 117
   Insn 450(l0): point = 119
   Insn 449(l0): point = 121
   Insn 448(l0): point = 123
   Insn 447(l0): point = 125
   Insn 445(l0): point = 128
   Insn 444(l0): point = 130
   Insn 443(l0): point = 132
   Insn 442(l0): point = 134
   Insn 439(l0): point = 137
   Insn 553(l0): point = 140
   Insn 434(l0): point = 142
   Insn 429(l0): point = 145
   Insn 428(l0): point = 147
   Insn 427(l0): point = 150
   Insn 426(l0): point = 152
   Insn 425(l0): point = 154
   Insn 424(l0): point = 156
   Insn 422(l0): point = 159
   Insn 421(l0): point = 161
   Insn 420(l0): point = 163
   Insn 419(l0): point = 165
   Insn 416(l0): point = 168
   Insn 551(l0): point = 171
   Insn 411(l0): point = 173
   Insn 406(l0): point = 176
   Insn 405(l0): point = 178
   Insn 404(l0): point = 181
   Insn 403(l0): point = 183
   Insn 402(l0): point = 185
   Insn 401(l0): point = 187
   Insn 399(l0): point = 190
   Insn 398(l0): point = 192
   Insn 397(l0): point = 194
   Insn 396(l0): point = 196
   Insn 393(l0): point = 199
   Insn 392(l0): point = 201
   Insn 391(l0): point = 203
   Insn 390(l0): point = 205
   Insn 389(l0): point = 207
   Insn 388(l0): point = 209
   Insn 387(l0): point = 211
   Insn 386(l0): point = 213
   Insn 385(l0): point = 215
   Insn 384(l0): point = 217
   Insn 383(l0): point = 219
   Insn 382(l0): point = 221
   Insn 381(l0): point = 223
   Insn 380(l0): point = 225
   Insn 379(l0): point = 227
   Insn 378(l0): point = 229
   Insn 377(l0): point = 231
   Insn 376(l0): point = 233
   Insn 375(l0): point = 235
   Insn 374(l0): point = 237
   Insn 549(l0): point = 240
   Insn 369(l0): point = 242
   Insn 368(l0): point = 244
   Insn 367(l0): point = 246
   Insn 366(l0): point = 248
   Insn 365(l0): point = 250
   Insn 364(l0): point = 252
   Insn 363(l0): point = 254
   Insn 362(l0): point = 256
   Insn 361(l0): point = 258
   Insn 360(l0): point = 260
   Insn 359(l0): point = 262
   Insn 358(l0): point = 264
   Insn 357(l0): point = 266
   Insn 356(l0): point = 268
   Insn 355(l0): point = 270
   Insn 354(l0): point = 272
   Insn 353(l0): point = 274
   Insn 352(l0): point = 276
   Insn 351(l0): point = 278
   Insn 350(l0): point = 280
   Insn 349(l0): point = 282
   Insn 348(l0): point = 284
   Insn 347(l0): point = 286
   Insn 346(l0): point = 288
   Insn 345(l0): point = 290
   Insn 344(l0): point = 292
   Insn 343(l0): point = 294
   Insn 342(l0): point = 296
   Insn 341(l0): point = 298
   Insn 340(l0): point = 300
   Insn 339(l0): point = 302
   Insn 338(l0): point = 304
   Insn 337(l0): point = 306
   Insn 336(l0): point = 308
   Insn 335(l0): point = 310
   Insn 334(l0): point = 312
   Insn 333(l0): point = 314
   Insn 332(l0): point = 316
   Insn 331(l0): point = 318
   Insn 330(l0): point = 320
   Insn 329(l0): point = 322
   Insn 328(l0): point = 324
   Insn 327(l0): point = 326
   Insn 326(l0): point = 328
   Insn 325(l0): point = 330
   Insn 324(l0): point = 332
   Insn 323(l0): point = 334
   Insn 322(l0): point = 336
   Insn 321(l0): point = 338
   Insn 320(l0): point = 340
   Insn 315(l0): point = 343
   Insn 314(l0): point = 345
   Insn 313(l0): point = 348
   Insn 312(l0): point = 350
   Insn 311(l0): point = 352
   Insn 310(l0): point = 354
   Insn 547(l0): point = 357
   Insn 305(l0): point = 359
   Insn 304(l0): point = 361
   Insn 303(l0): point = 363
   Insn 302(l0): point = 365
   Insn 301(l0): point = 367
   Insn 300(l0): point = 369
   Insn 299(l0): point = 371
   Insn 298(l0): point = 373
   Insn 297(l0): point = 375
   Insn 296(l0): point = 377
   Insn 295(l0): point = 379
   Insn 294(l0): point = 381
   Insn 293(l0): point = 383
   Insn 292(l0): point = 385
   Insn 291(l0): point = 387
   Insn 290(l0): point = 389
   Insn 289(l0): point = 391
   Insn 288(l0): point = 393
   Insn 287(l0): point = 395
   Insn 286(l0): point = 397
   Insn 285(l0): point = 399
   Insn 284(l0): point = 401
   Insn 283(l0): point = 403
   Insn 282(l0): point = 405
   Insn 281(l0): point = 407
   Insn 280(l0): point = 409
   Insn 279(l0): point = 411
   Insn 278(l0): point = 413
   Insn 277(l0): point = 415
   Insn 276(l0): point = 417
   Insn 275(l0): point = 419
   Insn 274(l0): point = 421
   Insn 273(l0): point = 423
   Insn 272(l0): point = 425
   Insn 271(l0): point = 427
   Insn 270(l0): point = 429
   Insn 269(l0): point = 431
   Insn 268(l0): point = 433
   Insn 267(l0): point = 435
   Insn 266(l0): point = 437
   Insn 265(l0): point = 439
   Insn 264(l0): point = 441
   Insn 263(l0): point = 443
   Insn 262(l0): point = 445
   Insn 261(l0): point = 447
   Insn 260(l0): point = 449
   Insn 259(l0): point = 451
   Insn 258(l0): point = 453
   Insn 257(l0): point = 455
   Insn 256(l0): point = 457
   Insn 255(l0): point = 459
   Insn 250(l0): point = 462
   Insn 249(l0): point = 464
   Insn 248(l0): point = 467
   Insn 247(l0): point = 469
   Insn 246(l0): point = 471
   Insn 245(l0): point = 473
   Insn 242(l0): point = 476
   Insn 241(l0): point = 478
   Insn 240(l0): point = 480
   Insn 239(l0): point = 482
   Insn 238(l0): point = 484
   Insn 237(l0): point = 486
   Insn 236(l0): point = 488
   Insn 235(l0): point = 490
   Insn 545(l0): point = 493
   Insn 230(l0): point = 495
   Insn 229(l0): point = 497
   Insn 228(l0): point = 499
   Insn 227(l0): point = 501
   Insn 226(l0): point = 503
   Insn 225(l0): point = 505
   Insn 224(l0): point = 507
   Insn 223(l0): point = 509
   Insn 222(l0): point = 511
   Insn 221(l0): point = 513
   Insn 220(l0): point = 515
   Insn 219(l0): point = 517
   Insn 218(l0): point = 519
   Insn 217(l0): point = 521
   Insn 216(l0): point = 523
   Insn 215(l0): point = 525
   Insn 214(l0): point = 527
   Insn 213(l0): point = 529
   Insn 212(l0): point = 531
   Insn 211(l0): point = 533
   Insn 206(l0): point = 536
   Insn 205(l0): point = 538
   Insn 204(l0): point = 541
   Insn 203(l0): point = 543
   Insn 202(l0): point = 545
   Insn 201(l0): point = 547
   Insn 543(l0): point = 550
   Insn 196(l0): point = 552
   Insn 195(l0): point = 554
   Insn 194(l0): point = 556
   Insn 193(l0): point = 558
   Insn 192(l0): point = 560
   Insn 191(l0): point = 562
   Insn 190(l0): point = 564
   Insn 189(l0): point = 566
   Insn 188(l0): point = 568
   Insn 187(l0): point = 570
   Insn 186(l0): point = 572
   Insn 185(l0): point = 574
   Insn 184(l0): point = 576
   Insn 183(l0): point = 578
   Insn 182(l0): point = 580
   Insn 181(l0): point = 582
   Insn 180(l0): point = 584
   Insn 179(l0): point = 586
   Insn 178(l0): point = 588
   Insn 177(l0): point = 590
   Insn 176(l0): point = 592
   Insn 171(l0): point = 595
   Insn 170(l0): point = 597
   Insn 169(l0): point = 600
   Insn 168(l0): point = 602
   Insn 167(l0): point = 604
   Insn 166(l0): point = 606
   Insn 557(l0): point = 609
   Insn 75(l0): point = 612
   Insn 74(l0): point = 614
   Insn 73(l0): point = 616
   Insn 72(l0): point = 618
   Insn 541(l0): point = 621
   Insn 160(l0): point = 623
   Insn 159(l0): point = 625
   Insn 158(l0): point = 627
   Insn 157(l0): point = 629
   Insn 156(l0): point = 631
   Insn 155(l0): point = 633
   Insn 154(l0): point = 635
   Insn 153(l0): point = 637
   Insn 152(l0): point = 639
   Insn 151(l0): point = 641
   Insn 150(l0): point = 643
   Insn 149(l0): point = 645
   Insn 148(l0): point = 647
   Insn 147(l0): point = 649
   Insn 146(l0): point = 651
   Insn 145(l0): point = 653
   Insn 144(l0): point = 655
   Insn 143(l0): point = 657
   Insn 142(l0): point = 659
   Insn 141(l0): point = 661
   Insn 140(l0): point = 663
   Insn 139(l0): point = 665
   Insn 138(l0): point = 667
   Insn 137(l0): point = 669
   Insn 136(l0): point = 671
   Insn 135(l0): point = 673
   Insn 134(l0): point = 675
   Insn 133(l0): point = 677
   Insn 132(l0): point = 679
   Insn 131(l0): point = 681
   Insn 130(l0): point = 683
   Insn 129(l0): point = 685
   Insn 128(l0): point = 687
   Insn 127(l0): point = 689
   Insn 126(l0): point = 691
   Insn 125(l0): point = 693
   Insn 124(l0): point = 695
   Insn 123(l0): point = 697
   Insn 122(l0): point = 699
   Insn 121(l0): point = 701
   Insn 120(l0): point = 703
   Insn 119(l0): point = 705
   Insn 118(l0): point = 707
   Insn 117(l0): point = 709
   Insn 116(l0): point = 711
   Insn 115(l0): point = 713
   Insn 114(l0): point = 715
   Insn 113(l0): point = 717
   Insn 112(l0): point = 719
   Insn 111(l0): point = 721
   Insn 110(l0): point = 723
   Insn 109(l0): point = 725
   Insn 108(l0): point = 727
   Insn 107(l0): point = 729
   Insn 106(l0): point = 731
   Insn 105(l0): point = 733
   Insn 104(l0): point = 735
   Insn 103(l0): point = 737
   Insn 102(l0): point = 739
   Insn 101(l0): point = 741
   Insn 100(l0): point = 743
   Insn 99(l0): point = 745
   Insn 98(l0): point = 747
   Insn 97(l0): point = 749
   Insn 96(l0): point = 751
   Insn 95(l0): point = 753
   Insn 94(l0): point = 755
   Insn 93(l0): point = 757
   Insn 92(l0): point = 759
   Insn 91(l0): point = 761
   Insn 90(l0): point = 763
   Insn 89(l0): point = 765
   Insn 88(l0): point = 767
   Insn 87(l0): point = 769
   Insn 86(l0): point = 771
   Insn 85(l0): point = 773
   Insn 84(l0): point = 775
   Insn 83(l0): point = 777
   Insn 82(l0): point = 779
   Insn 81(l0): point = 781
   Insn 80(l0): point = 783
   Insn 79(l0): point = 785
   Insn 78(l0): point = 787
   Insn 77(l0): point = 789
   Insn 70(l0): point = 792
   Insn 69(l0): point = 794
   Insn 68(l0): point = 796
   Insn 67(l0): point = 798
   Insn 63(l0): point = 801
   Insn 62(l0): point = 803
   Insn 61(l0): point = 805
   Insn 59(l0): point = 808
   Insn 58(l0): point = 810
   Insn 57(l0): point = 812
   Insn 56(l0): point = 814
   Insn 52(l0): point = 816
   Insn 51(l0): point = 818
   Insn 50(l0): point = 820
   Insn 48(l0): point = 822
   Insn 46(l0): point = 824
   Insn 47(l0): point = 826
   Insn 45(l0): point = 828
   Insn 44(l0): point = 830
   Insn 43(l0): point = 832
   Insn 42(l0): point = 834
   Insn 41(l0): point = 836
   Insn 37(l0): point = 838
   Insn 36(l0): point = 840
   Insn 35(l0): point = 842
   Insn 33(l0): point = 844
   Insn 31(l0): point = 846
   Insn 32(l0): point = 848
   Insn 30(l0): point = 850
   Insn 29(l0): point = 852
   Insn 28(l0): point = 854
   Insn 27(l0): point = 856
   Insn 26(l0): point = 858
   Insn 22(l0): point = 860
   Insn 21(l0): point = 862
   Insn 20(l0): point = 864
   Insn 18(l0): point = 866
   Insn 16(l0): point = 868
   Insn 17(l0): point = 870
   Insn 15(l0): point = 872
   Insn 14(l0): point = 874
   Insn 13(l0): point = 876
   Insn 12(l0): point = 878
   Insn 11(l0): point = 880
   Insn 7(l0): point = 882
   Insn 6(l0): point = 884
   Insn 5(l0): point = 886
   Insn 4(l0): point = 888
   Insn 3(l0): point = 890
   Insn 2(l0): point = 892
 a0(r428): [5..14]
 a1(r427): [7..16]
 a2(r426): [9..18]
 a3(r425): [11..20]
 a4(r424): [13..22]
 a5(r423): [26..27]
 a6(r288): [26..31]
 a7(r289): [26..29]
 a8(r285): [30..39]
 a9(r274): [30..69]
 a10(r287): [32..33]
 a11(r286): [34..35]
 a12(r422): [36..37]
 a13(r284): [40..41]
 a14(r283): [42..43]
 a15(r278): [42..57]
 a16(r421): [44..45]
 a17(r282): [44..47]
 a18(r281): [48..49]
 a19(r280): [50..51]
 a20(r279): [52..53]
 a21(r420): [54..55]
 a22(r419): [58..59]
 a23(r277): [58..61]
 a24(r276): [62..63]
 a25(r275): [64..65]
 a26(r418): [66..67]
 a27(r417): [70..71]
 a28(r273): [70..73]
 a29(r272): [74..75]
 a30(r271): [76..77]
 a31(r266): [76..91]
 a32(r416): [78..79]
 a33(r270): [78..81]
 a34(r269): [82..83]
 a35(r268): [84..85]
 a36(r267): [86..87]
 a37(r415): [88..89]
 a38(r414): [92..93]
 a39(r265): [92..95]
 a40(r264): [96..97]
 a41(r263): [98..99]
 a42(r413): [100..101]
 a43(r262): [104..107]
 a44(r412): [104..105]
 a45(r261): [108..109]
 a46(r260): [110..111]
 a47(r411): [112..113]
 a48(r259): [116..119]
 a49(r410): [116..117]
 a50(r258): [120..121]
 a51(r257): [122..123]
 a52(r409): [124..125]
 a53(r256): [131..134]
 a54(r290): [140..142] [135..137]
 a55(r255): [148..154]
 a56(r408): [155..156]
 a57(r254): [162..165]
 a58(r291): [171..173] [166..168]
 a59(r253): [179..185]
 a60(r407): [186..187]
 a61(r252): [193..194]
 a62(r406): [195..196]
 a63(r405): [200..201]
 a64(r250): [200..207]
 a65(r251): [200..203]
 a66(r404): [204..205]
 a67(r249): [208..209]
 a68(r248): [210..211]
 a69(r403): [212..213]
 a70(r247): [216..219]
 a71(r402): [216..217]
 a72(r246): [220..221]
 a73(r245): [222..223]
 a74(r401): [224..225]
 a75(r244): [228..231]
 a76(r400): [228..229]
 a77(r243): [232..233]
 a78(r242): [234..235]
 a79(r399): [236..237]
 a80(r398): [243..244]
 a81(r240): [243..248]
 a82(r241): [243..246]
 a83(r237): [247..256]
 a84(r226): [247..286]
 a85(r239): [249..250]
 a86(r238): [251..252]
 a87(r397): [253..254]
 a88(r236): [257..258]
 a89(r235): [259..260]
 a90(r230): [259..274]
 a91(r396): [261..262]
 a92(r234): [261..264]
 a93(r233): [265..266]
 a94(r232): [267..268]
 a95(r231): [269..270]
 a96(r395): [271..272]
 a97(r394): [275..276]
 a98(r229): [275..278]
 a99(r228): [279..280]
 a100(r227): [281..282]
 a101(r393): [283..284]
 a102(r225): [287..288]
 a103(r224): [289..290]
 a104(r223): [291..292]
 a105(r218): [291..306]
 a106(r392): [293..294]
 a107(r222): [293..296]
 a108(r221): [297..298]
 a109(r220): [299..300]
 a110(r219): [301..302]
 a111(r391): [303..304]
 a112(r390): [307..308]
 a113(r217): [307..310]
 a114(r216): [311..312]
 a115(r215): [313..314]
 a116(r389): [315..316]
 a117(r214): [319..322]
 a118(r388): [319..320]
 a119(r213): [323..324]
 a120(r212): [325..326]
 a121(r387): [327..328]
 a122(r211): [331..334]
 a123(r386): [331..332]
 a124(r210): [335..336]
 a125(r209): [337..338]
 a126(r385): [339..340]
 a127(r208): [346..352]
 a128(r384): [353..354]
 a129(r383): [360..361]
 a130(r206): [360..365]
 a131(r207): [360..363]
 a132(r203): [364..373]
 a133(r192): [364..403]
 a134(r205): [366..367]
 a135(r204): [368..369]
 a136(r382): [370..371]
 a137(r202): [374..375]
 a138(r201): [376..377]
 a139(r196): [376..391]
 a140(r381): [378..379]
 a141(r200): [378..381]
 a142(r199): [382..383]
 a143(r198): [384..385]
 a144(r197): [386..387]
 a145(r380): [388..389]
 a146(r379): [392..393]
 a147(r195): [392..395]
 a148(r194): [396..397]
 a149(r193): [398..399]
 a150(r378): [400..401]
 a151(r377): [404..405]
 a152(r191): [404..407]
 a153(r190): [408..409]
 a154(r189): [410..411]
 a155(r184): [410..425]
 a156(r376): [412..413]
 a157(r188): [412..415]
 a158(r187): [416..417]
 a159(r186): [418..419]
 a160(r185): [420..421]
 a161(r375): [422..423]
 a162(r374): [426..427]
 a163(r183): [426..429]
 a164(r182): [430..431]
 a165(r181): [432..433]
 a166(r373): [434..435]
 a167(r180): [438..441]
 a168(r372): [438..439]
 a169(r179): [442..443]
 a170(r178): [444..445]
 a171(r371): [446..447]
 a172(r177): [450..453]
 a173(r370): [450..451]
 a174(r176): [454..455]
 a175(r175): [456..457]
 a176(r369): [458..459]
 a177(r174): [465..471]
 a178(r368): [472..473]
 a179(r367): [477..478]
 a180(r173): [477..480]
 a181(r366): [481..482]
 a182(r365): [485..486]
 a183(r364): [489..490]
 a184(r363): [496..497]
 a185(r172): [496..499]
 a186(r171): [500..501]
 a187(r167): [500..513]
 a188(r170): [502..503]
 a189(r169): [504..505]
 a190(r168): [504..509]
 a191(r362): [506..507]
 a192(r361): [510..511]
 a193(r166): [514..515]
 a194(r165): [516..517]
 a195(r164): [518..519]
 a196(r163): [518..523]
 a197(r360): [520..521]
 a198(r359): [524..525]
 a199(r358): [528..529]
 a200(r357): [532..533]
 a201(r162): [539..545]
 a202(r356): [546..547]
 a203(r355): [553..554]
 a204(r161): [553..556]
 a205(r160): [557..558]
 a206(r156): [557..570]
 a207(r159): [559..560]
 a208(r158): [561..562]
 a209(r157): [561..566]
 a210(r354): [563..564]
 a211(r353): [567..568]
 a212(r352): [571..572]
 a213(r155): [571..574]
 a214(r154): [575..576]
 a215(r153): [577..578]
 a216(r152): [577..582]
 a217(r351): [579..580]
 a218(r350): [583..584]
 a219(r349): [587..588]
 a220(r348): [591..592]
 a221(r151): [598..604]
 a222(r347): [605..606]
 a223(r346): [626..627]
 a224(r149): [626..633]
 a225(r150): [626..629]
 a226(r345): [630..631]
 a227(r147): [630..639]
 a228(r148): [634..635]
 a229(r344): [636..637]
 a230(r146): [640..641]
 a231(r145): [642..643]
 a232(r134): [642..673]
 a233(r144): [644..645]
 a234(r143): [646..647]
 a235(r142): [648..649]
 a236(r141): [650..651]
 a237(r137): [650..663]
 a238(r343): [652..653]
 a239(r140): [652..655]
 a240(r139): [656..657]
 a241(r138): [658..659]
 a242(r342): [660..661]
 a243(r341): [664..665]
 a244(r136): [664..667]
 a245(r135): [668..669]
 a246(r340): [670..671]
 a247(r133): [674..675]
 a248(r132): [676..677]
 a249(r131): [678..679]
 a250(r130): [680..681]
 a251(r127): [680..691]
 a252(r339): [682..683]
 a253(r129): [682..685]
 a254(r128): [686..687]
 a255(r338): [688..689]
 a256(r337): [692..693]
 a257(r126): [692..695]
 a258(r125): [696..697]
 a259(r124): [698..699]
 a260(r336): [700..701]
 a261(r123): [704..707]
 a262(r335): [704..705]
 a263(r122): [708..709]
 a264(r334): [710..711]
 a265(r120): [714..717]
 a266(r121): [714..715]
 a267(r118): [716..723]
 a268(r119): [718..719]
 a269(r333): [720..721]
 a270(r117): [724..725]
 a271(r332): [726..727]
 a272(r116): [730..733]
 a273(r331): [730..731]
 a274(r115): [734..735]
 a275(r330): [736..737]
 a276(r329): [740..741]
 a277(r114): [742..743]
 a278(r111): [742..753]
 a279(r328): [744..745]
 a280(r113): [744..747]
 a281(r112): [748..749]
 a282(r327): [750..751]
 a283(r326): [754..755]
 a284(r110): [754..757]
 a285(r109): [758..759]
 a286(r108): [760..761]
 a287(r325): [762..763]
 a288(r324): [766..767]
 a289(r107): [768..769]
 a290(r103): [768..781]
 a291(r323): [770..771]
 a292(r106): [770..773]
 a293(r105): [774..775]
 a294(r104): [776..777]
 a295(r322): [778..779]
 a296(r321): [782..783]
 a297(r102): [782..785]
 a298(r101): [786..787]
 a299(r320): [788..789]
 a300(r307): [612..794]
 a301(r308): [615..616]
 a302(r100): [795..796]
 a303(r319): [797..798]
 a304(r99): [811..812]
 a305(r318): [813..814]
 a306(r97 [0]): [817..894]
 a306(r97 [1]): [816..894]
 a307(r96): [819..820]
 a308(r303): [821..822]
 a309(r317): [823..826]
 a310(r302): [823..828]
 a311(r316): [831..832]
 a312(r95): [833..834]
 a313(r315): [835..836]
 a314(r93 [0]): [839..894]
 a314(r93 [1]): [838..894]
 a315(r92): [841..842]
 a316(r298): [843..844]
 a317(r314): [845..848]
 a318(r297): [845..850]
 a319(r313): [853..854]
 a320(r91): [855..856]
 a321(r312): [857..858]
 a322(r89 [0]): [861..894]
 a322(r89 [1]): [860..894]
 a323(r88): [863..864]
 a324(r293): [865..866]
 a325(r311): [867..870]
 a326(r292): [867..872]
 a327(r310): [875..876]
 a328(r87): [877..878]
 a329(r309): [879..880]
Compressing live ranges: from 895 to 506 - 56%
Ranges after the compression:
 a0(r428): [0..1]
 a1(r427): [0..1]
 a2(r426): [0..1]
 a3(r425): [0..1]
 a4(r424): [0..1]
 a5(r423): [2..3]
 a6(r288): [2..5]
 a7(r289): [2..3]
 a8(r285): [4..11]
 a9(r274): [4..33]
 a10(r287): [6..7]
 a11(r286): [8..9]
 a12(r422): [10..11]
 a13(r284): [12..13]
 a14(r283): [14..15]
 a15(r278): [14..25]
 a16(r421): [16..17]
 a17(r282): [16..17]
 a18(r281): [18..19]
 a19(r280): [20..21]
 a20(r279): [22..23]
 a21(r420): [24..25]
 a22(r419): [26..27]
 a23(r277): [26..27]
 a24(r276): [28..29]
 a25(r275): [30..31]
 a26(r418): [32..33]
 a27(r417): [34..35]
 a28(r273): [34..35]
 a29(r272): [36..37]
 a30(r271): [38..39]
 a31(r266): [38..49]
 a32(r416): [40..41]
 a33(r270): [40..41]
 a34(r269): [42..43]
 a35(r268): [44..45]
 a36(r267): [46..47]
 a37(r415): [48..49]
 a38(r414): [50..51]
 a39(r265): [50..51]
 a40(r264): [52..53]
 a41(r263): [54..55]
 a42(r413): [56..57]
 a43(r262): [58..59]
 a44(r412): [58..59]
 a45(r261): [60..61]
 a46(r260): [62..63]
 a47(r411): [64..65]
 a48(r259): [66..67]
 a49(r410): [66..67]
 a50(r258): [68..69]
 a51(r257): [70..71]
 a52(r409): [72..73]
 a53(r256): [74..75]
 a54(r290): [76..79]
 a55(r255): [80..81]
 a56(r408): [82..83]
 a57(r254): [84..85]
 a58(r291): [86..89]
 a59(r253): [90..91]
 a60(r407): [92..93]
 a61(r252): [94..95]
 a62(r406): [96..97]
 a63(r405): [98..99]
 a64(r250): [98..101]
 a65(r251): [98..99]
 a66(r404): [100..101]
 a67(r249): [102..103]
 a68(r248): [104..105]
 a69(r403): [106..107]
 a70(r247): [108..109]
 a71(r402): [108..109]
 a72(r246): [110..111]
 a73(r245): [112..113]
 a74(r401): [114..115]
 a75(r244): [116..117]
 a76(r400): [116..117]
 a77(r243): [118..119]
 a78(r242): [120..121]
 a79(r399): [122..123]
 a80(r398): [124..125]
 a81(r240): [124..127]
 a82(r241): [124..125]
 a83(r237): [126..133]
 a84(r226): [126..155]
 a85(r239): [128..129]
 a86(r238): [130..131]
 a87(r397): [132..133]
 a88(r236): [134..135]
 a89(r235): [136..137]
 a90(r230): [136..147]
 a91(r396): [138..139]
 a92(r234): [138..139]
 a93(r233): [140..141]
 a94(r232): [142..143]
 a95(r231): [144..145]
 a96(r395): [146..147]
 a97(r394): [148..149]
 a98(r229): [148..149]
 a99(r228): [150..151]
 a100(r227): [152..153]
 a101(r393): [154..155]
 a102(r225): [156..157]
 a103(r224): [158..159]
 a104(r223): [160..161]
 a105(r218): [160..171]
 a106(r392): [162..163]
 a107(r222): [162..163]
 a108(r221): [164..165]
 a109(r220): [166..167]
 a110(r219): [168..169]
 a111(r391): [170..171]
 a112(r390): [172..173]
 a113(r217): [172..173]
 a114(r216): [174..175]
 a115(r215): [176..177]
 a116(r389): [178..179]
 a117(r214): [180..181]
 a118(r388): [180..181]
 a119(r213): [182..183]
 a120(r212): [184..185]
 a121(r387): [186..187]
 a122(r211): [188..189]
 a123(r386): [188..189]
 a124(r210): [190..191]
 a125(r209): [192..193]
 a126(r385): [194..195]
 a127(r208): [196..197]
 a128(r384): [198..199]
 a129(r383): [200..201]
 a130(r206): [200..203]
 a131(r207): [200..201]
 a132(r203): [202..209]
 a133(r192): [202..231]
 a134(r205): [204..205]
 a135(r204): [206..207]
 a136(r382): [208..209]
 a137(r202): [210..211]
 a138(r201): [212..213]
 a139(r196): [212..223]
 a140(r381): [214..215]
 a141(r200): [214..215]
 a142(r199): [216..217]
 a143(r198): [218..219]
 a144(r197): [220..221]
 a145(r380): [222..223]
 a146(r379): [224..225]
 a147(r195): [224..225]
 a148(r194): [226..227]
 a149(r193): [228..229]
 a150(r378): [230..231]
 a151(r377): [232..233]
 a152(r191): [232..233]
 a153(r190): [234..235]
 a154(r189): [236..237]
 a155(r184): [236..247]
 a156(r376): [238..239]
 a157(r188): [238..239]
 a158(r187): [240..241]
 a159(r186): [242..243]
 a160(r185): [244..245]
 a161(r375): [246..247]
 a162(r374): [248..249]
 a163(r183): [248..249]
 a164(r182): [250..251]
 a165(r181): [252..253]
 a166(r373): [254..255]
 a167(r180): [256..257]
 a168(r372): [256..257]
 a169(r179): [258..259]
 a170(r178): [260..261]
 a171(r371): [262..263]
 a172(r177): [264..265]
 a173(r370): [264..265]
 a174(r176): [266..267]
 a175(r175): [268..269]
 a176(r369): [270..271]
 a177(r174): [272..273]
 a178(r368): [274..275]
 a179(r367): [276..277]
 a180(r173): [276..277]
 a181(r366): [278..279]
 a182(r365): [280..281]
 a183(r364): [282..283]
 a184(r363): [284..285]
 a185(r172): [284..285]
 a186(r171): [286..287]
 a187(r167): [286..295]
 a188(r170): [288..289]
 a189(r169): [290..291]
 a190(r168): [290..293]
 a191(r362): [292..293]
 a192(r361): [294..295]
 a193(r166): [296..297]
 a194(r165): [298..299]
 a195(r164): [300..301]
 a196(r163): [300..303]
 a197(r360): [302..303]
 a198(r359): [304..305]
 a199(r358): [306..307]
 a200(r357): [308..309]
 a201(r162): [310..311]
 a202(r356): [312..313]
 a203(r355): [314..315]
 a204(r161): [314..315]
 a205(r160): [316..317]
 a206(r156): [316..325]
 a207(r159): [318..319]
 a208(r158): [320..321]
 a209(r157): [320..323]
 a210(r354): [322..323]
 a211(r353): [324..325]
 a212(r352): [326..327]
 a213(r155): [326..327]
 a214(r154): [328..329]
 a215(r153): [330..331]
 a216(r152): [330..333]
 a217(r351): [332..333]
 a218(r350): [334..335]
 a219(r349): [336..337]
 a220(r348): [338..339]
 a221(r151): [340..341]
 a222(r347): [342..343]
 a223(r346): [346..347]
 a224(r149): [346..349]
 a225(r150): [346..347]
 a226(r345): [348..349]
 a227(r147): [348..353]
 a228(r148): [350..351]
 a229(r344): [352..353]
 a230(r146): [354..355]
 a231(r145): [356..357]
 a232(r134): [356..379]
 a233(r144): [358..359]
 a234(r143): [360..361]
 a235(r142): [362..363]
 a236(r141): [364..365]
 a237(r137): [364..373]
 a238(r343): [366..367]
 a239(r140): [366..367]
 a240(r139): [368..369]
 a241(r138): [370..371]
 a242(r342): [372..373]
 a243(r341): [374..375]
 a244(r136): [374..375]
 a245(r135): [376..377]
 a246(r340): [378..379]
 a247(r133): [380..381]
 a248(r132): [382..383]
 a249(r131): [384..385]
 a250(r130): [386..387]
 a251(r127): [386..393]
 a252(r339): [388..389]
 a253(r129): [388..389]
 a254(r128): [390..391]
 a255(r338): [392..393]
 a256(r337): [394..395]
 a257(r126): [394..395]
 a258(r125): [396..397]
 a259(r124): [398..399]
 a260(r336): [400..401]
 a261(r123): [402..403]
 a262(r335): [402..403]
 a263(r122): [404..405]
 a264(r334): [406..407]
 a265(r120): [408..411]
 a266(r121): [408..409]
 a267(r118): [410..415]
 a268(r119): [412..413]
 a269(r333): [414..415]
 a270(r117): [416..417]
 a271(r332): [418..419]
 a272(r116): [420..421]
 a273(r331): [420..421]
 a274(r115): [422..423]
 a275(r330): [424..425]
 a276(r329): [426..427]
 a277(r114): [428..429]
 a278(r111): [428..435]
 a279(r328): [430..431]
 a280(r113): [430..431]
 a281(r112): [432..433]
 a282(r327): [434..435]
 a283(r326): [436..437]
 a284(r110): [436..437]
 a285(r109): [438..439]
 a286(r108): [440..441]
 a287(r325): [442..443]
 a288(r324): [444..445]
 a289(r107): [446..447]
 a290(r103): [446..455]
 a291(r323): [448..449]
 a292(r106): [448..449]
 a293(r105): [450..451]
 a294(r104): [452..453]
 a295(r322): [454..455]
 a296(r321): [456..457]
 a297(r102): [456..457]
 a298(r101): [458..459]
 a299(r320): [460..461]
 a300(r307): [344..461]
 a301(r308): [344..345]
 a302(r100): [462..463]
 a303(r319): [464..465]
 a304(r99): [466..467]
 a305(r318): [468..469]
 a306(r97 [0]): [470..505]
 a306(r97 [1]): [470..505]
 a307(r96): [470..471]
 a308(r303): [472..473]
 a309(r317): [474..475]
 a310(r302): [474..475]
 a311(r316): [476..477]
 a312(r95): [478..479]
 a313(r315): [480..481]
 a314(r93 [0]): [482..505]
 a314(r93 [1]): [482..505]
 a315(r92): [482..483]
 a316(r298): [484..485]
 a317(r314): [486..487]
 a318(r297): [486..487]
 a319(r313): [488..489]
 a320(r91): [490..491]
 a321(r312): [492..493]
 a322(r89 [0]): [494..505]
 a322(r89 [1]): [494..505]
 a323(r88): [494..495]
 a324(r293): [496..497]
 a325(r311): [498..499]
 a326(r292): [498..499]
 a327(r310): [500..501]
 a328(r87): [502..503]
 a329(r309): [504..505]
  regions=1, blocks=35, points=506
    allocnos=330 (big 3), copies=0, conflicts=0, ranges=333
Disposition:
  328:r87  l0     0  323:r88  l0     0  322:r89  l0    43  320:r91  l0     0
  315:r92  l0     0  314:r93  l0    41  312:r95  l0     0  307:r96  l0     0
  306:r97  l0    39  304:r99  l0     0  302:r100 l0     0  298:r101 l0     0
  297:r102 l0     1  290:r103 l0    21  294:r104 l0     0  293:r105 l0     0
  292:r106 l0     1  289:r107 l0    22  286:r108 l0     0  285:r109 l0     0
  284:r110 l0     1  278:r111 l0    21  281:r112 l0     0  280:r113 l0     1
  277:r114 l0    22  274:r115 l0     0  272:r116 l0     0  270:r117 l0    21
  267:r118 l0    21  268:r119 l0     0  265:r120 l0     0  266:r121 l0    21
  263:r122 l0     0  261:r123 l0     0  259:r124 l0     0  258:r125 l0     0
  257:r126 l0     1  251:r127 l0    21  254:r128 l0     0  253:r129 l0     1
  250:r130 l0    22  249:r131 l0    21  248:r132 l0    21  247:r133 l0    21
  232:r134 l0    22  245:r135 l0     0  244:r136 l0     1  237:r137 l0    21
  241:r138 l0     0  240:r139 l0     0  239:r140 l0     1  236:r141 l0    23
  235:r142 l0    21  234:r143 l0    21  233:r144 l0    21  231:r145 l0    21
  230:r146 l0    21  227:r147 l0    22  228:r148 l0     0  224:r149 l0     1
  225:r150 l0    21  221:r151 l0    21  216:r152 l0    21  215:r153 l0    22
  214:r154 l0    21  213:r155 l0    22  206:r156 l0    21  209:r157 l0    22
  208:r158 l0    23  207:r159 l0    22  205:r160 l0    22  204:r161 l0    21
  201:r162 l0    21  196:r163 l0    21  195:r164 l0    22  194:r165 l0    21
  193:r166 l0    21  187:r167 l0    21  190:r168 l0    22  189:r169 l0    23
  188:r170 l0    22  186:r171 l0    22  185:r172 l0    21  180:r173 l0    21
  177:r174 l0    21  175:r175 l0     0  174:r176 l0     0  172:r177 l0     0
  170:r178 l0     0  169:r179 l0     0  167:r180 l0     0  165:r181 l0     0
  164:r182 l0     0  163:r183 l0     1  155:r184 l0    21  160:r185 l0     0
  159:r186 l0     0  158:r187 l0     0  157:r188 l0     1  154:r189 l0    22
  153:r190 l0    21  152:r191 l0    22  133:r192 l0    21  149:r193 l0     0
  148:r194 l0     0  147:r195 l0     1  139:r196 l0    22  144:r197 l0     0
  143:r198 l0     0  142:r199 l0     0  141:r200 l0     1  138:r201 l0    23
  137:r202 l0    22  132:r203 l0    22  135:r204 l0     0  134:r205 l0     0
  130:r206 l0     1  131:r207 l0    21  127:r208 l0    21  125:r209 l0     0
  124:r210 l0     0  122:r211 l0     0  120:r212 l0     0  119:r213 l0     0
  117:r214 l0     0  115:r215 l0     0  114:r216 l0     0  113:r217 l0     1
  105:r218 l0    21  110:r219 l0     0  109:r220 l0     0  108:r221 l0     0
  107:r222 l0     1  104:r223 l0    22  103:r224 l0    21  102:r225 l0    21
   84:r226 l0    21  100:r227 l0     0   99:r228 l0     0   98:r229 l0     1
   90:r230 l0    22   95:r231 l0     0   94:r232 l0     0   93:r233 l0     0
   92:r234 l0     1   89:r235 l0    23   88:r236 l0    22   83:r237 l0    22
   86:r238 l0     0   85:r239 l0     0   81:r240 l0     1   82:r241 l0    21
   78:r242 l0     0   77:r243 l0     0   75:r244 l0     0   73:r245 l0     0
   72:r246 l0     0   70:r247 l0     0   68:r248 l0     0   67:r249 l0     0
   64:r250 l0     1   65:r251 l0    21   61:r252 l0     0   59:r253 l0    21
   57:r254 l0     0   55:r255 l0    21   53:r256 l0     0   51:r257 l0     0
   50:r258 l0     0   48:r259 l0     0   46:r260 l0     0   45:r261 l0     0
   43:r262 l0     0   41:r263 l0     0   40:r264 l0     0   39:r265 l0     1
   31:r266 l0    21   36:r267 l0     0   35:r268 l0     0   34:r269 l0     0
   33:r270 l0     1   30:r271 l0    22   29:r272 l0    21   28:r273 l0    22
    9:r274 l0    21   25:r275 l0     0   24:r276 l0     0   23:r277 l0     1
   15:r278 l0    22   20:r279 l0     0   19:r280 l0     0   18:r281 l0     0
   17:r282 l0     1   14:r283 l0    23   13:r284 l0    22    8:r285 l0    22
   11:r286 l0     0   10:r287 l0     0    6:r288 l0     1    7:r289 l0    21
   54:r290 l0     0   58:r291 l0     0  326:r292 l0     0  324:r293 l0     0
  318:r297 l0     0  316:r298 l0     0  310:r302 l0     0  308:r303 l0     0
  300:r307 l0     2  301:r308 l0     0  329:r309 l0     0  327:r310 l0     0
  325:r311 l0     1  321:r312 l0     0  319:r313 l0     0  317:r314 l0     1
  313:r315 l0     0  311:r316 l0     0  309:r317 l0     1  305:r318 l0     0
  303:r319 l0     0  299:r320 l0     0  296:r321 l0     0  295:r322 l0     0
  291:r323 l0     0  288:r324 l0    21  287:r325 l0     0  283:r326 l0     0
  282:r327 l0     0  279:r328 l0     0  276:r329 l0    21  275:r330 l0     0
  273:r331 l0    21  271:r332 l0    21  269:r333 l0     0  264:r334 l0     0
  262:r335 l0    21  260:r336 l0     0  256:r337 l0     0  255:r338 l0     0
  252:r339 l0     0  246:r340 l0     0  243:r341 l0     0  242:r342 l0     0
  238:r343 l0     0  229:r344 l0     0  226:r345 l0    21  223:r346 l0     0
  222:r347 l0     0  220:r348 l0    21  219:r349 l0    21  218:r350 l0     0
  217:r351 l0     0  212:r352 l0    21  211:r353 l0     0  210:r354 l0     0
  203:r355 l0     0  202:r356 l0     0  200:r357 l0    21  199:r358 l0    21
  198:r359 l0     0  197:r360 l0     0  192:r361 l0     0  191:r362 l0     0
  184:r363 l0     0  183:r364 l0    21  182:r365 l0    21  181:r366 l0     0
  179:r367 l0     0  178:r368 l0     0  176:r369 l0     0  173:r370 l0    21
  171:r371 l0     0  168:r372 l0    21  166:r373 l0     0  162:r374 l0     0
  161:r375 l0     0  156:r376 l0     0  151:r377 l0    21  150:r378 l0     0
  146:r379 l0     0  145:r380 l0     0  140:r381 l0     0  136:r382 l0     0
  129:r383 l0     0  128:r384 l0     0  126:r385 l0     0  123:r386 l0    21
  121:r387 l0     0  118:r388 l0    21  116:r389 l0     0  112:r390 l0     0
  111:r391 l0     0  106:r392 l0     0  101:r393 l0     0   97:r394 l0     0
   96:r395 l0     0   91:r396 l0     0   87:r397 l0     0   80:r398 l0     0
   79:r399 l0     0   76:r400 l0    21   74:r401 l0     0   71:r402 l0    21
   69:r403 l0     0   66:r404 l0     0   63:r405 l0     0   62:r406 l0     0
   60:r407 l0     0   56:r408 l0     0   52:r409 l0     0   49:r410 l0    21
   47:r411 l0     0   44:r412 l0    21   42:r413 l0     0   38:r414 l0     0
   37:r415 l0     0   32:r416 l0     0   27:r417 l0    21   26:r418 l0     0
   22:r419 l0     0   21:r420 l0     0   16:r421 l0     0   12:r422 l0     0
    5:r423 l0     0    4:r424 l0     5    3:r425 l0     2    2:r426 l0     1
    1:r427 l0     4    0:r428 l0     0
+++Costs: overall 2, reg 2, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


splind

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 37 [r8] 38 [r9]
;;  ref usage 	r0={3d} r1={4d,2u} r2={4d,2u} r4={5d,3u} r5={5d,3u} r6={1d,34u} r7={1d,36u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,33u} r17={76d,21u} r18={2d} r19={2d} r20={1d,168u,4e} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={4d,2u} r38={3d,1u} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r87={1d,1u} r88={1d,1u} r89={2d,2u} r91={1d,1u} r92={1d,1u} r93={2d,2u} r95={1d,1u} r96={1d,1u} r97={2d,2u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,2u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,1u} r127={1d,1u} r128={1d,1u} r129={1d,1u} r130={1d,1u} r131={1d,1u} r132={1d,1u} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,2u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,2u} r163={1d,1u} r164={1d,1u} r165={1d,1u} r166={1d,2u} r167={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,1u} r171={1d,1u} r172={1d,1u} r173={1d,1u} r174={1d,2u} r175={1d,1u} r176={1d,1u} r177={1d,1u} r178={1d,1u} r179={1d,1u} r180={1d,1u} r181={1d,1u} r182={1d,1u} r183={1d,1u} r184={1d,1u} r185={1d,1u} r186={1d,1u} r187={1d,1u} r188={1d,1u} r189={1d,1u} r190={1d,1u} r191={1d,1u} r192={1d,1u} r193={1d,1u} r194={1d,1u} r195={1d,1u} r196={1d,1u} r197={1d,1u} r198={1d,1u} r199={1d,1u} r200={1d,1u} r201={1d,1u} r202={1d,1u} r203={1d,1u} r204={1d,1u} r205={1d,1u} r206={1d,1u} r207={1d,1u} r208={1d,2u} r209={1d,1u} r210={1d,1u} r211={1d,1u} r212={1d,1u} r213={1d,1u} r214={1d,1u} r215={1d,1u} r216={1d,1u} r217={1d,1u} r218={1d,1u} r219={1d,1u} r220={1d,1u} r221={1d,1u} r222={1d,1u} r223={1d,1u} r224={1d,1u} r225={1d,2u} r226={1d,1u} r227={1d,1u} r228={1d,1u} r229={1d,1u} r230={1d,1u} r231={1d,1u} r232={1d,1u} r233={1d,1u} r234={1d,1u} r235={1d,1u} r236={1d,1u} r237={1d,1u} r238={1d,1u} r239={1d,1u} r240={1d,1u} r241={1d,1u} r242={1d,1u} r243={1d,1u} r244={1d,1u} r245={1d,1u} r246={1d,1u} r247={1d,1u} r248={1d,1u} r249={1d,1u} r250={1d,1u} r251={1d,1u} r252={1d,1u} r253={1d,2u} r254={2d,2u} r255={1d,2u} r256={2d,2u} r257={1d,1u} r258={1d,1u} r259={1d,1u} r260={1d,1u} r261={1d,1u} r262={1d,1u} r263={1d,1u} r264={1d,1u} r265={1d,1u} r266={1d,1u} r267={1d,1u} r268={1d,1u} r269={1d,1u} r270={1d,1u} r271={1d,1u} r272={1d,1u} r273={1d,1u} r274={1d,1u} r275={1d,1u} r276={1d,1u} r277={1d,1u} r278={1d,1u} r279={1d,1u} r280={1d,1u} r281={1d,1u} r282={1d,1u} r283={1d,1u} r284={1d,1u} r285={1d,1u} r286={1d,1u} r287={1d,1u} r288={1d,1u} r289={1d,1u} r290={2d,1u} r291={2d,1u} r292={1d,2u} r293={1d,1u} r297={1d,2u} r298={1d,1u} r302={1d,2u} r303={1d,1u} r307={1d,1u} r308={1d,1u} r309={1d,1u} r310={1d,1u} r311={1d,1u} r312={1d,1u} r313={1d,1u} r314={1d,1u} r315={1d,1u} r316={1d,1u} r317={1d,1u} r318={1d,1u} r319={1d,1u} r320={1d,1u} r321={1d,1u} r322={1d,1u} r323={1d,1u} r324={1d,1u} r325={1d,1u} r326={1d,1u} r327={1d,1u} r328={1d,1u} r329={1d,1u} r330={1d,1u} r331={1d,1u} r332={1d,1u} r333={1d,1u} r334={1d,1u} r335={1d,1u} r336={1d,1u} r337={1d,1u} r338={1d,1u} r339={1d,1u} r340={1d,1u} r341={1d,1u} r342={1d,1u} r343={1d,1u} r344={1d,1u} r345={1d,1u} r346={1d,1u} r347={1d,1u} r348={1d,1u} r349={1d,1u} r350={1d,1u} r351={1d,1u} r352={1d,1u} r353={1d,1u} r354={1d,1u} r355={1d,1u} r356={1d,1u} r357={1d,1u} r358={1d,1u} r359={1d,1u} r360={1d,1u} r361={1d,1u} r362={1d,1u} r363={1d,1u} r364={1d,1u} r365={1d,1u} r366={1d,1u} r367={1d,1u} r368={1d,1u} r369={1d,1u} r370={1d,1u} r371={1d,1u} r372={1d,1u} r373={1d,1u} r374={1d,1u} r375={1d,1u} r376={1d,1u} r377={1d,1u} r378={1d,1u} r379={1d,1u} r380={1d,1u} r381={1d,1u} r382={1d,1u} r383={1d,1u} r384={1d,1u} r385={1d,1u} r386={1d,1u} r387={1d,1u} r388={1d,1u} r389={1d,1u} r390={1d,1u} r391={1d,1u} r392={1d,1u} r393={1d,1u} r394={1d,1u} r395={1d,1u} r396={1d,1u} r397={1d,1u} r398={1d,1u} r399={1d,1u} r400={1d,1u} r401={1d,1u} r402={1d,1u} r403={1d,1u} r404={1d,1u} r405={1d,1u} r406={1d,1u} r407={1d,1u} r408={1d,1u} r409={1d,1u} r410={1d,1u} r411={1d,1u} r412={1d,1u} r413={1d,1u} r414={1d,1u} r415={1d,1u} r416={1d,1u} r417={1d,1u} r418={1d,1u} r419={1d,1u} r420={1d,1u} r421={1d,1u} r422={1d,1u} r423={1d,1u} r424={1d,1u} r425={1d,1u} r426={1d,1u} r427={1d,1u} r428={1d,1u} 
;;    total ref usage 1237{581d,652u,4e} in 431{429 regular + 2 call} insns.
(note 1 0 9 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9] 89 93 97
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9] 89 93 97
;; lr  def 	 17 [flags] 87 88 91 92 95 96 99 292 293 297 298 302 303 309 310 311 312 313 314 315 316 317 318
(note 9 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 9 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60088 [0xffffffffffff1548])) [5 x+0 S8 A64])
        (reg:DI 5 di [ x ])) "../src/spline.f":105 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ x ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60096 [0xffffffffffff1540])) [5 xs+0 S8 A64])
        (reg:DI 4 si [ xs ])) "../src/spline.f":105 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ xs ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60104 [0xffffffffffff1538])) [5 s+0 S8 A64])
        (reg:DI 1 dx [ s ])) "../src/spline.f":105 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ s ])
        (nil)))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60112 [0xffffffffffff1530])) [6 n+0 S8 A64])
        (reg:DI 2 cx [ n ])) "../src/spline.f":105 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [ n ])
        (nil)))
(insn 6 5 7 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60120 [0xffffffffffff1528])) [4 xs1+0 S8 A64])
        (reg:DI 37 r8 [ xs1 ])) "../src/spline.f":105 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 37 r8 [ xs1 ])
        (nil)))
(insn 7 6 8 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60128 [0xffffffffffff1520])) [4 xs2+0 S8 A64])
        (reg:DI 38 r9 [ xs2 ])) "../src/spline.f":105 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 38 r9 [ xs2 ])
        (nil)))
(note 8 7 11 2 NOTE_INSN_FUNCTION_BEG)
(insn 11 8 12 2 (set (reg/f:DI 309)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60112 [0xffffffffffff1530])) [6 n+0 S8 A64])) "../src/spline.f":105 81 {*movdi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:SI 87 [ _1 ])
        (mem:SI (reg/f:DI 309) [1 *n_212(D)+0 S4 A32])) "../src/spline.f":105 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 309)
        (nil)))
(insn 13 12 14 2 (set (reg:DI 310)
        (sign_extend:DI (reg:SI 87 [ _1 ]))) "../src/spline.f":105 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 87 [ _1 ])
        (nil)))
(insn 14 13 15 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 ubound.18+0 S8 A64])
        (reg:DI 310)) "../src/spline.f":105 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 310)
        (nil)))
(insn 15 14 17 2 (set (reg:DI 292 [ size.19_214 ])
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 ubound.18+0 S8 A64])) "../src/spline.f":105 81 {*movdi_internal}
     (nil))
(insn 17 15 16 2 (set (reg:DI 311)
        (const_int 0 [0])) "../src/spline.f":105 81 {*movdi_internal}
     (nil))
(insn 16 17 18 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 292 [ size.19_214 ])
            (const_int 0 [0]))) "../src/spline.f":105 4 {*cmpdi_ccno_1}
     (nil))
(insn 18 16 20 2 (set (reg:DI 293 [ size.19_215 ])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 292 [ size.19_214 ])
            (reg:DI 311))) "../src/spline.f":105 967 {*movdicc_noc}
     (expr_list:REG_DEAD (reg:DI 311)
        (expr_list:REG_DEAD (reg:DI 292 [ size.19_214 ])
            (expr_list:REG_DEAD (reg:CCGOC 17 flags)
                (nil)))))
(insn 20 18 21 2 (set (reg:DI 88 [ size.163_2 ])
        (reg:DI 293 [ size.19_215 ])) "../src/spline.f":105 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 293 [ size.19_215 ])
        (nil)))
(insn 21 20 22 2 (set (subreg:DI (reg:TI 89 [ _3 ]) 0)
        (reg:DI 88 [ size.163_2 ])) "../src/spline.f":105 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88 [ size.163_2 ])
        (nil)))
(insn 22 21 26 2 (set (subreg:DI (reg:TI 89 [ _3 ]) 8)
        (const_int 0 [0])) "../src/spline.f":105 81 {*movdi_internal}
     (expr_list:REG_UNUSED (reg:TI 89 [ _3 ])
        (nil)))
(insn 26 22 27 2 (set (reg/f:DI 312)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60112 [0xffffffffffff1530])) [6 n+0 S8 A64])) "../src/spline.f":105 81 {*movdi_internal}
     (nil))
(insn 27 26 28 2 (set (reg:SI 91 [ _5 ])
        (mem:SI (reg/f:DI 312) [1 *n_212(D)+0 S4 A32])) "../src/spline.f":105 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 312)
        (nil)))
(insn 28 27 29 2 (set (reg:DI 313)
        (sign_extend:DI (reg:SI 91 [ _5 ]))) "../src/spline.f":105 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 91 [ _5 ])
        (nil)))
(insn 29 28 30 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [2 ubound.22+0 S8 A64])
        (reg:DI 313)) "../src/spline.f":105 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 313)
        (nil)))
(insn 30 29 32 2 (set (reg:DI 297 [ size.23_220 ])
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [2 ubound.22+0 S8 A64])) "../src/spline.f":105 81 {*movdi_internal}
     (nil))
(insn 32 30 31 2 (set (reg:DI 314)
        (const_int 0 [0])) "../src/spline.f":105 81 {*movdi_internal}
     (nil))
(insn 31 32 33 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 297 [ size.23_220 ])
            (const_int 0 [0]))) "../src/spline.f":105 4 {*cmpdi_ccno_1}
     (nil))
(insn 33 31 35 2 (set (reg:DI 298 [ size.23_221 ])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 297 [ size.23_220 ])
            (reg:DI 314))) "../src/spline.f":105 967 {*movdicc_noc}
     (expr_list:REG_DEAD (reg:DI 314)
        (expr_list:REG_DEAD (reg:DI 297 [ size.23_220 ])
            (expr_list:REG_DEAD (reg:CCGOC 17 flags)
                (nil)))))
(insn 35 33 36 2 (set (reg:DI 92 [ size.165_6 ])
        (reg:DI 298 [ size.23_221 ])) "../src/spline.f":105 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 298 [ size.23_221 ])
        (nil)))
(insn 36 35 37 2 (set (subreg:DI (reg:TI 93 [ _7 ]) 0)
        (reg:DI 92 [ size.165_6 ])) "../src/spline.f":105 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 92 [ size.165_6 ])
        (nil)))
(insn 37 36 41 2 (set (subreg:DI (reg:TI 93 [ _7 ]) 8)
        (const_int 0 [0])) "../src/spline.f":105 81 {*movdi_internal}
     (expr_list:REG_UNUSED (reg:TI 93 [ _7 ])
        (nil)))
(insn 41 37 42 2 (set (reg/f:DI 315)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60112 [0xffffffffffff1530])) [6 n+0 S8 A64])) "../src/spline.f":105 81 {*movdi_internal}
     (nil))
(insn 42 41 43 2 (set (reg:SI 95 [ _9 ])
        (mem:SI (reg/f:DI 315) [1 *n_212(D)+0 S4 A32])) "../src/spline.f":105 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 315)
        (nil)))
(insn 43 42 44 2 (set (reg:DI 316)
        (sign_extend:DI (reg:SI 95 [ _9 ]))) "../src/spline.f":105 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 95 [ _9 ])
        (nil)))
(insn 44 43 45 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [2 ubound.20+0 S8 A64])
        (reg:DI 316)) "../src/spline.f":105 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 316)
        (nil)))
(insn 45 44 47 2 (set (reg:DI 302 [ size.21_226 ])
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [2 ubound.20+0 S8 A64])) "../src/spline.f":105 81 {*movdi_internal}
     (nil))
(insn 47 45 46 2 (set (reg:DI 317)
        (const_int 0 [0])) "../src/spline.f":105 81 {*movdi_internal}
     (nil))
(insn 46 47 48 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 302 [ size.21_226 ])
            (const_int 0 [0]))) "../src/spline.f":105 4 {*cmpdi_ccno_1}
     (nil))
(insn 48 46 50 2 (set (reg:DI 303 [ size.21_227 ])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 302 [ size.21_226 ])
            (reg:DI 317))) "../src/spline.f":105 967 {*movdicc_noc}
     (expr_list:REG_DEAD (reg:DI 317)
        (expr_list:REG_DEAD (reg:DI 302 [ size.21_226 ])
            (expr_list:REG_DEAD (reg:CCGOC 17 flags)
                (nil)))))
(insn 50 48 51 2 (set (reg:DI 96 [ size.167_10 ])
        (reg:DI 303 [ size.21_227 ])) "../src/spline.f":105 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 303 [ size.21_227 ])
        (nil)))
(insn 51 50 52 2 (set (subreg:DI (reg:TI 97 [ _11 ]) 0)
        (reg:DI 96 [ size.167_10 ])) "../src/spline.f":105 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 96 [ size.167_10 ])
        (nil)))
(insn 52 51 56 2 (set (subreg:DI (reg:TI 97 [ _11 ]) 8)
        (const_int 0 [0])) "../src/spline.f":105 81 {*movdi_internal}
     (expr_list:REG_UNUSED (reg:TI 97 [ _11 ])
        (nil)))
(insn 56 52 57 2 (set (reg/f:DI 318)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60112 [0xffffffffffff1530])) [6 n+0 S8 A64])) "../src/spline.f":131 81 {*movdi_internal}
     (nil))
(insn 57 56 58 2 (set (reg:SI 99 [ _13 ])
        (mem:SI (reg/f:DI 318) [1 *n_212(D)+0 S4 A32])) "../src/spline.f":131 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 318)
        (nil)))
(insn 58 57 59 2 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 99 [ _13 ])
            (const_int 5001 [0x1389]))) "../src/spline.f":131 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 99 [ _13 ])
        (nil)))
(jump_insn 59 58 60 2 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 65)
            (pc))) "../src/spline.f":131 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 65)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 60 59 61 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 61 60 62 3 (set (reg:SI 4 si)
        (const_int 37 [0x25])) "../src/spline.f":131 82 {*movsi_internal}
     (nil))
(insn 62 61 63 3 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*lC5") [flags 0x2]  <var_decl 0x143383750 *lC5>)) "../src/spline.f":131 81 {*movdi_internal}
     (nil))
(call_insn 63 62 64 3 (call (mem:QI (symbol_ref:DI ("_gfortran_stop_string") [flags 0x41]  <function_decl 0x1427c2200 _gfortran_stop_string>) [0 _gfortran_stop_string S1 A8])
        (const_int 0 [0])) "../src/spline.f":131 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 64 63 65)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 100 307 319
(code_label 65 64 66 4 32 (nil) [1 uses])
(note 66 65 67 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 67 66 68 4 (set (reg/f:DI 319)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60112 [0xffffffffffff1530])) [6 n+0 S8 A64])) "../src/spline.f":133 81 {*movdi_internal}
     (nil))
(insn 68 67 69 4 (set (reg:SI 100 [ _14 ])
        (mem:SI (reg/f:DI 319) [1 *n_212(D)+0 S4 A32])) "../src/spline.f":133 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 319)
        (nil)))
(insn 69 68 70 4 (parallel [
            (set (reg:SI 307 [ _231 ])
                (plus:SI (reg:SI 100 [ _14 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":133 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 100 [ _14 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 70 69 161 4 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
        (const_int 2 [0x2])) "../src/spline.f":133 82 {*movsi_internal}
     (nil))
;;  succ:       5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 307

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       4 (FALLTHRU)
;;              6 [100.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 307
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 307
;; lr  def 	 17 [flags] 308
(code_label 161 70 71 5 34 (nil) [1 uses])
(note 71 161 72 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 72 71 73 5 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
            (reg:SI 307 [ _231 ]))) "../src/spline.f":133 7 {*cmpsi_1}
     (nil))
(insn 73 72 74 5 (set (reg:QI 308 [ _233 ])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "../src/spline.f":133 613 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil)))
(insn 74 73 75 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 308 [ _233 ])
            (const_int 0 [0]))) "../src/spline.f":133 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 308 [ _233 ])
        (nil)))
(jump_insn 75 74 76 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 556)
            (pc))) "../src/spline.f":133 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 556)
;;  succ:       34
;;              6 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 307

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 34, flags: (RTL)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 307
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 320 321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346
(note 76 75 77 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 77 76 78 6 (set (reg:SI 320)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":134 82 {*movsi_internal}
     (nil))
(insn 78 77 79 6 (set (reg:DI 101 [ _15 ])
        (sign_extend:DI (reg:SI 320))) "../src/spline.f":134 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 320)
        (nil)))
(insn 79 78 80 6 (parallel [
            (set (reg:DI 102 [ _16 ])
                (plus:DI (reg:DI 101 [ _15 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":134 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 101 [ _15 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 80 79 81 6 (set (reg/f:DI 321)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60104 [0xffffffffffff1538])) [5 s+0 S8 A64])) "../src/spline.f":134 81 {*movdi_internal}
     (nil))
(insn 81 80 82 6 (set (reg:SF 103 [ _17 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 102 [ _16 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 321)) [3 *s_234(D) S4 A32])) "../src/spline.f":134 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 321)
        (expr_list:REG_DEAD (reg:DI 102 [ _16 ])
            (nil))))
(insn 82 81 83 6 (set (reg:SI 322)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":134 82 {*movsi_internal}
     (nil))
(insn 83 82 84 6 (parallel [
            (set (reg:SI 104 [ _18 ])
                (plus:SI (reg:SI 322)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":134 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 322)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff]))
                (nil)))))
(insn 84 83 85 6 (set (reg:DI 105 [ _19 ])
        (sign_extend:DI (reg:SI 104 [ _18 ]))) "../src/spline.f":134 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 104 [ _18 ])
        (nil)))
(insn 85 84 86 6 (parallel [
            (set (reg:DI 106 [ _20 ])
                (plus:DI (reg:DI 105 [ _19 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":134 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 105 [ _19 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 86 85 87 6 (set (reg/f:DI 323)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60104 [0xffffffffffff1538])) [5 s+0 S8 A64])) "../src/spline.f":134 81 {*movdi_internal}
     (nil))
(insn 87 86 88 6 (set (reg:SF 107 [ _21 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 106 [ _20 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 323)) [3 *s_234(D) S4 A32])) "../src/spline.f":134 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 323)
        (expr_list:REG_DEAD (reg:DI 106 [ _20 ])
            (nil))))
(insn 88 87 89 6 (set (reg:SF 324)
        (minus:SF (reg:SF 103 [ _17 ])
            (reg:SF 107 [ _21 ]))) "../src/spline.f":134 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 107 [ _21 ])
        (expr_list:REG_DEAD (reg:SF 103 [ _17 ])
            (nil))))
(insn 89 88 90 6 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -36 [0xffffffffffffffdc])) [3 dsm+0 S4 A32])
        (reg:SF 324)) "../src/spline.f":134 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 324)
        (nil)))
(insn 90 89 91 6 (set (reg:SI 325)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":135 82 {*movsi_internal}
     (nil))
(insn 91 90 92 6 (parallel [
            (set (reg:SI 108 [ _22 ])
                (plus:SI (reg:SI 325)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":135 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 325)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int 1 [0x1]))
                (nil)))))
(insn 92 91 93 6 (set (reg:DI 109 [ _23 ])
        (sign_extend:DI (reg:SI 108 [ _22 ]))) "../src/spline.f":135 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 108 [ _22 ])
        (nil)))
(insn 93 92 94 6 (parallel [
            (set (reg:DI 110 [ _24 ])
                (plus:DI (reg:DI 109 [ _23 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":135 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 109 [ _23 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 94 93 95 6 (set (reg/f:DI 326)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60104 [0xffffffffffff1538])) [5 s+0 S8 A64])) "../src/spline.f":135 81 {*movdi_internal}
     (nil))
(insn 95 94 96 6 (set (reg:SF 111 [ _25 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 110 [ _24 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 326)) [3 *s_234(D) S4 A32])) "../src/spline.f":135 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 326)
        (expr_list:REG_DEAD (reg:DI 110 [ _24 ])
            (nil))))
(insn 96 95 97 6 (set (reg:SI 327)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":135 82 {*movsi_internal}
     (nil))
(insn 97 96 98 6 (set (reg:DI 112 [ _26 ])
        (sign_extend:DI (reg:SI 327))) "../src/spline.f":135 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 327)
        (nil)))
(insn 98 97 99 6 (parallel [
            (set (reg:DI 113 [ _27 ])
                (plus:DI (reg:DI 112 [ _26 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":135 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 112 [ _26 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 99 98 100 6 (set (reg/f:DI 328)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60104 [0xffffffffffff1538])) [5 s+0 S8 A64])) "../src/spline.f":135 81 {*movdi_internal}
     (nil))
(insn 100 99 101 6 (set (reg:SF 114 [ _28 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 113 [ _27 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 328)) [3 *s_234(D) S4 A32])) "../src/spline.f":135 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 328)
        (expr_list:REG_DEAD (reg:DI 113 [ _27 ])
            (nil))))
(insn 101 100 102 6 (set (reg:SF 329)
        (minus:SF (reg:SF 111 [ _25 ])
            (reg:SF 114 [ _28 ]))) "../src/spline.f":135 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 114 [ _28 ])
        (expr_list:REG_DEAD (reg:SF 111 [ _25 ])
            (nil))))
(insn 102 101 103 6 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [3 dsp+0 S4 A32])
        (reg:SF 329)) "../src/spline.f":135 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 329)
        (nil)))
(insn 103 102 104 6 (set (reg:SI 330)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":136 82 {*movsi_internal}
     (nil))
(insn 104 103 105 6 (set (reg:DI 115 [ _29 ])
        (sign_extend:DI (reg:SI 330))) "../src/spline.f":136 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 330)
        (nil)))
(insn 105 104 106 6 (parallel [
            (set (reg:DI 116 [ _30 ])
                (plus:DI (reg:DI 115 [ _29 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":136 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 115 [ _29 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 106 105 107 6 (set (reg:SF 331)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [3 dsp+0 S4 A32])) "../src/spline.f":136 127 {*movsf_internal}
     (nil))
(insn 107 106 108 6 (set (mem:SF (plus:DI (plus:DI (mult:DI (reg:DI 116 [ _30 ])
                        (const_int 4 [0x4]))
                    (reg/f:DI 20 frame))
                (const_int -40064 [0xffffffffffff6380])) [3 b S4 A32])
        (reg:SF 331)) "../src/spline.f":136 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 331)
        (expr_list:REG_DEAD (reg:DI 116 [ _30 ])
            (nil))))
(insn 108 107 109 6 (set (reg:SF 332)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -36 [0xffffffffffffffdc])) [3 dsm+0 S4 A32])) "../src/spline.f":137 127 {*movsf_internal}
     (nil))
(insn 109 108 110 6 (set (reg:SF 117 [ _31 ])
        (plus:SF (reg:SF 332)
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -40 [0xffffffffffffffd8])) [3 dsp+0 S4 A32]))) "../src/spline.f":137 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 332)
        (nil)))
(insn 110 109 111 6 (set (reg:SF 118 [ _32 ])
        (reg:SF 117 [ _31 ])) "../src/spline.f":137 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 117 [ _31 ])
        (nil)))
(insn 111 110 112 6 (set (reg:SI 333)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":137 82 {*movsi_internal}
     (nil))
(insn 112 111 113 6 (set (reg:DI 119 [ _33 ])
        (sign_extend:DI (reg:SI 333))) "../src/spline.f":137 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 333)
        (nil)))
(insn 113 112 114 6 (parallel [
            (set (reg:DI 120 [ _34 ])
                (plus:DI (reg:DI 119 [ _33 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":137 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 119 [ _33 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 114 113 115 6 (set (reg:SF 121 [ _35 ])
        (plus:SF (reg:SF 118 [ _32 ])
            (reg:SF 118 [ _32 ]))) "../src/spline.f":137 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 118 [ _32 ])
        (nil)))
(insn 115 114 116 6 (set (mem:SF (plus:DI (plus:DI (mult:DI (reg:DI 120 [ _34 ])
                        (const_int 4 [0x4]))
                    (reg/f:DI 20 frame))
                (const_int -20048 [0xffffffffffffb1b0])) [3 a S4 A32])
        (reg:SF 121 [ _35 ])) "../src/spline.f":137 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 121 [ _35 ])
        (expr_list:REG_DEAD (reg:DI 120 [ _34 ])
            (nil))))
(insn 116 115 117 6 (set (reg:SI 334)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":138 82 {*movsi_internal}
     (nil))
(insn 117 116 118 6 (set (reg:DI 122 [ _36 ])
        (sign_extend:DI (reg:SI 334))) "../src/spline.f":138 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 334)
        (nil)))
(insn 118 117 119 6 (parallel [
            (set (reg:DI 123 [ _37 ])
                (plus:DI (reg:DI 122 [ _36 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":138 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 122 [ _36 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 119 118 120 6 (set (reg:SF 335)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -36 [0xffffffffffffffdc])) [3 dsm+0 S4 A32])) "../src/spline.f":138 127 {*movsf_internal}
     (nil))
(insn 120 119 121 6 (set (mem:SF (plus:DI (plus:DI (mult:DI (reg:DI 123 [ _37 ])
                        (const_int 4 [0x4]))
                    (reg/f:DI 20 frame))
                (const_int -60080 [0xffffffffffff1550])) [3 c S4 A32])
        (reg:SF 335)) "../src/spline.f":138 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 335)
        (expr_list:REG_DEAD (reg:DI 123 [ _37 ])
            (nil))))
(insn 121 120 122 6 (set (reg:SI 336)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":139 82 {*movsi_internal}
     (nil))
(insn 122 121 123 6 (parallel [
            (set (reg:SI 124 [ _38 ])
                (plus:SI (reg:SI 336)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":139 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 336)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int 1 [0x1]))
                (nil)))))
(insn 123 122 124 6 (set (reg:DI 125 [ _39 ])
        (sign_extend:DI (reg:SI 124 [ _38 ]))) "../src/spline.f":139 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 124 [ _38 ])
        (nil)))
(insn 124 123 125 6 (parallel [
            (set (reg:DI 126 [ _40 ])
                (plus:DI (reg:DI 125 [ _39 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":139 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 125 [ _39 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 125 124 126 6 (set (reg/f:DI 337)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60088 [0xffffffffffff1548])) [5 x+0 S8 A64])) "../src/spline.f":139 81 {*movdi_internal}
     (nil))
(insn 126 125 127 6 (set (reg:SF 127 [ _41 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 126 [ _40 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 337)) [3 *x_240(D) S4 A32])) "../src/spline.f":139 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 337)
        (expr_list:REG_DEAD (reg:DI 126 [ _40 ])
            (nil))))
(insn 127 126 128 6 (set (reg:SI 338)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":139 82 {*movsi_internal}
     (nil))
(insn 128 127 129 6 (set (reg:DI 128 [ _42 ])
        (sign_extend:DI (reg:SI 338))) "../src/spline.f":139 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 338)
        (nil)))
(insn 129 128 130 6 (parallel [
            (set (reg:DI 129 [ _43 ])
                (plus:DI (reg:DI 128 [ _42 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":139 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 128 [ _42 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 130 129 131 6 (set (reg/f:DI 339)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60088 [0xffffffffffff1548])) [5 x+0 S8 A64])) "../src/spline.f":139 81 {*movdi_internal}
     (nil))
(insn 131 130 132 6 (set (reg:SF 130 [ _44 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 129 [ _43 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 339)) [3 *x_240(D) S4 A32])) "../src/spline.f":139 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 339)
        (expr_list:REG_DEAD (reg:DI 129 [ _43 ])
            (nil))))
(insn 132 131 133 6 (set (reg:SF 131 [ _45 ])
        (minus:SF (reg:SF 127 [ _41 ])
            (reg:SF 130 [ _44 ]))) "../src/spline.f":139 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 130 [ _44 ])
        (expr_list:REG_DEAD (reg:SF 127 [ _41 ])
            (nil))))
(insn 133 132 134 6 (set (reg:SF 132 [ _46 ])
        (reg:SF 131 [ _45 ])) "../src/spline.f":139 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 131 [ _45 ])
        (nil)))
(insn 134 133 135 6 (set (reg:SF 133 [ _47 ])
        (mult:SF (reg:SF 132 [ _46 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -36 [0xffffffffffffffdc])) [3 dsm+0 S4 A32]))) "../src/spline.f":139 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 132 [ _46 ])
        (nil)))
(insn 135 134 136 6 (set (reg:SF 134 [ _48 ])
        (div:SF (reg:SF 133 [ _47 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -40 [0xffffffffffffffd8])) [3 dsp+0 S4 A32]))) "../src/spline.f":139 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 133 [ _47 ])
        (nil)))
(insn 136 135 137 6 (set (reg:SI 340)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":139 82 {*movsi_internal}
     (nil))
(insn 137 136 138 6 (set (reg:DI 135 [ _49 ])
        (sign_extend:DI (reg:SI 340))) "../src/spline.f":139 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 340)
        (nil)))
(insn 138 137 139 6 (parallel [
            (set (reg:DI 136 [ _50 ])
                (plus:DI (reg:DI 135 [ _49 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":139 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 135 [ _49 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 139 138 140 6 (set (reg/f:DI 341)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60088 [0xffffffffffff1548])) [5 x+0 S8 A64])) "../src/spline.f":139 81 {*movdi_internal}
     (nil))
(insn 140 139 141 6 (set (reg:SF 137 [ _51 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 136 [ _50 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 341)) [3 *x_240(D) S4 A32])) "../src/spline.f":139 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 341)
        (expr_list:REG_DEAD (reg:DI 136 [ _50 ])
            (nil))))
(insn 141 140 142 6 (set (reg:SI 342)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":139 82 {*movsi_internal}
     (nil))
(insn 142 141 143 6 (parallel [
            (set (reg:SI 138 [ _52 ])
                (plus:SI (reg:SI 342)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":139 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 342)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff]))
                (nil)))))
(insn 143 142 144 6 (set (reg:DI 139 [ _53 ])
        (sign_extend:DI (reg:SI 138 [ _52 ]))) "../src/spline.f":139 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 138 [ _52 ])
        (nil)))
(insn 144 143 145 6 (parallel [
            (set (reg:DI 140 [ _54 ])
                (plus:DI (reg:DI 139 [ _53 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":139 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 139 [ _53 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 145 144 146 6 (set (reg/f:DI 343)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60088 [0xffffffffffff1548])) [5 x+0 S8 A64])) "../src/spline.f":139 81 {*movdi_internal}
     (nil))
(insn 146 145 147 6 (set (reg:SF 141 [ _55 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 140 [ _54 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 343)) [3 *x_240(D) S4 A32])) "../src/spline.f":139 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 343)
        (expr_list:REG_DEAD (reg:DI 140 [ _54 ])
            (nil))))
(insn 147 146 148 6 (set (reg:SF 142 [ _56 ])
        (minus:SF (reg:SF 137 [ _51 ])
            (reg:SF 141 [ _55 ]))) "../src/spline.f":139 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 141 [ _55 ])
        (expr_list:REG_DEAD (reg:SF 137 [ _51 ])
            (nil))))
(insn 148 147 149 6 (set (reg:SF 143 [ _57 ])
        (reg:SF 142 [ _56 ])) "../src/spline.f":139 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 142 [ _56 ])
        (nil)))
(insn 149 148 150 6 (set (reg:SF 144 [ _58 ])
        (mult:SF (reg:SF 143 [ _57 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -40 [0xffffffffffffffd8])) [3 dsp+0 S4 A32]))) "../src/spline.f":139 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 143 [ _57 ])
        (nil)))
(insn 150 149 151 6 (set (reg:SF 145 [ _59 ])
        (div:SF (reg:SF 144 [ _58 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -36 [0xffffffffffffffdc])) [3 dsm+0 S4 A32]))) "../src/spline.f":139 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 144 [ _58 ])
        (nil)))
(insn 151 150 152 6 (set (reg:SF 146 [ _60 ])
        (plus:SF (reg:SF 134 [ _48 ])
            (reg:SF 145 [ _59 ]))) "../src/spline.f":139 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 145 [ _59 ])
        (expr_list:REG_DEAD (reg:SF 134 [ _48 ])
            (nil))))
(insn 152 151 153 6 (set (reg:SF 147 [ _61 ])
        (reg:SF 146 [ _60 ])) "../src/spline.f":139 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 146 [ _60 ])
        (nil)))
(insn 153 152 154 6 (set (reg:SI 344)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":139 82 {*movsi_internal}
     (nil))
(insn 154 153 155 6 (set (reg:DI 148 [ _62 ])
        (sign_extend:DI (reg:SI 344))) "../src/spline.f":139 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 344)
        (nil)))
(insn 155 154 156 6 (parallel [
            (set (reg:DI 149 [ _63 ])
                (plus:DI (reg:DI 148 [ _62 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":139 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 148 [ _62 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 156 155 157 6 (set (reg:SF 345)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC0") [flags 0x2]) [3  S4 A32])) "../src/spline.f":139 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 3.0e+0 [0x0.cp+2])
        (nil)))
(insn 157 156 158 6 (set (reg:SF 150 [ _64 ])
        (mult:SF (reg:SF 147 [ _61 ])
            (reg:SF 345))) "../src/spline.f":139 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 345)
        (expr_list:REG_DEAD (reg:SF 147 [ _61 ])
            (nil))))
(insn 158 157 159 6 (set (reg/f:DI 346)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60096 [0xffffffffffff1540])) [5 xs+0 S8 A64])) "../src/spline.f":139 81 {*movdi_internal}
     (nil))
(insn 159 158 160 6 (set (mem:SF (plus:DI (mult:DI (reg:DI 149 [ _63 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 346)) [3 *xs_241(D) S4 A32])
        (reg:SF 150 [ _64 ])) "../src/spline.f":139 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 346)
        (expr_list:REG_DEAD (reg:SF 150 [ _64 ])
            (expr_list:REG_DEAD (reg:DI 149 [ _63 ])
                (nil)))))
(insn 160 159 541 6 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":133 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 541 160 542 6 (set (pc)
        (label_ref 161)) "../src/spline.f":133 649 {jump}
     (nil)
 -> 161)
;;  succ:       5 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 307

(barrier 542 541 556)
;; basic block 34, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 7, flags: (RTL)
;;  pred:       5
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 556 542 555 34 59 (nil) [1 uses])
(note 555 556 557 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 557 555 164 34 (const_int 0 [0]) "../src/spline.f":140 682 {nop}
     (nil))
;;  succ:       7 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 34, next block 8, flags: (RTL)
;;  pred:       34 [100.0%]  (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 151 347
(code_label 164 557 165 7 33 (nil) [0 uses])
(note 165 164 166 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 166 165 167 7 (set (reg/f:DI 347)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60120 [0xffffffffffff1528])) [4 xs1+0 S8 A64])) "../src/spline.f":142 81 {*movdi_internal}
     (nil))
(insn 167 166 168 7 (set (reg:SF 151 [ _65 ])
        (mem:SF (reg/f:DI 347) [3 *xs1_244(D)+0 S4 A32])) "../src/spline.f":142 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 347)
        (nil)))
(insn 168 167 169 7 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 151 [ _65 ])
            (mem/u/c:SF (symbol_ref/u:DI ("*lC6") [flags 0x2]) [3  S4 A32]))) "../src/spline.f":142 51 {*cmpiusf}
     (nil))
(jump_insn 169 168 516 7 (set (pc)
        (if_then_else (unordered (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref 199)
            (pc))) "../src/spline.f":142 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil))
 -> 199)
;;  succ:       10
;;              8 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 151

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (RTL)
;;  pred:       7 (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 151
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 151
;; lr  def 	 17 [flags]
(note 516 169 170 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 170 516 171 8 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 151 [ _65 ])
            (mem/u/c:SF (symbol_ref/u:DI ("*lC6") [flags 0x2]) [3  S4 A32]))) "../src/spline.f":142 51 {*cmpiusf}
     (expr_list:REG_DEAD (reg:SF 151 [ _65 ])
        (nil)))
(jump_insn 171 170 175 8 (set (pc)
        (if_then_else (ltgt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 199)
            (pc))) "../src/spline.f":142 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil))
 -> 199)
;;  succ:       9 (FALLTHRU)
;;              10
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (RTL)
;;  pred:       8 (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 152 153 154 155 156 157 158 159 160 161 348 349 350 351 352 353 354 355
(note 175 171 176 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 176 175 177 9 (set (reg:SF 348)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC4") [flags 0x2]) [3  S4 A32])) "../src/spline.f":144 127 {*movsf_internal}
     (nil))
(insn 177 176 178 9 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -20048 [0xffffffffffffb1b0])) [3 a+0 S4 A128])
        (reg:SF 348)) "../src/spline.f":144 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 348)
        (nil)))
(insn 178 177 179 9 (set (reg:SF 349)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC3") [flags 0x2]) [3  S4 A32])) "../src/spline.f":145 127 {*movsf_internal}
     (nil))
(insn 179 178 180 9 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -60080 [0xffffffffffff1550])) [3 c+0 S4 A128])
        (reg:SF 349)) "../src/spline.f":145 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 349)
        (nil)))
(insn 180 179 181 9 (set (reg/f:DI 350)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60088 [0xffffffffffff1548])) [5 x+0 S8 A64])) "../src/spline.f":146 81 {*movdi_internal}
     (nil))
(insn 181 180 182 9 (set (reg:SF 152 [ _66 ])
        (mem:SF (plus:DI (reg/f:DI 350)
                (const_int 4 [0x4])) [3 *x_240(D)+4 S4 A32])) "../src/spline.f":146 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 350)
        (nil)))
(insn 182 181 183 9 (set (reg/f:DI 351)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60088 [0xffffffffffff1548])) [5 x+0 S8 A64])) "../src/spline.f":146 81 {*movdi_internal}
     (nil))
(insn 183 182 184 9 (set (reg:SF 153 [ _67 ])
        (mem:SF (reg/f:DI 351) [3 *x_240(D)+0 S4 A32])) "../src/spline.f":146 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 351)
        (nil)))
(insn 184 183 185 9 (set (reg:SF 154 [ _68 ])
        (minus:SF (reg:SF 152 [ _66 ])
            (reg:SF 153 [ _67 ]))) "../src/spline.f":146 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 153 [ _67 ])
        (expr_list:REG_DEAD (reg:SF 152 [ _66 ])
            (nil))))
(insn 185 184 186 9 (set (reg:SF 155 [ _69 ])
        (reg:SF 154 [ _68 ])) "../src/spline.f":146 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 154 [ _68 ])
        (nil)))
(insn 186 185 187 9 (set (reg:SF 352)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC0") [flags 0x2]) [3  S4 A32])) "../src/spline.f":146 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 3.0e+0 [0x0.cp+2])
        (nil)))
(insn 187 186 188 9 (set (reg:SF 156 [ _70 ])
        (mult:SF (reg:SF 155 [ _69 ])
            (reg:SF 352))) "../src/spline.f":146 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 352)
        (expr_list:REG_DEAD (reg:SF 155 [ _69 ])
            (nil))))
(insn 188 187 189 9 (set (reg/f:DI 353)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60104 [0xffffffffffff1538])) [5 s+0 S8 A64])) "../src/spline.f":146 81 {*movdi_internal}
     (nil))
(insn 189 188 190 9 (set (reg:SF 157 [ _71 ])
        (mem:SF (plus:DI (reg/f:DI 353)
                (const_int 4 [0x4])) [3 *s_234(D)+4 S4 A32])) "../src/spline.f":146 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 353)
        (nil)))
(insn 190 189 191 9 (set (reg/f:DI 354)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60104 [0xffffffffffff1538])) [5 s+0 S8 A64])) "../src/spline.f":146 81 {*movdi_internal}
     (nil))
(insn 191 190 192 9 (set (reg:SF 158 [ _72 ])
        (mem:SF (reg/f:DI 354) [3 *s_234(D)+0 S4 A32])) "../src/spline.f":146 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 354)
        (nil)))
(insn 192 191 193 9 (set (reg:SF 159 [ _73 ])
        (minus:SF (reg:SF 157 [ _71 ])
            (reg:SF 158 [ _72 ]))) "../src/spline.f":146 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 158 [ _72 ])
        (expr_list:REG_DEAD (reg:SF 157 [ _71 ])
            (nil))))
(insn 193 192 194 9 (set (reg:SF 160 [ _74 ])
        (reg:SF 159 [ _73 ])) "../src/spline.f":146 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 159 [ _73 ])
        (nil)))
(insn 194 193 195 9 (set (reg:SF 161 [ _75 ])
        (div:SF (reg:SF 156 [ _70 ])
            (reg:SF 160 [ _74 ]))) "../src/spline.f":146 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 160 [ _74 ])
        (expr_list:REG_DEAD (reg:SF 156 [ _70 ])
            (nil))))
(insn 195 194 196 9 (set (reg/f:DI 355)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60096 [0xffffffffffff1540])) [5 xs+0 S8 A64])) "../src/spline.f":146 81 {*movdi_internal}
     (nil))
(insn 196 195 543 9 (set (mem:SF (reg/f:DI 355) [3 *xs_241(D)+0 S4 A32])
        (reg:SF 161 [ _75 ])) "../src/spline.f":146 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 355)
        (expr_list:REG_DEAD (reg:SF 161 [ _75 ])
            (nil))))
(jump_insn 543 196 544 9 (set (pc)
        (label_ref 243)) 649 {jump}
     (nil)
 -> 243)
;;  succ:       14 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 544 543 199)
;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (RTL)
;;  pred:       7
;;              8
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 162 356
(code_label 199 544 200 10 35 (nil) [2 uses])
(note 200 199 201 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 201 200 202 10 (set (reg/f:DI 356)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60120 [0xffffffffffff1528])) [4 xs1+0 S8 A64])) "../src/spline.f":147 81 {*movdi_internal}
     (nil))
(insn 202 201 203 10 (set (reg:SF 162 [ _76 ])
        (mem:SF (reg/f:DI 356) [3 *xs1_244(D)+0 S4 A32])) "../src/spline.f":147 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 356)
        (nil)))
(insn 203 202 204 10 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 162 [ _76 ])
            (mem/u/c:SF (symbol_ref/u:DI ("*lC7") [flags 0x2]) [3  S4 A32]))) "../src/spline.f":147 51 {*cmpiusf}
     (nil))
(jump_insn 204 203 519 10 (set (pc)
        (if_then_else (unordered (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref 233)
            (pc))) "../src/spline.f":147 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil))
 -> 233)
;;  succ:       13
;;              11 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 162

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (RTL)
;;  pred:       10 (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 162
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 162
;; lr  def 	 17 [flags]
(note 519 204 205 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 205 519 206 11 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 162 [ _76 ])
            (mem/u/c:SF (symbol_ref/u:DI ("*lC7") [flags 0x2]) [3  S4 A32]))) "../src/spline.f":147 51 {*cmpiusf}
     (expr_list:REG_DEAD (reg:SF 162 [ _76 ])
        (nil)))
(jump_insn 206 205 210 11 (set (pc)
        (if_then_else (ltgt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 233)
            (pc))) "../src/spline.f":147 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil))
 -> 233)
;;  succ:       12 (FALLTHRU)
;;              13
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (RTL)
;;  pred:       11 (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 163 164 165 166 167 168 169 170 171 172 357 358 359 360 361 362 363
(note 210 206 211 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 211 210 212 12 (set (reg:SF 357)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC3") [flags 0x2]) [3  S4 A32])) "../src/spline.f":149 127 {*movsf_internal}
     (nil))
(insn 212 211 213 12 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -20048 [0xffffffffffffb1b0])) [3 a+0 S4 A128])
        (reg:SF 357)) "../src/spline.f":149 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 357)
        (nil)))
(insn 213 212 214 12 (set (reg:SF 358)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC3") [flags 0x2]) [3  S4 A32])) "../src/spline.f":150 127 {*movsf_internal}
     (nil))
(insn 214 213 215 12 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -60080 [0xffffffffffff1550])) [3 c+0 S4 A128])
        (reg:SF 358)) "../src/spline.f":150 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 358)
        (nil)))
(insn 215 214 216 12 (set (reg/f:DI 359)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60088 [0xffffffffffff1548])) [5 x+0 S8 A64])) "../src/spline.f":151 81 {*movdi_internal}
     (nil))
(insn 216 215 217 12 (set (reg:SF 163 [ _77 ])
        (mem:SF (plus:DI (reg/f:DI 359)
                (const_int 4 [0x4])) [3 *x_240(D)+4 S4 A32])) "../src/spline.f":151 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 359)
        (nil)))
(insn 217 216 218 12 (set (reg/f:DI 360)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60088 [0xffffffffffff1548])) [5 x+0 S8 A64])) "../src/spline.f":151 81 {*movdi_internal}
     (nil))
(insn 218 217 219 12 (set (reg:SF 164 [ _78 ])
        (mem:SF (reg/f:DI 360) [3 *x_240(D)+0 S4 A32])) "../src/spline.f":151 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 360)
        (nil)))
(insn 219 218 220 12 (set (reg:SF 165 [ _79 ])
        (minus:SF (reg:SF 163 [ _77 ])
            (reg:SF 164 [ _78 ]))) "../src/spline.f":151 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 164 [ _78 ])
        (expr_list:REG_DEAD (reg:SF 163 [ _77 ])
            (nil))))
(insn 220 219 221 12 (set (reg:SF 166 [ _80 ])
        (reg:SF 165 [ _79 ])) "../src/spline.f":151 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 165 [ _79 ])
        (nil)))
(insn 221 220 222 12 (set (reg:SF 167 [ _81 ])
        (plus:SF (reg:SF 166 [ _80 ])
            (reg:SF 166 [ _80 ]))) "../src/spline.f":151 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 166 [ _80 ])
        (nil)))
(insn 222 221 223 12 (set (reg/f:DI 361)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60104 [0xffffffffffff1538])) [5 s+0 S8 A64])) "../src/spline.f":151 81 {*movdi_internal}
     (nil))
(insn 223 222 224 12 (set (reg:SF 168 [ _82 ])
        (mem:SF (plus:DI (reg/f:DI 361)
                (const_int 4 [0x4])) [3 *s_234(D)+4 S4 A32])) "../src/spline.f":151 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 361)
        (nil)))
(insn 224 223 225 12 (set (reg/f:DI 362)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60104 [0xffffffffffff1538])) [5 s+0 S8 A64])) "../src/spline.f":151 81 {*movdi_internal}
     (nil))
(insn 225 224 226 12 (set (reg:SF 169 [ _83 ])
        (mem:SF (reg/f:DI 362) [3 *s_234(D)+0 S4 A32])) "../src/spline.f":151 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 362)
        (nil)))
(insn 226 225 227 12 (set (reg:SF 170 [ _84 ])
        (minus:SF (reg:SF 168 [ _82 ])
            (reg:SF 169 [ _83 ]))) "../src/spline.f":151 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 169 [ _83 ])
        (expr_list:REG_DEAD (reg:SF 168 [ _82 ])
            (nil))))
(insn 227 226 228 12 (set (reg:SF 171 [ _85 ])
        (reg:SF 170 [ _84 ])) "../src/spline.f":151 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 170 [ _84 ])
        (nil)))
(insn 228 227 229 12 (set (reg:SF 172 [ _86 ])
        (div:SF (reg:SF 167 [ _81 ])
            (reg:SF 171 [ _85 ]))) "../src/spline.f":151 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 171 [ _85 ])
        (expr_list:REG_DEAD (reg:SF 167 [ _81 ])
            (nil))))
(insn 229 228 230 12 (set (reg/f:DI 363)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60096 [0xffffffffffff1540])) [5 xs+0 S8 A64])) "../src/spline.f":151 81 {*movdi_internal}
     (nil))
(insn 230 229 545 12 (set (mem:SF (reg/f:DI 363) [3 *xs_241(D)+0 S4 A32])
        (reg:SF 172 [ _86 ])) "../src/spline.f":151 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 363)
        (expr_list:REG_DEAD (reg:SF 172 [ _86 ])
            (nil))))
(jump_insn 545 230 546 12 (set (pc)
        (label_ref 243)) 649 {jump}
     (nil)
 -> 243)
;;  succ:       14 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 546 545 233)
;; basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 14, flags: (RTL)
;;  pred:       10
;;              11
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 173 364 365 366 367
(code_label 233 546 234 13 38 (nil) [2 uses])
(note 234 233 235 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 235 234 236 13 (set (reg:SF 364)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC3") [flags 0x2]) [3  S4 A32])) "../src/spline.f":154 127 {*movsf_internal}
     (nil))
(insn 236 235 237 13 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -20048 [0xffffffffffffb1b0])) [3 a+0 S4 A128])
        (reg:SF 364)) "../src/spline.f":154 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 364)
        (nil)))
(insn 237 236 238 13 (set (reg:SF 365)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC8") [flags 0x2]) [3  S4 A32])) "../src/spline.f":155 127 {*movsf_internal}
     (nil))
(insn 238 237 239 13 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -60080 [0xffffffffffff1550])) [3 c+0 S4 A128])
        (reg:SF 365)) "../src/spline.f":155 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 365)
        (nil)))
(insn 239 238 240 13 (set (reg/f:DI 366)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60120 [0xffffffffffff1528])) [4 xs1+0 S8 A64])) "../src/spline.f":156 81 {*movdi_internal}
     (nil))
(insn 240 239 241 13 (set (reg:SF 173 [ _87 ])
        (mem:SF (reg/f:DI 366) [3 *xs1_244(D)+0 S4 A32])) "../src/spline.f":156 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 366)
        (nil)))
(insn 241 240 242 13 (set (reg/f:DI 367)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60096 [0xffffffffffff1540])) [5 xs+0 S8 A64])) "../src/spline.f":156 81 {*movdi_internal}
     (nil))
(insn 242 241 243 13 (set (mem:SF (reg/f:DI 367) [3 *xs_241(D)+0 S4 A32])
        (reg:SF 173 [ _87 ])) "../src/spline.f":156 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 367)
        (expr_list:REG_DEAD (reg:SF 173 [ _87 ])
            (nil))))
;;  succ:       14 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 14, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 13, next block 15, flags: (RTL)
;;  pred:       13 (FALLTHRU)
;;              9 [100.0%] 
;;              12 [100.0%] 
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 174 368
(code_label 243 242 244 14 37 (nil) [2 uses])
(note 244 243 245 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 245 244 246 14 (set (reg/f:DI 368)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60128 [0xffffffffffff1520])) [4 xs2+0 S8 A64])) "../src/spline.f":159 81 {*movdi_internal}
     (nil))
(insn 246 245 247 14 (set (reg:SF 174 [ _88 ])
        (mem:SF (reg/f:DI 368) [3 *xs2_254(D)+0 S4 A32])) "../src/spline.f":159 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 368)
        (nil)))
(insn 247 246 248 14 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 174 [ _88 ])
            (mem/u/c:SF (symbol_ref/u:DI ("*lC6") [flags 0x2]) [3  S4 A32]))) "../src/spline.f":159 51 {*cmpiusf}
     (nil))
(jump_insn 248 247 522 14 (set (pc)
        (if_then_else (unordered (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref 308)
            (pc))) "../src/spline.f":159 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil))
 -> 308)
;;  succ:       17
;;              15 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 174

;; basic block 15, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 14, next block 16, flags: (RTL)
;;  pred:       14 (FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 174
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 174
;; lr  def 	 17 [flags]
(note 522 248 249 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 249 522 250 15 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 174 [ _88 ])
            (mem/u/c:SF (symbol_ref/u:DI ("*lC6") [flags 0x2]) [3  S4 A32]))) "../src/spline.f":159 51 {*cmpiusf}
     (expr_list:REG_DEAD (reg:SF 174 [ _88 ])
        (nil)))
(jump_insn 250 249 254 15 (set (pc)
        (if_then_else (ltgt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 308)
            (pc))) "../src/spline.f":159 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil))
 -> 308)
;;  succ:       16 (FALLTHRU)
;;              17
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 16, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 15, next block 17, flags: (RTL)
;;  pred:       15 (FALLTHRU)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383
(note 254 250 255 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 255 254 256 16 (set (reg/f:DI 369)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60112 [0xffffffffffff1530])) [6 n+0 S8 A64])) "../src/spline.f":160 81 {*movdi_internal}
     (nil))
(insn 256 255 257 16 (set (reg:SI 175 [ _89 ])
        (mem:SI (reg/f:DI 369) [1 *n_212(D)+0 S4 A32])) "../src/spline.f":160 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 369)
        (nil)))
(insn 257 256 258 16 (set (reg:DI 176 [ _90 ])
        (sign_extend:DI (reg:SI 175 [ _89 ]))) "../src/spline.f":160 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 175 [ _89 ])
        (nil)))
(insn 258 257 259 16 (parallel [
            (set (reg:DI 177 [ _91 ])
                (plus:DI (reg:DI 176 [ _90 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":160 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 176 [ _90 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 259 258 260 16 (set (reg:SF 370)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC3") [flags 0x2]) [3  S4 A32])) "../src/spline.f":160 127 {*movsf_internal}
     (nil))
(insn 260 259 261 16 (set (mem:SF (plus:DI (plus:DI (mult:DI (reg:DI 177 [ _91 ])
                        (const_int 4 [0x4]))
                    (reg/f:DI 20 frame))
                (const_int -40064 [0xffffffffffff6380])) [3 b S4 A32])
        (reg:SF 370)) "../src/spline.f":160 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 370)
        (expr_list:REG_DEAD (reg:DI 177 [ _91 ])
            (nil))))
(insn 261 260 262 16 (set (reg/f:DI 371)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60112 [0xffffffffffff1530])) [6 n+0 S8 A64])) "../src/spline.f":161 81 {*movdi_internal}
     (nil))
(insn 262 261 263 16 (set (reg:SI 178 [ _92 ])
        (mem:SI (reg/f:DI 371) [1 *n_212(D)+0 S4 A32])) "../src/spline.f":161 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 371)
        (nil)))
(insn 263 262 264 16 (set (reg:DI 179 [ _93 ])
        (sign_extend:DI (reg:SI 178 [ _92 ]))) "../src/spline.f":161 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 178 [ _92 ])
        (nil)))
(insn 264 263 265 16 (parallel [
            (set (reg:DI 180 [ _94 ])
                (plus:DI (reg:DI 179 [ _93 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":161 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 179 [ _93 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 265 264 266 16 (set (reg:SF 372)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC4") [flags 0x2]) [3  S4 A32])) "../src/spline.f":161 127 {*movsf_internal}
     (nil))
(insn 266 265 267 16 (set (mem:SF (plus:DI (plus:DI (mult:DI (reg:DI 180 [ _94 ])
                        (const_int 4 [0x4]))
                    (reg/f:DI 20 frame))
                (const_int -20048 [0xffffffffffffb1b0])) [3 a S4 A32])
        (reg:SF 372)) "../src/spline.f":161 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 372)
        (expr_list:REG_DEAD (reg:DI 180 [ _94 ])
            (nil))))
(insn 267 266 268 16 (set (reg/f:DI 373)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60112 [0xffffffffffff1530])) [6 n+0 S8 A64])) "../src/spline.f":162 81 {*movdi_internal}
     (nil))
(insn 268 267 269 16 (set (reg:SI 181 [ _95 ])
        (mem:SI (reg/f:DI 373) [1 *n_212(D)+0 S4 A32])) "../src/spline.f":162 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 373)
        (nil)))
(insn 269 268 270 16 (set (reg:DI 182 [ _96 ])
        (sign_extend:DI (reg:SI 181 [ _95 ]))) "../src/spline.f":162 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 181 [ _95 ])
        (nil)))
(insn 270 269 271 16 (parallel [
            (set (reg:DI 183 [ _97 ])
                (plus:DI (reg:DI 182 [ _96 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":162 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 182 [ _96 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 271 270 272 16 (set (reg/f:DI 374)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60088 [0xffffffffffff1548])) [5 x+0 S8 A64])) "../src/spline.f":162 81 {*movdi_internal}
     (nil))
(insn 272 271 273 16 (set (reg:SF 184 [ _98 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 183 [ _97 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 374)) [3 *x_240(D) S4 A32])) "../src/spline.f":162 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 374)
        (expr_list:REG_DEAD (reg:DI 183 [ _97 ])
            (nil))))
(insn 273 272 274 16 (set (reg/f:DI 375)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60112 [0xffffffffffff1530])) [6 n+0 S8 A64])) "../src/spline.f":162 81 {*movdi_internal}
     (nil))
(insn 274 273 275 16 (set (reg:SI 185 [ _99 ])
        (mem:SI (reg/f:DI 375) [1 *n_212(D)+0 S4 A32])) "../src/spline.f":162 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 375)
        (nil)))
(insn 275 274 276 16 (parallel [
            (set (reg:SI 186 [ _100 ])
                (plus:SI (reg:SI 185 [ _99 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":162 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 185 [ _99 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 276 275 277 16 (set (reg:DI 187 [ _101 ])
        (sign_extend:DI (reg:SI 186 [ _100 ]))) "../src/spline.f":162 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 186 [ _100 ])
        (nil)))
(insn 277 276 278 16 (parallel [
            (set (reg:DI 188 [ _102 ])
                (plus:DI (reg:DI 187 [ _101 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":162 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 187 [ _101 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 278 277 279 16 (set (reg/f:DI 376)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60088 [0xffffffffffff1548])) [5 x+0 S8 A64])) "../src/spline.f":162 81 {*movdi_internal}
     (nil))
(insn 279 278 280 16 (set (reg:SF 189 [ _103 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 188 [ _102 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 376)) [3 *x_240(D) S4 A32])) "../src/spline.f":162 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 376)
        (expr_list:REG_DEAD (reg:DI 188 [ _102 ])
            (nil))))
(insn 280 279 281 16 (set (reg:SF 190 [ _104 ])
        (minus:SF (reg:SF 184 [ _98 ])
            (reg:SF 189 [ _103 ]))) "../src/spline.f":162 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 189 [ _103 ])
        (expr_list:REG_DEAD (reg:SF 184 [ _98 ])
            (nil))))
(insn 281 280 282 16 (set (reg:SF 191 [ _105 ])
        (reg:SF 190 [ _104 ])) "../src/spline.f":162 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 190 [ _104 ])
        (nil)))
(insn 282 281 283 16 (set (reg:SF 377)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC0") [flags 0x2]) [3  S4 A32])) "../src/spline.f":162 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 3.0e+0 [0x0.cp+2])
        (nil)))
(insn 283 282 284 16 (set (reg:SF 192 [ _106 ])
        (mult:SF (reg:SF 191 [ _105 ])
            (reg:SF 377))) "../src/spline.f":162 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 377)
        (expr_list:REG_DEAD (reg:SF 191 [ _105 ])
            (nil))))
(insn 284 283 285 16 (set (reg/f:DI 378)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60112 [0xffffffffffff1530])) [6 n+0 S8 A64])) "../src/spline.f":162 81 {*movdi_internal}
     (nil))
(insn 285 284 286 16 (set (reg:SI 193 [ _107 ])
        (mem:SI (reg/f:DI 378) [1 *n_212(D)+0 S4 A32])) "../src/spline.f":162 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 378)
        (nil)))
(insn 286 285 287 16 (set (reg:DI 194 [ _108 ])
        (sign_extend:DI (reg:SI 193 [ _107 ]))) "../src/spline.f":162 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 193 [ _107 ])
        (nil)))
(insn 287 286 288 16 (parallel [
            (set (reg:DI 195 [ _109 ])
                (plus:DI (reg:DI 194 [ _108 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":162 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 194 [ _108 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 288 287 289 16 (set (reg/f:DI 379)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60104 [0xffffffffffff1538])) [5 s+0 S8 A64])) "../src/spline.f":162 81 {*movdi_internal}
     (nil))
(insn 289 288 290 16 (set (reg:SF 196 [ _110 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 195 [ _109 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 379)) [3 *s_234(D) S4 A32])) "../src/spline.f":162 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 379)
        (expr_list:REG_DEAD (reg:DI 195 [ _109 ])
            (nil))))
(insn 290 289 291 16 (set (reg/f:DI 380)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60112 [0xffffffffffff1530])) [6 n+0 S8 A64])) "../src/spline.f":162 81 {*movdi_internal}
     (nil))
(insn 291 290 292 16 (set (reg:SI 197 [ _111 ])
        (mem:SI (reg/f:DI 380) [1 *n_212(D)+0 S4 A32])) "../src/spline.f":162 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 380)
        (nil)))
(insn 292 291 293 16 (parallel [
            (set (reg:SI 198 [ _112 ])
                (plus:SI (reg:SI 197 [ _111 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":162 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 197 [ _111 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 293 292 294 16 (set (reg:DI 199 [ _113 ])
        (sign_extend:DI (reg:SI 198 [ _112 ]))) "../src/spline.f":162 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 198 [ _112 ])
        (nil)))
(insn 294 293 295 16 (parallel [
            (set (reg:DI 200 [ _114 ])
                (plus:DI (reg:DI 199 [ _113 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":162 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 199 [ _113 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 295 294 296 16 (set (reg/f:DI 381)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60104 [0xffffffffffff1538])) [5 s+0 S8 A64])) "../src/spline.f":162 81 {*movdi_internal}
     (nil))
(insn 296 295 297 16 (set (reg:SF 201 [ _115 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 200 [ _114 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 381)) [3 *s_234(D) S4 A32])) "../src/spline.f":162 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 381)
        (expr_list:REG_DEAD (reg:DI 200 [ _114 ])
            (nil))))
(insn 297 296 298 16 (set (reg:SF 202 [ _116 ])
        (minus:SF (reg:SF 196 [ _110 ])
            (reg:SF 201 [ _115 ]))) "../src/spline.f":162 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 201 [ _115 ])
        (expr_list:REG_DEAD (reg:SF 196 [ _110 ])
            (nil))))
(insn 298 297 299 16 (set (reg:SF 203 [ _117 ])
        (reg:SF 202 [ _116 ])) "../src/spline.f":162 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 202 [ _116 ])
        (nil)))
(insn 299 298 300 16 (set (reg/f:DI 382)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60112 [0xffffffffffff1530])) [6 n+0 S8 A64])) "../src/spline.f":162 81 {*movdi_internal}
     (nil))
(insn 300 299 301 16 (set (reg:SI 204 [ _118 ])
        (mem:SI (reg/f:DI 382) [1 *n_212(D)+0 S4 A32])) "../src/spline.f":162 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 382)
        (nil)))
(insn 301 300 302 16 (set (reg:DI 205 [ _119 ])
        (sign_extend:DI (reg:SI 204 [ _118 ]))) "../src/spline.f":162 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 204 [ _118 ])
        (nil)))
(insn 302 301 303 16 (parallel [
            (set (reg:DI 206 [ _120 ])
                (plus:DI (reg:DI 205 [ _119 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":162 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 205 [ _119 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 303 302 304 16 (set (reg:SF 207 [ _121 ])
        (div:SF (reg:SF 192 [ _106 ])
            (reg:SF 203 [ _117 ]))) "../src/spline.f":162 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 203 [ _117 ])
        (expr_list:REG_DEAD (reg:SF 192 [ _106 ])
            (nil))))
(insn 304 303 305 16 (set (reg/f:DI 383)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60096 [0xffffffffffff1540])) [5 xs+0 S8 A64])) "../src/spline.f":162 81 {*movdi_internal}
     (nil))
(insn 305 304 547 16 (set (mem:SF (plus:DI (mult:DI (reg:DI 206 [ _120 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 383)) [3 *xs_241(D) S4 A32])
        (reg:SF 207 [ _121 ])) "../src/spline.f":162 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 383)
        (expr_list:REG_DEAD (reg:SF 207 [ _121 ])
            (expr_list:REG_DEAD (reg:DI 206 [ _120 ])
                (nil)))))
(jump_insn 547 305 548 16 (set (pc)
        (label_ref 394)) 649 {jump}
     (nil)
 -> 394)
;;  succ:       21 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 548 547 308)
;; basic block 17, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 16, next block 18, flags: (RTL)
;;  pred:       14
;;              15
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 208 384
(code_label 308 548 309 17 40 (nil) [2 uses])
(note 309 308 310 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 310 309 311 17 (set (reg/f:DI 384)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60128 [0xffffffffffff1520])) [4 xs2+0 S8 A64])) "../src/spline.f":163 81 {*movdi_internal}
     (nil))
(insn 311 310 312 17 (set (reg:SF 208 [ _122 ])
        (mem:SF (reg/f:DI 384) [3 *xs2_254(D)+0 S4 A32])) "../src/spline.f":163 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 384)
        (nil)))
(insn 312 311 313 17 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 208 [ _122 ])
            (mem/u/c:SF (symbol_ref/u:DI ("*lC7") [flags 0x2]) [3  S4 A32]))) "../src/spline.f":163 51 {*cmpiusf}
     (nil))
(jump_insn 313 312 525 17 (set (pc)
        (if_then_else (unordered (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref 372)
            (pc))) "../src/spline.f":163 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil))
 -> 372)
;;  succ:       20
;;              18 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 208

;; basic block 18, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 17, next block 19, flags: (RTL)
;;  pred:       17 (FALLTHRU)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 208
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 208
;; lr  def 	 17 [flags]
(note 525 313 314 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 314 525 315 18 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 208 [ _122 ])
            (mem/u/c:SF (symbol_ref/u:DI ("*lC7") [flags 0x2]) [3  S4 A32]))) "../src/spline.f":163 51 {*cmpiusf}
     (expr_list:REG_DEAD (reg:SF 208 [ _122 ])
        (nil)))
(jump_insn 315 314 319 18 (set (pc)
        (if_then_else (ltgt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 372)
            (pc))) "../src/spline.f":163 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil))
 -> 372)
;;  succ:       19 (FALLTHRU)
;;              20
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 19, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 18, next block 20, flags: (RTL)
;;  pred:       18 (FALLTHRU)
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 385 386 387 388 389 390 391 392 393 394 395 396 397 398
(note 319 315 320 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 320 319 321 19 (set (reg/f:DI 385)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60112 [0xffffffffffff1530])) [6 n+0 S8 A64])) "../src/spline.f":164 81 {*movdi_internal}
     (nil))
(insn 321 320 322 19 (set (reg:SI 209 [ _123 ])
        (mem:SI (reg/f:DI 385) [1 *n_212(D)+0 S4 A32])) "../src/spline.f":164 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 385)
        (nil)))
(insn 322 321 323 19 (set (reg:DI 210 [ _124 ])
        (sign_extend:DI (reg:SI 209 [ _123 ]))) "../src/spline.f":164 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 209 [ _123 ])
        (nil)))
(insn 323 322 324 19 (parallel [
            (set (reg:DI 211 [ _125 ])
                (plus:DI (reg:DI 210 [ _124 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":164 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 210 [ _124 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 324 323 325 19 (set (reg:SF 386)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC3") [flags 0x2]) [3  S4 A32])) "../src/spline.f":164 127 {*movsf_internal}
     (nil))
(insn 325 324 326 19 (set (mem:SF (plus:DI (plus:DI (mult:DI (reg:DI 211 [ _125 ])
                        (const_int 4 [0x4]))
                    (reg/f:DI 20 frame))
                (const_int -40064 [0xffffffffffff6380])) [3 b S4 A32])
        (reg:SF 386)) "../src/spline.f":164 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 386)
        (expr_list:REG_DEAD (reg:DI 211 [ _125 ])
            (nil))))
(insn 326 325 327 19 (set (reg/f:DI 387)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60112 [0xffffffffffff1530])) [6 n+0 S8 A64])) "../src/spline.f":165 81 {*movdi_internal}
     (nil))
(insn 327 326 328 19 (set (reg:SI 212 [ _126 ])
        (mem:SI (reg/f:DI 387) [1 *n_212(D)+0 S4 A32])) "../src/spline.f":165 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 387)
        (nil)))
(insn 328 327 329 19 (set (reg:DI 213 [ _127 ])
        (sign_extend:DI (reg:SI 212 [ _126 ]))) "../src/spline.f":165 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 212 [ _126 ])
        (nil)))
(insn 329 328 330 19 (parallel [
            (set (reg:DI 214 [ _128 ])
                (plus:DI (reg:DI 213 [ _127 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":165 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 213 [ _127 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 330 329 331 19 (set (reg:SF 388)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC3") [flags 0x2]) [3  S4 A32])) "../src/spline.f":165 127 {*movsf_internal}
     (nil))
(insn 331 330 332 19 (set (mem:SF (plus:DI (plus:DI (mult:DI (reg:DI 214 [ _128 ])
                        (const_int 4 [0x4]))
                    (reg/f:DI 20 frame))
                (const_int -20048 [0xffffffffffffb1b0])) [3 a S4 A32])
        (reg:SF 388)) "../src/spline.f":165 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 388)
        (expr_list:REG_DEAD (reg:DI 214 [ _128 ])
            (nil))))
(insn 332 331 333 19 (set (reg/f:DI 389)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60112 [0xffffffffffff1530])) [6 n+0 S8 A64])) "../src/spline.f":166 81 {*movdi_internal}
     (nil))
(insn 333 332 334 19 (set (reg:SI 215 [ _129 ])
        (mem:SI (reg/f:DI 389) [1 *n_212(D)+0 S4 A32])) "../src/spline.f":166 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 389)
        (nil)))
(insn 334 333 335 19 (set (reg:DI 216 [ _130 ])
        (sign_extend:DI (reg:SI 215 [ _129 ]))) "../src/spline.f":166 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 215 [ _129 ])
        (nil)))
(insn 335 334 336 19 (parallel [
            (set (reg:DI 217 [ _131 ])
                (plus:DI (reg:DI 216 [ _130 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":166 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 216 [ _130 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 336 335 337 19 (set (reg/f:DI 390)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60088 [0xffffffffffff1548])) [5 x+0 S8 A64])) "../src/spline.f":166 81 {*movdi_internal}
     (nil))
(insn 337 336 338 19 (set (reg:SF 218 [ _132 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 217 [ _131 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 390)) [3 *x_240(D) S4 A32])) "../src/spline.f":166 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 390)
        (expr_list:REG_DEAD (reg:DI 217 [ _131 ])
            (nil))))
(insn 338 337 339 19 (set (reg/f:DI 391)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60112 [0xffffffffffff1530])) [6 n+0 S8 A64])) "../src/spline.f":166 81 {*movdi_internal}
     (nil))
(insn 339 338 340 19 (set (reg:SI 219 [ _133 ])
        (mem:SI (reg/f:DI 391) [1 *n_212(D)+0 S4 A32])) "../src/spline.f":166 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 391)
        (nil)))
(insn 340 339 341 19 (parallel [
            (set (reg:SI 220 [ _134 ])
                (plus:SI (reg:SI 219 [ _133 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":166 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 219 [ _133 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 341 340 342 19 (set (reg:DI 221 [ _135 ])
        (sign_extend:DI (reg:SI 220 [ _134 ]))) "../src/spline.f":166 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 220 [ _134 ])
        (nil)))
(insn 342 341 343 19 (parallel [
            (set (reg:DI 222 [ _136 ])
                (plus:DI (reg:DI 221 [ _135 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":166 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 221 [ _135 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 343 342 344 19 (set (reg/f:DI 392)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60088 [0xffffffffffff1548])) [5 x+0 S8 A64])) "../src/spline.f":166 81 {*movdi_internal}
     (nil))
(insn 344 343 345 19 (set (reg:SF 223 [ _137 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 222 [ _136 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 392)) [3 *x_240(D) S4 A32])) "../src/spline.f":166 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 392)
        (expr_list:REG_DEAD (reg:DI 222 [ _136 ])
            (nil))))
(insn 345 344 346 19 (set (reg:SF 224 [ _138 ])
        (minus:SF (reg:SF 218 [ _132 ])
            (reg:SF 223 [ _137 ]))) "../src/spline.f":166 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 223 [ _137 ])
        (expr_list:REG_DEAD (reg:SF 218 [ _132 ])
            (nil))))
(insn 346 345 347 19 (set (reg:SF 225 [ _139 ])
        (reg:SF 224 [ _138 ])) "../src/spline.f":166 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 224 [ _138 ])
        (nil)))
(insn 347 346 348 19 (set (reg:SF 226 [ _140 ])
        (plus:SF (reg:SF 225 [ _139 ])
            (reg:SF 225 [ _139 ]))) "../src/spline.f":166 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 225 [ _139 ])
        (nil)))
(insn 348 347 349 19 (set (reg/f:DI 393)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60112 [0xffffffffffff1530])) [6 n+0 S8 A64])) "../src/spline.f":166 81 {*movdi_internal}
     (nil))
(insn 349 348 350 19 (set (reg:SI 227 [ _141 ])
        (mem:SI (reg/f:DI 393) [1 *n_212(D)+0 S4 A32])) "../src/spline.f":166 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 393)
        (nil)))
(insn 350 349 351 19 (set (reg:DI 228 [ _142 ])
        (sign_extend:DI (reg:SI 227 [ _141 ]))) "../src/spline.f":166 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 227 [ _141 ])
        (nil)))
(insn 351 350 352 19 (parallel [
            (set (reg:DI 229 [ _143 ])
                (plus:DI (reg:DI 228 [ _142 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":166 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 228 [ _142 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 352 351 353 19 (set (reg/f:DI 394)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60104 [0xffffffffffff1538])) [5 s+0 S8 A64])) "../src/spline.f":166 81 {*movdi_internal}
     (nil))
(insn 353 352 354 19 (set (reg:SF 230 [ _144 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 229 [ _143 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 394)) [3 *s_234(D) S4 A32])) "../src/spline.f":166 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 394)
        (expr_list:REG_DEAD (reg:DI 229 [ _143 ])
            (nil))))
(insn 354 353 355 19 (set (reg/f:DI 395)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60112 [0xffffffffffff1530])) [6 n+0 S8 A64])) "../src/spline.f":166 81 {*movdi_internal}
     (nil))
(insn 355 354 356 19 (set (reg:SI 231 [ _145 ])
        (mem:SI (reg/f:DI 395) [1 *n_212(D)+0 S4 A32])) "../src/spline.f":166 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 395)
        (nil)))
(insn 356 355 357 19 (parallel [
            (set (reg:SI 232 [ _146 ])
                (plus:SI (reg:SI 231 [ _145 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":166 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 231 [ _145 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 357 356 358 19 (set (reg:DI 233 [ _147 ])
        (sign_extend:DI (reg:SI 232 [ _146 ]))) "../src/spline.f":166 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 232 [ _146 ])
        (nil)))
(insn 358 357 359 19 (parallel [
            (set (reg:DI 234 [ _148 ])
                (plus:DI (reg:DI 233 [ _147 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":166 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 233 [ _147 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 359 358 360 19 (set (reg/f:DI 396)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60104 [0xffffffffffff1538])) [5 s+0 S8 A64])) "../src/spline.f":166 81 {*movdi_internal}
     (nil))
(insn 360 359 361 19 (set (reg:SF 235 [ _149 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 234 [ _148 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 396)) [3 *s_234(D) S4 A32])) "../src/spline.f":166 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 396)
        (expr_list:REG_DEAD (reg:DI 234 [ _148 ])
            (nil))))
(insn 361 360 362 19 (set (reg:SF 236 [ _150 ])
        (minus:SF (reg:SF 230 [ _144 ])
            (reg:SF 235 [ _149 ]))) "../src/spline.f":166 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 235 [ _149 ])
        (expr_list:REG_DEAD (reg:SF 230 [ _144 ])
            (nil))))
(insn 362 361 363 19 (set (reg:SF 237 [ _151 ])
        (reg:SF 236 [ _150 ])) "../src/spline.f":166 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 236 [ _150 ])
        (nil)))
(insn 363 362 364 19 (set (reg/f:DI 397)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60112 [0xffffffffffff1530])) [6 n+0 S8 A64])) "../src/spline.f":166 81 {*movdi_internal}
     (nil))
(insn 364 363 365 19 (set (reg:SI 238 [ _152 ])
        (mem:SI (reg/f:DI 397) [1 *n_212(D)+0 S4 A32])) "../src/spline.f":166 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 397)
        (nil)))
(insn 365 364 366 19 (set (reg:DI 239 [ _153 ])
        (sign_extend:DI (reg:SI 238 [ _152 ]))) "../src/spline.f":166 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 238 [ _152 ])
        (nil)))
(insn 366 365 367 19 (parallel [
            (set (reg:DI 240 [ _154 ])
                (plus:DI (reg:DI 239 [ _153 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":166 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 239 [ _153 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 367 366 368 19 (set (reg:SF 241 [ _155 ])
        (div:SF (reg:SF 226 [ _140 ])
            (reg:SF 237 [ _151 ]))) "../src/spline.f":166 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 237 [ _151 ])
        (expr_list:REG_DEAD (reg:SF 226 [ _140 ])
            (nil))))
(insn 368 367 369 19 (set (reg/f:DI 398)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60096 [0xffffffffffff1540])) [5 xs+0 S8 A64])) "../src/spline.f":166 81 {*movdi_internal}
     (nil))
(insn 369 368 549 19 (set (mem:SF (plus:DI (mult:DI (reg:DI 240 [ _154 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 398)) [3 *xs_241(D) S4 A32])
        (reg:SF 241 [ _155 ])) "../src/spline.f":166 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 398)
        (expr_list:REG_DEAD (reg:SF 241 [ _155 ])
            (expr_list:REG_DEAD (reg:DI 240 [ _154 ])
                (nil)))))
(jump_insn 549 369 550 19 (set (pc)
        (label_ref 394)) 649 {jump}
     (nil)
 -> 394)
;;  succ:       21 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 550 549 372)
;; basic block 20, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 19, next block 21, flags: (RTL)
;;  pred:       17
;;              18
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 242 243 244 245 246 247 248 249 250 251 399 400 401 402 403 404 405
(code_label 372 550 373 20 43 (nil) [2 uses])
(note 373 372 374 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 374 373 375 20 (set (reg/f:DI 399)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60112 [0xffffffffffff1530])) [6 n+0 S8 A64])) "../src/spline.f":168 81 {*movdi_internal}
     (nil))
(insn 375 374 376 20 (set (reg:SI 242 [ _156 ])
        (mem:SI (reg/f:DI 399) [1 *n_212(D)+0 S4 A32])) "../src/spline.f":168 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 399)
        (nil)))
(insn 376 375 377 20 (set (reg:DI 243 [ _157 ])
        (sign_extend:DI (reg:SI 242 [ _156 ]))) "../src/spline.f":168 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 242 [ _156 ])
        (nil)))
(insn 377 376 378 20 (parallel [
            (set (reg:DI 244 [ _158 ])
                (plus:DI (reg:DI 243 [ _157 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":168 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 243 [ _157 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 378 377 379 20 (set (reg:SF 400)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC3") [flags 0x2]) [3  S4 A32])) "../src/spline.f":168 127 {*movsf_internal}
     (nil))
(insn 379 378 380 20 (set (mem:SF (plus:DI (plus:DI (mult:DI (reg:DI 244 [ _158 ])
                        (const_int 4 [0x4]))
                    (reg/f:DI 20 frame))
                (const_int -20048 [0xffffffffffffb1b0])) [3 a S4 A32])
        (reg:SF 400)) "../src/spline.f":168 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 400)
        (expr_list:REG_DEAD (reg:DI 244 [ _158 ])
            (nil))))
(insn 380 379 381 20 (set (reg/f:DI 401)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60112 [0xffffffffffff1530])) [6 n+0 S8 A64])) "../src/spline.f":169 81 {*movdi_internal}
     (nil))
(insn 381 380 382 20 (set (reg:SI 245 [ _159 ])
        (mem:SI (reg/f:DI 401) [1 *n_212(D)+0 S4 A32])) "../src/spline.f":169 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 401)
        (nil)))
(insn 382 381 383 20 (set (reg:DI 246 [ _160 ])
        (sign_extend:DI (reg:SI 245 [ _159 ]))) "../src/spline.f":169 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 245 [ _159 ])
        (nil)))
(insn 383 382 384 20 (parallel [
            (set (reg:DI 247 [ _161 ])
                (plus:DI (reg:DI 246 [ _160 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":169 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 246 [ _160 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 384 383 385 20 (set (reg:SF 402)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC8") [flags 0x2]) [3  S4 A32])) "../src/spline.f":169 127 {*movsf_internal}
     (nil))
(insn 385 384 386 20 (set (mem:SF (plus:DI (plus:DI (mult:DI (reg:DI 247 [ _161 ])
                        (const_int 4 [0x4]))
                    (reg/f:DI 20 frame))
                (const_int -40064 [0xffffffffffff6380])) [3 b S4 A32])
        (reg:SF 402)) "../src/spline.f":169 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 402)
        (expr_list:REG_DEAD (reg:DI 247 [ _161 ])
            (nil))))
(insn 386 385 387 20 (set (reg/f:DI 403)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60112 [0xffffffffffff1530])) [6 n+0 S8 A64])) "../src/spline.f":170 81 {*movdi_internal}
     (nil))
(insn 387 386 388 20 (set (reg:SI 248 [ _162 ])
        (mem:SI (reg/f:DI 403) [1 *n_212(D)+0 S4 A32])) "../src/spline.f":170 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 403)
        (nil)))
(insn 388 387 389 20 (set (reg:DI 249 [ _163 ])
        (sign_extend:DI (reg:SI 248 [ _162 ]))) "../src/spline.f":170 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 248 [ _162 ])
        (nil)))
(insn 389 388 390 20 (parallel [
            (set (reg:DI 250 [ _164 ])
                (plus:DI (reg:DI 249 [ _163 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":170 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 249 [ _163 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 390 389 391 20 (set (reg/f:DI 404)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60128 [0xffffffffffff1520])) [4 xs2+0 S8 A64])) "../src/spline.f":170 81 {*movdi_internal}
     (nil))
(insn 391 390 392 20 (set (reg:SF 251 [ _165 ])
        (mem:SF (reg/f:DI 404) [3 *xs2_254(D)+0 S4 A32])) "../src/spline.f":170 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 404)
        (nil)))
(insn 392 391 393 20 (set (reg/f:DI 405)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60096 [0xffffffffffff1540])) [5 xs+0 S8 A64])) "../src/spline.f":170 81 {*movdi_internal}
     (nil))
(insn 393 392 394 20 (set (mem:SF (plus:DI (mult:DI (reg:DI 250 [ _164 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 405)) [3 *xs_241(D) S4 A32])
        (reg:SF 251 [ _165 ])) "../src/spline.f":170 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 405)
        (expr_list:REG_DEAD (reg:SF 251 [ _165 ])
            (expr_list:REG_DEAD (reg:DI 250 [ _164 ])
                (nil)))))
;;  succ:       21 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 21, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 20, next block 22, flags: (RTL)
;;  pred:       20 (FALLTHRU)
;;              16 [100.0%] 
;;              19 [100.0%] 
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 252 406
(code_label 394 393 395 21 42 (nil) [2 uses])
(note 395 394 396 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 396 395 397 21 (set (reg/f:DI 406)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60112 [0xffffffffffff1530])) [6 n+0 S8 A64])) "../src/spline.f":173 81 {*movdi_internal}
     (nil))
(insn 397 396 398 21 (set (reg:SI 252 [ _166 ])
        (mem:SI (reg/f:DI 406) [1 *n_212(D)+0 S4 A32])) "../src/spline.f":173 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 406)
        (nil)))
(insn 398 397 399 21 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 252 [ _166 ])
            (const_int 2 [0x2]))) "../src/spline.f":173 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 252 [ _166 ])
        (nil)))
(jump_insn 399 398 400 21 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 414)
            (pc))) "../src/spline.f":173 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 414)
;;  succ:       22 (FALLTHRU)
;;              25
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 22, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 21, next block 23, flags: (RTL)
;;  pred:       21 (FALLTHRU)
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 253 407
(note 400 399 401 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 401 400 402 22 (set (reg/f:DI 407)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60120 [0xffffffffffff1528])) [4 xs1+0 S8 A64])) "../src/spline.f":173 81 {*movdi_internal}
     (nil))
(insn 402 401 403 22 (set (reg:SF 253 [ _167 ])
        (mem:SF (reg/f:DI 407) [3 *xs1_244(D)+0 S4 A32])) "../src/spline.f":173 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 407)
        (nil)))
(insn 403 402 404 22 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 253 [ _167 ])
            (mem/u/c:SF (symbol_ref/u:DI ("*lC7") [flags 0x2]) [3  S4 A32]))) "../src/spline.f":173 51 {*cmpiusf}
     (nil))
(jump_insn 404 403 528 22 (set (pc)
        (if_then_else (unordered (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref 414)
            (pc))) "../src/spline.f":173 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil))
 -> 414)
;;  succ:       25
;;              23 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253

;; basic block 23, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 22, next block 24, flags: (RTL)
;;  pred:       22 (FALLTHRU)
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253
;; lr  def 	 17 [flags]
(note 528 404 405 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 405 528 406 23 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 253 [ _167 ])
            (mem/u/c:SF (symbol_ref/u:DI ("*lC7") [flags 0x2]) [3  S4 A32]))) "../src/spline.f":173 51 {*cmpiusf}
     (expr_list:REG_DEAD (reg:SF 253 [ _167 ])
        (nil)))
(jump_insn 406 405 410 23 (set (pc)
        (if_then_else (ltgt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 414)
            (pc))) "../src/spline.f":173 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil))
 -> 414)
;;  succ:       24 (FALLTHRU)
;;              25
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 24, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 23, next block 25, flags: (RTL)
;;  pred:       23 (FALLTHRU)
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 291
(note 410 406 411 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 411 410 551 24 (set (reg:QI 291 [ iftmp.170_206 ])
        (const_int 1 [0x1])) "../src/spline.f":173 84 {*movqi_internal}
     (nil))
(jump_insn 551 411 552 24 (set (pc)
        (label_ref 417)) "../src/spline.f":173 649 {jump}
     (nil)
 -> 417)
;;  succ:       26 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 291

(barrier 552 551 414)
;; basic block 25, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 24, next block 26, flags: (RTL)
;;  pred:       21
;;              22
;;              23
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 291
(code_label 414 552 415 25 45 (nil) [3 uses])
(note 415 414 416 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 416 415 417 25 (set (reg:QI 291 [ iftmp.170_206 ])
        (const_int 0 [0])) "../src/spline.f":173 84 {*movqi_internal}
     (nil))
;;  succ:       26 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 291

;; basic block 26, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 25, next block 27, flags: (RTL)
;;  pred:       25 (FALLTHRU)
;;              24 [100.0%] 
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 291
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 291
;; lr  def 	 17 [flags] 254
(code_label 417 416 418 26 47 (nil) [1 uses])
(note 418 417 419 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 419 418 420 26 (set (reg:SI 254 [ iftmp.171_168 ])
        (zero_extend:SI (reg:QI 291 [ iftmp.170_206 ]))) "../src/spline.f":173 136 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 291 [ iftmp.170_206 ])
        (nil)))
(insn 420 419 421 26 (parallel [
            (set (reg:SI 254 [ iftmp.171_168 ])
                (and:SI (reg:SI 254 [ iftmp.171_168 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":173 391 {*andsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 421 420 422 26 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 254 [ iftmp.171_168 ])
            (const_int 0 [0]))) "../src/spline.f":173 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 254 [ iftmp.171_168 ])
        (nil)))
(jump_insn 422 421 423 26 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 437)
            (pc))) "../src/spline.f":173 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 437)
;;  succ:       27 (FALLTHRU)
;;              30
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 27, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 26, next block 28, flags: (RTL)
;;  pred:       26 (FALLTHRU)
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 255 408
(note 423 422 424 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 424 423 425 27 (set (reg/f:DI 408)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60128 [0xffffffffffff1520])) [4 xs2+0 S8 A64])) "../src/spline.f":173 81 {*movdi_internal}
     (nil))
(insn 425 424 426 27 (set (reg:SF 255 [ _169 ])
        (mem:SF (reg/f:DI 408) [3 *xs2_254(D)+0 S4 A32])) "../src/spline.f":173 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 408)
        (nil)))
(insn 426 425 427 27 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 255 [ _169 ])
            (mem/u/c:SF (symbol_ref/u:DI ("*lC7") [flags 0x2]) [3  S4 A32]))) "../src/spline.f":173 51 {*cmpiusf}
     (nil))
(jump_insn 427 426 531 27 (set (pc)
        (if_then_else (unordered (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref 437)
            (pc))) "../src/spline.f":173 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil))
 -> 437)
;;  succ:       30
;;              28 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 255

;; basic block 28, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 27, next block 29, flags: (RTL)
;;  pred:       27 (FALLTHRU)
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 255
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 255
;; lr  def 	 17 [flags]
(note 531 427 428 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 428 531 429 28 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 255 [ _169 ])
            (mem/u/c:SF (symbol_ref/u:DI ("*lC7") [flags 0x2]) [3  S4 A32]))) "../src/spline.f":173 51 {*cmpiusf}
     (expr_list:REG_DEAD (reg:SF 255 [ _169 ])
        (nil)))
(jump_insn 429 428 433 28 (set (pc)
        (if_then_else (ltgt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 437)
            (pc))) "../src/spline.f":173 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil))
 -> 437)
;;  succ:       29 (FALLTHRU)
;;              30
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 29, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 28, next block 30, flags: (RTL)
;;  pred:       28 (FALLTHRU)
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 290
(note 433 429 434 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 434 433 553 29 (set (reg:QI 290 [ iftmp.169_205 ])
        (const_int 1 [0x1])) "../src/spline.f":173 84 {*movqi_internal}
     (nil))
(jump_insn 553 434 554 29 (set (pc)
        (label_ref 440)) "../src/spline.f":173 649 {jump}
     (nil)
 -> 440)
;;  succ:       31 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 290

(barrier 554 553 437)
;; basic block 30, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 29, next block 31, flags: (RTL)
;;  pred:       26
;;              27
;;              28
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 290
(code_label 437 554 438 30 48 (nil) [3 uses])
(note 438 437 439 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 439 438 440 30 (set (reg:QI 290 [ iftmp.169_205 ])
        (const_int 0 [0])) "../src/spline.f":173 84 {*movqi_internal}
     (nil))
;;  succ:       31 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 290

;; basic block 31, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 30, next block 32, flags: (RTL)
;;  pred:       30 (FALLTHRU)
;;              29 [100.0%] 
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 290
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 290
;; lr  def 	 17 [flags] 256
(code_label 440 439 441 31 50 (nil) [1 uses])
(note 441 440 442 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 442 441 443 31 (set (reg:SI 256 [ iftmp.172_170 ])
        (zero_extend:SI (reg:QI 290 [ iftmp.169_205 ]))) "../src/spline.f":173 136 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 290 [ iftmp.169_205 ])
        (nil)))
(insn 443 442 444 31 (parallel [
            (set (reg:SI 256 [ iftmp.172_170 ])
                (and:SI (reg:SI 256 [ iftmp.172_170 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":173 391 {*andsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 444 443 445 31 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 256 [ iftmp.172_170 ])
            (const_int 0 [0]))) "../src/spline.f":173 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 256 [ iftmp.172_170 ])
        (nil)))
(jump_insn 445 444 446 31 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 498)
            (pc))) "../src/spline.f":173 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 498)
;;  succ:       32 (FALLTHRU)
;;              33
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 32, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 31, next block 33, flags: (RTL)
;;  pred:       31 (FALLTHRU)
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 409 410 411 412 413 414 415 416 417 418 419 420 421 422 423
(note 446 445 447 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 447 446 448 32 (set (reg/f:DI 409)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60112 [0xffffffffffff1530])) [6 n+0 S8 A64])) "../src/spline.f":174 81 {*movdi_internal}
     (nil))
(insn 448 447 449 32 (set (reg:SI 257 [ _171 ])
        (mem:SI (reg/f:DI 409) [1 *n_212(D)+0 S4 A32])) "../src/spline.f":174 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 409)
        (nil)))
(insn 449 448 450 32 (set (reg:DI 258 [ _172 ])
        (sign_extend:DI (reg:SI 257 [ _171 ]))) "../src/spline.f":174 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 257 [ _171 ])
        (nil)))
(insn 450 449 451 32 (parallel [
            (set (reg:DI 259 [ _173 ])
                (plus:DI (reg:DI 258 [ _172 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":174 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 258 [ _172 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 451 450 452 32 (set (reg:SF 410)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC3") [flags 0x2]) [3  S4 A32])) "../src/spline.f":174 127 {*movsf_internal}
     (nil))
(insn 452 451 453 32 (set (mem:SF (plus:DI (plus:DI (mult:DI (reg:DI 259 [ _173 ])
                        (const_int 4 [0x4]))
                    (reg/f:DI 20 frame))
                (const_int -40064 [0xffffffffffff6380])) [3 b S4 A32])
        (reg:SF 410)) "../src/spline.f":174 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 410)
        (expr_list:REG_DEAD (reg:DI 259 [ _173 ])
            (nil))))
(insn 453 452 454 32 (set (reg/f:DI 411)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60112 [0xffffffffffff1530])) [6 n+0 S8 A64])) "../src/spline.f":175 81 {*movdi_internal}
     (nil))
(insn 454 453 455 32 (set (reg:SI 260 [ _174 ])
        (mem:SI (reg/f:DI 411) [1 *n_212(D)+0 S4 A32])) "../src/spline.f":175 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 411)
        (nil)))
(insn 455 454 456 32 (set (reg:DI 261 [ _175 ])
        (sign_extend:DI (reg:SI 260 [ _174 ]))) "../src/spline.f":175 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 260 [ _174 ])
        (nil)))
(insn 456 455 457 32 (parallel [
            (set (reg:DI 262 [ _176 ])
                (plus:DI (reg:DI 261 [ _175 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":175 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 261 [ _175 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 457 456 458 32 (set (reg:SF 412)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC4") [flags 0x2]) [3  S4 A32])) "../src/spline.f":175 127 {*movsf_internal}
     (nil))
(insn 458 457 459 32 (set (mem:SF (plus:DI (plus:DI (mult:DI (reg:DI 262 [ _176 ])
                        (const_int 4 [0x4]))
                    (reg/f:DI 20 frame))
                (const_int -20048 [0xffffffffffffb1b0])) [3 a S4 A32])
        (reg:SF 412)) "../src/spline.f":175 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 412)
        (expr_list:REG_DEAD (reg:DI 262 [ _176 ])
            (nil))))
(insn 459 458 460 32 (set (reg/f:DI 413)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60112 [0xffffffffffff1530])) [6 n+0 S8 A64])) "../src/spline.f":176 81 {*movdi_internal}
     (nil))
(insn 460 459 461 32 (set (reg:SI 263 [ _177 ])
        (mem:SI (reg/f:DI 413) [1 *n_212(D)+0 S4 A32])) "../src/spline.f":176 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 413)
        (nil)))
(insn 461 460 462 32 (set (reg:DI 264 [ _178 ])
        (sign_extend:DI (reg:SI 263 [ _177 ]))) "../src/spline.f":176 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 263 [ _177 ])
        (nil)))
(insn 462 461 463 32 (parallel [
            (set (reg:DI 265 [ _179 ])
                (plus:DI (reg:DI 264 [ _178 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":176 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 264 [ _178 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 463 462 464 32 (set (reg/f:DI 414)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60088 [0xffffffffffff1548])) [5 x+0 S8 A64])) "../src/spline.f":176 81 {*movdi_internal}
     (nil))
(insn 464 463 465 32 (set (reg:SF 266 [ _180 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 265 [ _179 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 414)) [3 *x_240(D) S4 A32])) "../src/spline.f":176 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 414)
        (expr_list:REG_DEAD (reg:DI 265 [ _179 ])
            (nil))))
(insn 465 464 466 32 (set (reg/f:DI 415)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60112 [0xffffffffffff1530])) [6 n+0 S8 A64])) "../src/spline.f":176 81 {*movdi_internal}
     (nil))
(insn 466 465 467 32 (set (reg:SI 267 [ _181 ])
        (mem:SI (reg/f:DI 415) [1 *n_212(D)+0 S4 A32])) "../src/spline.f":176 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 415)
        (nil)))
(insn 467 466 468 32 (parallel [
            (set (reg:SI 268 [ _182 ])
                (plus:SI (reg:SI 267 [ _181 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":176 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 267 [ _181 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 468 467 469 32 (set (reg:DI 269 [ _183 ])
        (sign_extend:DI (reg:SI 268 [ _182 ]))) "../src/spline.f":176 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 268 [ _182 ])
        (nil)))
(insn 469 468 470 32 (parallel [
            (set (reg:DI 270 [ _184 ])
                (plus:DI (reg:DI 269 [ _183 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":176 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 269 [ _183 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 470 469 471 32 (set (reg/f:DI 416)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60088 [0xffffffffffff1548])) [5 x+0 S8 A64])) "../src/spline.f":176 81 {*movdi_internal}
     (nil))
(insn 471 470 472 32 (set (reg:SF 271 [ _185 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 270 [ _184 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 416)) [3 *x_240(D) S4 A32])) "../src/spline.f":176 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 416)
        (expr_list:REG_DEAD (reg:DI 270 [ _184 ])
            (nil))))
(insn 472 471 473 32 (set (reg:SF 272 [ _186 ])
        (minus:SF (reg:SF 266 [ _180 ])
            (reg:SF 271 [ _185 ]))) "../src/spline.f":176 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 271 [ _185 ])
        (expr_list:REG_DEAD (reg:SF 266 [ _180 ])
            (nil))))
(insn 473 472 474 32 (set (reg:SF 273 [ _187 ])
        (reg:SF 272 [ _186 ])) "../src/spline.f":176 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 272 [ _186 ])
        (nil)))
(insn 474 473 475 32 (set (reg:SF 417)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC0") [flags 0x2]) [3  S4 A32])) "../src/spline.f":176 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 3.0e+0 [0x0.cp+2])
        (nil)))
(insn 475 474 476 32 (set (reg:SF 274 [ _188 ])
        (mult:SF (reg:SF 273 [ _187 ])
            (reg:SF 417))) "../src/spline.f":176 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 417)
        (expr_list:REG_DEAD (reg:SF 273 [ _187 ])
            (nil))))
(insn 476 475 477 32 (set (reg/f:DI 418)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60112 [0xffffffffffff1530])) [6 n+0 S8 A64])) "../src/spline.f":176 81 {*movdi_internal}
     (nil))
(insn 477 476 478 32 (set (reg:SI 275 [ _189 ])
        (mem:SI (reg/f:DI 418) [1 *n_212(D)+0 S4 A32])) "../src/spline.f":176 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 418)
        (nil)))
(insn 478 477 479 32 (set (reg:DI 276 [ _190 ])
        (sign_extend:DI (reg:SI 275 [ _189 ]))) "../src/spline.f":176 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 275 [ _189 ])
        (nil)))
(insn 479 478 480 32 (parallel [
            (set (reg:DI 277 [ _191 ])
                (plus:DI (reg:DI 276 [ _190 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":176 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 276 [ _190 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 480 479 481 32 (set (reg/f:DI 419)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60104 [0xffffffffffff1538])) [5 s+0 S8 A64])) "../src/spline.f":176 81 {*movdi_internal}
     (nil))
(insn 481 480 482 32 (set (reg:SF 278 [ _192 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 277 [ _191 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 419)) [3 *s_234(D) S4 A32])) "../src/spline.f":176 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 419)
        (expr_list:REG_DEAD (reg:DI 277 [ _191 ])
            (nil))))
(insn 482 481 483 32 (set (reg/f:DI 420)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60112 [0xffffffffffff1530])) [6 n+0 S8 A64])) "../src/spline.f":176 81 {*movdi_internal}
     (nil))
(insn 483 482 484 32 (set (reg:SI 279 [ _193 ])
        (mem:SI (reg/f:DI 420) [1 *n_212(D)+0 S4 A32])) "../src/spline.f":176 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 420)
        (nil)))
(insn 484 483 485 32 (parallel [
            (set (reg:SI 280 [ _194 ])
                (plus:SI (reg:SI 279 [ _193 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":176 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 279 [ _193 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 485 484 486 32 (set (reg:DI 281 [ _195 ])
        (sign_extend:DI (reg:SI 280 [ _194 ]))) "../src/spline.f":176 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 280 [ _194 ])
        (nil)))
(insn 486 485 487 32 (parallel [
            (set (reg:DI 282 [ _196 ])
                (plus:DI (reg:DI 281 [ _195 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":176 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 281 [ _195 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 487 486 488 32 (set (reg/f:DI 421)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60104 [0xffffffffffff1538])) [5 s+0 S8 A64])) "../src/spline.f":176 81 {*movdi_internal}
     (nil))
(insn 488 487 489 32 (set (reg:SF 283 [ _197 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 282 [ _196 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 421)) [3 *s_234(D) S4 A32])) "../src/spline.f":176 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 421)
        (expr_list:REG_DEAD (reg:DI 282 [ _196 ])
            (nil))))
(insn 489 488 490 32 (set (reg:SF 284 [ _198 ])
        (minus:SF (reg:SF 278 [ _192 ])
            (reg:SF 283 [ _197 ]))) "../src/spline.f":176 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 283 [ _197 ])
        (expr_list:REG_DEAD (reg:SF 278 [ _192 ])
            (nil))))
(insn 490 489 491 32 (set (reg:SF 285 [ _199 ])
        (reg:SF 284 [ _198 ])) "../src/spline.f":176 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 284 [ _198 ])
        (nil)))
(insn 491 490 492 32 (set (reg/f:DI 422)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60112 [0xffffffffffff1530])) [6 n+0 S8 A64])) "../src/spline.f":176 81 {*movdi_internal}
     (nil))
(insn 492 491 493 32 (set (reg:SI 286 [ _200 ])
        (mem:SI (reg/f:DI 422) [1 *n_212(D)+0 S4 A32])) "../src/spline.f":176 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 422)
        (nil)))
(insn 493 492 494 32 (set (reg:DI 287 [ _201 ])
        (sign_extend:DI (reg:SI 286 [ _200 ]))) "../src/spline.f":176 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 286 [ _200 ])
        (nil)))
(insn 494 493 495 32 (parallel [
            (set (reg:DI 288 [ _202 ])
                (plus:DI (reg:DI 287 [ _201 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":176 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 287 [ _201 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 495 494 496 32 (set (reg:SF 289 [ _203 ])
        (div:SF (reg:SF 274 [ _188 ])
            (reg:SF 285 [ _199 ]))) "../src/spline.f":176 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 285 [ _199 ])
        (expr_list:REG_DEAD (reg:SF 274 [ _188 ])
            (nil))))
(insn 496 495 497 32 (set (reg/f:DI 423)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60096 [0xffffffffffff1540])) [5 xs+0 S8 A64])) "../src/spline.f":176 81 {*movdi_internal}
     (nil))
(insn 497 496 498 32 (set (mem:SF (plus:DI (mult:DI (reg:DI 288 [ _202 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 423)) [3 *xs_241(D) S4 A32])
        (reg:SF 289 [ _203 ])) "../src/spline.f":176 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 423)
        (expr_list:REG_DEAD (reg:SF 289 [ _203 ])
            (expr_list:REG_DEAD (reg:DI 288 [ _202 ])
                (nil)))))
;;  succ:       33 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 33, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 32, next block 1, flags: (RTL)
;;  pred:       31
;;              32 (FALLTHRU)
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 424 425 426 427 428
(code_label 498 497 499 33 51 (nil) [1 uses])
(note 499 498 500 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 500 499 501 33 (set (reg:DI 424)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60112 [0xffffffffffff1530])) [6 n+0 S8 A64])) "../src/spline.f":180 81 {*movdi_internal}
     (nil))
(insn 501 500 502 33 (set (reg:DI 425)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60096 [0xffffffffffff1540])) [5 xs+0 S8 A64])) "../src/spline.f":180 81 {*movdi_internal}
     (nil))
(insn 502 501 503 33 (parallel [
            (set (reg:DI 426)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -60080 [0xffffffffffff1550])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":180 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 503 502 504 33 (parallel [
            (set (reg:DI 427)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -40064 [0xffffffffffff6380])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":180 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 504 503 505 33 (parallel [
            (set (reg:DI 428)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -20048 [0xffffffffffffb1b0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":180 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 505 504 506 33 (set (reg:DI 37 r8)
        (reg:DI 424)) "../src/spline.f":180 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 424)
        (nil)))
(insn 506 505 507 33 (set (reg:DI 2 cx)
        (reg:DI 425)) "../src/spline.f":180 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 425)
        (nil)))
(insn 507 506 508 33 (set (reg:DI 1 dx)
        (reg:DI 426)) "../src/spline.f":180 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 426)
        (nil)))
(insn 508 507 509 33 (set (reg:DI 4 si)
        (reg:DI 427)) "../src/spline.f":180 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 427)
        (nil)))
(insn 509 508 510 33 (set (reg:DI 5 di)
        (reg:DI 428)) "../src/spline.f":180 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 428)
        (nil)))
(call_insn 510 509 540 33 (call (mem:QI (symbol_ref:DI ("trisol_") [flags 0x403]  <function_decl 0x1427e4c00 trisol>) [0 trisol S1 A8])
        (const_int 0 [0])) "../src/spline.f":180 655 {*call}
     (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (nil)))))))
(insn 540 510 0 33 (const_int 0 [0]) "../src/spline.f":182 682 {nop}
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function spline (spline_, funcdef_no=4, decl_uid=3703, cgraph_uid=4, symbol_order=4)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 11 n_edges 12 count 11 (    1)
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 10 7 8 9
;;
;; Loop 1
;;  header 5, latch 6
;;  depth 1, outer 0
;;  nodes: 5 6
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 5 }
;; 5 succs { 10 6 }
;; 6 succs { 5 }
;; 10 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 9 }
;; 9 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 61.
verify found no changes in insn with uid = 302.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r324: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r324,l0) best DIREG, allocno GENERAL_REGS
    r323: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r323,l0) best SIREG, allocno GENERAL_REGS
    r322: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r322,l0) best DREG, allocno GENERAL_REGS
    r321: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r321,l0) best CREG, allocno GENERAL_REGS
    r320: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r320,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r319: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r319,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r318: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r318,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r317: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r317,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r316: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r316,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r315: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r315,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r314: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r314,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r313: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a27 (r313,l0) best SSE_REGS, allocno SSE_REGS
    r312: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r312,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r311: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a37 (r311,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r310: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a38 (r310,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r309: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a42 (r309,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r308: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a44 (r308,l0) best SSE_REGS, allocno SSE_REGS
    r307: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a47 (r307,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r306: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a49 (r306,l0) best SSE_REGS, allocno SSE_REGS
    r305: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a52 (r305,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r304: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a54 (r304,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r303: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a55 (r303,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r302: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a62 (r302,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r301: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a66 (r301,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r300: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a71 (r300,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r299: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a72 (r299,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r298: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a76 (r298,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r297: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a81 (r297,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r296: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a86 (r296,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r295: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a87 (r295,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r294: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a91 (r294,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r293: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a93 (r293,l0) best SSE_REGS, allocno SSE_REGS
    r292: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a96 (r292,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r291: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a98 (r291,l0) best SSE_REGS, allocno SSE_REGS
    r290: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a101 (r290,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r289: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a102 (r289,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r288: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a109 (r288,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r287: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a110 (r287,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r286: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a115 (r286,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r285: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a116 (r285,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r284: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a117 (r284,l0) best SSE_REGS, allocno SSE_REGS
    r283: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a118 (r283,l0) best SSE_REGS, allocno SSE_REGS
    r282: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a119 (r282,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r281: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a122 (r281,l0) best SSE_REGS, allocno SSE_REGS
    r280: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a125 (r280,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r279: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a134 (r279,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r278: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a138 (r278,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r277: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a139 (r277,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r276: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a142 (r276,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r275: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a148 (r275,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r274: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a151 (r274,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r273: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a152 (r273,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r272: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a156 (r272,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r271: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a158 (r271,l0) best SSE_REGS, allocno SSE_REGS
    r270: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a160 (r270,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r269: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a165 (r269,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r268: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a167 (r268,l0) best SSE_REGS, allocno SSE_REGS
    r267: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a169 (r267,l0) best SSE_REGS, allocno SSE_REGS
    r266: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a171 (r266,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r265: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a172 (r265,l0) best SSE_REGS, allocno SSE_REGS
    r264: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a175 (r264,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r263: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a178 (r263,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r262: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a179 (r262,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r261: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a183 (r261,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r260: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a184 (r260,l0) best SSE_REGS, allocno SSE_REGS
    r259: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a187 (r259,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r258: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a191 (r258,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r257: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a192 (r257,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r256: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a195 (r256,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r255: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a199 (r255,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r254: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a201 (r254,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r253: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a205 (r253,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r252: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a207 (r252,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r251: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a209 (r251,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r250: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a213 (r250,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r249: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a215 (r249,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r248: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a217 (r248,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r247: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a221 (r247,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r246: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a223 (r246,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r245: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a225 (r245,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r244: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a197 (r244,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r243: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a196 (r243,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r239: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a204 (r239,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r238: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a206 (r238,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r234: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a212 (r234,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r233: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a214 (r233,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r229: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a220 (r229,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r228: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a222 (r228,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r227: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a7 (r227,l0) best SSE_REGS, allocno SSE_REGS
    r226: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r226,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r225: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r225,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r224: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r224,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r223: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a8 (r223,l0) best SSE_REGS, allocno SSE_REGS
    r222: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a13 (r222,l0) best SSE_REGS, allocno SSE_REGS
    r221: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a14 (r221,l0) best SSE_REGS, allocno SSE_REGS
    r220: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r220,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r219: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r219,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r218: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r218,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r217: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r217,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r216: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a15 (r216,l0) best SSE_REGS, allocno SSE_REGS
    r215: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r215,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r214: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r214,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r213: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r213,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r212: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a9 (r212,l0) best SSE_REGS, allocno SSE_REGS
    r211: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a28 (r211,l0) best SSE_REGS, allocno SSE_REGS
    r210: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a29 (r210,l0) best SSE_REGS, allocno SSE_REGS
    r209: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a30 (r209,l0) best SSE_REGS, allocno SSE_REGS
    r208: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a33 (r208,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r207: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a34 (r207,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r206: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a35 (r206,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r205: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a36 (r205,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r204: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a31 (r204,l0) best SSE_REGS, allocno SSE_REGS
    r203: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a39 (r203,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r202: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a40 (r202,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r201: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a41 (r201,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r200: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a43 (r200,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r199: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a45 (r199,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r198: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a46 (r198,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r197: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a48 (r197,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r196: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a50 (r196,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r195: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a51 (r195,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r194: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a53 (r194,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r193: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a57 (r193,l0) best SSE_REGS, allocno SSE_REGS
    r192: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a56 (r192,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r191: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a60 (r191,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r190: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a61 (r190,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r189: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a58 (r189,l0) best SSE_REGS, allocno SSE_REGS
    r188: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a63 (r188,l0) best SSE_REGS, allocno SSE_REGS
    r187: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a64 (r187,l0) best SSE_REGS, allocno SSE_REGS
    r186: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a67 (r186,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r185: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a68 (r185,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r184: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a69 (r184,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r183: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a70 (r183,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r182: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a65 (r182,l0) best SSE_REGS, allocno SSE_REGS
    r181: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a73 (r181,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r180: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a74 (r180,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r179: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a75 (r179,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r178: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a59 (r178,l0) best SSE_REGS, allocno SSE_REGS
    r177: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a77 (r177,l0) best SSE_REGS, allocno SSE_REGS
    r176: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a78 (r176,l0) best SSE_REGS, allocno SSE_REGS
    r175: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a79 (r175,l0) best SSE_REGS, allocno SSE_REGS
    r174: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a82 (r174,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r173: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a83 (r173,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r172: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a84 (r172,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r171: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a85 (r171,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r170: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a80 (r170,l0) best SSE_REGS, allocno SSE_REGS
    r169: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a88 (r169,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r168: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a89 (r168,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r167: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a90 (r167,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r166: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a92 (r166,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r165: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a94 (r165,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r164: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a95 (r164,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r163: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a97 (r163,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r162: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a99 (r162,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r161: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a100 (r161,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r160: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a103 (r160,l0) best SSE_REGS, allocno SSE_REGS
    r159: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a104 (r159,l0) best SSE_REGS, allocno SSE_REGS
    r158: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a106 (r158,l0) best SSE_REGS, allocno SSE_REGS
    r157: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a107 (r157,l0) best SSE_REGS, allocno SSE_REGS
    r156: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a108 (r156,l0) best SSE_REGS, allocno SSE_REGS
    r155: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a105 (r155,l0) best SSE_REGS, allocno SSE_REGS
    r154: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a111 (r154,l0) best SSE_REGS, allocno SSE_REGS
    r153: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a112 (r153,l0) best SSE_REGS, allocno SSE_REGS
    r152: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a113 (r152,l0) best SSE_REGS, allocno SSE_REGS
    r151: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a114 (r151,l0) best SSE_REGS, allocno SSE_REGS
    r150: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a121 (r150,l0) best SSE_REGS, allocno SSE_REGS
    r149: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a120 (r149,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r148: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a124 (r148,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r147: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a123 (r147,l0) best SSE_REGS, allocno SSE_REGS
    r146: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a126 (r146,l0) best SSE_REGS, allocno SSE_REGS
    r145: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a127 (r145,l0) best SSE_REGS, allocno SSE_REGS
    r144: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a129 (r144,l0) best SSE_REGS, allocno SSE_REGS
    r143: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a130 (r143,l0) best SSE_REGS, allocno SSE_REGS
    r142: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a131 (r142,l0) best SSE_REGS, allocno SSE_REGS
    r141: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a132 (r141,l0) best SSE_REGS, allocno SSE_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a135 (r140,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a136 (r139,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a137 (r138,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r137: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a133 (r137,l0) best SSE_REGS, allocno SSE_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a140 (r136,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a141 (r135,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r134: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a128 (r134,l0) best SSE_REGS, allocno SSE_REGS
    r133: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a143 (r133,l0) best SSE_REGS, allocno SSE_REGS
    r132: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a144 (r132,l0) best SSE_REGS, allocno SSE_REGS
    r131: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a145 (r131,l0) best SSE_REGS, allocno SSE_REGS
    r130: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a146 (r130,l0) best SSE_REGS, allocno SSE_REGS
    r129: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a149 (r129,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r128: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a150 (r128,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r127: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a147 (r127,l0) best SSE_REGS, allocno SSE_REGS
    r126: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a153 (r126,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r125: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a154 (r125,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r124: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a155 (r124,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r123: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a157 (r123,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r122: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a159 (r122,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r121: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a162 (r121,l0) best SSE_REGS, allocno SSE_REGS
    r120: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a161 (r120,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a164 (r119,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r118: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a163 (r118,l0) best SSE_REGS, allocno SSE_REGS
    r117: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a166 (r117,l0) best SSE_REGS, allocno SSE_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a168 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a170 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a173 (r114,l0) best SSE_REGS, allocno SSE_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a176 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r112: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a177 (r112,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r111: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a174 (r111,l0) best SSE_REGS, allocno SSE_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a180 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a181 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a182 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a185 (r107,l0) best SSE_REGS, allocno SSE_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a188 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a189 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a190 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a186 (r103,l0) best SSE_REGS, allocno SSE_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a193 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a194 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a198 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a200 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a202 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a203 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a208 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a210 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a211 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a216 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a218 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a219 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a224 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r324,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a1(r323,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a2(r322,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a3(r321,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a4(r320,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a5(r319,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a6(r226,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a7(r227,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a8(r223,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 ALL_REGS:29 MEM:8
  a9(r212,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:16
  a10(r225,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a11(r224,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a12(r318,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a13(r222,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:9
  a14(r221,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a15(r216,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a16(r317,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a17(r220,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a18(r219,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a19(r218,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a20(r217,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a21(r316,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a22(r315,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a23(r215,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a24(r214,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a25(r213,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a26(r314,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a27(r313,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a28(r211,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 ALL_REGS:29 MEM:8
  a29(r210,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:9
  a30(r209,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a31(r204,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a32(r312,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a33(r208,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a34(r207,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a35(r206,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a36(r205,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a37(r311,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a38(r310,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a39(r203,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a40(r202,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a41(r201,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a42(r309,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a43(r200,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a44(r308,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 CLOBBERED_REGS:4 Q_REGS:4 NON_Q_REGS:4 TLS_GOTBASE_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:29 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:12
  a45(r199,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a46(r198,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a47(r307,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a48(r197,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a49(r306,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 CLOBBERED_REGS:4 Q_REGS:4 NON_Q_REGS:4 TLS_GOTBASE_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:29 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:12
  a50(r196,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a51(r195,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a52(r305,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a53(r194,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a54(r304,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a55(r303,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a56(r192,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a57(r193,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a58(r189,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 ALL_REGS:29 MEM:8
  a59(r178,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:16
  a60(r191,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a61(r190,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a62(r302,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a63(r188,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:9
  a64(r187,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a65(r182,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a66(r301,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a67(r186,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a68(r185,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a69(r184,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a70(r183,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a71(r300,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a72(r299,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a73(r181,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a74(r180,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a75(r179,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a76(r298,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a77(r177,l0) costs: AREG:18 DREG:18 CREG:18 BREG:18 SIREG:18 DIREG:18 AD_REGS:18 CLOBBERED_REGS:18 Q_REGS:18 NON_Q_REGS:18 TLS_GOTBASE_REGS:18 GENERAL_REGS:18 FP_TOP_REG:48 FP_SECOND_REG:48 FLOAT_REGS:48 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:42 FP_TOP_SSE_REGS:50 FP_SECOND_SSE_REGS:50 FLOAT_SSE_REGS:50 FLOAT_INT_REGS:48 INT_SSE_REGS:34 FLOAT_INT_SSE_REGS:50 ALL_REGS:50 MEM:15
  a78(r176,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:9
  a79(r175,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a80(r170,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a81(r297,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a82(r174,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a83(r173,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a84(r172,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a85(r171,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a86(r296,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a87(r295,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a88(r169,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a89(r168,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a90(r167,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a91(r294,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a92(r166,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a93(r293,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 CLOBBERED_REGS:4 Q_REGS:4 NON_Q_REGS:4 TLS_GOTBASE_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:29 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:12
  a94(r165,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a95(r164,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a96(r292,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a97(r163,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a98(r291,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 CLOBBERED_REGS:4 Q_REGS:4 NON_Q_REGS:4 TLS_GOTBASE_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:29 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:12
  a99(r162,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a100(r161,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a101(r290,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a102(r289,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a103(r160,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a104(r159,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 ALL_REGS:29 MEM:8
  a105(r155,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:16
  a106(r158,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:9
  a107(r157,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a108(r156,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a109(r288,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a110(r287,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a111(r154,l0) costs: AREG:18 DREG:18 CREG:18 BREG:18 SIREG:18 DIREG:18 AD_REGS:18 CLOBBERED_REGS:18 Q_REGS:18 NON_Q_REGS:18 TLS_GOTBASE_REGS:18 GENERAL_REGS:18 FP_TOP_REG:48 FP_SECOND_REG:48 FLOAT_REGS:48 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:42 FP_TOP_SSE_REGS:50 FP_SECOND_SSE_REGS:50 FLOAT_SSE_REGS:50 FLOAT_INT_REGS:48 INT_SSE_REGS:34 FLOAT_INT_SSE_REGS:50 ALL_REGS:50 MEM:15
  a112(r153,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:9
  a113(r152,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a114(r151,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a115(r286,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a116(r285,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a117(r284,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 CLOBBERED_REGS:4 Q_REGS:4 NON_Q_REGS:4 TLS_GOTBASE_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:29 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:12
  a118(r283,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 CLOBBERED_REGS:4 Q_REGS:4 NON_Q_REGS:4 TLS_GOTBASE_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:29 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:12
  a119(r282,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a120(r149,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a121(r150,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a122(r281,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a123(r147,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 ALL_REGS:29 MEM:8
  a124(r148,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a125(r280,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a126(r146,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:9
  a127(r145,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a128(r134,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a129(r144,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:16
  a130(r143,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 ALL_REGS:29 MEM:9
  a131(r142,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:9
  a132(r141,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a133(r137,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a134(r279,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a135(r140,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a136(r139,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a137(r138,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a138(r278,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a139(r277,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a140(r136,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a141(r135,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a142(r276,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a143(r133,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:16
  a144(r132,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 ALL_REGS:29 MEM:9
  a145(r131,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:9
  a146(r130,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a147(r127,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a148(r275,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a149(r129,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a150(r128,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a151(r274,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a152(r273,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a153(r126,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a154(r125,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a155(r124,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a156(r272,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a157(r123,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a158(r271,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 CLOBBERED_REGS:4 Q_REGS:4 NON_Q_REGS:4 TLS_GOTBASE_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:29 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:12
  a159(r122,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a160(r270,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a161(r120,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a162(r121,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a163(r118,l0) costs: AREG:18 DREG:18 CREG:18 BREG:18 SIREG:18 DIREG:18 AD_REGS:18 CLOBBERED_REGS:18 Q_REGS:18 NON_Q_REGS:18 TLS_GOTBASE_REGS:18 GENERAL_REGS:18 FP_TOP_REG:48 FP_SECOND_REG:48 FLOAT_REGS:48 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:42 FP_TOP_SSE_REGS:50 FP_SECOND_SSE_REGS:50 FLOAT_SSE_REGS:50 FLOAT_INT_REGS:48 INT_SSE_REGS:34 FLOAT_INT_SSE_REGS:50 ALL_REGS:50 MEM:15
  a164(r119,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a165(r269,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a166(r117,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:9
  a167(r268,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a168(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a169(r267,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 CLOBBERED_REGS:4 Q_REGS:4 NON_Q_REGS:4 TLS_GOTBASE_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:29 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:12
  a170(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a171(r266,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a172(r265,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a173(r114,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a174(r111,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a175(r264,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a176(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a177(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a178(r263,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a179(r262,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a180(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a181(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a182(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a183(r261,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a184(r260,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a185(r107,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a186(r103,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a187(r259,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a188(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a189(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a190(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a191(r258,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a192(r257,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a193(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a194(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a195(r256,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a196(r243,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a197(r244,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7
  a198(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a199(r255,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a200(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a201(r254,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a202(r97,l0) costs: AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:2
  a203(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a204(r239,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a205(r253,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a206(r238,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:38 INT_SSE_REGS:27 ALL_REGS:520 MEM:11
  a207(r252,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:8
  a208(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a209(r251,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a210(r93,l0) costs: AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:2
  a211(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a212(r234,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a213(r250,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a214(r233,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:38 INT_SSE_REGS:27 ALL_REGS:520 MEM:11
  a215(r249,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:8
  a216(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a217(r248,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a218(r89,l0) costs: AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:2
  a219(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a220(r229,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a221(r247,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a222(r228,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:38 INT_SSE_REGS:27 ALL_REGS:520 MEM:11
  a223(r246,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:8
  a224(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a225(r245,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8

   Insn 308(l0): point = 0
   Insn 302(l0): point = 2
   Insn 301(l0): point = 4
   Insn 300(l0): point = 6
   Insn 299(l0): point = 8
   Insn 298(l0): point = 10
   Insn 297(l0): point = 12
   Insn 296(l0): point = 14
   Insn 295(l0): point = 16
   Insn 294(l0): point = 18
   Insn 293(l0): point = 20
   Insn 292(l0): point = 22
   Insn 289(l0): point = 25
   Insn 288(l0): point = 27
   Insn 287(l0): point = 29
   Insn 286(l0): point = 31
   Insn 285(l0): point = 33
   Insn 284(l0): point = 35
   Insn 283(l0): point = 37
   Insn 282(l0): point = 39
   Insn 281(l0): point = 41
   Insn 280(l0): point = 43
   Insn 279(l0): point = 45
   Insn 278(l0): point = 47
   Insn 277(l0): point = 49
   Insn 276(l0): point = 51
   Insn 275(l0): point = 53
   Insn 274(l0): point = 55
   Insn 273(l0): point = 57
   Insn 272(l0): point = 59
   Insn 271(l0): point = 61
   Insn 270(l0): point = 63
   Insn 269(l0): point = 65
   Insn 268(l0): point = 67
   Insn 267(l0): point = 69
   Insn 266(l0): point = 71
   Insn 265(l0): point = 73
   Insn 264(l0): point = 75
   Insn 263(l0): point = 77
   Insn 262(l0): point = 79
   Insn 261(l0): point = 81
   Insn 260(l0): point = 83
   Insn 259(l0): point = 85
   Insn 258(l0): point = 87
   Insn 257(l0): point = 89
   Insn 256(l0): point = 91
   Insn 255(l0): point = 93
   Insn 254(l0): point = 95
   Insn 253(l0): point = 97
   Insn 252(l0): point = 99
   Insn 251(l0): point = 101
   Insn 250(l0): point = 103
   Insn 249(l0): point = 105
   Insn 248(l0): point = 107
   Insn 247(l0): point = 109
   Insn 246(l0): point = 111
   Insn 245(l0): point = 113
   Insn 244(l0): point = 115
   Insn 243(l0): point = 117
   Insn 242(l0): point = 119
   Insn 241(l0): point = 121
   Insn 240(l0): point = 123
   Insn 239(l0): point = 125
   Insn 237(l0): point = 128
   Insn 236(l0): point = 130
   Insn 235(l0): point = 132
   Insn 234(l0): point = 134
   Insn 233(l0): point = 136
   Insn 232(l0): point = 138
   Insn 231(l0): point = 140
   Insn 230(l0): point = 142
   Insn 229(l0): point = 144
   Insn 228(l0): point = 146
   Insn 227(l0): point = 148
   Insn 226(l0): point = 150
   Insn 225(l0): point = 152
   Insn 224(l0): point = 154
   Insn 223(l0): point = 156
   Insn 222(l0): point = 158
   Insn 221(l0): point = 160
   Insn 220(l0): point = 162
   Insn 219(l0): point = 164
   Insn 218(l0): point = 166
   Insn 217(l0): point = 168
   Insn 216(l0): point = 170
   Insn 215(l0): point = 172
   Insn 214(l0): point = 174
   Insn 213(l0): point = 176
   Insn 212(l0): point = 178
   Insn 211(l0): point = 180
   Insn 210(l0): point = 182
   Insn 209(l0): point = 184
   Insn 208(l0): point = 186
   Insn 207(l0): point = 188
   Insn 206(l0): point = 190
   Insn 205(l0): point = 192
   Insn 204(l0): point = 194
   Insn 203(l0): point = 196
   Insn 202(l0): point = 198
   Insn 201(l0): point = 200
   Insn 200(l0): point = 202
   Insn 199(l0): point = 204
   Insn 198(l0): point = 206
   Insn 197(l0): point = 208
   Insn 196(l0): point = 210
   Insn 195(l0): point = 212
   Insn 194(l0): point = 214
   Insn 193(l0): point = 216
   Insn 192(l0): point = 218
   Insn 191(l0): point = 220
   Insn 190(l0): point = 222
   Insn 189(l0): point = 224
   Insn 188(l0): point = 226
   Insn 187(l0): point = 228
   Insn 186(l0): point = 230
   Insn 185(l0): point = 232
   Insn 184(l0): point = 234
   Insn 183(l0): point = 236
   Insn 182(l0): point = 238
   Insn 181(l0): point = 240
   Insn 180(l0): point = 242
   Insn 179(l0): point = 244
   Insn 178(l0): point = 246
   Insn 177(l0): point = 248
   Insn 176(l0): point = 250
   Insn 175(l0): point = 252
   Insn 174(l0): point = 254
   Insn 173(l0): point = 256
   Insn 172(l0): point = 258
   Insn 171(l0): point = 260
   Insn 170(l0): point = 262
   Insn 169(l0): point = 264
   Insn 168(l0): point = 266
   Insn 167(l0): point = 268
   Insn 166(l0): point = 270
   Insn 165(l0): point = 272
   Insn 164(l0): point = 274
   Insn 313(l0): point = 277
   Insn 73(l0): point = 280
   Insn 72(l0): point = 282
   Insn 71(l0): point = 284
   Insn 70(l0): point = 286
   Insn 309(l0): point = 289
   Insn 158(l0): point = 291
   Insn 157(l0): point = 293
   Insn 156(l0): point = 295
   Insn 155(l0): point = 297
   Insn 154(l0): point = 299
   Insn 153(l0): point = 301
   Insn 152(l0): point = 303
   Insn 151(l0): point = 305
   Insn 150(l0): point = 307
   Insn 149(l0): point = 309
   Insn 148(l0): point = 311
   Insn 147(l0): point = 313
   Insn 146(l0): point = 315
   Insn 145(l0): point = 317
   Insn 144(l0): point = 319
   Insn 143(l0): point = 321
   Insn 142(l0): point = 323
   Insn 141(l0): point = 325
   Insn 140(l0): point = 327
   Insn 139(l0): point = 329
   Insn 138(l0): point = 331
   Insn 137(l0): point = 333
   Insn 136(l0): point = 335
   Insn 135(l0): point = 337
   Insn 134(l0): point = 339
   Insn 133(l0): point = 341
   Insn 132(l0): point = 343
   Insn 131(l0): point = 345
   Insn 130(l0): point = 347
   Insn 129(l0): point = 349
   Insn 128(l0): point = 351
   Insn 127(l0): point = 353
   Insn 126(l0): point = 355
   Insn 125(l0): point = 357
   Insn 124(l0): point = 359
   Insn 123(l0): point = 361
   Insn 122(l0): point = 363
   Insn 121(l0): point = 365
   Insn 120(l0): point = 367
   Insn 119(l0): point = 369
   Insn 118(l0): point = 371
   Insn 117(l0): point = 373
   Insn 116(l0): point = 375
   Insn 115(l0): point = 377
   Insn 114(l0): point = 379
   Insn 113(l0): point = 381
   Insn 112(l0): point = 383
   Insn 111(l0): point = 385
   Insn 110(l0): point = 387
   Insn 109(l0): point = 389
   Insn 108(l0): point = 391
   Insn 107(l0): point = 393
   Insn 106(l0): point = 395
   Insn 105(l0): point = 397
   Insn 104(l0): point = 399
   Insn 103(l0): point = 401
   Insn 102(l0): point = 403
   Insn 101(l0): point = 405
   Insn 100(l0): point = 407
   Insn 99(l0): point = 409
   Insn 98(l0): point = 411
   Insn 97(l0): point = 413
   Insn 96(l0): point = 415
   Insn 95(l0): point = 417
   Insn 94(l0): point = 419
   Insn 93(l0): point = 421
   Insn 92(l0): point = 423
   Insn 91(l0): point = 425
   Insn 90(l0): point = 427
   Insn 89(l0): point = 429
   Insn 88(l0): point = 431
   Insn 87(l0): point = 433
   Insn 86(l0): point = 435
   Insn 85(l0): point = 437
   Insn 84(l0): point = 439
   Insn 83(l0): point = 441
   Insn 82(l0): point = 443
   Insn 81(l0): point = 445
   Insn 80(l0): point = 447
   Insn 79(l0): point = 449
   Insn 78(l0): point = 451
   Insn 77(l0): point = 453
   Insn 76(l0): point = 455
   Insn 75(l0): point = 457
   Insn 68(l0): point = 460
   Insn 67(l0): point = 462
   Insn 66(l0): point = 464
   Insn 65(l0): point = 466
   Insn 61(l0): point = 469
   Insn 60(l0): point = 471
   Insn 59(l0): point = 473
   Insn 57(l0): point = 476
   Insn 56(l0): point = 478
   Insn 55(l0): point = 480
   Insn 54(l0): point = 482
   Insn 50(l0): point = 484
   Insn 49(l0): point = 486
   Insn 48(l0): point = 488
   Insn 46(l0): point = 490
   Insn 44(l0): point = 492
   Insn 45(l0): point = 494
   Insn 43(l0): point = 496
   Insn 42(l0): point = 498
   Insn 41(l0): point = 500
   Insn 40(l0): point = 502
   Insn 39(l0): point = 504
   Insn 35(l0): point = 506
   Insn 34(l0): point = 508
   Insn 33(l0): point = 510
   Insn 31(l0): point = 512
   Insn 29(l0): point = 514
   Insn 30(l0): point = 516
   Insn 28(l0): point = 518
   Insn 27(l0): point = 520
   Insn 26(l0): point = 522
   Insn 25(l0): point = 524
   Insn 24(l0): point = 526
   Insn 20(l0): point = 528
   Insn 19(l0): point = 530
   Insn 18(l0): point = 532
   Insn 16(l0): point = 534
   Insn 14(l0): point = 536
   Insn 15(l0): point = 538
   Insn 13(l0): point = 540
   Insn 12(l0): point = 542
   Insn 11(l0): point = 544
   Insn 10(l0): point = 546
   Insn 9(l0): point = 548
   Insn 5(l0): point = 550
   Insn 4(l0): point = 552
   Insn 3(l0): point = 554
   Insn 2(l0): point = 556
 a0(r324): [5..14]
 a1(r323): [7..16]
 a2(r322): [9..18]
 a3(r321): [11..20]
 a4(r320): [13..22]
 a5(r319): [26..27]
 a6(r226): [26..31]
 a7(r227): [26..29]
 a8(r223): [30..39]
 a9(r212): [30..69]
 a10(r225): [32..33]
 a11(r224): [34..35]
 a12(r318): [36..37]
 a13(r222): [40..41]
 a14(r221): [42..43]
 a15(r216): [42..57]
 a16(r317): [44..45]
 a17(r220): [44..47]
 a18(r219): [48..49]
 a19(r218): [50..51]
 a20(r217): [52..53]
 a21(r316): [54..55]
 a22(r315): [58..59]
 a23(r215): [58..61]
 a24(r214): [62..63]
 a25(r213): [64..65]
 a26(r314): [66..67]
 a27(r313): [70..71]
 a28(r211): [70..73]
 a29(r210): [74..75]
 a30(r209): [76..77]
 a31(r204): [76..91]
 a32(r312): [78..79]
 a33(r208): [78..81]
 a34(r207): [82..83]
 a35(r206): [84..85]
 a36(r205): [86..87]
 a37(r311): [88..89]
 a38(r310): [92..93]
 a39(r203): [92..95]
 a40(r202): [96..97]
 a41(r201): [98..99]
 a42(r309): [100..101]
 a43(r200): [104..107]
 a44(r308): [104..105]
 a45(r199): [108..109]
 a46(r198): [110..111]
 a47(r307): [112..113]
 a48(r197): [116..119]
 a49(r306): [116..117]
 a50(r196): [120..121]
 a51(r195): [122..123]
 a52(r305): [124..125]
 a53(r194): [131..132]
 a54(r304): [133..134]
 a55(r303): [137..138]
 a56(r192): [137..142]
 a57(r193): [137..140]
 a58(r189): [141..150]
 a59(r178): [141..180]
 a60(r191): [143..144]
 a61(r190): [145..146]
 a62(r302): [147..148]
 a63(r188): [151..152]
 a64(r187): [153..154]
 a65(r182): [153..168]
 a66(r301): [155..156]
 a67(r186): [155..158]
 a68(r185): [159..160]
 a69(r184): [161..162]
 a70(r183): [163..164]
 a71(r300): [165..166]
 a72(r299): [169..170]
 a73(r181): [169..172]
 a74(r180): [173..174]
 a75(r179): [175..176]
 a76(r298): [177..178]
 a77(r177): [181..182]
 a78(r176): [183..184]
 a79(r175): [185..186]
 a80(r170): [185..200]
 a81(r297): [187..188]
 a82(r174): [187..190]
 a83(r173): [191..192]
 a84(r172): [193..194]
 a85(r171): [195..196]
 a86(r296): [197..198]
 a87(r295): [201..202]
 a88(r169): [201..204]
 a89(r168): [205..206]
 a90(r167): [207..208]
 a91(r294): [209..210]
 a92(r166): [213..216]
 a93(r293): [213..214]
 a94(r165): [217..218]
 a95(r164): [219..220]
 a96(r292): [221..222]
 a97(r163): [225..228]
 a98(r291): [225..226]
 a99(r162): [229..230]
 a100(r161): [231..232]
 a101(r290): [233..234]
 a102(r289): [237..238]
 a103(r160): [237..240]
 a104(r159): [241..242]
 a105(r155): [241..254]
 a106(r158): [243..244]
 a107(r157): [245..246]
 a108(r156): [245..250]
 a109(r288): [247..248]
 a110(r287): [251..252]
 a111(r154): [255..256]
 a112(r153): [257..258]
 a113(r152): [259..260]
 a114(r151): [259..264]
 a115(r286): [261..262]
 a116(r285): [265..266]
 a117(r284): [269..270]
 a118(r283): [273..274]
 a119(r282): [294..295]
 a120(r149): [294..301]
 a121(r150): [294..297]
 a122(r281): [298..299]
 a123(r147): [298..307]
 a124(r148): [302..303]
 a125(r280): [304..305]
 a126(r146): [308..309]
 a127(r145): [310..311]
 a128(r134): [310..341]
 a129(r144): [312..313]
 a130(r143): [314..315]
 a131(r142): [316..317]
 a132(r141): [318..319]
 a133(r137): [318..331]
 a134(r279): [320..321]
 a135(r140): [320..323]
 a136(r139): [324..325]
 a137(r138): [326..327]
 a138(r278): [328..329]
 a139(r277): [332..333]
 a140(r136): [332..335]
 a141(r135): [336..337]
 a142(r276): [338..339]
 a143(r133): [342..343]
 a144(r132): [344..345]
 a145(r131): [346..347]
 a146(r130): [348..349]
 a147(r127): [348..359]
 a148(r275): [350..351]
 a149(r129): [350..353]
 a150(r128): [354..355]
 a151(r274): [356..357]
 a152(r273): [360..361]
 a153(r126): [360..363]
 a154(r125): [364..365]
 a155(r124): [366..367]
 a156(r272): [368..369]
 a157(r123): [372..375]
 a158(r271): [372..373]
 a159(r122): [376..377]
 a160(r270): [378..379]
 a161(r120): [382..385]
 a162(r121): [382..383]
 a163(r118): [384..391]
 a164(r119): [386..387]
 a165(r269): [388..389]
 a166(r117): [392..393]
 a167(r268): [394..395]
 a168(r116): [398..401]
 a169(r267): [398..399]
 a170(r115): [402..403]
 a171(r266): [404..405]
 a172(r265): [408..409]
 a173(r114): [410..411]
 a174(r111): [410..421]
 a175(r264): [412..413]
 a176(r113): [412..415]
 a177(r112): [416..417]
 a178(r263): [418..419]
 a179(r262): [422..423]
 a180(r110): [422..425]
 a181(r109): [426..427]
 a182(r108): [428..429]
 a183(r261): [430..431]
 a184(r260): [434..435]
 a185(r107): [436..437]
 a186(r103): [436..449]
 a187(r259): [438..439]
 a188(r106): [438..441]
 a189(r105): [442..443]
 a190(r104): [444..445]
 a191(r258): [446..447]
 a192(r257): [450..451]
 a193(r102): [450..453]
 a194(r101): [454..455]
 a195(r256): [456..457]
 a196(r243): [280..462]
 a197(r244): [283..284]
 a198(r100): [463..464]
 a199(r255): [465..466]
 a200(r99): [479..480]
 a201(r254): [481..482]
 a202(r97 [0]): [485..558]
 a202(r97 [1]): [484..558]
 a203(r96): [487..488]
 a204(r239): [489..490]
 a205(r253): [491..494]
 a206(r238): [491..496]
 a207(r252): [499..500]
 a208(r95): [501..502]
 a209(r251): [503..504]
 a210(r93 [0]): [507..558]
 a210(r93 [1]): [506..558]
 a211(r92): [509..510]
 a212(r234): [511..512]
 a213(r250): [513..516]
 a214(r233): [513..518]
 a215(r249): [521..522]
 a216(r91): [523..524]
 a217(r248): [525..526]
 a218(r89 [0]): [529..558]
 a218(r89 [1]): [528..558]
 a219(r88): [531..532]
 a220(r229): [533..534]
 a221(r247): [535..538]
 a222(r228): [535..540]
 a223(r246): [543..544]
 a224(r87): [545..546]
 a225(r245): [547..548]
Compressing live ranges: from 559 to 338 - 60%
Ranges after the compression:
 a0(r324): [0..1]
 a1(r323): [0..1]
 a2(r322): [0..1]
 a3(r321): [0..1]
 a4(r320): [0..1]
 a5(r319): [2..3]
 a6(r226): [2..5]
 a7(r227): [2..3]
 a8(r223): [4..11]
 a9(r212): [4..33]
 a10(r225): [6..7]
 a11(r224): [8..9]
 a12(r318): [10..11]
 a13(r222): [12..13]
 a14(r221): [14..15]
 a15(r216): [14..25]
 a16(r317): [16..17]
 a17(r220): [16..17]
 a18(r219): [18..19]
 a19(r218): [20..21]
 a20(r217): [22..23]
 a21(r316): [24..25]
 a22(r315): [26..27]
 a23(r215): [26..27]
 a24(r214): [28..29]
 a25(r213): [30..31]
 a26(r314): [32..33]
 a27(r313): [34..35]
 a28(r211): [34..35]
 a29(r210): [36..37]
 a30(r209): [38..39]
 a31(r204): [38..49]
 a32(r312): [40..41]
 a33(r208): [40..41]
 a34(r207): [42..43]
 a35(r206): [44..45]
 a36(r205): [46..47]
 a37(r311): [48..49]
 a38(r310): [50..51]
 a39(r203): [50..51]
 a40(r202): [52..53]
 a41(r201): [54..55]
 a42(r309): [56..57]
 a43(r200): [58..59]
 a44(r308): [58..59]
 a45(r199): [60..61]
 a46(r198): [62..63]
 a47(r307): [64..65]
 a48(r197): [66..67]
 a49(r306): [66..67]
 a50(r196): [68..69]
 a51(r195): [70..71]
 a52(r305): [72..73]
 a53(r194): [74..75]
 a54(r304): [76..77]
 a55(r303): [78..79]
 a56(r192): [78..81]
 a57(r193): [78..79]
 a58(r189): [80..87]
 a59(r178): [80..109]
 a60(r191): [82..83]
 a61(r190): [84..85]
 a62(r302): [86..87]
 a63(r188): [88..89]
 a64(r187): [90..91]
 a65(r182): [90..101]
 a66(r301): [92..93]
 a67(r186): [92..93]
 a68(r185): [94..95]
 a69(r184): [96..97]
 a70(r183): [98..99]
 a71(r300): [100..101]
 a72(r299): [102..103]
 a73(r181): [102..103]
 a74(r180): [104..105]
 a75(r179): [106..107]
 a76(r298): [108..109]
 a77(r177): [110..111]
 a78(r176): [112..113]
 a79(r175): [114..115]
 a80(r170): [114..125]
 a81(r297): [116..117]
 a82(r174): [116..117]
 a83(r173): [118..119]
 a84(r172): [120..121]
 a85(r171): [122..123]
 a86(r296): [124..125]
 a87(r295): [126..127]
 a88(r169): [126..127]
 a89(r168): [128..129]
 a90(r167): [130..131]
 a91(r294): [132..133]
 a92(r166): [134..135]
 a93(r293): [134..135]
 a94(r165): [136..137]
 a95(r164): [138..139]
 a96(r292): [140..141]
 a97(r163): [142..143]
 a98(r291): [142..143]
 a99(r162): [144..145]
 a100(r161): [146..147]
 a101(r290): [148..149]
 a102(r289): [150..151]
 a103(r160): [150..151]
 a104(r159): [152..153]
 a105(r155): [152..161]
 a106(r158): [154..155]
 a107(r157): [156..157]
 a108(r156): [156..159]
 a109(r288): [158..159]
 a110(r287): [160..161]
 a111(r154): [162..163]
 a112(r153): [164..165]
 a113(r152): [166..167]
 a114(r151): [166..169]
 a115(r286): [168..169]
 a116(r285): [170..171]
 a117(r284): [172..173]
 a118(r283): [174..175]
 a119(r282): [178..179]
 a120(r149): [178..181]
 a121(r150): [178..179]
 a122(r281): [180..181]
 a123(r147): [180..185]
 a124(r148): [182..183]
 a125(r280): [184..185]
 a126(r146): [186..187]
 a127(r145): [188..189]
 a128(r134): [188..211]
 a129(r144): [190..191]
 a130(r143): [192..193]
 a131(r142): [194..195]
 a132(r141): [196..197]
 a133(r137): [196..205]
 a134(r279): [198..199]
 a135(r140): [198..199]
 a136(r139): [200..201]
 a137(r138): [202..203]
 a138(r278): [204..205]
 a139(r277): [206..207]
 a140(r136): [206..207]
 a141(r135): [208..209]
 a142(r276): [210..211]
 a143(r133): [212..213]
 a144(r132): [214..215]
 a145(r131): [216..217]
 a146(r130): [218..219]
 a147(r127): [218..225]
 a148(r275): [220..221]
 a149(r129): [220..221]
 a150(r128): [222..223]
 a151(r274): [224..225]
 a152(r273): [226..227]
 a153(r126): [226..227]
 a154(r125): [228..229]
 a155(r124): [230..231]
 a156(r272): [232..233]
 a157(r123): [234..235]
 a158(r271): [234..235]
 a159(r122): [236..237]
 a160(r270): [238..239]
 a161(r120): [240..243]
 a162(r121): [240..241]
 a163(r118): [242..247]
 a164(r119): [244..245]
 a165(r269): [246..247]
 a166(r117): [248..249]
 a167(r268): [250..251]
 a168(r116): [252..253]
 a169(r267): [252..253]
 a170(r115): [254..255]
 a171(r266): [256..257]
 a172(r265): [258..259]
 a173(r114): [260..261]
 a174(r111): [260..267]
 a175(r264): [262..263]
 a176(r113): [262..263]
 a177(r112): [264..265]
 a178(r263): [266..267]
 a179(r262): [268..269]
 a180(r110): [268..269]
 a181(r109): [270..271]
 a182(r108): [272..273]
 a183(r261): [274..275]
 a184(r260): [276..277]
 a185(r107): [278..279]
 a186(r103): [278..287]
 a187(r259): [280..281]
 a188(r106): [280..281]
 a189(r105): [282..283]
 a190(r104): [284..285]
 a191(r258): [286..287]
 a192(r257): [288..289]
 a193(r102): [288..289]
 a194(r101): [290..291]
 a195(r256): [292..293]
 a196(r243): [176..293]
 a197(r244): [176..177]
 a198(r100): [294..295]
 a199(r255): [296..297]
 a200(r99): [298..299]
 a201(r254): [300..301]
 a202(r97 [0]): [302..337]
 a202(r97 [1]): [302..337]
 a203(r96): [302..303]
 a204(r239): [304..305]
 a205(r253): [306..307]
 a206(r238): [306..307]
 a207(r252): [308..309]
 a208(r95): [310..311]
 a209(r251): [312..313]
 a210(r93 [0]): [314..337]
 a210(r93 [1]): [314..337]
 a211(r92): [314..315]
 a212(r234): [316..317]
 a213(r250): [318..319]
 a214(r233): [318..319]
 a215(r249): [320..321]
 a216(r91): [322..323]
 a217(r248): [324..325]
 a218(r89 [0]): [326..337]
 a218(r89 [1]): [326..337]
 a219(r88): [326..327]
 a220(r229): [328..329]
 a221(r247): [330..331]
 a222(r228): [330..331]
 a223(r246): [332..333]
 a224(r87): [334..335]
 a225(r245): [336..337]
  regions=1, blocks=11, points=338
    allocnos=226 (big 3), copies=0, conflicts=0, ranges=229
Disposition:
  224:r87  l0     0  219:r88  l0     0  218:r89  l0    41  216:r91  l0     0
  211:r92  l0     0  210:r93  l0    39  208:r95  l0     0  203:r96  l0     0
  202:r97  l0    37  200:r99  l0     0  198:r100 l0     0  194:r101 l0     0
  193:r102 l0     1  186:r103 l0    21  190:r104 l0     0  189:r105 l0     0
  188:r106 l0     1  185:r107 l0    22  182:r108 l0     0  181:r109 l0     0
  180:r110 l0     1  174:r111 l0    21  177:r112 l0     0  176:r113 l0     1
  173:r114 l0    22  170:r115 l0     0  168:r116 l0     0  166:r117 l0    21
  163:r118 l0    21  164:r119 l0     0  161:r120 l0     0  162:r121 l0    21
  159:r122 l0     0  157:r123 l0     0  155:r124 l0     0  154:r125 l0     0
  153:r126 l0     1  147:r127 l0    21  150:r128 l0     0  149:r129 l0     1
  146:r130 l0    22  145:r131 l0    21  144:r132 l0    21  143:r133 l0    21
  128:r134 l0    22  141:r135 l0     0  140:r136 l0     1  133:r137 l0    21
  137:r138 l0     0  136:r139 l0     0  135:r140 l0     1  132:r141 l0    23
  131:r142 l0    21  130:r143 l0    21  129:r144 l0    21  127:r145 l0    21
  126:r146 l0    21  123:r147 l0    22  124:r148 l0     0  120:r149 l0     1
  121:r150 l0    21  114:r151 l0    21  113:r152 l0    22  112:r153 l0    21
  111:r154 l0    21  105:r155 l0    21  108:r156 l0    22  107:r157 l0    23
  106:r158 l0    22  104:r159 l0    22  103:r160 l0    21  100:r161 l0     0
   99:r162 l0     0   97:r163 l0     0   95:r164 l0     0   94:r165 l0     0
   92:r166 l0     0   90:r167 l0     0   89:r168 l0     0   88:r169 l0     1
   80:r170 l0    21   85:r171 l0     0   84:r172 l0     0   83:r173 l0     0
   82:r174 l0     1   79:r175 l0    22   78:r176 l0    21   77:r177 l0    21
   59:r178 l0    21   75:r179 l0     0   74:r180 l0     0   73:r181 l0     1
   65:r182 l0    22   70:r183 l0     0   69:r184 l0     0   68:r185 l0     0
   67:r186 l0     1   64:r187 l0    23   63:r188 l0    22   58:r189 l0    22
   61:r190 l0     0   60:r191 l0     0   56:r192 l0     1   57:r193 l0    21
   53:r194 l0     0   51:r195 l0     0   50:r196 l0     0   48:r197 l0     0
   46:r198 l0     0   45:r199 l0     0   43:r200 l0     0   41:r201 l0     0
   40:r202 l0     0   39:r203 l0     1   31:r204 l0    21   36:r205 l0     0
   35:r206 l0     0   34:r207 l0     0   33:r208 l0     1   30:r209 l0    22
   29:r210 l0    21   28:r211 l0    22    9:r212 l0    21   25:r213 l0     0
   24:r214 l0     0   23:r215 l0     1   15:r216 l0    22   20:r217 l0     0
   19:r218 l0     0   18:r219 l0     0   17:r220 l0     1   14:r221 l0    23
   13:r222 l0    22    8:r223 l0    22   11:r224 l0     0   10:r225 l0     0
    6:r226 l0     1    7:r227 l0    21  222:r228 l0     0  220:r229 l0     0
  214:r233 l0     0  212:r234 l0     0  206:r238 l0     0  204:r239 l0     0
  196:r243 l0     2  197:r244 l0     0  225:r245 l0     0  223:r246 l0     0
  221:r247 l0     1  217:r248 l0     0  215:r249 l0     0  213:r250 l0     1
  209:r251 l0     0  207:r252 l0     0  205:r253 l0     1  201:r254 l0     0
  199:r255 l0     0  195:r256 l0     0  192:r257 l0     0  191:r258 l0     0
  187:r259 l0     0  184:r260 l0    21  183:r261 l0     0  179:r262 l0     0
  178:r263 l0     0  175:r264 l0     0  172:r265 l0    21  171:r266 l0     0
  169:r267 l0    21  167:r268 l0    21  165:r269 l0     0  160:r270 l0     0
  158:r271 l0    21  156:r272 l0     0  152:r273 l0     0  151:r274 l0     0
  148:r275 l0     0  142:r276 l0     0  139:r277 l0     0  138:r278 l0     0
  134:r279 l0     0  125:r280 l0     0  122:r281 l0    21  119:r282 l0     0
  118:r283 l0    21  117:r284 l0    21  116:r285 l0     0  115:r286 l0     0
  110:r287 l0     0  109:r288 l0     0  102:r289 l0     0  101:r290 l0     0
   98:r291 l0    21   96:r292 l0     0   93:r293 l0    21   91:r294 l0     0
   87:r295 l0     0   86:r296 l0     0   81:r297 l0     0   76:r298 l0     0
   72:r299 l0     0   71:r300 l0     0   66:r301 l0     0   62:r302 l0     0
   55:r303 l0     0   54:r304 l0     0   52:r305 l0     0   49:r306 l0    21
   47:r307 l0     0   44:r308 l0    21   42:r309 l0     0   38:r310 l0     0
   37:r311 l0     0   32:r312 l0     0   27:r313 l0    21   26:r314 l0     0
   22:r315 l0     0   21:r316 l0     0   16:r317 l0     0   12:r318 l0     0
    5:r319 l0     0    4:r320 l0     5    3:r321 l0     2    2:r322 l0     1
    1:r323 l0     4    0:r324 l0     0
+++Costs: overall 2, reg 2, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


spline

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 37 [r8]
;;  ref usage 	r0={3d} r1={4d,2u} r2={4d,2u} r4={5d,3u} r5={5d,3u} r6={1d,10u} r7={1d,12u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,9u} r17={48d,7u} r18={2d} r19={2d} r20={1d,104u,4e} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={4d,1u} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r87={1d,1u} r88={1d,1u} r89={2d,2u} r91={1d,1u} r92={1d,1u} r93={2d,2u} r95={1d,1u} r96={1d,1u} r97={2d,2u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,2u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,1u} r127={1d,1u} r128={1d,1u} r129={1d,1u} r130={1d,1u} r131={1d,1u} r132={1d,1u} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,2u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d,1u} r165={1d,1u} r166={1d,1u} r167={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,1u} r171={1d,1u} r172={1d,1u} r173={1d,1u} r174={1d,1u} r175={1d,1u} r176={1d,1u} r177={1d,2u} r178={1d,1u} r179={1d,1u} r180={1d,1u} r181={1d,1u} r182={1d,1u} r183={1d,1u} r184={1d,1u} r185={1d,1u} r186={1d,1u} r187={1d,1u} r188={1d,1u} r189={1d,1u} r190={1d,1u} r191={1d,1u} r192={1d,1u} r193={1d,1u} r194={1d,1u} r195={1d,1u} r196={1d,1u} r197={1d,1u} r198={1d,1u} r199={1d,1u} r200={1d,1u} r201={1d,1u} r202={1d,1u} r203={1d,1u} r204={1d,1u} r205={1d,1u} r206={1d,1u} r207={1d,1u} r208={1d,1u} r209={1d,1u} r210={1d,1u} r211={1d,1u} r212={1d,1u} r213={1d,1u} r214={1d,1u} r215={1d,1u} r216={1d,1u} r217={1d,1u} r218={1d,1u} r219={1d,1u} r220={1d,1u} r221={1d,1u} r222={1d,1u} r223={1d,1u} r224={1d,1u} r225={1d,1u} r226={1d,1u} r227={1d,1u} r228={1d,2u} r229={1d,1u} r233={1d,2u} r234={1d,1u} r238={1d,2u} r239={1d,1u} r243={1d,1u} r244={1d,1u} r245={1d,1u} r246={1d,1u} r247={1d,1u} r248={1d,1u} r249={1d,1u} r250={1d,1u} r251={1d,1u} r252={1d,1u} r253={1d,1u} r254={1d,1u} r255={1d,1u} r256={1d,1u} r257={1d,1u} r258={1d,1u} r259={1d,1u} r260={1d,1u} r261={1d,1u} r262={1d,1u} r263={1d,1u} r264={1d,1u} r265={1d,1u} r266={1d,1u} r267={1d,1u} r268={1d,1u} r269={1d,1u} r270={1d,1u} r271={1d,1u} r272={1d,1u} r273={1d,1u} r274={1d,1u} r275={1d,1u} r276={1d,1u} r277={1d,1u} r278={1d,1u} r279={1d,1u} r280={1d,1u} r281={1d,1u} r282={1d,1u} r283={1d,1u} r284={1d,1u} r285={1d,1u} r286={1d,1u} r287={1d,1u} r288={1d,1u} r289={1d,1u} r290={1d,1u} r291={1d,1u} r292={1d,1u} r293={1d,1u} r294={1d,1u} r295={1d,1u} r296={1d,1u} r297={1d,1u} r298={1d,1u} r299={1d,1u} r300={1d,1u} r301={1d,1u} r302={1d,1u} r303={1d,1u} r304={1d,1u} r305={1d,1u} r306={1d,1u} r307={1d,1u} r308={1d,1u} r309={1d,1u} r310={1d,1u} r311={1d,1u} r312={1d,1u} r313={1d,1u} r314={1d,1u} r315={1d,1u} r316={1d,1u} r317={1d,1u} r318={1d,1u} r319={1d,1u} r320={1d,1u} r321={1d,1u} r322={1d,1u} r323={1d,1u} r324={1d,1u} 
;;    total ref usage 837{445d,388u,4e} in 275{273 regular + 2 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 93 97
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 93 97
;; lr  def 	 17 [flags] 87 88 91 92 95 96 99 228 229 233 234 238 239 245 246 247 248 249 250 251 252 253 254
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60088 [0xffffffffffff1548])) [5 x+0 S8 A64])
        (reg:DI 5 di [ x ])) "../src/spline.f":51 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ x ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60096 [0xffffffffffff1540])) [5 xs+0 S8 A64])
        (reg:DI 4 si [ xs ])) "../src/spline.f":51 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ xs ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60104 [0xffffffffffff1538])) [5 s+0 S8 A64])
        (reg:DI 1 dx [ s ])) "../src/spline.f":51 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ s ])
        (nil)))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60112 [0xffffffffffff1530])) [6 n+0 S8 A64])
        (reg:DI 2 cx [ n ])) "../src/spline.f":51 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [ n ])
        (nil)))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (reg/f:DI 245)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60112 [0xffffffffffff1530])) [6 n+0 S8 A64])) "../src/spline.f":51 81 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:SI 87 [ _1 ])
        (mem:SI (reg/f:DI 245) [1 *n_146(D)+0 S4 A32])) "../src/spline.f":51 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 245)
        (nil)))
(insn 11 10 12 2 (set (reg:DI 246)
        (sign_extend:DI (reg:SI 87 [ _1 ]))) "../src/spline.f":51 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 87 [ _1 ])
        (nil)))
(insn 12 11 13 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 ubound.24+0 S8 A64])
        (reg:DI 246)) "../src/spline.f":51 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 246)
        (nil)))
(insn 13 12 15 2 (set (reg:DI 228 [ size.25_148 ])
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 ubound.24+0 S8 A64])) "../src/spline.f":51 81 {*movdi_internal}
     (nil))
(insn 15 13 14 2 (set (reg:DI 247)
        (const_int 0 [0])) "../src/spline.f":51 81 {*movdi_internal}
     (nil))
(insn 14 15 16 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 228 [ size.25_148 ])
            (const_int 0 [0]))) "../src/spline.f":51 4 {*cmpdi_ccno_1}
     (nil))
(insn 16 14 18 2 (set (reg:DI 229 [ size.25_149 ])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 228 [ size.25_148 ])
            (reg:DI 247))) "../src/spline.f":51 967 {*movdicc_noc}
     (expr_list:REG_DEAD (reg:DI 247)
        (expr_list:REG_DEAD (reg:DI 228 [ size.25_148 ])
            (expr_list:REG_DEAD (reg:CCGOC 17 flags)
                (nil)))))
(insn 18 16 19 2 (set (reg:DI 88 [ size.173_2 ])
        (reg:DI 229 [ size.25_149 ])) "../src/spline.f":51 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 229 [ size.25_149 ])
        (nil)))
(insn 19 18 20 2 (set (subreg:DI (reg:TI 89 [ _3 ]) 0)
        (reg:DI 88 [ size.173_2 ])) "../src/spline.f":51 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88 [ size.173_2 ])
        (nil)))
(insn 20 19 24 2 (set (subreg:DI (reg:TI 89 [ _3 ]) 8)
        (const_int 0 [0])) "../src/spline.f":51 81 {*movdi_internal}
     (expr_list:REG_UNUSED (reg:TI 89 [ _3 ])
        (nil)))
(insn 24 20 25 2 (set (reg/f:DI 248)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60112 [0xffffffffffff1530])) [6 n+0 S8 A64])) "../src/spline.f":51 81 {*movdi_internal}
     (nil))
(insn 25 24 26 2 (set (reg:SI 91 [ _5 ])
        (mem:SI (reg/f:DI 248) [1 *n_146(D)+0 S4 A32])) "../src/spline.f":51 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 248)
        (nil)))
(insn 26 25 27 2 (set (reg:DI 249)
        (sign_extend:DI (reg:SI 91 [ _5 ]))) "../src/spline.f":51 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 91 [ _5 ])
        (nil)))
(insn 27 26 28 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [2 ubound.28+0 S8 A64])
        (reg:DI 249)) "../src/spline.f":51 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 249)
        (nil)))
(insn 28 27 30 2 (set (reg:DI 233 [ size.29_154 ])
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [2 ubound.28+0 S8 A64])) "../src/spline.f":51 81 {*movdi_internal}
     (nil))
(insn 30 28 29 2 (set (reg:DI 250)
        (const_int 0 [0])) "../src/spline.f":51 81 {*movdi_internal}
     (nil))
(insn 29 30 31 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 233 [ size.29_154 ])
            (const_int 0 [0]))) "../src/spline.f":51 4 {*cmpdi_ccno_1}
     (nil))
(insn 31 29 33 2 (set (reg:DI 234 [ size.29_155 ])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 233 [ size.29_154 ])
            (reg:DI 250))) "../src/spline.f":51 967 {*movdicc_noc}
     (expr_list:REG_DEAD (reg:DI 250)
        (expr_list:REG_DEAD (reg:DI 233 [ size.29_154 ])
            (expr_list:REG_DEAD (reg:CCGOC 17 flags)
                (nil)))))
(insn 33 31 34 2 (set (reg:DI 92 [ size.175_6 ])
        (reg:DI 234 [ size.29_155 ])) "../src/spline.f":51 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 234 [ size.29_155 ])
        (nil)))
(insn 34 33 35 2 (set (subreg:DI (reg:TI 93 [ _7 ]) 0)
        (reg:DI 92 [ size.175_6 ])) "../src/spline.f":51 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 92 [ size.175_6 ])
        (nil)))
(insn 35 34 39 2 (set (subreg:DI (reg:TI 93 [ _7 ]) 8)
        (const_int 0 [0])) "../src/spline.f":51 81 {*movdi_internal}
     (expr_list:REG_UNUSED (reg:TI 93 [ _7 ])
        (nil)))
(insn 39 35 40 2 (set (reg/f:DI 251)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60112 [0xffffffffffff1530])) [6 n+0 S8 A64])) "../src/spline.f":51 81 {*movdi_internal}
     (nil))
(insn 40 39 41 2 (set (reg:SI 95 [ _9 ])
        (mem:SI (reg/f:DI 251) [1 *n_146(D)+0 S4 A32])) "../src/spline.f":51 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 251)
        (nil)))
(insn 41 40 42 2 (set (reg:DI 252)
        (sign_extend:DI (reg:SI 95 [ _9 ]))) "../src/spline.f":51 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 95 [ _9 ])
        (nil)))
(insn 42 41 43 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [2 ubound.26+0 S8 A64])
        (reg:DI 252)) "../src/spline.f":51 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 252)
        (nil)))
(insn 43 42 45 2 (set (reg:DI 238 [ size.27_160 ])
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [2 ubound.26+0 S8 A64])) "../src/spline.f":51 81 {*movdi_internal}
     (nil))
(insn 45 43 44 2 (set (reg:DI 253)
        (const_int 0 [0])) "../src/spline.f":51 81 {*movdi_internal}
     (nil))
(insn 44 45 46 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 238 [ size.27_160 ])
            (const_int 0 [0]))) "../src/spline.f":51 4 {*cmpdi_ccno_1}
     (nil))
(insn 46 44 48 2 (set (reg:DI 239 [ size.27_161 ])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 238 [ size.27_160 ])
            (reg:DI 253))) "../src/spline.f":51 967 {*movdicc_noc}
     (expr_list:REG_DEAD (reg:DI 253)
        (expr_list:REG_DEAD (reg:DI 238 [ size.27_160 ])
            (expr_list:REG_DEAD (reg:CCGOC 17 flags)
                (nil)))))
(insn 48 46 49 2 (set (reg:DI 96 [ size.177_10 ])
        (reg:DI 239 [ size.27_161 ])) "../src/spline.f":51 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 239 [ size.27_161 ])
        (nil)))
(insn 49 48 50 2 (set (subreg:DI (reg:TI 97 [ _11 ]) 0)
        (reg:DI 96 [ size.177_10 ])) "../src/spline.f":51 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 96 [ size.177_10 ])
        (nil)))
(insn 50 49 54 2 (set (subreg:DI (reg:TI 97 [ _11 ]) 8)
        (const_int 0 [0])) "../src/spline.f":51 81 {*movdi_internal}
     (expr_list:REG_UNUSED (reg:TI 97 [ _11 ])
        (nil)))
(insn 54 50 55 2 (set (reg/f:DI 254)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60112 [0xffffffffffff1530])) [6 n+0 S8 A64])) "../src/spline.f":69 81 {*movdi_internal}
     (nil))
(insn 55 54 56 2 (set (reg:SI 99 [ _13 ])
        (mem:SI (reg/f:DI 254) [1 *n_146(D)+0 S4 A32])) "../src/spline.f":69 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 254)
        (nil)))
(insn 56 55 57 2 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 99 [ _13 ])
            (const_int 5001 [0x1389]))) "../src/spline.f":69 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 99 [ _13 ])
        (nil)))
(jump_insn 57 56 58 2 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 63)
            (pc))) "../src/spline.f":69 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 63)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 58 57 59 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 59 58 60 3 (set (reg:SI 4 si)
        (const_int 37 [0x25])) "../src/spline.f":69 82 {*movsi_internal}
     (nil))
(insn 60 59 61 3 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*lC9") [flags 0x2]  <var_decl 0x1433b9b40 *lC9>)) "../src/spline.f":69 81 {*movdi_internal}
     (nil))
(call_insn 61 60 62 3 (call (mem:QI (symbol_ref:DI ("_gfortran_stop_string") [flags 0x41]  <function_decl 0x1427c2200 _gfortran_stop_string>) [0 _gfortran_stop_string S1 A8])
        (const_int 0 [0])) "../src/spline.f":69 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 62 61 63)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 100 243 255
(code_label 63 62 64 4 61 (nil) [1 uses])
(note 64 63 65 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 65 64 66 4 (set (reg/f:DI 255)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60112 [0xffffffffffff1530])) [6 n+0 S8 A64])) "../src/spline.f":71 81 {*movdi_internal}
     (nil))
(insn 66 65 67 4 (set (reg:SI 100 [ _14 ])
        (mem:SI (reg/f:DI 255) [1 *n_146(D)+0 S4 A32])) "../src/spline.f":71 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 255)
        (nil)))
(insn 67 66 68 4 (parallel [
            (set (reg:SI 243 [ _165 ])
                (plus:SI (reg:SI 100 [ _14 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":71 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 100 [ _14 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 68 67 159 4 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
        (const_int 2 [0x2])) "../src/spline.f":71 82 {*movsi_internal}
     (nil))
;;  succ:       5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 243

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       4 (FALLTHRU)
;;              6 [100.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 243
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 243
;; lr  def 	 17 [flags] 244
(code_label 159 68 69 5 63 (nil) [1 uses])
(note 69 159 70 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 70 69 71 5 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
            (reg:SI 243 [ _165 ]))) "../src/spline.f":71 7 {*cmpsi_1}
     (nil))
(insn 71 70 72 5 (set (reg:QI 244 [ _167 ])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "../src/spline.f":71 613 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil)))
(insn 72 71 73 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 244 [ _167 ])
            (const_int 0 [0]))) "../src/spline.f":71 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 244 [ _167 ])
        (nil)))
(jump_insn 73 72 74 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 312)
            (pc))) "../src/spline.f":71 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 312)
;;  succ:       10
;;              6 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 243

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 10, flags: (RTL)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 243
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282
(note 74 73 75 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 75 74 76 6 (set (reg:SI 256)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":72 82 {*movsi_internal}
     (nil))
(insn 76 75 77 6 (set (reg:DI 101 [ _15 ])
        (sign_extend:DI (reg:SI 256))) "../src/spline.f":72 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 256)
        (nil)))
(insn 77 76 78 6 (parallel [
            (set (reg:DI 102 [ _16 ])
                (plus:DI (reg:DI 101 [ _15 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":72 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 101 [ _15 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 78 77 79 6 (set (reg/f:DI 257)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60104 [0xffffffffffff1538])) [5 s+0 S8 A64])) "../src/spline.f":72 81 {*movdi_internal}
     (nil))
(insn 79 78 80 6 (set (reg:SF 103 [ _17 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 102 [ _16 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 257)) [3 *s_168(D) S4 A32])) "../src/spline.f":72 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 257)
        (expr_list:REG_DEAD (reg:DI 102 [ _16 ])
            (nil))))
(insn 80 79 81 6 (set (reg:SI 258)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":72 82 {*movsi_internal}
     (nil))
(insn 81 80 82 6 (parallel [
            (set (reg:SI 104 [ _18 ])
                (plus:SI (reg:SI 258)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":72 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 258)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff]))
                (nil)))))
(insn 82 81 83 6 (set (reg:DI 105 [ _19 ])
        (sign_extend:DI (reg:SI 104 [ _18 ]))) "../src/spline.f":72 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 104 [ _18 ])
        (nil)))
(insn 83 82 84 6 (parallel [
            (set (reg:DI 106 [ _20 ])
                (plus:DI (reg:DI 105 [ _19 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":72 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 105 [ _19 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 84 83 85 6 (set (reg/f:DI 259)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60104 [0xffffffffffff1538])) [5 s+0 S8 A64])) "../src/spline.f":72 81 {*movdi_internal}
     (nil))
(insn 85 84 86 6 (set (reg:SF 107 [ _21 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 106 [ _20 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 259)) [3 *s_168(D) S4 A32])) "../src/spline.f":72 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 259)
        (expr_list:REG_DEAD (reg:DI 106 [ _20 ])
            (nil))))
(insn 86 85 87 6 (set (reg:SF 260)
        (minus:SF (reg:SF 103 [ _17 ])
            (reg:SF 107 [ _21 ]))) "../src/spline.f":72 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 107 [ _21 ])
        (expr_list:REG_DEAD (reg:SF 103 [ _17 ])
            (nil))))
(insn 87 86 88 6 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -36 [0xffffffffffffffdc])) [3 dsm+0 S4 A32])
        (reg:SF 260)) "../src/spline.f":72 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 260)
        (nil)))
(insn 88 87 89 6 (set (reg:SI 261)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":73 82 {*movsi_internal}
     (nil))
(insn 89 88 90 6 (parallel [
            (set (reg:SI 108 [ _22 ])
                (plus:SI (reg:SI 261)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":73 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 261)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int 1 [0x1]))
                (nil)))))
(insn 90 89 91 6 (set (reg:DI 109 [ _23 ])
        (sign_extend:DI (reg:SI 108 [ _22 ]))) "../src/spline.f":73 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 108 [ _22 ])
        (nil)))
(insn 91 90 92 6 (parallel [
            (set (reg:DI 110 [ _24 ])
                (plus:DI (reg:DI 109 [ _23 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":73 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 109 [ _23 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 92 91 93 6 (set (reg/f:DI 262)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60104 [0xffffffffffff1538])) [5 s+0 S8 A64])) "../src/spline.f":73 81 {*movdi_internal}
     (nil))
(insn 93 92 94 6 (set (reg:SF 111 [ _25 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 110 [ _24 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 262)) [3 *s_168(D) S4 A32])) "../src/spline.f":73 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 262)
        (expr_list:REG_DEAD (reg:DI 110 [ _24 ])
            (nil))))
(insn 94 93 95 6 (set (reg:SI 263)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":73 82 {*movsi_internal}
     (nil))
(insn 95 94 96 6 (set (reg:DI 112 [ _26 ])
        (sign_extend:DI (reg:SI 263))) "../src/spline.f":73 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 263)
        (nil)))
(insn 96 95 97 6 (parallel [
            (set (reg:DI 113 [ _27 ])
                (plus:DI (reg:DI 112 [ _26 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":73 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 112 [ _26 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 97 96 98 6 (set (reg/f:DI 264)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60104 [0xffffffffffff1538])) [5 s+0 S8 A64])) "../src/spline.f":73 81 {*movdi_internal}
     (nil))
(insn 98 97 99 6 (set (reg:SF 114 [ _28 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 113 [ _27 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 264)) [3 *s_168(D) S4 A32])) "../src/spline.f":73 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 264)
        (expr_list:REG_DEAD (reg:DI 113 [ _27 ])
            (nil))))
(insn 99 98 100 6 (set (reg:SF 265)
        (minus:SF (reg:SF 111 [ _25 ])
            (reg:SF 114 [ _28 ]))) "../src/spline.f":73 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 114 [ _28 ])
        (expr_list:REG_DEAD (reg:SF 111 [ _25 ])
            (nil))))
(insn 100 99 101 6 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [3 dsp+0 S4 A32])
        (reg:SF 265)) "../src/spline.f":73 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 265)
        (nil)))
(insn 101 100 102 6 (set (reg:SI 266)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":74 82 {*movsi_internal}
     (nil))
(insn 102 101 103 6 (set (reg:DI 115 [ _29 ])
        (sign_extend:DI (reg:SI 266))) "../src/spline.f":74 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 266)
        (nil)))
(insn 103 102 104 6 (parallel [
            (set (reg:DI 116 [ _30 ])
                (plus:DI (reg:DI 115 [ _29 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":74 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 115 [ _29 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 104 103 105 6 (set (reg:SF 267)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [3 dsp+0 S4 A32])) "../src/spline.f":74 127 {*movsf_internal}
     (nil))
(insn 105 104 106 6 (set (mem:SF (plus:DI (plus:DI (mult:DI (reg:DI 116 [ _30 ])
                        (const_int 4 [0x4]))
                    (reg/f:DI 20 frame))
                (const_int -40064 [0xffffffffffff6380])) [3 b S4 A32])
        (reg:SF 267)) "../src/spline.f":74 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 267)
        (expr_list:REG_DEAD (reg:DI 116 [ _30 ])
            (nil))))
(insn 106 105 107 6 (set (reg:SF 268)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -36 [0xffffffffffffffdc])) [3 dsm+0 S4 A32])) "../src/spline.f":75 127 {*movsf_internal}
     (nil))
(insn 107 106 108 6 (set (reg:SF 117 [ _31 ])
        (plus:SF (reg:SF 268)
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -40 [0xffffffffffffffd8])) [3 dsp+0 S4 A32]))) "../src/spline.f":75 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 268)
        (nil)))
(insn 108 107 109 6 (set (reg:SF 118 [ _32 ])
        (reg:SF 117 [ _31 ])) "../src/spline.f":75 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 117 [ _31 ])
        (nil)))
(insn 109 108 110 6 (set (reg:SI 269)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":75 82 {*movsi_internal}
     (nil))
(insn 110 109 111 6 (set (reg:DI 119 [ _33 ])
        (sign_extend:DI (reg:SI 269))) "../src/spline.f":75 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 269)
        (nil)))
(insn 111 110 112 6 (parallel [
            (set (reg:DI 120 [ _34 ])
                (plus:DI (reg:DI 119 [ _33 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":75 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 119 [ _33 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 112 111 113 6 (set (reg:SF 121 [ _35 ])
        (plus:SF (reg:SF 118 [ _32 ])
            (reg:SF 118 [ _32 ]))) "../src/spline.f":75 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 118 [ _32 ])
        (nil)))
(insn 113 112 114 6 (set (mem:SF (plus:DI (plus:DI (mult:DI (reg:DI 120 [ _34 ])
                        (const_int 4 [0x4]))
                    (reg/f:DI 20 frame))
                (const_int -20048 [0xffffffffffffb1b0])) [3 a S4 A32])
        (reg:SF 121 [ _35 ])) "../src/spline.f":75 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 121 [ _35 ])
        (expr_list:REG_DEAD (reg:DI 120 [ _34 ])
            (nil))))
(insn 114 113 115 6 (set (reg:SI 270)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":76 82 {*movsi_internal}
     (nil))
(insn 115 114 116 6 (set (reg:DI 122 [ _36 ])
        (sign_extend:DI (reg:SI 270))) "../src/spline.f":76 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 270)
        (nil)))
(insn 116 115 117 6 (parallel [
            (set (reg:DI 123 [ _37 ])
                (plus:DI (reg:DI 122 [ _36 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":76 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 122 [ _36 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 117 116 118 6 (set (reg:SF 271)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -36 [0xffffffffffffffdc])) [3 dsm+0 S4 A32])) "../src/spline.f":76 127 {*movsf_internal}
     (nil))
(insn 118 117 119 6 (set (mem:SF (plus:DI (plus:DI (mult:DI (reg:DI 123 [ _37 ])
                        (const_int 4 [0x4]))
                    (reg/f:DI 20 frame))
                (const_int -60080 [0xffffffffffff1550])) [3 c S4 A32])
        (reg:SF 271)) "../src/spline.f":76 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 271)
        (expr_list:REG_DEAD (reg:DI 123 [ _37 ])
            (nil))))
(insn 119 118 120 6 (set (reg:SI 272)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":77 82 {*movsi_internal}
     (nil))
(insn 120 119 121 6 (parallel [
            (set (reg:SI 124 [ _38 ])
                (plus:SI (reg:SI 272)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":77 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 272)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int 1 [0x1]))
                (nil)))))
(insn 121 120 122 6 (set (reg:DI 125 [ _39 ])
        (sign_extend:DI (reg:SI 124 [ _38 ]))) "../src/spline.f":77 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 124 [ _38 ])
        (nil)))
(insn 122 121 123 6 (parallel [
            (set (reg:DI 126 [ _40 ])
                (plus:DI (reg:DI 125 [ _39 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":77 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 125 [ _39 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 123 122 124 6 (set (reg/f:DI 273)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60088 [0xffffffffffff1548])) [5 x+0 S8 A64])) "../src/spline.f":77 81 {*movdi_internal}
     (nil))
(insn 124 123 125 6 (set (reg:SF 127 [ _41 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 126 [ _40 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 273)) [3 *x_174(D) S4 A32])) "../src/spline.f":77 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 273)
        (expr_list:REG_DEAD (reg:DI 126 [ _40 ])
            (nil))))
(insn 125 124 126 6 (set (reg:SI 274)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":77 82 {*movsi_internal}
     (nil))
(insn 126 125 127 6 (set (reg:DI 128 [ _42 ])
        (sign_extend:DI (reg:SI 274))) "../src/spline.f":77 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 274)
        (nil)))
(insn 127 126 128 6 (parallel [
            (set (reg:DI 129 [ _43 ])
                (plus:DI (reg:DI 128 [ _42 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":77 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 128 [ _42 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 128 127 129 6 (set (reg/f:DI 275)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60088 [0xffffffffffff1548])) [5 x+0 S8 A64])) "../src/spline.f":77 81 {*movdi_internal}
     (nil))
(insn 129 128 130 6 (set (reg:SF 130 [ _44 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 129 [ _43 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 275)) [3 *x_174(D) S4 A32])) "../src/spline.f":77 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 275)
        (expr_list:REG_DEAD (reg:DI 129 [ _43 ])
            (nil))))
(insn 130 129 131 6 (set (reg:SF 131 [ _45 ])
        (minus:SF (reg:SF 127 [ _41 ])
            (reg:SF 130 [ _44 ]))) "../src/spline.f":77 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 130 [ _44 ])
        (expr_list:REG_DEAD (reg:SF 127 [ _41 ])
            (nil))))
(insn 131 130 132 6 (set (reg:SF 132 [ _46 ])
        (reg:SF 131 [ _45 ])) "../src/spline.f":77 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 131 [ _45 ])
        (nil)))
(insn 132 131 133 6 (set (reg:SF 133 [ _47 ])
        (mult:SF (reg:SF 132 [ _46 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -36 [0xffffffffffffffdc])) [3 dsm+0 S4 A32]))) "../src/spline.f":77 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 132 [ _46 ])
        (nil)))
(insn 133 132 134 6 (set (reg:SF 134 [ _48 ])
        (div:SF (reg:SF 133 [ _47 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -40 [0xffffffffffffffd8])) [3 dsp+0 S4 A32]))) "../src/spline.f":77 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 133 [ _47 ])
        (nil)))
(insn 134 133 135 6 (set (reg:SI 276)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":77 82 {*movsi_internal}
     (nil))
(insn 135 134 136 6 (set (reg:DI 135 [ _49 ])
        (sign_extend:DI (reg:SI 276))) "../src/spline.f":77 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 276)
        (nil)))
(insn 136 135 137 6 (parallel [
            (set (reg:DI 136 [ _50 ])
                (plus:DI (reg:DI 135 [ _49 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":77 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 135 [ _49 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 137 136 138 6 (set (reg/f:DI 277)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60088 [0xffffffffffff1548])) [5 x+0 S8 A64])) "../src/spline.f":77 81 {*movdi_internal}
     (nil))
(insn 138 137 139 6 (set (reg:SF 137 [ _51 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 136 [ _50 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 277)) [3 *x_174(D) S4 A32])) "../src/spline.f":77 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 277)
        (expr_list:REG_DEAD (reg:DI 136 [ _50 ])
            (nil))))
(insn 139 138 140 6 (set (reg:SI 278)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":77 82 {*movsi_internal}
     (nil))
(insn 140 139 141 6 (parallel [
            (set (reg:SI 138 [ _52 ])
                (plus:SI (reg:SI 278)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":77 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 278)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff]))
                (nil)))))
(insn 141 140 142 6 (set (reg:DI 139 [ _53 ])
        (sign_extend:DI (reg:SI 138 [ _52 ]))) "../src/spline.f":77 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 138 [ _52 ])
        (nil)))
(insn 142 141 143 6 (parallel [
            (set (reg:DI 140 [ _54 ])
                (plus:DI (reg:DI 139 [ _53 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":77 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 139 [ _53 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 143 142 144 6 (set (reg/f:DI 279)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60088 [0xffffffffffff1548])) [5 x+0 S8 A64])) "../src/spline.f":77 81 {*movdi_internal}
     (nil))
(insn 144 143 145 6 (set (reg:SF 141 [ _55 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 140 [ _54 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 279)) [3 *x_174(D) S4 A32])) "../src/spline.f":77 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 279)
        (expr_list:REG_DEAD (reg:DI 140 [ _54 ])
            (nil))))
(insn 145 144 146 6 (set (reg:SF 142 [ _56 ])
        (minus:SF (reg:SF 137 [ _51 ])
            (reg:SF 141 [ _55 ]))) "../src/spline.f":77 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 141 [ _55 ])
        (expr_list:REG_DEAD (reg:SF 137 [ _51 ])
            (nil))))
(insn 146 145 147 6 (set (reg:SF 143 [ _57 ])
        (reg:SF 142 [ _56 ])) "../src/spline.f":77 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 142 [ _56 ])
        (nil)))
(insn 147 146 148 6 (set (reg:SF 144 [ _58 ])
        (mult:SF (reg:SF 143 [ _57 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -40 [0xffffffffffffffd8])) [3 dsp+0 S4 A32]))) "../src/spline.f":77 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 143 [ _57 ])
        (nil)))
(insn 148 147 149 6 (set (reg:SF 145 [ _59 ])
        (div:SF (reg:SF 144 [ _58 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -36 [0xffffffffffffffdc])) [3 dsm+0 S4 A32]))) "../src/spline.f":77 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 144 [ _58 ])
        (nil)))
(insn 149 148 150 6 (set (reg:SF 146 [ _60 ])
        (plus:SF (reg:SF 134 [ _48 ])
            (reg:SF 145 [ _59 ]))) "../src/spline.f":77 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 145 [ _59 ])
        (expr_list:REG_DEAD (reg:SF 134 [ _48 ])
            (nil))))
(insn 150 149 151 6 (set (reg:SF 147 [ _61 ])
        (reg:SF 146 [ _60 ])) "../src/spline.f":77 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 146 [ _60 ])
        (nil)))
(insn 151 150 152 6 (set (reg:SI 280)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":77 82 {*movsi_internal}
     (nil))
(insn 152 151 153 6 (set (reg:DI 148 [ _62 ])
        (sign_extend:DI (reg:SI 280))) "../src/spline.f":77 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 280)
        (nil)))
(insn 153 152 154 6 (parallel [
            (set (reg:DI 149 [ _63 ])
                (plus:DI (reg:DI 148 [ _62 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":77 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 148 [ _62 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 154 153 155 6 (set (reg:SF 281)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC0") [flags 0x2]) [3  S4 A32])) "../src/spline.f":77 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 3.0e+0 [0x0.cp+2])
        (nil)))
(insn 155 154 156 6 (set (reg:SF 150 [ _64 ])
        (mult:SF (reg:SF 147 [ _61 ])
            (reg:SF 281))) "../src/spline.f":77 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 281)
        (expr_list:REG_DEAD (reg:SF 147 [ _61 ])
            (nil))))
(insn 156 155 157 6 (set (reg/f:DI 282)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60096 [0xffffffffffff1540])) [5 xs+0 S8 A64])) "../src/spline.f":77 81 {*movdi_internal}
     (nil))
(insn 157 156 158 6 (set (mem:SF (plus:DI (mult:DI (reg:DI 149 [ _63 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 282)) [3 *xs_175(D) S4 A32])
        (reg:SF 150 [ _64 ])) "../src/spline.f":77 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 282)
        (expr_list:REG_DEAD (reg:SF 150 [ _64 ])
            (expr_list:REG_DEAD (reg:DI 149 [ _63 ])
                (nil)))))
(insn 158 157 309 6 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":71 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 309 158 310 6 (set (pc)
        (label_ref 159)) "../src/spline.f":71 649 {jump}
     (nil)
 -> 159)
;;  succ:       5 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 243

(barrier 310 309 312)
;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 7, flags: (RTL)
;;  pred:       5
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 312 310 311 10 66 (nil) [1 uses])
(note 311 312 313 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 313 311 162 10 (const_int 0 [0]) "../src/spline.f":78 682 {nop}
     (nil))
;;  succ:       7 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 8, flags: (RTL)
;;  pred:       10 [100.0%]  (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304
(code_label 162 313 163 7 62 (nil) [0 uses])
(note 163 162 164 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 164 163 165 7 (set (reg:SF 283)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC3") [flags 0x2]) [3  S4 A32])) "../src/spline.f":81 127 {*movsf_internal}
     (nil))
(insn 165 164 166 7 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -20048 [0xffffffffffffb1b0])) [3 a+0 S4 A128])
        (reg:SF 283)) "../src/spline.f":81 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 283)
        (nil)))
(insn 166 165 167 7 (set (reg:SF 284)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC3") [flags 0x2]) [3  S4 A32])) "../src/spline.f":82 127 {*movsf_internal}
     (nil))
(insn 167 166 168 7 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -60080 [0xffffffffffff1550])) [3 c+0 S4 A128])
        (reg:SF 284)) "../src/spline.f":82 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 284)
        (nil)))
(insn 168 167 169 7 (set (reg/f:DI 285)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60088 [0xffffffffffff1548])) [5 x+0 S8 A64])) "../src/spline.f":83 81 {*movdi_internal}
     (nil))
(insn 169 168 170 7 (set (reg:SF 151 [ _65 ])
        (mem:SF (plus:DI (reg/f:DI 285)
                (const_int 4 [0x4])) [3 *x_174(D)+4 S4 A32])) "../src/spline.f":83 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 285)
        (nil)))
(insn 170 169 171 7 (set (reg/f:DI 286)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60088 [0xffffffffffff1548])) [5 x+0 S8 A64])) "../src/spline.f":83 81 {*movdi_internal}
     (nil))
(insn 171 170 172 7 (set (reg:SF 152 [ _66 ])
        (mem:SF (reg/f:DI 286) [3 *x_174(D)+0 S4 A32])) "../src/spline.f":83 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 286)
        (nil)))
(insn 172 171 173 7 (set (reg:SF 153 [ _67 ])
        (minus:SF (reg:SF 151 [ _65 ])
            (reg:SF 152 [ _66 ]))) "../src/spline.f":83 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 152 [ _66 ])
        (expr_list:REG_DEAD (reg:SF 151 [ _65 ])
            (nil))))
(insn 173 172 174 7 (set (reg:SF 154 [ _68 ])
        (reg:SF 153 [ _67 ])) "../src/spline.f":83 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 153 [ _67 ])
        (nil)))
(insn 174 173 175 7 (set (reg:SF 155 [ _69 ])
        (plus:SF (reg:SF 154 [ _68 ])
            (reg:SF 154 [ _68 ]))) "../src/spline.f":83 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 154 [ _68 ])
        (nil)))
(insn 175 174 176 7 (set (reg/f:DI 287)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60104 [0xffffffffffff1538])) [5 s+0 S8 A64])) "../src/spline.f":83 81 {*movdi_internal}
     (nil))
(insn 176 175 177 7 (set (reg:SF 156 [ _70 ])
        (mem:SF (plus:DI (reg/f:DI 287)
                (const_int 4 [0x4])) [3 *s_168(D)+4 S4 A32])) "../src/spline.f":83 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 287)
        (nil)))
(insn 177 176 178 7 (set (reg/f:DI 288)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60104 [0xffffffffffff1538])) [5 s+0 S8 A64])) "../src/spline.f":83 81 {*movdi_internal}
     (nil))
(insn 178 177 179 7 (set (reg:SF 157 [ _71 ])
        (mem:SF (reg/f:DI 288) [3 *s_168(D)+0 S4 A32])) "../src/spline.f":83 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 288)
        (nil)))
(insn 179 178 180 7 (set (reg:SF 158 [ _72 ])
        (minus:SF (reg:SF 156 [ _70 ])
            (reg:SF 157 [ _71 ]))) "../src/spline.f":83 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 157 [ _71 ])
        (expr_list:REG_DEAD (reg:SF 156 [ _70 ])
            (nil))))
(insn 180 179 181 7 (set (reg:SF 159 [ _73 ])
        (reg:SF 158 [ _72 ])) "../src/spline.f":83 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 158 [ _72 ])
        (nil)))
(insn 181 180 182 7 (set (reg:SF 160 [ _74 ])
        (div:SF (reg:SF 155 [ _69 ])
            (reg:SF 159 [ _73 ]))) "../src/spline.f":83 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 159 [ _73 ])
        (expr_list:REG_DEAD (reg:SF 155 [ _69 ])
            (nil))))
(insn 182 181 183 7 (set (reg/f:DI 289)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60096 [0xffffffffffff1540])) [5 xs+0 S8 A64])) "../src/spline.f":83 81 {*movdi_internal}
     (nil))
(insn 183 182 184 7 (set (mem:SF (reg/f:DI 289) [3 *xs_175(D)+0 S4 A32])
        (reg:SF 160 [ _74 ])) "../src/spline.f":83 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 289)
        (expr_list:REG_DEAD (reg:SF 160 [ _74 ])
            (nil))))
(insn 184 183 185 7 (set (reg/f:DI 290)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60112 [0xffffffffffff1530])) [6 n+0 S8 A64])) "../src/spline.f":85 81 {*movdi_internal}
     (nil))
(insn 185 184 186 7 (set (reg:SI 161 [ _75 ])
        (mem:SI (reg/f:DI 290) [1 *n_146(D)+0 S4 A32])) "../src/spline.f":85 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 290)
        (nil)))
(insn 186 185 187 7 (set (reg:DI 162 [ _76 ])
        (sign_extend:DI (reg:SI 161 [ _75 ]))) "../src/spline.f":85 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 161 [ _75 ])
        (nil)))
(insn 187 186 188 7 (parallel [
            (set (reg:DI 163 [ _77 ])
                (plus:DI (reg:DI 162 [ _76 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":85 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 162 [ _76 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 188 187 189 7 (set (reg:SF 291)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC3") [flags 0x2]) [3  S4 A32])) "../src/spline.f":85 127 {*movsf_internal}
     (nil))
(insn 189 188 190 7 (set (mem:SF (plus:DI (plus:DI (mult:DI (reg:DI 163 [ _77 ])
                        (const_int 4 [0x4]))
                    (reg/f:DI 20 frame))
                (const_int -40064 [0xffffffffffff6380])) [3 b S4 A32])
        (reg:SF 291)) "../src/spline.f":85 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 291)
        (expr_list:REG_DEAD (reg:DI 163 [ _77 ])
            (nil))))
(insn 190 189 191 7 (set (reg/f:DI 292)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60112 [0xffffffffffff1530])) [6 n+0 S8 A64])) "../src/spline.f":86 81 {*movdi_internal}
     (nil))
(insn 191 190 192 7 (set (reg:SI 164 [ _78 ])
        (mem:SI (reg/f:DI 292) [1 *n_146(D)+0 S4 A32])) "../src/spline.f":86 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 292)
        (nil)))
(insn 192 191 193 7 (set (reg:DI 165 [ _79 ])
        (sign_extend:DI (reg:SI 164 [ _78 ]))) "../src/spline.f":86 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 164 [ _78 ])
        (nil)))
(insn 193 192 194 7 (parallel [
            (set (reg:DI 166 [ _80 ])
                (plus:DI (reg:DI 165 [ _79 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":86 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 165 [ _79 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 194 193 195 7 (set (reg:SF 293)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC3") [flags 0x2]) [3  S4 A32])) "../src/spline.f":86 127 {*movsf_internal}
     (nil))
(insn 195 194 196 7 (set (mem:SF (plus:DI (plus:DI (mult:DI (reg:DI 166 [ _80 ])
                        (const_int 4 [0x4]))
                    (reg/f:DI 20 frame))
                (const_int -20048 [0xffffffffffffb1b0])) [3 a S4 A32])
        (reg:SF 293)) "../src/spline.f":86 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 293)
        (expr_list:REG_DEAD (reg:DI 166 [ _80 ])
            (nil))))
(insn 196 195 197 7 (set (reg/f:DI 294)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60112 [0xffffffffffff1530])) [6 n+0 S8 A64])) "../src/spline.f":87 81 {*movdi_internal}
     (nil))
(insn 197 196 198 7 (set (reg:SI 167 [ _81 ])
        (mem:SI (reg/f:DI 294) [1 *n_146(D)+0 S4 A32])) "../src/spline.f":87 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 294)
        (nil)))
(insn 198 197 199 7 (set (reg:DI 168 [ _82 ])
        (sign_extend:DI (reg:SI 167 [ _81 ]))) "../src/spline.f":87 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 167 [ _81 ])
        (nil)))
(insn 199 198 200 7 (parallel [
            (set (reg:DI 169 [ _83 ])
                (plus:DI (reg:DI 168 [ _82 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":87 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 168 [ _82 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 200 199 201 7 (set (reg/f:DI 295)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60088 [0xffffffffffff1548])) [5 x+0 S8 A64])) "../src/spline.f":87 81 {*movdi_internal}
     (nil))
(insn 201 200 202 7 (set (reg:SF 170 [ _84 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 169 [ _83 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 295)) [3 *x_174(D) S4 A32])) "../src/spline.f":87 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 295)
        (expr_list:REG_DEAD (reg:DI 169 [ _83 ])
            (nil))))
(insn 202 201 203 7 (set (reg/f:DI 296)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60112 [0xffffffffffff1530])) [6 n+0 S8 A64])) "../src/spline.f":87 81 {*movdi_internal}
     (nil))
(insn 203 202 204 7 (set (reg:SI 171 [ _85 ])
        (mem:SI (reg/f:DI 296) [1 *n_146(D)+0 S4 A32])) "../src/spline.f":87 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 296)
        (nil)))
(insn 204 203 205 7 (parallel [
            (set (reg:SI 172 [ _86 ])
                (plus:SI (reg:SI 171 [ _85 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":87 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 171 [ _85 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 205 204 206 7 (set (reg:DI 173 [ _87 ])
        (sign_extend:DI (reg:SI 172 [ _86 ]))) "../src/spline.f":87 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 172 [ _86 ])
        (nil)))
(insn 206 205 207 7 (parallel [
            (set (reg:DI 174 [ _88 ])
                (plus:DI (reg:DI 173 [ _87 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":87 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 173 [ _87 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 207 206 208 7 (set (reg/f:DI 297)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60088 [0xffffffffffff1548])) [5 x+0 S8 A64])) "../src/spline.f":87 81 {*movdi_internal}
     (nil))
(insn 208 207 209 7 (set (reg:SF 175 [ _89 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 174 [ _88 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 297)) [3 *x_174(D) S4 A32])) "../src/spline.f":87 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 297)
        (expr_list:REG_DEAD (reg:DI 174 [ _88 ])
            (nil))))
(insn 209 208 210 7 (set (reg:SF 176 [ _90 ])
        (minus:SF (reg:SF 170 [ _84 ])
            (reg:SF 175 [ _89 ]))) "../src/spline.f":87 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 175 [ _89 ])
        (expr_list:REG_DEAD (reg:SF 170 [ _84 ])
            (nil))))
(insn 210 209 211 7 (set (reg:SF 177 [ _91 ])
        (reg:SF 176 [ _90 ])) "../src/spline.f":87 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 176 [ _90 ])
        (nil)))
(insn 211 210 212 7 (set (reg:SF 178 [ _92 ])
        (plus:SF (reg:SF 177 [ _91 ])
            (reg:SF 177 [ _91 ]))) "../src/spline.f":87 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 177 [ _91 ])
        (nil)))
(insn 212 211 213 7 (set (reg/f:DI 298)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60112 [0xffffffffffff1530])) [6 n+0 S8 A64])) "../src/spline.f":87 81 {*movdi_internal}
     (nil))
(insn 213 212 214 7 (set (reg:SI 179 [ _93 ])
        (mem:SI (reg/f:DI 298) [1 *n_146(D)+0 S4 A32])) "../src/spline.f":87 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 298)
        (nil)))
(insn 214 213 215 7 (set (reg:DI 180 [ _94 ])
        (sign_extend:DI (reg:SI 179 [ _93 ]))) "../src/spline.f":87 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 179 [ _93 ])
        (nil)))
(insn 215 214 216 7 (parallel [
            (set (reg:DI 181 [ _95 ])
                (plus:DI (reg:DI 180 [ _94 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":87 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 180 [ _94 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 216 215 217 7 (set (reg/f:DI 299)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60104 [0xffffffffffff1538])) [5 s+0 S8 A64])) "../src/spline.f":87 81 {*movdi_internal}
     (nil))
(insn 217 216 218 7 (set (reg:SF 182 [ _96 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 181 [ _95 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 299)) [3 *s_168(D) S4 A32])) "../src/spline.f":87 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 299)
        (expr_list:REG_DEAD (reg:DI 181 [ _95 ])
            (nil))))
(insn 218 217 219 7 (set (reg/f:DI 300)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60112 [0xffffffffffff1530])) [6 n+0 S8 A64])) "../src/spline.f":87 81 {*movdi_internal}
     (nil))
(insn 219 218 220 7 (set (reg:SI 183 [ _97 ])
        (mem:SI (reg/f:DI 300) [1 *n_146(D)+0 S4 A32])) "../src/spline.f":87 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 300)
        (nil)))
(insn 220 219 221 7 (parallel [
            (set (reg:SI 184 [ _98 ])
                (plus:SI (reg:SI 183 [ _97 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":87 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 183 [ _97 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 221 220 222 7 (set (reg:DI 185 [ _99 ])
        (sign_extend:DI (reg:SI 184 [ _98 ]))) "../src/spline.f":87 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 184 [ _98 ])
        (nil)))
(insn 222 221 223 7 (parallel [
            (set (reg:DI 186 [ _100 ])
                (plus:DI (reg:DI 185 [ _99 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":87 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 185 [ _99 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 223 222 224 7 (set (reg/f:DI 301)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60104 [0xffffffffffff1538])) [5 s+0 S8 A64])) "../src/spline.f":87 81 {*movdi_internal}
     (nil))
(insn 224 223 225 7 (set (reg:SF 187 [ _101 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 186 [ _100 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 301)) [3 *s_168(D) S4 A32])) "../src/spline.f":87 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 301)
        (expr_list:REG_DEAD (reg:DI 186 [ _100 ])
            (nil))))
(insn 225 224 226 7 (set (reg:SF 188 [ _102 ])
        (minus:SF (reg:SF 182 [ _96 ])
            (reg:SF 187 [ _101 ]))) "../src/spline.f":87 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 187 [ _101 ])
        (expr_list:REG_DEAD (reg:SF 182 [ _96 ])
            (nil))))
(insn 226 225 227 7 (set (reg:SF 189 [ _103 ])
        (reg:SF 188 [ _102 ])) "../src/spline.f":87 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 188 [ _102 ])
        (nil)))
(insn 227 226 228 7 (set (reg/f:DI 302)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60112 [0xffffffffffff1530])) [6 n+0 S8 A64])) "../src/spline.f":87 81 {*movdi_internal}
     (nil))
(insn 228 227 229 7 (set (reg:SI 190 [ _104 ])
        (mem:SI (reg/f:DI 302) [1 *n_146(D)+0 S4 A32])) "../src/spline.f":87 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 302)
        (nil)))
(insn 229 228 230 7 (set (reg:DI 191 [ _105 ])
        (sign_extend:DI (reg:SI 190 [ _104 ]))) "../src/spline.f":87 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 190 [ _104 ])
        (nil)))
(insn 230 229 231 7 (parallel [
            (set (reg:DI 192 [ _106 ])
                (plus:DI (reg:DI 191 [ _105 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":87 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 191 [ _105 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 231 230 232 7 (set (reg:SF 193 [ _107 ])
        (div:SF (reg:SF 178 [ _92 ])
            (reg:SF 189 [ _103 ]))) "../src/spline.f":87 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 189 [ _103 ])
        (expr_list:REG_DEAD (reg:SF 178 [ _92 ])
            (nil))))
(insn 232 231 233 7 (set (reg/f:DI 303)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60096 [0xffffffffffff1540])) [5 xs+0 S8 A64])) "../src/spline.f":87 81 {*movdi_internal}
     (nil))
(insn 233 232 234 7 (set (mem:SF (plus:DI (mult:DI (reg:DI 192 [ _106 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 303)) [3 *xs_175(D) S4 A32])
        (reg:SF 193 [ _107 ])) "../src/spline.f":87 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 303)
        (expr_list:REG_DEAD (reg:SF 193 [ _107 ])
            (expr_list:REG_DEAD (reg:DI 192 [ _106 ])
                (nil)))))
(insn 234 233 235 7 (set (reg/f:DI 304)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60112 [0xffffffffffff1530])) [6 n+0 S8 A64])) "../src/spline.f":89 81 {*movdi_internal}
     (nil))
(insn 235 234 236 7 (set (reg:SI 194 [ _108 ])
        (mem:SI (reg/f:DI 304) [1 *n_146(D)+0 S4 A32])) "../src/spline.f":89 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 304)
        (nil)))
(insn 236 235 237 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 194 [ _108 ])
            (const_int 2 [0x2]))) "../src/spline.f":89 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 194 [ _108 ])
        (nil)))
(jump_insn 237 236 238 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 290)
            (pc))) "../src/spline.f":89 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 290)
;;  succ:       8 (FALLTHRU)
;;              9
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (RTL)
;;  pred:       7 (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319
(note 238 237 239 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 239 238 240 8 (set (reg/f:DI 305)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60112 [0xffffffffffff1530])) [6 n+0 S8 A64])) "../src/spline.f":92 81 {*movdi_internal}
     (nil))
(insn 240 239 241 8 (set (reg:SI 195 [ _109 ])
        (mem:SI (reg/f:DI 305) [1 *n_146(D)+0 S4 A32])) "../src/spline.f":92 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 305)
        (nil)))
(insn 241 240 242 8 (set (reg:DI 196 [ _110 ])
        (sign_extend:DI (reg:SI 195 [ _109 ]))) "../src/spline.f":92 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 195 [ _109 ])
        (nil)))
(insn 242 241 243 8 (parallel [
            (set (reg:DI 197 [ _111 ])
                (plus:DI (reg:DI 196 [ _110 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":92 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 196 [ _110 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 243 242 244 8 (set (reg:SF 306)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC3") [flags 0x2]) [3  S4 A32])) "../src/spline.f":92 127 {*movsf_internal}
     (nil))
(insn 244 243 245 8 (set (mem:SF (plus:DI (plus:DI (mult:DI (reg:DI 197 [ _111 ])
                        (const_int 4 [0x4]))
                    (reg/f:DI 20 frame))
                (const_int -40064 [0xffffffffffff6380])) [3 b S4 A32])
        (reg:SF 306)) "../src/spline.f":92 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 306)
        (expr_list:REG_DEAD (reg:DI 197 [ _111 ])
            (nil))))
(insn 245 244 246 8 (set (reg/f:DI 307)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60112 [0xffffffffffff1530])) [6 n+0 S8 A64])) "../src/spline.f":93 81 {*movdi_internal}
     (nil))
(insn 246 245 247 8 (set (reg:SI 198 [ _112 ])
        (mem:SI (reg/f:DI 307) [1 *n_146(D)+0 S4 A32])) "../src/spline.f":93 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 307)
        (nil)))
(insn 247 246 248 8 (set (reg:DI 199 [ _113 ])
        (sign_extend:DI (reg:SI 198 [ _112 ]))) "../src/spline.f":93 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 198 [ _112 ])
        (nil)))
(insn 248 247 249 8 (parallel [
            (set (reg:DI 200 [ _114 ])
                (plus:DI (reg:DI 199 [ _113 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":93 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 199 [ _113 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 249 248 250 8 (set (reg:SF 308)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC4") [flags 0x2]) [3  S4 A32])) "../src/spline.f":93 127 {*movsf_internal}
     (nil))
(insn 250 249 251 8 (set (mem:SF (plus:DI (plus:DI (mult:DI (reg:DI 200 [ _114 ])
                        (const_int 4 [0x4]))
                    (reg/f:DI 20 frame))
                (const_int -20048 [0xffffffffffffb1b0])) [3 a S4 A32])
        (reg:SF 308)) "../src/spline.f":93 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 308)
        (expr_list:REG_DEAD (reg:DI 200 [ _114 ])
            (nil))))
(insn 251 250 252 8 (set (reg/f:DI 309)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60112 [0xffffffffffff1530])) [6 n+0 S8 A64])) "../src/spline.f":94 81 {*movdi_internal}
     (nil))
(insn 252 251 253 8 (set (reg:SI 201 [ _115 ])
        (mem:SI (reg/f:DI 309) [1 *n_146(D)+0 S4 A32])) "../src/spline.f":94 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 309)
        (nil)))
(insn 253 252 254 8 (set (reg:DI 202 [ _116 ])
        (sign_extend:DI (reg:SI 201 [ _115 ]))) "../src/spline.f":94 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 201 [ _115 ])
        (nil)))
(insn 254 253 255 8 (parallel [
            (set (reg:DI 203 [ _117 ])
                (plus:DI (reg:DI 202 [ _116 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":94 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 202 [ _116 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 255 254 256 8 (set (reg/f:DI 310)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60088 [0xffffffffffff1548])) [5 x+0 S8 A64])) "../src/spline.f":94 81 {*movdi_internal}
     (nil))
(insn 256 255 257 8 (set (reg:SF 204 [ _118 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 203 [ _117 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 310)) [3 *x_174(D) S4 A32])) "../src/spline.f":94 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 310)
        (expr_list:REG_DEAD (reg:DI 203 [ _117 ])
            (nil))))
(insn 257 256 258 8 (set (reg/f:DI 311)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60112 [0xffffffffffff1530])) [6 n+0 S8 A64])) "../src/spline.f":94 81 {*movdi_internal}
     (nil))
(insn 258 257 259 8 (set (reg:SI 205 [ _119 ])
        (mem:SI (reg/f:DI 311) [1 *n_146(D)+0 S4 A32])) "../src/spline.f":94 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 311)
        (nil)))
(insn 259 258 260 8 (parallel [
            (set (reg:SI 206 [ _120 ])
                (plus:SI (reg:SI 205 [ _119 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":94 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 205 [ _119 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 260 259 261 8 (set (reg:DI 207 [ _121 ])
        (sign_extend:DI (reg:SI 206 [ _120 ]))) "../src/spline.f":94 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 206 [ _120 ])
        (nil)))
(insn 261 260 262 8 (parallel [
            (set (reg:DI 208 [ _122 ])
                (plus:DI (reg:DI 207 [ _121 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":94 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 207 [ _121 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 262 261 263 8 (set (reg/f:DI 312)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60088 [0xffffffffffff1548])) [5 x+0 S8 A64])) "../src/spline.f":94 81 {*movdi_internal}
     (nil))
(insn 263 262 264 8 (set (reg:SF 209 [ _123 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 208 [ _122 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 312)) [3 *x_174(D) S4 A32])) "../src/spline.f":94 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 312)
        (expr_list:REG_DEAD (reg:DI 208 [ _122 ])
            (nil))))
(insn 264 263 265 8 (set (reg:SF 210 [ _124 ])
        (minus:SF (reg:SF 204 [ _118 ])
            (reg:SF 209 [ _123 ]))) "../src/spline.f":94 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 209 [ _123 ])
        (expr_list:REG_DEAD (reg:SF 204 [ _118 ])
            (nil))))
(insn 265 264 266 8 (set (reg:SF 211 [ _125 ])
        (reg:SF 210 [ _124 ])) "../src/spline.f":94 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 210 [ _124 ])
        (nil)))
(insn 266 265 267 8 (set (reg:SF 313)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC0") [flags 0x2]) [3  S4 A32])) "../src/spline.f":94 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 3.0e+0 [0x0.cp+2])
        (nil)))
(insn 267 266 268 8 (set (reg:SF 212 [ _126 ])
        (mult:SF (reg:SF 211 [ _125 ])
            (reg:SF 313))) "../src/spline.f":94 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 313)
        (expr_list:REG_DEAD (reg:SF 211 [ _125 ])
            (nil))))
(insn 268 267 269 8 (set (reg/f:DI 314)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60112 [0xffffffffffff1530])) [6 n+0 S8 A64])) "../src/spline.f":94 81 {*movdi_internal}
     (nil))
(insn 269 268 270 8 (set (reg:SI 213 [ _127 ])
        (mem:SI (reg/f:DI 314) [1 *n_146(D)+0 S4 A32])) "../src/spline.f":94 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 314)
        (nil)))
(insn 270 269 271 8 (set (reg:DI 214 [ _128 ])
        (sign_extend:DI (reg:SI 213 [ _127 ]))) "../src/spline.f":94 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 213 [ _127 ])
        (nil)))
(insn 271 270 272 8 (parallel [
            (set (reg:DI 215 [ _129 ])
                (plus:DI (reg:DI 214 [ _128 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":94 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 214 [ _128 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 272 271 273 8 (set (reg/f:DI 315)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60104 [0xffffffffffff1538])) [5 s+0 S8 A64])) "../src/spline.f":94 81 {*movdi_internal}
     (nil))
(insn 273 272 274 8 (set (reg:SF 216 [ _130 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 215 [ _129 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 315)) [3 *s_168(D) S4 A32])) "../src/spline.f":94 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 315)
        (expr_list:REG_DEAD (reg:DI 215 [ _129 ])
            (nil))))
(insn 274 273 275 8 (set (reg/f:DI 316)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60112 [0xffffffffffff1530])) [6 n+0 S8 A64])) "../src/spline.f":94 81 {*movdi_internal}
     (nil))
(insn 275 274 276 8 (set (reg:SI 217 [ _131 ])
        (mem:SI (reg/f:DI 316) [1 *n_146(D)+0 S4 A32])) "../src/spline.f":94 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 316)
        (nil)))
(insn 276 275 277 8 (parallel [
            (set (reg:SI 218 [ _132 ])
                (plus:SI (reg:SI 217 [ _131 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":94 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 217 [ _131 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 277 276 278 8 (set (reg:DI 219 [ _133 ])
        (sign_extend:DI (reg:SI 218 [ _132 ]))) "../src/spline.f":94 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 218 [ _132 ])
        (nil)))
(insn 278 277 279 8 (parallel [
            (set (reg:DI 220 [ _134 ])
                (plus:DI (reg:DI 219 [ _133 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":94 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 219 [ _133 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 279 278 280 8 (set (reg/f:DI 317)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60104 [0xffffffffffff1538])) [5 s+0 S8 A64])) "../src/spline.f":94 81 {*movdi_internal}
     (nil))
(insn 280 279 281 8 (set (reg:SF 221 [ _135 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 220 [ _134 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 317)) [3 *s_168(D) S4 A32])) "../src/spline.f":94 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 317)
        (expr_list:REG_DEAD (reg:DI 220 [ _134 ])
            (nil))))
(insn 281 280 282 8 (set (reg:SF 222 [ _136 ])
        (minus:SF (reg:SF 216 [ _130 ])
            (reg:SF 221 [ _135 ]))) "../src/spline.f":94 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 221 [ _135 ])
        (expr_list:REG_DEAD (reg:SF 216 [ _130 ])
            (nil))))
(insn 282 281 283 8 (set (reg:SF 223 [ _137 ])
        (reg:SF 222 [ _136 ])) "../src/spline.f":94 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 222 [ _136 ])
        (nil)))
(insn 283 282 284 8 (set (reg/f:DI 318)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60112 [0xffffffffffff1530])) [6 n+0 S8 A64])) "../src/spline.f":94 81 {*movdi_internal}
     (nil))
(insn 284 283 285 8 (set (reg:SI 224 [ _138 ])
        (mem:SI (reg/f:DI 318) [1 *n_146(D)+0 S4 A32])) "../src/spline.f":94 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 318)
        (nil)))
(insn 285 284 286 8 (set (reg:DI 225 [ _139 ])
        (sign_extend:DI (reg:SI 224 [ _138 ]))) "../src/spline.f":94 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 224 [ _138 ])
        (nil)))
(insn 286 285 287 8 (parallel [
            (set (reg:DI 226 [ _140 ])
                (plus:DI (reg:DI 225 [ _139 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":94 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 225 [ _139 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 287 286 288 8 (set (reg:SF 227 [ _141 ])
        (div:SF (reg:SF 212 [ _126 ])
            (reg:SF 223 [ _137 ]))) "../src/spline.f":94 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 223 [ _137 ])
        (expr_list:REG_DEAD (reg:SF 212 [ _126 ])
            (nil))))
(insn 288 287 289 8 (set (reg/f:DI 319)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60096 [0xffffffffffff1540])) [5 xs+0 S8 A64])) "../src/spline.f":94 81 {*movdi_internal}
     (nil))
(insn 289 288 290 8 (set (mem:SF (plus:DI (mult:DI (reg:DI 226 [ _140 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 319)) [3 *xs_175(D) S4 A32])
        (reg:SF 227 [ _141 ])) "../src/spline.f":94 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 319)
        (expr_list:REG_DEAD (reg:SF 227 [ _141 ])
            (expr_list:REG_DEAD (reg:DI 226 [ _140 ])
                (nil)))))
;;  succ:       9 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 1, flags: (RTL)
;;  pred:       7
;;              8 (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 320 321 322 323 324
(code_label 290 289 291 9 64 (nil) [1 uses])
(note 291 290 292 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 292 291 293 9 (set (reg:DI 320)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60112 [0xffffffffffff1530])) [6 n+0 S8 A64])) "../src/spline.f":98 81 {*movdi_internal}
     (nil))
(insn 293 292 294 9 (set (reg:DI 321)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -60096 [0xffffffffffff1540])) [5 xs+0 S8 A64])) "../src/spline.f":98 81 {*movdi_internal}
     (nil))
(insn 294 293 295 9 (parallel [
            (set (reg:DI 322)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -60080 [0xffffffffffff1550])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":98 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 295 294 296 9 (parallel [
            (set (reg:DI 323)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -40064 [0xffffffffffff6380])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":98 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 296 295 297 9 (parallel [
            (set (reg:DI 324)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -20048 [0xffffffffffffb1b0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":98 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 297 296 298 9 (set (reg:DI 37 r8)
        (reg:DI 320)) "../src/spline.f":98 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 320)
        (nil)))
(insn 298 297 299 9 (set (reg:DI 2 cx)
        (reg:DI 321)) "../src/spline.f":98 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 321)
        (nil)))
(insn 299 298 300 9 (set (reg:DI 1 dx)
        (reg:DI 322)) "../src/spline.f":98 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 322)
        (nil)))
(insn 300 299 301 9 (set (reg:DI 4 si)
        (reg:DI 323)) "../src/spline.f":98 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 323)
        (nil)))
(insn 301 300 302 9 (set (reg:DI 5 di)
        (reg:DI 324)) "../src/spline.f":98 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 324)
        (nil)))
(call_insn 302 301 308 9 (call (mem:QI (symbol_ref:DI ("trisol_") [flags 0x403]  <function_decl 0x1427e4c00 trisol>) [0 trisol S1 A8])
        (const_int 0 [0])) "../src/spline.f":98 655 {*call}
     (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (nil)))))))
(insn 308 302 0 9 (const_int 0 [0]) "../src/spline.f":100 682 {nop}
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function trisol (trisol_, funcdef_no=5, decl_uid=3679, cgraph_uid=5, symbol_order=5)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 11 n_edges 12 count 11 (    1)
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 9 5 6 7 10 8
;;
;; Loop 2
;;  header 6, latch 7
;;  depth 1, outer 0
;;  nodes: 6 7
;;
;; Loop 1
;;  header 3, latch 4
;;  depth 1, outer 0
;;  nodes: 3 4
;; 2 succs { 3 }
;; 3 succs { 9 4 }
;; 4 succs { 3 }
;; 9 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 10 7 }
;; 7 succs { 6 }
;; 10 succs { 8 }
;; 8 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r257: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r257,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r256: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r256,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r255: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r255,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r254: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r254,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r253: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r253,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r252: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r252,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r251: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r251,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r250: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r250,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r249: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r249,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r248: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r248,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r247: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a33 (r247,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r246: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a34 (r246,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r245: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a38 (r245,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r244: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a39 (r244,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r243: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a43 (r243,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r242: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a44 (r242,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r241: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a50 (r241,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r240: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a53 (r240,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r239: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a56 (r239,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r238: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a57 (r238,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r237: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a60 (r237,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r236: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a61 (r236,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r235: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a64 (r235,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r234: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a65 (r234,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r233: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a71 (r233,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r232: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a74 (r232,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r231: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a77 (r231,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r230: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a78 (r230,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r229: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a81 (r229,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r228: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a82 (r228,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r227: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a85 (r227,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r226: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a86 (r226,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r225: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a92 (r225,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r224: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a93 (r224,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r223: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a96 (r223,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r222: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a97 (r222,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r221: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a100 (r221,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r220: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a101 (r220,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r219: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a107 (r219,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r218: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a108 (r218,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r217: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a111 (r217,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r216: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a112 (r216,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r215: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a115 (r215,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r214: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a117 (r214,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r213: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a116 (r213,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r210: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a120 (r210,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r209: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a124 (r209,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r208: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a126 (r208,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r207: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a128 (r207,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r206: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a132 (r206,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r205: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a134 (r205,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r204: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a136 (r204,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r203: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a140 (r203,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r202: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a142 (r202,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r201: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a144 (r201,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r200: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a148 (r200,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r199: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a150 (r199,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r198: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a152 (r198,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r197: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r197,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r196: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r196,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r195: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a119 (r195,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r194: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a118 (r194,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r190: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a123 (r190,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r189: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a125 (r189,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r185: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a131 (r185,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r184: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a133 (r184,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r180: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a139 (r180,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r179: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a141 (r179,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r175: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a147 (r175,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r174: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a149 (r174,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r173: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a2 (r173,l0) best SSE_REGS, allocno SSE_REGS
    r172: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r172,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r171: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r171,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r170: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a3 (r170,l0) best SSE_REGS, allocno SSE_REGS
    r169: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a7 (r169,l0) best SSE_REGS, allocno SSE_REGS
    r168: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r168,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r167: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r167,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r166: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r166,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r165: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a8 (r165,l0) best SSE_REGS, allocno SSE_REGS
    r164: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r164,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r163: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r163,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r162: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a4 (r162,l0) best SSE_REGS, allocno SSE_REGS
    r161: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r161,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r160: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r160,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r159: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r159,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r158: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a28 (r158,l0) best SSE_REGS, allocno SSE_REGS
    r157: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r157,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r156: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a31 (r156,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r155: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r155,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r154: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a29 (r154,l0) best SSE_REGS, allocno SSE_REGS
    r153: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a35 (r153,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r152: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a36 (r152,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r151: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a37 (r151,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r150: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a30 (r150,l0) best SSE_REGS, allocno SSE_REGS
    r149: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a40 (r149,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r148: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a41 (r148,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r147: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a42 (r147,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r146: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a46 (r146,l0) best SSE_REGS, allocno SSE_REGS
    r145: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a45 (r145,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r144: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a49 (r144,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r143: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a47 (r143,l0) best SSE_REGS, allocno SSE_REGS
    r142: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a51 (r142,l0) best SSE_REGS, allocno SSE_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a54 (r141,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a55 (r140,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r139: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a52 (r139,l0) best SSE_REGS, allocno SSE_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a58 (r138,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a59 (r137,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r136: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a48 (r136,l0) best SSE_REGS, allocno SSE_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a62 (r135,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a63 (r134,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r133: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a67 (r133,l0) best SSE_REGS, allocno SSE_REGS
    r132: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a66 (r132,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r131: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a70 (r131,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r130: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a68 (r130,l0) best SSE_REGS, allocno SSE_REGS
    r129: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a72 (r129,l0) best SSE_REGS, allocno SSE_REGS
    r128: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a75 (r128,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r127: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a76 (r127,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r126: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a73 (r126,l0) best SSE_REGS, allocno SSE_REGS
    r125: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a79 (r125,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r124: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a80 (r124,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r123: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a69 (r123,l0) best SSE_REGS, allocno SSE_REGS
    r122: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a83 (r122,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a84 (r121,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r120: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a88 (r120,l0) best SSE_REGS, allocno SSE_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a87 (r119,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r118: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a91 (r118,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r117: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a89 (r117,l0) best SSE_REGS, allocno SSE_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a94 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a95 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a90 (r114,l0) best SSE_REGS, allocno SSE_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a98 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r112: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a99 (r112,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r111: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a103 (r111,l0) best SSE_REGS, allocno SSE_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a102 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a106 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a104 (r108,l0) best SSE_REGS, allocno SSE_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a109 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a110 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a105 (r105,l0) best SSE_REGS, allocno SSE_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a113 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a114 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a121 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a122 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a127 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a129 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a130 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a135 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a137 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a138 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a143 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a145 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a146 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a151 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r257,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a1(r172,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a2(r173,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a3(r170,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a4(r162,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a5(r171,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a6(r256,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a7(r169,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a8(r165,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a9(r255,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a10(r168,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a11(r167,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a12(r166,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a13(r254,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a14(r253,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a15(r164,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a16(r163,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a17(r252,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a18(r251,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a19(r161,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a20(r160,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a21(r250,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a22(r197,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7
  a23(r196,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a24(r159,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a25(r249,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a26(r248,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a27(r157,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a28(r158,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a29(r154,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a30(r150,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a31(r156,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a32(r155,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a33(r247,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a34(r246,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a35(r153,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a36(r152,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a37(r151,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a38(r245,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a39(r244,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a40(r149,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a41(r148,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a42(r147,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a43(r243,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a44(r242,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a45(r145,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a46(r146,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a47(r143,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a48(r136,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a49(r144,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a50(r241,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a51(r142,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a52(r139,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a53(r240,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a54(r141,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a55(r140,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a56(r239,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a57(r238,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a58(r138,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a59(r137,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a60(r237,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a61(r236,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a62(r135,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a63(r134,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a64(r235,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a65(r234,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a66(r132,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a67(r133,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a68(r130,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a69(r123,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a70(r131,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a71(r233,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a72(r129,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a73(r126,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a74(r232,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a75(r128,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a76(r127,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a77(r231,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a78(r230,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a79(r125,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a80(r124,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a81(r229,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a82(r228,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a83(r122,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a84(r121,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a85(r227,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a86(r226,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a87(r119,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a88(r120,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a89(r117,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a90(r114,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a91(r118,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a92(r225,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a93(r224,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a94(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a95(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a96(r223,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a97(r222,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a98(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a99(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a100(r221,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a101(r220,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a102(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a103(r111,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a104(r108,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a105(r105,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a106(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a107(r219,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a108(r218,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a109(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a110(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a111(r217,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a112(r216,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a113(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a114(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a115(r215,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a116(r213,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a117(r214,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a118(r194,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a119(r195,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7
  a120(r210,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a121(r101,l0) costs: AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:2
  a122(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a123(r190,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a124(r209,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a125(r189,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:38 INT_SSE_REGS:27 ALL_REGS:520 MEM:11
  a126(r208,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:8
  a127(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a128(r207,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a129(r97,l0) costs: AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:2
  a130(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a131(r185,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a132(r206,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a133(r184,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:38 INT_SSE_REGS:27 ALL_REGS:520 MEM:11
  a134(r205,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:8
  a135(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a136(r204,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a137(r93,l0) costs: AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:2
  a138(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a139(r180,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a140(r203,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a141(r179,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:38 INT_SSE_REGS:27 ALL_REGS:520 MEM:11
  a142(r202,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:8
  a143(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a144(r201,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a145(r89,l0) costs: AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:2
  a146(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a147(r175,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a148(r200,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a149(r174,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:38 INT_SSE_REGS:27 ALL_REGS:520 MEM:11
  a150(r199,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:8
  a151(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a152(r198,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8

   Insn 229(l0): point = 0
   Insn 239(l0): point = 3
   Insn 194(l0): point = 6
   Insn 193(l0): point = 8
   Insn 192(l0): point = 10
   Insn 191(l0): point = 12
   Insn 232(l0): point = 15
   Insn 219(l0): point = 17
   Insn 218(l0): point = 19
   Insn 217(l0): point = 21
   Insn 216(l0): point = 23
   Insn 215(l0): point = 25
   Insn 214(l0): point = 27
   Insn 213(l0): point = 29
   Insn 212(l0): point = 31
   Insn 211(l0): point = 33
   Insn 210(l0): point = 35
   Insn 209(l0): point = 37
   Insn 208(l0): point = 39
   Insn 207(l0): point = 41
   Insn 206(l0): point = 43
   Insn 205(l0): point = 45
   Insn 204(l0): point = 47
   Insn 203(l0): point = 49
   Insn 202(l0): point = 51
   Insn 201(l0): point = 53
   Insn 200(l0): point = 55
   Insn 199(l0): point = 57
   Insn 198(l0): point = 59
   Insn 197(l0): point = 61
   Insn 196(l0): point = 63
   Insn 189(l0): point = 66
   Insn 188(l0): point = 68
   Insn 187(l0): point = 70
   Insn 186(l0): point = 72
   Insn 185(l0): point = 74
   Insn 184(l0): point = 76
   Insn 183(l0): point = 78
   Insn 182(l0): point = 80
   Insn 181(l0): point = 82
   Insn 180(l0): point = 84
   Insn 179(l0): point = 86
   Insn 178(l0): point = 88
   Insn 177(l0): point = 90
   Insn 176(l0): point = 92
   Insn 175(l0): point = 94
   Insn 174(l0): point = 96
   Insn 173(l0): point = 98
   Insn 172(l0): point = 100
   Insn 171(l0): point = 102
   Insn 170(l0): point = 104
   Insn 169(l0): point = 106
   Insn 168(l0): point = 108
   Insn 167(l0): point = 110
   Insn 236(l0): point = 113
   Insn 77(l0): point = 116
   Insn 76(l0): point = 118
   Insn 75(l0): point = 120
   Insn 74(l0): point = 122
   Insn 230(l0): point = 125
   Insn 161(l0): point = 127
   Insn 160(l0): point = 129
   Insn 159(l0): point = 131
   Insn 158(l0): point = 133
   Insn 157(l0): point = 135
   Insn 156(l0): point = 137
   Insn 155(l0): point = 139
   Insn 154(l0): point = 141
   Insn 153(l0): point = 143
   Insn 152(l0): point = 145
   Insn 151(l0): point = 147
   Insn 150(l0): point = 149
   Insn 149(l0): point = 151
   Insn 148(l0): point = 153
   Insn 147(l0): point = 155
   Insn 146(l0): point = 157
   Insn 145(l0): point = 159
   Insn 144(l0): point = 161
   Insn 143(l0): point = 163
   Insn 142(l0): point = 165
   Insn 141(l0): point = 167
   Insn 140(l0): point = 169
   Insn 139(l0): point = 171
   Insn 138(l0): point = 173
   Insn 137(l0): point = 175
   Insn 136(l0): point = 177
   Insn 135(l0): point = 179
   Insn 134(l0): point = 181
   Insn 133(l0): point = 183
   Insn 132(l0): point = 185
   Insn 131(l0): point = 187
   Insn 130(l0): point = 189
   Insn 129(l0): point = 191
   Insn 128(l0): point = 193
   Insn 127(l0): point = 195
   Insn 126(l0): point = 197
   Insn 125(l0): point = 199
   Insn 124(l0): point = 201
   Insn 123(l0): point = 203
   Insn 122(l0): point = 205
   Insn 121(l0): point = 207
   Insn 120(l0): point = 209
   Insn 119(l0): point = 211
   Insn 118(l0): point = 213
   Insn 117(l0): point = 215
   Insn 116(l0): point = 217
   Insn 115(l0): point = 219
   Insn 114(l0): point = 221
   Insn 113(l0): point = 223
   Insn 112(l0): point = 225
   Insn 111(l0): point = 227
   Insn 110(l0): point = 229
   Insn 109(l0): point = 231
   Insn 108(l0): point = 233
   Insn 107(l0): point = 235
   Insn 106(l0): point = 237
   Insn 105(l0): point = 239
   Insn 104(l0): point = 241
   Insn 103(l0): point = 243
   Insn 102(l0): point = 245
   Insn 101(l0): point = 247
   Insn 100(l0): point = 249
   Insn 99(l0): point = 251
   Insn 98(l0): point = 253
   Insn 97(l0): point = 255
   Insn 96(l0): point = 257
   Insn 95(l0): point = 259
   Insn 94(l0): point = 261
   Insn 93(l0): point = 263
   Insn 92(l0): point = 265
   Insn 91(l0): point = 267
   Insn 90(l0): point = 269
   Insn 89(l0): point = 271
   Insn 88(l0): point = 273
   Insn 87(l0): point = 275
   Insn 86(l0): point = 277
   Insn 85(l0): point = 279
   Insn 84(l0): point = 281
   Insn 83(l0): point = 283
   Insn 82(l0): point = 285
   Insn 72(l0): point = 288
   Insn 71(l0): point = 290
   Insn 70(l0): point = 292
   Insn 66(l0): point = 294
   Insn 65(l0): point = 296
   Insn 64(l0): point = 298
   Insn 62(l0): point = 300
   Insn 60(l0): point = 302
   Insn 61(l0): point = 304
   Insn 59(l0): point = 306
   Insn 58(l0): point = 308
   Insn 57(l0): point = 310
   Insn 56(l0): point = 312
   Insn 55(l0): point = 314
   Insn 51(l0): point = 316
   Insn 50(l0): point = 318
   Insn 49(l0): point = 320
   Insn 47(l0): point = 322
   Insn 45(l0): point = 324
   Insn 46(l0): point = 326
   Insn 44(l0): point = 328
   Insn 43(l0): point = 330
   Insn 42(l0): point = 332
   Insn 41(l0): point = 334
   Insn 40(l0): point = 336
   Insn 36(l0): point = 338
   Insn 35(l0): point = 340
   Insn 34(l0): point = 342
   Insn 32(l0): point = 344
   Insn 30(l0): point = 346
   Insn 31(l0): point = 348
   Insn 29(l0): point = 350
   Insn 28(l0): point = 352
   Insn 27(l0): point = 354
   Insn 26(l0): point = 356
   Insn 25(l0): point = 358
   Insn 21(l0): point = 360
   Insn 20(l0): point = 362
   Insn 19(l0): point = 364
   Insn 17(l0): point = 366
   Insn 15(l0): point = 368
   Insn 16(l0): point = 370
   Insn 14(l0): point = 372
   Insn 13(l0): point = 374
   Insn 12(l0): point = 376
   Insn 11(l0): point = 378
   Insn 10(l0): point = 380
   Insn 6(l0): point = 382
   Insn 5(l0): point = 384
   Insn 4(l0): point = 386
   Insn 3(l0): point = 388
   Insn 2(l0): point = 390
 a0(r257): [20..21]
 a1(r172): [20..25]
 a2(r173): [20..23]
 a3(r170): [24..31]
 a4(r162): [24..55]
 a5(r171): [26..27]
 a6(r256): [28..29]
 a7(r169): [32..33]
 a8(r165): [32..45]
 a9(r255): [34..35]
 a10(r168): [34..37]
 a11(r167): [38..39]
 a12(r166): [40..41]
 a13(r254): [42..43]
 a14(r253): [46..47]
 a15(r164): [46..49]
 a16(r163): [50..51]
 a17(r252): [52..53]
 a18(r251): [56..57]
 a19(r161): [56..59]
 a20(r160): [60..61]
 a21(r250): [62..63]
 a22(r197): [9..10]
 a23(r196): [67..68]
 a24(r159): [69..70]
 a25(r249): [71..72]
 a26(r248): [75..76]
 a27(r157): [75..80]
 a28(r158): [75..78]
 a29(r154): [79..88]
 a30(r150): [79..100]
 a31(r156): [81..82]
 a32(r155): [83..84]
 a33(r247): [85..86]
 a34(r246): [89..90]
 a35(r153): [89..92]
 a36(r152): [93..94]
 a37(r151): [95..96]
 a38(r245): [97..98]
 a39(r244): [101..102]
 a40(r149): [101..104]
 a41(r148): [105..106]
 a42(r147): [107..108]
 a43(r243): [109..110]
 a44(r242): [130..131]
 a45(r145): [130..135]
 a46(r146): [130..133]
 a47(r143): [134..141]
 a48(r136): [134..163]
 a49(r144): [136..137]
 a50(r241): [138..139]
 a51(r142): [142..143]
 a52(r139): [142..153]
 a53(r240): [144..145]
 a54(r141): [144..147]
 a55(r140): [148..149]
 a56(r239): [150..151]
 a57(r238): [154..155]
 a58(r138): [154..157]
 a59(r137): [158..159]
 a60(r237): [160..161]
 a61(r236): [164..165]
 a62(r135): [164..167]
 a63(r134): [168..169]
 a64(r235): [170..171]
 a65(r234): [174..175]
 a66(r132): [174..179]
 a67(r133): [174..177]
 a68(r130): [178..185]
 a69(r123): [178..207]
 a70(r131): [180..181]
 a71(r233): [182..183]
 a72(r129): [186..187]
 a73(r126): [186..197]
 a74(r232): [188..189]
 a75(r128): [188..191]
 a76(r127): [192..193]
 a77(r231): [194..195]
 a78(r230): [198..199]
 a79(r125): [198..201]
 a80(r124): [202..203]
 a81(r229): [204..205]
 a82(r228): [208..209]
 a83(r122): [208..211]
 a84(r121): [212..213]
 a85(r227): [214..215]
 a86(r226): [218..219]
 a87(r119): [218..223]
 a88(r120): [218..221]
 a89(r117): [222..229]
 a90(r114): [222..239]
 a91(r118): [224..225]
 a92(r225): [226..227]
 a93(r224): [230..231]
 a94(r116): [230..233]
 a95(r115): [234..235]
 a96(r223): [236..237]
 a97(r222): [240..241]
 a98(r113): [240..243]
 a99(r112): [244..245]
 a100(r221): [246..247]
 a101(r220): [250..251]
 a102(r110): [250..255]
 a103(r111): [250..253]
 a104(r108): [254..261]
 a105(r105): [254..271]
 a106(r109): [256..257]
 a107(r219): [258..259]
 a108(r218): [262..263]
 a109(r107): [262..265]
 a110(r106): [266..267]
 a111(r217): [268..269]
 a112(r216): [272..273]
 a113(r104): [272..275]
 a114(r103): [276..277]
 a115(r215): [278..279]
 a116(r213): [282..283]
 a117(r214): [284..285]
 a118(r194): [116..290]
 a119(r195): [119..120]
 a120(r210): [291..292]
 a121(r101 [0]): [295..392]
 a121(r101 [1]): [294..392]
 a122(r100): [297..298]
 a123(r190): [299..300]
 a124(r209): [301..304]
 a125(r189): [301..306]
 a126(r208): [309..310]
 a127(r99): [311..312]
 a128(r207): [313..314]
 a129(r97 [0]): [317..392]
 a129(r97 [1]): [316..392]
 a130(r96): [319..320]
 a131(r185): [321..322]
 a132(r206): [323..326]
 a133(r184): [323..328]
 a134(r205): [331..332]
 a135(r95): [333..334]
 a136(r204): [335..336]
 a137(r93 [0]): [339..392]
 a137(r93 [1]): [338..392]
 a138(r92): [341..342]
 a139(r180): [343..344]
 a140(r203): [345..348]
 a141(r179): [345..350]
 a142(r202): [353..354]
 a143(r91): [355..356]
 a144(r201): [357..358]
 a145(r89 [0]): [361..392]
 a145(r89 [1]): [360..392]
 a146(r88): [363..364]
 a147(r175): [365..366]
 a148(r200): [367..370]
 a149(r174): [367..372]
 a150(r199): [375..376]
 a151(r87): [377..378]
 a152(r198): [379..380]
Compressing live ranges: from 393 to 216 - 54%
Ranges after the compression:
 a0(r257): [2..3]
 a1(r172): [2..5]
 a2(r173): [2..3]
 a3(r170): [4..9]
 a4(r162): [4..25]
 a5(r171): [6..7]
 a6(r256): [8..9]
 a7(r169): [10..11]
 a8(r165): [10..19]
 a9(r255): [12..13]
 a10(r168): [12..13]
 a11(r167): [14..15]
 a12(r166): [16..17]
 a13(r254): [18..19]
 a14(r253): [20..21]
 a15(r164): [20..21]
 a16(r163): [22..23]
 a17(r252): [24..25]
 a18(r251): [26..27]
 a19(r161): [26..27]
 a20(r160): [28..29]
 a21(r250): [30..31]
 a22(r197): [0..1]
 a23(r196): [32..33]
 a24(r159): [34..35]
 a25(r249): [36..37]
 a26(r248): [38..39]
 a27(r157): [38..41]
 a28(r158): [38..39]
 a29(r154): [40..47]
 a30(r150): [40..55]
 a31(r156): [42..43]
 a32(r155): [44..45]
 a33(r247): [46..47]
 a34(r246): [48..49]
 a35(r153): [48..49]
 a36(r152): [50..51]
 a37(r151): [52..53]
 a38(r245): [54..55]
 a39(r244): [56..57]
 a40(r149): [56..57]
 a41(r148): [58..59]
 a42(r147): [60..61]
 a43(r243): [62..63]
 a44(r242): [66..67]
 a45(r145): [66..69]
 a46(r146): [66..67]
 a47(r143): [68..73]
 a48(r136): [68..87]
 a49(r144): [70..71]
 a50(r241): [72..73]
 a51(r142): [74..75]
 a52(r139): [74..81]
 a53(r240): [76..77]
 a54(r141): [76..77]
 a55(r140): [78..79]
 a56(r239): [80..81]
 a57(r238): [82..83]
 a58(r138): [82..83]
 a59(r137): [84..85]
 a60(r237): [86..87]
 a61(r236): [88..89]
 a62(r135): [88..89]
 a63(r134): [90..91]
 a64(r235): [92..93]
 a65(r234): [94..95]
 a66(r132): [94..97]
 a67(r133): [94..95]
 a68(r130): [96..101]
 a69(r123): [96..115]
 a70(r131): [98..99]
 a71(r233): [100..101]
 a72(r129): [102..103]
 a73(r126): [102..109]
 a74(r232): [104..105]
 a75(r128): [104..105]
 a76(r127): [106..107]
 a77(r231): [108..109]
 a78(r230): [110..111]
 a79(r125): [110..111]
 a80(r124): [112..113]
 a81(r229): [114..115]
 a82(r228): [116..117]
 a83(r122): [116..117]
 a84(r121): [118..119]
 a85(r227): [120..121]
 a86(r226): [122..123]
 a87(r119): [122..125]
 a88(r120): [122..123]
 a89(r117): [124..129]
 a90(r114): [124..135]
 a91(r118): [126..127]
 a92(r225): [128..129]
 a93(r224): [130..131]
 a94(r116): [130..131]
 a95(r115): [132..133]
 a96(r223): [134..135]
 a97(r222): [136..137]
 a98(r113): [136..137]
 a99(r112): [138..139]
 a100(r221): [140..141]
 a101(r220): [142..143]
 a102(r110): [142..145]
 a103(r111): [142..143]
 a104(r108): [144..149]
 a105(r105): [144..155]
 a106(r109): [146..147]
 a107(r219): [148..149]
 a108(r218): [150..151]
 a109(r107): [150..151]
 a110(r106): [152..153]
 a111(r217): [154..155]
 a112(r216): [156..157]
 a113(r104): [156..157]
 a114(r103): [158..159]
 a115(r215): [160..161]
 a116(r213): [162..163]
 a117(r214): [164..165]
 a118(r194): [64..165]
 a119(r195): [64..65]
 a120(r210): [166..167]
 a121(r101 [0]): [168..215]
 a121(r101 [1]): [168..215]
 a122(r100): [168..169]
 a123(r190): [170..171]
 a124(r209): [172..173]
 a125(r189): [172..173]
 a126(r208): [174..175]
 a127(r99): [176..177]
 a128(r207): [178..179]
 a129(r97 [0]): [180..215]
 a129(r97 [1]): [180..215]
 a130(r96): [180..181]
 a131(r185): [182..183]
 a132(r206): [184..185]
 a133(r184): [184..185]
 a134(r205): [186..187]
 a135(r95): [188..189]
 a136(r204): [190..191]
 a137(r93 [0]): [192..215]
 a137(r93 [1]): [192..215]
 a138(r92): [192..193]
 a139(r180): [194..195]
 a140(r203): [196..197]
 a141(r179): [196..197]
 a142(r202): [198..199]
 a143(r91): [200..201]
 a144(r201): [202..203]
 a145(r89 [0]): [204..215]
 a145(r89 [1]): [204..215]
 a146(r88): [204..205]
 a147(r175): [206..207]
 a148(r200): [208..209]
 a149(r174): [208..209]
 a150(r199): [210..211]
 a151(r87): [212..213]
 a152(r198): [214..215]
  regions=1, blocks=11, points=216
    allocnos=153 (big 4), copies=0, conflicts=0, ranges=157
Disposition:
  151:r87  l0     0  146:r88  l0     0  145:r89  l0   mem  143:r91  l0     0
  138:r92  l0     0  137:r93  l0    42  135:r95  l0     0  130:r96  l0     0
  129:r97  l0    40  127:r99  l0     0  122:r100 l0     0  121:r101 l0    38
  114:r103 l0     0  113:r104 l0     2  105:r105 l0    21  110:r106 l0     0
  109:r107 l0     2  104:r108 l0    22  106:r109 l0     0  102:r110 l0     2
  103:r111 l0    21   99:r112 l0     0   98:r113 l0     2   90:r114 l0    21
   95:r115 l0     0   94:r116 l0     2   89:r117 l0    22   91:r118 l0     0
   87:r119 l0     2   88:r120 l0    21   84:r121 l0     0   83:r122 l0     2
   69:r123 l0    22   80:r124 l0     0   79:r125 l0     2   73:r126 l0    23
   76:r127 l0     0   75:r128 l0     2   72:r129 l0    21   68:r130 l0    21
   70:r131 l0     0   66:r132 l0     2   67:r133 l0    21   63:r134 l0     0
   62:r135 l0     2   48:r136 l0    22   59:r137 l0     0   58:r138 l0     2
   52:r139 l0    23   55:r140 l0     0   54:r141 l0     2   51:r142 l0    21
   47:r143 l0    21   49:r144 l0     0   45:r145 l0     2   46:r146 l0    21
   42:r147 l0     0   41:r148 l0     0   40:r149 l0     1   30:r150 l0    21
   37:r151 l0     0   36:r152 l0     0   35:r153 l0     1   29:r154 l0    22
   32:r155 l0     0   31:r156 l0     0   27:r157 l0     1   28:r158 l0    21
   24:r159 l0     0   20:r160 l0     0   19:r161 l0     1    4:r162 l0    22
   16:r163 l0     0   15:r164 l0     1    8:r165 l0    23   12:r166 l0     0
   11:r167 l0     0   10:r168 l0     1    7:r169 l0    21    3:r170 l0    21
    5:r171 l0     0    1:r172 l0     1    2:r173 l0    21  149:r174 l0     0
  147:r175 l0     0  141:r179 l0     0  139:r180 l0     0  133:r184 l0     0
  131:r185 l0     0  125:r189 l0     0  123:r190 l0     0  118:r194 l0     1
  119:r195 l0     0   23:r196 l0     0   22:r197 l0     0  152:r198 l0     0
  150:r199 l0     0  148:r200 l0     1  144:r201 l0     0  142:r202 l0     0
  140:r203 l0     1  136:r204 l0     0  134:r205 l0     0  132:r206 l0     1
  128:r207 l0     0  126:r208 l0     0  124:r209 l0     1  120:r210 l0     0
  116:r213 l0     0  117:r214 l0     0  115:r215 l0     0  112:r216 l0     0
  111:r217 l0     0  108:r218 l0     0  107:r219 l0     0  101:r220 l0     0
  100:r221 l0     0   97:r222 l0     0   96:r223 l0     0   93:r224 l0     0
   92:r225 l0     0   86:r226 l0     0   85:r227 l0     0   82:r228 l0     0
   81:r229 l0     0   78:r230 l0     0   77:r231 l0     0   74:r232 l0     0
   71:r233 l0     0   65:r234 l0     0   64:r235 l0     0   61:r236 l0     0
   60:r237 l0     0   57:r238 l0     0   56:r239 l0     0   53:r240 l0     0
   50:r241 l0     0   44:r242 l0     0   43:r243 l0     0   39:r244 l0     0
   38:r245 l0     0   34:r246 l0     0   33:r247 l0     0   26:r248 l0     0
   25:r249 l0     0   21:r250 l0     0   18:r251 l0     0   17:r252 l0     0
   14:r253 l0     0   13:r254 l0     0    9:r255 l0     0    6:r256 l0     0
    0:r257 l0     0
+++Costs: overall 2, reg 0, mem 2, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


trisol

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 17 [flags] 37 [r8]
;;  ref usage 	r0={1d} r1={1d,1u} r2={1d,1u} r4={1d,1u} r5={1d,1u} r6={1d,10u} r7={1d,10u} r16={1d,9u} r17={34d,8u} r20={1d,81u,2e} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d,1u} r38={1d} r87={1d,1u} r88={1d,1u} r89={2d,2u} r91={1d,1u} r92={1d,1u} r93={2d,2u} r95={1d,1u} r96={1d,1u} r97={2d,2u} r99={1d,1u} r100={1d,1u} r101={2d,2u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,1u} r127={1d,1u} r128={1d,1u} r129={1d,1u} r130={1d,1u} r131={1d,1u} r132={1d,1u} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d,1u} r165={1d,1u} r166={1d,1u} r167={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,1u} r171={1d,1u} r172={1d,1u} r173={1d,1u} r174={1d,2u} r175={1d,1u} r179={1d,2u} r180={1d,1u} r184={1d,2u} r185={1d,1u} r189={1d,2u} r190={1d,1u} r194={1d,1u} r195={1d,1u} r196={1d,1u} r197={1d,1u} r198={1d,1u} r199={1d,1u} r200={1d,1u} r201={1d,1u} r202={1d,1u} r203={1d,1u} r204={1d,1u} r205={1d,1u} r206={1d,1u} r207={1d,1u} r208={1d,1u} r209={1d,1u} r210={1d,1u} r213={1d,1u} r214={1d,1u} r215={1d,1u} r216={1d,1u} r217={1d,1u} r218={1d,1u} r219={1d,1u} r220={1d,1u} r221={1d,1u} r222={1d,1u} r223={1d,1u} r224={1d,1u} r225={1d,1u} r226={1d,1u} r227={1d,1u} r228={1d,1u} r229={1d,1u} r230={1d,1u} r231={1d,1u} r232={1d,1u} r233={1d,1u} r234={1d,1u} r235={1d,1u} r236={1d,1u} r237={1d,1u} r238={1d,1u} r239={1d,1u} r240={1d,1u} r241={1d,1u} r242={1d,1u} r243={1d,1u} r244={1d,1u} r245={1d,1u} r246={1d,1u} r247={1d,1u} r248={1d,1u} r249={1d,1u} r250={1d,1u} r251={1d,1u} r252={1d,1u} r253={1d,1u} r254={1d,1u} r255={1d,1u} r256={1d,1u} r257={1d,1u} 
;;    total ref usage 496{210d,284u,2e} in 192{192 regular + 0 call} insns.
(note 1 0 8 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 89 93 97 101
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 89 93 97 101
;; lr  def 	 17 [flags] 87 88 91 92 95 96 99 100 174 175 179 180 184 185 189 190 194 198 199 200 201 202 203 204 205 206 207 208 209 210
(note 8 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 8 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [5 a+0 S8 A64])
        (reg:DI 5 di [ a ])) "../src/spline.f":231 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ a ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [5 b+0 S8 A64])
        (reg:DI 4 si [ b ])) "../src/spline.f":231 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ b ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [5 c+0 S8 A64])
        (reg:DI 1 dx [ c ])) "../src/spline.f":231 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ c ])
        (nil)))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [5 d+0 S8 A64])
        (reg:DI 2 cx [ d ])) "../src/spline.f":231 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [ d ])
        (nil)))
(insn 6 5 7 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -88 [0xffffffffffffffa8])) [6 kk+0 S8 A64])
        (reg:DI 37 r8 [ kk ])) "../src/spline.f":231 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 37 r8 [ kk ])
        (nil)))
(note 7 6 10 2 NOTE_INSN_FUNCTION_BEG)
(insn 10 7 11 2 (set (reg/f:DI 198)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -88 [0xffffffffffffffa8])) [6 kk+0 S8 A64])) "../src/spline.f":231 81 {*movdi_internal}
     (nil))
(insn 11 10 12 2 (set (reg:SI 87 [ _1 ])
        (mem:SI (reg/f:DI 198) [1 *kk_93(D)+0 S4 A32])) "../src/spline.f":231 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 198)
        (nil)))
(insn 12 11 13 2 (set (reg:DI 199)
        (sign_extend:DI (reg:SI 87 [ _1 ]))) "../src/spline.f":231 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 87 [ _1 ])
        (nil)))
(insn 13 12 14 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 ubound.34+0 S8 A64])
        (reg:DI 199)) "../src/spline.f":231 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 199)
        (nil)))
(insn 14 13 16 2 (set (reg:DI 174 [ size.35_95 ])
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 ubound.34+0 S8 A64])) "../src/spline.f":231 81 {*movdi_internal}
     (nil))
(insn 16 14 15 2 (set (reg:DI 200)
        (const_int 0 [0])) "../src/spline.f":231 81 {*movdi_internal}
     (nil))
(insn 15 16 17 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 174 [ size.35_95 ])
            (const_int 0 [0]))) "../src/spline.f":231 4 {*cmpdi_ccno_1}
     (nil))
(insn 17 15 19 2 (set (reg:DI 175 [ size.35_96 ])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 174 [ size.35_95 ])
            (reg:DI 200))) "../src/spline.f":231 967 {*movdicc_noc}
     (expr_list:REG_DEAD (reg:DI 200)
        (expr_list:REG_DEAD (reg:DI 174 [ size.35_95 ])
            (expr_list:REG_DEAD (reg:CCGOC 17 flags)
                (nil)))))
(insn 19 17 20 2 (set (reg:DI 88 [ size.179_2 ])
        (reg:DI 175 [ size.35_96 ])) "../src/spline.f":231 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 175 [ size.35_96 ])
        (nil)))
(insn 20 19 21 2 (set (subreg:DI (reg:TI 89 [ _3 ]) 0)
        (reg:DI 88 [ size.179_2 ])) "../src/spline.f":231 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88 [ size.179_2 ])
        (nil)))
(insn 21 20 25 2 (set (subreg:DI (reg:TI 89 [ _3 ]) 8)
        (const_int 0 [0])) "../src/spline.f":231 81 {*movdi_internal}
     (expr_list:REG_UNUSED (reg:TI 89 [ _3 ])
        (nil)))
(insn 25 21 26 2 (set (reg/f:DI 201)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -88 [0xffffffffffffffa8])) [6 kk+0 S8 A64])) "../src/spline.f":231 81 {*movdi_internal}
     (nil))
(insn 26 25 27 2 (set (reg:SI 91 [ _5 ])
        (mem:SI (reg/f:DI 201) [1 *kk_93(D)+0 S4 A32])) "../src/spline.f":231 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 201)
        (nil)))
(insn 27 26 28 2 (set (reg:DI 202)
        (sign_extend:DI (reg:SI 91 [ _5 ]))) "../src/spline.f":231 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 91 [ _5 ])
        (nil)))
(insn 28 27 29 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [2 ubound.30+0 S8 A64])
        (reg:DI 202)) "../src/spline.f":231 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 202)
        (nil)))
(insn 29 28 31 2 (set (reg:DI 179 [ size.31_101 ])
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [2 ubound.30+0 S8 A64])) "../src/spline.f":231 81 {*movdi_internal}
     (nil))
(insn 31 29 30 2 (set (reg:DI 203)
        (const_int 0 [0])) "../src/spline.f":231 81 {*movdi_internal}
     (nil))
(insn 30 31 32 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 179 [ size.31_101 ])
            (const_int 0 [0]))) "../src/spline.f":231 4 {*cmpdi_ccno_1}
     (nil))
(insn 32 30 34 2 (set (reg:DI 180 [ size.31_102 ])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 179 [ size.31_101 ])
            (reg:DI 203))) "../src/spline.f":231 967 {*movdicc_noc}
     (expr_list:REG_DEAD (reg:DI 203)
        (expr_list:REG_DEAD (reg:DI 179 [ size.31_101 ])
            (expr_list:REG_DEAD (reg:CCGOC 17 flags)
                (nil)))))
(insn 34 32 35 2 (set (reg:DI 92 [ size.181_6 ])
        (reg:DI 180 [ size.31_102 ])) "../src/spline.f":231 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 180 [ size.31_102 ])
        (nil)))
(insn 35 34 36 2 (set (subreg:DI (reg:TI 93 [ _7 ]) 0)
        (reg:DI 92 [ size.181_6 ])) "../src/spline.f":231 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 92 [ size.181_6 ])
        (nil)))
(insn 36 35 40 2 (set (subreg:DI (reg:TI 93 [ _7 ]) 8)
        (const_int 0 [0])) "../src/spline.f":231 81 {*movdi_internal}
     (expr_list:REG_UNUSED (reg:TI 93 [ _7 ])
        (nil)))
(insn 40 36 41 2 (set (reg/f:DI 204)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -88 [0xffffffffffffffa8])) [6 kk+0 S8 A64])) "../src/spline.f":231 81 {*movdi_internal}
     (nil))
(insn 41 40 42 2 (set (reg:SI 95 [ _9 ])
        (mem:SI (reg/f:DI 204) [1 *kk_93(D)+0 S4 A32])) "../src/spline.f":231 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 204)
        (nil)))
(insn 42 41 43 2 (set (reg:DI 205)
        (sign_extend:DI (reg:SI 95 [ _9 ]))) "../src/spline.f":231 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 95 [ _9 ])
        (nil)))
(insn 43 42 44 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [2 ubound.36+0 S8 A64])
        (reg:DI 205)) "../src/spline.f":231 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 205)
        (nil)))
(insn 44 43 46 2 (set (reg:DI 184 [ size.37_107 ])
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [2 ubound.36+0 S8 A64])) "../src/spline.f":231 81 {*movdi_internal}
     (nil))
(insn 46 44 45 2 (set (reg:DI 206)
        (const_int 0 [0])) "../src/spline.f":231 81 {*movdi_internal}
     (nil))
(insn 45 46 47 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 184 [ size.37_107 ])
            (const_int 0 [0]))) "../src/spline.f":231 4 {*cmpdi_ccno_1}
     (nil))
(insn 47 45 49 2 (set (reg:DI 185 [ size.37_108 ])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 184 [ size.37_107 ])
            (reg:DI 206))) "../src/spline.f":231 967 {*movdicc_noc}
     (expr_list:REG_DEAD (reg:DI 206)
        (expr_list:REG_DEAD (reg:DI 184 [ size.37_107 ])
            (expr_list:REG_DEAD (reg:CCGOC 17 flags)
                (nil)))))
(insn 49 47 50 2 (set (reg:DI 96 [ size.183_10 ])
        (reg:DI 185 [ size.37_108 ])) "../src/spline.f":231 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 185 [ size.37_108 ])
        (nil)))
(insn 50 49 51 2 (set (subreg:DI (reg:TI 97 [ _11 ]) 0)
        (reg:DI 96 [ size.183_10 ])) "../src/spline.f":231 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 96 [ size.183_10 ])
        (nil)))
(insn 51 50 55 2 (set (subreg:DI (reg:TI 97 [ _11 ]) 8)
        (const_int 0 [0])) "../src/spline.f":231 81 {*movdi_internal}
     (expr_list:REG_UNUSED (reg:TI 97 [ _11 ])
        (nil)))
(insn 55 51 56 2 (set (reg/f:DI 207)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -88 [0xffffffffffffffa8])) [6 kk+0 S8 A64])) "../src/spline.f":231 81 {*movdi_internal}
     (nil))
(insn 56 55 57 2 (set (reg:SI 99 [ _13 ])
        (mem:SI (reg/f:DI 207) [1 *kk_93(D)+0 S4 A32])) "../src/spline.f":231 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 207)
        (nil)))
(insn 57 56 58 2 (set (reg:DI 208)
        (sign_extend:DI (reg:SI 99 [ _13 ]))) "../src/spline.f":231 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 99 [ _13 ])
        (nil)))
(insn 58 57 59 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [2 ubound.32+0 S8 A64])
        (reg:DI 208)) "../src/spline.f":231 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 208)
        (nil)))
(insn 59 58 61 2 (set (reg:DI 189 [ size.33_113 ])
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [2 ubound.32+0 S8 A64])) "../src/spline.f":231 81 {*movdi_internal}
     (nil))
(insn 61 59 60 2 (set (reg:DI 209)
        (const_int 0 [0])) "../src/spline.f":231 81 {*movdi_internal}
     (nil))
(insn 60 61 62 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 189 [ size.33_113 ])
            (const_int 0 [0]))) "../src/spline.f":231 4 {*cmpdi_ccno_1}
     (nil))
(insn 62 60 64 2 (set (reg:DI 190 [ size.33_114 ])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 189 [ size.33_113 ])
            (reg:DI 209))) "../src/spline.f":231 967 {*movdicc_noc}
     (expr_list:REG_DEAD (reg:DI 209)
        (expr_list:REG_DEAD (reg:DI 189 [ size.33_113 ])
            (expr_list:REG_DEAD (reg:CCGOC 17 flags)
                (nil)))))
(insn 64 62 65 2 (set (reg:DI 100 [ size.185_14 ])
        (reg:DI 190 [ size.33_114 ])) "../src/spline.f":231 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 190 [ size.33_114 ])
        (nil)))
(insn 65 64 66 2 (set (subreg:DI (reg:TI 101 [ _15 ]) 0)
        (reg:DI 100 [ size.185_14 ])) "../src/spline.f":231 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 100 [ size.185_14 ])
        (nil)))
(insn 66 65 70 2 (set (subreg:DI (reg:TI 101 [ _15 ]) 8)
        (const_int 0 [0])) "../src/spline.f":231 81 {*movdi_internal}
     (expr_list:REG_UNUSED (reg:TI 101 [ _15 ])
        (nil)))
(insn 70 66 71 2 (set (reg/f:DI 210)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -88 [0xffffffffffffffa8])) [6 kk+0 S8 A64])) "../src/spline.f":246 81 {*movdi_internal}
     (nil))
(insn 71 70 72 2 (set (reg:SI 194 [ _118 ])
        (mem:SI (reg/f:DI 210) [1 *kk_93(D)+0 S4 A32])) "../src/spline.f":246 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 210)
        (nil)))
(insn 72 71 162 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 k+0 S4 A32])
        (const_int 2 [0x2])) "../src/spline.f":246 82 {*movsi_internal}
     (nil))
;;  succ:       3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 194

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 (FALLTHRU)
;;              4 [100.0%] 
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 194
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 194
;; lr  def 	 17 [flags] 195
(code_label 162 72 73 3 69 (nil) [1 uses])
(note 73 162 74 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 74 73 75 3 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [1 k+0 S4 A32])
            (reg:SI 194 [ _118 ]))) "../src/spline.f":246 7 {*cmpsi_1}
     (nil))
(insn 75 74 76 3 (set (reg:QI 195 [ _120 ])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "../src/spline.f":246 613 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil)))
(insn 76 75 77 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 195 [ _120 ])
            (const_int 0 [0]))) "../src/spline.f":246 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 195 [ _120 ])
        (nil)))
(jump_insn 77 76 78 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 235)
            (pc))) "../src/spline.f":246 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 235)
;;  succ:       9
;;              4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 194

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 9, flags: (RTL)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 194
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242
(note 78 77 82 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 82 78 83 4 (set (reg:SI 214)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 k+0 S4 A32])) "../src/spline.f":247 82 {*movsi_internal}
     (nil))
(insn 83 82 84 4 (parallel [
            (set (reg:SI 213)
                (plus:SI (reg:SI 214)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":247 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 214)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 k+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff]))
                (nil)))))
(insn 84 83 85 4 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -44 [0xffffffffffffffd4])) [1 km+0 S4 A32])
        (reg:SI 213)) "../src/spline.f":247 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 213)
        (nil)))
(insn 85 84 86 4 (set (reg:SI 215)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -44 [0xffffffffffffffd4])) [1 km+0 S4 A32])) "../src/spline.f":248 82 {*movsi_internal}
     (nil))
(insn 86 85 87 4 (set (reg:DI 103 [ _17 ])
        (sign_extend:DI (reg:SI 215))) "../src/spline.f":248 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 215)
        (nil)))
(insn 87 86 88 4 (parallel [
            (set (reg:DI 104 [ _18 ])
                (plus:DI (reg:DI 103 [ _17 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":248 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 103 [ _17 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 88 87 89 4 (set (reg/f:DI 216)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [5 c+0 S8 A64])) "../src/spline.f":248 81 {*movdi_internal}
     (nil))
(insn 89 88 90 4 (set (reg:SF 105 [ _19 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 104 [ _18 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 216)) [3 *c_122(D) S4 A32])) "../src/spline.f":248 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 216)
        (expr_list:REG_DEAD (reg:DI 104 [ _18 ])
            (nil))))
(insn 90 89 91 4 (set (reg:SI 217)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -44 [0xffffffffffffffd4])) [1 km+0 S4 A32])) "../src/spline.f":248 82 {*movsi_internal}
     (nil))
(insn 91 90 92 4 (set (reg:DI 106 [ _20 ])
        (sign_extend:DI (reg:SI 217))) "../src/spline.f":248 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 217)
        (nil)))
(insn 92 91 93 4 (parallel [
            (set (reg:DI 107 [ _21 ])
                (plus:DI (reg:DI 106 [ _20 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":248 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 106 [ _20 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 93 92 94 4 (set (reg/f:DI 218)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [5 a+0 S8 A64])) "../src/spline.f":248 81 {*movdi_internal}
     (nil))
(insn 94 93 95 4 (set (reg:SF 108 [ _22 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 107 [ _21 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 218)) [3 *a_123(D) S4 A32])) "../src/spline.f":248 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 218)
        (expr_list:REG_DEAD (reg:DI 107 [ _21 ])
            (nil))))
(insn 95 94 96 4 (set (reg:SI 219)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -44 [0xffffffffffffffd4])) [1 km+0 S4 A32])) "../src/spline.f":248 82 {*movsi_internal}
     (nil))
(insn 96 95 97 4 (set (reg:DI 109 [ _23 ])
        (sign_extend:DI (reg:SI 219))) "../src/spline.f":248 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 219)
        (nil)))
(insn 97 96 98 4 (parallel [
            (set (reg:DI 110 [ _24 ])
                (plus:DI (reg:DI 109 [ _23 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":248 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 109 [ _23 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 98 97 99 4 (set (reg:SF 111 [ _25 ])
        (div:SF (reg:SF 105 [ _19 ])
            (reg:SF 108 [ _22 ]))) "../src/spline.f":248 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 108 [ _22 ])
        (expr_list:REG_DEAD (reg:SF 105 [ _19 ])
            (nil))))
(insn 99 98 100 4 (set (reg/f:DI 220)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [5 c+0 S8 A64])) "../src/spline.f":248 81 {*movdi_internal}
     (nil))
(insn 100 99 101 4 (set (mem:SF (plus:DI (mult:DI (reg:DI 110 [ _24 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 220)) [3 *c_122(D) S4 A32])
        (reg:SF 111 [ _25 ])) "../src/spline.f":248 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 220)
        (expr_list:REG_DEAD (reg:SF 111 [ _25 ])
            (expr_list:REG_DEAD (reg:DI 110 [ _24 ])
                (nil)))))
(insn 101 100 102 4 (set (reg:SI 221)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -44 [0xffffffffffffffd4])) [1 km+0 S4 A32])) "../src/spline.f":249 82 {*movsi_internal}
     (nil))
(insn 102 101 103 4 (set (reg:DI 112 [ _26 ])
        (sign_extend:DI (reg:SI 221))) "../src/spline.f":249 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 221)
        (nil)))
(insn 103 102 104 4 (parallel [
            (set (reg:DI 113 [ _27 ])
                (plus:DI (reg:DI 112 [ _26 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":249 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 112 [ _26 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 104 103 105 4 (set (reg/f:DI 222)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [5 d+0 S8 A64])) "../src/spline.f":249 81 {*movdi_internal}
     (nil))
(insn 105 104 106 4 (set (reg:SF 114 [ _28 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 113 [ _27 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 222)) [3 *d_125(D) S4 A32])) "../src/spline.f":249 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 222)
        (expr_list:REG_DEAD (reg:DI 113 [ _27 ])
            (nil))))
(insn 106 105 107 4 (set (reg:SI 223)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -44 [0xffffffffffffffd4])) [1 km+0 S4 A32])) "../src/spline.f":249 82 {*movsi_internal}
     (nil))
(insn 107 106 108 4 (set (reg:DI 115 [ _29 ])
        (sign_extend:DI (reg:SI 223))) "../src/spline.f":249 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 223)
        (nil)))
(insn 108 107 109 4 (parallel [
            (set (reg:DI 116 [ _30 ])
                (plus:DI (reg:DI 115 [ _29 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":249 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 115 [ _29 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 109 108 110 4 (set (reg/f:DI 224)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [5 a+0 S8 A64])) "../src/spline.f":249 81 {*movdi_internal}
     (nil))
(insn 110 109 111 4 (set (reg:SF 117 [ _31 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 116 [ _30 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 224)) [3 *a_123(D) S4 A32])) "../src/spline.f":249 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 224)
        (expr_list:REG_DEAD (reg:DI 116 [ _30 ])
            (nil))))
(insn 111 110 112 4 (set (reg:SI 225)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -44 [0xffffffffffffffd4])) [1 km+0 S4 A32])) "../src/spline.f":249 82 {*movsi_internal}
     (nil))
(insn 112 111 113 4 (set (reg:DI 118 [ _32 ])
        (sign_extend:DI (reg:SI 225))) "../src/spline.f":249 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 225)
        (nil)))
(insn 113 112 114 4 (parallel [
            (set (reg:DI 119 [ _33 ])
                (plus:DI (reg:DI 118 [ _32 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":249 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 118 [ _32 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 114 113 115 4 (set (reg:SF 120 [ _34 ])
        (div:SF (reg:SF 114 [ _28 ])
            (reg:SF 117 [ _31 ]))) "../src/spline.f":249 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 117 [ _31 ])
        (expr_list:REG_DEAD (reg:SF 114 [ _28 ])
            (nil))))
(insn 115 114 116 4 (set (reg/f:DI 226)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [5 d+0 S8 A64])) "../src/spline.f":249 81 {*movdi_internal}
     (nil))
(insn 116 115 117 4 (set (mem:SF (plus:DI (mult:DI (reg:DI 119 [ _33 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 226)) [3 *d_125(D) S4 A32])
        (reg:SF 120 [ _34 ])) "../src/spline.f":249 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 226)
        (expr_list:REG_DEAD (reg:SF 120 [ _34 ])
            (expr_list:REG_DEAD (reg:DI 119 [ _33 ])
                (nil)))))
(insn 117 116 118 4 (set (reg:SI 227)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 k+0 S4 A32])) "../src/spline.f":250 82 {*movsi_internal}
     (nil))
(insn 118 117 119 4 (set (reg:DI 121 [ _35 ])
        (sign_extend:DI (reg:SI 227))) "../src/spline.f":250 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 227)
        (nil)))
(insn 119 118 120 4 (parallel [
            (set (reg:DI 122 [ _36 ])
                (plus:DI (reg:DI 121 [ _35 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":250 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 121 [ _35 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 120 119 121 4 (set (reg/f:DI 228)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [5 a+0 S8 A64])) "../src/spline.f":250 81 {*movdi_internal}
     (nil))
(insn 121 120 122 4 (set (reg:SF 123 [ _37 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 122 [ _36 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 228)) [3 *a_123(D) S4 A32])) "../src/spline.f":250 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 228)
        (expr_list:REG_DEAD (reg:DI 122 [ _36 ])
            (nil))))
(insn 122 121 123 4 (set (reg:SI 229)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 k+0 S4 A32])) "../src/spline.f":250 82 {*movsi_internal}
     (nil))
(insn 123 122 124 4 (set (reg:DI 124 [ _38 ])
        (sign_extend:DI (reg:SI 229))) "../src/spline.f":250 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 229)
        (nil)))
(insn 124 123 125 4 (parallel [
            (set (reg:DI 125 [ _39 ])
                (plus:DI (reg:DI 124 [ _38 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":250 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 124 [ _38 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 125 124 126 4 (set (reg/f:DI 230)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [5 b+0 S8 A64])) "../src/spline.f":250 81 {*movdi_internal}
     (nil))
(insn 126 125 127 4 (set (reg:SF 126 [ _40 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 125 [ _39 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 230)) [3 *b_127(D) S4 A32])) "../src/spline.f":250 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 230)
        (expr_list:REG_DEAD (reg:DI 125 [ _39 ])
            (nil))))
(insn 127 126 128 4 (set (reg:SI 231)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -44 [0xffffffffffffffd4])) [1 km+0 S4 A32])) "../src/spline.f":250 82 {*movsi_internal}
     (nil))
(insn 128 127 129 4 (set (reg:DI 127 [ _41 ])
        (sign_extend:DI (reg:SI 231))) "../src/spline.f":250 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 231)
        (nil)))
(insn 129 128 130 4 (parallel [
            (set (reg:DI 128 [ _42 ])
                (plus:DI (reg:DI 127 [ _41 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":250 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 127 [ _41 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 130 129 131 4 (set (reg/f:DI 232)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [5 c+0 S8 A64])) "../src/spline.f":250 81 {*movdi_internal}
     (nil))
(insn 131 130 132 4 (set (reg:SF 129 [ _43 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 128 [ _42 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 232)) [3 *c_122(D) S4 A32])) "../src/spline.f":250 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 232)
        (expr_list:REG_DEAD (reg:DI 128 [ _42 ])
            (nil))))
(insn 132 131 133 4 (set (reg:SF 130 [ _44 ])
        (mult:SF (reg:SF 126 [ _40 ])
            (reg:SF 129 [ _43 ]))) "../src/spline.f":250 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 129 [ _43 ])
        (expr_list:REG_DEAD (reg:SF 126 [ _40 ])
            (nil))))
(insn 133 132 134 4 (set (reg:SI 233)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 k+0 S4 A32])) "../src/spline.f":250 82 {*movsi_internal}
     (nil))
(insn 134 133 135 4 (set (reg:DI 131 [ _45 ])
        (sign_extend:DI (reg:SI 233))) "../src/spline.f":250 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 233)
        (nil)))
(insn 135 134 136 4 (parallel [
            (set (reg:DI 132 [ _46 ])
                (plus:DI (reg:DI 131 [ _45 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":250 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 131 [ _45 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 136 135 137 4 (set (reg:SF 133 [ _47 ])
        (minus:SF (reg:SF 123 [ _37 ])
            (reg:SF 130 [ _44 ]))) "../src/spline.f":250 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 130 [ _44 ])
        (expr_list:REG_DEAD (reg:SF 123 [ _37 ])
            (nil))))
(insn 137 136 138 4 (set (reg/f:DI 234)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [5 a+0 S8 A64])) "../src/spline.f":250 81 {*movdi_internal}
     (nil))
(insn 138 137 139 4 (set (mem:SF (plus:DI (mult:DI (reg:DI 132 [ _46 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 234)) [3 *a_123(D) S4 A32])
        (reg:SF 133 [ _47 ])) "../src/spline.f":250 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 234)
        (expr_list:REG_DEAD (reg:SF 133 [ _47 ])
            (expr_list:REG_DEAD (reg:DI 132 [ _46 ])
                (nil)))))
(insn 139 138 140 4 (set (reg:SI 235)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 k+0 S4 A32])) "../src/spline.f":251 82 {*movsi_internal}
     (nil))
(insn 140 139 141 4 (set (reg:DI 134 [ _48 ])
        (sign_extend:DI (reg:SI 235))) "../src/spline.f":251 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 235)
        (nil)))
(insn 141 140 142 4 (parallel [
            (set (reg:DI 135 [ _49 ])
                (plus:DI (reg:DI 134 [ _48 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":251 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 134 [ _48 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 142 141 143 4 (set (reg/f:DI 236)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [5 d+0 S8 A64])) "../src/spline.f":251 81 {*movdi_internal}
     (nil))
(insn 143 142 144 4 (set (reg:SF 136 [ _50 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 135 [ _49 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 236)) [3 *d_125(D) S4 A32])) "../src/spline.f":251 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 236)
        (expr_list:REG_DEAD (reg:DI 135 [ _49 ])
            (nil))))
(insn 144 143 145 4 (set (reg:SI 237)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 k+0 S4 A32])) "../src/spline.f":251 82 {*movsi_internal}
     (nil))
(insn 145 144 146 4 (set (reg:DI 137 [ _51 ])
        (sign_extend:DI (reg:SI 237))) "../src/spline.f":251 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 237)
        (nil)))
(insn 146 145 147 4 (parallel [
            (set (reg:DI 138 [ _52 ])
                (plus:DI (reg:DI 137 [ _51 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":251 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 137 [ _51 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 147 146 148 4 (set (reg/f:DI 238)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [5 b+0 S8 A64])) "../src/spline.f":251 81 {*movdi_internal}
     (nil))
(insn 148 147 149 4 (set (reg:SF 139 [ _53 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 138 [ _52 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 238)) [3 *b_127(D) S4 A32])) "../src/spline.f":251 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 238)
        (expr_list:REG_DEAD (reg:DI 138 [ _52 ])
            (nil))))
(insn 149 148 150 4 (set (reg:SI 239)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -44 [0xffffffffffffffd4])) [1 km+0 S4 A32])) "../src/spline.f":251 82 {*movsi_internal}
     (nil))
(insn 150 149 151 4 (set (reg:DI 140 [ _54 ])
        (sign_extend:DI (reg:SI 239))) "../src/spline.f":251 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 239)
        (nil)))
(insn 151 150 152 4 (parallel [
            (set (reg:DI 141 [ _55 ])
                (plus:DI (reg:DI 140 [ _54 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":251 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 140 [ _54 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 152 151 153 4 (set (reg/f:DI 240)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [5 d+0 S8 A64])) "../src/spline.f":251 81 {*movdi_internal}
     (nil))
(insn 153 152 154 4 (set (reg:SF 142 [ _56 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 141 [ _55 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 240)) [3 *d_125(D) S4 A32])) "../src/spline.f":251 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 240)
        (expr_list:REG_DEAD (reg:DI 141 [ _55 ])
            (nil))))
(insn 154 153 155 4 (set (reg:SF 143 [ _57 ])
        (mult:SF (reg:SF 139 [ _53 ])
            (reg:SF 142 [ _56 ]))) "../src/spline.f":251 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 142 [ _56 ])
        (expr_list:REG_DEAD (reg:SF 139 [ _53 ])
            (nil))))
(insn 155 154 156 4 (set (reg:SI 241)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 k+0 S4 A32])) "../src/spline.f":251 82 {*movsi_internal}
     (nil))
(insn 156 155 157 4 (set (reg:DI 144 [ _58 ])
        (sign_extend:DI (reg:SI 241))) "../src/spline.f":251 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 241)
        (nil)))
(insn 157 156 158 4 (parallel [
            (set (reg:DI 145 [ _59 ])
                (plus:DI (reg:DI 144 [ _58 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":251 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 144 [ _58 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 158 157 159 4 (set (reg:SF 146 [ _60 ])
        (minus:SF (reg:SF 136 [ _50 ])
            (reg:SF 143 [ _57 ]))) "../src/spline.f":251 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 143 [ _57 ])
        (expr_list:REG_DEAD (reg:SF 136 [ _50 ])
            (nil))))
(insn 159 158 160 4 (set (reg/f:DI 242)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [5 d+0 S8 A64])) "../src/spline.f":251 81 {*movdi_internal}
     (nil))
(insn 160 159 161 4 (set (mem:SF (plus:DI (mult:DI (reg:DI 145 [ _59 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 242)) [3 *d_125(D) S4 A32])
        (reg:SF 146 [ _60 ])) "../src/spline.f":251 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 242)
        (expr_list:REG_DEAD (reg:SF 146 [ _60 ])
            (expr_list:REG_DEAD (reg:DI 145 [ _59 ])
                (nil)))))
(insn 161 160 230 4 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -4 [0xfffffffffffffffc])) [1 k+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 k+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":246 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 230 161 231 4 (set (pc)
        (label_ref 162)) "../src/spline.f":246 649 {jump}
     (nil)
 -> 162)
;;  succ:       3 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 194

(barrier 231 230 235)
;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 5, flags: (RTL)
;;  pred:       3
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 235 231 234 9 73 (nil) [1 uses])
(note 234 235 236 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 236 234 165 9 (const_int 0 [0]) "../src/spline.f":252 682 {nop}
     (nil))
;;  succ:       5 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 6, flags: (RTL)
;;  pred:       9 [100.0%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 147 148 149 150 151 152 153 154 155 156 157 158 159 196 243 244 245 246 247 248 249
(code_label 165 236 166 5 68 (nil) [0 uses])
(note 166 165 167 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 167 166 168 5 (set (reg/f:DI 243)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -88 [0xffffffffffffffa8])) [6 kk+0 S8 A64])) "../src/spline.f":254 81 {*movdi_internal}
     (nil))
(insn 168 167 169 5 (set (reg:SI 147 [ _61 ])
        (mem:SI (reg/f:DI 243) [1 *kk_93(D)+0 S4 A32])) "../src/spline.f":254 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 243)
        (nil)))
(insn 169 168 170 5 (set (reg:DI 148 [ _62 ])
        (sign_extend:DI (reg:SI 147 [ _61 ]))) "../src/spline.f":254 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 147 [ _61 ])
        (nil)))
(insn 170 169 171 5 (parallel [
            (set (reg:DI 149 [ _63 ])
                (plus:DI (reg:DI 148 [ _62 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":254 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 148 [ _62 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 171 170 172 5 (set (reg/f:DI 244)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [5 d+0 S8 A64])) "../src/spline.f":254 81 {*movdi_internal}
     (nil))
(insn 172 171 173 5 (set (reg:SF 150 [ _64 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 149 [ _63 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 244)) [3 *d_125(D) S4 A32])) "../src/spline.f":254 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 244)
        (expr_list:REG_DEAD (reg:DI 149 [ _63 ])
            (nil))))
(insn 173 172 174 5 (set (reg/f:DI 245)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -88 [0xffffffffffffffa8])) [6 kk+0 S8 A64])) "../src/spline.f":254 81 {*movdi_internal}
     (nil))
(insn 174 173 175 5 (set (reg:SI 151 [ _65 ])
        (mem:SI (reg/f:DI 245) [1 *kk_93(D)+0 S4 A32])) "../src/spline.f":254 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 245)
        (nil)))
(insn 175 174 176 5 (set (reg:DI 152 [ _66 ])
        (sign_extend:DI (reg:SI 151 [ _65 ]))) "../src/spline.f":254 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 151 [ _65 ])
        (nil)))
(insn 176 175 177 5 (parallel [
            (set (reg:DI 153 [ _67 ])
                (plus:DI (reg:DI 152 [ _66 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":254 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 152 [ _66 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 177 176 178 5 (set (reg/f:DI 246)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [5 a+0 S8 A64])) "../src/spline.f":254 81 {*movdi_internal}
     (nil))
(insn 178 177 179 5 (set (reg:SF 154 [ _68 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 153 [ _67 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 246)) [3 *a_123(D) S4 A32])) "../src/spline.f":254 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 246)
        (expr_list:REG_DEAD (reg:DI 153 [ _67 ])
            (nil))))
(insn 179 178 180 5 (set (reg/f:DI 247)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -88 [0xffffffffffffffa8])) [6 kk+0 S8 A64])) "../src/spline.f":254 81 {*movdi_internal}
     (nil))
(insn 180 179 181 5 (set (reg:SI 155 [ _69 ])
        (mem:SI (reg/f:DI 247) [1 *kk_93(D)+0 S4 A32])) "../src/spline.f":254 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 247)
        (nil)))
(insn 181 180 182 5 (set (reg:DI 156 [ _70 ])
        (sign_extend:DI (reg:SI 155 [ _69 ]))) "../src/spline.f":254 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 155 [ _69 ])
        (nil)))
(insn 182 181 183 5 (parallel [
            (set (reg:DI 157 [ _71 ])
                (plus:DI (reg:DI 156 [ _70 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":254 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 156 [ _70 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 183 182 184 5 (set (reg:SF 158 [ _72 ])
        (div:SF (reg:SF 150 [ _64 ])
            (reg:SF 154 [ _68 ]))) "../src/spline.f":254 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 154 [ _68 ])
        (expr_list:REG_DEAD (reg:SF 150 [ _64 ])
            (nil))))
(insn 184 183 185 5 (set (reg/f:DI 248)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [5 d+0 S8 A64])) "../src/spline.f":254 81 {*movdi_internal}
     (nil))
(insn 185 184 186 5 (set (mem:SF (plus:DI (mult:DI (reg:DI 157 [ _71 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 248)) [3 *d_125(D) S4 A32])
        (reg:SF 158 [ _72 ])) "../src/spline.f":254 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 248)
        (expr_list:REG_DEAD (reg:SF 158 [ _72 ])
            (expr_list:REG_DEAD (reg:DI 157 [ _71 ])
                (nil)))))
(insn 186 185 187 5 (set (reg/f:DI 249)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -88 [0xffffffffffffffa8])) [6 kk+0 S8 A64])) "../src/spline.f":256 81 {*movdi_internal}
     (nil))
(insn 187 186 188 5 (set (reg:SI 159 [ _73 ])
        (mem:SI (reg/f:DI 249) [1 *kk_93(D)+0 S4 A32])) "../src/spline.f":256 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 249)
        (nil)))
(insn 188 187 189 5 (parallel [
            (set (reg:SI 196 [ _132 ])
                (plus:SI (reg:SI 159 [ _73 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":256 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 159 [ _73 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 189 188 220 5 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 k+0 S4 A32])
        (reg:SI 196 [ _132 ])) "../src/spline.f":256 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 196 [ _132 ])
        (nil)))
;;  succ:       6 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (RTL)
;;  pred:       5 (FALLTHRU)
;;              7 [100.0%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 197
(code_label 220 189 190 6 71 (nil) [1 uses])
(note 190 220 191 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 191 190 192 6 (set (reg:CCNO 17 flags)
        (compare:CCNO (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [1 k+0 S4 A32])
            (const_int 0 [0]))) "../src/spline.f":256 3 {*cmpsi_ccno_1}
     (nil))
(insn 192 191 193 6 (set (reg:QI 197 [ _134 ])
        (le:QI (reg:CCNO 17 flags)
            (const_int 0 [0]))) "../src/spline.f":256 613 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (nil)))
(insn 193 192 194 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 197 [ _134 ])
            (const_int 0 [0]))) "../src/spline.f":256 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 197 [ _134 ])
        (nil)))
(jump_insn 194 193 195 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 238)
            (pc))) "../src/spline.f":256 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 238)
;;  succ:       10
;;              7 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 10, flags: (RTL)
;;  pred:       6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 160 161 162 163 164 165 166 167 168 169 170 171 172 173 250 251 252 253 254 255 256 257
(note 195 194 196 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 196 195 197 7 (set (reg:SI 250)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 k+0 S4 A32])) "../src/spline.f":257 82 {*movsi_internal}
     (nil))
(insn 197 196 198 7 (set (reg:DI 160 [ _74 ])
        (sign_extend:DI (reg:SI 250))) "../src/spline.f":257 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 250)
        (nil)))
(insn 198 197 199 7 (parallel [
            (set (reg:DI 161 [ _75 ])
                (plus:DI (reg:DI 160 [ _74 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":257 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 160 [ _74 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 199 198 200 7 (set (reg/f:DI 251)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [5 d+0 S8 A64])) "../src/spline.f":257 81 {*movdi_internal}
     (nil))
(insn 200 199 201 7 (set (reg:SF 162 [ _76 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 161 [ _75 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 251)) [3 *d_125(D) S4 A32])) "../src/spline.f":257 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 251)
        (expr_list:REG_DEAD (reg:DI 161 [ _75 ])
            (nil))))
(insn 201 200 202 7 (set (reg:SI 252)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 k+0 S4 A32])) "../src/spline.f":257 82 {*movsi_internal}
     (nil))
(insn 202 201 203 7 (set (reg:DI 163 [ _77 ])
        (sign_extend:DI (reg:SI 252))) "../src/spline.f":257 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 252)
        (nil)))
(insn 203 202 204 7 (parallel [
            (set (reg:DI 164 [ _78 ])
                (plus:DI (reg:DI 163 [ _77 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":257 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 163 [ _77 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 204 203 205 7 (set (reg/f:DI 253)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [5 c+0 S8 A64])) "../src/spline.f":257 81 {*movdi_internal}
     (nil))
(insn 205 204 206 7 (set (reg:SF 165 [ _79 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 164 [ _78 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 253)) [3 *c_122(D) S4 A32])) "../src/spline.f":257 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 253)
        (expr_list:REG_DEAD (reg:DI 164 [ _78 ])
            (nil))))
(insn 206 205 207 7 (set (reg:SI 254)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 k+0 S4 A32])) "../src/spline.f":257 82 {*movsi_internal}
     (nil))
(insn 207 206 208 7 (parallel [
            (set (reg:SI 166 [ _80 ])
                (plus:SI (reg:SI 254)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":257 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 254)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 k+0 S4 A32])
                    (const_int 1 [0x1]))
                (nil)))))
(insn 208 207 209 7 (set (reg:DI 167 [ _81 ])
        (sign_extend:DI (reg:SI 166 [ _80 ]))) "../src/spline.f":257 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 166 [ _80 ])
        (nil)))
(insn 209 208 210 7 (parallel [
            (set (reg:DI 168 [ _82 ])
                (plus:DI (reg:DI 167 [ _81 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":257 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 167 [ _81 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 210 209 211 7 (set (reg/f:DI 255)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [5 d+0 S8 A64])) "../src/spline.f":257 81 {*movdi_internal}
     (nil))
(insn 211 210 212 7 (set (reg:SF 169 [ _83 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 168 [ _82 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 255)) [3 *d_125(D) S4 A32])) "../src/spline.f":257 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 255)
        (expr_list:REG_DEAD (reg:DI 168 [ _82 ])
            (nil))))
(insn 212 211 213 7 (set (reg:SF 170 [ _84 ])
        (mult:SF (reg:SF 165 [ _79 ])
            (reg:SF 169 [ _83 ]))) "../src/spline.f":257 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 169 [ _83 ])
        (expr_list:REG_DEAD (reg:SF 165 [ _79 ])
            (nil))))
(insn 213 212 214 7 (set (reg:SI 256)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 k+0 S4 A32])) "../src/spline.f":257 82 {*movsi_internal}
     (nil))
(insn 214 213 215 7 (set (reg:DI 171 [ _85 ])
        (sign_extend:DI (reg:SI 256))) "../src/spline.f":257 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 256)
        (nil)))
(insn 215 214 216 7 (parallel [
            (set (reg:DI 172 [ _86 ])
                (plus:DI (reg:DI 171 [ _85 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":257 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 171 [ _85 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 216 215 217 7 (set (reg:SF 173 [ _87 ])
        (minus:SF (reg:SF 162 [ _76 ])
            (reg:SF 170 [ _84 ]))) "../src/spline.f":257 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 170 [ _84 ])
        (expr_list:REG_DEAD (reg:SF 162 [ _76 ])
            (nil))))
(insn 217 216 218 7 (set (reg/f:DI 257)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [5 d+0 S8 A64])) "../src/spline.f":257 81 {*movdi_internal}
     (nil))
(insn 218 217 219 7 (set (mem:SF (plus:DI (mult:DI (reg:DI 172 [ _86 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 257)) [3 *d_125(D) S4 A32])
        (reg:SF 173 [ _87 ])) "../src/spline.f":257 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 257)
        (expr_list:REG_DEAD (reg:SF 173 [ _87 ])
            (expr_list:REG_DEAD (reg:DI 172 [ _86 ])
                (nil)))))
(insn 219 218 232 7 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -4 [0xfffffffffffffffc])) [1 k+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 k+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":256 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 232 219 233 7 (set (pc)
        (label_ref 220)) "../src/spline.f":256 649 {jump}
     (nil)
 -> 220)
;;  succ:       6 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 233 232 238)
;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 8, flags: (RTL)
;;  pred:       6
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 238 233 237 10 74 (nil) [1 uses])
(note 237 238 239 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 239 237 223 10 (const_int 0 [0]) "../src/spline.f":258 682 {nop}
     (nil))
;;  succ:       8 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 1, flags: (RTL)
;;  pred:       10 [100.0%]  (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 223 239 224 8 70 (nil) [0 uses])
(note 224 223 229 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 229 224 0 8 (const_int 0 [0]) "../src/spline.f":260 682 {nop}
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function splina (splina_, funcdef_no=6, decl_uid=3786, cgraph_uid=6, symbol_order=6)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 13 n_edges 16 count 13 (    1)
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 12 11
;;
;; Loop 1
;;  header 3, latch 10
;;  depth 1, outer 0
;;  nodes: 3 10 9 6 8 7 4 5
;; 2 succs { 3 }
;; 3 succs { 12 4 }
;; 4 succs { 7 5 }
;; 5 succs { 6 7 }
;; 6 succs { 10 }
;; 7 succs { 8 9 }
;; 8 succs { 10 }
;; 9 succs { 10 }
;; 10 succs { 3 }
;; 12 succs { 11 }
;; 11 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r180: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a2 (r180,l0) best SSE_REGS, allocno SSE_REGS
    r179: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r179,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r178: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r178,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r177: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a6 (r177,l0) best SSE_REGS, allocno SSE_REGS
    r176: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r176,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r175: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a11 (r175,l0) best SSE_REGS, allocno SSE_REGS
    r174: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r174,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r173: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a16 (r173,l0) best SSE_REGS, allocno SSE_REGS
    r172: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a19 (r172,l0) best SSE_REGS, allocno SSE_REGS
    r171: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r171,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r170: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r170,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r169: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a23 (r169,l0) best SSE_REGS, allocno SSE_REGS
    r168: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a22 (r168,l0) best SSE_REGS, allocno SSE_REGS
    r167: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a24 (r167,l0) best SSE_REGS, allocno SSE_REGS
    r166: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r166,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r165: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r165,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r164: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a31 (r164,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r163: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a35 (r163,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r162: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a38 (r162,l0) best SSE_REGS, allocno SSE_REGS
    r161: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a36 (r161,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r160: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a40 (r160,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r159: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a41 (r159,l0) best SSE_REGS, allocno SSE_REGS
    r158: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a42 (r158,l0) best SSE_REGS, allocno SSE_REGS
    r157: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a43 (r157,l0) best SSE_REGS, allocno SSE_REGS
    r156: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a46 (r156,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r155: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a49 (r155,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r154: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a50 (r154,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r153: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a54 (r153,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r152: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a57 (r152,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r151: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a61 (r151,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r150: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a63 (r150,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r149: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a65 (r149,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r148: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a69 (r148,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r147: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a71 (r147,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r146: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a73 (r146,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r145: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a77 (r145,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r144: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a79 (r144,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a81 (r143,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a55 (r142,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r141,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a60 (r137,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a62 (r136,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r132: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a68 (r132,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r131: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a70 (r131,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r127: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a76 (r127,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r126: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a78 (r126,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r125: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r125,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r124: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r124,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r123: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r123,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r122: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a10 (r122,l0) best SSE_REGS, allocno SSE_REGS
    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r121,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r120: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r120,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r119: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a12 (r119,l0) best SSE_REGS, allocno SSE_REGS
    r118: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a15 (r118,l0) best SSE_REGS, allocno SSE_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a25 (r115,l0) best SSE_REGS, allocno SSE_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r112: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a26 (r112,l0) best SSE_REGS, allocno SSE_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r111,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a33 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a34 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a37 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a39 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a44 (r106,l0) best SSE_REGS, allocno SSE_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a47 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a48 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a45 (r103,l0) best SSE_REGS, allocno SSE_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a51 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a52 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a53 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a56 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a58 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a59 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a64 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a66 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a67 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a72 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a74 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a75 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a80 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r179,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a1(r125,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a2(r180,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 CLOBBERED_REGS:4 Q_REGS:4 NON_Q_REGS:4 TLS_GOTBASE_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:29 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:12
  a3(r124,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a4(r123,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a5(r178,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a6(r177,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 CLOBBERED_REGS:4 Q_REGS:4 NON_Q_REGS:4 TLS_GOTBASE_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:29 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:12
  a7(r141,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a8(r176,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a9(r121,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a10(r122,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a11(r175,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a12(r119,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 ALL_REGS:29 MEM:8
  a13(r120,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a14(r174,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a15(r118,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:9
  a16(r173,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a17(r171,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a18(r117,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a19(r172,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 CLOBBERED_REGS:4 Q_REGS:4 NON_Q_REGS:4 TLS_GOTBASE_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:29 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:12
  a20(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a21(r170,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a22(r168,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a23(r169,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a24(r167,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a25(r115,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a26(r112,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a27(r166,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a28(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a29(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a30(r165,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a31(r164,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a32(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a33(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a34(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a35(r163,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a36(r161,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a37(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a38(r162,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 CLOBBERED_REGS:4 Q_REGS:4 NON_Q_REGS:4 TLS_GOTBASE_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:29 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:12
  a39(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a40(r160,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a41(r159,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a42(r158,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a43(r157,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a44(r106,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a45(r103,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a46(r156,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a47(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a48(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a49(r155,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a50(r154,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a51(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a52(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a53(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a54(r153,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a55(r142,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7
  a56(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a57(r152,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a58(r97,l0) costs: AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:2
  a59(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a60(r137,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a61(r151,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a62(r136,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:38 INT_SSE_REGS:27 ALL_REGS:520 MEM:11
  a63(r150,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:8
  a64(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a65(r149,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a66(r93,l0) costs: AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:2
  a67(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a68(r132,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a69(r148,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a70(r131,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:38 INT_SSE_REGS:27 ALL_REGS:520 MEM:11
  a71(r147,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:8
  a72(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a73(r146,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a74(r89,l0) costs: AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:2
  a75(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a76(r127,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a77(r145,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a78(r126,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:38 INT_SSE_REGS:27 ALL_REGS:520 MEM:11
  a79(r144,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:8
  a80(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a81(r143,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8

   Insn 164(l0): point = 0
   Insn 155(l0): point = 2
   Insn 154(l0): point = 4
   Insn 153(l0): point = 6
   Insn 152(l0): point = 8
   Insn 151(l0): point = 10
   Insn 150(l0): point = 12
   Insn 149(l0): point = 14
   Insn 173(l0): point = 17
   Insn 63(l0): point = 20
   Insn 62(l0): point = 22
   Insn 61(l0): point = 24
   Insn 60(l0): point = 26
   Insn 169(l0): point = 29
   Insn 143(l0): point = 31
   Insn 142(l0): point = 33
   Insn 141(l0): point = 35
   Insn 138(l0): point = 38
   Insn 137(l0): point = 40
   Insn 136(l0): point = 42
   Insn 135(l0): point = 44
   Insn 134(l0): point = 46
   Insn 133(l0): point = 48
   Insn 132(l0): point = 50
   Insn 131(l0): point = 52
   Insn 130(l0): point = 54
   Insn 129(l0): point = 56
   Insn 165(l0): point = 59
   Insn 94(l0): point = 61
   Insn 93(l0): point = 63
   Insn 92(l0): point = 65
   Insn 91(l0): point = 67
   Insn 90(l0): point = 69
   Insn 89(l0): point = 71
   Insn 88(l0): point = 73
   Insn 167(l0): point = 76
   Insn 124(l0): point = 78
   Insn 123(l0): point = 80
   Insn 122(l0): point = 82
   Insn 121(l0): point = 84
   Insn 120(l0): point = 86
   Insn 119(l0): point = 88
   Insn 118(l0): point = 90
   Insn 116(l0): point = 93
   Insn 115(l0): point = 95
   Insn 114(l0): point = 97
   Insn 113(l0): point = 99
   Insn 112(l0): point = 101
   Insn 111(l0): point = 103
   Insn 110(l0): point = 105
   Insn 109(l0): point = 107
   Insn 108(l0): point = 109
   Insn 107(l0): point = 111
   Insn 106(l0): point = 113
   Insn 105(l0): point = 115
   Insn 104(l0): point = 117
   Insn 103(l0): point = 119
   Insn 102(l0): point = 121
   Insn 101(l0): point = 123
   Insn 100(l0): point = 125
   Insn 99(l0): point = 127
   Insn 80(l0): point = 130
   Insn 79(l0): point = 132
   Insn 78(l0): point = 134
   Insn 77(l0): point = 136
   Insn 76(l0): point = 138
   Insn 75(l0): point = 140
   Insn 74(l0): point = 142
   Insn 73(l0): point = 144
   Insn 72(l0): point = 146
   Insn 71(l0): point = 148
   Insn 70(l0): point = 150
   Insn 69(l0): point = 152
   Insn 68(l0): point = 154
   Insn 67(l0): point = 156
   Insn 66(l0): point = 158
   Insn 65(l0): point = 160
   Insn 83(l0): point = 163
   Insn 82(l0): point = 165
   Insn 81(l0): point = 167
   Insn 58(l0): point = 170
   Insn 57(l0): point = 172
   Insn 56(l0): point = 174
   Insn 55(l0): point = 176
   Insn 54(l0): point = 178
   Insn 50(l0): point = 180
   Insn 49(l0): point = 182
   Insn 48(l0): point = 184
   Insn 46(l0): point = 186
   Insn 44(l0): point = 188
   Insn 45(l0): point = 190
   Insn 43(l0): point = 192
   Insn 42(l0): point = 194
   Insn 41(l0): point = 196
   Insn 40(l0): point = 198
   Insn 39(l0): point = 200
   Insn 35(l0): point = 202
   Insn 34(l0): point = 204
   Insn 33(l0): point = 206
   Insn 31(l0): point = 208
   Insn 29(l0): point = 210
   Insn 30(l0): point = 212
   Insn 28(l0): point = 214
   Insn 27(l0): point = 216
   Insn 26(l0): point = 218
   Insn 25(l0): point = 220
   Insn 24(l0): point = 222
   Insn 20(l0): point = 224
   Insn 19(l0): point = 226
   Insn 18(l0): point = 228
   Insn 16(l0): point = 230
   Insn 14(l0): point = 232
   Insn 15(l0): point = 234
   Insn 13(l0): point = 236
   Insn 12(l0): point = 238
   Insn 11(l0): point = 240
   Insn 10(l0): point = 242
   Insn 9(l0): point = 244
   Insn 5(l0): point = 246
   Insn 4(l0): point = 248
   Insn 3(l0): point = 250
   Insn 2(l0): point = 252
 a0(r179): [3..6]
 a1(r125): [3..8]
 a2(r180): [3..4]
 a3(r124): [9..10]
 a4(r123): [11..12]
 a5(r178): [13..14]
 a6(r177): [34..35]
 a7(r141): [20..172]
 a8(r176): [39..40]
 a9(r121): [39..46]
 a10(r122): [39..42]
 a11(r175): [43..44]
 a12(r119): [43..52]
 a13(r120): [47..48]
 a14(r174): [49..50]
 a15(r118): [53..54]
 a16(r173): [55..56]
 a17(r171): [81..84]
 a18(r117): [81..86]
 a19(r172): [81..82]
 a20(r116): [87..88]
 a21(r170): [89..90]
 a22(r168): [98..99]
 a23(r169): [100..101]
 a24(r167): [104..105]
 a25(r115): [106..107]
 a26(r112): [106..117]
 a27(r166): [108..109]
 a28(r114): [108..111]
 a29(r113): [112..113]
 a30(r165): [114..115]
 a31(r164): [118..119]
 a32(r111): [118..121]
 a33(r110): [122..123]
 a34(r109): [124..125]
 a35(r163): [126..127]
 a36(r161): [64..67]
 a37(r108): [64..69]
 a38(r162): [64..65]
 a39(r107): [70..71]
 a40(r160): [72..73]
 a41(r159): [166..167]
 a42(r158): [133..134]
 a43(r157): [137..138]
 a44(r106): [139..140]
 a45(r103): [139..150]
 a46(r156): [141..142]
 a47(r105): [141..144]
 a48(r104): [145..146]
 a49(r155): [147..148]
 a50(r154): [151..152]
 a51(r102): [151..154]
 a52(r101): [155..156]
 a53(r100): [157..158]
 a54(r153): [159..160]
 a55(r142): [23..24]
 a56(r99): [173..174]
 a57(r152): [175..176]
 a58(r97 [0]): [181..254]
 a58(r97 [1]): [180..254]
 a59(r96): [183..184]
 a60(r137): [185..186]
 a61(r151): [187..190]
 a62(r136): [187..192]
 a63(r150): [195..196]
 a64(r95): [197..198]
 a65(r149): [199..200]
 a66(r93 [0]): [203..254]
 a66(r93 [1]): [202..254]
 a67(r92): [205..206]
 a68(r132): [207..208]
 a69(r148): [209..212]
 a70(r131): [209..214]
 a71(r147): [217..218]
 a72(r91): [219..220]
 a73(r146): [221..222]
 a74(r89 [0]): [225..254]
 a74(r89 [1]): [224..254]
 a75(r88): [227..228]
 a76(r127): [229..230]
 a77(r145): [231..234]
 a78(r126): [231..236]
 a79(r144): [239..240]
 a80(r87): [241..242]
 a81(r143): [243..244]
Compressing live ranges: from 255 to 120 - 47%
Ranges after the compression:
 a0(r179): [0..1]
 a1(r125): [0..1]
 a2(r180): [0..1]
 a3(r124): [2..3]
 a4(r123): [4..5]
 a5(r178): [6..7]
 a6(r177): [10..11]
 a7(r141): [8..79]
 a8(r176): [12..13]
 a9(r121): [12..15]
 a10(r122): [12..13]
 a11(r175): [14..15]
 a12(r119): [14..19]
 a13(r120): [16..17]
 a14(r174): [18..19]
 a15(r118): [20..21]
 a16(r173): [22..23]
 a17(r171): [30..31]
 a18(r117): [30..31]
 a19(r172): [30..31]
 a20(r116): [32..33]
 a21(r170): [34..35]
 a22(r168): [36..37]
 a23(r169): [38..39]
 a24(r167): [40..41]
 a25(r115): [42..43]
 a26(r112): [42..49]
 a27(r166): [44..45]
 a28(r114): [44..45]
 a29(r113): [46..47]
 a30(r165): [48..49]
 a31(r164): [50..51]
 a32(r111): [50..51]
 a33(r110): [52..53]
 a34(r109): [54..55]
 a35(r163): [56..57]
 a36(r161): [24..25]
 a37(r108): [24..25]
 a38(r162): [24..25]
 a39(r107): [26..27]
 a40(r160): [28..29]
 a41(r159): [78..79]
 a42(r158): [58..59]
 a43(r157): [60..61]
 a44(r106): [62..63]
 a45(r103): [62..69]
 a46(r156): [64..65]
 a47(r105): [64..65]
 a48(r104): [66..67]
 a49(r155): [68..69]
 a50(r154): [70..71]
 a51(r102): [70..71]
 a52(r101): [72..73]
 a53(r100): [74..75]
 a54(r153): [76..77]
 a55(r142): [8..9]
 a56(r99): [80..81]
 a57(r152): [82..83]
 a58(r97 [0]): [84..119]
 a58(r97 [1]): [84..119]
 a59(r96): [84..85]
 a60(r137): [86..87]
 a61(r151): [88..89]
 a62(r136): [88..89]
 a63(r150): [90..91]
 a64(r95): [92..93]
 a65(r149): [94..95]
 a66(r93 [0]): [96..119]
 a66(r93 [1]): [96..119]
 a67(r92): [96..97]
 a68(r132): [98..99]
 a69(r148): [100..101]
 a70(r131): [100..101]
 a71(r147): [102..103]
 a72(r91): [104..105]
 a73(r146): [106..107]
 a74(r89 [0]): [108..119]
 a74(r89 [1]): [108..119]
 a75(r88): [108..109]
 a76(r127): [110..111]
 a77(r145): [112..113]
 a78(r126): [112..113]
 a79(r144): [114..115]
 a80(r87): [116..117]
 a81(r143): [118..119]
  regions=1, blocks=13, points=120
    allocnos=82 (big 3), copies=0, conflicts=0, ranges=85
Disposition:
   80:r87  l0     0   75:r88  l0     0   74:r89  l0    41   72:r91  l0     0
   67:r92  l0     0   66:r93  l0    39   64:r95  l0     0   59:r96  l0     0
   58:r97  l0    37   56:r99  l0     0   53:r100 l0     0   52:r101 l0     0
   51:r102 l0     2   45:r103 l0    21   48:r104 l0     0   47:r105 l0     2
   44:r106 l0    22   39:r107 l0     0   37:r108 l0     2   34:r109 l0     0
   33:r110 l0     0   32:r111 l0     2   26:r112 l0    21   29:r113 l0     0
   28:r114 l0     2   25:r115 l0    22   20:r116 l0     0   18:r117 l0     2
   15:r118 l0    21   12:r119 l0    22   13:r120 l0     0    9:r121 l0     2
   10:r122 l0    21    4:r123 l0     0    3:r124 l0     0    1:r125 l0     1
   78:r126 l0     0   76:r127 l0     0   70:r131 l0     0   68:r132 l0     0
   62:r136 l0     0   60:r137 l0     0    7:r141 l0     1   55:r142 l0     0
   81:r143 l0     0   79:r144 l0     0   77:r145 l0     1   73:r146 l0     0
   71:r147 l0     0   69:r148 l0     1   65:r149 l0     0   63:r150 l0     0
   61:r151 l0     1   57:r152 l0     0   54:r153 l0     0   50:r154 l0     0
   49:r155 l0     0   46:r156 l0     0   43:r157 l0    21   42:r158 l0    21
   41:r159 l0    21   40:r160 l0     0   36:r161 l0     0   38:r162 l0    21
   35:r163 l0     0   31:r164 l0     0   30:r165 l0     0   27:r166 l0     0
   24:r167 l0    21   22:r168 l0    21   23:r169 l0    21   21:r170 l0     0
   17:r171 l0     0   19:r172 l0    21   16:r173 l0    21   14:r174 l0     0
   11:r175 l0    21    8:r176 l0     0    6:r177 l0    21    5:r178 l0     0
    0:r179 l0     0    2:r180 l0    21
+++Costs: overall 6, reg 6, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


splina

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 17 [flags]
;;  ref usage 	r0={1d} r1={1d,1u} r2={1d,1u} r4={1d,1u} r5={1d,1u} r6={1d,12u} r7={1d,12u} r16={1d,11u} r17={20d,8u} r20={1d,64u,2e} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r87={1d,1u} r88={1d,1u} r89={2d,2u} r91={1d,1u} r92={1d,1u} r93={2d,2u} r95={1d,1u} r96={1d,1u} r97={2d,2u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,2u} r127={1d,1u} r131={1d,2u} r132={1d,1u} r136={1d,2u} r137={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d,1u} r165={1d,1u} r166={1d,1u} r167={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,1u} r171={1d,1u} r172={1d,1u} r173={1d,1u} r174={1d,1u} r175={1d,1u} r176={1d,1u} r177={1d,1u} r178={1d,1u} r179={1d,1u} r180={1d,1u} 
;;    total ref usage 325{124d,199u,2e} in 122{122 regular + 0 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 93 97
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 93 97
;; lr  def 	 17 [flags] 87 88 91 92 95 96 99 126 127 131 132 136 137 141 143 144 145 146 147 148 149 150 151 152
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [5 x+0 S8 A64])
        (reg:DI 5 di [ x ])) "../src/spline.f":186 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ x ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [5 xs+0 S8 A64])
        (reg:DI 4 si [ xs ])) "../src/spline.f":186 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ xs ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [5 s+0 S8 A64])
        (reg:DI 1 dx [ s ])) "../src/spline.f":186 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ s ])
        (nil)))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [6 n+0 S8 A64])
        (reg:DI 2 cx [ n ])) "../src/spline.f":186 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [ n ])
        (nil)))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (reg/f:DI 143)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [6 n+0 S8 A64])) "../src/spline.f":186 81 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:SI 87 [ _1 ])
        (mem:SI (reg/f:DI 143) [1 *n_49(D)+0 S4 A32])) "../src/spline.f":186 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 143)
        (nil)))
(insn 11 10 12 2 (set (reg:DI 144)
        (sign_extend:DI (reg:SI 87 [ _1 ]))) "../src/spline.f":186 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 87 [ _1 ])
        (nil)))
(insn 12 11 13 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [2 ubound.38+0 S8 A64])
        (reg:DI 144)) "../src/spline.f":186 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 144)
        (nil)))
(insn 13 12 15 2 (set (reg:DI 126 [ size.39_51 ])
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [2 ubound.38+0 S8 A64])) "../src/spline.f":186 81 {*movdi_internal}
     (nil))
(insn 15 13 14 2 (set (reg:DI 145)
        (const_int 0 [0])) "../src/spline.f":186 81 {*movdi_internal}
     (nil))
(insn 14 15 16 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 126 [ size.39_51 ])
            (const_int 0 [0]))) "../src/spline.f":186 4 {*cmpdi_ccno_1}
     (nil))
(insn 16 14 18 2 (set (reg:DI 127 [ size.39_52 ])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 126 [ size.39_51 ])
            (reg:DI 145))) "../src/spline.f":186 967 {*movdicc_noc}
     (expr_list:REG_DEAD (reg:DI 145)
        (expr_list:REG_DEAD (reg:DI 126 [ size.39_51 ])
            (expr_list:REG_DEAD (reg:CCGOC 17 flags)
                (nil)))))
(insn 18 16 19 2 (set (reg:DI 88 [ size.187_2 ])
        (reg:DI 127 [ size.39_52 ])) "../src/spline.f":186 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 127 [ size.39_52 ])
        (nil)))
(insn 19 18 20 2 (set (subreg:DI (reg:TI 89 [ _3 ]) 0)
        (reg:DI 88 [ size.187_2 ])) "../src/spline.f":186 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88 [ size.187_2 ])
        (nil)))
(insn 20 19 24 2 (set (subreg:DI (reg:TI 89 [ _3 ]) 8)
        (const_int 0 [0])) "../src/spline.f":186 81 {*movdi_internal}
     (expr_list:REG_UNUSED (reg:TI 89 [ _3 ])
        (nil)))
(insn 24 20 25 2 (set (reg/f:DI 146)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [6 n+0 S8 A64])) "../src/spline.f":186 81 {*movdi_internal}
     (nil))
(insn 25 24 26 2 (set (reg:SI 91 [ _5 ])
        (mem:SI (reg/f:DI 146) [1 *n_49(D)+0 S4 A32])) "../src/spline.f":186 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 146)
        (nil)))
(insn 26 25 27 2 (set (reg:DI 147)
        (sign_extend:DI (reg:SI 91 [ _5 ]))) "../src/spline.f":186 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 91 [ _5 ])
        (nil)))
(insn 27 26 28 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [2 ubound.42+0 S8 A64])
        (reg:DI 147)) "../src/spline.f":186 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 147)
        (nil)))
(insn 28 27 30 2 (set (reg:DI 131 [ size.43_57 ])
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [2 ubound.42+0 S8 A64])) "../src/spline.f":186 81 {*movdi_internal}
     (nil))
(insn 30 28 29 2 (set (reg:DI 148)
        (const_int 0 [0])) "../src/spline.f":186 81 {*movdi_internal}
     (nil))
(insn 29 30 31 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 131 [ size.43_57 ])
            (const_int 0 [0]))) "../src/spline.f":186 4 {*cmpdi_ccno_1}
     (nil))
(insn 31 29 33 2 (set (reg:DI 132 [ size.43_58 ])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 131 [ size.43_57 ])
            (reg:DI 148))) "../src/spline.f":186 967 {*movdicc_noc}
     (expr_list:REG_DEAD (reg:DI 148)
        (expr_list:REG_DEAD (reg:DI 131 [ size.43_57 ])
            (expr_list:REG_DEAD (reg:CCGOC 17 flags)
                (nil)))))
(insn 33 31 34 2 (set (reg:DI 92 [ size.189_6 ])
        (reg:DI 132 [ size.43_58 ])) "../src/spline.f":186 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 132 [ size.43_58 ])
        (nil)))
(insn 34 33 35 2 (set (subreg:DI (reg:TI 93 [ _7 ]) 0)
        (reg:DI 92 [ size.189_6 ])) "../src/spline.f":186 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 92 [ size.189_6 ])
        (nil)))
(insn 35 34 39 2 (set (subreg:DI (reg:TI 93 [ _7 ]) 8)
        (const_int 0 [0])) "../src/spline.f":186 81 {*movdi_internal}
     (expr_list:REG_UNUSED (reg:TI 93 [ _7 ])
        (nil)))
(insn 39 35 40 2 (set (reg/f:DI 149)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [6 n+0 S8 A64])) "../src/spline.f":186 81 {*movdi_internal}
     (nil))
(insn 40 39 41 2 (set (reg:SI 95 [ _9 ])
        (mem:SI (reg/f:DI 149) [1 *n_49(D)+0 S4 A32])) "../src/spline.f":186 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 149)
        (nil)))
(insn 41 40 42 2 (set (reg:DI 150)
        (sign_extend:DI (reg:SI 95 [ _9 ]))) "../src/spline.f":186 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 95 [ _9 ])
        (nil)))
(insn 42 41 43 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [2 ubound.40+0 S8 A64])
        (reg:DI 150)) "../src/spline.f":186 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 150)
        (nil)))
(insn 43 42 45 2 (set (reg:DI 136 [ size.41_63 ])
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [2 ubound.40+0 S8 A64])) "../src/spline.f":186 81 {*movdi_internal}
     (nil))
(insn 45 43 44 2 (set (reg:DI 151)
        (const_int 0 [0])) "../src/spline.f":186 81 {*movdi_internal}
     (nil))
(insn 44 45 46 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 136 [ size.41_63 ])
            (const_int 0 [0]))) "../src/spline.f":186 4 {*cmpdi_ccno_1}
     (nil))
(insn 46 44 48 2 (set (reg:DI 137 [ size.41_64 ])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 136 [ size.41_63 ])
            (reg:DI 151))) "../src/spline.f":186 967 {*movdicc_noc}
     (expr_list:REG_DEAD (reg:DI 151)
        (expr_list:REG_DEAD (reg:DI 136 [ size.41_63 ])
            (expr_list:REG_DEAD (reg:CCGOC 17 flags)
                (nil)))))
(insn 48 46 49 2 (set (reg:DI 96 [ size.191_10 ])
        (reg:DI 137 [ size.41_64 ])) "../src/spline.f":186 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 137 [ size.41_64 ])
        (nil)))
(insn 49 48 50 2 (set (subreg:DI (reg:TI 97 [ _11 ]) 0)
        (reg:DI 96 [ size.191_10 ])) "../src/spline.f":186 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 96 [ size.191_10 ])
        (nil)))
(insn 50 49 54 2 (set (subreg:DI (reg:TI 97 [ _11 ]) 8)
        (const_int 0 [0])) "../src/spline.f":186 81 {*movdi_internal}
     (expr_list:REG_UNUSED (reg:TI 97 [ _11 ])
        (nil)))
(insn 54 50 55 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [9 lend+0 S4 A32])
        (const_int 1 [0x1])) "../src/spline.f":207 82 {*movsi_internal}
     (nil))
(insn 55 54 56 2 (set (reg/f:DI 152)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [6 n+0 S8 A64])) "../src/spline.f":208 81 {*movdi_internal}
     (nil))
(insn 56 55 57 2 (set (reg:SI 99 [ _13 ])
        (mem:SI (reg/f:DI 152) [1 *n_49(D)+0 S4 A32])) "../src/spline.f":208 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 152)
        (nil)))
(insn 57 56 58 2 (parallel [
            (set (reg:SI 141 [ _69 ])
                (plus:SI (reg:SI 99 [ _13 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":208 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 99 [ _13 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 58 57 144 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
        (const_int 1 [0x1])) "../src/spline.f":208 82 {*movsi_internal}
     (nil))
;;  succ:       3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 141

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 (FALLTHRU)
;;              10 [100.0%] 
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 141
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 141
;; lr  def 	 17 [flags] 142
(code_label 144 58 59 3 81 (nil) [1 uses])
(note 59 144 60 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 60 59 61 3 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
            (reg:SI 141 [ _69 ]))) "../src/spline.f":208 7 {*cmpsi_1}
     (nil))
(insn 61 60 62 3 (set (reg:QI 142 [ _73 ])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "../src/spline.f":208 613 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil)))
(insn 62 61 63 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 142 [ _73 ])
            (const_int 0 [0]))) "../src/spline.f":208 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 142 [ _73 ])
        (nil)))
(jump_insn 63 62 64 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 172)
            (pc))) "../src/spline.f":208 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 172)
;;  succ:       12
;;              4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 141

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 141
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 100 101 102 103 104 105 106 153 154 155 156 157 158
(note 64 63 65 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 65 64 66 4 (set (reg:SI 153)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":209 82 {*movsi_internal}
     (nil))
(insn 66 65 67 4 (parallel [
            (set (reg:SI 100 [ _14 ])
                (plus:SI (reg:SI 153)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":209 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 153)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int 1 [0x1]))
                (nil)))))
(insn 67 66 68 4 (set (reg:DI 101 [ _15 ])
        (sign_extend:DI (reg:SI 100 [ _14 ]))) "../src/spline.f":209 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 100 [ _14 ])
        (nil)))
(insn 68 67 69 4 (parallel [
            (set (reg:DI 102 [ _16 ])
                (plus:DI (reg:DI 101 [ _15 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":209 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 101 [ _15 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 69 68 70 4 (set (reg/f:DI 154)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [5 s+0 S8 A64])) "../src/spline.f":209 81 {*movdi_internal}
     (nil))
(insn 70 69 71 4 (set (reg:SF 103 [ _17 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 102 [ _16 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 154)) [3 *s_74(D) S4 A32])) "../src/spline.f":209 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 154)
        (expr_list:REG_DEAD (reg:DI 102 [ _16 ])
            (nil))))
(insn 71 70 72 4 (set (reg:SI 155)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":209 82 {*movsi_internal}
     (nil))
(insn 72 71 73 4 (set (reg:DI 104 [ _18 ])
        (sign_extend:DI (reg:SI 155))) "../src/spline.f":209 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 155)
        (nil)))
(insn 73 72 74 4 (parallel [
            (set (reg:DI 105 [ _19 ])
                (plus:DI (reg:DI 104 [ _18 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":209 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 104 [ _18 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 74 73 75 4 (set (reg/f:DI 156)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [5 s+0 S8 A64])) "../src/spline.f":209 81 {*movdi_internal}
     (nil))
(insn 75 74 76 4 (set (reg:SF 106 [ _20 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 105 [ _19 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 156)) [3 *s_74(D) S4 A32])) "../src/spline.f":209 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 156)
        (expr_list:REG_DEAD (reg:DI 105 [ _19 ])
            (nil))))
(insn 76 75 77 4 (set (reg:SF 157)
        (minus:SF (reg:SF 103 [ _17 ])
            (reg:SF 106 [ _20 ]))) "../src/spline.f":209 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 106 [ _20 ])
        (expr_list:REG_DEAD (reg:SF 103 [ _17 ])
            (nil))))
(insn 77 76 78 4 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -44 [0xffffffffffffffd4])) [3 ds+0 S4 A32])
        (reg:SF 157)) "../src/spline.f":209 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 157)
        (nil)))
(insn 78 77 79 4 (set (reg:SF 158)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC8") [flags 0x2]) [3  S4 A32])) "../src/spline.f":210 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 79 78 80 4 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 158)
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -44 [0xffffffffffffffd4])) [3 ds+0 S4 A32]))) "../src/spline.f":210 51 {*cmpiusf}
     (expr_list:REG_DEAD (reg:SF 158)
        (nil)))
(jump_insn 80 79 160 4 (set (pc)
        (if_then_else (unordered (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref 97)
            (pc))) "../src/spline.f":210 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil))
 -> 97)
;;  succ:       7
;;              5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 141

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 141
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 159
(note 160 80 81 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 81 160 82 5 (set (reg:SF 159)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC8") [flags 0x2]) [3  S4 A32])) "../src/spline.f":210 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 82 81 83 5 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 159)
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -44 [0xffffffffffffffd4])) [3 ds+0 S4 A32]))) "../src/spline.f":210 51 {*cmpiusf}
     (expr_list:REG_DEAD (reg:SF 159)
        (nil)))
(jump_insn 83 82 87 5 (set (pc)
        (if_then_else (ltgt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 97)
            (pc))) "../src/spline.f":210 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil))
 -> 97)
;;  succ:       6 (FALLTHRU)
;;              7
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 141

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (RTL)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 141
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 107 108 160 161 162
(note 87 83 88 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 88 87 89 6 (set (reg:SI 160)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":211 82 {*movsi_internal}
     (nil))
(insn 89 88 90 6 (set (reg:DI 107 [ _21 ])
        (sign_extend:DI (reg:SI 160))) "../src/spline.f":211 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 160)
        (nil)))
(insn 90 89 91 6 (parallel [
            (set (reg:DI 108 [ _22 ])
                (plus:DI (reg:DI 107 [ _21 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":211 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 107 [ _21 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 91 90 92 6 (set (reg/f:DI 161)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [5 xs+0 S8 A64])) "../src/spline.f":211 81 {*movdi_internal}
     (nil))
(insn 92 91 93 6 (set (reg:SF 162)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [3 xs1+0 S4 A32])) "../src/spline.f":211 127 {*movsf_internal}
     (nil))
(insn 93 92 94 6 (set (mem:SF (plus:DI (mult:DI (reg:DI 108 [ _22 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 161)) [3 *xs_79(D) S4 A32])
        (reg:SF 162)) "../src/spline.f":211 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 162)
        (expr_list:REG_DEAD (reg/f:DI 161)
            (expr_list:REG_DEAD (reg:DI 108 [ _22 ])
                (nil)))))
(insn 94 93 165 6 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [9 lend+0 S4 A32])
        (const_int 1 [0x1])) "../src/spline.f":212 82 {*movsi_internal}
     (nil))
(jump_insn 165 94 166 6 (set (pc)
        (label_ref 139)) 649 {jump}
     (nil)
 -> 139)
;;  succ:       10 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 141

(barrier 166 165 97)
;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (RTL)
;;  pred:       4
;;              5
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 141
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 109 110 111 112 113 114 115 163 164 165 166 167 168 169
(code_label 97 166 98 7 77 (nil) [2 uses])
(note 98 97 99 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 99 98 100 7 (set (reg:SI 163)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":214 82 {*movsi_internal}
     (nil))
(insn 100 99 101 7 (parallel [
            (set (reg:SI 109 [ _23 ])
                (plus:SI (reg:SI 163)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":214 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 163)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int 1 [0x1]))
                (nil)))))
(insn 101 100 102 7 (set (reg:DI 110 [ _24 ])
        (sign_extend:DI (reg:SI 109 [ _23 ]))) "../src/spline.f":214 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 109 [ _23 ])
        (nil)))
(insn 102 101 103 7 (parallel [
            (set (reg:DI 111 [ _25 ])
                (plus:DI (reg:DI 110 [ _24 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":214 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 110 [ _24 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 103 102 104 7 (set (reg/f:DI 164)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [5 x+0 S8 A64])) "../src/spline.f":214 81 {*movdi_internal}
     (nil))
(insn 104 103 105 7 (set (reg:SF 112 [ _26 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 111 [ _25 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 164)) [3 *x_76(D) S4 A32])) "../src/spline.f":214 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 164)
        (expr_list:REG_DEAD (reg:DI 111 [ _25 ])
            (nil))))
(insn 105 104 106 7 (set (reg:SI 165)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":214 82 {*movsi_internal}
     (nil))
(insn 106 105 107 7 (set (reg:DI 113 [ _27 ])
        (sign_extend:DI (reg:SI 165))) "../src/spline.f":214 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 165)
        (nil)))
(insn 107 106 108 7 (parallel [
            (set (reg:DI 114 [ _28 ])
                (plus:DI (reg:DI 113 [ _27 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":214 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 113 [ _27 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 108 107 109 7 (set (reg/f:DI 166)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [5 x+0 S8 A64])) "../src/spline.f":214 81 {*movdi_internal}
     (nil))
(insn 109 108 110 7 (set (reg:SF 115 [ _29 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 114 [ _28 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 166)) [3 *x_76(D) S4 A32])) "../src/spline.f":214 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 166)
        (expr_list:REG_DEAD (reg:DI 114 [ _28 ])
            (nil))))
(insn 110 109 111 7 (set (reg:SF 167)
        (minus:SF (reg:SF 112 [ _26 ])
            (reg:SF 115 [ _29 ]))) "../src/spline.f":214 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 115 [ _29 ])
        (expr_list:REG_DEAD (reg:SF 112 [ _26 ])
            (nil))))
(insn 111 110 112 7 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [3 dx+0 S4 A32])
        (reg:SF 167)) "../src/spline.f":214 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 167)
        (nil)))
(insn 112 111 113 7 (set (reg:SF 169)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [3 dx+0 S4 A32])) "../src/spline.f":215 127 {*movsf_internal}
     (nil))
(insn 113 112 114 7 (set (reg:SF 168)
        (div:SF (reg:SF 169)
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -44 [0xffffffffffffffd4])) [3 ds+0 S4 A32]))) "../src/spline.f":215 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 169)
        (nil)))
(insn 114 113 115 7 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [3 xs2+0 S4 A32])
        (reg:SF 168)) "../src/spline.f":215 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 168)
        (nil)))
(insn 115 114 116 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [9 lend+0 S4 A32])
            (const_int 0 [0]))) "../src/spline.f":216 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 116 115 117 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 127)
            (pc))) "../src/spline.f":216 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 127)
;;  succ:       8 (FALLTHRU)
;;              9
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 141

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (RTL)
;;  pred:       7 (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 141
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 116 117 170 171 172
(note 117 116 118 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 118 117 119 8 (set (reg:SI 170)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":217 82 {*movsi_internal}
     (nil))
(insn 119 118 120 8 (set (reg:DI 116 [ _30 ])
        (sign_extend:DI (reg:SI 170))) "../src/spline.f":217 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 170)
        (nil)))
(insn 120 119 121 8 (parallel [
            (set (reg:DI 117 [ _31 ])
                (plus:DI (reg:DI 116 [ _30 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":217 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 116 [ _30 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 121 120 122 8 (set (reg/f:DI 171)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [5 xs+0 S8 A64])) "../src/spline.f":217 81 {*movdi_internal}
     (nil))
(insn 122 121 123 8 (set (reg:SF 172)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [3 xs2+0 S4 A32])) "../src/spline.f":217 127 {*movsf_internal}
     (nil))
(insn 123 122 124 8 (set (mem:SF (plus:DI (mult:DI (reg:DI 117 [ _31 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 171)) [3 *xs_79(D) S4 A32])
        (reg:SF 172)) "../src/spline.f":217 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 172)
        (expr_list:REG_DEAD (reg/f:DI 171)
            (expr_list:REG_DEAD (reg:DI 117 [ _31 ])
                (nil)))))
(insn 124 123 167 8 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [9 lend+0 S4 A32])
        (const_int 0 [0])) "../src/spline.f":218 82 {*movsi_internal}
     (nil))
(jump_insn 167 124 168 8 (set (pc)
        (label_ref 139)) 649 {jump}
     (nil)
 -> 139)
;;  succ:       10 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 141

(barrier 168 167 127)
;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (RTL)
;;  pred:       7
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 141
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 118 119 120 121 122 173 174 175 176
(code_label 127 168 128 9 80 (nil) [1 uses])
(note 128 127 129 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 129 128 130 9 (set (reg:SF 173)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [3 xs1+0 S4 A32])) "../src/spline.f":220 127 {*movsf_internal}
     (nil))
(insn 130 129 131 9 (set (reg:SF 118 [ _32 ])
        (plus:SF (reg:SF 173)
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [3 xs2+0 S4 A32]))) "../src/spline.f":220 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 173)
        (nil)))
(insn 131 130 132 9 (set (reg:SF 119 [ _33 ])
        (reg:SF 118 [ _32 ])) "../src/spline.f":220 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 118 [ _32 ])
        (nil)))
(insn 132 131 133 9 (set (reg:SI 174)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":220 82 {*movsi_internal}
     (nil))
(insn 133 132 134 9 (set (reg:DI 120 [ _34 ])
        (sign_extend:DI (reg:SI 174))) "../src/spline.f":220 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 174)
        (nil)))
(insn 134 133 135 9 (parallel [
            (set (reg:DI 121 [ _35 ])
                (plus:DI (reg:DI 120 [ _34 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":220 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 120 [ _34 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 135 134 136 9 (set (reg:SF 175)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC10") [flags 0x2]) [3  S4 A32])) "../src/spline.f":220 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 5.0e-1 [0x0.8p+0])
        (nil)))
(insn 136 135 137 9 (set (reg:SF 122 [ _36 ])
        (mult:SF (reg:SF 119 [ _33 ])
            (reg:SF 175))) "../src/spline.f":220 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 175)
        (expr_list:REG_DEAD (reg:SF 119 [ _33 ])
            (nil))))
(insn 137 136 138 9 (set (reg/f:DI 176)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [5 xs+0 S8 A64])) "../src/spline.f":220 81 {*movdi_internal}
     (nil))
(insn 138 137 139 9 (set (mem:SF (plus:DI (mult:DI (reg:DI 121 [ _35 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 176)) [3 *xs_79(D) S4 A32])
        (reg:SF 122 [ _36 ])) "../src/spline.f":220 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 176)
        (expr_list:REG_DEAD (reg:SF 122 [ _36 ])
            (expr_list:REG_DEAD (reg:DI 121 [ _35 ])
                (nil)))))
;;  succ:       10 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 141

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 12, flags: (RTL)
;;  pred:       9 (FALLTHRU)
;;              6 [100.0%] 
;;              8 [100.0%] 
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 141
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 177
(code_label 139 138 140 10 79 (nil) [2 uses])
(note 140 139 141 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 141 140 142 10 (set (reg:SF 177)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [3 xs2+0 S4 A32])) "../src/spline.f":223 127 {*movsf_internal}
     (nil))
(insn 142 141 143 10 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [3 xs1+0 S4 A32])
        (reg:SF 177)) "../src/spline.f":223 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 177)
        (nil)))
(insn 143 142 169 10 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":208 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 169 143 170 10 (set (pc)
        (label_ref 144)) "../src/spline.f":208 649 {jump}
     (nil)
 -> 144)
;;  succ:       3 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 141

(barrier 170 169 172)
;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 11, flags: (RTL)
;;  pred:       3
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 172 170 171 12 84 (nil) [1 uses])
(note 171 172 173 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 173 171 147 12 (const_int 0 [0]) "../src/spline.f":224 682 {nop}
     (nil))
;;  succ:       11 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 1, flags: (RTL)
;;  pred:       12 [100.0%]  (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 123 124 125 178 179 180
(code_label 147 173 148 11 76 (nil) [0 uses])
(note 148 147 149 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 149 148 150 11 (set (reg/f:DI 178)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [6 n+0 S8 A64])) "../src/spline.f":225 81 {*movdi_internal}
     (nil))
(insn 150 149 151 11 (set (reg:SI 123 [ _37 ])
        (mem:SI (reg/f:DI 178) [1 *n_49(D)+0 S4 A32])) "../src/spline.f":225 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 178)
        (nil)))
(insn 151 150 152 11 (set (reg:DI 124 [ _38 ])
        (sign_extend:DI (reg:SI 123 [ _37 ]))) "../src/spline.f":225 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 123 [ _37 ])
        (nil)))
(insn 152 151 153 11 (parallel [
            (set (reg:DI 125 [ _39 ])
                (plus:DI (reg:DI 124 [ _38 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":225 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 124 [ _38 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 153 152 154 11 (set (reg/f:DI 179)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [5 xs+0 S8 A64])) "../src/spline.f":225 81 {*movdi_internal}
     (nil))
(insn 154 153 155 11 (set (reg:SF 180)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [3 xs1+0 S4 A32])) "../src/spline.f":225 127 {*movsf_internal}
     (nil))
(insn 155 154 164 11 (set (mem:SF (plus:DI (mult:DI (reg:DI 125 [ _39 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 179)) [3 *xs_79(D) S4 A32])
        (reg:SF 180)) "../src/spline.f":225 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 180)
        (expr_list:REG_DEAD (reg/f:DI 179)
            (expr_list:REG_DEAD (reg:DI 125 [ _39 ])
                (nil)))))
(insn 164 155 0 11 (const_int 0 [0]) "../src/spline.f":227 682 {nop}
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function geval (geval_, funcdef_no=7, decl_uid=3829, cgraph_uid=7, symbol_order=7)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 14 n_edges 16 count 14 (    1)
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 12 8 9 10 13 11
;;
;; Loop 2
;;  header 9, latch 10
;;  depth 1, outer 0
;;  nodes: 9 10
;;
;; Loop 1
;;  header 3, latch 7
;;  depth 1, outer 0
;;  nodes: 3 7 6 5 4
;; 2 succs { 3 }
;; 3 succs { 12 4 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 3 }
;; 12 succs { 8 }
;; 8 succs { 9 }
;; 9 succs { 13 10 }
;; 10 succs { 9 }
;; 13 succs { 11 }
;; 11 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r318: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a5 (r318,l0) best SSE_REGS, allocno SSE_REGS
    r317: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a6 (r317,l0) best SSE_REGS, allocno SSE_REGS
    r316: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a9 (r316,l0) best SSE_REGS, allocno SSE_REGS
    r315: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a17 (r315,l0) best SSE_REGS, allocno SSE_REGS
    r314: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a18 (r314,l0) best SSE_REGS, allocno SSE_REGS
    r313: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a20 (r313,l0) best SSE_REGS, allocno SSE_REGS
    r312: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a21 (r312,l0) best SSE_REGS, allocno SSE_REGS
    r311: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a24 (r311,l0) best SSE_REGS, allocno SSE_REGS
    r310: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a33 (r310,l0) best SSE_REGS, allocno SSE_REGS
    r309: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a34 (r309,l0) best SSE_REGS, allocno SSE_REGS
    r308: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a36 (r308,l0) best SSE_REGS, allocno SSE_REGS
    r307: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a37 (r307,l0) best SSE_REGS, allocno SSE_REGS
    r306: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a38 (r306,l0) best SSE_REGS, allocno SSE_REGS
    r305: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a43 (r305,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r304: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a47 (r304,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r303: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a50 (r303,l0) best SSE_REGS, allocno SSE_REGS
    r302: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a52 (r302,l0) best SSE_REGS, allocno SSE_REGS
    r301: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a53 (r301,l0) best SSE_REGS, allocno SSE_REGS
    r300: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a56 (r300,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r299: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a59 (r299,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r298: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a61 (r298,l0) best SSE_REGS, allocno SSE_REGS
    r297: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a62 (r297,l0) best SSE_REGS, allocno SSE_REGS
    r296: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a63 (r296,l0) best SSE_REGS, allocno SSE_REGS
    r295: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a66 (r295,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r294: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a70 (r294,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r293: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a73 (r293,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r292: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a76 (r292,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r291: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a78 (r291,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r290: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a81 (r290,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r289: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a82 (r289,l0) best SSE_REGS, allocno SSE_REGS
    r288: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a85 (r288,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r287: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a89 (r287,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r286: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a92 (r286,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r285: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a95 (r285,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r284: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a97 (r284,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r283: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a101 (r283,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r282: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a102 (r282,l0) best SSE_REGS, allocno SSE_REGS
    r281: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a107 (r281,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r280: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a111 (r280,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r279: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a112 (r279,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r278: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a113 (r278,l0) best SSE_REGS, allocno SSE_REGS
    r277: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a116 (r277,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r276: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a120 (r276,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r275: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a121 (r275,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r274: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a124 (r274,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r273: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a128 (r273,l0) best SSE_REGS, allocno SSE_REGS
    r272: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a129 (r272,l0) best SSE_REGS, allocno SSE_REGS
    r271: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a132 (r271,l0) best SSE_REGS, allocno SSE_REGS
    r270: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a138 (r270,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r269: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a141 (r269,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r268: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a142 (r268,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r267: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a146 (r267,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r266: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a147 (r266,l0) best SSE_REGS, allocno SSE_REGS
    r265: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a152 (r265,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r264: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a156 (r264,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r263: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a157 (r263,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r262: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a160 (r262,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r261: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a161 (r261,l0) best SSE_REGS, allocno SSE_REGS
    r260: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a164 (r260,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r259: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a168 (r259,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r258: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a169 (r258,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r257: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a172 (r257,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r256: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a175 (r256,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r255: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a176 (r255,l0) best SSE_REGS, allocno SSE_REGS
    r254: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a177 (r254,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r253: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a178 (r253,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r252: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a181 (r252,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r251: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a184 (r251,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r250: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a185 (r250,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r249: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a186 (r249,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r248: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a187 (r248,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r247: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a189 (r247,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r246: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a190 (r246,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r245: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a191 (r245,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r244: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a193 (r244,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r243: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a194 (r243,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r242: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a195 (r242,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r241: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a199 (r241,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r240: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a201 (r240,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r239: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a203 (r239,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r238: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a207 (r238,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r237: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a209 (r237,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r236: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a211 (r236,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r235: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a215 (r235,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r234: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a217 (r234,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r233: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a219 (r233,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r232: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a0 (r232,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r231: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a1 (r231,l0) best SSE_REGS, allocno SSE_REGS
    r230: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a174 (r230,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r229: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a173 (r229,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r225: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a198 (r225,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r224: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a200 (r224,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r220: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a206 (r220,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r219: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a208 (r219,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r215: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a214 (r215,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r214: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a216 (r214,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r213: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a2 (r213,l0) best SSE_REGS, allocno SSE_REGS
    r212: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a3 (r212,l0) best SSE_REGS, allocno SSE_REGS
    r211: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a4 (r211,l0) best SSE_REGS, allocno SSE_REGS
    r210: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a7 (r210,l0) best SSE_REGS, allocno SSE_REGS
    r209: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a10 (r209,l0) best SSE_REGS, allocno SSE_REGS
    r208: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a11 (r208,l0) best SSE_REGS, allocno SSE_REGS
    r207: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a12 (r207,l0) best SSE_REGS, allocno SSE_REGS
    r206: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a13 (r206,l0) best SSE_REGS, allocno SSE_REGS
    r205: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a14 (r205,l0) best SSE_REGS, allocno SSE_REGS
    r204: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a15 (r204,l0) best SSE_REGS, allocno SSE_REGS
    r203: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a16 (r203,l0) best SSE_REGS, allocno SSE_REGS
    r202: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a19 (r202,l0) best SSE_REGS, allocno SSE_REGS
    r201: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a8 (r201,l0) best SSE_REGS, allocno SSE_REGS
    r200: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a22 (r200,l0) best SSE_REGS, allocno SSE_REGS
    r199: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a25 (r199,l0) best SSE_REGS, allocno SSE_REGS
    r198: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a26 (r198,l0) best SSE_REGS, allocno SSE_REGS
    r197: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a27 (r197,l0) best SSE_REGS, allocno SSE_REGS
    r196: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a28 (r196,l0) best SSE_REGS, allocno SSE_REGS
    r195: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a29 (r195,l0) best SSE_REGS, allocno SSE_REGS
    r194: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a30 (r194,l0) best SSE_REGS, allocno SSE_REGS
    r193: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a32 (r193,l0) best SSE_REGS, allocno SSE_REGS
    r192: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a31 (r192,l0) best SSE_REGS, allocno SSE_REGS
    r191: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a35 (r191,l0) best SSE_REGS, allocno SSE_REGS
    r190: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a23 (r190,l0) best SSE_REGS, allocno SSE_REGS
    r189: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a39 (r189,l0) best SSE_REGS, allocno SSE_REGS
    r188: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a41 (r188,l0) best SSE_REGS, allocno SSE_REGS
    r187: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a44 (r187,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r186: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a45 (r186,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r185: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a46 (r185,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r184: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a42 (r184,l0) best SSE_REGS, allocno SSE_REGS
    r183: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a48 (r183,l0) best SSE_REGS, allocno SSE_REGS
    r182: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a49 (r182,l0) best SSE_REGS, allocno SSE_REGS
    r181: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a51 (r181,l0) best SSE_REGS, allocno SSE_REGS
    r180: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a40 (r180,l0) best SSE_REGS, allocno SSE_REGS
    r179: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a54 (r179,l0) best SSE_REGS, allocno SSE_REGS
    r178: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a57 (r178,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r177: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a58 (r177,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r176: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a55 (r176,l0) best SSE_REGS, allocno SSE_REGS
    r175: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a60 (r175,l0) best SSE_REGS, allocno SSE_REGS
    r174: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a64 (r174,l0) best SSE_REGS, allocno SSE_REGS
    r173: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a67 (r173,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r172: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a68 (r172,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r171: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a69 (r171,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r170: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a65 (r170,l0) best SSE_REGS, allocno SSE_REGS
    r169: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a71 (r169,l0) best SSE_REGS, allocno SSE_REGS
    r168: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a74 (r168,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r167: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a75 (r167,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r166: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a72 (r166,l0) best SSE_REGS, allocno SSE_REGS
    r165: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a77 (r165,l0) best SSE_REGS, allocno SSE_REGS
    r164: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a79 (r164,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r163: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a80 (r163,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r162: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a83 (r162,l0) best SSE_REGS, allocno SSE_REGS
    r161: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a86 (r161,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r160: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a87 (r160,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r159: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a88 (r159,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r158: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a84 (r158,l0) best SSE_REGS, allocno SSE_REGS
    r157: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a90 (r157,l0) best SSE_REGS, allocno SSE_REGS
    r156: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a93 (r156,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r155: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a94 (r155,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r154: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a91 (r154,l0) best SSE_REGS, allocno SSE_REGS
    r153: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a96 (r153,l0) best SSE_REGS, allocno SSE_REGS
    r152: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a98 (r152,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r151: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a99 (r151,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r150: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a100 (r150,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r149: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a103 (r149,l0) best SSE_REGS, allocno SSE_REGS
    r148: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a104 (r148,l0) best SSE_REGS, allocno SSE_REGS
    r147: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a105 (r147,l0) best SSE_REGS, allocno SSE_REGS
    r146: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a108 (r146,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r145: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a109 (r145,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r144: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a110 (r144,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r143: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a106 (r143,l0) best SSE_REGS, allocno SSE_REGS
    r142: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a114 (r142,l0) best SSE_REGS, allocno SSE_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a117 (r141,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a118 (r140,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a119 (r139,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r138: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a115 (r138,l0) best SSE_REGS, allocno SSE_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a122 (r137,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a123 (r136,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r135: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a125 (r135,l0) best SSE_REGS, allocno SSE_REGS
    r134: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a126 (r134,l0) best SSE_REGS, allocno SSE_REGS
    r133: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a127 (r133,l0) best SSE_REGS, allocno SSE_REGS
    r132: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a130 (r132,l0) best SSE_REGS, allocno SSE_REGS
    r131: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a133 (r131,l0) best SSE_REGS, allocno SSE_REGS
    r130: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a134 (r130,l0) best SSE_REGS, allocno SSE_REGS
    r129: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a135 (r129,l0) best SSE_REGS, allocno SSE_REGS
    r128: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a136 (r128,l0) best SSE_REGS, allocno SSE_REGS
    r127: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a139 (r127,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r126: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a140 (r126,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r125: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a137 (r125,l0) best SSE_REGS, allocno SSE_REGS
    r124: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a143 (r124,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r123: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a144 (r123,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r122: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a145 (r122,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r121: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a131 (r121,l0) best SSE_REGS, allocno SSE_REGS
    r120: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a148 (r120,l0) best SSE_REGS, allocno SSE_REGS
    r119: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a149 (r119,l0) best SSE_REGS, allocno SSE_REGS
    r118: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a150 (r118,l0) best SSE_REGS, allocno SSE_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a153 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a154 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a155 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a151 (r114,l0) best SSE_REGS, allocno SSE_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a158 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r112: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a159 (r112,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r111: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a162 (r111,l0) best SSE_REGS, allocno SSE_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a165 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a166 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a167 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a163 (r107,l0) best SSE_REGS, allocno SSE_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a170 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a171 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a180 (r104,l0) best SSE_REGS, allocno SSE_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a182 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a183 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a179 (r101,l0) best SSE_REGS, allocno SSE_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a188 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a192 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a196 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a197 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a202 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a204 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a205 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a210 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a212 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a213 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a218 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r232,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 CLOBBERED_REGS:4 Q_REGS:4 NON_Q_REGS:4 TLS_GOTBASE_REGS:4 GENERAL_REGS:4 FP_TOP_REG:18 FP_SECOND_REG:18 FLOAT_REGS:18 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:16 FP_TOP_SSE_REGS:20 FP_SECOND_SSE_REGS:20 FLOAT_SSE_REGS:20 FLOAT_INT_REGS:18 INT_SSE_REGS:16 FLOAT_INT_SSE_REGS:20 ALL_REGS:20 MEM:2
  a1(r231,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 CLOBBERED_REGS:4 Q_REGS:4 NON_Q_REGS:4 TLS_GOTBASE_REGS:4 GENERAL_REGS:4 FP_TOP_REG:24 FP_SECOND_REG:24 FLOAT_REGS:24 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:22 FP_TOP_SSE_REGS:26 FP_SECOND_SSE_REGS:26 FLOAT_SSE_REGS:26 FLOAT_INT_REGS:24 INT_SSE_REGS:19 FLOAT_INT_SSE_REGS:26 ALL_REGS:26 MEM:7
  a2(r213,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a3(r212,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a4(r211,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a5(r318,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a6(r317,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a7(r210,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a8(r201,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a9(r316,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a10(r209,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:16
  a11(r208,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:16
  a12(r207,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:16
  a13(r206,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 ALL_REGS:29 MEM:9
  a14(r205,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:9
  a15(r204,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a16(r203,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:16
  a17(r315,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a18(r314,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a19(r202,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:16
  a20(r313,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a21(r312,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a22(r200,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a23(r190,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a24(r311,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a25(r199,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:16
  a26(r198,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:16
  a27(r197,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:16
  a28(r196,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 ALL_REGS:29 MEM:9
  a29(r195,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:9
  a30(r194,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a31(r192,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a32(r193,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:16
  a33(r310,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a34(r309,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a35(r191,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a36(r308,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a37(r307,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a38(r306,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a39(r189,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a40(r180,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a41(r188,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a42(r184,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 ALL_REGS:29 MEM:8
  a43(r305,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a44(r187,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a45(r186,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a46(r185,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a47(r304,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a48(r183,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:9
  a49(r182,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a50(r303,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a51(r181,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:16
  a52(r302,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a53(r301,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a54(r179,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a55(r176,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a56(r300,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a57(r178,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a58(r177,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a59(r299,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a60(r175,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:16
  a61(r298,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a62(r297,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a63(r296,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a64(r174,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a65(r170,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a66(r295,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a67(r173,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a68(r172,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a69(r171,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a70(r294,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a71(r169,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a72(r166,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:16
  a73(r293,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a74(r168,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a75(r167,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a76(r292,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a77(r165,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a78(r291,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a79(r164,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a80(r163,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a81(r290,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a82(r289,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a83(r162,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a84(r158,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a85(r288,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a86(r161,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a87(r160,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a88(r159,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a89(r287,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a90(r157,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a91(r154,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:16
  a92(r286,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a93(r156,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a94(r155,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a95(r285,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a96(r153,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a97(r284,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a98(r152,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a99(r151,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a100(r150,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a101(r283,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a102(r282,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a103(r149,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 ALL_REGS:29 MEM:9
  a104(r148,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:9
  a105(r147,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a106(r143,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a107(r281,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a108(r146,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a109(r145,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a110(r144,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a111(r280,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a112(r279,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a113(r278,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a114(r142,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a115(r138,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a116(r277,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a117(r141,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a118(r140,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a119(r139,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a120(r276,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a121(r275,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a122(r137,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a123(r136,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a124(r274,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a125(r135,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a126(r134,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a127(r133,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a128(r273,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a129(r272,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a130(r132,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a131(r121,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a132(r271,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a133(r131,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:16
  a134(r130,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 ALL_REGS:29 MEM:9
  a135(r129,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:9
  a136(r128,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a137(r125,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a138(r270,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a139(r127,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a140(r126,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a141(r269,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a142(r268,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a143(r124,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a144(r123,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a145(r122,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a146(r267,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a147(r266,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a148(r120,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 ALL_REGS:29 MEM:8
  a149(r119,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:9
  a150(r118,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a151(r114,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a152(r265,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a153(r117,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a154(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a155(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a156(r264,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a157(r263,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a158(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a159(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a160(r262,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a161(r261,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a162(r111,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a163(r107,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a164(r260,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a165(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a166(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a167(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a168(r259,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a169(r258,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a170(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a171(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a172(r257,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a173(r229,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a174(r230,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7
  a175(r256,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a176(r255,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 CLOBBERED_REGS:4 Q_REGS:4 NON_Q_REGS:4 TLS_GOTBASE_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:29 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:12
  a177(r254,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a178(r253,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a179(r101,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a180(r104,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a181(r252,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a182(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a183(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a184(r251,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a185(r250,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a186(r249,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a187(r248,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a188(r100,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 CLOBBERED_REGS:2 Q_REGS:2 NON_Q_REGS:2 TLS_GOTBASE_REGS:2 GENERAL_REGS:2 SSE_FIRST_REG:26 NO_REX_SSE_REGS:26 SSE_REGS:26 MMX_REGS:41 INT_SSE_REGS:29 ALL_REGS:626 MEM:11
  a189(r247,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 CLOBBERED_REGS:2 Q_REGS:2 NON_Q_REGS:2 TLS_GOTBASE_REGS:2 GENERAL_REGS:2 SSE_FIRST_REG:18 NO_REX_SSE_REGS:18 SSE_REGS:18 MMX_REGS:28 INT_SSE_REGS:20 ALL_REGS:418 MEM:8
  a190(r246,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a191(r245,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a192(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a193(r244,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a194(r243,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a195(r242,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a196(r97,l0) costs: AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:2
  a197(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a198(r225,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a199(r241,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a200(r224,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:38 INT_SSE_REGS:27 ALL_REGS:520 MEM:11
  a201(r240,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:8
  a202(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a203(r239,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a204(r93,l0) costs: AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:2
  a205(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a206(r220,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a207(r238,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a208(r219,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:38 INT_SSE_REGS:27 ALL_REGS:520 MEM:11
  a209(r237,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:8
  a210(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a211(r236,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a212(r89,l0) costs: AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:2
  a213(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a214(r215,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a215(r235,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a216(r214,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:38 INT_SSE_REGS:27 ALL_REGS:520 MEM:11
  a217(r234,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:8
  a218(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a219(r233,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8

   Insn 305(l0): point = 0
   Insn 304(l0): point = 2
   Insn 300(l0): point = 4
   Insn 297(l0): point = 6
   Insn 296(l0): point = 8
   Insn 295(l0): point = 10
   Insn 294(l0): point = 12
   Insn 293(l0): point = 14
   Insn 292(l0): point = 16
   Insn 291(l0): point = 18
   Insn 290(l0): point = 20
   Insn 289(l0): point = 22
   Insn 288(l0): point = 24
   Insn 287(l0): point = 26
   Insn 286(l0): point = 28
   Insn 285(l0): point = 30
   Insn 284(l0): point = 32
   Insn 283(l0): point = 34
   Insn 282(l0): point = 36
   Insn 281(l0): point = 38
   Insn 280(l0): point = 40
   Insn 279(l0): point = 42
   Insn 278(l0): point = 44
   Insn 277(l0): point = 46
   Insn 276(l0): point = 48
   Insn 275(l0): point = 50
   Insn 274(l0): point = 52
   Insn 273(l0): point = 54
   Insn 272(l0): point = 56
   Insn 271(l0): point = 58
   Insn 270(l0): point = 60
   Insn 269(l0): point = 62
   Insn 268(l0): point = 64
   Insn 267(l0): point = 66
   Insn 266(l0): point = 68
   Insn 265(l0): point = 70
   Insn 264(l0): point = 72
   Insn 263(l0): point = 74
   Insn 262(l0): point = 76
   Insn 261(l0): point = 78
   Insn 260(l0): point = 80
   Insn 259(l0): point = 82
   Insn 258(l0): point = 84
   Insn 257(l0): point = 86
   Insn 256(l0): point = 88
   Insn 255(l0): point = 90
   Insn 254(l0): point = 92
   Insn 253(l0): point = 94
   Insn 252(l0): point = 96
   Insn 251(l0): point = 98
   Insn 250(l0): point = 100
   Insn 249(l0): point = 102
   Insn 248(l0): point = 104
   Insn 247(l0): point = 106
   Insn 246(l0): point = 108
   Insn 245(l0): point = 110
   Insn 244(l0): point = 112
   Insn 243(l0): point = 114
   Insn 242(l0): point = 116
   Insn 241(l0): point = 118
   Insn 240(l0): point = 120
   Insn 239(l0): point = 122
   Insn 238(l0): point = 124
   Insn 237(l0): point = 126
   Insn 236(l0): point = 128
   Insn 235(l0): point = 130
   Insn 234(l0): point = 132
   Insn 233(l0): point = 134
   Insn 232(l0): point = 136
   Insn 231(l0): point = 138
   Insn 230(l0): point = 140
   Insn 229(l0): point = 142
   Insn 228(l0): point = 144
   Insn 227(l0): point = 146
   Insn 226(l0): point = 148
   Insn 225(l0): point = 150
   Insn 224(l0): point = 152
   Insn 223(l0): point = 154
   Insn 222(l0): point = 156
   Insn 221(l0): point = 158
   Insn 220(l0): point = 160
   Insn 219(l0): point = 162
   Insn 218(l0): point = 164
   Insn 217(l0): point = 166
   Insn 216(l0): point = 168
   Insn 215(l0): point = 170
   Insn 214(l0): point = 172
   Insn 213(l0): point = 174
   Insn 212(l0): point = 176
   Insn 211(l0): point = 178
   Insn 210(l0): point = 180
   Insn 209(l0): point = 182
   Insn 208(l0): point = 184
   Insn 207(l0): point = 186
   Insn 206(l0): point = 188
   Insn 205(l0): point = 190
   Insn 204(l0): point = 192
   Insn 203(l0): point = 194
   Insn 202(l0): point = 196
   Insn 201(l0): point = 198
   Insn 200(l0): point = 200
   Insn 199(l0): point = 202
   Insn 198(l0): point = 204
   Insn 197(l0): point = 206
   Insn 196(l0): point = 208
   Insn 195(l0): point = 210
   Insn 194(l0): point = 212
   Insn 193(l0): point = 214
   Insn 192(l0): point = 216
   Insn 191(l0): point = 218
   Insn 190(l0): point = 220
   Insn 189(l0): point = 222
   Insn 188(l0): point = 224
   Insn 187(l0): point = 226
   Insn 186(l0): point = 228
   Insn 185(l0): point = 230
   Insn 184(l0): point = 232
   Insn 183(l0): point = 234
   Insn 182(l0): point = 236
   Insn 181(l0): point = 238
   Insn 180(l0): point = 240
   Insn 179(l0): point = 242
   Insn 178(l0): point = 244
   Insn 177(l0): point = 246
   Insn 176(l0): point = 248
   Insn 175(l0): point = 250
   Insn 174(l0): point = 252
   Insn 173(l0): point = 254
   Insn 172(l0): point = 256
   Insn 171(l0): point = 258
   Insn 170(l0): point = 260
   Insn 169(l0): point = 262
   Insn 168(l0): point = 264
   Insn 322(l0): point = 267
   Insn 109(l0): point = 270
   Insn 108(l0): point = 272
   Insn 107(l0): point = 274
   Insn 106(l0): point = 276
   Insn 315(l0): point = 279
   Insn 162(l0): point = 281
   Insn 161(l0): point = 283
   Insn 160(l0): point = 285
   Insn 159(l0): point = 287
   Insn 158(l0): point = 289
   Insn 157(l0): point = 291
   Insn 156(l0): point = 293
   Insn 155(l0): point = 295
   Insn 154(l0): point = 297
   Insn 153(l0): point = 299
   Insn 152(l0): point = 301
   Insn 151(l0): point = 303
   Insn 150(l0): point = 305
   Insn 149(l0): point = 307
   Insn 148(l0): point = 309
   Insn 147(l0): point = 311
   Insn 146(l0): point = 313
   Insn 145(l0): point = 315
   Insn 144(l0): point = 317
   Insn 143(l0): point = 319
   Insn 142(l0): point = 321
   Insn 141(l0): point = 323
   Insn 140(l0): point = 325
   Insn 139(l0): point = 327
   Insn 138(l0): point = 329
   Insn 137(l0): point = 331
   Insn 136(l0): point = 333
   Insn 135(l0): point = 335
   Insn 134(l0): point = 337
   Insn 133(l0): point = 339
   Insn 132(l0): point = 341
   Insn 131(l0): point = 343
   Insn 130(l0): point = 345
   Insn 129(l0): point = 347
   Insn 128(l0): point = 349
   Insn 127(l0): point = 351
   Insn 126(l0): point = 353
   Insn 125(l0): point = 355
   Insn 124(l0): point = 357
   Insn 123(l0): point = 359
   Insn 122(l0): point = 361
   Insn 121(l0): point = 363
   Insn 120(l0): point = 365
   Insn 119(l0): point = 367
   Insn 118(l0): point = 369
   Insn 117(l0): point = 371
   Insn 116(l0): point = 373
   Insn 115(l0): point = 375
   Insn 114(l0): point = 377
   Insn 113(l0): point = 379
   Insn 112(l0): point = 381
   Insn 111(l0): point = 383
   Insn 104(l0): point = 386
   Insn 103(l0): point = 388
   Insn 102(l0): point = 390
   Insn 101(l0): point = 392
   Insn 100(l0): point = 394
   Insn 319(l0): point = 397
   Insn 63(l0): point = 400
   Insn 62(l0): point = 402
   Insn 61(l0): point = 404
   Insn 60(l0): point = 406
   Insn 313(l0): point = 409
   Insn 92(l0): point = 412
   Insn 91(l0): point = 414
   Insn 311(l0): point = 417
   Insn 86(l0): point = 419
   Insn 85(l0): point = 421
   Insn 80(l0): point = 424
   Insn 79(l0): point = 426
   Insn 78(l0): point = 428
   Insn 77(l0): point = 430
   Insn 76(l0): point = 432
   Insn 75(l0): point = 434
   Insn 74(l0): point = 436
   Insn 73(l0): point = 438
   Insn 72(l0): point = 440
   Insn 71(l0): point = 442
   Insn 70(l0): point = 444
   Insn 69(l0): point = 446
   Insn 68(l0): point = 448
   Insn 67(l0): point = 450
   Insn 66(l0): point = 452
   Insn 65(l0): point = 454
   Insn 58(l0): point = 457
   Insn 57(l0): point = 459
   Insn 56(l0): point = 461
   Insn 55(l0): point = 463
   Insn 51(l0): point = 465
   Insn 50(l0): point = 467
   Insn 49(l0): point = 469
   Insn 47(l0): point = 471
   Insn 45(l0): point = 473
   Insn 46(l0): point = 475
   Insn 44(l0): point = 477
   Insn 43(l0): point = 479
   Insn 42(l0): point = 481
   Insn 41(l0): point = 483
   Insn 40(l0): point = 485
   Insn 36(l0): point = 487
   Insn 35(l0): point = 489
   Insn 34(l0): point = 491
   Insn 32(l0): point = 493
   Insn 30(l0): point = 495
   Insn 31(l0): point = 497
   Insn 29(l0): point = 499
   Insn 28(l0): point = 501
   Insn 27(l0): point = 503
   Insn 26(l0): point = 505
   Insn 25(l0): point = 507
   Insn 21(l0): point = 509
   Insn 20(l0): point = 511
   Insn 19(l0): point = 513
   Insn 17(l0): point = 515
   Insn 15(l0): point = 517
   Insn 16(l0): point = 519
   Insn 14(l0): point = 521
   Insn 13(l0): point = 523
   Insn 12(l0): point = 525
   Insn 11(l0): point = 527
   Insn 10(l0): point = 529
   Insn 6(l0): point = 531
   Insn 5(l0): point = 533
   Insn 4(l0): point = 535
   Insn 3(l0): point = 537
   Insn 2(l0): point = 539
 a0(r232): [3..4]
 a1(r231): [5..6]
 a2(r213): [9..10]
 a3(r212): [11..12]
 a4(r211): [11..14]
 a5(r318): [15..16]
 a6(r317): [19..20]
 a7(r210): [21..22]
 a8(r201): [21..50]
 a9(r316): [23..24]
 a10(r209): [23..26]
 a11(r208): [27..28]
 a12(r207): [29..30]
 a13(r206): [31..32]
 a14(r205): [33..34]
 a15(r204): [35..36]
 a16(r203): [35..42]
 a17(r315): [37..38]
 a18(r314): [37..40]
 a19(r202): [43..44]
 a20(r313): [45..46]
 a21(r312): [45..48]
 a22(r200): [51..52]
 a23(r190): [51..84]
 a24(r311): [53..54]
 a25(r199): [53..56]
 a26(r198): [57..58]
 a27(r197): [59..60]
 a28(r196): [61..62]
 a29(r195): [63..64]
 a30(r194): [65..66]
 a31(r192): [65..74]
 a32(r193): [67..68]
 a33(r310): [69..70]
 a34(r309): [69..72]
 a35(r191): [75..78]
 a36(r308): [75..76]
 a37(r307): [79..80]
 a38(r306): [79..82]
 a39(r189): [85..86]
 a40(r180): [85..114]
 a41(r188): [87..88]
 a42(r184): [87..100]
 a43(r305): [89..90]
 a44(r187): [89..92]
 a45(r186): [93..94]
 a46(r185): [95..96]
 a47(r304): [97..98]
 a48(r183): [101..102]
 a49(r182): [103..106]
 a50(r303): [103..104]
 a51(r181): [107..108]
 a52(r302): [109..110]
 a53(r301): [109..112]
 a54(r179): [115..116]
 a55(r176): [115..126]
 a56(r300): [117..118]
 a57(r178): [117..120]
 a58(r177): [121..122]
 a59(r299): [123..124]
 a60(r175): [127..128]
 a61(r298): [129..130]
 a62(r297): [129..132]
 a63(r296): [135..136]
 a64(r174): [137..138]
 a65(r170): [137..150]
 a66(r295): [139..140]
 a67(r173): [139..142]
 a68(r172): [143..144]
 a69(r171): [145..146]
 a70(r294): [147..148]
 a71(r169): [151..152]
 a72(r166): [151..162]
 a73(r293): [153..154]
 a74(r168): [153..156]
 a75(r167): [157..158]
 a76(r292): [159..160]
 a77(r165): [163..164]
 a78(r291): [165..166]
 a79(r164): [165..168]
 a80(r163): [169..170]
 a81(r290): [171..172]
 a82(r289): [175..176]
 a83(r162): [177..178]
 a84(r158): [177..190]
 a85(r288): [179..180]
 a86(r161): [179..182]
 a87(r160): [183..184]
 a88(r159): [185..186]
 a89(r287): [187..188]
 a90(r157): [191..192]
 a91(r154): [191..202]
 a92(r286): [193..194]
 a93(r156): [193..196]
 a94(r155): [197..198]
 a95(r285): [199..200]
 a96(r153): [203..204]
 a97(r284): [205..206]
 a98(r152): [205..208]
 a99(r151): [209..210]
 a100(r150): [211..212]
 a101(r283): [213..214]
 a102(r282): [217..218]
 a103(r149): [219..220]
 a104(r148): [221..222]
 a105(r147): [223..224]
 a106(r143): [223..236]
 a107(r281): [225..226]
 a108(r146): [225..228]
 a109(r145): [229..230]
 a110(r144): [231..232]
 a111(r280): [233..234]
 a112(r279): [237..238]
 a113(r278): [241..242]
 a114(r142): [243..244]
 a115(r138): [243..256]
 a116(r277): [245..246]
 a117(r141): [245..248]
 a118(r140): [249..250]
 a119(r139): [251..252]
 a120(r276): [253..254]
 a121(r275): [257..258]
 a122(r137): [257..260]
 a123(r136): [261..262]
 a124(r274): [263..264]
 a125(r135): [284..285]
 a126(r134): [286..287]
 a127(r133): [286..289]
 a128(r273): [290..291]
 a129(r272): [294..295]
 a130(r132): [296..297]
 a131(r121): [296..329]
 a132(r271): [298..299]
 a133(r131): [298..301]
 a134(r130): [302..303]
 a135(r129): [304..305]
 a136(r128): [306..307]
 a137(r125): [306..317]
 a138(r270): [308..309]
 a139(r127): [308..311]
 a140(r126): [312..313]
 a141(r269): [314..315]
 a142(r268): [318..319]
 a143(r124): [318..321]
 a144(r123): [322..323]
 a145(r122): [324..325]
 a146(r267): [326..327]
 a147(r266): [330..331]
 a148(r120): [330..333]
 a149(r119): [334..335]
 a150(r118): [336..337]
 a151(r114): [336..349]
 a152(r265): [338..339]
 a153(r117): [338..341]
 a154(r116): [342..343]
 a155(r115): [344..345]
 a156(r264): [346..347]
 a157(r263): [350..351]
 a158(r113): [350..353]
 a159(r112): [354..355]
 a160(r262): [356..357]
 a161(r261): [360..361]
 a162(r111): [362..363]
 a163(r107): [362..375]
 a164(r260): [364..365]
 a165(r110): [364..367]
 a166(r109): [368..369]
 a167(r108): [370..371]
 a168(r259): [372..373]
 a169(r258): [376..377]
 a170(r106): [376..379]
 a171(r105): [380..381]
 a172(r257): [382..383]
 a173(r229): [270..388]
 a174(r230): [273..274]
 a175(r256): [389..390]
 a176(r255): [393..394]
 a177(r254): [413..414]
 a178(r253): [420..421]
 a179(r101): [427..438]
 a180(r104): [427..428]
 a181(r252): [429..430]
 a182(r103): [429..432]
 a183(r102): [433..434]
 a184(r251): [435..436]
 a185(r250): [439..440]
 a186(r249): [443..444]
 a187(r248): [445..446]
 a188(r100): [447..450]
 a189(r247): [447..448]
 a190(r246): [451..452]
 a191(r245): [451..454]
 a192(r99): [403..404]
 a193(r244): [405..406]
 a194(r243): [458..459]
 a195(r242): [460..461]
 a196(r97 [0]): [466..541]
 a196(r97 [1]): [465..541]
 a197(r96): [468..469]
 a198(r225): [470..471]
 a199(r241): [472..475]
 a200(r224): [472..477]
 a201(r240): [480..481]
 a202(r95): [482..483]
 a203(r239): [484..485]
 a204(r93 [0]): [488..541]
 a204(r93 [1]): [487..541]
 a205(r92): [490..491]
 a206(r220): [492..493]
 a207(r238): [494..497]
 a208(r219): [494..499]
 a209(r237): [502..503]
 a210(r91): [504..505]
 a211(r236): [506..507]
 a212(r89 [0]): [510..541]
 a212(r89 [1]): [509..541]
 a213(r88): [512..513]
 a214(r215): [514..515]
 a215(r235): [516..519]
 a216(r214): [516..521]
 a217(r234): [524..525]
 a218(r87): [526..527]
 a219(r233): [528..529]
Compressing live ranges: from 542 to 322 - 59%
Ranges after the compression:
 a0(r232): [0..1]
 a1(r231): [2..3]
 a2(r213): [4..5]
 a3(r212): [6..7]
 a4(r211): [6..7]
 a5(r318): [8..9]
 a6(r317): [10..11]
 a7(r210): [12..13]
 a8(r201): [12..31]
 a9(r316): [14..15]
 a10(r209): [14..15]
 a11(r208): [16..17]
 a12(r207): [18..19]
 a13(r206): [20..21]
 a14(r205): [22..23]
 a15(r204): [24..25]
 a16(r203): [24..27]
 a17(r315): [26..27]
 a18(r314): [26..27]
 a19(r202): [28..29]
 a20(r313): [30..31]
 a21(r312): [30..31]
 a22(r200): [32..33]
 a23(r190): [32..53]
 a24(r311): [34..35]
 a25(r199): [34..35]
 a26(r198): [36..37]
 a27(r197): [38..39]
 a28(r196): [40..41]
 a29(r195): [42..43]
 a30(r194): [44..45]
 a31(r192): [44..49]
 a32(r193): [46..47]
 a33(r310): [48..49]
 a34(r309): [48..49]
 a35(r191): [50..51]
 a36(r308): [50..51]
 a37(r307): [52..53]
 a38(r306): [52..53]
 a39(r189): [54..55]
 a40(r180): [54..73]
 a41(r188): [56..57]
 a42(r184): [56..65]
 a43(r305): [58..59]
 a44(r187): [58..59]
 a45(r186): [60..61]
 a46(r185): [62..63]
 a47(r304): [64..65]
 a48(r183): [66..67]
 a49(r182): [68..69]
 a50(r303): [68..69]
 a51(r181): [70..71]
 a52(r302): [72..73]
 a53(r301): [72..73]
 a54(r179): [74..75]
 a55(r176): [74..81]
 a56(r300): [76..77]
 a57(r178): [76..77]
 a58(r177): [78..79]
 a59(r299): [80..81]
 a60(r175): [82..83]
 a61(r298): [84..85]
 a62(r297): [84..85]
 a63(r296): [86..87]
 a64(r174): [88..89]
 a65(r170): [88..97]
 a66(r295): [90..91]
 a67(r173): [90..91]
 a68(r172): [92..93]
 a69(r171): [94..95]
 a70(r294): [96..97]
 a71(r169): [98..99]
 a72(r166): [98..105]
 a73(r293): [100..101]
 a74(r168): [100..101]
 a75(r167): [102..103]
 a76(r292): [104..105]
 a77(r165): [106..107]
 a78(r291): [108..109]
 a79(r164): [108..109]
 a80(r163): [110..111]
 a81(r290): [112..113]
 a82(r289): [114..115]
 a83(r162): [116..117]
 a84(r158): [116..125]
 a85(r288): [118..119]
 a86(r161): [118..119]
 a87(r160): [120..121]
 a88(r159): [122..123]
 a89(r287): [124..125]
 a90(r157): [126..127]
 a91(r154): [126..133]
 a92(r286): [128..129]
 a93(r156): [128..129]
 a94(r155): [130..131]
 a95(r285): [132..133]
 a96(r153): [134..135]
 a97(r284): [136..137]
 a98(r152): [136..137]
 a99(r151): [138..139]
 a100(r150): [140..141]
 a101(r283): [142..143]
 a102(r282): [144..145]
 a103(r149): [146..147]
 a104(r148): [148..149]
 a105(r147): [150..151]
 a106(r143): [150..159]
 a107(r281): [152..153]
 a108(r146): [152..153]
 a109(r145): [154..155]
 a110(r144): [156..157]
 a111(r280): [158..159]
 a112(r279): [160..161]
 a113(r278): [162..163]
 a114(r142): [164..165]
 a115(r138): [164..173]
 a116(r277): [166..167]
 a117(r141): [166..167]
 a118(r140): [168..169]
 a119(r139): [170..171]
 a120(r276): [172..173]
 a121(r275): [174..175]
 a122(r137): [174..175]
 a123(r136): [176..177]
 a124(r274): [178..179]
 a125(r135): [182..183]
 a126(r134): [184..185]
 a127(r133): [184..185]
 a128(r273): [186..187]
 a129(r272): [188..189]
 a130(r132): [190..191]
 a131(r121): [190..213]
 a132(r271): [192..193]
 a133(r131): [192..193]
 a134(r130): [194..195]
 a135(r129): [196..197]
 a136(r128): [198..199]
 a137(r125): [198..205]
 a138(r270): [200..201]
 a139(r127): [200..201]
 a140(r126): [202..203]
 a141(r269): [204..205]
 a142(r268): [206..207]
 a143(r124): [206..207]
 a144(r123): [208..209]
 a145(r122): [210..211]
 a146(r267): [212..213]
 a147(r266): [214..215]
 a148(r120): [214..215]
 a149(r119): [216..217]
 a150(r118): [218..219]
 a151(r114): [218..227]
 a152(r265): [220..221]
 a153(r117): [220..221]
 a154(r116): [222..223]
 a155(r115): [224..225]
 a156(r264): [226..227]
 a157(r263): [228..229]
 a158(r113): [228..229]
 a159(r112): [230..231]
 a160(r262): [232..233]
 a161(r261): [234..235]
 a162(r111): [236..237]
 a163(r107): [236..245]
 a164(r260): [238..239]
 a165(r110): [238..239]
 a166(r109): [240..241]
 a167(r108): [242..243]
 a168(r259): [244..245]
 a169(r258): [246..247]
 a170(r106): [246..247]
 a171(r105): [248..249]
 a172(r257): [250..251]
 a173(r229): [180..251]
 a174(r230): [180..181]
 a175(r256): [252..253]
 a176(r255): [254..255]
 a177(r254): [260..261]
 a178(r253): [262..263]
 a179(r101): [264..271]
 a180(r104): [264..265]
 a181(r252): [266..267]
 a182(r103): [266..267]
 a183(r102): [268..269]
 a184(r251): [270..271]
 a185(r250): [272..273]
 a186(r249): [274..275]
 a187(r248): [276..277]
 a188(r100): [278..279]
 a189(r247): [278..279]
 a190(r246): [280..281]
 a191(r245): [280..281]
 a192(r99): [256..257]
 a193(r244): [258..259]
 a194(r243): [282..283]
 a195(r242): [284..285]
 a196(r97 [0]): [286..321]
 a196(r97 [1]): [286..321]
 a197(r96): [286..287]
 a198(r225): [288..289]
 a199(r241): [290..291]
 a200(r224): [290..291]
 a201(r240): [292..293]
 a202(r95): [294..295]
 a203(r239): [296..297]
 a204(r93 [0]): [298..321]
 a204(r93 [1]): [298..321]
 a205(r92): [298..299]
 a206(r220): [300..301]
 a207(r238): [302..303]
 a208(r219): [302..303]
 a209(r237): [304..305]
 a210(r91): [306..307]
 a211(r236): [308..309]
 a212(r89 [0]): [310..321]
 a212(r89 [1]): [310..321]
 a213(r88): [310..311]
 a214(r215): [312..313]
 a215(r235): [314..315]
 a216(r214): [314..315]
 a217(r234): [316..317]
 a218(r87): [318..319]
 a219(r233): [320..321]
  regions=1, blocks=14, points=322
    allocnos=220 (big 3), copies=0, conflicts=0, ranges=223
Disposition:
  218:r87  l0     0  213:r88  l0     0  212:r89  l0    42  210:r91  l0     0
  205:r92  l0     0  204:r93  l0    40  202:r95  l0     0  197:r96  l0     0
  196:r97  l0    38  192:r99  l0     0  188:r100 l0     0  179:r101 l0    22
  183:r102 l0     0  182:r103 l0     1  180:r104 l0    21  171:r105 l0     0
  170:r106 l0     1  163:r107 l0    21  167:r108 l0     0  166:r109 l0     0
  165:r110 l0     1  162:r111 l0    22  159:r112 l0     0  158:r113 l0     1
  151:r114 l0    22  155:r115 l0     0  154:r116 l0     0  153:r117 l0     1
  150:r118 l0    21  149:r119 l0    21  148:r120 l0    22  131:r121 l0    22
  145:r122 l0     0  144:r123 l0     0  143:r124 l0     1  137:r125 l0    21
  140:r126 l0     0  139:r127 l0     1  136:r128 l0    23  135:r129 l0    21
  134:r130 l0    21  133:r131 l0    21  130:r132 l0    21  127:r133 l0    21
  126:r134 l0    22  125:r135 l0    21  123:r136 l0     0  122:r137 l0     1
  115:r138 l0    21  119:r139 l0     0  118:r140 l0     0  117:r141 l0     1
  114:r142 l0    22  106:r143 l0    21  110:r144 l0     0  109:r145 l0     0
  108:r146 l0     1  105:r147 l0    22  104:r148 l0    21  103:r149 l0    21
  100:r150 l0     0   99:r151 l0     0   98:r152 l0     1   96:r153 l0    21
   91:r154 l0    21   94:r155 l0     0   93:r156 l0     1   90:r157 l0    22
   84:r158 l0    21   88:r159 l0     0   87:r160 l0     0   86:r161 l0     1
   83:r162 l0    22   80:r163 l0     0   79:r164 l0     1   77:r165 l0    21
   72:r166 l0    21   75:r167 l0     0   74:r168 l0     1   71:r169 l0    22
   65:r170 l0    21   69:r171 l0     0   68:r172 l0     0   67:r173 l0     1
   64:r174 l0    22   60:r175 l0    21   55:r176 l0    21   58:r177 l0     0
   57:r178 l0     1   54:r179 l0    22   40:r180 l0    22   51:r181 l0    21
   49:r182 l0    21   48:r183 l0    21   42:r184 l0    23   46:r185 l0     0
   45:r186 l0     0   44:r187 l0     1   41:r188 l0    21   39:r189 l0    21
   23:r190 l0    22   35:r191 l0    21   31:r192 l0    23   32:r193 l0    21
   30:r194 l0    21   29:r195 l0    21   28:r196 l0    21   27:r197 l0    21
   26:r198 l0    21   25:r199 l0    21   22:r200 l0    21    8:r201 l0    22
   19:r202 l0    21   16:r203 l0    21   15:r204 l0    23   14:r205 l0    21
   13:r206 l0    21   12:r207 l0    21   11:r208 l0    21   10:r209 l0    21
    7:r210 l0    21    4:r211 l0    21    3:r212 l0    22    2:r213 l0    21
  216:r214 l0     0  214:r215 l0     0  208:r219 l0     0  206:r220 l0     0
  200:r224 l0     0  198:r225 l0     0  173:r229 l0     2  174:r230 l0     0
    1:r231 l0    21    0:r232 l0    21  219:r233 l0     0  217:r234 l0     0
  215:r235 l0     1  211:r236 l0     0  209:r237 l0     0  207:r238 l0     1
  203:r239 l0     0  201:r240 l0     0  199:r241 l0     1  195:r242 l0     0
  194:r243 l0     0  193:r244 l0     0  191:r245 l0     1  190:r246 l0     0
  189:r247 l0     1  187:r248 l0     0  186:r249 l0     0  185:r250 l0     0
  184:r251 l0     0  181:r252 l0     0  178:r253 l0     0  177:r254 l0     0
  176:r255 l0    21  175:r256 l0     0  172:r257 l0     0  169:r258 l0     0
  168:r259 l0     0  164:r260 l0     0  161:r261 l0    21  160:r262 l0     0
  157:r263 l0     0  156:r264 l0     0  152:r265 l0     0  147:r266 l0    21
  146:r267 l0     0  142:r268 l0     0  141:r269 l0     0  138:r270 l0     0
  132:r271 l0    23  129:r272 l0    21  128:r273 l0    21  124:r274 l0     0
  121:r275 l0     0  120:r276 l0     0  116:r277 l0     0  113:r278 l0    21
  112:r279 l0     0  111:r280 l0     0  107:r281 l0     0  102:r282 l0    21
  101:r283 l0     0   97:r284 l0     0   95:r285 l0     0   92:r286 l0     0
   89:r287 l0     0   85:r288 l0     0   82:r289 l0    21   81:r290 l0     0
   78:r291 l0     0   76:r292 l0     0   73:r293 l0     0   70:r294 l0     0
   66:r295 l0     0   63:r296 l0    21   62:r297 l0    22   61:r298 l0    21
   59:r299 l0     0   56:r300 l0     0   53:r301 l0    23   52:r302 l0    21
   50:r303 l0    23   47:r304 l0     0   43:r305 l0     0   38:r306 l0    23
   37:r307 l0    21   36:r308 l0    23   34:r309 l0    24   33:r310 l0    21
   24:r311 l0    23   21:r312 l0    23   20:r313 l0    21   18:r314 l0    24
   17:r315 l0    23    9:r316 l0    23    6:r317 l0    21    5:r318 l0    21
+++Costs: overall 3, reg 3, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


geval

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame] 21 [xmm0]
;;  regs ever live 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 17 [flags] 21 [xmm0] 37 [r8]
;;  ref usage 	r0={1d} r1={1d,1u} r2={1d,1u} r4={1d,1u} r5={1d,1u} r6={1d,13u} r7={1d,13u} r16={1d,12u} r17={41d,7u} r20={1d,120u,14e} r21={2d,2u} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d,1u} r38={1d} r87={1d,1u} r88={1d,1u} r89={2d,2u} r91={1d,1u} r92={1d,1u} r93={2d,2u} r95={1d,1u} r96={1d,1u} r97={2d,2u} r99={1d,1u} r100={1d,2u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,1u} r127={1d,1u} r128={1d,1u} r129={1d,1u} r130={1d,1u} r131={1d,1u} r132={1d,1u} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d,1u} r165={1d,1u} r166={1d,1u} r167={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,1u} r171={1d,1u} r172={1d,1u} r173={1d,1u} r174={1d,1u} r175={1d,1u} r176={1d,1u} r177={1d,1u} r178={1d,1u} r179={1d,1u} r180={1d,1u} r181={1d,1u} r182={1d,1u} r183={1d,1u} r184={1d,1u} r185={1d,1u} r186={1d,1u} r187={1d,1u} r188={1d,1u} r189={1d,1u} r190={1d,1u} r191={1d,1u} r192={1d,1u} r193={1d,1u} r194={1d,1u} r195={1d,1u} r196={1d,1u} r197={1d,1u} r198={1d,1u} r199={1d,1u} r200={1d,1u} r201={1d,1u} r202={1d,1u} r203={1d,1u} r204={1d,1u} r205={1d,1u} r206={1d,1u} r207={1d,1u} r208={1d,1u} r209={1d,1u} r210={1d,1u} r211={1d,1u} r212={1d,1u} r213={1d,1u} r214={1d,2u} r215={1d,1u} r219={1d,2u} r220={1d,1u} r224={1d,2u} r225={1d,1u} r229={1d,1u} r230={1d,1u} r231={1d,1u} r232={1d,1u} r233={1d,1u} r234={1d,1u} r235={1d,1u} r236={1d,1u} r237={1d,1u} r238={1d,1u} r239={1d,1u} r240={1d,1u} r241={1d,1u} r242={1d,1u} r243={1d,1u} r244={1d,1u} r245={1d,1u} r246={1d,1u} r247={1d,1u} r248={1d,1u} r249={1d,1u} r250={1d,1u} r251={1d,1u} r252={1d,1u} r253={1d,1u} r254={1d,1u} r255={1d,1u} r256={1d,1u} r257={1d,1u} r258={1d,1u} r259={1d,1u} r260={1d,1u} r261={1d,1u} r262={1d,1u} r263={1d,1u} r264={1d,1u} r265={1d,1u} r266={1d,1u} r267={1d,1u} r268={1d,1u} r269={1d,1u} r270={1d,1u} r271={1d,1u} r272={1d,1u} r273={1d,1u} r274={1d,1u} r275={1d,1u} r276={1d,1u} r277={1d,1u} r278={1d,1u} r279={1d,1u} r280={1d,1u} r281={1d,1u} r282={1d,1u} r283={1d,1u} r284={1d,1u} r285={1d,1u} r286={1d,1u} r287={1d,1u} r288={1d,1u} r289={1d,1u} r290={1d,1u} r291={1d,1u} r292={1d,1u} r293={1d,1u} r294={1d,1u} r295={1d,1u} r296={1d,1u} r297={1d,1u} r298={1d,1u} r299={1d,1u} r300={1d,1u} r301={1d,1u} r302={1d,1u} r303={1d,1u} r304={1d,1u} r305={1d,1u} r306={1d,1u} r307={1d,1u} r308={1d,1u} r309={1d,1u} r310={1d,1u} r311={1d,1u} r312={1d,1u} r313={1d,1u} r314={1d,1u} r315={1d,1u} r316={1d,1u} r317={1d,1u} r318={1d,1u} 
;;    total ref usage 697{284d,399u,14e} in 265{265 regular + 0 call} insns.
(note 1 0 8 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 89 93 97
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 89 93 97
;; lr  def 	 17 [flags] 87 88 91 92 95 96 214 215 219 220 224 225 233 234 235 236 237 238 239 240 241 242 243
(note 8 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 8 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -88 [0xffffffffffffffa8])) [4 ss+0 S8 A64])
        (reg:DI 5 di [ ss ])) "../src/spline.f":264 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ ss ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [5 x+0 S8 A64])
        (reg:DI 4 si [ x ])) "../src/spline.f":264 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ x ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -104 [0xffffffffffffff98])) [5 xs+0 S8 A64])
        (reg:DI 1 dx [ xs ])) "../src/spline.f":264 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ xs ])
        (nil)))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -112 [0xffffffffffffff90])) [5 s+0 S8 A64])
        (reg:DI 2 cx [ s ])) "../src/spline.f":264 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [ s ])
        (nil)))
(insn 6 5 7 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -120 [0xffffffffffffff88])) [6 n+0 S8 A64])
        (reg:DI 37 r8 [ n ])) "../src/spline.f":264 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 37 r8 [ n ])
        (nil)))
(note 7 6 10 2 NOTE_INSN_FUNCTION_BEG)
(insn 10 7 11 2 (set (reg/f:DI 233)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -120 [0xffffffffffffff88])) [6 n+0 S8 A64])) "../src/spline.f":264 81 {*movdi_internal}
     (nil))
(insn 11 10 12 2 (set (reg:SI 87 [ _1 ])
        (mem:SI (reg/f:DI 233) [1 *n_135(D)+0 S4 A32])) "../src/spline.f":264 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 233)
        (nil)))
(insn 12 11 13 2 (set (reg:DI 234)
        (sign_extend:DI (reg:SI 87 [ _1 ]))) "../src/spline.f":264 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 87 [ _1 ])
        (nil)))
(insn 13 12 14 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [2 ubound.44+0 S8 A64])
        (reg:DI 234)) "../src/spline.f":264 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 234)
        (nil)))
(insn 14 13 16 2 (set (reg:DI 214 [ size.45_137 ])
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [2 ubound.44+0 S8 A64])) "../src/spline.f":264 81 {*movdi_internal}
     (nil))
(insn 16 14 15 2 (set (reg:DI 235)
        (const_int 0 [0])) "../src/spline.f":264 81 {*movdi_internal}
     (nil))
(insn 15 16 17 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 214 [ size.45_137 ])
            (const_int 0 [0]))) "../src/spline.f":264 4 {*cmpdi_ccno_1}
     (nil))
(insn 17 15 19 2 (set (reg:DI 215 [ size.45_138 ])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 214 [ size.45_137 ])
            (reg:DI 235))) "../src/spline.f":264 967 {*movdicc_noc}
     (expr_list:REG_DEAD (reg:DI 235)
        (expr_list:REG_DEAD (reg:DI 214 [ size.45_137 ])
            (expr_list:REG_DEAD (reg:CCGOC 17 flags)
                (nil)))))
(insn 19 17 20 2 (set (reg:DI 88 [ size.193_2 ])
        (reg:DI 215 [ size.45_138 ])) "../src/spline.f":264 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 215 [ size.45_138 ])
        (nil)))
(insn 20 19 21 2 (set (subreg:DI (reg:TI 89 [ _3 ]) 0)
        (reg:DI 88 [ size.193_2 ])) "../src/spline.f":264 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88 [ size.193_2 ])
        (nil)))
(insn 21 20 25 2 (set (subreg:DI (reg:TI 89 [ _3 ]) 8)
        (const_int 0 [0])) "../src/spline.f":264 81 {*movdi_internal}
     (expr_list:REG_UNUSED (reg:TI 89 [ _3 ])
        (nil)))
(insn 25 21 26 2 (set (reg/f:DI 236)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -120 [0xffffffffffffff88])) [6 n+0 S8 A64])) "../src/spline.f":264 81 {*movdi_internal}
     (nil))
(insn 26 25 27 2 (set (reg:SI 91 [ _5 ])
        (mem:SI (reg/f:DI 236) [1 *n_135(D)+0 S4 A32])) "../src/spline.f":264 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 236)
        (nil)))
(insn 27 26 28 2 (set (reg:DI 237)
        (sign_extend:DI (reg:SI 91 [ _5 ]))) "../src/spline.f":264 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 91 [ _5 ])
        (nil)))
(insn 28 27 29 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [2 ubound.46+0 S8 A64])
        (reg:DI 237)) "../src/spline.f":264 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 237)
        (nil)))
(insn 29 28 31 2 (set (reg:DI 219 [ size.47_143 ])
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [2 ubound.46+0 S8 A64])) "../src/spline.f":264 81 {*movdi_internal}
     (nil))
(insn 31 29 30 2 (set (reg:DI 238)
        (const_int 0 [0])) "../src/spline.f":264 81 {*movdi_internal}
     (nil))
(insn 30 31 32 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 219 [ size.47_143 ])
            (const_int 0 [0]))) "../src/spline.f":264 4 {*cmpdi_ccno_1}
     (nil))
(insn 32 30 34 2 (set (reg:DI 220 [ size.47_144 ])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 219 [ size.47_143 ])
            (reg:DI 238))) "../src/spline.f":264 967 {*movdicc_noc}
     (expr_list:REG_DEAD (reg:DI 238)
        (expr_list:REG_DEAD (reg:DI 219 [ size.47_143 ])
            (expr_list:REG_DEAD (reg:CCGOC 17 flags)
                (nil)))))
(insn 34 32 35 2 (set (reg:DI 92 [ size.195_6 ])
        (reg:DI 220 [ size.47_144 ])) "../src/spline.f":264 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 220 [ size.47_144 ])
        (nil)))
(insn 35 34 36 2 (set (subreg:DI (reg:TI 93 [ _7 ]) 0)
        (reg:DI 92 [ size.195_6 ])) "../src/spline.f":264 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 92 [ size.195_6 ])
        (nil)))
(insn 36 35 40 2 (set (subreg:DI (reg:TI 93 [ _7 ]) 8)
        (const_int 0 [0])) "../src/spline.f":264 81 {*movdi_internal}
     (expr_list:REG_UNUSED (reg:TI 93 [ _7 ])
        (nil)))
(insn 40 36 41 2 (set (reg/f:DI 239)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -120 [0xffffffffffffff88])) [6 n+0 S8 A64])) "../src/spline.f":264 81 {*movdi_internal}
     (nil))
(insn 41 40 42 2 (set (reg:SI 95 [ _9 ])
        (mem:SI (reg/f:DI 239) [1 *n_135(D)+0 S4 A32])) "../src/spline.f":264 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 239)
        (nil)))
(insn 42 41 43 2 (set (reg:DI 240)
        (sign_extend:DI (reg:SI 95 [ _9 ]))) "../src/spline.f":264 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 95 [ _9 ])
        (nil)))
(insn 43 42 44 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [2 ubound.48+0 S8 A64])
        (reg:DI 240)) "../src/spline.f":264 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 240)
        (nil)))
(insn 44 43 46 2 (set (reg:DI 224 [ size.49_149 ])
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [2 ubound.48+0 S8 A64])) "../src/spline.f":264 81 {*movdi_internal}
     (nil))
(insn 46 44 45 2 (set (reg:DI 241)
        (const_int 0 [0])) "../src/spline.f":264 81 {*movdi_internal}
     (nil))
(insn 45 46 47 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 224 [ size.49_149 ])
            (const_int 0 [0]))) "../src/spline.f":264 4 {*cmpdi_ccno_1}
     (nil))
(insn 47 45 49 2 (set (reg:DI 225 [ size.49_150 ])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 224 [ size.49_149 ])
            (reg:DI 241))) "../src/spline.f":264 967 {*movdicc_noc}
     (expr_list:REG_DEAD (reg:DI 241)
        (expr_list:REG_DEAD (reg:DI 224 [ size.49_149 ])
            (expr_list:REG_DEAD (reg:CCGOC 17 flags)
                (nil)))))
(insn 49 47 50 2 (set (reg:DI 96 [ size.197_10 ])
        (reg:DI 225 [ size.49_150 ])) "../src/spline.f":264 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 225 [ size.49_150 ])
        (nil)))
(insn 50 49 51 2 (set (subreg:DI (reg:TI 97 [ _11 ]) 0)
        (reg:DI 96 [ size.197_10 ])) "../src/spline.f":264 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 96 [ size.197_10 ])
        (nil)))
(insn 51 50 55 2 (set (subreg:DI (reg:TI 97 [ _11 ]) 8)
        (const_int 0 [0])) "../src/spline.f":264 81 {*movdi_internal}
     (expr_list:REG_UNUSED (reg:TI 97 [ _11 ])
        (nil)))
(insn 55 51 56 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 ilow+0 S4 A32])
        (const_int 1 [0x1])) "../src/spline.f":270 82 {*movsi_internal}
     (nil))
(insn 56 55 57 2 (set (reg/f:DI 242)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -120 [0xffffffffffffff88])) [6 n+0 S8 A64])) "../src/spline.f":271 81 {*movdi_internal}
     (nil))
(insn 57 56 58 2 (set (reg:SI 243)
        (mem:SI (reg/f:DI 242) [1 *n_135(D)+0 S4 A32])) "../src/spline.f":271 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 242)
        (nil)))
(insn 58 57 95 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
        (reg:SI 243)) "../src/spline.f":271 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 243)
        (nil)))
;;  succ:       3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 (FALLTHRU)
;;              7 [100.0%] 
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 99 244
(code_label 95 58 59 3 90 (nil) [1 uses])
(note 59 95 60 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 60 59 61 3 (set (reg:SI 244)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":273 82 {*movsi_internal}
     (nil))
(insn 61 60 62 3 (parallel [
            (set (reg:SI 99 [ _13 ])
                (minus:SI (reg:SI 244)
                    (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [1 ilow+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":273 273 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 244)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [1 ilow+0 S4 A32]))
                (nil)))))
(insn 62 61 63 3 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 99 [ _13 ])
            (const_int 1 [0x1]))) "../src/spline.f":273 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 99 [ _13 ])
        (nil)))
(jump_insn 63 62 64 3 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 318)
            (pc))) "../src/spline.f":273 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 318)
;;  succ:       12
;;              4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 100 101 102 103 104 245 246 247 248 249 250 251 252
(note 64 63 65 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 65 64 66 4 (set (reg:SI 245)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":275 82 {*movsi_internal}
     (nil))
(insn 66 65 67 4 (set (reg:SI 246)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 ilow+0 S4 A32])) "../src/spline.f":275 82 {*movsi_internal}
     (nil))
(insn 67 66 68 4 (parallel [
            (set (reg:SI 100 [ _14 ])
                (plus:SI (reg:SI 245)
                    (reg:SI 246)))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":275 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 246)
        (expr_list:REG_DEAD (reg:SI 245)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                                (const_int -8 [0xfffffffffffffff8])) [1 ilow+0 S4 A32]))
                    (nil))))))
(insn 68 67 69 4 (parallel [
            (set (reg:SI 247)
                (lshiftrt:SI (reg:SI 100 [ _14 ])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":275 544 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 69 68 70 4 (parallel [
            (set (reg:SI 248)
                (plus:SI (reg:SI 247)
                    (reg:SI 100 [ _14 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":275 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 247)
        (expr_list:REG_DEAD (reg:SI 100 [ _14 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 70 69 71 4 (parallel [
            (set (reg:SI 249)
                (ashiftrt:SI (reg:SI 248)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":275 545 {*ashrsi3_1}
     (expr_list:REG_DEAD (reg:SI 248)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 71 70 72 4 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -44 [0xffffffffffffffd4])) [1 imid+0 S4 A32])
        (reg:SI 249)) "../src/spline.f":275 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 249)
        (nil)))
(insn 72 71 73 4 (set (reg/f:DI 250)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -88 [0xffffffffffffffa8])) [4 ss+0 S8 A64])) "../src/spline.f":276 81 {*movdi_internal}
     (nil))
(insn 73 72 74 4 (set (reg:SF 101 [ _15 ])
        (mem:SF (reg/f:DI 250) [3 *ss_157(D)+0 S4 A32])) "../src/spline.f":276 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 250)
        (nil)))
(insn 74 73 75 4 (set (reg:SI 251)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -44 [0xffffffffffffffd4])) [1 imid+0 S4 A32])) "../src/spline.f":276 82 {*movsi_internal}
     (nil))
(insn 75 74 76 4 (set (reg:DI 102 [ _16 ])
        (sign_extend:DI (reg:SI 251))) "../src/spline.f":276 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 251)
        (nil)))
(insn 76 75 77 4 (parallel [
            (set (reg:DI 103 [ _17 ])
                (plus:DI (reg:DI 102 [ _16 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":276 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 102 [ _16 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 77 76 78 4 (set (reg/f:DI 252)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -112 [0xffffffffffffff90])) [5 s+0 S8 A64])) "../src/spline.f":276 81 {*movdi_internal}
     (nil))
(insn 78 77 79 4 (set (reg:SF 104 [ _18 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 103 [ _17 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 252)) [3 *s_158(D) S4 A32])) "../src/spline.f":276 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 252)
        (expr_list:REG_DEAD (reg:DI 103 [ _17 ])
            (nil))))
(insn 79 78 80 4 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 104 [ _18 ])
            (reg:SF 101 [ _15 ]))) "../src/spline.f":276 51 {*cmpiusf}
     (expr_list:REG_DEAD (reg:SF 104 [ _18 ])
        (expr_list:REG_DEAD (reg:SF 101 [ _15 ])
            (nil))))
(jump_insn 80 79 84 4 (set (pc)
        (if_then_else (unle (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 310)
            (pc))) "../src/spline.f":276 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil))
 -> 310)
;;  succ:       5 (FALLTHRU)
;;              6
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 253
(note 84 80 85 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 85 84 86 5 (set (reg:SI 253)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -44 [0xffffffffffffffd4])) [1 imid+0 S4 A32])) "../src/spline.f":277 82 {*movsi_internal}
     (nil))
(insn 86 85 311 5 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
        (reg:SI 253)) "../src/spline.f":277 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 253)
        (nil)))
(jump_insn 311 86 312 5 (set (pc)
        (label_ref 93)) 649 {jump}
     (nil)
 -> 93)
;;  succ:       7 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 312 311 310)
;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (RTL)
;;  pred:       4
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 254
(code_label 310 312 90 6 95 (nil) [1 uses])
(note 90 310 91 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 91 90 92 6 (set (reg:SI 254)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -44 [0xffffffffffffffd4])) [1 imid+0 S4 A32])) "../src/spline.f":279 82 {*movsi_internal}
     (nil))
(insn 92 91 93 6 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 ilow+0 S4 A32])
        (reg:SI 254)) "../src/spline.f":279 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 254)
        (nil)))
;;  succ:       7 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 12, flags: (RTL)
;;  pred:       6 (FALLTHRU)
;;              5 [100.0%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 93 92 94 7 89 (nil) [1 uses])
(note 94 93 313 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(jump_insn 313 94 314 7 (set (pc)
        (label_ref 95)) "../src/spline.f":281 649 {jump}
     (nil)
 -> 95)
;;  succ:       3 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 314 313 318)
;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 8, flags: (RTL)
;;  pred:       3
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 318 314 317 12 96 (nil) [1 uses])
(note 317 318 319 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 319 317 98 12 (const_int 0 [0]) "../src/spline.f":281 682 {nop}
     (nil))
;;  succ:       8 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 9, flags: (RTL)
;;  pred:       12 [100.0%]  (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 229 255 256
(code_label 98 319 99 8 86 (nil) [0 uses])
(note 99 98 100 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 100 99 101 8 (set (reg:SF 255)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC8") [flags 0x2]) [3  S4 A32])) "../src/spline.f":286 127 {*movsf_internal}
     (nil))
(insn 101 100 102 8 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -68 [0xffffffffffffffbc])) [3 __result_geval+0 S4 A32])
        (reg:SF 255)) "../src/spline.f":286 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 255)
        (nil)))
(insn 102 101 103 8 (set (reg:SI 256)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":287 82 {*movsi_internal}
     (nil))
(insn 103 102 104 8 (parallel [
            (set (reg:SI 229 [ _162 ])
                (plus:SI (reg:SI 256)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":287 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 256)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff]))
                (nil)))))
(insn 104 103 163 8 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])
        (const_int 2 [0x2])) "../src/spline.f":287 82 {*movsi_internal}
     (nil))
;;  succ:       9 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 229

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (RTL)
;;  pred:       8 (FALLTHRU)
;;              10 [100.0%] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 229
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 229
;; lr  def 	 17 [flags] 230
(code_label 163 104 105 9 92 (nil) [1 uses])
(note 105 163 106 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 106 105 107 9 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])
            (reg:SI 229 [ _162 ]))) "../src/spline.f":287 7 {*cmpsi_1}
     (nil))
(insn 107 106 108 9 (set (reg:QI 230 [ _164 ])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "../src/spline.f":287 613 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil)))
(insn 108 107 109 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 230 [ _164 ])
            (const_int 0 [0]))) "../src/spline.f":287 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 230 [ _164 ])
        (nil)))
(jump_insn 109 108 110 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 321)
            (pc))) "../src/spline.f":287 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 321)
;;  succ:       13
;;              10 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 229

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 13, flags: (RTL)
;;  pred:       9 (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 229
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273
(note 110 109 111 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 111 110 112 10 (set (reg:SI 257)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])) "../src/spline.f":288 82 {*movsi_internal}
     (nil))
(insn 112 111 113 10 (set (reg:DI 105 [ _19 ])
        (sign_extend:DI (reg:SI 257))) "../src/spline.f":288 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 257)
        (nil)))
(insn 113 112 114 10 (parallel [
            (set (reg:DI 106 [ _20 ])
                (plus:DI (reg:DI 105 [ _19 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":288 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 105 [ _19 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 114 113 115 10 (set (reg/f:DI 258)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -112 [0xffffffffffffff90])) [5 s+0 S8 A64])) "../src/spline.f":288 81 {*movdi_internal}
     (nil))
(insn 115 114 116 10 (set (reg:SF 107 [ _21 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 106 [ _20 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 258)) [3 *s_158(D) S4 A32])) "../src/spline.f":288 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 258)
        (expr_list:REG_DEAD (reg:DI 106 [ _20 ])
            (nil))))
(insn 116 115 117 10 (set (reg:SI 259)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])) "../src/spline.f":288 82 {*movsi_internal}
     (nil))
(insn 117 116 118 10 (parallel [
            (set (reg:SI 108 [ _22 ])
                (plus:SI (reg:SI 259)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":288 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 259)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff]))
                (nil)))))
(insn 118 117 119 10 (set (reg:DI 109 [ _23 ])
        (sign_extend:DI (reg:SI 108 [ _22 ]))) "../src/spline.f":288 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 108 [ _22 ])
        (nil)))
(insn 119 118 120 10 (parallel [
            (set (reg:DI 110 [ _24 ])
                (plus:DI (reg:DI 109 [ _23 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":288 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 109 [ _23 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 120 119 121 10 (set (reg/f:DI 260)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -112 [0xffffffffffffff90])) [5 s+0 S8 A64])) "../src/spline.f":288 81 {*movdi_internal}
     (nil))
(insn 121 120 122 10 (set (reg:SF 111 [ _25 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 110 [ _24 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 260)) [3 *s_158(D) S4 A32])) "../src/spline.f":288 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 260)
        (expr_list:REG_DEAD (reg:DI 110 [ _24 ])
            (nil))))
(insn 122 121 123 10 (set (reg:SF 261)
        (minus:SF (reg:SF 107 [ _21 ])
            (reg:SF 111 [ _25 ]))) "../src/spline.f":288 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 111 [ _25 ])
        (expr_list:REG_DEAD (reg:SF 107 [ _21 ])
            (nil))))
(insn 123 122 124 10 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [3 ds+0 S4 A32])
        (reg:SF 261)) "../src/spline.f":288 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 261)
        (nil)))
(insn 124 123 125 10 (set (reg:SI 262)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])) "../src/spline.f":291 82 {*movsi_internal}
     (nil))
(insn 125 124 126 10 (set (reg:DI 112 [ _26 ])
        (sign_extend:DI (reg:SI 262))) "../src/spline.f":291 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 262)
        (nil)))
(insn 126 125 127 10 (parallel [
            (set (reg:DI 113 [ _27 ])
                (plus:DI (reg:DI 112 [ _26 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":291 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 112 [ _26 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 127 126 128 10 (set (reg/f:DI 263)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [5 x+0 S8 A64])) "../src/spline.f":291 81 {*movdi_internal}
     (nil))
(insn 128 127 129 10 (set (reg:SF 114 [ _28 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 113 [ _27 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 263)) [3 *x_166(D) S4 A32])) "../src/spline.f":291 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 263)
        (expr_list:REG_DEAD (reg:DI 113 [ _27 ])
            (nil))))
(insn 129 128 130 10 (set (reg:SI 264)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])) "../src/spline.f":291 82 {*movsi_internal}
     (nil))
(insn 130 129 131 10 (parallel [
            (set (reg:SI 115 [ _29 ])
                (plus:SI (reg:SI 264)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":291 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 264)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff]))
                (nil)))))
(insn 131 130 132 10 (set (reg:DI 116 [ _30 ])
        (sign_extend:DI (reg:SI 115 [ _29 ]))) "../src/spline.f":291 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 115 [ _29 ])
        (nil)))
(insn 132 131 133 10 (parallel [
            (set (reg:DI 117 [ _31 ])
                (plus:DI (reg:DI 116 [ _30 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":291 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 116 [ _30 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 133 132 134 10 (set (reg/f:DI 265)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [5 x+0 S8 A64])) "../src/spline.f":291 81 {*movdi_internal}
     (nil))
(insn 134 133 135 10 (set (reg:SF 118 [ _32 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 117 [ _31 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 265)) [3 *x_166(D) S4 A32])) "../src/spline.f":291 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 265)
        (expr_list:REG_DEAD (reg:DI 117 [ _31 ])
            (nil))))
(insn 135 134 136 10 (set (reg:SF 119 [ _33 ])
        (plus:SF (reg:SF 114 [ _28 ])
            (reg:SF 118 [ _32 ]))) "../src/spline.f":291 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 118 [ _32 ])
        (expr_list:REG_DEAD (reg:SF 114 [ _28 ])
            (nil))))
(insn 136 135 137 10 (set (reg:SF 120 [ _34 ])
        (reg:SF 119 [ _33 ])) "../src/spline.f":291 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 119 [ _33 ])
        (nil)))
(insn 137 136 138 10 (set (reg:SF 266)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC10") [flags 0x2]) [3  S4 A32])) "../src/spline.f":291 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 5.0e-1 [0x0.8p+0])
        (nil)))
(insn 138 137 139 10 (set (reg:SF 121 [ _35 ])
        (mult:SF (reg:SF 120 [ _34 ])
            (reg:SF 266))) "../src/spline.f":291 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 266)
        (expr_list:REG_DEAD (reg:SF 120 [ _34 ])
            (nil))))
(insn 139 138 140 10 (set (reg:SI 267)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])) "../src/spline.f":291 82 {*movsi_internal}
     (nil))
(insn 140 139 141 10 (parallel [
            (set (reg:SI 122 [ _36 ])
                (plus:SI (reg:SI 267)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":291 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 267)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff]))
                (nil)))))
(insn 141 140 142 10 (set (reg:DI 123 [ _37 ])
        (sign_extend:DI (reg:SI 122 [ _36 ]))) "../src/spline.f":291 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 122 [ _36 ])
        (nil)))
(insn 142 141 143 10 (parallel [
            (set (reg:DI 124 [ _38 ])
                (plus:DI (reg:DI 123 [ _37 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":291 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 123 [ _37 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 143 142 144 10 (set (reg/f:DI 268)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -104 [0xffffffffffffff98])) [5 xs+0 S8 A64])) "../src/spline.f":291 81 {*movdi_internal}
     (nil))
(insn 144 143 145 10 (set (reg:SF 125 [ _39 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 124 [ _38 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 268)) [3 *xs_167(D) S4 A32])) "../src/spline.f":291 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 268)
        (expr_list:REG_DEAD (reg:DI 124 [ _38 ])
            (nil))))
(insn 145 144 146 10 (set (reg:SI 269)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])) "../src/spline.f":291 82 {*movsi_internal}
     (nil))
(insn 146 145 147 10 (set (reg:DI 126 [ _40 ])
        (sign_extend:DI (reg:SI 269))) "../src/spline.f":291 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 269)
        (nil)))
(insn 147 146 148 10 (parallel [
            (set (reg:DI 127 [ _41 ])
                (plus:DI (reg:DI 126 [ _40 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":291 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 126 [ _40 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 148 147 149 10 (set (reg/f:DI 270)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -104 [0xffffffffffffff98])) [5 xs+0 S8 A64])) "../src/spline.f":291 81 {*movdi_internal}
     (nil))
(insn 149 148 150 10 (set (reg:SF 128 [ _42 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 127 [ _41 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 270)) [3 *xs_167(D) S4 A32])) "../src/spline.f":291 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 270)
        (expr_list:REG_DEAD (reg:DI 127 [ _41 ])
            (nil))))
(insn 150 149 151 10 (set (reg:SF 129 [ _43 ])
        (minus:SF (reg:SF 125 [ _39 ])
            (reg:SF 128 [ _42 ]))) "../src/spline.f":291 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 128 [ _42 ])
        (expr_list:REG_DEAD (reg:SF 125 [ _39 ])
            (nil))))
(insn 151 150 152 10 (set (reg:SF 130 [ _44 ])
        (reg:SF 129 [ _43 ])) "../src/spline.f":291 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 129 [ _43 ])
        (nil)))
(insn 152 151 153 10 (set (reg:SF 131 [ _45 ])
        (mult:SF (reg:SF 130 [ _44 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -48 [0xffffffffffffffd0])) [3 ds+0 S4 A32]))) "../src/spline.f":291 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 130 [ _44 ])
        (nil)))
(insn 153 152 154 10 (set (reg:SF 271)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC11") [flags 0x2]) [3  S4 A32])) "../src/spline.f":291 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.2e+1 [0x0.cp+4])
        (nil)))
(insn 154 153 155 10 (set (reg:SF 132 [ _46 ])
        (div:SF (reg:SF 131 [ _45 ])
            (reg:SF 271))) "../src/spline.f":291 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 271)
        (expr_list:REG_DEAD (reg:SF 131 [ _45 ])
            (nil))))
(insn 155 154 156 10 (set (reg:SF 272)
        (plus:SF (reg:SF 121 [ _35 ])
            (reg:SF 132 [ _46 ]))) "../src/spline.f":291 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 132 [ _46 ])
        (expr_list:REG_DEAD (reg:SF 121 [ _35 ])
            (nil))))
(insn 156 155 157 10 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -52 [0xffffffffffffffcc])) [3 dgev+0 S4 A32])
        (reg:SF 272)) "../src/spline.f":291 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 272)
        (nil)))
(insn 157 156 158 10 (set (reg:SF 273)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -52 [0xffffffffffffffcc])) [3 dgev+0 S4 A32])) "../src/spline.f":293 127 {*movsf_internal}
     (nil))
(insn 158 157 159 10 (set (reg:SF 133 [ _47 ])
        (mult:SF (reg:SF 273)
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -48 [0xffffffffffffffd0])) [3 ds+0 S4 A32]))) "../src/spline.f":293 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 273)
        (nil)))
(insn 159 158 160 10 (set (reg:SF 134 [ __result_geval.199_48 ])
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -68 [0xffffffffffffffbc])) [3 __result_geval+0 S4 A32])) "../src/spline.f":293 127 {*movsf_internal}
     (nil))
(insn 160 159 161 10 (set (reg:SF 135 [ _49 ])
        (plus:SF (reg:SF 133 [ _47 ])
            (reg:SF 134 [ __result_geval.199_48 ]))) "../src/spline.f":293 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 134 [ __result_geval.199_48 ])
        (expr_list:REG_DEAD (reg:SF 133 [ _47 ])
            (nil))))
(insn 161 160 162 10 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -68 [0xffffffffffffffbc])) [3 __result_geval+0 S4 A32])
        (reg:SF 135 [ _49 ])) "../src/spline.f":293 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 135 [ _49 ])
        (nil)))
(insn 162 161 315 10 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":287 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 315 162 316 10 (set (pc)
        (label_ref 163)) "../src/spline.f":287 649 {jump}
     (nil)
 -> 163)
;;  succ:       9 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 229

(barrier 316 315 321)
;; basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 11, flags: (RTL)
;;  pred:       9
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 321 316 320 13 97 (nil) [1 uses])
(note 320 321 322 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 322 320 166 13 (const_int 0 [0]) "../src/spline.f":293 682 {nop}
     (nil))
;;  succ:       11 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 13, next block 1, flags: (RTL)
;;  pred:       13 [100.0%]  (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 21 [xmm
(code_label 166 322 167 11 91 (nil) [0 uses])
(note 167 166 168 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 168 167 169 11 (set (reg:SI 274)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":297 82 {*movsi_internal}
     (nil))
(insn 169 168 170 11 (set (reg:DI 136 [ _50 ])
        (sign_extend:DI (reg:SI 274))) "../src/spline.f":297 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 274)
        (nil)))
(insn 170 169 171 11 (parallel [
            (set (reg:DI 137 [ _51 ])
                (plus:DI (reg:DI 136 [ _50 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":297 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 136 [ _50 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 171 170 172 11 (set (reg/f:DI 275)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -112 [0xffffffffffffff90])) [5 s+0 S8 A64])) "../src/spline.f":297 81 {*movdi_internal}
     (nil))
(insn 172 171 173 11 (set (reg:SF 138 [ _52 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 137 [ _51 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 275)) [3 *s_158(D) S4 A32])) "../src/spline.f":297 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 275)
        (expr_list:REG_DEAD (reg:DI 137 [ _51 ])
            (nil))))
(insn 173 172 174 11 (set (reg:SI 276)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":297 82 {*movsi_internal}
     (nil))
(insn 174 173 175 11 (parallel [
            (set (reg:SI 139 [ _53 ])
                (plus:SI (reg:SI 276)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":297 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 276)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff]))
                (nil)))))
(insn 175 174 176 11 (set (reg:DI 140 [ _54 ])
        (sign_extend:DI (reg:SI 139 [ _53 ]))) "../src/spline.f":297 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 139 [ _53 ])
        (nil)))
(insn 176 175 177 11 (parallel [
            (set (reg:DI 141 [ _55 ])
                (plus:DI (reg:DI 140 [ _54 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":297 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 140 [ _54 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 177 176 178 11 (set (reg/f:DI 277)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -112 [0xffffffffffffff90])) [5 s+0 S8 A64])) "../src/spline.f":297 81 {*movdi_internal}
     (nil))
(insn 178 177 179 11 (set (reg:SF 142 [ _56 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 141 [ _55 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 277)) [3 *s_158(D) S4 A32])) "../src/spline.f":297 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 277)
        (expr_list:REG_DEAD (reg:DI 141 [ _55 ])
            (nil))))
(insn 179 178 180 11 (set (reg:SF 278)
        (minus:SF (reg:SF 138 [ _52 ])
            (reg:SF 142 [ _56 ]))) "../src/spline.f":297 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 142 [ _56 ])
        (expr_list:REG_DEAD (reg:SF 138 [ _52 ])
            (nil))))
(insn 180 179 181 11 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [3 ds+0 S4 A32])
        (reg:SF 278)) "../src/spline.f":297 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 278)
        (nil)))
(insn 181 180 182 11 (set (reg/f:DI 279)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -88 [0xffffffffffffffa8])) [4 ss+0 S8 A64])) "../src/spline.f":298 81 {*movdi_internal}
     (nil))
(insn 182 181 183 11 (set (reg:SF 143 [ _57 ])
        (mem:SF (reg/f:DI 279) [3 *ss_157(D)+0 S4 A32])) "../src/spline.f":298 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 279)
        (nil)))
(insn 183 182 184 11 (set (reg:SI 280)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":298 82 {*movsi_internal}
     (nil))
(insn 184 183 185 11 (parallel [
            (set (reg:SI 144 [ _58 ])
                (plus:SI (reg:SI 280)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":298 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 280)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff]))
                (nil)))))
(insn 185 184 186 11 (set (reg:DI 145 [ _59 ])
        (sign_extend:DI (reg:SI 144 [ _58 ]))) "../src/spline.f":298 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 144 [ _58 ])
        (nil)))
(insn 186 185 187 11 (parallel [
            (set (reg:DI 146 [ _60 ])
                (plus:DI (reg:DI 145 [ _59 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":298 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 145 [ _59 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 187 186 188 11 (set (reg/f:DI 281)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -112 [0xffffffffffffff90])) [5 s+0 S8 A64])) "../src/spline.f":298 81 {*movdi_internal}
     (nil))
(insn 188 187 189 11 (set (reg:SF 147 [ _61 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 146 [ _60 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 281)) [3 *s_158(D) S4 A32])) "../src/spline.f":298 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 281)
        (expr_list:REG_DEAD (reg:DI 146 [ _60 ])
            (nil))))
(insn 189 188 190 11 (set (reg:SF 148 [ _62 ])
        (minus:SF (reg:SF 143 [ _57 ])
            (reg:SF 147 [ _61 ]))) "../src/spline.f":298 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 147 [ _61 ])
        (expr_list:REG_DEAD (reg:SF 143 [ _57 ])
            (nil))))
(insn 190 189 191 11 (set (reg:SF 149 [ _63 ])
        (reg:SF 148 [ _62 ])) "../src/spline.f":298 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 148 [ _62 ])
        (nil)))
(insn 191 190 192 11 (set (reg:SF 282)
        (div:SF (reg:SF 149 [ _63 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -48 [0xffffffffffffffd0])) [3 ds+0 S4 A32]))) "../src/spline.f":298 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 149 [ _63 ])
        (nil)))
(insn 192 191 193 11 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [3 t+0 S4 A32])
        (reg:SF 282)) "../src/spline.f":298 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 282)
        (nil)))
(insn 193 192 194 11 (set (reg:SI 283)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":299 82 {*movsi_internal}
     (nil))
(insn 194 193 195 11 (parallel [
            (set (reg:SI 150 [ _64 ])
                (plus:SI (reg:SI 283)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":299 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 283)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff]))
                (nil)))))
(insn 195 194 196 11 (set (reg:DI 151 [ _65 ])
        (sign_extend:DI (reg:SI 150 [ _64 ]))) "../src/spline.f":299 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 150 [ _64 ])
        (nil)))
(insn 196 195 197 11 (parallel [
            (set (reg:DI 152 [ _66 ])
                (plus:DI (reg:DI 151 [ _65 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":299 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 151 [ _65 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 197 196 198 11 (set (reg/f:DI 284)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -104 [0xffffffffffffff98])) [5 xs+0 S8 A64])) "../src/spline.f":299 81 {*movdi_internal}
     (nil))
(insn 198 197 199 11 (set (reg:SF 153 [ _67 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 152 [ _66 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 284)) [3 *xs_167(D) S4 A32])) "../src/spline.f":299 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 284)
        (expr_list:REG_DEAD (reg:DI 152 [ _66 ])
            (nil))))
(insn 199 198 200 11 (set (reg:SF 154 [ _68 ])
        (mult:SF (reg:SF 153 [ _67 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -48 [0xffffffffffffffd0])) [3 ds+0 S4 A32]))) "../src/spline.f":299 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 153 [ _67 ])
        (nil)))
(insn 200 199 201 11 (set (reg:SI 285)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":299 82 {*movsi_internal}
     (nil))
(insn 201 200 202 11 (set (reg:DI 155 [ _69 ])
        (sign_extend:DI (reg:SI 285))) "../src/spline.f":299 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 285)
        (nil)))
(insn 202 201 203 11 (parallel [
            (set (reg:DI 156 [ _70 ])
                (plus:DI (reg:DI 155 [ _69 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":299 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 155 [ _69 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 203 202 204 11 (set (reg/f:DI 286)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [5 x+0 S8 A64])) "../src/spline.f":299 81 {*movdi_internal}
     (nil))
(insn 204 203 205 11 (set (reg:SF 157 [ _71 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 156 [ _70 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 286)) [3 *x_166(D) S4 A32])) "../src/spline.f":299 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 286)
        (expr_list:REG_DEAD (reg:DI 156 [ _70 ])
            (nil))))
(insn 205 204 206 11 (set (reg:SF 158 [ _72 ])
        (minus:SF (reg:SF 154 [ _68 ])
            (reg:SF 157 [ _71 ]))) "../src/spline.f":299 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 157 [ _71 ])
        (expr_list:REG_DEAD (reg:SF 154 [ _68 ])
            (nil))))
(insn 206 205 207 11 (set (reg:SI 287)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":299 82 {*movsi_internal}
     (nil))
(insn 207 206 208 11 (parallel [
            (set (reg:SI 159 [ _73 ])
                (plus:SI (reg:SI 287)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":299 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 287)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff]))
                (nil)))))
(insn 208 207 209 11 (set (reg:DI 160 [ _74 ])
        (sign_extend:DI (reg:SI 159 [ _73 ]))) "../src/spline.f":299 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 159 [ _73 ])
        (nil)))
(insn 209 208 210 11 (parallel [
            (set (reg:DI 161 [ _75 ])
                (plus:DI (reg:DI 160 [ _74 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":299 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 160 [ _74 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 210 209 211 11 (set (reg/f:DI 288)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [5 x+0 S8 A64])) "../src/spline.f":299 81 {*movdi_internal}
     (nil))
(insn 211 210 212 11 (set (reg:SF 162 [ _76 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 161 [ _75 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 288)) [3 *x_166(D) S4 A32])) "../src/spline.f":299 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 288)
        (expr_list:REG_DEAD (reg:DI 161 [ _75 ])
            (nil))))
(insn 212 211 213 11 (set (reg:SF 289)
        (plus:SF (reg:SF 158 [ _72 ])
            (reg:SF 162 [ _76 ]))) "../src/spline.f":299 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 162 [ _76 ])
        (expr_list:REG_DEAD (reg:SF 158 [ _72 ])
            (nil))))
(insn 213 212 214 11 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -60 [0xffffffffffffffc4])) [3 cx1+0 S4 A32])
        (reg:SF 289)) "../src/spline.f":299 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 289)
        (nil)))
(insn 214 213 215 11 (set (reg:SI 290)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":300 82 {*movsi_internal}
     (nil))
(insn 215 214 216 11 (set (reg:DI 163 [ _77 ])
        (sign_extend:DI (reg:SI 290))) "../src/spline.f":300 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 290)
        (nil)))
(insn 216 215 217 11 (parallel [
            (set (reg:DI 164 [ _78 ])
                (plus:DI (reg:DI 163 [ _77 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":300 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 163 [ _77 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 217 216 218 11 (set (reg/f:DI 291)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -104 [0xffffffffffffff98])) [5 xs+0 S8 A64])) "../src/spline.f":300 81 {*movdi_internal}
     (nil))
(insn 218 217 219 11 (set (reg:SF 165 [ _79 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 164 [ _78 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 291)) [3 *xs_167(D) S4 A32])) "../src/spline.f":300 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 291)
        (expr_list:REG_DEAD (reg:DI 164 [ _78 ])
            (nil))))
(insn 219 218 220 11 (set (reg:SF 166 [ _80 ])
        (mult:SF (reg:SF 165 [ _79 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -48 [0xffffffffffffffd0])) [3 ds+0 S4 A32]))) "../src/spline.f":300 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 165 [ _79 ])
        (nil)))
(insn 220 219 221 11 (set (reg:SI 292)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":300 82 {*movsi_internal}
     (nil))
(insn 221 220 222 11 (set (reg:DI 167 [ _81 ])
        (sign_extend:DI (reg:SI 292))) "../src/spline.f":300 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 292)
        (nil)))
(insn 222 221 223 11 (parallel [
            (set (reg:DI 168 [ _82 ])
                (plus:DI (reg:DI 167 [ _81 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":300 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 167 [ _81 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 223 222 224 11 (set (reg/f:DI 293)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [5 x+0 S8 A64])) "../src/spline.f":300 81 {*movdi_internal}
     (nil))
(insn 224 223 225 11 (set (reg:SF 169 [ _83 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 168 [ _82 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 293)) [3 *x_166(D) S4 A32])) "../src/spline.f":300 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 293)
        (expr_list:REG_DEAD (reg:DI 168 [ _82 ])
            (nil))))
(insn 225 224 226 11 (set (reg:SF 170 [ _84 ])
        (minus:SF (reg:SF 166 [ _80 ])
            (reg:SF 169 [ _83 ]))) "../src/spline.f":300 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 169 [ _83 ])
        (expr_list:REG_DEAD (reg:SF 166 [ _80 ])
            (nil))))
(insn 226 225 227 11 (set (reg:SI 294)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":300 82 {*movsi_internal}
     (nil))
(insn 227 226 228 11 (parallel [
            (set (reg:SI 171 [ _85 ])
                (plus:SI (reg:SI 294)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":300 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 294)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff]))
                (nil)))))
(insn 228 227 229 11 (set (reg:DI 172 [ _86 ])
        (sign_extend:DI (reg:SI 171 [ _85 ]))) "../src/spline.f":300 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 171 [ _85 ])
        (nil)))
(insn 229 228 230 11 (parallel [
            (set (reg:DI 173 [ _87 ])
                (plus:DI (reg:DI 172 [ _86 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":300 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 172 [ _86 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 230 229 231 11 (set (reg/f:DI 295)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [5 x+0 S8 A64])) "../src/spline.f":300 81 {*movdi_internal}
     (nil))
(insn 231 230 232 11 (set (reg:SF 174 [ _88 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 173 [ _87 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 295)) [3 *x_166(D) S4 A32])) "../src/spline.f":300 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 295)
        (expr_list:REG_DEAD (reg:DI 173 [ _87 ])
            (nil))))
(insn 232 231 233 11 (set (reg:SF 296)
        (plus:SF (reg:SF 170 [ _84 ])
            (reg:SF 174 [ _88 ]))) "../src/spline.f":300 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 174 [ _88 ])
        (expr_list:REG_DEAD (reg:SF 170 [ _84 ])
            (nil))))
(insn 233 232 234 11 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [3 cx2+0 S4 A32])
        (reg:SF 296)) "../src/spline.f":300 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 296)
        (nil)))
(insn 234 233 235 11 (set (reg:SF 297)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [3 t+0 S4 A32])) "../src/spline.f":305 127 {*movsf_internal}
     (nil))
(insn 235 234 236 11 (set (reg:SF 298)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC10") [flags 0x2]) [3  S4 A32])) "../src/spline.f":305 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 5.0e-1 [0x0.8p+0])
        (nil)))
(insn 236 235 237 11 (set (reg:SF 175 [ _89 ])
        (mult:SF (reg:SF 297)
            (reg:SF 298))) "../src/spline.f":305 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 298)
        (expr_list:REG_DEAD (reg:SF 297)
            (nil))))
(insn 237 236 238 11 (set (reg:SF 176 [ _90 ])
        (mult:SF (reg:SF 175 [ _89 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -56 [0xffffffffffffffc8])) [3 t+0 S4 A32]))) "../src/spline.f":305 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 175 [ _89 ])
        (nil)))
(insn 238 237 239 11 (set (reg:SI 299)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":305 82 {*movsi_internal}
     (nil))
(insn 239 238 240 11 (set (reg:DI 177 [ _91 ])
        (sign_extend:DI (reg:SI 299))) "../src/spline.f":305 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 299)
        (nil)))
(insn 240 239 241 11 (parallel [
            (set (reg:DI 178 [ _92 ])
                (plus:DI (reg:DI 177 [ _91 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":305 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 177 [ _91 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 241 240 242 11 (set (reg/f:DI 300)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [5 x+0 S8 A64])) "../src/spline.f":305 81 {*movdi_internal}
     (nil))
(insn 242 241 243 11 (set (reg:SF 179 [ _93 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 178 [ _92 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 300)) [3 *x_166(D) S4 A32])) "../src/spline.f":305 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 300)
        (expr_list:REG_DEAD (reg:DI 178 [ _92 ])
            (nil))))
(insn 243 242 244 11 (set (reg:SF 180 [ _94 ])
        (mult:SF (reg:SF 176 [ _90 ])
            (reg:SF 179 [ _93 ]))) "../src/spline.f":305 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 179 [ _93 ])
        (expr_list:REG_DEAD (reg:SF 176 [ _90 ])
            (nil))))
(insn 244 243 245 11 (set (reg:SF 301)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [3 t+0 S4 A32])) "../src/spline.f":305 127 {*movsf_internal}
     (nil))
(insn 245 244 246 11 (set (reg:SF 302)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC10") [flags 0x2]) [3  S4 A32])) "../src/spline.f":305 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 5.0e-1 [0x0.8p+0])
        (nil)))
(insn 246 245 247 11 (set (reg:SF 181 [ _95 ])
        (mult:SF (reg:SF 301)
            (reg:SF 302))) "../src/spline.f":305 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 302)
        (expr_list:REG_DEAD (reg:SF 301)
            (nil))))
(insn 247 246 248 11 (set (reg:SF 182 [ _96 ])
        (mult:SF (reg:SF 181 [ _95 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -56 [0xffffffffffffffc8])) [3 t+0 S4 A32]))) "../src/spline.f":305 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 181 [ _95 ])
        (nil)))
(insn 248 247 249 11 (set (reg:SF 303)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [3 t+0 S4 A32])) "../src/spline.f":305 127 {*movsf_internal}
     (nil))
(insn 249 248 250 11 (set (reg:SF 183 [ _97 ])
        (minus:SF (reg:SF 303)
            (reg:SF 182 [ _96 ]))) "../src/spline.f":305 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 303)
        (expr_list:REG_DEAD (reg:SF 182 [ _96 ])
            (nil))))
(insn 250 249 251 11 (set (reg:SF 184 [ _98 ])
        (reg:SF 183 [ _97 ])) "../src/spline.f":305 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 183 [ _97 ])
        (nil)))
(insn 251 250 252 11 (set (reg:SI 304)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":305 82 {*movsi_internal}
     (nil))
(insn 252 251 253 11 (parallel [
            (set (reg:SI 185 [ _99 ])
                (plus:SI (reg:SI 304)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":305 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 304)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff]))
                (nil)))))
(insn 253 252 254 11 (set (reg:DI 186 [ _100 ])
        (sign_extend:DI (reg:SI 185 [ _99 ]))) "../src/spline.f":305 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 185 [ _99 ])
        (nil)))
(insn 254 253 255 11 (parallel [
            (set (reg:DI 187 [ _101 ])
                (plus:DI (reg:DI 186 [ _100 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":305 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 186 [ _100 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 255 254 256 11 (set (reg/f:DI 305)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [5 x+0 S8 A64])) "../src/spline.f":305 81 {*movdi_internal}
     (nil))
(insn 256 255 257 11 (set (reg:SF 188 [ _102 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 187 [ _101 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 305)) [3 *x_166(D) S4 A32])) "../src/spline.f":305 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 305)
        (expr_list:REG_DEAD (reg:DI 187 [ _101 ])
            (nil))))
(insn 257 256 258 11 (set (reg:SF 189 [ _103 ])
        (mult:SF (reg:SF 184 [ _98 ])
            (reg:SF 188 [ _102 ]))) "../src/spline.f":305 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 188 [ _102 ])
        (expr_list:REG_DEAD (reg:SF 184 [ _98 ])
            (nil))))
(insn 258 257 259 11 (set (reg:SF 190 [ _104 ])
        (plus:SF (reg:SF 180 [ _94 ])
            (reg:SF 189 [ _103 ]))) "../src/spline.f":305 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 189 [ _103 ])
        (expr_list:REG_DEAD (reg:SF 180 [ _94 ])
            (nil))))
(insn 259 258 260 11 (set (reg:SF 306)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [3 t+0 S4 A32])) "../src/spline.f":305 127 {*movsf_internal}
     (nil))
(insn 260 259 261 11 (set (reg:SF 307)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC12") [flags 0x2]) [3  S4 A32])) "../src/spline.f":305 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 8.0e+0 [0x0.8p+4])
        (nil)))
(insn 261 260 262 11 (set (reg:SF 191 [ _105 ])
        (mult:SF (reg:SF 306)
            (reg:SF 307))) "../src/spline.f":305 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 307)
        (expr_list:REG_DEAD (reg:SF 306)
            (nil))))
(insn 262 261 263 11 (set (reg:SF 308)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC1") [flags 0x2]) [3  S4 A32])) "../src/spline.f":305 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 6.0e+0 [0x0.cp+3])
        (nil)))
(insn 263 262 264 11 (set (reg:SF 192 [ _106 ])
        (minus:SF (reg:SF 308)
            (reg:SF 191 [ _105 ]))) "../src/spline.f":305 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 308)
        (expr_list:REG_DEAD (reg:SF 191 [ _105 ])
            (nil))))
(insn 264 263 265 11 (set (reg:SF 309)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [3 t+0 S4 A32])) "../src/spline.f":305 127 {*movsf_internal}
     (nil))
(insn 265 264 266 11 (set (reg:SF 310)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC0") [flags 0x2]) [3  S4 A32])) "../src/spline.f":305 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 3.0e+0 [0x0.cp+2])
        (nil)))
(insn 266 265 267 11 (set (reg:SF 193 [ _107 ])
        (mult:SF (reg:SF 309)
            (reg:SF 310))) "../src/spline.f":305 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 310)
        (expr_list:REG_DEAD (reg:SF 309)
            (nil))))
(insn 267 266 268 11 (set (reg:SF 194 [ _108 ])
        (mult:SF (reg:SF 193 [ _107 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -56 [0xffffffffffffffc8])) [3 t+0 S4 A32]))) "../src/spline.f":305 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 193 [ _107 ])
        (nil)))
(insn 268 267 269 11 (set (reg:SF 195 [ _109 ])
        (plus:SF (reg:SF 192 [ _106 ])
            (reg:SF 194 [ _108 ]))) "../src/spline.f":305 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 194 [ _108 ])
        (expr_list:REG_DEAD (reg:SF 192 [ _106 ])
            (nil))))
(insn 269 268 270 11 (set (reg:SF 196 [ _110 ])
        (reg:SF 195 [ _109 ])) "../src/spline.f":305 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 195 [ _109 ])
        (nil)))
(insn 270 269 271 11 (set (reg:SF 197 [ _111 ])
        (mult:SF (reg:SF 196 [ _110 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -56 [0xffffffffffffffc8])) [3 t+0 S4 A32]))) "../src/spline.f":305 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 196 [ _110 ])
        (nil)))
(insn 271 270 272 11 (set (reg:SF 198 [ _112 ])
        (mult:SF (reg:SF 197 [ _111 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -56 [0xffffffffffffffc8])) [3 t+0 S4 A32]))) "../src/spline.f":305 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 197 [ _111 ])
        (nil)))
(insn 272 271 273 11 (set (reg:SF 199 [ _113 ])
        (mult:SF (reg:SF 198 [ _112 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -60 [0xffffffffffffffc4])) [3 cx1+0 S4 A32]))) "../src/spline.f":305 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 198 [ _112 ])
        (nil)))
(insn 273 272 274 11 (set (reg:SF 311)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC11") [flags 0x2]) [3  S4 A32])) "../src/spline.f":305 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.2e+1 [0x0.cp+4])
        (nil)))
(insn 274 273 275 11 (set (reg:SF 200 [ _114 ])
        (div:SF (reg:SF 199 [ _113 ])
            (reg:SF 311))) "../src/spline.f":305 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 311)
        (expr_list:REG_DEAD (reg:SF 199 [ _113 ])
            (nil))))
(insn 275 274 276 11 (set (reg:SF 201 [ _115 ])
        (plus:SF (reg:SF 190 [ _104 ])
            (reg:SF 200 [ _114 ]))) "../src/spline.f":305 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 200 [ _114 ])
        (expr_list:REG_DEAD (reg:SF 190 [ _104 ])
            (nil))))
(insn 276 275 277 11 (set (reg:SF 312)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [3 t+0 S4 A32])) "../src/spline.f":305 127 {*movsf_internal}
     (nil))
(insn 277 276 278 11 (set (reg:SF 313)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC0") [flags 0x2]) [3  S4 A32])) "../src/spline.f":305 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 3.0e+0 [0x0.cp+2])
        (nil)))
(insn 278 277 279 11 (set (reg:SF 202 [ _116 ])
        (mult:SF (reg:SF 312)
            (reg:SF 313))) "../src/spline.f":305 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 313)
        (expr_list:REG_DEAD (reg:SF 312)
            (nil))))
(insn 279 278 280 11 (set (reg:SF 203 [ _117 ])
        (mult:SF (reg:SF 202 [ _116 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -56 [0xffffffffffffffc8])) [3 t+0 S4 A32]))) "../src/spline.f":305 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 202 [ _116 ])
        (nil)))
(insn 280 279 281 11 (set (reg:SF 314)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [3 t+0 S4 A32])) "../src/spline.f":305 127 {*movsf_internal}
     (nil))
(insn 281 280 282 11 (set (reg:SF 315)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC2") [flags 0x2]) [3  S4 A32])) "../src/spline.f":305 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 4.0e+0 [0x0.8p+3])
        (nil)))
(insn 282 281 283 11 (set (reg:SF 204 [ _118 ])
        (mult:SF (reg:SF 314)
            (reg:SF 315))) "../src/spline.f":305 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 315)
        (expr_list:REG_DEAD (reg:SF 314)
            (nil))))
(insn 283 282 284 11 (set (reg:SF 205 [ _119 ])
        (minus:SF (reg:SF 203 [ _117 ])
            (reg:SF 204 [ _118 ]))) "../src/spline.f":305 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 204 [ _118 ])
        (expr_list:REG_DEAD (reg:SF 203 [ _117 ])
            (nil))))
(insn 284 283 285 11 (set (reg:SF 206 [ _120 ])
        (reg:SF 205 [ _119 ])) "../src/spline.f":305 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 205 [ _119 ])
        (nil)))
(insn 285 284 286 11 (set (reg:SF 207 [ _121 ])
        (mult:SF (reg:SF 206 [ _120 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -56 [0xffffffffffffffc8])) [3 t+0 S4 A32]))) "../src/spline.f":305 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 206 [ _120 ])
        (nil)))
(insn 286 285 287 11 (set (reg:SF 208 [ _122 ])
        (mult:SF (reg:SF 207 [ _121 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -56 [0xffffffffffffffc8])) [3 t+0 S4 A32]))) "../src/spline.f":305 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 207 [ _121 ])
        (nil)))
(insn 287 286 288 11 (set (reg:SF 209 [ _123 ])
        (mult:SF (reg:SF 208 [ _122 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -64 [0xffffffffffffffc0])) [3 cx2+0 S4 A32]))) "../src/spline.f":305 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 208 [ _122 ])
        (nil)))
(insn 288 287 289 11 (set (reg:SF 316)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC11") [flags 0x2]) [3  S4 A32])) "../src/spline.f":305 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.2e+1 [0x0.cp+4])
        (nil)))
(insn 289 288 290 11 (set (reg:SF 210 [ _124 ])
        (div:SF (reg:SF 209 [ _123 ])
            (reg:SF 316))) "../src/spline.f":305 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 316)
        (expr_list:REG_DEAD (reg:SF 209 [ _123 ])
            (nil))))
(insn 290 289 291 11 (set (reg:SF 317)
        (plus:SF (reg:SF 201 [ _115 ])
            (reg:SF 210 [ _124 ]))) "../src/spline.f":305 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 210 [ _124 ])
        (expr_list:REG_DEAD (reg:SF 201 [ _115 ])
            (nil))))
(insn 291 290 292 11 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -52 [0xffffffffffffffcc])) [3 dgev+0 S4 A32])
        (reg:SF 317)) "../src/spline.f":305 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 317)
        (nil)))
(insn 292 291 293 11 (set (reg:SF 318)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -52 [0xffffffffffffffcc])) [3 dgev+0 S4 A32])) "../src/spline.f":307 127 {*movsf_internal}
     (nil))
(insn 293 292 294 11 (set (reg:SF 211 [ _125 ])
        (mult:SF (reg:SF 318)
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -48 [0xffffffffffffffd0])) [3 ds+0 S4 A32]))) "../src/spline.f":307 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 318)
        (nil)))
(insn 294 293 295 11 (set (reg:SF 212 [ __result_geval.200_126 ])
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -68 [0xffffffffffffffbc])) [3 __result_geval+0 S4 A32])) "../src/spline.f":307 127 {*movsf_internal}
     (nil))
(insn 295 294 296 11 (set (reg:SF 213 [ _127 ])
        (plus:SF (reg:SF 211 [ _125 ])
            (reg:SF 212 [ __result_geval.200_126 ]))) "../src/spline.f":307 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 212 [ __result_geval.200_126 ])
        (expr_list:REG_DEAD (reg:SF 211 [ _125 ])
            (nil))))
(insn 296 295 297 11 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -68 [0xffffffffffffffbc])) [3 __result_geval+0 S4 A32])
        (reg:SF 213 [ _127 ])) "../src/spline.f":307 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 213 [ _127 ])
        (nil)))
(insn 297 296 300 11 (set (reg:SF 231 [ _177 ])
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -68 [0xffffffffffffffbc])) [3 __result_geval+0 S4 A32])) "../src/spline.f":309 127 {*movsf_internal}
     (nil))
(insn 300 297 304 11 (set (reg:SF 232 [ <retval> ])
        (reg:SF 231 [ _177 ])) 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 231 [ _177 ])
        (nil)))
(insn 304 300 305 11 (set (reg/i:SF 21 xmm0)
        (reg:SF 232 [ <retval> ])) "../src/spline.f":310 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 232 [ <retval> ])
        (nil)))
(insn 305 304 0 11 (use (reg/i:SF 21 xmm0)) "../src/spline.f":310 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0]


;; Function d2val (d2val_, funcdef_no=8, decl_uid=3878, cgraph_uid=8, symbol_order=8)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 10 n_edges 11 count 10 (    1)
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 9 8
;;
;; Loop 1
;;  header 3, latch 7
;;  depth 1, outer 0
;;  nodes: 3 7 6 5 4
;; 2 succs { 3 }
;; 3 succs { 9 4 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 3 }
;; 9 succs { 8 }
;; 8 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r224: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a11 (r224,l0) best SSE_REGS, allocno SSE_REGS
    r223: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a13 (r223,l0) best SSE_REGS, allocno SSE_REGS
    r222: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a14 (r222,l0) best SSE_REGS, allocno SSE_REGS
    r221: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a17 (r221,l0) best SSE_REGS, allocno SSE_REGS
    r220: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a19 (r220,l0) best SSE_REGS, allocno SSE_REGS
    r219: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a20 (r219,l0) best SSE_REGS, allocno SSE_REGS
    r218: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a21 (r218,l0) best SSE_REGS, allocno SSE_REGS
    r217: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r217,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r216: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r216,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r215: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a31 (r215,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r214: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a34 (r214,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r213: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a36 (r213,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r212: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a39 (r212,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r211: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a40 (r211,l0) best SSE_REGS, allocno SSE_REGS
    r210: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a43 (r210,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r209: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a47 (r209,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r208: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a50 (r208,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r207: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a53 (r207,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r206: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a55 (r206,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r205: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a59 (r205,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r204: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a60 (r204,l0) best SSE_REGS, allocno SSE_REGS
    r203: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a65 (r203,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r202: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a69 (r202,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r201: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a70 (r201,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r200: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a71 (r200,l0) best SSE_REGS, allocno SSE_REGS
    r199: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a74 (r199,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r198: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a78 (r198,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r197: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a79 (r197,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r196: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a82 (r196,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r195: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a83 (r195,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r194: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a84 (r194,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r193: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a87 (r193,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r192: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a90 (r192,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r191: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a91 (r191,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r190: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a92 (r190,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r189: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a93 (r189,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r188: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a95 (r188,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r187: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a96 (r187,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r186: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a97 (r186,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r185: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a99 (r185,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r184: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a100 (r184,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r183: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a101 (r183,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r182: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a105 (r182,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r181: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a107 (r181,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r180: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a109 (r180,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r179: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a113 (r179,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r178: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a115 (r178,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r177: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a117 (r177,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r176: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a121 (r176,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r175: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a123 (r175,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r174: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a125 (r174,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r173: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a0 (r173,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r172: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a1 (r172,l0) best SSE_REGS, allocno SSE_REGS
    r171: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a3 (r171,l0) best SSE_REGS, allocno SSE_REGS
    r170: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a5 (r170,l0) best SSE_REGS, allocno SSE_REGS
    r166: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a104 (r166,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r165: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a106 (r165,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r161: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a112 (r161,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r160: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a114 (r160,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r156: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a120 (r156,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r155: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a122 (r155,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r154: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a2 (r154,l0) best SSE_REGS, allocno SSE_REGS
    r153: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a4 (r153,l0) best SSE_REGS, allocno SSE_REGS
    r152: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a6 (r152,l0) best SSE_REGS, allocno SSE_REGS
    r151: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a7 (r151,l0) best SSE_REGS, allocno SSE_REGS
    r150: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a9 (r150,l0) best SSE_REGS, allocno SSE_REGS
    r149: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a10 (r149,l0) best SSE_REGS, allocno SSE_REGS
    r148: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a12 (r148,l0) best SSE_REGS, allocno SSE_REGS
    r147: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a8 (r147,l0) best SSE_REGS, allocno SSE_REGS
    r146: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a15 (r146,l0) best SSE_REGS, allocno SSE_REGS
    r145: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a16 (r145,l0) best SSE_REGS, allocno SSE_REGS
    r144: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a18 (r144,l0) best SSE_REGS, allocno SSE_REGS
    r143: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a22 (r143,l0) best SSE_REGS, allocno SSE_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r142,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r141,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r140,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r139: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a23 (r139,l0) best SSE_REGS, allocno SSE_REGS
    r138: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a29 (r138,l0) best SSE_REGS, allocno SSE_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r137,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a33 (r136,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r135: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a30 (r135,l0) best SSE_REGS, allocno SSE_REGS
    r134: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a35 (r134,l0) best SSE_REGS, allocno SSE_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a37 (r133,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r132: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a38 (r132,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r131: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a41 (r131,l0) best SSE_REGS, allocno SSE_REGS
    r130: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a44 (r130,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r129: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a45 (r129,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r128: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a46 (r128,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r127: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a42 (r127,l0) best SSE_REGS, allocno SSE_REGS
    r126: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a48 (r126,l0) best SSE_REGS, allocno SSE_REGS
    r125: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a51 (r125,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r124: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a52 (r124,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r123: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a49 (r123,l0) best SSE_REGS, allocno SSE_REGS
    r122: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a54 (r122,l0) best SSE_REGS, allocno SSE_REGS
    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a56 (r121,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r120: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a57 (r120,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a58 (r119,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r118: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a61 (r118,l0) best SSE_REGS, allocno SSE_REGS
    r117: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a62 (r117,l0) best SSE_REGS, allocno SSE_REGS
    r116: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a63 (r116,l0) best SSE_REGS, allocno SSE_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a66 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a67 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a68 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r112: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a64 (r112,l0) best SSE_REGS, allocno SSE_REGS
    r111: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a72 (r111,l0) best SSE_REGS, allocno SSE_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a75 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a76 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a77 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a73 (r107,l0) best SSE_REGS, allocno SSE_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a80 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a81 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a86 (r104,l0) best SSE_REGS, allocno SSE_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a88 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a89 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a85 (r101,l0) best SSE_REGS, allocno SSE_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a94 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a98 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a102 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a103 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a108 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a110 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a111 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a116 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a118 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a119 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a124 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r173,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 CLOBBERED_REGS:4 Q_REGS:4 NON_Q_REGS:4 TLS_GOTBASE_REGS:4 GENERAL_REGS:4 FP_TOP_REG:18 FP_SECOND_REG:18 FLOAT_REGS:18 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:16 FP_TOP_SSE_REGS:20 FP_SECOND_SSE_REGS:20 FLOAT_SSE_REGS:20 FLOAT_INT_REGS:18 INT_SSE_REGS:16 FLOAT_INT_SSE_REGS:20 ALL_REGS:20 MEM:2
  a1(r172,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 CLOBBERED_REGS:4 Q_REGS:4 NON_Q_REGS:4 TLS_GOTBASE_REGS:4 GENERAL_REGS:4 FP_TOP_REG:24 FP_SECOND_REG:24 FLOAT_REGS:24 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:22 FP_TOP_SSE_REGS:26 FP_SECOND_SSE_REGS:26 FLOAT_SSE_REGS:26 FLOAT_INT_REGS:24 INT_SSE_REGS:19 FLOAT_INT_SSE_REGS:26 ALL_REGS:26 MEM:7
  a2(r154,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a3(r171,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a4(r153,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a5(r170,l0) costs: AREG:18 DREG:18 CREG:18 BREG:18 SIREG:18 DIREG:18 AD_REGS:18 CLOBBERED_REGS:18 Q_REGS:18 NON_Q_REGS:18 TLS_GOTBASE_REGS:18 GENERAL_REGS:18 FP_TOP_REG:54 FP_SECOND_REG:54 FLOAT_REGS:54 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:48 FP_TOP_SSE_REGS:56 FP_SECOND_SSE_REGS:56 FLOAT_SSE_REGS:56 FLOAT_INT_REGS:54 INT_SSE_REGS:37 FLOAT_INT_SSE_REGS:56 ALL_REGS:56 MEM:20
  a6(r152,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a7(r151,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a8(r147,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a9(r150,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 ALL_REGS:29 MEM:9
  a10(r149,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:9
  a11(r224,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a12(r148,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:16
  a13(r223,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a14(r222,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a15(r146,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 ALL_REGS:29 MEM:9
  a16(r145,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:9
  a17(r221,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a18(r144,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:16
  a19(r220,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a20(r219,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a21(r218,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a22(r143,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a23(r139,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a24(r217,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a25(r142,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a26(r141,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a27(r140,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a28(r216,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a29(r138,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a30(r135,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:16
  a31(r215,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a32(r137,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a33(r136,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a34(r214,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a35(r134,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a36(r213,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a37(r133,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a38(r132,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a39(r212,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a40(r211,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a41(r131,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a42(r127,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a43(r210,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a44(r130,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a45(r129,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a46(r128,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a47(r209,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a48(r126,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a49(r123,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:16
  a50(r208,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a51(r125,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a52(r124,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a53(r207,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a54(r122,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a55(r206,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a56(r121,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a57(r120,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a58(r119,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a59(r205,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a60(r204,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a61(r118,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 ALL_REGS:29 MEM:9
  a62(r117,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:9
  a63(r116,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a64(r112,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a65(r203,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a66(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a67(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a68(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a69(r202,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a70(r201,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a71(r200,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a72(r111,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a73(r107,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a74(r199,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a75(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a76(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a77(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a78(r198,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a79(r197,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a80(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a81(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a82(r196,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a83(r195,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a84(r194,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a85(r101,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a86(r104,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a87(r193,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a88(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a89(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a90(r192,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a91(r191,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a92(r190,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a93(r189,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a94(r100,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 CLOBBERED_REGS:2 Q_REGS:2 NON_Q_REGS:2 TLS_GOTBASE_REGS:2 GENERAL_REGS:2 SSE_FIRST_REG:26 NO_REX_SSE_REGS:26 SSE_REGS:26 MMX_REGS:41 INT_SSE_REGS:29 ALL_REGS:626 MEM:11
  a95(r188,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 CLOBBERED_REGS:2 Q_REGS:2 NON_Q_REGS:2 TLS_GOTBASE_REGS:2 GENERAL_REGS:2 SSE_FIRST_REG:18 NO_REX_SSE_REGS:18 SSE_REGS:18 MMX_REGS:28 INT_SSE_REGS:20 ALL_REGS:418 MEM:8
  a96(r187,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a97(r186,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a98(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a99(r185,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a100(r184,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a101(r183,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a102(r97,l0) costs: AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:2
  a103(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a104(r166,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a105(r182,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a106(r165,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:38 INT_SSE_REGS:27 ALL_REGS:520 MEM:11
  a107(r181,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:8
  a108(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a109(r180,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a110(r93,l0) costs: AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:2
  a111(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a112(r161,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a113(r179,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a114(r160,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:38 INT_SSE_REGS:27 ALL_REGS:520 MEM:11
  a115(r178,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:8
  a116(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a117(r177,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a118(r89,l0) costs: AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:2
  a119(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a120(r156,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a121(r176,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a122(r155,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:38 INT_SSE_REGS:27 ALL_REGS:520 MEM:11
  a123(r175,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:8
  a124(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a125(r174,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8

   Insn 195(l0): point = 0
   Insn 194(l0): point = 2
   Insn 190(l0): point = 4
   Insn 187(l0): point = 6
   Insn 186(l0): point = 8
   Insn 185(l0): point = 10
   Insn 184(l0): point = 12
   Insn 183(l0): point = 14
   Insn 182(l0): point = 16
   Insn 181(l0): point = 18
   Insn 180(l0): point = 20
   Insn 179(l0): point = 22
   Insn 178(l0): point = 24
   Insn 177(l0): point = 26
   Insn 176(l0): point = 28
   Insn 175(l0): point = 30
   Insn 174(l0): point = 32
   Insn 173(l0): point = 34
   Insn 172(l0): point = 36
   Insn 171(l0): point = 38
   Insn 170(l0): point = 40
   Insn 169(l0): point = 42
   Insn 168(l0): point = 44
   Insn 167(l0): point = 46
   Insn 166(l0): point = 48
   Insn 165(l0): point = 50
   Insn 164(l0): point = 52
   Insn 163(l0): point = 54
   Insn 162(l0): point = 56
   Insn 161(l0): point = 58
   Insn 160(l0): point = 60
   Insn 159(l0): point = 62
   Insn 158(l0): point = 64
   Insn 157(l0): point = 66
   Insn 156(l0): point = 68
   Insn 155(l0): point = 70
   Insn 154(l0): point = 72
   Insn 153(l0): point = 74
   Insn 152(l0): point = 76
   Insn 151(l0): point = 78
   Insn 150(l0): point = 80
   Insn 149(l0): point = 82
   Insn 148(l0): point = 84
   Insn 147(l0): point = 86
   Insn 146(l0): point = 88
   Insn 145(l0): point = 90
   Insn 144(l0): point = 92
   Insn 143(l0): point = 94
   Insn 142(l0): point = 96
   Insn 141(l0): point = 98
   Insn 140(l0): point = 100
   Insn 139(l0): point = 102
   Insn 138(l0): point = 104
   Insn 137(l0): point = 106
   Insn 136(l0): point = 108
   Insn 135(l0): point = 110
   Insn 134(l0): point = 112
   Insn 133(l0): point = 114
   Insn 132(l0): point = 116
   Insn 131(l0): point = 118
   Insn 130(l0): point = 120
   Insn 129(l0): point = 122
   Insn 128(l0): point = 124
   Insn 127(l0): point = 126
   Insn 126(l0): point = 128
   Insn 125(l0): point = 130
   Insn 124(l0): point = 132
   Insn 123(l0): point = 134
   Insn 122(l0): point = 136
   Insn 121(l0): point = 138
   Insn 120(l0): point = 140
   Insn 119(l0): point = 142
   Insn 118(l0): point = 144
   Insn 117(l0): point = 146
   Insn 116(l0): point = 148
   Insn 115(l0): point = 150
   Insn 114(l0): point = 152
   Insn 113(l0): point = 154
   Insn 112(l0): point = 156
   Insn 111(l0): point = 158
   Insn 110(l0): point = 160
   Insn 109(l0): point = 162
   Insn 108(l0): point = 164
   Insn 107(l0): point = 166
   Insn 106(l0): point = 168
   Insn 105(l0): point = 170
   Insn 104(l0): point = 172
   Insn 103(l0): point = 174
   Insn 102(l0): point = 176
   Insn 101(l0): point = 178
   Insn 100(l0): point = 180
   Insn 207(l0): point = 183
   Insn 63(l0): point = 186
   Insn 62(l0): point = 188
   Insn 61(l0): point = 190
   Insn 60(l0): point = 192
   Insn 203(l0): point = 195
   Insn 92(l0): point = 198
   Insn 91(l0): point = 200
   Insn 201(l0): point = 203
   Insn 86(l0): point = 205
   Insn 85(l0): point = 207
   Insn 80(l0): point = 210
   Insn 79(l0): point = 212
   Insn 78(l0): point = 214
   Insn 77(l0): point = 216
   Insn 76(l0): point = 218
   Insn 75(l0): point = 220
   Insn 74(l0): point = 222
   Insn 73(l0): point = 224
   Insn 72(l0): point = 226
   Insn 71(l0): point = 228
   Insn 70(l0): point = 230
   Insn 69(l0): point = 232
   Insn 68(l0): point = 234
   Insn 67(l0): point = 236
   Insn 66(l0): point = 238
   Insn 65(l0): point = 240
   Insn 58(l0): point = 243
   Insn 57(l0): point = 245
   Insn 56(l0): point = 247
   Insn 55(l0): point = 249
   Insn 51(l0): point = 251
   Insn 50(l0): point = 253
   Insn 49(l0): point = 255
   Insn 47(l0): point = 257
   Insn 45(l0): point = 259
   Insn 46(l0): point = 261
   Insn 44(l0): point = 263
   Insn 43(l0): point = 265
   Insn 42(l0): point = 267
   Insn 41(l0): point = 269
   Insn 40(l0): point = 271
   Insn 36(l0): point = 273
   Insn 35(l0): point = 275
   Insn 34(l0): point = 277
   Insn 32(l0): point = 279
   Insn 30(l0): point = 281
   Insn 31(l0): point = 283
   Insn 29(l0): point = 285
   Insn 28(l0): point = 287
   Insn 27(l0): point = 289
   Insn 26(l0): point = 291
   Insn 25(l0): point = 293
   Insn 21(l0): point = 295
   Insn 20(l0): point = 297
   Insn 19(l0): point = 299
   Insn 17(l0): point = 301
   Insn 15(l0): point = 303
   Insn 16(l0): point = 305
   Insn 14(l0): point = 307
   Insn 13(l0): point = 309
   Insn 12(l0): point = 311
   Insn 11(l0): point = 313
   Insn 10(l0): point = 315
   Insn 6(l0): point = 317
   Insn 5(l0): point = 319
   Insn 4(l0): point = 321
   Insn 3(l0): point = 323
   Insn 2(l0): point = 325
 a0(r173): [3..4]
 a1(r172): [5..6]
 a2(r154): [9..10]
 a3(r171): [11..14]
 a4(r153): [11..12]
 a5(r170): [15..16]
 a6(r152): [19..20]
 a7(r151): [21..22]
 a8(r147): [21..36]
 a9(r150): [23..24]
 a10(r149): [25..26]
 a11(r224): [27..28]
 a12(r148): [27..30]
 a13(r223): [31..32]
 a14(r222): [31..34]
 a15(r146): [37..38]
 a16(r145): [39..40]
 a17(r221): [41..42]
 a18(r144): [41..44]
 a19(r220): [45..46]
 a20(r219): [45..48]
 a21(r218): [51..52]
 a22(r143): [53..54]
 a23(r139): [53..66]
 a24(r217): [55..56]
 a25(r142): [55..58]
 a26(r141): [59..60]
 a27(r140): [61..62]
 a28(r216): [63..64]
 a29(r138): [67..68]
 a30(r135): [67..78]
 a31(r215): [69..70]
 a32(r137): [69..72]
 a33(r136): [73..74]
 a34(r214): [75..76]
 a35(r134): [79..80]
 a36(r213): [81..82]
 a37(r133): [81..84]
 a38(r132): [85..86]
 a39(r212): [87..88]
 a40(r211): [91..92]
 a41(r131): [93..94]
 a42(r127): [93..106]
 a43(r210): [95..96]
 a44(r130): [95..98]
 a45(r129): [99..100]
 a46(r128): [101..102]
 a47(r209): [103..104]
 a48(r126): [107..108]
 a49(r123): [107..118]
 a50(r208): [109..110]
 a51(r125): [109..112]
 a52(r124): [113..114]
 a53(r207): [115..116]
 a54(r122): [119..120]
 a55(r206): [121..122]
 a56(r121): [121..124]
 a57(r120): [125..126]
 a58(r119): [127..128]
 a59(r205): [129..130]
 a60(r204): [133..134]
 a61(r118): [135..136]
 a62(r117): [137..138]
 a63(r116): [139..140]
 a64(r112): [139..152]
 a65(r203): [141..142]
 a66(r115): [141..144]
 a67(r114): [145..146]
 a68(r113): [147..148]
 a69(r202): [149..150]
 a70(r201): [153..154]
 a71(r200): [157..158]
 a72(r111): [159..160]
 a73(r107): [159..172]
 a74(r199): [161..162]
 a75(r110): [161..164]
 a76(r109): [165..166]
 a77(r108): [167..168]
 a78(r198): [169..170]
 a79(r197): [173..174]
 a80(r106): [173..176]
 a81(r105): [177..178]
 a82(r196): [179..180]
 a83(r195): [199..200]
 a84(r194): [206..207]
 a85(r101): [213..224]
 a86(r104): [213..214]
 a87(r193): [215..216]
 a88(r103): [215..218]
 a89(r102): [219..220]
 a90(r192): [221..222]
 a91(r191): [225..226]
 a92(r190): [229..230]
 a93(r189): [231..232]
 a94(r100): [233..236]
 a95(r188): [233..234]
 a96(r187): [237..238]
 a97(r186): [237..240]
 a98(r99): [189..190]
 a99(r185): [191..192]
 a100(r184): [244..245]
 a101(r183): [246..247]
 a102(r97 [0]): [252..327]
 a102(r97 [1]): [251..327]
 a103(r96): [254..255]
 a104(r166): [256..257]
 a105(r182): [258..261]
 a106(r165): [258..263]
 a107(r181): [266..267]
 a108(r95): [268..269]
 a109(r180): [270..271]
 a110(r93 [0]): [274..327]
 a110(r93 [1]): [273..327]
 a111(r92): [276..277]
 a112(r161): [278..279]
 a113(r179): [280..283]
 a114(r160): [280..285]
 a115(r178): [288..289]
 a116(r91): [290..291]
 a117(r177): [292..293]
 a118(r89 [0]): [296..327]
 a118(r89 [1]): [295..327]
 a119(r88): [298..299]
 a120(r156): [300..301]
 a121(r176): [302..305]
 a122(r155): [302..307]
 a123(r175): [310..311]
 a124(r87): [312..313]
 a125(r174): [314..315]
Compressing live ranges: from 328 to 190 - 57%
Ranges after the compression:
 a0(r173): [0..1]
 a1(r172): [2..3]
 a2(r154): [4..5]
 a3(r171): [6..7]
 a4(r153): [6..7]
 a5(r170): [8..9]
 a6(r152): [10..11]
 a7(r151): [12..13]
 a8(r147): [12..21]
 a9(r150): [14..15]
 a10(r149): [16..17]
 a11(r224): [18..19]
 a12(r148): [18..19]
 a13(r223): [20..21]
 a14(r222): [20..21]
 a15(r146): [22..23]
 a16(r145): [24..25]
 a17(r221): [26..27]
 a18(r144): [26..27]
 a19(r220): [28..29]
 a20(r219): [28..29]
 a21(r218): [30..31]
 a22(r143): [32..33]
 a23(r139): [32..41]
 a24(r217): [34..35]
 a25(r142): [34..35]
 a26(r141): [36..37]
 a27(r140): [38..39]
 a28(r216): [40..41]
 a29(r138): [42..43]
 a30(r135): [42..49]
 a31(r215): [44..45]
 a32(r137): [44..45]
 a33(r136): [46..47]
 a34(r214): [48..49]
 a35(r134): [50..51]
 a36(r213): [52..53]
 a37(r133): [52..53]
 a38(r132): [54..55]
 a39(r212): [56..57]
 a40(r211): [58..59]
 a41(r131): [60..61]
 a42(r127): [60..69]
 a43(r210): [62..63]
 a44(r130): [62..63]
 a45(r129): [64..65]
 a46(r128): [66..67]
 a47(r209): [68..69]
 a48(r126): [70..71]
 a49(r123): [70..77]
 a50(r208): [72..73]
 a51(r125): [72..73]
 a52(r124): [74..75]
 a53(r207): [76..77]
 a54(r122): [78..79]
 a55(r206): [80..81]
 a56(r121): [80..81]
 a57(r120): [82..83]
 a58(r119): [84..85]
 a59(r205): [86..87]
 a60(r204): [88..89]
 a61(r118): [90..91]
 a62(r117): [92..93]
 a63(r116): [94..95]
 a64(r112): [94..103]
 a65(r203): [96..97]
 a66(r115): [96..97]
 a67(r114): [98..99]
 a68(r113): [100..101]
 a69(r202): [102..103]
 a70(r201): [104..105]
 a71(r200): [106..107]
 a72(r111): [108..109]
 a73(r107): [108..117]
 a74(r199): [110..111]
 a75(r110): [110..111]
 a76(r109): [112..113]
 a77(r108): [114..115]
 a78(r198): [116..117]
 a79(r197): [118..119]
 a80(r106): [118..119]
 a81(r105): [120..121]
 a82(r196): [122..123]
 a83(r195): [128..129]
 a84(r194): [130..131]
 a85(r101): [132..139]
 a86(r104): [132..133]
 a87(r193): [134..135]
 a88(r103): [134..135]
 a89(r102): [136..137]
 a90(r192): [138..139]
 a91(r191): [140..141]
 a92(r190): [142..143]
 a93(r189): [144..145]
 a94(r100): [146..147]
 a95(r188): [146..147]
 a96(r187): [148..149]
 a97(r186): [148..149]
 a98(r99): [124..125]
 a99(r185): [126..127]
 a100(r184): [150..151]
 a101(r183): [152..153]
 a102(r97 [0]): [154..189]
 a102(r97 [1]): [154..189]
 a103(r96): [154..155]
 a104(r166): [156..157]
 a105(r182): [158..159]
 a106(r165): [158..159]
 a107(r181): [160..161]
 a108(r95): [162..163]
 a109(r180): [164..165]
 a110(r93 [0]): [166..189]
 a110(r93 [1]): [166..189]
 a111(r92): [166..167]
 a112(r161): [168..169]
 a113(r179): [170..171]
 a114(r160): [170..171]
 a115(r178): [172..173]
 a116(r91): [174..175]
 a117(r177): [176..177]
 a118(r89 [0]): [178..189]
 a118(r89 [1]): [178..189]
 a119(r88): [178..179]
 a120(r156): [180..181]
 a121(r176): [182..183]
 a122(r155): [182..183]
 a123(r175): [184..185]
 a124(r87): [186..187]
 a125(r174): [188..189]
  regions=1, blocks=10, points=190
    allocnos=126 (big 3), copies=0, conflicts=0, ranges=129
Disposition:
  124:r87  l0     0  119:r88  l0     0  118:r89  l0    42  116:r91  l0     0
  111:r92  l0     0  110:r93  l0    40  108:r95  l0     0  103:r96  l0     0
  102:r97  l0    38   98:r99  l0     0   94:r100 l0     0   85:r101 l0    22
   89:r102 l0     0   88:r103 l0     1   86:r104 l0    21   81:r105 l0     0
   80:r106 l0     1   73:r107 l0    21   77:r108 l0     0   76:r109 l0     0
   75:r110 l0     1   72:r111 l0    22   64:r112 l0    21   68:r113 l0     0
   67:r114 l0     0   66:r115 l0     1   63:r116 l0    22   62:r117 l0    21
   61:r118 l0    21   58:r119 l0     0   57:r120 l0     0   56:r121 l0     1
   54:r122 l0    21   49:r123 l0    21   52:r124 l0     0   51:r125 l0     1
   48:r126 l0    22   42:r127 l0    21   46:r128 l0     0   45:r129 l0     0
   44:r130 l0     1   41:r131 l0    22   38:r132 l0     0   37:r133 l0     1
   35:r134 l0    21   30:r135 l0    21   33:r136 l0     0   32:r137 l0     1
   29:r138 l0    22   23:r139 l0    21   27:r140 l0     0   26:r141 l0     0
   25:r142 l0     1   22:r143 l0    22   18:r144 l0    21   16:r145 l0    21
   15:r146 l0    21    8:r147 l0    22   12:r148 l0    21   10:r149 l0    21
    9:r150 l0    21    7:r151 l0    21    6:r152 l0    21    4:r153 l0    22
    2:r154 l0    21  122:r155 l0     0  120:r156 l0     0  114:r160 l0     0
  112:r161 l0     0  106:r165 l0     0  104:r166 l0     0    5:r170 l0    21
    3:r171 l0    21    1:r172 l0    21    0:r173 l0    21  125:r174 l0     0
  123:r175 l0     0  121:r176 l0     1  117:r177 l0     0  115:r178 l0     0
  113:r179 l0     1  109:r180 l0     0  107:r181 l0     0  105:r182 l0     1
  101:r183 l0     0  100:r184 l0     0   99:r185 l0     0   97:r186 l0     1
   96:r187 l0     0   95:r188 l0     1   93:r189 l0     0   92:r190 l0     0
   91:r191 l0     0   90:r192 l0     0   87:r193 l0     0   84:r194 l0     0
   83:r195 l0     0   82:r196 l0     0   79:r197 l0     0   78:r198 l0     0
   74:r199 l0     0   71:r200 l0    21   70:r201 l0     0   69:r202 l0     0
   65:r203 l0     0   60:r204 l0    21   59:r205 l0     0   55:r206 l0     0
   53:r207 l0     0   50:r208 l0     0   47:r209 l0     0   43:r210 l0     0
   40:r211 l0    21   39:r212 l0     0   36:r213 l0     0   34:r214 l0     0
   31:r215 l0     0   28:r216 l0     0   24:r217 l0     0   21:r218 l0    21
   20:r219 l0    22   19:r220 l0    21   17:r221 l0    22   14:r222 l0    23
   13:r223 l0    21   11:r224 l0    23
+++Costs: overall 3, reg 3, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


d2val

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame] 21 [xmm0]
;;  regs ever live 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 17 [flags] 21 [xmm0] 37 [r8]
;;  ref usage 	r0={1d} r1={1d,1u} r2={1d,1u} r4={1d,1u} r5={1d,1u} r6={1d,9u} r7={1d,9u} r16={1d,8u} r17={25d,5u} r20={1d,73u,9e} r21={2d,2u} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d,1u} r38={1d} r87={1d,1u} r88={1d,1u} r89={2d,2u} r91={1d,1u} r92={1d,1u} r93={2d,2u} r95={1d,1u} r96={1d,1u} r97={2d,2u} r99={1d,1u} r100={1d,2u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,1u} r127={1d,1u} r128={1d,1u} r129={1d,1u} r130={1d,1u} r131={1d,1u} r132={1d,1u} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,2u} r156={1d,1u} r160={1d,2u} r161={1d,1u} r165={1d,2u} r166={1d,1u} r170={1d,2u} r171={1d,1u} r172={1d,1u} r173={1d,1u} r174={1d,1u} r175={1d,1u} r176={1d,1u} r177={1d,1u} r178={1d,1u} r179={1d,1u} r180={1d,1u} r181={1d,1u} r182={1d,1u} r183={1d,1u} r184={1d,1u} r185={1d,1u} r186={1d,1u} r187={1d,1u} r188={1d,1u} r189={1d,1u} r190={1d,1u} r191={1d,1u} r192={1d,1u} r193={1d,1u} r194={1d,1u} r195={1d,1u} r196={1d,1u} r197={1d,1u} r198={1d,1u} r199={1d,1u} r200={1d,1u} r201={1d,1u} r202={1d,1u} r203={1d,1u} r204={1d,1u} r205={1d,1u} r206={1d,1u} r207={1d,1u} r208={1d,1u} r209={1d,1u} r210={1d,1u} r211={1d,1u} r212={1d,1u} r213={1d,1u} r214={1d,1u} r215={1d,1u} r216={1d,1u} r217={1d,1u} r218={1d,1u} r219={1d,1u} r220={1d,1u} r221={1d,1u} r222={1d,1u} r223={1d,1u} r224={1d,1u} 
;;    total ref usage 428{174d,245u,9e} in 160{160 regular + 0 call} insns.
(note 1 0 8 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 89 93 97
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 89 93 97
;; lr  def 	 17 [flags] 87 88 91 92 95 96 155 156 160 161 165 166 174 175 176 177 178 179 180 181 182 183 184
(note 8 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 8 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [4 ss+0 S8 A64])
        (reg:DI 5 di [ ss ])) "../src/spline.f":369 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ ss ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [5 x+0 S8 A64])
        (reg:DI 4 si [ x ])) "../src/spline.f":369 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ x ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -88 [0xffffffffffffffa8])) [5 xs+0 S8 A64])
        (reg:DI 1 dx [ xs ])) "../src/spline.f":369 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ xs ])
        (nil)))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [5 s+0 S8 A64])
        (reg:DI 2 cx [ s ])) "../src/spline.f":369 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [ s ])
        (nil)))
(insn 6 5 7 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -104 [0xffffffffffffff98])) [6 n+0 S8 A64])
        (reg:DI 37 r8 [ n ])) "../src/spline.f":369 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 37 r8 [ n ])
        (nil)))
(note 7 6 10 2 NOTE_INSN_FUNCTION_BEG)
(insn 10 7 11 2 (set (reg/f:DI 174)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -104 [0xffffffffffffff98])) [6 n+0 S8 A64])) "../src/spline.f":369 81 {*movdi_internal}
     (nil))
(insn 11 10 12 2 (set (reg:SI 87 [ _1 ])
        (mem:SI (reg/f:DI 174) [1 *n_74(D)+0 S4 A32])) "../src/spline.f":369 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 174)
        (nil)))
(insn 12 11 13 2 (set (reg:DI 175)
        (sign_extend:DI (reg:SI 87 [ _1 ]))) "../src/spline.f":369 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 87 [ _1 ])
        (nil)))
(insn 13 12 14 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 ubound.50+0 S8 A64])
        (reg:DI 175)) "../src/spline.f":369 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 175)
        (nil)))
(insn 14 13 16 2 (set (reg:DI 155 [ size.51_76 ])
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 ubound.50+0 S8 A64])) "../src/spline.f":369 81 {*movdi_internal}
     (nil))
(insn 16 14 15 2 (set (reg:DI 176)
        (const_int 0 [0])) "../src/spline.f":369 81 {*movdi_internal}
     (nil))
(insn 15 16 17 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 155 [ size.51_76 ])
            (const_int 0 [0]))) "../src/spline.f":369 4 {*cmpdi_ccno_1}
     (nil))
(insn 17 15 19 2 (set (reg:DI 156 [ size.51_77 ])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 155 [ size.51_76 ])
            (reg:DI 176))) "../src/spline.f":369 967 {*movdicc_noc}
     (expr_list:REG_DEAD (reg:DI 176)
        (expr_list:REG_DEAD (reg:DI 155 [ size.51_76 ])
            (expr_list:REG_DEAD (reg:CCGOC 17 flags)
                (nil)))))
(insn 19 17 20 2 (set (reg:DI 88 [ size.201_2 ])
        (reg:DI 156 [ size.51_77 ])) "../src/spline.f":369 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 156 [ size.51_77 ])
        (nil)))
(insn 20 19 21 2 (set (subreg:DI (reg:TI 89 [ _3 ]) 0)
        (reg:DI 88 [ size.201_2 ])) "../src/spline.f":369 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88 [ size.201_2 ])
        (nil)))
(insn 21 20 25 2 (set (subreg:DI (reg:TI 89 [ _3 ]) 8)
        (const_int 0 [0])) "../src/spline.f":369 81 {*movdi_internal}
     (expr_list:REG_UNUSED (reg:TI 89 [ _3 ])
        (nil)))
(insn 25 21 26 2 (set (reg/f:DI 177)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -104 [0xffffffffffffff98])) [6 n+0 S8 A64])) "../src/spline.f":369 81 {*movdi_internal}
     (nil))
(insn 26 25 27 2 (set (reg:SI 91 [ _5 ])
        (mem:SI (reg/f:DI 177) [1 *n_74(D)+0 S4 A32])) "../src/spline.f":369 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 177)
        (nil)))
(insn 27 26 28 2 (set (reg:DI 178)
        (sign_extend:DI (reg:SI 91 [ _5 ]))) "../src/spline.f":369 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 91 [ _5 ])
        (nil)))
(insn 28 27 29 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [2 ubound.54+0 S8 A64])
        (reg:DI 178)) "../src/spline.f":369 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 178)
        (nil)))
(insn 29 28 31 2 (set (reg:DI 160 [ size.55_82 ])
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [2 ubound.54+0 S8 A64])) "../src/spline.f":369 81 {*movdi_internal}
     (nil))
(insn 31 29 30 2 (set (reg:DI 179)
        (const_int 0 [0])) "../src/spline.f":369 81 {*movdi_internal}
     (nil))
(insn 30 31 32 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 160 [ size.55_82 ])
            (const_int 0 [0]))) "../src/spline.f":369 4 {*cmpdi_ccno_1}
     (nil))
(insn 32 30 34 2 (set (reg:DI 161 [ size.55_83 ])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 160 [ size.55_82 ])
            (reg:DI 179))) "../src/spline.f":369 967 {*movdicc_noc}
     (expr_list:REG_DEAD (reg:DI 179)
        (expr_list:REG_DEAD (reg:DI 160 [ size.55_82 ])
            (expr_list:REG_DEAD (reg:CCGOC 17 flags)
                (nil)))))
(insn 34 32 35 2 (set (reg:DI 92 [ size.203_6 ])
        (reg:DI 161 [ size.55_83 ])) "../src/spline.f":369 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 161 [ size.55_83 ])
        (nil)))
(insn 35 34 36 2 (set (subreg:DI (reg:TI 93 [ _7 ]) 0)
        (reg:DI 92 [ size.203_6 ])) "../src/spline.f":369 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 92 [ size.203_6 ])
        (nil)))
(insn 36 35 40 2 (set (subreg:DI (reg:TI 93 [ _7 ]) 8)
        (const_int 0 [0])) "../src/spline.f":369 81 {*movdi_internal}
     (expr_list:REG_UNUSED (reg:TI 93 [ _7 ])
        (nil)))
(insn 40 36 41 2 (set (reg/f:DI 180)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -104 [0xffffffffffffff98])) [6 n+0 S8 A64])) "../src/spline.f":369 81 {*movdi_internal}
     (nil))
(insn 41 40 42 2 (set (reg:SI 95 [ _9 ])
        (mem:SI (reg/f:DI 180) [1 *n_74(D)+0 S4 A32])) "../src/spline.f":369 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 180)
        (nil)))
(insn 42 41 43 2 (set (reg:DI 181)
        (sign_extend:DI (reg:SI 95 [ _9 ]))) "../src/spline.f":369 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 95 [ _9 ])
        (nil)))
(insn 43 42 44 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [2 ubound.52+0 S8 A64])
        (reg:DI 181)) "../src/spline.f":369 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 181)
        (nil)))
(insn 44 43 46 2 (set (reg:DI 165 [ size.53_88 ])
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [2 ubound.52+0 S8 A64])) "../src/spline.f":369 81 {*movdi_internal}
     (nil))
(insn 46 44 45 2 (set (reg:DI 182)
        (const_int 0 [0])) "../src/spline.f":369 81 {*movdi_internal}
     (nil))
(insn 45 46 47 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 165 [ size.53_88 ])
            (const_int 0 [0]))) "../src/spline.f":369 4 {*cmpdi_ccno_1}
     (nil))
(insn 47 45 49 2 (set (reg:DI 166 [ size.53_89 ])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 165 [ size.53_88 ])
            (reg:DI 182))) "../src/spline.f":369 967 {*movdicc_noc}
     (expr_list:REG_DEAD (reg:DI 182)
        (expr_list:REG_DEAD (reg:DI 165 [ size.53_88 ])
            (expr_list:REG_DEAD (reg:CCGOC 17 flags)
                (nil)))))
(insn 49 47 50 2 (set (reg:DI 96 [ size.205_10 ])
        (reg:DI 166 [ size.53_89 ])) "../src/spline.f":369 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 166 [ size.53_89 ])
        (nil)))
(insn 50 49 51 2 (set (subreg:DI (reg:TI 97 [ _11 ]) 0)
        (reg:DI 96 [ size.205_10 ])) "../src/spline.f":369 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 96 [ size.205_10 ])
        (nil)))
(insn 51 50 55 2 (set (subreg:DI (reg:TI 97 [ _11 ]) 8)
        (const_int 0 [0])) "../src/spline.f":369 81 {*movdi_internal}
     (expr_list:REG_UNUSED (reg:TI 97 [ _11 ])
        (nil)))
(insn 55 51 56 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 ilow+0 S4 A32])
        (const_int 1 [0x1])) "../src/spline.f":375 82 {*movsi_internal}
     (nil))
(insn 56 55 57 2 (set (reg/f:DI 183)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -104 [0xffffffffffffff98])) [6 n+0 S8 A64])) "../src/spline.f":376 81 {*movdi_internal}
     (nil))
(insn 57 56 58 2 (set (reg:SI 184)
        (mem:SI (reg/f:DI 183) [1 *n_74(D)+0 S4 A32])) "../src/spline.f":376 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 183)
        (nil)))
(insn 58 57 95 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
        (reg:SI 184)) "../src/spline.f":376 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 184)
        (nil)))
;;  succ:       3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 (FALLTHRU)
;;              7 [100.0%] 
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 99 185
(code_label 95 58 59 3 103 (nil) [1 uses])
(note 59 95 60 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 60 59 61 3 (set (reg:SI 185)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":378 82 {*movsi_internal}
     (nil))
(insn 61 60 62 3 (parallel [
            (set (reg:SI 99 [ _13 ])
                (minus:SI (reg:SI 185)
                    (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [1 ilow+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":378 273 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 185)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [1 ilow+0 S4 A32]))
                (nil)))))
(insn 62 61 63 3 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 99 [ _13 ])
            (const_int 1 [0x1]))) "../src/spline.f":378 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 99 [ _13 ])
        (nil)))
(jump_insn 63 62 64 3 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 206)
            (pc))) "../src/spline.f":378 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 206)
;;  succ:       9
;;              4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 100 101 102 103 104 186 187 188 189 190 191 192 193
(note 64 63 65 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 65 64 66 4 (set (reg:SI 186)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":380 82 {*movsi_internal}
     (nil))
(insn 66 65 67 4 (set (reg:SI 187)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 ilow+0 S4 A32])) "../src/spline.f":380 82 {*movsi_internal}
     (nil))
(insn 67 66 68 4 (parallel [
            (set (reg:SI 100 [ _14 ])
                (plus:SI (reg:SI 186)
                    (reg:SI 187)))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":380 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 187)
        (expr_list:REG_DEAD (reg:SI 186)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                                (const_int -8 [0xfffffffffffffff8])) [1 ilow+0 S4 A32]))
                    (nil))))))
(insn 68 67 69 4 (parallel [
            (set (reg:SI 188)
                (lshiftrt:SI (reg:SI 100 [ _14 ])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":380 544 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 69 68 70 4 (parallel [
            (set (reg:SI 189)
                (plus:SI (reg:SI 188)
                    (reg:SI 100 [ _14 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":380 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 188)
        (expr_list:REG_DEAD (reg:SI 100 [ _14 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 70 69 71 4 (parallel [
            (set (reg:SI 190)
                (ashiftrt:SI (reg:SI 189)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":380 545 {*ashrsi3_1}
     (expr_list:REG_DEAD (reg:SI 189)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 71 70 72 4 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -36 [0xffffffffffffffdc])) [1 imid+0 S4 A32])
        (reg:SI 190)) "../src/spline.f":380 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 190)
        (nil)))
(insn 72 71 73 4 (set (reg/f:DI 191)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [4 ss+0 S8 A64])) "../src/spline.f":381 81 {*movdi_internal}
     (nil))
(insn 73 72 74 4 (set (reg:SF 101 [ _15 ])
        (mem:SF (reg/f:DI 191) [3 *ss_96(D)+0 S4 A32])) "../src/spline.f":381 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 191)
        (nil)))
(insn 74 73 75 4 (set (reg:SI 192)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -36 [0xffffffffffffffdc])) [1 imid+0 S4 A32])) "../src/spline.f":381 82 {*movsi_internal}
     (nil))
(insn 75 74 76 4 (set (reg:DI 102 [ _16 ])
        (sign_extend:DI (reg:SI 192))) "../src/spline.f":381 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 192)
        (nil)))
(insn 76 75 77 4 (parallel [
            (set (reg:DI 103 [ _17 ])
                (plus:DI (reg:DI 102 [ _16 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":381 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 102 [ _16 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 77 76 78 4 (set (reg/f:DI 193)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [5 s+0 S8 A64])) "../src/spline.f":381 81 {*movdi_internal}
     (nil))
(insn 78 77 79 4 (set (reg:SF 104 [ _18 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 103 [ _17 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 193)) [3 *s_97(D) S4 A32])) "../src/spline.f":381 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 193)
        (expr_list:REG_DEAD (reg:DI 103 [ _17 ])
            (nil))))
(insn 79 78 80 4 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 104 [ _18 ])
            (reg:SF 101 [ _15 ]))) "../src/spline.f":381 51 {*cmpiusf}
     (expr_list:REG_DEAD (reg:SF 104 [ _18 ])
        (expr_list:REG_DEAD (reg:SF 101 [ _15 ])
            (nil))))
(jump_insn 80 79 84 4 (set (pc)
        (if_then_else (unle (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 200)
            (pc))) "../src/spline.f":381 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil))
 -> 200)
;;  succ:       5 (FALLTHRU)
;;              6
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 194
(note 84 80 85 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 85 84 86 5 (set (reg:SI 194)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -36 [0xffffffffffffffdc])) [1 imid+0 S4 A32])) "../src/spline.f":382 82 {*movsi_internal}
     (nil))
(insn 86 85 201 5 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
        (reg:SI 194)) "../src/spline.f":382 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 194)
        (nil)))
(jump_insn 201 86 202 5 (set (pc)
        (label_ref 93)) 649 {jump}
     (nil)
 -> 93)
;;  succ:       7 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 202 201 200)
;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (RTL)
;;  pred:       4
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 195
(code_label 200 202 90 6 106 (nil) [1 uses])
(note 90 200 91 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 91 90 92 6 (set (reg:SI 195)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -36 [0xffffffffffffffdc])) [1 imid+0 S4 A32])) "../src/spline.f":384 82 {*movsi_internal}
     (nil))
(insn 92 91 93 6 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 ilow+0 S4 A32])
        (reg:SI 195)) "../src/spline.f":384 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 195)
        (nil)))
;;  succ:       7 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 9, flags: (RTL)
;;  pred:       6 (FALLTHRU)
;;              5 [100.0%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 93 92 94 7 102 (nil) [1 uses])
(note 94 93 203 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(jump_insn 203 94 204 7 (set (pc)
        (label_ref 95)) "../src/spline.f":386 649 {jump}
     (nil)
 -> 95)
;;  succ:       3 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 204 203 206)
;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 8, flags: (RTL)
;;  pred:       3
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 206 204 205 9 107 (nil) [1 uses])
(note 205 206 207 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 207 205 98 9 (const_int 0 [0]) "../src/spline.f":386 682 {nop}
     (nil))
;;  succ:       8 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 1, flags: (RTL)
;;  pred:       9 [100.0%]  (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 21 [xmm0] 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 170 171 172 173 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224
(code_label 98 207 99 8 99 (nil) [0 uses])
(note 99 98 100 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 100 99 101 8 (set (reg:SI 196)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":388 82 {*movsi_internal}
     (nil))
(insn 101 100 102 8 (set (reg:DI 105 [ _19 ])
        (sign_extend:DI (reg:SI 196))) "../src/spline.f":388 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 196)
        (nil)))
(insn 102 101 103 8 (parallel [
            (set (reg:DI 106 [ _20 ])
                (plus:DI (reg:DI 105 [ _19 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":388 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 105 [ _19 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 103 102 104 8 (set (reg/f:DI 197)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [5 s+0 S8 A64])) "../src/spline.f":388 81 {*movdi_internal}
     (nil))
(insn 104 103 105 8 (set (reg:SF 107 [ _21 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 106 [ _20 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 197)) [3 *s_97(D) S4 A32])) "../src/spline.f":388 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 197)
        (expr_list:REG_DEAD (reg:DI 106 [ _20 ])
            (nil))))
(insn 105 104 106 8 (set (reg:SI 198)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":388 82 {*movsi_internal}
     (nil))
(insn 106 105 107 8 (parallel [
            (set (reg:SI 108 [ _22 ])
                (plus:SI (reg:SI 198)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":388 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 198)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff]))
                (nil)))))
(insn 107 106 108 8 (set (reg:DI 109 [ _23 ])
        (sign_extend:DI (reg:SI 108 [ _22 ]))) "../src/spline.f":388 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 108 [ _22 ])
        (nil)))
(insn 108 107 109 8 (parallel [
            (set (reg:DI 110 [ _24 ])
                (plus:DI (reg:DI 109 [ _23 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":388 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 109 [ _23 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 109 108 110 8 (set (reg/f:DI 199)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [5 s+0 S8 A64])) "../src/spline.f":388 81 {*movdi_internal}
     (nil))
(insn 110 109 111 8 (set (reg:SF 111 [ _25 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 110 [ _24 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 199)) [3 *s_97(D) S4 A32])) "../src/spline.f":388 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 199)
        (expr_list:REG_DEAD (reg:DI 110 [ _24 ])
            (nil))))
(insn 111 110 112 8 (set (reg:SF 200)
        (minus:SF (reg:SF 107 [ _21 ])
            (reg:SF 111 [ _25 ]))) "../src/spline.f":388 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 111 [ _25 ])
        (expr_list:REG_DEAD (reg:SF 107 [ _21 ])
            (nil))))
(insn 112 111 113 8 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [3 ds+0 S4 A32])
        (reg:SF 200)) "../src/spline.f":388 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 200)
        (nil)))
(insn 113 112 114 8 (set (reg/f:DI 201)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [4 ss+0 S8 A64])) "../src/spline.f":389 81 {*movdi_internal}
     (nil))
(insn 114 113 115 8 (set (reg:SF 112 [ _26 ])
        (mem:SF (reg/f:DI 201) [3 *ss_96(D)+0 S4 A32])) "../src/spline.f":389 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 201)
        (nil)))
(insn 115 114 116 8 (set (reg:SI 202)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":389 82 {*movsi_internal}
     (nil))
(insn 116 115 117 8 (parallel [
            (set (reg:SI 113 [ _27 ])
                (plus:SI (reg:SI 202)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":389 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 202)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff]))
                (nil)))))
(insn 117 116 118 8 (set (reg:DI 114 [ _28 ])
        (sign_extend:DI (reg:SI 113 [ _27 ]))) "../src/spline.f":389 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 113 [ _27 ])
        (nil)))
(insn 118 117 119 8 (parallel [
            (set (reg:DI 115 [ _29 ])
                (plus:DI (reg:DI 114 [ _28 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":389 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 114 [ _28 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 119 118 120 8 (set (reg/f:DI 203)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [5 s+0 S8 A64])) "../src/spline.f":389 81 {*movdi_internal}
     (nil))
(insn 120 119 121 8 (set (reg:SF 116 [ _30 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 115 [ _29 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 203)) [3 *s_97(D) S4 A32])) "../src/spline.f":389 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 203)
        (expr_list:REG_DEAD (reg:DI 115 [ _29 ])
            (nil))))
(insn 121 120 122 8 (set (reg:SF 117 [ _31 ])
        (minus:SF (reg:SF 112 [ _26 ])
            (reg:SF 116 [ _30 ]))) "../src/spline.f":389 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 116 [ _30 ])
        (expr_list:REG_DEAD (reg:SF 112 [ _26 ])
            (nil))))
(insn 122 121 123 8 (set (reg:SF 118 [ _32 ])
        (reg:SF 117 [ _31 ])) "../src/spline.f":389 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 117 [ _31 ])
        (nil)))
(insn 123 122 124 8 (set (reg:SF 204)
        (div:SF (reg:SF 118 [ _32 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -40 [0xffffffffffffffd8])) [3 ds+0 S4 A32]))) "../src/spline.f":389 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 118 [ _32 ])
        (nil)))
(insn 124 123 125 8 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -44 [0xffffffffffffffd4])) [3 t+0 S4 A32])
        (reg:SF 204)) "../src/spline.f":389 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 204)
        (nil)))
(insn 125 124 126 8 (set (reg:SI 205)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":390 82 {*movsi_internal}
     (nil))
(insn 126 125 127 8 (parallel [
            (set (reg:SI 119 [ _33 ])
                (plus:SI (reg:SI 205)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":390 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 205)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff]))
                (nil)))))
(insn 127 126 128 8 (set (reg:DI 120 [ _34 ])
        (sign_extend:DI (reg:SI 119 [ _33 ]))) "../src/spline.f":390 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 119 [ _33 ])
        (nil)))
(insn 128 127 129 8 (parallel [
            (set (reg:DI 121 [ _35 ])
                (plus:DI (reg:DI 120 [ _34 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":390 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 120 [ _34 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 129 128 130 8 (set (reg/f:DI 206)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -88 [0xffffffffffffffa8])) [5 xs+0 S8 A64])) "../src/spline.f":390 81 {*movdi_internal}
     (nil))
(insn 130 129 131 8 (set (reg:SF 122 [ _36 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 121 [ _35 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 206)) [3 *xs_102(D) S4 A32])) "../src/spline.f":390 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 206)
        (expr_list:REG_DEAD (reg:DI 121 [ _35 ])
            (nil))))
(insn 131 130 132 8 (set (reg:SF 123 [ _37 ])
        (mult:SF (reg:SF 122 [ _36 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -40 [0xffffffffffffffd8])) [3 ds+0 S4 A32]))) "../src/spline.f":390 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 122 [ _36 ])
        (nil)))
(insn 132 131 133 8 (set (reg:SI 207)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":390 82 {*movsi_internal}
     (nil))
(insn 133 132 134 8 (set (reg:DI 124 [ _38 ])
        (sign_extend:DI (reg:SI 207))) "../src/spline.f":390 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 207)
        (nil)))
(insn 134 133 135 8 (parallel [
            (set (reg:DI 125 [ _39 ])
                (plus:DI (reg:DI 124 [ _38 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":390 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 124 [ _38 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 135 134 136 8 (set (reg/f:DI 208)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [5 x+0 S8 A64])) "../src/spline.f":390 81 {*movdi_internal}
     (nil))
(insn 136 135 137 8 (set (reg:SF 126 [ _40 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 125 [ _39 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 208)) [3 *x_103(D) S4 A32])) "../src/spline.f":390 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 208)
        (expr_list:REG_DEAD (reg:DI 125 [ _39 ])
            (nil))))
(insn 137 136 138 8 (set (reg:SF 127 [ _41 ])
        (minus:SF (reg:SF 123 [ _37 ])
            (reg:SF 126 [ _40 ]))) "../src/spline.f":390 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 126 [ _40 ])
        (expr_list:REG_DEAD (reg:SF 123 [ _37 ])
            (nil))))
(insn 138 137 139 8 (set (reg:SI 209)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":390 82 {*movsi_internal}
     (nil))
(insn 139 138 140 8 (parallel [
            (set (reg:SI 128 [ _42 ])
                (plus:SI (reg:SI 209)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":390 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 209)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff]))
                (nil)))))
(insn 140 139 141 8 (set (reg:DI 129 [ _43 ])
        (sign_extend:DI (reg:SI 128 [ _42 ]))) "../src/spline.f":390 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 128 [ _42 ])
        (nil)))
(insn 141 140 142 8 (parallel [
            (set (reg:DI 130 [ _44 ])
                (plus:DI (reg:DI 129 [ _43 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":390 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 129 [ _43 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 142 141 143 8 (set (reg/f:DI 210)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [5 x+0 S8 A64])) "../src/spline.f":390 81 {*movdi_internal}
     (nil))
(insn 143 142 144 8 (set (reg:SF 131 [ _45 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 130 [ _44 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 210)) [3 *x_103(D) S4 A32])) "../src/spline.f":390 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 210)
        (expr_list:REG_DEAD (reg:DI 130 [ _44 ])
            (nil))))
(insn 144 143 145 8 (set (reg:SF 211)
        (plus:SF (reg:SF 127 [ _41 ])
            (reg:SF 131 [ _45 ]))) "../src/spline.f":390 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 131 [ _45 ])
        (expr_list:REG_DEAD (reg:SF 127 [ _41 ])
            (nil))))
(insn 145 144 146 8 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [3 cx1+0 S4 A32])
        (reg:SF 211)) "../src/spline.f":390 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 211)
        (nil)))
(insn 146 145 147 8 (set (reg:SI 212)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":391 82 {*movsi_internal}
     (nil))
(insn 147 146 148 8 (set (reg:DI 132 [ _46 ])
        (sign_extend:DI (reg:SI 212))) "../src/spline.f":391 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 212)
        (nil)))
(insn 148 147 149 8 (parallel [
            (set (reg:DI 133 [ _47 ])
                (plus:DI (reg:DI 132 [ _46 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":391 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 132 [ _46 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 149 148 150 8 (set (reg/f:DI 213)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -88 [0xffffffffffffffa8])) [5 xs+0 S8 A64])) "../src/spline.f":391 81 {*movdi_internal}
     (nil))
(insn 150 149 151 8 (set (reg:SF 134 [ _48 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 133 [ _47 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 213)) [3 *xs_102(D) S4 A32])) "../src/spline.f":391 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 213)
        (expr_list:REG_DEAD (reg:DI 133 [ _47 ])
            (nil))))
(insn 151 150 152 8 (set (reg:SF 135 [ _49 ])
        (mult:SF (reg:SF 134 [ _48 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -40 [0xffffffffffffffd8])) [3 ds+0 S4 A32]))) "../src/spline.f":391 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 134 [ _48 ])
        (nil)))
(insn 152 151 153 8 (set (reg:SI 214)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":391 82 {*movsi_internal}
     (nil))
(insn 153 152 154 8 (set (reg:DI 136 [ _50 ])
        (sign_extend:DI (reg:SI 214))) "../src/spline.f":391 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 214)
        (nil)))
(insn 154 153 155 8 (parallel [
            (set (reg:DI 137 [ _51 ])
                (plus:DI (reg:DI 136 [ _50 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":391 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 136 [ _50 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 155 154 156 8 (set (reg/f:DI 215)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [5 x+0 S8 A64])) "../src/spline.f":391 81 {*movdi_internal}
     (nil))
(insn 156 155 157 8 (set (reg:SF 138 [ _52 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 137 [ _51 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 215)) [3 *x_103(D) S4 A32])) "../src/spline.f":391 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 215)
        (expr_list:REG_DEAD (reg:DI 137 [ _51 ])
            (nil))))
(insn 157 156 158 8 (set (reg:SF 139 [ _53 ])
        (minus:SF (reg:SF 135 [ _49 ])
            (reg:SF 138 [ _52 ]))) "../src/spline.f":391 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 138 [ _52 ])
        (expr_list:REG_DEAD (reg:SF 135 [ _49 ])
            (nil))))
(insn 158 157 159 8 (set (reg:SI 216)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":391 82 {*movsi_internal}
     (nil))
(insn 159 158 160 8 (parallel [
            (set (reg:SI 140 [ _54 ])
                (plus:SI (reg:SI 216)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":391 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 216)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff]))
                (nil)))))
(insn 160 159 161 8 (set (reg:DI 141 [ _55 ])
        (sign_extend:DI (reg:SI 140 [ _54 ]))) "../src/spline.f":391 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 140 [ _54 ])
        (nil)))
(insn 161 160 162 8 (parallel [
            (set (reg:DI 142 [ _56 ])
                (plus:DI (reg:DI 141 [ _55 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":391 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 141 [ _55 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 162 161 163 8 (set (reg/f:DI 217)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [5 x+0 S8 A64])) "../src/spline.f":391 81 {*movdi_internal}
     (nil))
(insn 163 162 164 8 (set (reg:SF 143 [ _57 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 142 [ _56 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 217)) [3 *x_103(D) S4 A32])) "../src/spline.f":391 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 217)
        (expr_list:REG_DEAD (reg:DI 142 [ _56 ])
            (nil))))
(insn 164 163 165 8 (set (reg:SF 218)
        (plus:SF (reg:SF 139 [ _53 ])
            (reg:SF 143 [ _57 ]))) "../src/spline.f":391 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 143 [ _57 ])
        (expr_list:REG_DEAD (reg:SF 139 [ _53 ])
            (nil))))
(insn 165 164 166 8 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -52 [0xffffffffffffffcc])) [3 cx2+0 S4 A32])
        (reg:SF 218)) "../src/spline.f":391 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 218)
        (nil)))
(insn 166 165 167 8 (set (reg:SF 219)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -44 [0xffffffffffffffd4])) [3 t+0 S4 A32])) "../src/spline.f":392 127 {*movsf_internal}
     (nil))
(insn 167 166 168 8 (set (reg:SF 220)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC1") [flags 0x2]) [3  S4 A32])) "../src/spline.f":392 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 6.0e+0 [0x0.cp+3])
        (nil)))
(insn 168 167 169 8 (set (reg:SF 144 [ _58 ])
        (mult:SF (reg:SF 219)
            (reg:SF 220))) "../src/spline.f":392 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 220)
        (expr_list:REG_DEAD (reg:SF 219)
            (nil))))
(insn 169 168 170 8 (set (reg:SF 221)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC2") [flags 0x2]) [3  S4 A32])) "../src/spline.f":392 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 4.0e+0 [0x0.8p+3])
        (nil)))
(insn 170 169 171 8 (set (reg:SF 145 [ _59 ])
        (minus:SF (reg:SF 144 [ _58 ])
            (reg:SF 221))) "../src/spline.f":392 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 221)
        (expr_list:REG_DEAD (reg:SF 144 [ _58 ])
            (nil))))
(insn 171 170 172 8 (set (reg:SF 146 [ _60 ])
        (reg:SF 145 [ _59 ])) "../src/spline.f":392 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 145 [ _59 ])
        (nil)))
(insn 172 171 173 8 (set (reg:SF 147 [ _61 ])
        (mult:SF (reg:SF 146 [ _60 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -48 [0xffffffffffffffd0])) [3 cx1+0 S4 A32]))) "../src/spline.f":392 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 146 [ _60 ])
        (nil)))
(insn 173 172 174 8 (set (reg:SF 222)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -44 [0xffffffffffffffd4])) [3 t+0 S4 A32])) "../src/spline.f":392 127 {*movsf_internal}
     (nil))
(insn 174 173 175 8 (set (reg:SF 223)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC1") [flags 0x2]) [3  S4 A32])) "../src/spline.f":392 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 6.0e+0 [0x0.cp+3])
        (nil)))
(insn 175 174 176 8 (set (reg:SF 148 [ _62 ])
        (mult:SF (reg:SF 222)
            (reg:SF 223))) "../src/spline.f":392 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 223)
        (expr_list:REG_DEAD (reg:SF 222)
            (nil))))
(insn 176 175 177 8 (set (reg:SF 224)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC4") [flags 0x2]) [3  S4 A32])) "../src/spline.f":392 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 2.0e+0 [0x0.8p+2])
        (nil)))
(insn 177 176 178 8 (set (reg:SF 149 [ _63 ])
        (minus:SF (reg:SF 148 [ _62 ])
            (reg:SF 224))) "../src/spline.f":392 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 224)
        (expr_list:REG_DEAD (reg:SF 148 [ _62 ])
            (nil))))
(insn 178 177 179 8 (set (reg:SF 150 [ _64 ])
        (reg:SF 149 [ _63 ])) "../src/spline.f":392 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 149 [ _63 ])
        (nil)))
(insn 179 178 180 8 (set (reg:SF 151 [ _65 ])
        (mult:SF (reg:SF 150 [ _64 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -52 [0xffffffffffffffcc])) [3 cx2+0 S4 A32]))) "../src/spline.f":392 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 150 [ _64 ])
        (nil)))
(insn 180 179 181 8 (set (reg:SF 152 [ _66 ])
        (plus:SF (reg:SF 147 [ _61 ])
            (reg:SF 151 [ _65 ]))) "../src/spline.f":392 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 151 [ _65 ])
        (expr_list:REG_DEAD (reg:SF 147 [ _61 ])
            (nil))))
(insn 181 180 182 8 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [3 __result_d2val+0 S4 A64])
        (reg:SF 152 [ _66 ])) "../src/spline.f":392 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 152 [ _66 ])
        (nil)))
(insn 182 181 183 8 (set (reg:SF 170 [ _107 ])
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [3 ds+0 S4 A32])) "../src/spline.f":393 127 {*movsf_internal}
     (nil))
(insn 183 182 184 8 (set (reg:SF 171 [ _108 ])
        (mult:SF (reg:SF 170 [ _107 ])
            (reg:SF 170 [ _107 ]))) "../src/spline.f":393 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 170 [ _107 ])
        (nil)))
(insn 184 183 185 8 (set (reg:SF 153 [ __result_d2val.207_67 ])
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [3 __result_d2val+0 S4 A64])) "../src/spline.f":393 127 {*movsf_internal}
     (nil))
(insn 185 184 186 8 (set (reg:SF 154 [ _68 ])
        (div:SF (reg:SF 153 [ __result_d2val.207_67 ])
            (reg:SF 171 [ _108 ]))) "../src/spline.f":393 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 171 [ _108 ])
        (expr_list:REG_DEAD (reg:SF 153 [ __result_d2val.207_67 ])
            (nil))))
(insn 186 185 187 8 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [3 __result_d2val+0 S4 A64])
        (reg:SF 154 [ _68 ])) "../src/spline.f":393 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 154 [ _68 ])
        (nil)))
(insn 187 186 190 8 (set (reg:SF 172 [ _110 ])
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [3 __result_d2val+0 S4 A64])) "../src/spline.f":394 127 {*movsf_internal}
     (nil))
(insn 190 187 194 8 (set (reg:SF 173 [ <retval> ])
        (reg:SF 172 [ _110 ])) 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 172 [ _110 ])
        (nil)))
(insn 194 190 195 8 (set (reg/i:SF 21 xmm0)
        (reg:SF 173 [ <retval> ])) "../src/spline.f":395 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 173 [ <retval> ])
        (nil)))
(insn 195 194 0 8 (use (reg/i:SF 21 xmm0)) "../src/spline.f":395 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0]


;; Function sevlin (sevlin_, funcdef_no=9, decl_uid=3922, cgraph_uid=9, symbol_order=9)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 10 n_edges 11 count 10 (    1)
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 9 8
;;
;; Loop 1
;;  header 3, latch 7
;;  depth 1, outer 0
;;  nodes: 3 7 6 5 4
;; 2 succs { 3 }
;; 3 succs { 9 4 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 3 }
;; 9 succs { 8 }
;; 8 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r185: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r185,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r184: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r184,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r183: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r183,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r182: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r182,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r181: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r181,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r180: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r180,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r179: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r179,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r178: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r178,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r177: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a27 (r177,l0) best SSE_REGS, allocno SSE_REGS
    r176: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r176,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r175: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r175,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r174: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a33 (r174,l0) best SSE_REGS, allocno SSE_REGS
    r173: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a38 (r173,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r172: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a42 (r172,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r171: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a43 (r171,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r170: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a44 (r170,l0) best SSE_REGS, allocno SSE_REGS
    r169: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a47 (r169,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r168: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a51 (r168,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r167: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a52 (r167,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r166: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a55 (r166,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r165: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a56 (r165,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r164: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a57 (r164,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r163: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a60 (r163,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r162: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a63 (r162,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r161: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a64 (r161,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r160: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a65 (r160,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r159: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a66 (r159,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r158: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a68 (r158,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r157: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a69 (r157,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r156: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a70 (r156,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r155: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a72 (r155,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r154: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a73 (r154,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r153: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a74 (r153,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r152: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a78 (r152,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r151: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a80 (r151,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r150: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a82 (r150,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r149: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a86 (r149,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r148: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a88 (r148,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r147: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a90 (r147,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a77 (r143,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a79 (r142,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a85 (r138,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a87 (r137,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r136: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a1 (r136,l0) best SSE_REGS, allocno SSE_REGS
    r135: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a2 (r135,l0) best SSE_REGS, allocno SSE_REGS
    r134: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a3 (r134,l0) best SSE_REGS, allocno SSE_REGS
    r133: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a4 (r133,l0) best SSE_REGS, allocno SSE_REGS
    r132: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r132,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r131: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r131,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r130: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r130,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r129: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a5 (r129,l0) best SSE_REGS, allocno SSE_REGS
    r128: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r128,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r127: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r127,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r126: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a16 (r126,l0) best SSE_REGS, allocno SSE_REGS
    r125: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a17 (r125,l0) best SSE_REGS, allocno SSE_REGS
    r124: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a19 (r124,l0) best SSE_REGS, allocno SSE_REGS
    r123: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r123,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r122: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r122,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r121,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r120: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a20 (r120,l0) best SSE_REGS, allocno SSE_REGS
    r119: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a26 (r119,l0) best SSE_REGS, allocno SSE_REGS
    r118: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a18 (r118,l0) best SSE_REGS, allocno SSE_REGS
    r117: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a28 (r117,l0) best SSE_REGS, allocno SSE_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a31 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a34 (r114,l0) best SSE_REGS, allocno SSE_REGS
    r113: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a35 (r113,l0) best SSE_REGS, allocno SSE_REGS
    r112: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a36 (r112,l0) best SSE_REGS, allocno SSE_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a39 (r111,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a40 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a41 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a37 (r108,l0) best SSE_REGS, allocno SSE_REGS
    r107: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a45 (r107,l0) best SSE_REGS, allocno SSE_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a48 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a49 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a50 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a46 (r103,l0) best SSE_REGS, allocno SSE_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a53 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a54 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a59 (r100,l0) best SSE_REGS, allocno SSE_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a61 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a62 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a58 (r97,l0) best SSE_REGS, allocno SSE_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a67 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a71 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a75 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a76 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a81 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a83 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a84 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a89 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r185,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a1(r136,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a2(r135,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 ALL_REGS:29 MEM:9
  a3(r134,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:9
  a4(r133,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a5(r129,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a6(r184,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a7(r132,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a8(r131,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a9(r130,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a10(r183,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a11(r182,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a12(r128,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a13(r127,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a14(r181,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a15(r180,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a16(r126,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a17(r125,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a18(r118,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a19(r124,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a20(r120,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 ALL_REGS:29 MEM:8
  a21(r179,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a22(r123,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a23(r122,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a24(r121,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a25(r178,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a26(r119,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:9
  a27(r177,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a28(r117,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a29(r176,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a30(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a31(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a32(r175,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a33(r174,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a34(r114,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 ALL_REGS:29 MEM:9
  a35(r113,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:9
  a36(r112,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a37(r108,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a38(r173,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a39(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a40(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a41(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a42(r172,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a43(r171,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a44(r170,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a45(r107,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a46(r103,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a47(r169,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a48(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a49(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a50(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a51(r168,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a52(r167,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a53(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a54(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a55(r166,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a56(r165,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a57(r164,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a58(r97,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a59(r100,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a60(r163,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a61(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a62(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a63(r162,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a64(r161,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a65(r160,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a66(r159,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a67(r96,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 CLOBBERED_REGS:2 Q_REGS:2 NON_Q_REGS:2 TLS_GOTBASE_REGS:2 GENERAL_REGS:2 SSE_FIRST_REG:26 NO_REX_SSE_REGS:26 SSE_REGS:26 MMX_REGS:41 INT_SSE_REGS:29 ALL_REGS:626 MEM:11
  a68(r158,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 CLOBBERED_REGS:2 Q_REGS:2 NON_Q_REGS:2 TLS_GOTBASE_REGS:2 GENERAL_REGS:2 SSE_FIRST_REG:18 NO_REX_SSE_REGS:18 SSE_REGS:18 MMX_REGS:28 INT_SSE_REGS:20 ALL_REGS:418 MEM:8
  a69(r157,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a70(r156,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a71(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a72(r155,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a73(r154,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a74(r153,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a75(r93,l0) costs: AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:2
  a76(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a77(r143,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a78(r152,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a79(r142,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:38 INT_SSE_REGS:27 ALL_REGS:520 MEM:11
  a80(r151,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:8
  a81(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a82(r150,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a83(r89,l0) costs: AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:2
  a84(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a85(r138,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a86(r149,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a87(r137,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:38 INT_SSE_REGS:27 ALL_REGS:520 MEM:11
  a88(r148,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:8
  a89(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a90(r147,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8

   Insn 153(l0): point = 0
   Insn 145(l0): point = 2
   Insn 144(l0): point = 4
   Insn 143(l0): point = 6
   Insn 142(l0): point = 8
   Insn 141(l0): point = 10
   Insn 140(l0): point = 12
   Insn 139(l0): point = 14
   Insn 138(l0): point = 16
   Insn 137(l0): point = 18
   Insn 136(l0): point = 20
   Insn 135(l0): point = 22
   Insn 134(l0): point = 24
   Insn 133(l0): point = 26
   Insn 132(l0): point = 28
   Insn 131(l0): point = 30
   Insn 130(l0): point = 32
   Insn 129(l0): point = 34
   Insn 128(l0): point = 36
   Insn 127(l0): point = 38
   Insn 126(l0): point = 40
   Insn 125(l0): point = 42
   Insn 124(l0): point = 44
   Insn 123(l0): point = 46
   Insn 122(l0): point = 48
   Insn 121(l0): point = 50
   Insn 120(l0): point = 52
   Insn 119(l0): point = 54
   Insn 118(l0): point = 56
   Insn 117(l0): point = 58
   Insn 116(l0): point = 60
   Insn 115(l0): point = 62
   Insn 114(l0): point = 64
   Insn 113(l0): point = 66
   Insn 112(l0): point = 68
   Insn 111(l0): point = 70
   Insn 110(l0): point = 72
   Insn 109(l0): point = 74
   Insn 108(l0): point = 76
   Insn 107(l0): point = 78
   Insn 106(l0): point = 80
   Insn 105(l0): point = 82
   Insn 104(l0): point = 84
   Insn 103(l0): point = 86
   Insn 102(l0): point = 88
   Insn 101(l0): point = 90
   Insn 100(l0): point = 92
   Insn 99(l0): point = 94
   Insn 98(l0): point = 96
   Insn 97(l0): point = 98
   Insn 96(l0): point = 100
   Insn 95(l0): point = 102
   Insn 94(l0): point = 104
   Insn 93(l0): point = 106
   Insn 92(l0): point = 108
   Insn 91(l0): point = 110
   Insn 90(l0): point = 112
   Insn 89(l0): point = 114
   Insn 88(l0): point = 116
   Insn 87(l0): point = 118
   Insn 86(l0): point = 120
   Insn 161(l0): point = 123
   Insn 49(l0): point = 126
   Insn 48(l0): point = 128
   Insn 47(l0): point = 130
   Insn 46(l0): point = 132
   Insn 157(l0): point = 135
   Insn 78(l0): point = 138
   Insn 77(l0): point = 140
   Insn 155(l0): point = 143
   Insn 72(l0): point = 145
   Insn 71(l0): point = 147
   Insn 66(l0): point = 150
   Insn 65(l0): point = 152
   Insn 64(l0): point = 154
   Insn 63(l0): point = 156
   Insn 62(l0): point = 158
   Insn 61(l0): point = 160
   Insn 60(l0): point = 162
   Insn 59(l0): point = 164
   Insn 58(l0): point = 166
   Insn 57(l0): point = 168
   Insn 56(l0): point = 170
   Insn 55(l0): point = 172
   Insn 54(l0): point = 174
   Insn 53(l0): point = 176
   Insn 52(l0): point = 178
   Insn 51(l0): point = 180
   Insn 44(l0): point = 183
   Insn 43(l0): point = 185
   Insn 42(l0): point = 187
   Insn 41(l0): point = 189
   Insn 37(l0): point = 191
   Insn 36(l0): point = 193
   Insn 35(l0): point = 195
   Insn 33(l0): point = 197
   Insn 31(l0): point = 199
   Insn 32(l0): point = 201
   Insn 30(l0): point = 203
   Insn 29(l0): point = 205
   Insn 28(l0): point = 207
   Insn 27(l0): point = 209
   Insn 26(l0): point = 211
   Insn 22(l0): point = 213
   Insn 21(l0): point = 215
   Insn 20(l0): point = 217
   Insn 18(l0): point = 219
   Insn 16(l0): point = 221
   Insn 17(l0): point = 223
   Insn 15(l0): point = 225
   Insn 14(l0): point = 227
   Insn 13(l0): point = 229
   Insn 12(l0): point = 231
   Insn 11(l0): point = 233
   Insn 7(l0): point = 235
   Insn 6(l0): point = 237
   Insn 5(l0): point = 239
   Insn 4(l0): point = 241
   Insn 3(l0): point = 243
   Insn 2(l0): point = 245
 a0(r185): [3..4]
 a1(r136): [3..6]
 a2(r135): [7..8]
 a3(r134): [9..10]
 a4(r133): [11..12]
 a5(r129): [11..24]
 a6(r184): [13..14]
 a7(r132): [13..16]
 a8(r131): [17..18]
 a9(r130): [19..20]
 a10(r183): [21..22]
 a11(r182): [25..26]
 a12(r128): [25..28]
 a13(r127): [29..30]
 a14(r181): [31..32]
 a15(r180): [35..36]
 a16(r126): [35..38]
 a17(r125): [39..40]
 a18(r118): [39..60]
 a19(r124): [41..42]
 a20(r120): [41..54]
 a21(r179): [43..44]
 a22(r123): [43..46]
 a23(r122): [47..48]
 a24(r121): [49..50]
 a25(r178): [51..52]
 a26(r119): [55..56]
 a27(r177): [57..58]
 a28(r117): [61..62]
 a29(r176): [63..64]
 a30(r116): [63..66]
 a31(r115): [67..68]
 a32(r175): [69..70]
 a33(r174): [73..74]
 a34(r114): [75..76]
 a35(r113): [77..78]
 a36(r112): [79..80]
 a37(r108): [79..92]
 a38(r173): [81..82]
 a39(r111): [81..84]
 a40(r110): [85..86]
 a41(r109): [87..88]
 a42(r172): [89..90]
 a43(r171): [93..94]
 a44(r170): [97..98]
 a45(r107): [99..100]
 a46(r103): [99..112]
 a47(r169): [101..102]
 a48(r106): [101..104]
 a49(r105): [105..106]
 a50(r104): [107..108]
 a51(r168): [109..110]
 a52(r167): [113..114]
 a53(r102): [113..116]
 a54(r101): [117..118]
 a55(r166): [119..120]
 a56(r165): [139..140]
 a57(r164): [146..147]
 a58(r97): [153..164]
 a59(r100): [153..154]
 a60(r163): [155..156]
 a61(r99): [155..158]
 a62(r98): [159..160]
 a63(r162): [161..162]
 a64(r161): [165..166]
 a65(r160): [169..170]
 a66(r159): [171..172]
 a67(r96): [173..176]
 a68(r158): [173..174]
 a69(r157): [177..178]
 a70(r156): [177..180]
 a71(r95): [129..130]
 a72(r155): [131..132]
 a73(r154): [184..185]
 a74(r153): [186..187]
 a75(r93 [0]): [192..247]
 a75(r93 [1]): [191..247]
 a76(r92): [194..195]
 a77(r143): [196..197]
 a78(r152): [198..201]
 a79(r142): [198..203]
 a80(r151): [206..207]
 a81(r91): [208..209]
 a82(r150): [210..211]
 a83(r89 [0]): [214..247]
 a83(r89 [1]): [213..247]
 a84(r88): [216..217]
 a85(r138): [218..219]
 a86(r149): [220..223]
 a87(r137): [220..225]
 a88(r148): [228..229]
 a89(r87): [230..231]
 a90(r147): [232..233]
Compressing live ranges: from 248 to 138 - 55%
Ranges after the compression:
 a0(r185): [0..1]
 a1(r136): [0..1]
 a2(r135): [2..3]
 a3(r134): [4..5]
 a4(r133): [6..7]
 a5(r129): [6..15]
 a6(r184): [8..9]
 a7(r132): [8..9]
 a8(r131): [10..11]
 a9(r130): [12..13]
 a10(r183): [14..15]
 a11(r182): [16..17]
 a12(r128): [16..17]
 a13(r127): [18..19]
 a14(r181): [20..21]
 a15(r180): [22..23]
 a16(r126): [22..23]
 a17(r125): [24..25]
 a18(r118): [24..39]
 a19(r124): [26..27]
 a20(r120): [26..35]
 a21(r179): [28..29]
 a22(r123): [28..29]
 a23(r122): [30..31]
 a24(r121): [32..33]
 a25(r178): [34..35]
 a26(r119): [36..37]
 a27(r177): [38..39]
 a28(r117): [40..41]
 a29(r176): [42..43]
 a30(r116): [42..43]
 a31(r115): [44..45]
 a32(r175): [46..47]
 a33(r174): [48..49]
 a34(r114): [50..51]
 a35(r113): [52..53]
 a36(r112): [54..55]
 a37(r108): [54..63]
 a38(r173): [56..57]
 a39(r111): [56..57]
 a40(r110): [58..59]
 a41(r109): [60..61]
 a42(r172): [62..63]
 a43(r171): [64..65]
 a44(r170): [66..67]
 a45(r107): [68..69]
 a46(r103): [68..77]
 a47(r169): [70..71]
 a48(r106): [70..71]
 a49(r105): [72..73]
 a50(r104): [74..75]
 a51(r168): [76..77]
 a52(r167): [78..79]
 a53(r102): [78..79]
 a54(r101): [80..81]
 a55(r166): [82..83]
 a56(r165): [88..89]
 a57(r164): [90..91]
 a58(r97): [92..99]
 a59(r100): [92..93]
 a60(r163): [94..95]
 a61(r99): [94..95]
 a62(r98): [96..97]
 a63(r162): [98..99]
 a64(r161): [100..101]
 a65(r160): [102..103]
 a66(r159): [104..105]
 a67(r96): [106..107]
 a68(r158): [106..107]
 a69(r157): [108..109]
 a70(r156): [108..109]
 a71(r95): [84..85]
 a72(r155): [86..87]
 a73(r154): [110..111]
 a74(r153): [112..113]
 a75(r93 [0]): [114..137]
 a75(r93 [1]): [114..137]
 a76(r92): [114..115]
 a77(r143): [116..117]
 a78(r152): [118..119]
 a79(r142): [118..119]
 a80(r151): [120..121]
 a81(r91): [122..123]
 a82(r150): [124..125]
 a83(r89 [0]): [126..137]
 a83(r89 [1]): [126..137]
 a84(r88): [126..127]
 a85(r138): [128..129]
 a86(r149): [130..131]
 a87(r137): [130..131]
 a88(r148): [132..133]
 a89(r87): [134..135]
 a90(r147): [136..137]
  regions=1, blocks=10, points=138
    allocnos=91 (big 2), copies=0, conflicts=0, ranges=93
Disposition:
   89:r87  l0     0   84:r88  l0     0   83:r89  l0    41   81:r91  l0     0
   76:r92  l0     0   75:r93  l0    39   71:r95  l0     0   67:r96  l0     0
   58:r97  l0    22   62:r98  l0     0   61:r99  l0     1   59:r100 l0    21
   54:r101 l0     0   53:r102 l0     1   46:r103 l0    21   50:r104 l0     0
   49:r105 l0     0   48:r106 l0     1   45:r107 l0    22   37:r108 l0    21
   41:r109 l0     0   40:r110 l0     0   39:r111 l0     1   36:r112 l0    22
   35:r113 l0    21   34:r114 l0    21   31:r115 l0     0   30:r116 l0     1
   28:r117 l0    21   18:r118 l0    22   26:r119 l0    21   20:r120 l0    23
   24:r121 l0     0   23:r122 l0     0   22:r123 l0     1   19:r124 l0    21
   17:r125 l0    21   16:r126 l0    21   13:r127 l0     0   12:r128 l0     1
    5:r129 l0    21    9:r130 l0     0    8:r131 l0     0    7:r132 l0     1
    4:r133 l0    22    3:r134 l0    21    2:r135 l0    21    1:r136 l0    21
   87:r137 l0     0   85:r138 l0     0   79:r142 l0     0   77:r143 l0     0
   90:r147 l0     0   88:r148 l0     0   86:r149 l0     1   82:r150 l0     0
   80:r151 l0     0   78:r152 l0     1   74:r153 l0     0   73:r154 l0     0
   72:r155 l0     0   70:r156 l0     1   69:r157 l0     0   68:r158 l0     1
   66:r159 l0     0   65:r160 l0     0   64:r161 l0     0   63:r162 l0     0
   60:r163 l0     0   57:r164 l0     0   56:r165 l0     0   55:r166 l0     0
   52:r167 l0     0   51:r168 l0     0   47:r169 l0     0   44:r170 l0    21
   43:r171 l0     0   42:r172 l0     0   38:r173 l0     0   33:r174 l0    21
   32:r175 l0     0   29:r176 l0     0   27:r177 l0    21   25:r178 l0     0
   21:r179 l0     0   15:r180 l0     0   14:r181 l0     0   11:r182 l0     0
   10:r183 l0     0    6:r184 l0     0    0:r185 l0     0
+++Costs: overall 8, reg 8, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


sevlin

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 17 [flags] 37 [r8] 38 [r9]
;;  ref usage 	r0={1d} r1={1d,1u} r2={1d,1u} r4={1d,1u} r5={1d,1u} r6={1d,9u} r7={1d,9u} r16={1d,8u} r17={21d,4u} r20={1d,59u,8e} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d,1u} r38={1d,1u} r87={1d,1u} r88={1d,1u} r89={2d,2u} r91={1d,1u} r92={1d,1u} r93={2d,2u} r95={1d,1u} r96={1d,2u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,1u} r127={1d,1u} r128={1d,1u} r129={1d,1u} r130={1d,1u} r131={1d,1u} r132={1d,1u} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,2u} r138={1d,1u} r142={1d,2u} r143={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d,1u} r165={1d,1u} r166={1d,1u} r167={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,1u} r171={1d,1u} r172={1d,1u} r173={1d,1u} r174={1d,1u} r175={1d,1u} r176={1d,1u} r177={1d,1u} r178={1d,1u} r179={1d,1u} r180={1d,1u} r181={1d,1u} r182={1d,1u} r183={1d,1u} r184={1d,1u} r185={1d,1u} 
;;    total ref usage 332{133d,191u,8e} in 120{120 regular + 0 call} insns.
(note 1 0 9 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9] 89 93
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9] 89 93
;; lr  def 	 17 [flags] 87 88 91 92 137 138 142 143 147 148 149 150 151 152 153 154
(note 9 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 9 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [4 ss+0 S8 A64])
        (reg:DI 5 di [ ss ])) "../src/spline.f":439 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ ss ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [5 x+0 S8 A64])
        (reg:DI 4 si [ x ])) "../src/spline.f":439 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ x ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [5 s+0 S8 A64])
        (reg:DI 1 dx [ s ])) "../src/spline.f":439 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ s ])
        (nil)))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [6 n+0 S8 A64])
        (reg:DI 2 cx [ n ])) "../src/spline.f":439 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [ n ])
        (nil)))
(insn 6 5 7 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -88 [0xffffffffffffffa8])) [4 xx+0 S8 A64])
        (reg:DI 37 r8 [ xx ])) "../src/spline.f":439 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 37 r8 [ xx ])
        (nil)))
(insn 7 6 8 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [4 xxs+0 S8 A64])
        (reg:DI 38 r9 [ xxs ])) "../src/spline.f":439 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 38 r9 [ xxs ])
        (nil)))
(note 8 7 11 2 NOTE_INSN_FUNCTION_BEG)
(insn 11 8 12 2 (set (reg/f:DI 147)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [6 n+0 S8 A64])) "../src/spline.f":439 81 {*movdi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:SI 87 [ _1 ])
        (mem:SI (reg/f:DI 147) [1 *n_56(D)+0 S4 A32])) "../src/spline.f":439 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 147)
        (nil)))
(insn 13 12 14 2 (set (reg:DI 148)
        (sign_extend:DI (reg:SI 87 [ _1 ]))) "../src/spline.f":439 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 87 [ _1 ])
        (nil)))
(insn 14 13 15 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 ubound.56+0 S8 A64])
        (reg:DI 148)) "../src/spline.f":439 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 148)
        (nil)))
(insn 15 14 17 2 (set (reg:DI 137 [ size.57_58 ])
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 ubound.56+0 S8 A64])) "../src/spline.f":439 81 {*movdi_internal}
     (nil))
(insn 17 15 16 2 (set (reg:DI 149)
        (const_int 0 [0])) "../src/spline.f":439 81 {*movdi_internal}
     (nil))
(insn 16 17 18 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 137 [ size.57_58 ])
            (const_int 0 [0]))) "../src/spline.f":439 4 {*cmpdi_ccno_1}
     (nil))
(insn 18 16 20 2 (set (reg:DI 138 [ size.57_59 ])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 137 [ size.57_58 ])
            (reg:DI 149))) "../src/spline.f":439 967 {*movdicc_noc}
     (expr_list:REG_DEAD (reg:DI 149)
        (expr_list:REG_DEAD (reg:DI 137 [ size.57_58 ])
            (expr_list:REG_DEAD (reg:CCGOC 17 flags)
                (nil)))))
(insn 20 18 21 2 (set (reg:DI 88 [ size.208_2 ])
        (reg:DI 138 [ size.57_59 ])) "../src/spline.f":439 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 138 [ size.57_59 ])
        (nil)))
(insn 21 20 22 2 (set (subreg:DI (reg:TI 89 [ _3 ]) 0)
        (reg:DI 88 [ size.208_2 ])) "../src/spline.f":439 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88 [ size.208_2 ])
        (nil)))
(insn 22 21 26 2 (set (subreg:DI (reg:TI 89 [ _3 ]) 8)
        (const_int 0 [0])) "../src/spline.f":439 81 {*movdi_internal}
     (expr_list:REG_UNUSED (reg:TI 89 [ _3 ])
        (nil)))
(insn 26 22 27 2 (set (reg/f:DI 150)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [6 n+0 S8 A64])) "../src/spline.f":439 81 {*movdi_internal}
     (nil))
(insn 27 26 28 2 (set (reg:SI 91 [ _5 ])
        (mem:SI (reg/f:DI 150) [1 *n_56(D)+0 S4 A32])) "../src/spline.f":439 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 150)
        (nil)))
(insn 28 27 29 2 (set (reg:DI 151)
        (sign_extend:DI (reg:SI 91 [ _5 ]))) "../src/spline.f":439 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 91 [ _5 ])
        (nil)))
(insn 29 28 30 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [2 ubound.58+0 S8 A64])
        (reg:DI 151)) "../src/spline.f":439 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 151)
        (nil)))
(insn 30 29 32 2 (set (reg:DI 142 [ size.59_64 ])
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [2 ubound.58+0 S8 A64])) "../src/spline.f":439 81 {*movdi_internal}
     (nil))
(insn 32 30 31 2 (set (reg:DI 152)
        (const_int 0 [0])) "../src/spline.f":439 81 {*movdi_internal}
     (nil))
(insn 31 32 33 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 142 [ size.59_64 ])
            (const_int 0 [0]))) "../src/spline.f":439 4 {*cmpdi_ccno_1}
     (nil))
(insn 33 31 35 2 (set (reg:DI 143 [ size.59_65 ])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 142 [ size.59_64 ])
            (reg:DI 152))) "../src/spline.f":439 967 {*movdicc_noc}
     (expr_list:REG_DEAD (reg:DI 152)
        (expr_list:REG_DEAD (reg:DI 142 [ size.59_64 ])
            (expr_list:REG_DEAD (reg:CCGOC 17 flags)
                (nil)))))
(insn 35 33 36 2 (set (reg:DI 92 [ size.210_6 ])
        (reg:DI 143 [ size.59_65 ])) "../src/spline.f":439 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 143 [ size.59_65 ])
        (nil)))
(insn 36 35 37 2 (set (subreg:DI (reg:TI 93 [ _7 ]) 0)
        (reg:DI 92 [ size.210_6 ])) "../src/spline.f":439 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 92 [ size.210_6 ])
        (nil)))
(insn 37 36 41 2 (set (subreg:DI (reg:TI 93 [ _7 ]) 8)
        (const_int 0 [0])) "../src/spline.f":439 81 {*movdi_internal}
     (expr_list:REG_UNUSED (reg:TI 93 [ _7 ])
        (nil)))
(insn 41 37 42 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 ilow+0 S4 A32])
        (const_int 1 [0x1])) "../src/spline.f":446 82 {*movsi_internal}
     (nil))
(insn 42 41 43 2 (set (reg/f:DI 153)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [6 n+0 S8 A64])) "../src/spline.f":447 81 {*movdi_internal}
     (nil))
(insn 43 42 44 2 (set (reg:SI 154)
        (mem:SI (reg/f:DI 153) [1 *n_56(D)+0 S4 A32])) "../src/spline.f":447 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 153)
        (nil)))
(insn 44 43 81 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
        (reg:SI 154)) "../src/spline.f":447 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 154)
        (nil)))
;;  succ:       3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 (FALLTHRU)
;;              7 [100.0%] 
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 95 155
(code_label 81 44 45 3 113 (nil) [1 uses])
(note 45 81 46 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 46 45 47 3 (set (reg:SI 155)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":449 82 {*movsi_internal}
     (nil))
(insn 47 46 48 3 (parallel [
            (set (reg:SI 95 [ _9 ])
                (minus:SI (reg:SI 155)
                    (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [1 ilow+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":449 273 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 155)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [1 ilow+0 S4 A32]))
                (nil)))))
(insn 48 47 49 3 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 95 [ _9 ])
            (const_int 1 [0x1]))) "../src/spline.f":449 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 95 [ _9 ])
        (nil)))
(jump_insn 49 48 50 3 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 160)
            (pc))) "../src/spline.f":449 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 160)
;;  succ:       9
;;              4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 96 97 98 99 100 156 157 158 159 160 161 162 163
(note 50 49 51 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 51 50 52 4 (set (reg:SI 156)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":451 82 {*movsi_internal}
     (nil))
(insn 52 51 53 4 (set (reg:SI 157)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 ilow+0 S4 A32])) "../src/spline.f":451 82 {*movsi_internal}
     (nil))
(insn 53 52 54 4 (parallel [
            (set (reg:SI 96 [ _10 ])
                (plus:SI (reg:SI 156)
                    (reg:SI 157)))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":451 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 157)
        (expr_list:REG_DEAD (reg:SI 156)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                                (const_int -8 [0xfffffffffffffff8])) [1 ilow+0 S4 A32]))
                    (nil))))))
(insn 54 53 55 4 (parallel [
            (set (reg:SI 158)
                (lshiftrt:SI (reg:SI 96 [ _10 ])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":451 544 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 55 54 56 4 (parallel [
            (set (reg:SI 159)
                (plus:SI (reg:SI 158)
                    (reg:SI 96 [ _10 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":451 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 158)
        (expr_list:REG_DEAD (reg:SI 96 [ _10 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 56 55 57 4 (parallel [
            (set (reg:SI 160)
                (ashiftrt:SI (reg:SI 159)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":451 545 {*ashrsi3_1}
     (expr_list:REG_DEAD (reg:SI 159)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 57 56 58 4 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -28 [0xffffffffffffffe4])) [1 imid+0 S4 A32])
        (reg:SI 160)) "../src/spline.f":451 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 160)
        (nil)))
(insn 58 57 59 4 (set (reg/f:DI 161)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [4 ss+0 S8 A64])) "../src/spline.f":452 81 {*movdi_internal}
     (nil))
(insn 59 58 60 4 (set (reg:SF 97 [ _11 ])
        (mem:SF (reg/f:DI 161) [3 *ss_72(D)+0 S4 A32])) "../src/spline.f":452 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 161)
        (nil)))
(insn 60 59 61 4 (set (reg:SI 162)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -28 [0xffffffffffffffe4])) [1 imid+0 S4 A32])) "../src/spline.f":452 82 {*movsi_internal}
     (nil))
(insn 61 60 62 4 (set (reg:DI 98 [ _12 ])
        (sign_extend:DI (reg:SI 162))) "../src/spline.f":452 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 162)
        (nil)))
(insn 62 61 63 4 (parallel [
            (set (reg:DI 99 [ _13 ])
                (plus:DI (reg:DI 98 [ _12 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":452 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 98 [ _12 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 63 62 64 4 (set (reg/f:DI 163)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [5 s+0 S8 A64])) "../src/spline.f":452 81 {*movdi_internal}
     (nil))
(insn 64 63 65 4 (set (reg:SF 100 [ _14 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 99 [ _13 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 163)) [3 *s_73(D) S4 A32])) "../src/spline.f":452 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 163)
        (expr_list:REG_DEAD (reg:DI 99 [ _13 ])
            (nil))))
(insn 65 64 66 4 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 100 [ _14 ])
            (reg:SF 97 [ _11 ]))) "../src/spline.f":452 51 {*cmpiusf}
     (expr_list:REG_DEAD (reg:SF 100 [ _14 ])
        (expr_list:REG_DEAD (reg:SF 97 [ _11 ])
            (nil))))
(jump_insn 66 65 70 4 (set (pc)
        (if_then_else (unle (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 154)
            (pc))) "../src/spline.f":452 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil))
 -> 154)
;;  succ:       5 (FALLTHRU)
;;              6
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 164
(note 70 66 71 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 71 70 72 5 (set (reg:SI 164)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -28 [0xffffffffffffffe4])) [1 imid+0 S4 A32])) "../src/spline.f":453 82 {*movsi_internal}
     (nil))
(insn 72 71 155 5 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
        (reg:SI 164)) "../src/spline.f":453 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 164)
        (nil)))
(jump_insn 155 72 156 5 (set (pc)
        (label_ref 79)) 649 {jump}
     (nil)
 -> 79)
;;  succ:       7 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 156 155 154)
;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (RTL)
;;  pred:       4
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 165
(code_label 154 156 76 6 116 (nil) [1 uses])
(note 76 154 77 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 77 76 78 6 (set (reg:SI 165)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -28 [0xffffffffffffffe4])) [1 imid+0 S4 A32])) "../src/spline.f":455 82 {*movsi_internal}
     (nil))
(insn 78 77 79 6 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 ilow+0 S4 A32])
        (reg:SI 165)) "../src/spline.f":455 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 165)
        (nil)))
;;  succ:       7 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 9, flags: (RTL)
;;  pred:       6 (FALLTHRU)
;;              5 [100.0%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 79 78 80 7 112 (nil) [1 uses])
(note 80 79 157 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(jump_insn 157 80 158 7 (set (pc)
        (label_ref 81)) "../src/spline.f":457 649 {jump}
     (nil)
 -> 81)
;;  succ:       3 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 158 157 160)
;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 8, flags: (RTL)
;;  pred:       3
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 160 158 159 9 117 (nil) [1 uses])
(note 159 160 161 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 161 159 84 9 (const_int 0 [0]) "../src/spline.f":457 682 {nop}
     (nil))
;;  succ:       8 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 1, flags: (RTL)
;;  pred:       9 [100.0%]  (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185
(code_label 84 161 85 8 109 (nil) [0 uses])
(note 85 84 86 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 86 85 87 8 (set (reg:SI 166)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":459 82 {*movsi_internal}
     (nil))
(insn 87 86 88 8 (set (reg:DI 101 [ _15 ])
        (sign_extend:DI (reg:SI 166))) "../src/spline.f":459 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 166)
        (nil)))
(insn 88 87 89 8 (parallel [
            (set (reg:DI 102 [ _16 ])
                (plus:DI (reg:DI 101 [ _15 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":459 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 101 [ _15 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 89 88 90 8 (set (reg/f:DI 167)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [5 s+0 S8 A64])) "../src/spline.f":459 81 {*movdi_internal}
     (nil))
(insn 90 89 91 8 (set (reg:SF 103 [ _17 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 102 [ _16 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 167)) [3 *s_73(D) S4 A32])) "../src/spline.f":459 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 167)
        (expr_list:REG_DEAD (reg:DI 102 [ _16 ])
            (nil))))
(insn 91 90 92 8 (set (reg:SI 168)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":459 82 {*movsi_internal}
     (nil))
(insn 92 91 93 8 (parallel [
            (set (reg:SI 104 [ _18 ])
                (plus:SI (reg:SI 168)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":459 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 168)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff]))
                (nil)))))
(insn 93 92 94 8 (set (reg:DI 105 [ _19 ])
        (sign_extend:DI (reg:SI 104 [ _18 ]))) "../src/spline.f":459 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 104 [ _18 ])
        (nil)))
(insn 94 93 95 8 (parallel [
            (set (reg:DI 106 [ _20 ])
                (plus:DI (reg:DI 105 [ _19 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":459 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 105 [ _19 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 95 94 96 8 (set (reg/f:DI 169)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [5 s+0 S8 A64])) "../src/spline.f":459 81 {*movdi_internal}
     (nil))
(insn 96 95 97 8 (set (reg:SF 107 [ _21 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 106 [ _20 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 169)) [3 *s_73(D) S4 A32])) "../src/spline.f":459 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 169)
        (expr_list:REG_DEAD (reg:DI 106 [ _20 ])
            (nil))))
(insn 97 96 98 8 (set (reg:SF 170)
        (minus:SF (reg:SF 103 [ _17 ])
            (reg:SF 107 [ _21 ]))) "../src/spline.f":459 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 107 [ _21 ])
        (expr_list:REG_DEAD (reg:SF 103 [ _17 ])
            (nil))))
(insn 98 97 99 8 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [3 ds+0 S4 A32])
        (reg:SF 170)) "../src/spline.f":459 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 170)
        (nil)))
(insn 99 98 100 8 (set (reg/f:DI 171)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [4 ss+0 S8 A64])) "../src/spline.f":460 81 {*movdi_internal}
     (nil))
(insn 100 99 101 8 (set (reg:SF 108 [ _22 ])
        (mem:SF (reg/f:DI 171) [3 *ss_72(D)+0 S4 A32])) "../src/spline.f":460 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 171)
        (nil)))
(insn 101 100 102 8 (set (reg:SI 172)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":460 82 {*movsi_internal}
     (nil))
(insn 102 101 103 8 (parallel [
            (set (reg:SI 109 [ _23 ])
                (plus:SI (reg:SI 172)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":460 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 172)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff]))
                (nil)))))
(insn 103 102 104 8 (set (reg:DI 110 [ _24 ])
        (sign_extend:DI (reg:SI 109 [ _23 ]))) "../src/spline.f":460 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 109 [ _23 ])
        (nil)))
(insn 104 103 105 8 (parallel [
            (set (reg:DI 111 [ _25 ])
                (plus:DI (reg:DI 110 [ _24 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":460 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 110 [ _24 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 105 104 106 8 (set (reg/f:DI 173)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [5 s+0 S8 A64])) "../src/spline.f":460 81 {*movdi_internal}
     (nil))
(insn 106 105 107 8 (set (reg:SF 112 [ _26 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 111 [ _25 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 173)) [3 *s_73(D) S4 A32])) "../src/spline.f":460 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 173)
        (expr_list:REG_DEAD (reg:DI 111 [ _25 ])
            (nil))))
(insn 107 106 108 8 (set (reg:SF 113 [ _27 ])
        (minus:SF (reg:SF 108 [ _22 ])
            (reg:SF 112 [ _26 ]))) "../src/spline.f":460 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 112 [ _26 ])
        (expr_list:REG_DEAD (reg:SF 108 [ _22 ])
            (nil))))
(insn 108 107 109 8 (set (reg:SF 114 [ _28 ])
        (reg:SF 113 [ _27 ])) "../src/spline.f":460 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 113 [ _27 ])
        (nil)))
(insn 109 108 110 8 (set (reg:SF 174)
        (div:SF (reg:SF 114 [ _28 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -32 [0xffffffffffffffe0])) [3 ds+0 S4 A32]))) "../src/spline.f":460 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 114 [ _28 ])
        (nil)))
(insn 110 109 111 8 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -36 [0xffffffffffffffdc])) [3 t+0 S4 A32])
        (reg:SF 174)) "../src/spline.f":460 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 174)
        (nil)))
(insn 111 110 112 8 (set (reg:SI 175)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":461 82 {*movsi_internal}
     (nil))
(insn 112 111 113 8 (set (reg:DI 115 [ _29 ])
        (sign_extend:DI (reg:SI 175))) "../src/spline.f":461 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 175)
        (nil)))
(insn 113 112 114 8 (parallel [
            (set (reg:DI 116 [ _30 ])
                (plus:DI (reg:DI 115 [ _29 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":461 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 115 [ _29 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 114 113 115 8 (set (reg/f:DI 176)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [5 x+0 S8 A64])) "../src/spline.f":461 81 {*movdi_internal}
     (nil))
(insn 115 114 116 8 (set (reg:SF 117 [ _31 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 116 [ _30 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 176)) [3 *x_78(D) S4 A32])) "../src/spline.f":461 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 176)
        (expr_list:REG_DEAD (reg:DI 116 [ _30 ])
            (nil))))
(insn 116 115 117 8 (set (reg:SF 118 [ _32 ])
        (mult:SF (reg:SF 117 [ _31 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -36 [0xffffffffffffffdc])) [3 t+0 S4 A32]))) "../src/spline.f":461 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 117 [ _31 ])
        (nil)))
(insn 117 116 118 8 (set (reg:SF 177)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC3") [flags 0x2]) [3  S4 A32])) "../src/spline.f":461 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 118 117 119 8 (set (reg:SF 119 [ _33 ])
        (minus:SF (reg:SF 177)
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -36 [0xffffffffffffffdc])) [3 t+0 S4 A32]))) "../src/spline.f":461 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 177)
        (nil)))
(insn 119 118 120 8 (set (reg:SF 120 [ _34 ])
        (reg:SF 119 [ _33 ])) "../src/spline.f":461 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 119 [ _33 ])
        (nil)))
(insn 120 119 121 8 (set (reg:SI 178)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":461 82 {*movsi_internal}
     (nil))
(insn 121 120 122 8 (parallel [
            (set (reg:SI 121 [ _35 ])
                (plus:SI (reg:SI 178)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":461 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 178)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff]))
                (nil)))))
(insn 122 121 123 8 (set (reg:DI 122 [ _36 ])
        (sign_extend:DI (reg:SI 121 [ _35 ]))) "../src/spline.f":461 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 121 [ _35 ])
        (nil)))
(insn 123 122 124 8 (parallel [
            (set (reg:DI 123 [ _37 ])
                (plus:DI (reg:DI 122 [ _36 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":461 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 122 [ _36 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 124 123 125 8 (set (reg/f:DI 179)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [5 x+0 S8 A64])) "../src/spline.f":461 81 {*movdi_internal}
     (nil))
(insn 125 124 126 8 (set (reg:SF 124 [ _38 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 123 [ _37 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 179)) [3 *x_78(D) S4 A32])) "../src/spline.f":461 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 179)
        (expr_list:REG_DEAD (reg:DI 123 [ _37 ])
            (nil))))
(insn 126 125 127 8 (set (reg:SF 125 [ _39 ])
        (mult:SF (reg:SF 120 [ _34 ])
            (reg:SF 124 [ _38 ]))) "../src/spline.f":461 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 124 [ _38 ])
        (expr_list:REG_DEAD (reg:SF 120 [ _34 ])
            (nil))))
(insn 127 126 128 8 (set (reg:SF 126 [ _40 ])
        (plus:SF (reg:SF 118 [ _32 ])
            (reg:SF 125 [ _39 ]))) "../src/spline.f":461 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 125 [ _39 ])
        (expr_list:REG_DEAD (reg:SF 118 [ _32 ])
            (nil))))
(insn 128 127 129 8 (set (reg/f:DI 180)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -88 [0xffffffffffffffa8])) [4 xx+0 S8 A64])) "../src/spline.f":461 81 {*movdi_internal}
     (nil))
(insn 129 128 130 8 (set (mem:SF (reg/f:DI 180) [3 *xx_79(D)+0 S4 A32])
        (reg:SF 126 [ _40 ])) "../src/spline.f":461 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 180)
        (expr_list:REG_DEAD (reg:SF 126 [ _40 ])
            (nil))))
(insn 130 129 131 8 (set (reg:SI 181)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":462 82 {*movsi_internal}
     (nil))
(insn 131 130 132 8 (set (reg:DI 127 [ _41 ])
        (sign_extend:DI (reg:SI 181))) "../src/spline.f":462 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 181)
        (nil)))
(insn 132 131 133 8 (parallel [
            (set (reg:DI 128 [ _42 ])
                (plus:DI (reg:DI 127 [ _41 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":462 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 127 [ _41 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 133 132 134 8 (set (reg/f:DI 182)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [5 x+0 S8 A64])) "../src/spline.f":462 81 {*movdi_internal}
     (nil))
(insn 134 133 135 8 (set (reg:SF 129 [ _43 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 128 [ _42 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 182)) [3 *x_78(D) S4 A32])) "../src/spline.f":462 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 182)
        (expr_list:REG_DEAD (reg:DI 128 [ _42 ])
            (nil))))
(insn 135 134 136 8 (set (reg:SI 183)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":462 82 {*movsi_internal}
     (nil))
(insn 136 135 137 8 (parallel [
            (set (reg:SI 130 [ _44 ])
                (plus:SI (reg:SI 183)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":462 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 183)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff]))
                (nil)))))
(insn 137 136 138 8 (set (reg:DI 131 [ _45 ])
        (sign_extend:DI (reg:SI 130 [ _44 ]))) "../src/spline.f":462 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 130 [ _44 ])
        (nil)))
(insn 138 137 139 8 (parallel [
            (set (reg:DI 132 [ _46 ])
                (plus:DI (reg:DI 131 [ _45 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":462 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 131 [ _45 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 139 138 140 8 (set (reg/f:DI 184)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [5 x+0 S8 A64])) "../src/spline.f":462 81 {*movdi_internal}
     (nil))
(insn 140 139 141 8 (set (reg:SF 133 [ _47 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 132 [ _46 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 184)) [3 *x_78(D) S4 A32])) "../src/spline.f":462 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 184)
        (expr_list:REG_DEAD (reg:DI 132 [ _46 ])
            (nil))))
(insn 141 140 142 8 (set (reg:SF 134 [ _48 ])
        (minus:SF (reg:SF 129 [ _43 ])
            (reg:SF 133 [ _47 ]))) "../src/spline.f":462 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 133 [ _47 ])
        (expr_list:REG_DEAD (reg:SF 129 [ _43 ])
            (nil))))
(insn 142 141 143 8 (set (reg:SF 135 [ _49 ])
        (reg:SF 134 [ _48 ])) "../src/spline.f":462 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 134 [ _48 ])
        (nil)))
(insn 143 142 144 8 (set (reg:SF 136 [ _50 ])
        (div:SF (reg:SF 135 [ _49 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -32 [0xffffffffffffffe0])) [3 ds+0 S4 A32]))) "../src/spline.f":462 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 135 [ _49 ])
        (nil)))
(insn 144 143 145 8 (set (reg/f:DI 185)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [4 xxs+0 S8 A64])) "../src/spline.f":462 81 {*movdi_internal}
     (nil))
(insn 145 144 153 8 (set (mem:SF (reg/f:DI 185) [3 *xxs_81(D)+0 S4 A32])
        (reg:SF 136 [ _50 ])) "../src/spline.f":462 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 185)
        (expr_list:REG_DEAD (reg:SF 136 [ _50 ])
            (nil))))
(insn 153 145 0 8 (const_int 0 [0]) "../src/spline.f":464 682 {nop}
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function curv (curv_, funcdef_no=10, decl_uid=3958, cgraph_uid=10, symbol_order=10)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 10 n_edges 11 count 10 (    1)
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 9 8
;;
;; Loop 1
;;  header 3, latch 7
;;  depth 1, outer 0
;;  nodes: 3 7 6 5 4
;; 2 succs { 3 }
;; 3 succs { 9 4 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 3 }
;; 9 succs { 8 }
;; 8 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 352.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r377: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a10 (r377,l0) best SSE_REGS, allocno SSE_REGS
    r376: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a11 (r376,l0) best SSE_REGS, allocno SSE_REGS
    r375: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a15 (r375,l0) best SSE_REGS, allocno SSE_REGS
    r374: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a16 (r374,l0) best SSE_REGS, allocno SSE_REGS
    r373: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a17 (r373,l0) best SSE_REGS, allocno SSE_REGS
    r372: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a21 (r372,l0) best SSE_REGS, allocno SSE_REGS
    r371: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a22 (r371,l0) best SSE_REGS, allocno SSE_REGS
    r370: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a23 (r370,l0) best SSE_REGS, allocno SSE_REGS
    r369: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a26 (r369,l0) best SSE_REGS, allocno SSE_REGS
    r368: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a24 (r368,l0) best SSE_REGS, allocno SSE_REGS
    r367: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a32 (r367,l0) best SSE_REGS, allocno SSE_REGS
    r366: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a33 (r366,l0) best SSE_REGS, allocno SSE_REGS
    r365: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a34 (r365,l0) best SSE_REGS, allocno SSE_REGS
    r364: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a35 (r364,l0) best SSE_REGS, allocno SSE_REGS
    r363: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a42 (r363,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r362: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a46 (r362,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r361: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a47 (r361,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r360: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a50 (r360,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r359: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a55 (r359,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r358: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a58 (r358,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r357: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a59 (r357,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r356: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a63 (r356,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r355: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a64 (r355,l0) best SSE_REGS, allocno SSE_REGS
    r354: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a71 (r354,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r353: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a74 (r353,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r352: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a76 (r352,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r351: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a80 (r351,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r350: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a81 (r350,l0) best SSE_REGS, allocno SSE_REGS
    r349: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a86 (r349,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r348: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a90 (r348,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r347: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a91 (r347,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r346: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a94 (r346,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r345: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a97 (r345,l0) best SSE_REGS, allocno SSE_REGS
    r344: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a95 (r344,l0) best SSE_REGS, allocno SSE_REGS
    r343: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a98 (r343,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r342: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a102 (r342,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r341: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a103 (r341,l0) best SSE_REGS, allocno SSE_REGS
    r340: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a107 (r340,l0) best SSE_REGS, allocno SSE_REGS
    r339: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a108 (r339,l0) best SSE_REGS, allocno SSE_REGS
    r338: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a109 (r338,l0) best SSE_REGS, allocno SSE_REGS
    r337: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a112 (r337,l0) best SSE_REGS, allocno SSE_REGS
    r336: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a110 (r336,l0) best SSE_REGS, allocno SSE_REGS
    r335: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a118 (r335,l0) best SSE_REGS, allocno SSE_REGS
    r334: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a119 (r334,l0) best SSE_REGS, allocno SSE_REGS
    r333: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a120 (r333,l0) best SSE_REGS, allocno SSE_REGS
    r332: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a121 (r332,l0) best SSE_REGS, allocno SSE_REGS
    r331: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a128 (r331,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r330: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a132 (r330,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r329: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a133 (r329,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r328: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a136 (r328,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r327: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a141 (r327,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r326: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a144 (r326,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r325: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a145 (r325,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r324: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a149 (r324,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r323: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a150 (r323,l0) best SSE_REGS, allocno SSE_REGS
    r322: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a157 (r322,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r321: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a160 (r321,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r320: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a162 (r320,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r319: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a166 (r319,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r318: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a167 (r318,l0) best SSE_REGS, allocno SSE_REGS
    r317: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a172 (r317,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r316: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a176 (r316,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r315: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a177 (r315,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r314: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a180 (r314,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r313: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a183 (r313,l0) best SSE_REGS, allocno SSE_REGS
    r312: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a181 (r312,l0) best SSE_REGS, allocno SSE_REGS
    r311: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a184 (r311,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r310: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a188 (r310,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r309: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a189 (r309,l0) best SSE_REGS, allocno SSE_REGS
    r308: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a194 (r308,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r307: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a198 (r307,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r306: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a199 (r306,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r305: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a200 (r305,l0) best SSE_REGS, allocno SSE_REGS
    r304: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a203 (r304,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r303: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a207 (r303,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r302: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a208 (r302,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r301: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a211 (r301,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r300: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a212 (r300,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r299: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a213 (r299,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r298: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a216 (r298,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r297: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a219 (r297,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r296: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a220 (r296,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r295: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a221 (r295,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r294: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a222 (r294,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r293: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a224 (r293,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r292: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a225 (r292,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r291: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a226 (r291,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r290: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a228 (r290,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r289: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a229 (r289,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r288: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a230 (r288,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r287: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a234 (r287,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r286: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a236 (r286,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r285: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a238 (r285,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r284: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a242 (r284,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r283: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a244 (r283,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r282: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a246 (r282,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r281: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a250 (r281,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r280: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a252 (r280,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r279: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a254 (r279,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r278: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a258 (r278,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r277: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a260 (r277,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r276: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a262 (r276,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r275: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a266 (r275,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r274: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a268 (r274,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r273: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a270 (r273,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r272: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a0 (r272,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r271: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a1 (r271,l0) best SSE_REGS, allocno SSE_REGS
    r270: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a6 (r270,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r266: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a233 (r266,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r265: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a235 (r265,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r261: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a241 (r261,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r260: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a243 (r260,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r256: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a249 (r256,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r255: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a251 (r255,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r251: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a257 (r251,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r250: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a259 (r250,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r246: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a265 (r246,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r245: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a267 (r245,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r244: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a2 (r244,l0) best SSE_REGS, allocno SSE_REGS
    r243: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a3 (r243,l0) best SSE_REGS, allocno SSE_REGS
    r242: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a5 (r242,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r241: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a4 (r241,l0) best SSE_REGS, allocno SSE_REGS
    r240: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a7 (r240,l0) best SSE_REGS, allocno SSE_REGS
    r239: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a8 (r239,l0) best SSE_REGS, allocno SSE_REGS
    r238: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a9 (r238,l0) best SSE_REGS, allocno SSE_REGS
    r237: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a12 (r237,l0) best SSE_REGS, allocno SSE_REGS
    r236: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a13 (r236,l0) best SSE_REGS, allocno SSE_REGS
    r235: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a14 (r235,l0) best SSE_REGS, allocno SSE_REGS
    r234: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a18 (r234,l0) best SSE_REGS, allocno SSE_REGS
    r233: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a20 (r233,l0) best SSE_REGS, allocno SSE_REGS
    r232: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a19 (r232,l0) best SSE_REGS, allocno SSE_REGS
    r231: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a25 (r231,l0) best SSE_REGS, allocno SSE_REGS
    r230: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a27 (r230,l0) best SSE_REGS, allocno SSE_REGS
    r229: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a28 (r229,l0) best SSE_REGS, allocno SSE_REGS
    r228: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a29 (r228,l0) best SSE_REGS, allocno SSE_REGS
    r227: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a31 (r227,l0) best SSE_REGS, allocno SSE_REGS
    r226: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a30 (r226,l0) best SSE_REGS, allocno SSE_REGS
    r225: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a36 (r225,l0) best SSE_REGS, allocno SSE_REGS
    r224: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a38 (r224,l0) best SSE_REGS, allocno SSE_REGS
    r223: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a39 (r223,l0) best SSE_REGS, allocno SSE_REGS
    r222: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a40 (r222,l0) best SSE_REGS, allocno SSE_REGS
    r221: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a43 (r221,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r220: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a44 (r220,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r219: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a45 (r219,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r218: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a41 (r218,l0) best SSE_REGS, allocno SSE_REGS
    r217: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a48 (r217,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r216: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a49 (r216,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r215: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a37 (r215,l0) best SSE_REGS, allocno SSE_REGS
    r214: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a51 (r214,l0) best SSE_REGS, allocno SSE_REGS
    r213: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a52 (r213,l0) best SSE_REGS, allocno SSE_REGS
    r212: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a53 (r212,l0) best SSE_REGS, allocno SSE_REGS
    r211: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a56 (r211,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r210: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a57 (r210,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r209: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a54 (r209,l0) best SSE_REGS, allocno SSE_REGS
    r208: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a60 (r208,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r207: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a61 (r207,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r206: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a62 (r206,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r205: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a65 (r205,l0) best SSE_REGS, allocno SSE_REGS
    r204: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a67 (r204,l0) best SSE_REGS, allocno SSE_REGS
    r203: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a68 (r203,l0) best SSE_REGS, allocno SSE_REGS
    r202: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a69 (r202,l0) best SSE_REGS, allocno SSE_REGS
    r201: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a72 (r201,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r200: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a73 (r200,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r199: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a70 (r199,l0) best SSE_REGS, allocno SSE_REGS
    r198: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a75 (r198,l0) best SSE_REGS, allocno SSE_REGS
    r197: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a77 (r197,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r196: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a78 (r196,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r195: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a79 (r195,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r194: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a66 (r194,l0) best SSE_REGS, allocno SSE_REGS
    r193: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a82 (r193,l0) best SSE_REGS, allocno SSE_REGS
    r192: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a83 (r192,l0) best SSE_REGS, allocno SSE_REGS
    r191: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a84 (r191,l0) best SSE_REGS, allocno SSE_REGS
    r190: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a87 (r190,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r189: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a88 (r189,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r188: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a89 (r188,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r187: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a85 (r187,l0) best SSE_REGS, allocno SSE_REGS
    r186: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a92 (r186,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r185: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a93 (r185,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r184: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a96 (r184,l0) best SSE_REGS, allocno SSE_REGS
    r183: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a99 (r183,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r182: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a100 (r182,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r181: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a101 (r181,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r180: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a104 (r180,l0) best SSE_REGS, allocno SSE_REGS
    r179: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a106 (r179,l0) best SSE_REGS, allocno SSE_REGS
    r178: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a105 (r178,l0) best SSE_REGS, allocno SSE_REGS
    r177: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a111 (r177,l0) best SSE_REGS, allocno SSE_REGS
    r176: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a113 (r176,l0) best SSE_REGS, allocno SSE_REGS
    r175: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a114 (r175,l0) best SSE_REGS, allocno SSE_REGS
    r174: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a115 (r174,l0) best SSE_REGS, allocno SSE_REGS
    r173: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a117 (r173,l0) best SSE_REGS, allocno SSE_REGS
    r172: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a116 (r172,l0) best SSE_REGS, allocno SSE_REGS
    r171: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a122 (r171,l0) best SSE_REGS, allocno SSE_REGS
    r170: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a124 (r170,l0) best SSE_REGS, allocno SSE_REGS
    r169: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a125 (r169,l0) best SSE_REGS, allocno SSE_REGS
    r168: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a126 (r168,l0) best SSE_REGS, allocno SSE_REGS
    r167: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a129 (r167,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r166: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a130 (r166,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r165: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a131 (r165,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r164: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a127 (r164,l0) best SSE_REGS, allocno SSE_REGS
    r163: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a134 (r163,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r162: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a135 (r162,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r161: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a123 (r161,l0) best SSE_REGS, allocno SSE_REGS
    r160: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a137 (r160,l0) best SSE_REGS, allocno SSE_REGS
    r159: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a138 (r159,l0) best SSE_REGS, allocno SSE_REGS
    r158: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a139 (r158,l0) best SSE_REGS, allocno SSE_REGS
    r157: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a142 (r157,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r156: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a143 (r156,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r155: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a140 (r155,l0) best SSE_REGS, allocno SSE_REGS
    r154: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a146 (r154,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r153: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a147 (r153,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r152: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a148 (r152,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r151: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a151 (r151,l0) best SSE_REGS, allocno SSE_REGS
    r150: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a153 (r150,l0) best SSE_REGS, allocno SSE_REGS
    r149: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a154 (r149,l0) best SSE_REGS, allocno SSE_REGS
    r148: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a155 (r148,l0) best SSE_REGS, allocno SSE_REGS
    r147: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a158 (r147,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r146: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a159 (r146,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r145: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a156 (r145,l0) best SSE_REGS, allocno SSE_REGS
    r144: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a161 (r144,l0) best SSE_REGS, allocno SSE_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a163 (r143,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a164 (r142,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a165 (r141,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r140: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a152 (r140,l0) best SSE_REGS, allocno SSE_REGS
    r139: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a168 (r139,l0) best SSE_REGS, allocno SSE_REGS
    r138: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a169 (r138,l0) best SSE_REGS, allocno SSE_REGS
    r137: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a170 (r137,l0) best SSE_REGS, allocno SSE_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a173 (r136,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a174 (r135,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a175 (r134,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r133: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a171 (r133,l0) best SSE_REGS, allocno SSE_REGS
    r132: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a178 (r132,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r131: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a179 (r131,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r130: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a182 (r130,l0) best SSE_REGS, allocno SSE_REGS
    r129: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a185 (r129,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r128: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a186 (r128,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r127: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a187 (r127,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r126: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a190 (r126,l0) best SSE_REGS, allocno SSE_REGS
    r125: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a191 (r125,l0) best SSE_REGS, allocno SSE_REGS
    r124: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a192 (r124,l0) best SSE_REGS, allocno SSE_REGS
    r123: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a195 (r123,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r122: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a196 (r122,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a197 (r121,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r120: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a193 (r120,l0) best SSE_REGS, allocno SSE_REGS
    r119: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a201 (r119,l0) best SSE_REGS, allocno SSE_REGS
    r118: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a204 (r118,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a205 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a206 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a202 (r115,l0) best SSE_REGS, allocno SSE_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a209 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a210 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r112: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a215 (r112,l0) best SSE_REGS, allocno SSE_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a217 (r111,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a218 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a214 (r109,l0) best SSE_REGS, allocno SSE_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a223 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a227 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a231 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a232 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a237 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a239 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a240 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a245 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a247 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a248 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a253 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a255 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a256 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a261 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a263 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a264 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a269 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r272,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 CLOBBERED_REGS:4 Q_REGS:4 NON_Q_REGS:4 TLS_GOTBASE_REGS:4 GENERAL_REGS:4 FP_TOP_REG:18 FP_SECOND_REG:18 FLOAT_REGS:18 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:16 FP_TOP_SSE_REGS:20 FP_SECOND_SSE_REGS:20 FLOAT_SSE_REGS:20 FLOAT_INT_REGS:18 INT_SSE_REGS:16 FLOAT_INT_SSE_REGS:20 ALL_REGS:20 MEM:2
  a1(r271,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 CLOBBERED_REGS:4 Q_REGS:4 NON_Q_REGS:4 TLS_GOTBASE_REGS:4 GENERAL_REGS:4 FP_TOP_REG:24 FP_SECOND_REG:24 FLOAT_REGS:24 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:22 FP_TOP_SSE_REGS:26 FP_SECOND_SSE_REGS:26 FLOAT_SSE_REGS:26 FLOAT_INT_REGS:24 INT_SSE_REGS:19 FLOAT_INT_SSE_REGS:26 ALL_REGS:26 MEM:7
  a2(r244,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a3(r243,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a4(r241,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 ALL_REGS:29 MEM:9
  a5(r242,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 ALL_REGS:29 MEM:8
  a6(r270,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 CLOBBERED_REGS:4 Q_REGS:4 NON_Q_REGS:4 TLS_GOTBASE_REGS:4 GENERAL_REGS:4 FP_TOP_REG:18 FP_SECOND_REG:18 FLOAT_REGS:18 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:16 FP_TOP_SSE_REGS:20 FP_SECOND_SSE_REGS:20 FLOAT_SSE_REGS:20 FLOAT_INT_REGS:18 INT_SSE_REGS:16 FLOAT_INT_SSE_REGS:20 ALL_REGS:20 MEM:2
  a7(r240,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:9
  a8(r239,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a9(r238,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:16
  a10(r377,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a11(r376,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a12(r237,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:9
  a13(r236,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a14(r235,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a15(r375,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a16(r374,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a17(r373,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a18(r234,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a19(r232,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a20(r233,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:16
  a21(r372,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a22(r371,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a23(r370,l0) costs: AREG:18 DREG:18 CREG:18 BREG:18 SIREG:18 DIREG:18 AD_REGS:18 CLOBBERED_REGS:18 Q_REGS:18 NON_Q_REGS:18 TLS_GOTBASE_REGS:18 GENERAL_REGS:18 FP_TOP_REG:54 FP_SECOND_REG:54 FLOAT_REGS:54 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:48 FP_TOP_SSE_REGS:56 FP_SECOND_SSE_REGS:56 FLOAT_SSE_REGS:56 FLOAT_INT_REGS:54 INT_SSE_REGS:37 FLOAT_INT_SSE_REGS:56 ALL_REGS:56 MEM:20
  a24(r368,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a25(r231,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a26(r369,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a27(r230,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 ALL_REGS:29 MEM:9
  a28(r229,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:9
  a29(r228,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a30(r226,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a31(r227,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:16
  a32(r367,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a33(r366,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a34(r365,l0) costs: AREG:18 DREG:18 CREG:18 BREG:18 SIREG:18 DIREG:18 AD_REGS:18 CLOBBERED_REGS:18 Q_REGS:18 NON_Q_REGS:18 TLS_GOTBASE_REGS:18 GENERAL_REGS:18 FP_TOP_REG:54 FP_SECOND_REG:54 FLOAT_REGS:54 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:48 FP_TOP_SSE_REGS:56 FP_SECOND_SSE_REGS:56 FLOAT_SSE_REGS:56 FLOAT_INT_REGS:54 INT_SSE_REGS:37 FLOAT_INT_SSE_REGS:56 ALL_REGS:56 MEM:20
  a35(r364,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a36(r225,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a37(r215,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:16
  a38(r224,l0) costs: AREG:18 DREG:18 CREG:18 BREG:18 SIREG:18 DIREG:18 AD_REGS:18 CLOBBERED_REGS:18 Q_REGS:18 NON_Q_REGS:18 TLS_GOTBASE_REGS:18 GENERAL_REGS:18 FP_TOP_REG:48 FP_SECOND_REG:48 FLOAT_REGS:48 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:42 FP_TOP_SSE_REGS:50 FP_SECOND_SSE_REGS:50 FLOAT_SSE_REGS:50 FLOAT_INT_REGS:48 INT_SSE_REGS:34 FLOAT_INT_SSE_REGS:50 ALL_REGS:50 MEM:15
  a39(r223,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:9
  a40(r222,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a41(r218,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a42(r363,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a43(r221,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a44(r220,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a45(r219,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a46(r362,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a47(r361,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a48(r217,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a49(r216,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a50(r360,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a51(r214,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 ALL_REGS:29 MEM:9
  a52(r213,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:9
  a53(r212,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a54(r209,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a55(r359,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a56(r211,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a57(r210,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a58(r358,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a59(r357,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a60(r208,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a61(r207,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a62(r206,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a63(r356,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a64(r355,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a65(r205,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a66(r194,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:16
  a67(r204,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 ALL_REGS:29 MEM:9
  a68(r203,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:9
  a69(r202,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a70(r199,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a71(r354,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a72(r201,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a73(r200,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a74(r353,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a75(r198,l0) costs: AREG:18 DREG:18 CREG:18 BREG:18 SIREG:18 DIREG:18 AD_REGS:18 CLOBBERED_REGS:18 Q_REGS:18 NON_Q_REGS:18 TLS_GOTBASE_REGS:18 GENERAL_REGS:18 FP_TOP_REG:54 FP_SECOND_REG:54 FLOAT_REGS:54 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:48 FP_TOP_SSE_REGS:56 FP_SECOND_SSE_REGS:56 FLOAT_SSE_REGS:56 FLOAT_INT_REGS:54 INT_SSE_REGS:37 FLOAT_INT_SSE_REGS:56 ALL_REGS:56 MEM:20
  a76(r352,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a77(r197,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a78(r196,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a79(r195,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a80(r351,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a81(r350,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a82(r193,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 ALL_REGS:29 MEM:8
  a83(r192,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:9
  a84(r191,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a85(r187,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a86(r349,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a87(r190,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a88(r189,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a89(r188,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a90(r348,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a91(r347,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a92(r186,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a93(r185,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a94(r346,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a95(r344,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a96(r184,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a97(r345,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a98(r343,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a99(r183,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a100(r182,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a101(r181,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a102(r342,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a103(r341,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a104(r180,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a105(r178,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a106(r179,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:16
  a107(r340,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a108(r339,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a109(r338,l0) costs: AREG:18 DREG:18 CREG:18 BREG:18 SIREG:18 DIREG:18 AD_REGS:18 CLOBBERED_REGS:18 Q_REGS:18 NON_Q_REGS:18 TLS_GOTBASE_REGS:18 GENERAL_REGS:18 FP_TOP_REG:54 FP_SECOND_REG:54 FLOAT_REGS:54 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:48 FP_TOP_SSE_REGS:56 FP_SECOND_SSE_REGS:56 FLOAT_SSE_REGS:56 FLOAT_INT_REGS:54 INT_SSE_REGS:37 FLOAT_INT_SSE_REGS:56 ALL_REGS:56 MEM:20
  a110(r336,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a111(r177,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a112(r337,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a113(r176,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 ALL_REGS:29 MEM:9
  a114(r175,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:9
  a115(r174,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a116(r172,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a117(r173,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:16
  a118(r335,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a119(r334,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a120(r333,l0) costs: AREG:18 DREG:18 CREG:18 BREG:18 SIREG:18 DIREG:18 AD_REGS:18 CLOBBERED_REGS:18 Q_REGS:18 NON_Q_REGS:18 TLS_GOTBASE_REGS:18 GENERAL_REGS:18 FP_TOP_REG:54 FP_SECOND_REG:54 FLOAT_REGS:54 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:48 FP_TOP_SSE_REGS:56 FP_SECOND_SSE_REGS:56 FLOAT_SSE_REGS:56 FLOAT_INT_REGS:54 INT_SSE_REGS:37 FLOAT_INT_SSE_REGS:56 ALL_REGS:56 MEM:20
  a121(r332,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a122(r171,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a123(r161,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:16
  a124(r170,l0) costs: AREG:18 DREG:18 CREG:18 BREG:18 SIREG:18 DIREG:18 AD_REGS:18 CLOBBERED_REGS:18 Q_REGS:18 NON_Q_REGS:18 TLS_GOTBASE_REGS:18 GENERAL_REGS:18 FP_TOP_REG:48 FP_SECOND_REG:48 FLOAT_REGS:48 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:42 FP_TOP_SSE_REGS:50 FP_SECOND_SSE_REGS:50 FLOAT_SSE_REGS:50 FLOAT_INT_REGS:48 INT_SSE_REGS:34 FLOAT_INT_SSE_REGS:50 ALL_REGS:50 MEM:15
  a125(r169,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:9
  a126(r168,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a127(r164,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a128(r331,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a129(r167,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a130(r166,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a131(r165,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a132(r330,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a133(r329,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a134(r163,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a135(r162,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a136(r328,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a137(r160,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 ALL_REGS:29 MEM:9
  a138(r159,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:9
  a139(r158,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a140(r155,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a141(r327,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a142(r157,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a143(r156,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a144(r326,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a145(r325,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a146(r154,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a147(r153,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a148(r152,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a149(r324,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a150(r323,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a151(r151,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a152(r140,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:16
  a153(r150,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 ALL_REGS:29 MEM:9
  a154(r149,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:9
  a155(r148,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a156(r145,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a157(r322,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a158(r147,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a159(r146,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a160(r321,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a161(r144,l0) costs: AREG:18 DREG:18 CREG:18 BREG:18 SIREG:18 DIREG:18 AD_REGS:18 CLOBBERED_REGS:18 Q_REGS:18 NON_Q_REGS:18 TLS_GOTBASE_REGS:18 GENERAL_REGS:18 FP_TOP_REG:54 FP_SECOND_REG:54 FLOAT_REGS:54 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:48 FP_TOP_SSE_REGS:56 FP_SECOND_SSE_REGS:56 FLOAT_SSE_REGS:56 FLOAT_INT_REGS:54 INT_SSE_REGS:37 FLOAT_INT_SSE_REGS:56 ALL_REGS:56 MEM:20
  a162(r320,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a163(r143,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a164(r142,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a165(r141,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a166(r319,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a167(r318,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a168(r139,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 ALL_REGS:29 MEM:8
  a169(r138,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:9
  a170(r137,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a171(r133,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a172(r317,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a173(r136,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a174(r135,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a175(r134,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a176(r316,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a177(r315,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a178(r132,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a179(r131,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a180(r314,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a181(r312,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a182(r130,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a183(r313,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a184(r311,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a185(r129,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a186(r128,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a187(r127,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a188(r310,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a189(r309,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a190(r126,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 ALL_REGS:29 MEM:9
  a191(r125,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:9
  a192(r124,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a193(r120,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a194(r308,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a195(r123,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a196(r122,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a197(r121,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a198(r307,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a199(r306,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a200(r305,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a201(r119,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a202(r115,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a203(r304,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a204(r118,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a205(r117,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a206(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a207(r303,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a208(r302,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a209(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a210(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a211(r301,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a212(r300,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a213(r299,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a214(r109,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a215(r112,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a216(r298,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a217(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a218(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a219(r297,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a220(r296,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a221(r295,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a222(r294,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a223(r108,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 CLOBBERED_REGS:2 Q_REGS:2 NON_Q_REGS:2 TLS_GOTBASE_REGS:2 GENERAL_REGS:2 SSE_FIRST_REG:26 NO_REX_SSE_REGS:26 SSE_REGS:26 MMX_REGS:41 INT_SSE_REGS:29 ALL_REGS:626 MEM:11
  a224(r293,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 CLOBBERED_REGS:2 Q_REGS:2 NON_Q_REGS:2 TLS_GOTBASE_REGS:2 GENERAL_REGS:2 SSE_FIRST_REG:18 NO_REX_SSE_REGS:18 SSE_REGS:18 MMX_REGS:28 INT_SSE_REGS:20 ALL_REGS:418 MEM:8
  a225(r292,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a226(r291,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a227(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a228(r290,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a229(r289,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a230(r288,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a231(r105,l0) costs: AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:2
  a232(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a233(r266,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a234(r287,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a235(r265,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:38 INT_SSE_REGS:27 ALL_REGS:520 MEM:11
  a236(r286,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:8
  a237(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a238(r285,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a239(r101,l0) costs: AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:2
  a240(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a241(r261,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a242(r284,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a243(r260,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:38 INT_SSE_REGS:27 ALL_REGS:520 MEM:11
  a244(r283,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:8
  a245(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a246(r282,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a247(r97,l0) costs: AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:2
  a248(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a249(r256,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a250(r281,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a251(r255,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:38 INT_SSE_REGS:27 ALL_REGS:520 MEM:11
  a252(r280,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:8
  a253(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a254(r279,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a255(r93,l0) costs: AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:2
  a256(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a257(r251,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a258(r278,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a259(r250,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:38 INT_SSE_REGS:27 ALL_REGS:520 MEM:11
  a260(r277,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:8
  a261(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a262(r276,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a263(r89,l0) costs: AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:2
  a264(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a265(r246,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a266(r275,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a267(r245,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:38 INT_SSE_REGS:27 ALL_REGS:520 MEM:11
  a268(r274,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:8
  a269(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a270(r273,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8

   Insn 365(l0): point = 0
   Insn 364(l0): point = 2
   Insn 360(l0): point = 4
   Insn 357(l0): point = 6
   Insn 356(l0): point = 8
   Insn 355(l0): point = 10
   Insn 354(l0): point = 12
   Insn 353(l0): point = 14
   Insn 352(l0): point = 16
   Insn 351(l0): point = 18
   Insn 350(l0): point = 20
   Insn 349(l0): point = 22
   Insn 348(l0): point = 24
   Insn 347(l0): point = 26
   Insn 346(l0): point = 28
   Insn 345(l0): point = 30
   Insn 344(l0): point = 32
   Insn 343(l0): point = 34
   Insn 342(l0): point = 36
   Insn 341(l0): point = 38
   Insn 340(l0): point = 40
   Insn 339(l0): point = 42
   Insn 338(l0): point = 44
   Insn 337(l0): point = 46
   Insn 336(l0): point = 48
   Insn 335(l0): point = 50
   Insn 334(l0): point = 52
   Insn 333(l0): point = 54
   Insn 332(l0): point = 56
   Insn 331(l0): point = 58
   Insn 330(l0): point = 60
   Insn 329(l0): point = 62
   Insn 328(l0): point = 64
   Insn 327(l0): point = 66
   Insn 326(l0): point = 68
   Insn 325(l0): point = 70
   Insn 324(l0): point = 72
   Insn 323(l0): point = 74
   Insn 322(l0): point = 76
   Insn 321(l0): point = 78
   Insn 320(l0): point = 80
   Insn 319(l0): point = 82
   Insn 318(l0): point = 84
   Insn 317(l0): point = 86
   Insn 316(l0): point = 88
   Insn 315(l0): point = 90
   Insn 314(l0): point = 92
   Insn 313(l0): point = 94
   Insn 312(l0): point = 96
   Insn 311(l0): point = 98
   Insn 310(l0): point = 100
   Insn 309(l0): point = 102
   Insn 308(l0): point = 104
   Insn 307(l0): point = 106
   Insn 306(l0): point = 108
   Insn 305(l0): point = 110
   Insn 304(l0): point = 112
   Insn 303(l0): point = 114
   Insn 302(l0): point = 116
   Insn 301(l0): point = 118
   Insn 300(l0): point = 120
   Insn 299(l0): point = 122
   Insn 298(l0): point = 124
   Insn 297(l0): point = 126
   Insn 296(l0): point = 128
   Insn 295(l0): point = 130
   Insn 294(l0): point = 132
   Insn 293(l0): point = 134
   Insn 292(l0): point = 136
   Insn 291(l0): point = 138
   Insn 290(l0): point = 140
   Insn 289(l0): point = 142
   Insn 288(l0): point = 144
   Insn 287(l0): point = 146
   Insn 286(l0): point = 148
   Insn 285(l0): point = 150
   Insn 284(l0): point = 152
   Insn 283(l0): point = 154
   Insn 282(l0): point = 156
   Insn 281(l0): point = 158
   Insn 280(l0): point = 160
   Insn 279(l0): point = 162
   Insn 278(l0): point = 164
   Insn 277(l0): point = 166
   Insn 276(l0): point = 168
   Insn 275(l0): point = 170
   Insn 274(l0): point = 172
   Insn 273(l0): point = 174
   Insn 272(l0): point = 176
   Insn 271(l0): point = 178
   Insn 270(l0): point = 180
   Insn 269(l0): point = 182
   Insn 268(l0): point = 184
   Insn 267(l0): point = 186
   Insn 266(l0): point = 188
   Insn 265(l0): point = 190
   Insn 264(l0): point = 192
   Insn 263(l0): point = 194
   Insn 262(l0): point = 196
   Insn 261(l0): point = 198
   Insn 260(l0): point = 200
   Insn 259(l0): point = 202
   Insn 258(l0): point = 204
   Insn 257(l0): point = 206
   Insn 256(l0): point = 208
   Insn 255(l0): point = 210
   Insn 254(l0): point = 212
   Insn 253(l0): point = 214
   Insn 252(l0): point = 216
   Insn 251(l0): point = 218
   Insn 250(l0): point = 220
   Insn 249(l0): point = 222
   Insn 248(l0): point = 224
   Insn 247(l0): point = 226
   Insn 246(l0): point = 228
   Insn 245(l0): point = 230
   Insn 244(l0): point = 232
   Insn 243(l0): point = 234
   Insn 242(l0): point = 236
   Insn 241(l0): point = 238
   Insn 240(l0): point = 240
   Insn 239(l0): point = 242
   Insn 238(l0): point = 244
   Insn 237(l0): point = 246
   Insn 236(l0): point = 248
   Insn 235(l0): point = 250
   Insn 234(l0): point = 252
   Insn 233(l0): point = 254
   Insn 232(l0): point = 256
   Insn 231(l0): point = 258
   Insn 230(l0): point = 260
   Insn 229(l0): point = 262
   Insn 228(l0): point = 264
   Insn 227(l0): point = 266
   Insn 226(l0): point = 268
   Insn 225(l0): point = 270
   Insn 224(l0): point = 272
   Insn 223(l0): point = 274
   Insn 222(l0): point = 276
   Insn 221(l0): point = 278
   Insn 220(l0): point = 280
   Insn 219(l0): point = 282
   Insn 218(l0): point = 284
   Insn 217(l0): point = 286
   Insn 216(l0): point = 288
   Insn 215(l0): point = 290
   Insn 214(l0): point = 292
   Insn 213(l0): point = 294
   Insn 212(l0): point = 296
   Insn 211(l0): point = 298
   Insn 210(l0): point = 300
   Insn 209(l0): point = 302
   Insn 208(l0): point = 304
   Insn 207(l0): point = 306
   Insn 206(l0): point = 308
   Insn 205(l0): point = 310
   Insn 204(l0): point = 312
   Insn 203(l0): point = 314
   Insn 202(l0): point = 316
   Insn 201(l0): point = 318
   Insn 200(l0): point = 320
   Insn 199(l0): point = 322
   Insn 198(l0): point = 324
   Insn 197(l0): point = 326
   Insn 196(l0): point = 328
   Insn 195(l0): point = 330
   Insn 194(l0): point = 332
   Insn 193(l0): point = 334
   Insn 192(l0): point = 336
   Insn 191(l0): point = 338
   Insn 190(l0): point = 340
   Insn 189(l0): point = 342
   Insn 188(l0): point = 344
   Insn 187(l0): point = 346
   Insn 186(l0): point = 348
   Insn 185(l0): point = 350
   Insn 184(l0): point = 352
   Insn 183(l0): point = 354
   Insn 182(l0): point = 356
   Insn 181(l0): point = 358
   Insn 180(l0): point = 360
   Insn 179(l0): point = 362
   Insn 178(l0): point = 364
   Insn 177(l0): point = 366
   Insn 176(l0): point = 368
   Insn 175(l0): point = 370
   Insn 174(l0): point = 372
   Insn 173(l0): point = 374
   Insn 172(l0): point = 376
   Insn 171(l0): point = 378
   Insn 170(l0): point = 380
   Insn 169(l0): point = 382
   Insn 168(l0): point = 384
   Insn 167(l0): point = 386
   Insn 166(l0): point = 388
   Insn 165(l0): point = 390
   Insn 164(l0): point = 392
   Insn 163(l0): point = 394
   Insn 162(l0): point = 396
   Insn 161(l0): point = 398
   Insn 160(l0): point = 400
   Insn 159(l0): point = 402
   Insn 158(l0): point = 404
   Insn 157(l0): point = 406
   Insn 156(l0): point = 408
   Insn 155(l0): point = 410
   Insn 154(l0): point = 412
   Insn 153(l0): point = 414
   Insn 152(l0): point = 416
   Insn 151(l0): point = 418
   Insn 150(l0): point = 420
   Insn 149(l0): point = 422
   Insn 148(l0): point = 424
   Insn 147(l0): point = 426
   Insn 146(l0): point = 428
   Insn 145(l0): point = 430
   Insn 144(l0): point = 432
   Insn 143(l0): point = 434
   Insn 142(l0): point = 436
   Insn 141(l0): point = 438
   Insn 140(l0): point = 440
   Insn 139(l0): point = 442
   Insn 138(l0): point = 444
   Insn 137(l0): point = 446
   Insn 136(l0): point = 448
   Insn 135(l0): point = 450
   Insn 134(l0): point = 452
   Insn 133(l0): point = 454
   Insn 132(l0): point = 456
   Insn 131(l0): point = 458
   Insn 377(l0): point = 461
   Insn 94(l0): point = 464
   Insn 93(l0): point = 466
   Insn 92(l0): point = 468
   Insn 91(l0): point = 470
   Insn 373(l0): point = 473
   Insn 123(l0): point = 476
   Insn 122(l0): point = 478
   Insn 371(l0): point = 481
   Insn 117(l0): point = 483
   Insn 116(l0): point = 485
   Insn 111(l0): point = 488
   Insn 110(l0): point = 490
   Insn 109(l0): point = 492
   Insn 108(l0): point = 494
   Insn 107(l0): point = 496
   Insn 106(l0): point = 498
   Insn 105(l0): point = 500
   Insn 104(l0): point = 502
   Insn 103(l0): point = 504
   Insn 102(l0): point = 506
   Insn 101(l0): point = 508
   Insn 100(l0): point = 510
   Insn 99(l0): point = 512
   Insn 98(l0): point = 514
   Insn 97(l0): point = 516
   Insn 96(l0): point = 518
   Insn 89(l0): point = 521
   Insn 88(l0): point = 523
   Insn 87(l0): point = 525
   Insn 86(l0): point = 527
   Insn 82(l0): point = 529
   Insn 81(l0): point = 531
   Insn 80(l0): point = 533
   Insn 78(l0): point = 535
   Insn 76(l0): point = 537
   Insn 77(l0): point = 539
   Insn 75(l0): point = 541
   Insn 74(l0): point = 543
   Insn 73(l0): point = 545
   Insn 72(l0): point = 547
   Insn 71(l0): point = 549
   Insn 67(l0): point = 551
   Insn 66(l0): point = 553
   Insn 65(l0): point = 555
   Insn 63(l0): point = 557
   Insn 61(l0): point = 559
   Insn 62(l0): point = 561
   Insn 60(l0): point = 563
   Insn 59(l0): point = 565
   Insn 58(l0): point = 567
   Insn 57(l0): point = 569
   Insn 56(l0): point = 571
   Insn 52(l0): point = 573
   Insn 51(l0): point = 575
   Insn 50(l0): point = 577
   Insn 48(l0): point = 579
   Insn 46(l0): point = 581
   Insn 47(l0): point = 583
   Insn 45(l0): point = 585
   Insn 44(l0): point = 587
   Insn 43(l0): point = 589
   Insn 42(l0): point = 591
   Insn 41(l0): point = 593
   Insn 37(l0): point = 595
   Insn 36(l0): point = 597
   Insn 35(l0): point = 599
   Insn 33(l0): point = 601
   Insn 31(l0): point = 603
   Insn 32(l0): point = 605
   Insn 30(l0): point = 607
   Insn 29(l0): point = 609
   Insn 28(l0): point = 611
   Insn 27(l0): point = 613
   Insn 26(l0): point = 615
   Insn 22(l0): point = 617
   Insn 21(l0): point = 619
   Insn 20(l0): point = 621
   Insn 18(l0): point = 623
   Insn 16(l0): point = 625
   Insn 17(l0): point = 627
   Insn 15(l0): point = 629
   Insn 14(l0): point = 631
   Insn 13(l0): point = 633
   Insn 12(l0): point = 635
   Insn 11(l0): point = 637
   Insn 7(l0): point = 639
   Insn 6(l0): point = 641
   Insn 5(l0): point = 643
   Insn 4(l0): point = 645
   Insn 3(l0): point = 647
   Insn 2(l0): point = 649
 a0(r272): [3..4]
 a1(r271): [5..6]
 a2(r244): [9..10]
 a3(r243): [11..12]
 a4(r241): [11..22]
 a5(r242): [13..14]
 a6(r270): [19..34]
 a7(r240): [23..24]
 a8(r239): [25..26]
 a9(r238): [25..30]
 a10(r377): [27..28]
 a11(r376): [31..32]
 a12(r237): [35..36]
 a13(r236): [37..38]
 a14(r235): [37..42]
 a15(r375): [39..40]
 a16(r374): [43..44]
 a17(r373): [47..48]
 a18(r234): [49..50]
 a19(r232): [49..58]
 a20(r233): [51..52]
 a21(r372): [53..54]
 a22(r371): [53..56]
 a23(r370): [59..60]
 a24(r368): [63..64]
 a25(r231): [65..68]
 a26(r369): [65..66]
 a27(r230): [69..70]
 a28(r229): [71..72]
 a29(r228): [73..74]
 a30(r226): [73..82]
 a31(r227): [75..76]
 a32(r367): [77..78]
 a33(r366): [77..80]
 a34(r365): [83..84]
 a35(r364): [87..88]
 a36(r225): [89..90]
 a37(r215): [89..118]
 a38(r224): [91..92]
 a39(r223): [93..94]
 a40(r222): [95..96]
 a41(r218): [95..108]
 a42(r363): [97..98]
 a43(r221): [97..100]
 a44(r220): [101..102]
 a45(r219): [103..104]
 a46(r362): [105..106]
 a47(r361): [109..110]
 a48(r217): [109..112]
 a49(r216): [113..114]
 a50(r360): [115..116]
 a51(r214): [119..120]
 a52(r213): [121..122]
 a53(r212): [123..124]
 a54(r209): [123..134]
 a55(r359): [125..126]
 a56(r211): [125..128]
 a57(r210): [129..130]
 a58(r358): [131..132]
 a59(r357): [135..136]
 a60(r208): [135..138]
 a61(r207): [139..140]
 a62(r206): [141..142]
 a63(r356): [143..144]
 a64(r355): [147..148]
 a65(r205): [149..150]
 a66(r194): [149..180]
 a67(r204): [151..152]
 a68(r203): [153..154]
 a69(r202): [155..156]
 a70(r199): [155..166]
 a71(r354): [157..158]
 a72(r201): [157..160]
 a73(r200): [161..162]
 a74(r353): [163..164]
 a75(r198): [167..168]
 a76(r352): [169..170]
 a77(r197): [169..172]
 a78(r196): [173..174]
 a79(r195): [175..176]
 a80(r351): [177..178]
 a81(r350): [181..182]
 a82(r193): [181..184]
 a83(r192): [185..186]
 a84(r191): [187..188]
 a85(r187): [187..200]
 a86(r349): [189..190]
 a87(r190): [189..192]
 a88(r189): [193..194]
 a89(r188): [195..196]
 a90(r348): [197..198]
 a91(r347): [201..202]
 a92(r186): [201..204]
 a93(r185): [205..206]
 a94(r346): [207..208]
 a95(r344): [211..212]
 a96(r184): [213..216]
 a97(r345): [213..214]
 a98(r343): [217..218]
 a99(r183): [217..220]
 a100(r182): [221..222]
 a101(r181): [223..224]
 a102(r342): [225..226]
 a103(r341): [229..230]
 a104(r180): [231..232]
 a105(r178): [231..240]
 a106(r179): [233..234]
 a107(r340): [235..236]
 a108(r339): [235..238]
 a109(r338): [241..242]
 a110(r336): [245..246]
 a111(r177): [247..250]
 a112(r337): [247..248]
 a113(r176): [251..252]
 a114(r175): [253..254]
 a115(r174): [255..256]
 a116(r172): [255..264]
 a117(r173): [257..258]
 a118(r335): [259..260]
 a119(r334): [259..262]
 a120(r333): [265..266]
 a121(r332): [269..270]
 a122(r171): [271..272]
 a123(r161): [271..300]
 a124(r170): [273..274]
 a125(r169): [275..276]
 a126(r168): [277..278]
 a127(r164): [277..290]
 a128(r331): [279..280]
 a129(r167): [279..282]
 a130(r166): [283..284]
 a131(r165): [285..286]
 a132(r330): [287..288]
 a133(r329): [291..292]
 a134(r163): [291..294]
 a135(r162): [295..296]
 a136(r328): [297..298]
 a137(r160): [301..302]
 a138(r159): [303..304]
 a139(r158): [305..306]
 a140(r155): [305..316]
 a141(r327): [307..308]
 a142(r157): [307..310]
 a143(r156): [311..312]
 a144(r326): [313..314]
 a145(r325): [317..318]
 a146(r154): [317..320]
 a147(r153): [321..322]
 a148(r152): [323..324]
 a149(r324): [325..326]
 a150(r323): [329..330]
 a151(r151): [331..332]
 a152(r140): [331..362]
 a153(r150): [333..334]
 a154(r149): [335..336]
 a155(r148): [337..338]
 a156(r145): [337..348]
 a157(r322): [339..340]
 a158(r147): [339..342]
 a159(r146): [343..344]
 a160(r321): [345..346]
 a161(r144): [349..350]
 a162(r320): [351..352]
 a163(r143): [351..354]
 a164(r142): [355..356]
 a165(r141): [357..358]
 a166(r319): [359..360]
 a167(r318): [363..364]
 a168(r139): [363..366]
 a169(r138): [367..368]
 a170(r137): [369..370]
 a171(r133): [369..382]
 a172(r317): [371..372]
 a173(r136): [371..374]
 a174(r135): [375..376]
 a175(r134): [377..378]
 a176(r316): [379..380]
 a177(r315): [383..384]
 a178(r132): [383..386]
 a179(r131): [387..388]
 a180(r314): [389..390]
 a181(r312): [393..394]
 a182(r130): [395..398]
 a183(r313): [395..396]
 a184(r311): [399..400]
 a185(r129): [399..402]
 a186(r128): [403..404]
 a187(r127): [405..406]
 a188(r310): [407..408]
 a189(r309): [411..412]
 a190(r126): [413..414]
 a191(r125): [415..416]
 a192(r124): [417..418]
 a193(r120): [417..430]
 a194(r308): [419..420]
 a195(r123): [419..422]
 a196(r122): [423..424]
 a197(r121): [425..426]
 a198(r307): [427..428]
 a199(r306): [431..432]
 a200(r305): [435..436]
 a201(r119): [437..438]
 a202(r115): [437..450]
 a203(r304): [439..440]
 a204(r118): [439..442]
 a205(r117): [443..444]
 a206(r116): [445..446]
 a207(r303): [447..448]
 a208(r302): [451..452]
 a209(r114): [451..454]
 a210(r113): [455..456]
 a211(r301): [457..458]
 a212(r300): [477..478]
 a213(r299): [484..485]
 a214(r109): [491..502]
 a215(r112): [491..492]
 a216(r298): [493..494]
 a217(r111): [493..496]
 a218(r110): [497..498]
 a219(r297): [499..500]
 a220(r296): [503..504]
 a221(r295): [507..508]
 a222(r294): [509..510]
 a223(r108): [511..514]
 a224(r293): [511..512]
 a225(r292): [515..516]
 a226(r291): [515..518]
 a227(r107): [467..468]
 a228(r290): [469..470]
 a229(r289): [522..523]
 a230(r288): [524..525]
 a231(r105 [0]): [530..651]
 a231(r105 [1]): [529..651]
 a232(r104): [532..533]
 a233(r266): [534..535]
 a234(r287): [536..539]
 a235(r265): [536..541]
 a236(r286): [544..545]
 a237(r103): [546..547]
 a238(r285): [548..549]
 a239(r101 [0]): [552..651]
 a239(r101 [1]): [551..651]
 a240(r100): [554..555]
 a241(r261): [556..557]
 a242(r284): [558..561]
 a243(r260): [558..563]
 a244(r283): [566..567]
 a245(r99): [568..569]
 a246(r282): [570..571]
 a247(r97 [0]): [574..651]
 a247(r97 [1]): [573..651]
 a248(r96): [576..577]
 a249(r256): [578..579]
 a250(r281): [580..583]
 a251(r255): [580..585]
 a252(r280): [588..589]
 a253(r95): [590..591]
 a254(r279): [592..593]
 a255(r93 [0]): [596..651]
 a255(r93 [1]): [595..651]
 a256(r92): [598..599]
 a257(r251): [600..601]
 a258(r278): [602..605]
 a259(r250): [602..607]
 a260(r277): [610..611]
 a261(r91): [612..613]
 a262(r276): [614..615]
 a263(r89 [0]): [618..651]
 a263(r89 [1]): [617..651]
 a264(r88): [620..621]
 a265(r246): [622..623]
 a266(r275): [624..627]
 a267(r245): [624..629]
 a268(r274): [632..633]
 a269(r87): [634..635]
 a270(r273): [636..637]
Compressing live ranges: from 652 to 410 - 62%
Ranges after the compression:
 a0(r272): [0..1]
 a1(r271): [2..3]
 a2(r244): [4..5]
 a3(r243): [6..7]
 a4(r241): [6..11]
 a5(r242): [8..9]
 a6(r270): [10..19]
 a7(r240): [12..13]
 a8(r239): [14..15]
 a9(r238): [14..17]
 a10(r377): [16..17]
 a11(r376): [18..19]
 a12(r237): [20..21]
 a13(r236): [22..23]
 a14(r235): [22..25]
 a15(r375): [24..25]
 a16(r374): [26..27]
 a17(r373): [28..29]
 a18(r234): [30..31]
 a19(r232): [30..35]
 a20(r233): [32..33]
 a21(r372): [34..35]
 a22(r371): [34..35]
 a23(r370): [36..37]
 a24(r368): [38..39]
 a25(r231): [40..41]
 a26(r369): [40..41]
 a27(r230): [42..43]
 a28(r229): [44..45]
 a29(r228): [46..47]
 a30(r226): [46..51]
 a31(r227): [48..49]
 a32(r367): [50..51]
 a33(r366): [50..51]
 a34(r365): [52..53]
 a35(r364): [54..55]
 a36(r225): [56..57]
 a37(r215): [56..77]
 a38(r224): [58..59]
 a39(r223): [60..61]
 a40(r222): [62..63]
 a41(r218): [62..71]
 a42(r363): [64..65]
 a43(r221): [64..65]
 a44(r220): [66..67]
 a45(r219): [68..69]
 a46(r362): [70..71]
 a47(r361): [72..73]
 a48(r217): [72..73]
 a49(r216): [74..75]
 a50(r360): [76..77]
 a51(r214): [78..79]
 a52(r213): [80..81]
 a53(r212): [82..83]
 a54(r209): [82..89]
 a55(r359): [84..85]
 a56(r211): [84..85]
 a57(r210): [86..87]
 a58(r358): [88..89]
 a59(r357): [90..91]
 a60(r208): [90..91]
 a61(r207): [92..93]
 a62(r206): [94..95]
 a63(r356): [96..97]
 a64(r355): [98..99]
 a65(r205): [100..101]
 a66(r194): [100..123]
 a67(r204): [102..103]
 a68(r203): [104..105]
 a69(r202): [106..107]
 a70(r199): [106..113]
 a71(r354): [108..109]
 a72(r201): [108..109]
 a73(r200): [110..111]
 a74(r353): [112..113]
 a75(r198): [114..115]
 a76(r352): [116..117]
 a77(r197): [116..117]
 a78(r196): [118..119]
 a79(r195): [120..121]
 a80(r351): [122..123]
 a81(r350): [124..125]
 a82(r193): [124..125]
 a83(r192): [126..127]
 a84(r191): [128..129]
 a85(r187): [128..137]
 a86(r349): [130..131]
 a87(r190): [130..131]
 a88(r189): [132..133]
 a89(r188): [134..135]
 a90(r348): [136..137]
 a91(r347): [138..139]
 a92(r186): [138..139]
 a93(r185): [140..141]
 a94(r346): [142..143]
 a95(r344): [144..145]
 a96(r184): [146..147]
 a97(r345): [146..147]
 a98(r343): [148..149]
 a99(r183): [148..149]
 a100(r182): [150..151]
 a101(r181): [152..153]
 a102(r342): [154..155]
 a103(r341): [156..157]
 a104(r180): [158..159]
 a105(r178): [158..163]
 a106(r179): [160..161]
 a107(r340): [162..163]
 a108(r339): [162..163]
 a109(r338): [164..165]
 a110(r336): [166..167]
 a111(r177): [168..169]
 a112(r337): [168..169]
 a113(r176): [170..171]
 a114(r175): [172..173]
 a115(r174): [174..175]
 a116(r172): [174..179]
 a117(r173): [176..177]
 a118(r335): [178..179]
 a119(r334): [178..179]
 a120(r333): [180..181]
 a121(r332): [182..183]
 a122(r171): [184..185]
 a123(r161): [184..205]
 a124(r170): [186..187]
 a125(r169): [188..189]
 a126(r168): [190..191]
 a127(r164): [190..199]
 a128(r331): [192..193]
 a129(r167): [192..193]
 a130(r166): [194..195]
 a131(r165): [196..197]
 a132(r330): [198..199]
 a133(r329): [200..201]
 a134(r163): [200..201]
 a135(r162): [202..203]
 a136(r328): [204..205]
 a137(r160): [206..207]
 a138(r159): [208..209]
 a139(r158): [210..211]
 a140(r155): [210..217]
 a141(r327): [212..213]
 a142(r157): [212..213]
 a143(r156): [214..215]
 a144(r326): [216..217]
 a145(r325): [218..219]
 a146(r154): [218..219]
 a147(r153): [220..221]
 a148(r152): [222..223]
 a149(r324): [224..225]
 a150(r323): [226..227]
 a151(r151): [228..229]
 a152(r140): [228..251]
 a153(r150): [230..231]
 a154(r149): [232..233]
 a155(r148): [234..235]
 a156(r145): [234..241]
 a157(r322): [236..237]
 a158(r147): [236..237]
 a159(r146): [238..239]
 a160(r321): [240..241]
 a161(r144): [242..243]
 a162(r320): [244..245]
 a163(r143): [244..245]
 a164(r142): [246..247]
 a165(r141): [248..249]
 a166(r319): [250..251]
 a167(r318): [252..253]
 a168(r139): [252..253]
 a169(r138): [254..255]
 a170(r137): [256..257]
 a171(r133): [256..265]
 a172(r317): [258..259]
 a173(r136): [258..259]
 a174(r135): [260..261]
 a175(r134): [262..263]
 a176(r316): [264..265]
 a177(r315): [266..267]
 a178(r132): [266..267]
 a179(r131): [268..269]
 a180(r314): [270..271]
 a181(r312): [272..273]
 a182(r130): [274..275]
 a183(r313): [274..275]
 a184(r311): [276..277]
 a185(r129): [276..277]
 a186(r128): [278..279]
 a187(r127): [280..281]
 a188(r310): [282..283]
 a189(r309): [284..285]
 a190(r126): [286..287]
 a191(r125): [288..289]
 a192(r124): [290..291]
 a193(r120): [290..299]
 a194(r308): [292..293]
 a195(r123): [292..293]
 a196(r122): [294..295]
 a197(r121): [296..297]
 a198(r307): [298..299]
 a199(r306): [300..301]
 a200(r305): [302..303]
 a201(r119): [304..305]
 a202(r115): [304..313]
 a203(r304): [306..307]
 a204(r118): [306..307]
 a205(r117): [308..309]
 a206(r116): [310..311]
 a207(r303): [312..313]
 a208(r302): [314..315]
 a209(r114): [314..315]
 a210(r113): [316..317]
 a211(r301): [318..319]
 a212(r300): [324..325]
 a213(r299): [326..327]
 a214(r109): [328..335]
 a215(r112): [328..329]
 a216(r298): [330..331]
 a217(r111): [330..331]
 a218(r110): [332..333]
 a219(r297): [334..335]
 a220(r296): [336..337]
 a221(r295): [338..339]
 a222(r294): [340..341]
 a223(r108): [342..343]
 a224(r293): [342..343]
 a225(r292): [344..345]
 a226(r291): [344..345]
 a227(r107): [320..321]
 a228(r290): [322..323]
 a229(r289): [346..347]
 a230(r288): [348..349]
 a231(r105 [0]): [350..409]
 a231(r105 [1]): [350..409]
 a232(r104): [350..351]
 a233(r266): [352..353]
 a234(r287): [354..355]
 a235(r265): [354..355]
 a236(r286): [356..357]
 a237(r103): [358..359]
 a238(r285): [360..361]
 a239(r101 [0]): [362..409]
 a239(r101 [1]): [362..409]
 a240(r100): [362..363]
 a241(r261): [364..365]
 a242(r284): [366..367]
 a243(r260): [366..367]
 a244(r283): [368..369]
 a245(r99): [370..371]
 a246(r282): [372..373]
 a247(r97 [0]): [374..409]
 a247(r97 [1]): [374..409]
 a248(r96): [374..375]
 a249(r256): [376..377]
 a250(r281): [378..379]
 a251(r255): [378..379]
 a252(r280): [380..381]
 a253(r95): [382..383]
 a254(r279): [384..385]
 a255(r93 [0]): [386..409]
 a255(r93 [1]): [386..409]
 a256(r92): [386..387]
 a257(r251): [388..389]
 a258(r278): [390..391]
 a259(r250): [390..391]
 a260(r277): [392..393]
 a261(r91): [394..395]
 a262(r276): [396..397]
 a263(r89 [0]): [398..409]
 a263(r89 [1]): [398..409]
 a264(r88): [398..399]
 a265(r246): [400..401]
 a266(r275): [402..403]
 a267(r245): [402..403]
 a268(r274): [404..405]
 a269(r87): [406..407]
 a270(r273): [408..409]
  regions=1, blocks=10, points=410
    allocnos=271 (big 5), copies=0, conflicts=0, ranges=276
Disposition:
  269:r87  l0     0  264:r88  l0     0  263:r89  l0   mem  261:r91  l0     0
  256:r92  l0     0  255:r93  l0   mem  253:r95  l0     0  248:r96  l0     0
  247:r97  l0    43  245:r99  l0     0  240:r100 l0     0  239:r101 l0    41
  237:r103 l0     0  232:r104 l0     0  231:r105 l0    39  227:r107 l0     0
  223:r108 l0     0  214:r109 l0    22  218:r110 l0     0  217:r111 l0     1
  215:r112 l0    21  210:r113 l0     0  209:r114 l0     1  202:r115 l0    21
  206:r116 l0     0  205:r117 l0     0  204:r118 l0     1  201:r119 l0    22
  193:r120 l0    21  197:r121 l0     0  196:r122 l0     0  195:r123 l0     1
  192:r124 l0    22  191:r125 l0    21  190:r126 l0    21  187:r127 l0     0
  186:r128 l0     0  185:r129 l0     1  182:r130 l0    21  179:r131 l0     0
  178:r132 l0     1  171:r133 l0    21  175:r134 l0     0  174:r135 l0     0
  173:r136 l0     1  170:r137 l0    22  169:r138 l0    21  168:r139 l0    22
  152:r140 l0    22  165:r141 l0     0  164:r142 l0     0  163:r143 l0     1
  161:r144 l0    21  156:r145 l0    21  159:r146 l0     0  158:r147 l0     1
  155:r148 l0    23  154:r149 l0    21  153:r150 l0    21  151:r151 l0    21
  148:r152 l0     0  147:r153 l0     0  146:r154 l0     1  140:r155 l0    22
  143:r156 l0     0  142:r157 l0     1  139:r158 l0    21  138:r159 l0    21
  137:r160 l0    21  123:r161 l0    21  135:r162 l0     0  134:r163 l0     1
  127:r164 l0    22  131:r165 l0     0  130:r166 l0     0  129:r167 l0     1
  126:r168 l0    23  125:r169 l0    22  124:r170 l0    22  122:r171 l0    22
  116:r172 l0    22  117:r173 l0    21  115:r174 l0    21  114:r175 l0    21
  113:r176 l0    21  111:r177 l0    21  105:r178 l0    22  106:r179 l0    21
  104:r180 l0    21  101:r181 l0     0  100:r182 l0     0   99:r183 l0     1
   96:r184 l0    21   93:r185 l0     0   92:r186 l0     1   85:r187 l0    21
   89:r188 l0     0   88:r189 l0     0   87:r190 l0     1   84:r191 l0    22
   83:r192 l0    21   82:r193 l0    22   66:r194 l0    22   79:r195 l0     0
   78:r196 l0     0   77:r197 l0     1   75:r198 l0    21   70:r199 l0    21
   73:r200 l0     0   72:r201 l0     1   69:r202 l0    23   68:r203 l0    21
   67:r204 l0    21   65:r205 l0    21   62:r206 l0     0   61:r207 l0     0
   60:r208 l0     1   54:r209 l0    22   57:r210 l0     0   56:r211 l0     1
   53:r212 l0    21   52:r213 l0    21   51:r214 l0    21   37:r215 l0    21
   49:r216 l0     0   48:r217 l0     1   41:r218 l0    22   45:r219 l0     0
   44:r220 l0     0   43:r221 l0     1   40:r222 l0    23   39:r223 l0    22
   38:r224 l0    22   36:r225 l0    22   30:r226 l0    22   31:r227 l0    21
   29:r228 l0    21   28:r229 l0    21   27:r230 l0    21   25:r231 l0    21
   19:r232 l0    22   20:r233 l0    21   18:r234 l0    21   14:r235 l0    22
   13:r236 l0    21   12:r237 l0    21    9:r238 l0    21    8:r239 l0    22
    7:r240 l0    21    4:r241 l0   mem    5:r242 l0    21    3:r243 l0    21
    2:r244 l0    21  267:r245 l0     0  265:r246 l0     0  259:r250 l0     0
  257:r251 l0     0  251:r255 l0     0  249:r256 l0     0  243:r260 l0     0
  241:r261 l0     0  235:r265 l0     0  233:r266 l0     0    6:r270 l0    23
    1:r271 l0    21    0:r272 l0    21  270:r273 l0     0  268:r274 l0     0
  266:r275 l0     1  262:r276 l0     0  260:r277 l0     0  258:r278 l0     1
  254:r279 l0     0  252:r280 l0     0  250:r281 l0     1  246:r282 l0     0
  244:r283 l0     0  242:r284 l0     1  238:r285 l0     0  236:r286 l0     0
  234:r287 l0     1  230:r288 l0     0  229:r289 l0     0  228:r290 l0     0
  226:r291 l0     1  225:r292 l0     0  224:r293 l0     1  222:r294 l0     0
  221:r295 l0     0  220:r296 l0     0  219:r297 l0     0  216:r298 l0     0
  213:r299 l0     0  212:r300 l0     0  211:r301 l0     0  208:r302 l0     0
  207:r303 l0     0  203:r304 l0     0  200:r305 l0    21  199:r306 l0     0
  198:r307 l0     0  194:r308 l0     0  189:r309 l0    21  188:r310 l0     0
  184:r311 l0     0  181:r312 l0    21  183:r313 l0    22  180:r314 l0     0
  177:r315 l0     0  176:r316 l0     0  172:r317 l0     0  167:r318 l0    21
  166:r319 l0     0  162:r320 l0     0  160:r321 l0     0  157:r322 l0     0
  150:r323 l0    21  149:r324 l0     0  145:r325 l0     0  144:r326 l0     0
  141:r327 l0     0  136:r328 l0     0  133:r329 l0     0  132:r330 l0     0
  128:r331 l0     0  121:r332 l0    21  120:r333 l0    21  119:r334 l0    23
  118:r335 l0    21  110:r336 l0    21  112:r337 l0    22  109:r338 l0    21
  108:r339 l0    23  107:r340 l0    21  103:r341 l0    21  102:r342 l0     0
   98:r343 l0     0   95:r344 l0    21   97:r345 l0    22   94:r346 l0     0
   91:r347 l0     0   90:r348 l0     0   86:r349 l0     0   81:r350 l0    21
   80:r351 l0     0   76:r352 l0     0   74:r353 l0     0   71:r354 l0     0
   64:r355 l0    21   63:r356 l0     0   59:r357 l0     0   58:r358 l0     0
   55:r359 l0     0   50:r360 l0     0   47:r361 l0     0   46:r362 l0     0
   42:r363 l0     0   35:r364 l0    21   34:r365 l0    21   33:r366 l0    23
   32:r367 l0    21   24:r368 l0    21   26:r369 l0    22   23:r370 l0    21
   22:r371 l0    23   21:r372 l0    21   17:r373 l0    21   16:r374 l0    21
   15:r375 l0    21   11:r376 l0    21   10:r377 l0    22
+++Costs: overall 20, reg 7, mem 13, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


curv

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame] 21 [xmm0]
;;  regs ever live 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 21 [xmm0] 37 [r8] 38 [r9]
;;  ref usage 	r0={2d} r1={2d,1u} r2={2d,1u} r4={2d,1u} r5={3d,2u} r6={1d,9u} r7={1d,10u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,14u} r17={47d,7u} r18={1d} r19={1d} r20={1d,127u,16e} r21={4d,4u} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d,1u} r38={2d,1u} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={1d,1u} r88={1d,1u} r89={2d,2u} r91={1d,1u} r92={1d,1u} r93={2d,2u} r95={1d,1u} r96={1d,1u} r97={2d,2u} r99={1d,1u} r100={1d,1u} r101={2d,2u} r103={1d,1u} r104={1d,1u} r105={2d,2u} r107={1d,1u} r108={1d,2u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,1u} r127={1d,1u} r128={1d,1u} r129={1d,1u} r130={1d,1u} r131={1d,1u} r132={1d,1u} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,2u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d,1u} r165={1d,1u} r166={1d,1u} r167={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,2u} r171={1d,1u} r172={1d,1u} r173={1d,1u} r174={1d,1u} r175={1d,1u} r176={1d,1u} r177={1d,1u} r178={1d,1u} r179={1d,1u} r180={1d,1u} r181={1d,1u} r182={1d,1u} r183={1d,1u} r184={1d,1u} r185={1d,1u} r186={1d,1u} r187={1d,1u} r188={1d,1u} r189={1d,1u} r190={1d,1u} r191={1d,1u} r192={1d,1u} r193={1d,1u} r194={1d,1u} r195={1d,1u} r196={1d,1u} r197={1d,1u} r198={1d,2u} r199={1d,1u} r200={1d,1u} r201={1d,1u} r202={1d,1u} r203={1d,1u} r204={1d,1u} r205={1d,1u} r206={1d,1u} r207={1d,1u} r208={1d,1u} r209={1d,1u} r210={1d,1u} r211={1d,1u} r212={1d,1u} r213={1d,1u} r214={1d,1u} r215={1d,1u} r216={1d,1u} r217={1d,1u} r218={1d,1u} r219={1d,1u} r220={1d,1u} r221={1d,1u} r222={1d,1u} r223={1d,1u} r224={1d,2u} r225={1d,1u} r226={1d,1u} r227={1d,1u} r228={1d,1u} r229={1d,1u} r230={1d,1u} r231={1d,1u} r232={1d,1u} r233={1d,1u} r234={1d,1u} r235={1d,1u} r236={1d,1u} r237={1d,1u} r238={1d,1u} r239={1d,1u} r240={1d,1u} r241={1d,1u} r242={1d,1u} r243={1d,1u} r244={1d,1u} r245={1d,2u} r246={1d,1u} r250={1d,2u} r251={1d,1u} r255={1d,2u} r256={1d,1u} r260={1d,2u} r261={1d,1u} r265={1d,2u} r266={1d,1u} r270={1d,1u} r271={1d,1u} r272={1d,1u} r273={1d,1u} r274={1d,1u} r275={1d,1u} r276={1d,1u} r277={1d,1u} r278={1d,1u} r279={1d,1u} r280={1d,1u} r281={1d,1u} r282={1d,1u} r283={1d,1u} r284={1d,1u} r285={1d,1u} r286={1d,1u} r287={1d,1u} r288={1d,1u} r289={1d,1u} r290={1d,1u} r291={1d,1u} r292={1d,1u} r293={1d,1u} r294={1d,1u} r295={1d,1u} r296={1d,1u} r297={1d,1u} r298={1d,1u} r299={1d,1u} r300={1d,1u} r301={1d,1u} r302={1d,1u} r303={1d,1u} r304={1d,1u} r305={1d,1u} r306={1d,1u} r307={1d,1u} r308={1d,1u} r309={1d,1u} r310={1d,1u} r311={1d,1u} r312={1d,1u} r313={1d,1u} r314={1d,1u} r315={1d,1u} r316={1d,1u} r317={1d,1u} r318={1d,1u} r319={1d,1u} r320={1d,1u} r321={1d,1u} r322={1d,1u} r323={1d,1u} r324={1d,1u} r325={1d,1u} r326={1d,1u} r327={1d,1u} r328={1d,1u} r329={1d,1u} r330={1d,1u} r331={1d,1u} r332={1d,1u} r333={1d,2u} r334={1d,1u} r335={1d,1u} r336={1d,1u} r337={1d,1u} r338={1d,2u} r339={1d,1u} r340={1d,1u} r341={1d,1u} r342={1d,1u} r343={1d,1u} r344={1d,1u} r345={1d,1u} r346={1d,1u} r347={1d,1u} r348={1d,1u} r349={1d,1u} r350={1d,1u} r351={1d,1u} r352={1d,1u} r353={1d,1u} r354={1d,1u} r355={1d,1u} r356={1d,1u} r357={1d,1u} r358={1d,1u} r359={1d,1u} r360={1d,1u} r361={1d,1u} r362={1d,1u} r363={1d,1u} r364={1d,1u} r365={1d,2u} r366={1d,1u} r367={1d,1u} r368={1d,1u} r369={1d,1u} r370={1d,2u} r371={1d,1u} r372={1d,1u} r373={1d,1u} r374={1d,1u} r375={1d,1u} r376={1d,1u} r377={1d,1u} 
;;    total ref usage 900{416d,468u,16e} in 322{321 regular + 1 call} insns.
(note 1 0 9 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9] 89 93 97 101 105
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9] 89 93 97 101 105
;; lr  def 	 17 [flags] 87 88 91 92 95 96 99 100 103 104 245 246 250 251 255 256 260 261 265 266 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289
(note 9 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 9 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -120 [0xffffffffffffff88])) [4 ss+0 S8 A64])
        (reg:DI 5 di [ ss ])) "../src/spline.f":469 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ ss ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -128 [0xffffffffffffff80])) [5 x+0 S8 A64])
        (reg:DI 4 si [ x ])) "../src/spline.f":469 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ x ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -136 [0xffffffffffffff78])) [5 xs+0 S8 A64])
        (reg:DI 1 dx [ xs ])) "../src/spline.f":469 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ xs ])
        (nil)))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -144 [0xffffffffffffff70])) [5 y+0 S8 A64])
        (reg:DI 2 cx [ y ])) "../src/spline.f":469 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [ y ])
        (nil)))
(insn 6 5 7 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -152 [0xffffffffffffff68])) [5 ys+0 S8 A64])
        (reg:DI 37 r8 [ ys ])) "../src/spline.f":469 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 37 r8 [ ys ])
        (nil)))
(insn 7 6 8 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -160 [0xffffffffffffff60])) [5 s+0 S8 A64])
        (reg:DI 38 r9 [ s ])) "../src/spline.f":469 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 38 r9 [ s ])
        (nil)))
(note 8 7 11 2 NOTE_INSN_FUNCTION_BEG)
(insn 11 8 12 2 (set (reg/f:DI 273)
        (mem/f/c:DI (reg/f:DI 16 argp) [6 n+0 S8 A64])) "../src/spline.f":469 81 {*movdi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:SI 87 [ _1 ])
        (mem:SI (reg/f:DI 273) [1 *n_164(D)+0 S4 A32])) "../src/spline.f":469 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 273)
        (nil)))
(insn 13 12 14 2 (set (reg:DI 274)
        (sign_extend:DI (reg:SI 87 [ _1 ]))) "../src/spline.f":469 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 87 [ _1 ])
        (nil)))
(insn 14 13 15 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 ubound.60+0 S8 A64])
        (reg:DI 274)) "../src/spline.f":469 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 274)
        (nil)))
(insn 15 14 17 2 (set (reg:DI 245 [ size.61_166 ])
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 ubound.60+0 S8 A64])) "../src/spline.f":469 81 {*movdi_internal}
     (nil))
(insn 17 15 16 2 (set (reg:DI 275)
        (const_int 0 [0])) "../src/spline.f":469 81 {*movdi_internal}
     (nil))
(insn 16 17 18 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 245 [ size.61_166 ])
            (const_int 0 [0]))) "../src/spline.f":469 4 {*cmpdi_ccno_1}
     (nil))
(insn 18 16 20 2 (set (reg:DI 246 [ size.61_167 ])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 245 [ size.61_166 ])
            (reg:DI 275))) "../src/spline.f":469 967 {*movdicc_noc}
     (expr_list:REG_DEAD (reg:DI 275)
        (expr_list:REG_DEAD (reg:DI 245 [ size.61_166 ])
            (expr_list:REG_DEAD (reg:CCGOC 17 flags)
                (nil)))))
(insn 20 18 21 2 (set (reg:DI 88 [ size.212_2 ])
        (reg:DI 246 [ size.61_167 ])) "../src/spline.f":469 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 246 [ size.61_167 ])
        (nil)))
(insn 21 20 22 2 (set (subreg:DI (reg:TI 89 [ _3 ]) 0)
        (reg:DI 88 [ size.212_2 ])) "../src/spline.f":469 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88 [ size.212_2 ])
        (nil)))
(insn 22 21 26 2 (set (subreg:DI (reg:TI 89 [ _3 ]) 8)
        (const_int 0 [0])) "../src/spline.f":469 81 {*movdi_internal}
     (expr_list:REG_UNUSED (reg:TI 89 [ _3 ])
        (nil)))
(insn 26 22 27 2 (set (reg/f:DI 276)
        (mem/f/c:DI (reg/f:DI 16 argp) [6 n+0 S8 A64])) "../src/spline.f":469 81 {*movdi_internal}
     (nil))
(insn 27 26 28 2 (set (reg:SI 91 [ _5 ])
        (mem:SI (reg/f:DI 276) [1 *n_164(D)+0 S4 A32])) "../src/spline.f":469 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 276)
        (nil)))
(insn 28 27 29 2 (set (reg:DI 277)
        (sign_extend:DI (reg:SI 91 [ _5 ]))) "../src/spline.f":469 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 91 [ _5 ])
        (nil)))
(insn 29 28 30 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [2 ubound.64+0 S8 A64])
        (reg:DI 277)) "../src/spline.f":469 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 277)
        (nil)))
(insn 30 29 32 2 (set (reg:DI 250 [ size.65_172 ])
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [2 ubound.64+0 S8 A64])) "../src/spline.f":469 81 {*movdi_internal}
     (nil))
(insn 32 30 31 2 (set (reg:DI 278)
        (const_int 0 [0])) "../src/spline.f":469 81 {*movdi_internal}
     (nil))
(insn 31 32 33 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 250 [ size.65_172 ])
            (const_int 0 [0]))) "../src/spline.f":469 4 {*cmpdi_ccno_1}
     (nil))
(insn 33 31 35 2 (set (reg:DI 251 [ size.65_173 ])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 250 [ size.65_172 ])
            (reg:DI 278))) "../src/spline.f":469 967 {*movdicc_noc}
     (expr_list:REG_DEAD (reg:DI 278)
        (expr_list:REG_DEAD (reg:DI 250 [ size.65_172 ])
            (expr_list:REG_DEAD (reg:CCGOC 17 flags)
                (nil)))))
(insn 35 33 36 2 (set (reg:DI 92 [ size.214_6 ])
        (reg:DI 251 [ size.65_173 ])) "../src/spline.f":469 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 251 [ size.65_173 ])
        (nil)))
(insn 36 35 37 2 (set (subreg:DI (reg:TI 93 [ _7 ]) 0)
        (reg:DI 92 [ size.214_6 ])) "../src/spline.f":469 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 92 [ size.214_6 ])
        (nil)))
(insn 37 36 41 2 (set (subreg:DI (reg:TI 93 [ _7 ]) 8)
        (const_int 0 [0])) "../src/spline.f":469 81 {*movdi_internal}
     (expr_list:REG_UNUSED (reg:TI 93 [ _7 ])
        (nil)))
(insn 41 37 42 2 (set (reg/f:DI 279)
        (mem/f/c:DI (reg/f:DI 16 argp) [6 n+0 S8 A64])) "../src/spline.f":469 81 {*movdi_internal}
     (nil))
(insn 42 41 43 2 (set (reg:SI 95 [ _9 ])
        (mem:SI (reg/f:DI 279) [1 *n_164(D)+0 S4 A32])) "../src/spline.f":469 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 279)
        (nil)))
(insn 43 42 44 2 (set (reg:DI 280)
        (sign_extend:DI (reg:SI 95 [ _9 ]))) "../src/spline.f":469 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 95 [ _9 ])
        (nil)))
(insn 44 43 45 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [2 ubound.62+0 S8 A64])
        (reg:DI 280)) "../src/spline.f":469 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 280)
        (nil)))
(insn 45 44 47 2 (set (reg:DI 255 [ size.63_178 ])
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [2 ubound.62+0 S8 A64])) "../src/spline.f":469 81 {*movdi_internal}
     (nil))
(insn 47 45 46 2 (set (reg:DI 281)
        (const_int 0 [0])) "../src/spline.f":469 81 {*movdi_internal}
     (nil))
(insn 46 47 48 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 255 [ size.63_178 ])
            (const_int 0 [0]))) "../src/spline.f":469 4 {*cmpdi_ccno_1}
     (nil))
(insn 48 46 50 2 (set (reg:DI 256 [ size.63_179 ])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 255 [ size.63_178 ])
            (reg:DI 281))) "../src/spline.f":469 967 {*movdicc_noc}
     (expr_list:REG_DEAD (reg:DI 281)
        (expr_list:REG_DEAD (reg:DI 255 [ size.63_178 ])
            (expr_list:REG_DEAD (reg:CCGOC 17 flags)
                (nil)))))
(insn 50 48 51 2 (set (reg:DI 96 [ size.216_10 ])
        (reg:DI 256 [ size.63_179 ])) "../src/spline.f":469 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 256 [ size.63_179 ])
        (nil)))
(insn 51 50 52 2 (set (subreg:DI (reg:TI 97 [ _11 ]) 0)
        (reg:DI 96 [ size.216_10 ])) "../src/spline.f":469 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 96 [ size.216_10 ])
        (nil)))
(insn 52 51 56 2 (set (subreg:DI (reg:TI 97 [ _11 ]) 8)
        (const_int 0 [0])) "../src/spline.f":469 81 {*movdi_internal}
     (expr_list:REG_UNUSED (reg:TI 97 [ _11 ])
        (nil)))
(insn 56 52 57 2 (set (reg/f:DI 282)
        (mem/f/c:DI (reg/f:DI 16 argp) [6 n+0 S8 A64])) "../src/spline.f":469 81 {*movdi_internal}
     (nil))
(insn 57 56 58 2 (set (reg:SI 99 [ _13 ])
        (mem:SI (reg/f:DI 282) [1 *n_164(D)+0 S4 A32])) "../src/spline.f":469 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 282)
        (nil)))
(insn 58 57 59 2 (set (reg:DI 283)
        (sign_extend:DI (reg:SI 99 [ _13 ]))) "../src/spline.f":469 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 99 [ _13 ])
        (nil)))
(insn 59 58 60 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [2 ubound.68+0 S8 A64])
        (reg:DI 283)) "../src/spline.f":469 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 283)
        (nil)))
(insn 60 59 62 2 (set (reg:DI 260 [ size.69_184 ])
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [2 ubound.68+0 S8 A64])) "../src/spline.f":469 81 {*movdi_internal}
     (nil))
(insn 62 60 61 2 (set (reg:DI 284)
        (const_int 0 [0])) "../src/spline.f":469 81 {*movdi_internal}
     (nil))
(insn 61 62 63 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 260 [ size.69_184 ])
            (const_int 0 [0]))) "../src/spline.f":469 4 {*cmpdi_ccno_1}
     (nil))
(insn 63 61 65 2 (set (reg:DI 261 [ size.69_185 ])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 260 [ size.69_184 ])
            (reg:DI 284))) "../src/spline.f":469 967 {*movdicc_noc}
     (expr_list:REG_DEAD (reg:DI 284)
        (expr_list:REG_DEAD (reg:DI 260 [ size.69_184 ])
            (expr_list:REG_DEAD (reg:CCGOC 17 flags)
                (nil)))))
(insn 65 63 66 2 (set (reg:DI 100 [ size.218_14 ])
        (reg:DI 261 [ size.69_185 ])) "../src/spline.f":469 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 261 [ size.69_185 ])
        (nil)))
(insn 66 65 67 2 (set (subreg:DI (reg:TI 101 [ _15 ]) 0)
        (reg:DI 100 [ size.218_14 ])) "../src/spline.f":469 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 100 [ size.218_14 ])
        (nil)))
(insn 67 66 71 2 (set (subreg:DI (reg:TI 101 [ _15 ]) 8)
        (const_int 0 [0])) "../src/spline.f":469 81 {*movdi_internal}
     (expr_list:REG_UNUSED (reg:TI 101 [ _15 ])
        (nil)))
(insn 71 67 72 2 (set (reg/f:DI 285)
        (mem/f/c:DI (reg/f:DI 16 argp) [6 n+0 S8 A64])) "../src/spline.f":469 81 {*movdi_internal}
     (nil))
(insn 72 71 73 2 (set (reg:SI 103 [ _17 ])
        (mem:SI (reg/f:DI 285) [1 *n_164(D)+0 S4 A32])) "../src/spline.f":469 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 285)
        (nil)))
(insn 73 72 74 2 (set (reg:DI 286)
        (sign_extend:DI (reg:SI 103 [ _17 ]))) "../src/spline.f":469 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 103 [ _17 ])
        (nil)))
(insn 74 73 75 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [2 ubound.66+0 S8 A64])
        (reg:DI 286)) "../src/spline.f":469 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 286)
        (nil)))
(insn 75 74 77 2 (set (reg:DI 265 [ size.67_190 ])
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [2 ubound.66+0 S8 A64])) "../src/spline.f":469 81 {*movdi_internal}
     (nil))
(insn 77 75 76 2 (set (reg:DI 287)
        (const_int 0 [0])) "../src/spline.f":469 81 {*movdi_internal}
     (nil))
(insn 76 77 78 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 265 [ size.67_190 ])
            (const_int 0 [0]))) "../src/spline.f":469 4 {*cmpdi_ccno_1}
     (nil))
(insn 78 76 80 2 (set (reg:DI 266 [ size.67_191 ])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 265 [ size.67_190 ])
            (reg:DI 287))) "../src/spline.f":469 967 {*movdicc_noc}
     (expr_list:REG_DEAD (reg:DI 287)
        (expr_list:REG_DEAD (reg:DI 265 [ size.67_190 ])
            (expr_list:REG_DEAD (reg:CCGOC 17 flags)
                (nil)))))
(insn 80 78 81 2 (set (reg:DI 104 [ size.220_18 ])
        (reg:DI 266 [ size.67_191 ])) "../src/spline.f":469 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 266 [ size.67_191 ])
        (nil)))
(insn 81 80 82 2 (set (subreg:DI (reg:TI 105 [ _19 ]) 0)
        (reg:DI 104 [ size.220_18 ])) "../src/spline.f":469 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 104 [ size.220_18 ])
        (nil)))
(insn 82 81 86 2 (set (subreg:DI (reg:TI 105 [ _19 ]) 8)
        (const_int 0 [0])) "../src/spline.f":469 81 {*movdi_internal}
     (expr_list:REG_UNUSED (reg:TI 105 [ _19 ])
        (nil)))
(insn 86 82 87 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 ilow+0 S4 A32])
        (const_int 1 [0x1])) "../src/spline.f":481 82 {*movsi_internal}
     (nil))
(insn 87 86 88 2 (set (reg/f:DI 288)
        (mem/f/c:DI (reg/f:DI 16 argp) [6 n+0 S8 A64])) "../src/spline.f":482 81 {*movdi_internal}
     (nil))
(insn 88 87 89 2 (set (reg:SI 289)
        (mem:SI (reg/f:DI 288) [1 *n_164(D)+0 S4 A32])) "../src/spline.f":482 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 288)
        (nil)))
(insn 89 88 126 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
        (reg:SI 289)) "../src/spline.f":482 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 289)
        (nil)))
;;  succ:       3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 (FALLTHRU)
;;              7 [100.0%] 
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 107 290
(code_label 126 89 90 3 123 (nil) [1 uses])
(note 90 126 91 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 91 90 92 3 (set (reg:SI 290)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":484 82 {*movsi_internal}
     (nil))
(insn 92 91 93 3 (parallel [
            (set (reg:SI 107 [ _21 ])
                (minus:SI (reg:SI 290)
                    (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [1 ilow+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":484 273 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 290)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [1 ilow+0 S4 A32]))
                (nil)))))
(insn 93 92 94 3 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 107 [ _21 ])
            (const_int 1 [0x1]))) "../src/spline.f":484 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 107 [ _21 ])
        (nil)))
(jump_insn 94 93 95 3 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 376)
            (pc))) "../src/spline.f":484 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 376)
;;  succ:       9
;;              4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 108 109 110 111 112 291 292 293 294 295 296 297 298
(note 95 94 96 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 96 95 97 4 (set (reg:SI 291)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":486 82 {*movsi_internal}
     (nil))
(insn 97 96 98 4 (set (reg:SI 292)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 ilow+0 S4 A32])) "../src/spline.f":486 82 {*movsi_internal}
     (nil))
(insn 98 97 99 4 (parallel [
            (set (reg:SI 108 [ _22 ])
                (plus:SI (reg:SI 291)
                    (reg:SI 292)))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":486 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 292)
        (expr_list:REG_DEAD (reg:SI 291)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                                (const_int -8 [0xfffffffffffffff8])) [1 ilow+0 S4 A32]))
                    (nil))))))
(insn 99 98 100 4 (parallel [
            (set (reg:SI 293)
                (lshiftrt:SI (reg:SI 108 [ _22 ])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":486 544 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 100 99 101 4 (parallel [
            (set (reg:SI 294)
                (plus:SI (reg:SI 293)
                    (reg:SI 108 [ _22 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":486 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 293)
        (expr_list:REG_DEAD (reg:SI 108 [ _22 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 101 100 102 4 (parallel [
            (set (reg:SI 295)
                (ashiftrt:SI (reg:SI 294)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":486 545 {*ashrsi3_1}
     (expr_list:REG_DEAD (reg:SI 294)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 102 101 103 4 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -52 [0xffffffffffffffcc])) [1 imid+0 S4 A32])
        (reg:SI 295)) "../src/spline.f":486 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 295)
        (nil)))
(insn 103 102 104 4 (set (reg/f:DI 296)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -120 [0xffffffffffffff88])) [4 ss+0 S8 A64])) "../src/spline.f":487 81 {*movdi_internal}
     (nil))
(insn 104 103 105 4 (set (reg:SF 109 [ _23 ])
        (mem:SF (reg/f:DI 296) [3 *ss_198(D)+0 S4 A32])) "../src/spline.f":487 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 296)
        (nil)))
(insn 105 104 106 4 (set (reg:SI 297)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -52 [0xffffffffffffffcc])) [1 imid+0 S4 A32])) "../src/spline.f":487 82 {*movsi_internal}
     (nil))
(insn 106 105 107 4 (set (reg:DI 110 [ _24 ])
        (sign_extend:DI (reg:SI 297))) "../src/spline.f":487 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 297)
        (nil)))
(insn 107 106 108 4 (parallel [
            (set (reg:DI 111 [ _25 ])
                (plus:DI (reg:DI 110 [ _24 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":487 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 110 [ _24 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 108 107 109 4 (set (reg/f:DI 298)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -160 [0xffffffffffffff60])) [5 s+0 S8 A64])) "../src/spline.f":487 81 {*movdi_internal}
     (nil))
(insn 109 108 110 4 (set (reg:SF 112 [ _26 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 111 [ _25 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 298)) [3 *s_199(D) S4 A32])) "../src/spline.f":487 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 298)
        (expr_list:REG_DEAD (reg:DI 111 [ _25 ])
            (nil))))
(insn 110 109 111 4 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 112 [ _26 ])
            (reg:SF 109 [ _23 ]))) "../src/spline.f":487 51 {*cmpiusf}
     (expr_list:REG_DEAD (reg:SF 112 [ _26 ])
        (expr_list:REG_DEAD (reg:SF 109 [ _23 ])
            (nil))))
(jump_insn 111 110 115 4 (set (pc)
        (if_then_else (unle (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 370)
            (pc))) "../src/spline.f":487 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil))
 -> 370)
;;  succ:       5 (FALLTHRU)
;;              6
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 299
(note 115 111 116 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 116 115 117 5 (set (reg:SI 299)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -52 [0xffffffffffffffcc])) [1 imid+0 S4 A32])) "../src/spline.f":488 82 {*movsi_internal}
     (nil))
(insn 117 116 371 5 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
        (reg:SI 299)) "../src/spline.f":488 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 299)
        (nil)))
(jump_insn 371 117 372 5 (set (pc)
        (label_ref 124)) 649 {jump}
     (nil)
 -> 124)
;;  succ:       7 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 372 371 370)
;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (RTL)
;;  pred:       4
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 300
(code_label 370 372 121 6 126 (nil) [1 uses])
(note 121 370 122 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 122 121 123 6 (set (reg:SI 300)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -52 [0xffffffffffffffcc])) [1 imid+0 S4 A32])) "../src/spline.f":490 82 {*movsi_internal}
     (nil))
(insn 123 122 124 6 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 ilow+0 S4 A32])
        (reg:SI 300)) "../src/spline.f":490 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 300)
        (nil)))
;;  succ:       7 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 9, flags: (RTL)
;;  pred:       6 (FALLTHRU)
;;              5 [100.0%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 124 123 125 7 122 (nil) [1 uses])
(note 125 124 373 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(jump_insn 373 125 374 7 (set (pc)
        (label_ref 126)) "../src/spline.f":492 649 {jump}
     (nil)
 -> 126)
;;  succ:       3 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 374 373 376)
;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 8, flags: (RTL)
;;  pred:       3
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 376 374 375 9 127 (nil) [1 uses])
(note 375 376 377 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 377 375 129 9 (const_int 0 [0]) "../src/spline.f":492 682 {nop}
     (nil))
;;  succ:       8 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 1, flags: (RTL)
;;  pred:       9 [100.0%]  (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 270 271 272 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377
(code_label 129 377 130 8 119 (nil) [0 uses])
(note 130 129 131 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 131 130 132 8 (set (reg:SI 301)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":494 82 {*movsi_internal}
     (nil))
(insn 132 131 133 8 (set (reg:DI 113 [ _27 ])
        (sign_extend:DI (reg:SI 301))) "../src/spline.f":494 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 301)
        (nil)))
(insn 133 132 134 8 (parallel [
            (set (reg:DI 114 [ _28 ])
                (plus:DI (reg:DI 113 [ _27 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":494 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 113 [ _27 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 134 133 135 8 (set (reg/f:DI 302)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -160 [0xffffffffffffff60])) [5 s+0 S8 A64])) "../src/spline.f":494 81 {*movdi_internal}
     (nil))
(insn 135 134 136 8 (set (reg:SF 115 [ _29 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 114 [ _28 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 302)) [3 *s_199(D) S4 A32])) "../src/spline.f":494 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 302)
        (expr_list:REG_DEAD (reg:DI 114 [ _28 ])
            (nil))))
(insn 136 135 137 8 (set (reg:SI 303)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":494 82 {*movsi_internal}
     (nil))
(insn 137 136 138 8 (parallel [
            (set (reg:SI 116 [ _30 ])
                (plus:SI (reg:SI 303)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":494 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 303)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff]))
                (nil)))))
(insn 138 137 139 8 (set (reg:DI 117 [ _31 ])
        (sign_extend:DI (reg:SI 116 [ _30 ]))) "../src/spline.f":494 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 116 [ _30 ])
        (nil)))
(insn 139 138 140 8 (parallel [
            (set (reg:DI 118 [ _32 ])
                (plus:DI (reg:DI 117 [ _31 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":494 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 117 [ _31 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 140 139 141 8 (set (reg/f:DI 304)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -160 [0xffffffffffffff60])) [5 s+0 S8 A64])) "../src/spline.f":494 81 {*movdi_internal}
     (nil))
(insn 141 140 142 8 (set (reg:SF 119 [ _33 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 118 [ _32 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 304)) [3 *s_199(D) S4 A32])) "../src/spline.f":494 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 304)
        (expr_list:REG_DEAD (reg:DI 118 [ _32 ])
            (nil))))
(insn 142 141 143 8 (set (reg:SF 305)
        (minus:SF (reg:SF 115 [ _29 ])
            (reg:SF 119 [ _33 ]))) "../src/spline.f":494 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 119 [ _33 ])
        (expr_list:REG_DEAD (reg:SF 115 [ _29 ])
            (nil))))
(insn 143 142 144 8 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [3 ds+0 S4 A32])
        (reg:SF 305)) "../src/spline.f":494 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 305)
        (nil)))
(insn 144 143 145 8 (set (reg/f:DI 306)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -120 [0xffffffffffffff88])) [4 ss+0 S8 A64])) "../src/spline.f":495 81 {*movdi_internal}
     (nil))
(insn 145 144 146 8 (set (reg:SF 120 [ _34 ])
        (mem:SF (reg/f:DI 306) [3 *ss_198(D)+0 S4 A32])) "../src/spline.f":495 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 306)
        (nil)))
(insn 146 145 147 8 (set (reg:SI 307)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":495 82 {*movsi_internal}
     (nil))
(insn 147 146 148 8 (parallel [
            (set (reg:SI 121 [ _35 ])
                (plus:SI (reg:SI 307)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":495 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 307)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff]))
                (nil)))))
(insn 148 147 149 8 (set (reg:DI 122 [ _36 ])
        (sign_extend:DI (reg:SI 121 [ _35 ]))) "../src/spline.f":495 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 121 [ _35 ])
        (nil)))
(insn 149 148 150 8 (parallel [
            (set (reg:DI 123 [ _37 ])
                (plus:DI (reg:DI 122 [ _36 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":495 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 122 [ _36 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 150 149 151 8 (set (reg/f:DI 308)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -160 [0xffffffffffffff60])) [5 s+0 S8 A64])) "../src/spline.f":495 81 {*movdi_internal}
     (nil))
(insn 151 150 152 8 (set (reg:SF 124 [ _38 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 123 [ _37 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 308)) [3 *s_199(D) S4 A32])) "../src/spline.f":495 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 308)
        (expr_list:REG_DEAD (reg:DI 123 [ _37 ])
            (nil))))
(insn 152 151 153 8 (set (reg:SF 125 [ _39 ])
        (minus:SF (reg:SF 120 [ _34 ])
            (reg:SF 124 [ _38 ]))) "../src/spline.f":495 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 124 [ _38 ])
        (expr_list:REG_DEAD (reg:SF 120 [ _34 ])
            (nil))))
(insn 153 152 154 8 (set (reg:SF 126 [ _40 ])
        (reg:SF 125 [ _39 ])) "../src/spline.f":495 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 125 [ _39 ])
        (nil)))
(insn 154 153 155 8 (set (reg:SF 309)
        (div:SF (reg:SF 126 [ _40 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -56 [0xffffffffffffffc8])) [3 ds+0 S4 A32]))) "../src/spline.f":495 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 126 [ _40 ])
        (nil)))
(insn 155 154 156 8 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -60 [0xffffffffffffffc4])) [3 t+0 S4 A32])
        (reg:SF 309)) "../src/spline.f":495 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 309)
        (nil)))
(insn 156 155 157 8 (set (reg:SI 310)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":497 82 {*movsi_internal}
     (nil))
(insn 157 156 158 8 (parallel [
            (set (reg:SI 127 [ _41 ])
                (plus:SI (reg:SI 310)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":497 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 310)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff]))
                (nil)))))
(insn 158 157 159 8 (set (reg:DI 128 [ _42 ])
        (sign_extend:DI (reg:SI 127 [ _41 ]))) "../src/spline.f":497 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 127 [ _41 ])
        (nil)))
(insn 159 158 160 8 (parallel [
            (set (reg:DI 129 [ _43 ])
                (plus:DI (reg:DI 128 [ _42 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":497 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 128 [ _42 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 160 159 161 8 (set (reg/f:DI 311)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -136 [0xffffffffffffff78])) [5 xs+0 S8 A64])) "../src/spline.f":497 81 {*movdi_internal}
     (nil))
(insn 161 160 162 8 (set (reg:SF 130 [ _44 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 129 [ _43 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 311)) [3 *xs_204(D) S4 A32])) "../src/spline.f":497 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 311)
        (expr_list:REG_DEAD (reg:DI 129 [ _43 ])
            (nil))))
(insn 162 161 163 8 (set (reg:SF 313)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [3 ds+0 S4 A32])) "../src/spline.f":497 127 {*movsf_internal}
     (nil))
(insn 163 162 164 8 (set (reg:SF 312)
        (mult:SF (reg:SF 313)
            (reg:SF 130 [ _44 ]))) "../src/spline.f":497 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 313)
        (expr_list:REG_DEAD (reg:SF 130 [ _44 ])
            (nil))))
(insn 164 163 165 8 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [3 f1+0 S4 A32])
        (reg:SF 312)) "../src/spline.f":497 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 312)
        (nil)))
(insn 165 164 166 8 (set (reg:SI 314)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":498 82 {*movsi_internal}
     (nil))
(insn 166 165 167 8 (set (reg:DI 131 [ _45 ])
        (sign_extend:DI (reg:SI 314))) "../src/spline.f":498 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 314)
        (nil)))
(insn 167 166 168 8 (parallel [
            (set (reg:DI 132 [ _46 ])
                (plus:DI (reg:DI 131 [ _45 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":498 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 131 [ _45 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 168 167 169 8 (set (reg/f:DI 315)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -128 [0xffffffffffffff80])) [5 x+0 S8 A64])) "../src/spline.f":498 81 {*movdi_internal}
     (nil))
(insn 169 168 170 8 (set (reg:SF 133 [ _47 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 132 [ _46 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 315)) [3 *x_206(D) S4 A32])) "../src/spline.f":498 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 315)
        (expr_list:REG_DEAD (reg:DI 132 [ _46 ])
            (nil))))
(insn 170 169 171 8 (set (reg:SI 316)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":498 82 {*movsi_internal}
     (nil))
(insn 171 170 172 8 (parallel [
            (set (reg:SI 134 [ _48 ])
                (plus:SI (reg:SI 316)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":498 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 316)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff]))
                (nil)))))
(insn 172 171 173 8 (set (reg:DI 135 [ _49 ])
        (sign_extend:DI (reg:SI 134 [ _48 ]))) "../src/spline.f":498 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 134 [ _48 ])
        (nil)))
(insn 173 172 174 8 (parallel [
            (set (reg:DI 136 [ _50 ])
                (plus:DI (reg:DI 135 [ _49 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":498 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 135 [ _49 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 174 173 175 8 (set (reg/f:DI 317)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -128 [0xffffffffffffff80])) [5 x+0 S8 A64])) "../src/spline.f":498 81 {*movdi_internal}
     (nil))
(insn 175 174 176 8 (set (reg:SF 137 [ _51 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 136 [ _50 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 317)) [3 *x_206(D) S4 A32])) "../src/spline.f":498 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 317)
        (expr_list:REG_DEAD (reg:DI 136 [ _50 ])
            (nil))))
(insn 176 175 177 8 (set (reg:SF 138 [ _52 ])
        (minus:SF (reg:SF 133 [ _47 ])
            (reg:SF 137 [ _51 ]))) "../src/spline.f":498 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 137 [ _51 ])
        (expr_list:REG_DEAD (reg:SF 133 [ _47 ])
            (nil))))
(insn 177 176 178 8 (set (reg:SF 139 [ _53 ])
        (reg:SF 138 [ _52 ])) "../src/spline.f":498 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 138 [ _52 ])
        (nil)))
(insn 178 177 179 8 (set (reg:SF 318)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC0") [flags 0x2]) [3  S4 A32])) "../src/spline.f":498 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 3.0e+0 [0x0.cp+2])
        (nil)))
(insn 179 178 180 8 (set (reg:SF 140 [ _54 ])
        (mult:SF (reg:SF 139 [ _53 ])
            (reg:SF 318))) "../src/spline.f":498 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 318)
        (expr_list:REG_DEAD (reg:SF 139 [ _53 ])
            (nil))))
(insn 180 179 181 8 (set (reg:SI 319)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":498 82 {*movsi_internal}
     (nil))
(insn 181 180 182 8 (parallel [
            (set (reg:SI 141 [ _55 ])
                (plus:SI (reg:SI 319)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":498 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 319)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff]))
                (nil)))))
(insn 182 181 183 8 (set (reg:DI 142 [ _56 ])
        (sign_extend:DI (reg:SI 141 [ _55 ]))) "../src/spline.f":498 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 141 [ _55 ])
        (nil)))
(insn 183 182 184 8 (parallel [
            (set (reg:DI 143 [ _57 ])
                (plus:DI (reg:DI 142 [ _56 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":498 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 142 [ _56 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 184 183 185 8 (set (reg/f:DI 320)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -136 [0xffffffffffffff78])) [5 xs+0 S8 A64])) "../src/spline.f":498 81 {*movdi_internal}
     (nil))
(insn 185 184 186 8 (set (reg:SF 144 [ _58 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 143 [ _57 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 320)) [3 *xs_204(D) S4 A32])) "../src/spline.f":498 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 320)
        (expr_list:REG_DEAD (reg:DI 143 [ _57 ])
            (nil))))
(insn 186 185 187 8 (set (reg:SF 145 [ _59 ])
        (plus:SF (reg:SF 144 [ _58 ])
            (reg:SF 144 [ _58 ]))) "../src/spline.f":498 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 144 [ _58 ])
        (nil)))
(insn 187 186 188 8 (set (reg:SI 321)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":498 82 {*movsi_internal}
     (nil))
(insn 188 187 189 8 (set (reg:DI 146 [ _60 ])
        (sign_extend:DI (reg:SI 321))) "../src/spline.f":498 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 321)
        (nil)))
(insn 189 188 190 8 (parallel [
            (set (reg:DI 147 [ _61 ])
                (plus:DI (reg:DI 146 [ _60 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":498 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 146 [ _60 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 190 189 191 8 (set (reg/f:DI 322)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -136 [0xffffffffffffff78])) [5 xs+0 S8 A64])) "../src/spline.f":498 81 {*movdi_internal}
     (nil))
(insn 191 190 192 8 (set (reg:SF 148 [ _62 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 147 [ _61 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 322)) [3 *xs_204(D) S4 A32])) "../src/spline.f":498 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 322)
        (expr_list:REG_DEAD (reg:DI 147 [ _61 ])
            (nil))))
(insn 192 191 193 8 (set (reg:SF 149 [ _63 ])
        (plus:SF (reg:SF 145 [ _59 ])
            (reg:SF 148 [ _62 ]))) "../src/spline.f":498 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 148 [ _62 ])
        (expr_list:REG_DEAD (reg:SF 145 [ _59 ])
            (nil))))
(insn 193 192 194 8 (set (reg:SF 150 [ _64 ])
        (reg:SF 149 [ _63 ])) "../src/spline.f":498 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 149 [ _63 ])
        (nil)))
(insn 194 193 195 8 (set (reg:SF 151 [ _65 ])
        (mult:SF (reg:SF 150 [ _64 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -56 [0xffffffffffffffc8])) [3 ds+0 S4 A32]))) "../src/spline.f":498 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 150 [ _64 ])
        (nil)))
(insn 195 194 196 8 (set (reg:SF 323)
        (minus:SF (reg:SF 140 [ _54 ])
            (reg:SF 151 [ _65 ]))) "../src/spline.f":498 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 151 [ _65 ])
        (expr_list:REG_DEAD (reg:SF 140 [ _54 ])
            (nil))))
(insn 196 195 197 8 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -68 [0xffffffffffffffbc])) [3 f2+0 S4 A32])
        (reg:SF 323)) "../src/spline.f":498 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 323)
        (nil)))
(insn 197 196 198 8 (set (reg:SI 324)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":499 82 {*movsi_internal}
     (nil))
(insn 198 197 199 8 (parallel [
            (set (reg:SI 152 [ _66 ])
                (plus:SI (reg:SI 324)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":499 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 324)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff]))
                (nil)))))
(insn 199 198 200 8 (set (reg:DI 153 [ _67 ])
        (sign_extend:DI (reg:SI 152 [ _66 ]))) "../src/spline.f":499 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 152 [ _66 ])
        (nil)))
(insn 200 199 201 8 (parallel [
            (set (reg:DI 154 [ _68 ])
                (plus:DI (reg:DI 153 [ _67 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":499 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 153 [ _67 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 201 200 202 8 (set (reg/f:DI 325)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -136 [0xffffffffffffff78])) [5 xs+0 S8 A64])) "../src/spline.f":499 81 {*movdi_internal}
     (nil))
(insn 202 201 203 8 (set (reg:SF 155 [ _69 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 154 [ _68 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 325)) [3 *xs_204(D) S4 A32])) "../src/spline.f":499 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 325)
        (expr_list:REG_DEAD (reg:DI 154 [ _68 ])
            (nil))))
(insn 203 202 204 8 (set (reg:SI 326)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":499 82 {*movsi_internal}
     (nil))
(insn 204 203 205 8 (set (reg:DI 156 [ _70 ])
        (sign_extend:DI (reg:SI 326))) "../src/spline.f":499 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 326)
        (nil)))
(insn 205 204 206 8 (parallel [
            (set (reg:DI 157 [ _71 ])
                (plus:DI (reg:DI 156 [ _70 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":499 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 156 [ _70 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 206 205 207 8 (set (reg/f:DI 327)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -136 [0xffffffffffffff78])) [5 xs+0 S8 A64])) "../src/spline.f":499 81 {*movdi_internal}
     (nil))
(insn 207 206 208 8 (set (reg:SF 158 [ _72 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 157 [ _71 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 327)) [3 *xs_204(D) S4 A32])) "../src/spline.f":499 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 327)
        (expr_list:REG_DEAD (reg:DI 157 [ _71 ])
            (nil))))
(insn 208 207 209 8 (set (reg:SF 159 [ _73 ])
        (plus:SF (reg:SF 155 [ _69 ])
            (reg:SF 158 [ _72 ]))) "../src/spline.f":499 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 158 [ _72 ])
        (expr_list:REG_DEAD (reg:SF 155 [ _69 ])
            (nil))))
(insn 209 208 210 8 (set (reg:SF 160 [ _74 ])
        (reg:SF 159 [ _73 ])) "../src/spline.f":499 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 159 [ _73 ])
        (nil)))
(insn 210 209 211 8 (set (reg:SF 161 [ _75 ])
        (mult:SF (reg:SF 160 [ _74 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -56 [0xffffffffffffffc8])) [3 ds+0 S4 A32]))) "../src/spline.f":499 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 160 [ _74 ])
        (nil)))
(insn 211 210 212 8 (set (reg:SI 328)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":499 82 {*movsi_internal}
     (nil))
(insn 212 211 213 8 (set (reg:DI 162 [ _76 ])
        (sign_extend:DI (reg:SI 328))) "../src/spline.f":499 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 328)
        (nil)))
(insn 213 212 214 8 (parallel [
            (set (reg:DI 163 [ _77 ])
                (plus:DI (reg:DI 162 [ _76 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":499 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 162 [ _76 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 214 213 215 8 (set (reg/f:DI 329)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -128 [0xffffffffffffff80])) [5 x+0 S8 A64])) "../src/spline.f":499 81 {*movdi_internal}
     (nil))
(insn 215 214 216 8 (set (reg:SF 164 [ _78 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 163 [ _77 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 329)) [3 *x_206(D) S4 A32])) "../src/spline.f":499 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 329)
        (expr_list:REG_DEAD (reg:DI 163 [ _77 ])
            (nil))))
(insn 216 215 217 8 (set (reg:SI 330)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":499 82 {*movsi_internal}
     (nil))
(insn 217 216 218 8 (parallel [
            (set (reg:SI 165 [ _79 ])
                (plus:SI (reg:SI 330)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":499 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 330)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff]))
                (nil)))))
(insn 218 217 219 8 (set (reg:DI 166 [ _80 ])
        (sign_extend:DI (reg:SI 165 [ _79 ]))) "../src/spline.f":499 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 165 [ _79 ])
        (nil)))
(insn 219 218 220 8 (parallel [
            (set (reg:DI 167 [ _81 ])
                (plus:DI (reg:DI 166 [ _80 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":499 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 166 [ _80 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 220 219 221 8 (set (reg/f:DI 331)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -128 [0xffffffffffffff80])) [5 x+0 S8 A64])) "../src/spline.f":499 81 {*movdi_internal}
     (nil))
(insn 221 220 222 8 (set (reg:SF 168 [ _82 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 167 [ _81 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 331)) [3 *x_206(D) S4 A32])) "../src/spline.f":499 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 331)
        (expr_list:REG_DEAD (reg:DI 167 [ _81 ])
            (nil))))
(insn 222 221 223 8 (set (reg:SF 169 [ _83 ])
        (minus:SF (reg:SF 164 [ _78 ])
            (reg:SF 168 [ _82 ]))) "../src/spline.f":499 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 168 [ _82 ])
        (expr_list:REG_DEAD (reg:SF 164 [ _78 ])
            (nil))))
(insn 223 222 224 8 (set (reg:SF 170 [ _84 ])
        (reg:SF 169 [ _83 ])) "../src/spline.f":499 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 169 [ _83 ])
        (nil)))
(insn 224 223 225 8 (set (reg:SF 171 [ _85 ])
        (plus:SF (reg:SF 170 [ _84 ])
            (reg:SF 170 [ _84 ]))) "../src/spline.f":499 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 170 [ _84 ])
        (nil)))
(insn 225 224 226 8 (set (reg:SF 332)
        (minus:SF (reg:SF 161 [ _75 ])
            (reg:SF 171 [ _85 ]))) "../src/spline.f":499 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 171 [ _85 ])
        (expr_list:REG_DEAD (reg:SF 161 [ _75 ])
            (nil))))
(insn 226 225 227 8 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [3 f3+0 S4 A32])
        (reg:SF 332)) "../src/spline.f":499 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 332)
        (nil)))
(insn 227 226 228 8 (set (reg:SF 333)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -68 [0xffffffffffffffbc])) [3 f2+0 S4 A32])) "../src/spline.f":501 127 {*movsf_internal}
     (nil))
(insn 228 227 229 8 (set (reg:SF 172 [ _86 ])
        (plus:SF (reg:SF 333)
            (reg:SF 333))) "../src/spline.f":501 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 333)
        (nil)))
(insn 229 228 230 8 (set (reg:SF 334)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -60 [0xffffffffffffffc4])) [3 t+0 S4 A32])) "../src/spline.f":501 127 {*movsf_internal}
     (nil))
(insn 230 229 231 8 (set (reg:SF 335)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC0") [flags 0x2]) [3  S4 A32])) "../src/spline.f":501 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 3.0e+0 [0x0.cp+2])
        (nil)))
(insn 231 230 232 8 (set (reg:SF 173 [ _87 ])
        (mult:SF (reg:SF 334)
            (reg:SF 335))) "../src/spline.f":501 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 335)
        (expr_list:REG_DEAD (reg:SF 334)
            (nil))))
(insn 232 231 233 8 (set (reg:SF 174 [ _88 ])
        (mult:SF (reg:SF 173 [ _87 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -72 [0xffffffffffffffb8])) [3 f3+0 S4 A32]))) "../src/spline.f":501 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 173 [ _87 ])
        (nil)))
(insn 233 232 234 8 (set (reg:SF 175 [ _89 ])
        (plus:SF (reg:SF 172 [ _86 ])
            (reg:SF 174 [ _88 ]))) "../src/spline.f":501 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 174 [ _88 ])
        (expr_list:REG_DEAD (reg:SF 172 [ _86 ])
            (nil))))
(insn 234 233 235 8 (set (reg:SF 176 [ _90 ])
        (reg:SF 175 [ _89 ])) "../src/spline.f":501 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 175 [ _89 ])
        (nil)))
(insn 235 234 236 8 (set (reg:SF 177 [ _91 ])
        (mult:SF (reg:SF 176 [ _90 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -60 [0xffffffffffffffc4])) [3 t+0 S4 A32]))) "../src/spline.f":501 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 176 [ _90 ])
        (nil)))
(insn 236 235 237 8 (set (reg:SF 337)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [3 f1+0 S4 A32])) "../src/spline.f":501 127 {*movsf_internal}
     (nil))
(insn 237 236 238 8 (set (reg:SF 336)
        (plus:SF (reg:SF 337)
            (reg:SF 177 [ _91 ]))) "../src/spline.f":501 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 337)
        (expr_list:REG_DEAD (reg:SF 177 [ _91 ])
            (nil))))
(insn 238 237 239 8 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -76 [0xffffffffffffffb4])) [3 xd+0 S4 A32])
        (reg:SF 336)) "../src/spline.f":501 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 336)
        (nil)))
(insn 239 238 240 8 (set (reg:SF 338)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -68 [0xffffffffffffffbc])) [3 f2+0 S4 A32])) "../src/spline.f":502 127 {*movsf_internal}
     (nil))
(insn 240 239 241 8 (set (reg:SF 178 [ _92 ])
        (plus:SF (reg:SF 338)
            (reg:SF 338))) "../src/spline.f":502 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 338)
        (nil)))
(insn 241 240 242 8 (set (reg:SF 339)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -60 [0xffffffffffffffc4])) [3 t+0 S4 A32])) "../src/spline.f":502 127 {*movsf_internal}
     (nil))
(insn 242 241 243 8 (set (reg:SF 340)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC1") [flags 0x2]) [3  S4 A32])) "../src/spline.f":502 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 6.0e+0 [0x0.cp+3])
        (nil)))
(insn 243 242 244 8 (set (reg:SF 179 [ _93 ])
        (mult:SF (reg:SF 339)
            (reg:SF 340))) "../src/spline.f":502 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 340)
        (expr_list:REG_DEAD (reg:SF 339)
            (nil))))
(insn 244 243 245 8 (set (reg:SF 180 [ _94 ])
        (mult:SF (reg:SF 179 [ _93 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -72 [0xffffffffffffffb8])) [3 f3+0 S4 A32]))) "../src/spline.f":502 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 179 [ _93 ])
        (nil)))
(insn 245 244 246 8 (set (reg:SF 341)
        (plus:SF (reg:SF 178 [ _92 ])
            (reg:SF 180 [ _94 ]))) "../src/spline.f":502 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 180 [ _94 ])
        (expr_list:REG_DEAD (reg:SF 178 [ _92 ])
            (nil))))
(insn 246 245 247 8 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [3 xdd+0 S4 A32])
        (reg:SF 341)) "../src/spline.f":502 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 341)
        (nil)))
(insn 247 246 248 8 (set (reg:SI 342)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":505 82 {*movsi_internal}
     (nil))
(insn 248 247 249 8 (parallel [
            (set (reg:SI 181 [ _95 ])
                (plus:SI (reg:SI 342)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":505 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 342)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff]))
                (nil)))))
(insn 249 248 250 8 (set (reg:DI 182 [ _96 ])
        (sign_extend:DI (reg:SI 181 [ _95 ]))) "../src/spline.f":505 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 181 [ _95 ])
        (nil)))
(insn 250 249 251 8 (parallel [
            (set (reg:DI 183 [ _97 ])
                (plus:DI (reg:DI 182 [ _96 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":505 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 182 [ _96 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 251 250 252 8 (set (reg/f:DI 343)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -152 [0xffffffffffffff68])) [5 ys+0 S8 A64])) "../src/spline.f":505 81 {*movdi_internal}
     (nil))
(insn 252 251 253 8 (set (reg:SF 184 [ _98 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 183 [ _97 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 343)) [3 *ys_211(D) S4 A32])) "../src/spline.f":505 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 343)
        (expr_list:REG_DEAD (reg:DI 183 [ _97 ])
            (nil))))
(insn 253 252 254 8 (set (reg:SF 345)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [3 ds+0 S4 A32])) "../src/spline.f":505 127 {*movsf_internal}
     (nil))
(insn 254 253 255 8 (set (reg:SF 344)
        (mult:SF (reg:SF 345)
            (reg:SF 184 [ _98 ]))) "../src/spline.f":505 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 345)
        (expr_list:REG_DEAD (reg:SF 184 [ _98 ])
            (nil))))
(insn 255 254 256 8 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -84 [0xffffffffffffffac])) [3 g1+0 S4 A32])
        (reg:SF 344)) "../src/spline.f":505 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 344)
        (nil)))
(insn 256 255 257 8 (set (reg:SI 346)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":506 82 {*movsi_internal}
     (nil))
(insn 257 256 258 8 (set (reg:DI 185 [ _99 ])
        (sign_extend:DI (reg:SI 346))) "../src/spline.f":506 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 346)
        (nil)))
(insn 258 257 259 8 (parallel [
            (set (reg:DI 186 [ _100 ])
                (plus:DI (reg:DI 185 [ _99 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":506 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 185 [ _99 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 259 258 260 8 (set (reg/f:DI 347)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -144 [0xffffffffffffff70])) [5 y+0 S8 A64])) "../src/spline.f":506 81 {*movdi_internal}
     (nil))
(insn 260 259 261 8 (set (reg:SF 187 [ _101 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 186 [ _100 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 347)) [3 *y_213(D) S4 A32])) "../src/spline.f":506 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 347)
        (expr_list:REG_DEAD (reg:DI 186 [ _100 ])
            (nil))))
(insn 261 260 262 8 (set (reg:SI 348)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":506 82 {*movsi_internal}
     (nil))
(insn 262 261 263 8 (parallel [
            (set (reg:SI 188 [ _102 ])
                (plus:SI (reg:SI 348)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":506 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 348)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff]))
                (nil)))))
(insn 263 262 264 8 (set (reg:DI 189 [ _103 ])
        (sign_extend:DI (reg:SI 188 [ _102 ]))) "../src/spline.f":506 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 188 [ _102 ])
        (nil)))
(insn 264 263 265 8 (parallel [
            (set (reg:DI 190 [ _104 ])
                (plus:DI (reg:DI 189 [ _103 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":506 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 189 [ _103 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 265 264 266 8 (set (reg/f:DI 349)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -144 [0xffffffffffffff70])) [5 y+0 S8 A64])) "../src/spline.f":506 81 {*movdi_internal}
     (nil))
(insn 266 265 267 8 (set (reg:SF 191 [ _105 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 190 [ _104 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 349)) [3 *y_213(D) S4 A32])) "../src/spline.f":506 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 349)
        (expr_list:REG_DEAD (reg:DI 190 [ _104 ])
            (nil))))
(insn 267 266 268 8 (set (reg:SF 192 [ _106 ])
        (minus:SF (reg:SF 187 [ _101 ])
            (reg:SF 191 [ _105 ]))) "../src/spline.f":506 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 191 [ _105 ])
        (expr_list:REG_DEAD (reg:SF 187 [ _101 ])
            (nil))))
(insn 268 267 269 8 (set (reg:SF 193 [ _107 ])
        (reg:SF 192 [ _106 ])) "../src/spline.f":506 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 192 [ _106 ])
        (nil)))
(insn 269 268 270 8 (set (reg:SF 350)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC0") [flags 0x2]) [3  S4 A32])) "../src/spline.f":506 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 3.0e+0 [0x0.cp+2])
        (nil)))
(insn 270 269 271 8 (set (reg:SF 194 [ _108 ])
        (mult:SF (reg:SF 193 [ _107 ])
            (reg:SF 350))) "../src/spline.f":506 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 350)
        (expr_list:REG_DEAD (reg:SF 193 [ _107 ])
            (nil))))
(insn 271 270 272 8 (set (reg:SI 351)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":506 82 {*movsi_internal}
     (nil))
(insn 272 271 273 8 (parallel [
            (set (reg:SI 195 [ _109 ])
                (plus:SI (reg:SI 351)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":506 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 351)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff]))
                (nil)))))
(insn 273 272 274 8 (set (reg:DI 196 [ _110 ])
        (sign_extend:DI (reg:SI 195 [ _109 ]))) "../src/spline.f":506 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 195 [ _109 ])
        (nil)))
(insn 274 273 275 8 (parallel [
            (set (reg:DI 197 [ _111 ])
                (plus:DI (reg:DI 196 [ _110 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":506 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 196 [ _110 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 275 274 276 8 (set (reg/f:DI 352)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -152 [0xffffffffffffff68])) [5 ys+0 S8 A64])) "../src/spline.f":506 81 {*movdi_internal}
     (nil))
(insn 276 275 277 8 (set (reg:SF 198 [ _112 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 197 [ _111 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 352)) [3 *ys_211(D) S4 A32])) "../src/spline.f":506 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 352)
        (expr_list:REG_DEAD (reg:DI 197 [ _111 ])
            (nil))))
(insn 277 276 278 8 (set (reg:SF 199 [ _113 ])
        (plus:SF (reg:SF 198 [ _112 ])
            (reg:SF 198 [ _112 ]))) "../src/spline.f":506 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 198 [ _112 ])
        (nil)))
(insn 278 277 279 8 (set (reg:SI 353)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":506 82 {*movsi_internal}
     (nil))
(insn 279 278 280 8 (set (reg:DI 200 [ _114 ])
        (sign_extend:DI (reg:SI 353))) "../src/spline.f":506 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 353)
        (nil)))
(insn 280 279 281 8 (parallel [
            (set (reg:DI 201 [ _115 ])
                (plus:DI (reg:DI 200 [ _114 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":506 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 200 [ _114 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 281 280 282 8 (set (reg/f:DI 354)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -152 [0xffffffffffffff68])) [5 ys+0 S8 A64])) "../src/spline.f":506 81 {*movdi_internal}
     (nil))
(insn 282 281 283 8 (set (reg:SF 202 [ _116 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 201 [ _115 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 354)) [3 *ys_211(D) S4 A32])) "../src/spline.f":506 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 354)
        (expr_list:REG_DEAD (reg:DI 201 [ _115 ])
            (nil))))
(insn 283 282 284 8 (set (reg:SF 203 [ _117 ])
        (plus:SF (reg:SF 199 [ _113 ])
            (reg:SF 202 [ _116 ]))) "../src/spline.f":506 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 202 [ _116 ])
        (expr_list:REG_DEAD (reg:SF 199 [ _113 ])
            (nil))))
(insn 284 283 285 8 (set (reg:SF 204 [ _118 ])
        (reg:SF 203 [ _117 ])) "../src/spline.f":506 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 203 [ _117 ])
        (nil)))
(insn 285 284 286 8 (set (reg:SF 205 [ _119 ])
        (mult:SF (reg:SF 204 [ _118 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -56 [0xffffffffffffffc8])) [3 ds+0 S4 A32]))) "../src/spline.f":506 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 204 [ _118 ])
        (nil)))
(insn 286 285 287 8 (set (reg:SF 355)
        (minus:SF (reg:SF 194 [ _108 ])
            (reg:SF 205 [ _119 ]))) "../src/spline.f":506 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 205 [ _119 ])
        (expr_list:REG_DEAD (reg:SF 194 [ _108 ])
            (nil))))
(insn 287 286 288 8 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -88 [0xffffffffffffffa8])) [3 g2+0 S4 A32])
        (reg:SF 355)) "../src/spline.f":506 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 355)
        (nil)))
(insn 288 287 289 8 (set (reg:SI 356)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":507 82 {*movsi_internal}
     (nil))
(insn 289 288 290 8 (parallel [
            (set (reg:SI 206 [ _120 ])
                (plus:SI (reg:SI 356)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":507 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 356)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff]))
                (nil)))))
(insn 290 289 291 8 (set (reg:DI 207 [ _121 ])
        (sign_extend:DI (reg:SI 206 [ _120 ]))) "../src/spline.f":507 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 206 [ _120 ])
        (nil)))
(insn 291 290 292 8 (parallel [
            (set (reg:DI 208 [ _122 ])
                (plus:DI (reg:DI 207 [ _121 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":507 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 207 [ _121 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 292 291 293 8 (set (reg/f:DI 357)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -152 [0xffffffffffffff68])) [5 ys+0 S8 A64])) "../src/spline.f":507 81 {*movdi_internal}
     (nil))
(insn 293 292 294 8 (set (reg:SF 209 [ _123 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 208 [ _122 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 357)) [3 *ys_211(D) S4 A32])) "../src/spline.f":507 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 357)
        (expr_list:REG_DEAD (reg:DI 208 [ _122 ])
            (nil))))
(insn 294 293 295 8 (set (reg:SI 358)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":507 82 {*movsi_internal}
     (nil))
(insn 295 294 296 8 (set (reg:DI 210 [ _124 ])
        (sign_extend:DI (reg:SI 358))) "../src/spline.f":507 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 358)
        (nil)))
(insn 296 295 297 8 (parallel [
            (set (reg:DI 211 [ _125 ])
                (plus:DI (reg:DI 210 [ _124 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":507 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 210 [ _124 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 297 296 298 8 (set (reg/f:DI 359)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -152 [0xffffffffffffff68])) [5 ys+0 S8 A64])) "../src/spline.f":507 81 {*movdi_internal}
     (nil))
(insn 298 297 299 8 (set (reg:SF 212 [ _126 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 211 [ _125 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 359)) [3 *ys_211(D) S4 A32])) "../src/spline.f":507 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 359)
        (expr_list:REG_DEAD (reg:DI 211 [ _125 ])
            (nil))))
(insn 299 298 300 8 (set (reg:SF 213 [ _127 ])
        (plus:SF (reg:SF 209 [ _123 ])
            (reg:SF 212 [ _126 ]))) "../src/spline.f":507 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 212 [ _126 ])
        (expr_list:REG_DEAD (reg:SF 209 [ _123 ])
            (nil))))
(insn 300 299 301 8 (set (reg:SF 214 [ _128 ])
        (reg:SF 213 [ _127 ])) "../src/spline.f":507 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 213 [ _127 ])
        (nil)))
(insn 301 300 302 8 (set (reg:SF 215 [ _129 ])
        (mult:SF (reg:SF 214 [ _128 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -56 [0xffffffffffffffc8])) [3 ds+0 S4 A32]))) "../src/spline.f":507 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 214 [ _128 ])
        (nil)))
(insn 302 301 303 8 (set (reg:SI 360)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":507 82 {*movsi_internal}
     (nil))
(insn 303 302 304 8 (set (reg:DI 216 [ _130 ])
        (sign_extend:DI (reg:SI 360))) "../src/spline.f":507 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 360)
        (nil)))
(insn 304 303 305 8 (parallel [
            (set (reg:DI 217 [ _131 ])
                (plus:DI (reg:DI 216 [ _130 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":507 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 216 [ _130 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 305 304 306 8 (set (reg/f:DI 361)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -144 [0xffffffffffffff70])) [5 y+0 S8 A64])) "../src/spline.f":507 81 {*movdi_internal}
     (nil))
(insn 306 305 307 8 (set (reg:SF 218 [ _132 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 217 [ _131 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 361)) [3 *y_213(D) S4 A32])) "../src/spline.f":507 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 361)
        (expr_list:REG_DEAD (reg:DI 217 [ _131 ])
            (nil))))
(insn 307 306 308 8 (set (reg:SI 362)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":507 82 {*movsi_internal}
     (nil))
(insn 308 307 309 8 (parallel [
            (set (reg:SI 219 [ _133 ])
                (plus:SI (reg:SI 362)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":507 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 362)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff]))
                (nil)))))
(insn 309 308 310 8 (set (reg:DI 220 [ _134 ])
        (sign_extend:DI (reg:SI 219 [ _133 ]))) "../src/spline.f":507 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 219 [ _133 ])
        (nil)))
(insn 310 309 311 8 (parallel [
            (set (reg:DI 221 [ _135 ])
                (plus:DI (reg:DI 220 [ _134 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":507 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 220 [ _134 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 311 310 312 8 (set (reg/f:DI 363)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -144 [0xffffffffffffff70])) [5 y+0 S8 A64])) "../src/spline.f":507 81 {*movdi_internal}
     (nil))
(insn 312 311 313 8 (set (reg:SF 222 [ _136 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 221 [ _135 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 363)) [3 *y_213(D) S4 A32])) "../src/spline.f":507 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 363)
        (expr_list:REG_DEAD (reg:DI 221 [ _135 ])
            (nil))))
(insn 313 312 314 8 (set (reg:SF 223 [ _137 ])
        (minus:SF (reg:SF 218 [ _132 ])
            (reg:SF 222 [ _136 ]))) "../src/spline.f":507 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 222 [ _136 ])
        (expr_list:REG_DEAD (reg:SF 218 [ _132 ])
            (nil))))
(insn 314 313 315 8 (set (reg:SF 224 [ _138 ])
        (reg:SF 223 [ _137 ])) "../src/spline.f":507 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 223 [ _137 ])
        (nil)))
(insn 315 314 316 8 (set (reg:SF 225 [ _139 ])
        (plus:SF (reg:SF 224 [ _138 ])
            (reg:SF 224 [ _138 ]))) "../src/spline.f":507 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 224 [ _138 ])
        (nil)))
(insn 316 315 317 8 (set (reg:SF 364)
        (minus:SF (reg:SF 215 [ _129 ])
            (reg:SF 225 [ _139 ]))) "../src/spline.f":507 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 225 [ _139 ])
        (expr_list:REG_DEAD (reg:SF 215 [ _129 ])
            (nil))))
(insn 317 316 318 8 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -92 [0xffffffffffffffa4])) [3 g3+0 S4 A32])
        (reg:SF 364)) "../src/spline.f":507 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 364)
        (nil)))
(insn 318 317 319 8 (set (reg:SF 365)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -88 [0xffffffffffffffa8])) [3 g2+0 S4 A32])) "../src/spline.f":509 127 {*movsf_internal}
     (nil))
(insn 319 318 320 8 (set (reg:SF 226 [ _140 ])
        (plus:SF (reg:SF 365)
            (reg:SF 365))) "../src/spline.f":509 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 365)
        (nil)))
(insn 320 319 321 8 (set (reg:SF 366)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -60 [0xffffffffffffffc4])) [3 t+0 S4 A32])) "../src/spline.f":509 127 {*movsf_internal}
     (nil))
(insn 321 320 322 8 (set (reg:SF 367)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC0") [flags 0x2]) [3  S4 A32])) "../src/spline.f":509 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 3.0e+0 [0x0.cp+2])
        (nil)))
(insn 322 321 323 8 (set (reg:SF 227 [ _141 ])
        (mult:SF (reg:SF 366)
            (reg:SF 367))) "../src/spline.f":509 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 367)
        (expr_list:REG_DEAD (reg:SF 366)
            (nil))))
(insn 323 322 324 8 (set (reg:SF 228 [ _142 ])
        (mult:SF (reg:SF 227 [ _141 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -92 [0xffffffffffffffa4])) [3 g3+0 S4 A32]))) "../src/spline.f":509 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 227 [ _141 ])
        (nil)))
(insn 324 323 325 8 (set (reg:SF 229 [ _143 ])
        (plus:SF (reg:SF 226 [ _140 ])
            (reg:SF 228 [ _142 ]))) "../src/spline.f":509 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 228 [ _142 ])
        (expr_list:REG_DEAD (reg:SF 226 [ _140 ])
            (nil))))
(insn 325 324 326 8 (set (reg:SF 230 [ _144 ])
        (reg:SF 229 [ _143 ])) "../src/spline.f":509 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 229 [ _143 ])
        (nil)))
(insn 326 325 327 8 (set (reg:SF 231 [ _145 ])
        (mult:SF (reg:SF 230 [ _144 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -60 [0xffffffffffffffc4])) [3 t+0 S4 A32]))) "../src/spline.f":509 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 230 [ _144 ])
        (nil)))
(insn 327 326 328 8 (set (reg:SF 369)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -84 [0xffffffffffffffac])) [3 g1+0 S4 A32])) "../src/spline.f":509 127 {*movsf_internal}
     (nil))
(insn 328 327 329 8 (set (reg:SF 368)
        (plus:SF (reg:SF 369)
            (reg:SF 231 [ _145 ]))) "../src/spline.f":509 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 369)
        (expr_list:REG_DEAD (reg:SF 231 [ _145 ])
            (nil))))
(insn 329 328 330 8 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [3 yd+0 S4 A32])
        (reg:SF 368)) "../src/spline.f":509 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 368)
        (nil)))
(insn 330 329 331 8 (set (reg:SF 370)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -88 [0xffffffffffffffa8])) [3 g2+0 S4 A32])) "../src/spline.f":510 127 {*movsf_internal}
     (nil))
(insn 331 330 332 8 (set (reg:SF 232 [ _146 ])
        (plus:SF (reg:SF 370)
            (reg:SF 370))) "../src/spline.f":510 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 370)
        (nil)))
(insn 332 331 333 8 (set (reg:SF 371)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -60 [0xffffffffffffffc4])) [3 t+0 S4 A32])) "../src/spline.f":510 127 {*movsf_internal}
     (nil))
(insn 333 332 334 8 (set (reg:SF 372)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC1") [flags 0x2]) [3  S4 A32])) "../src/spline.f":510 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 6.0e+0 [0x0.cp+3])
        (nil)))
(insn 334 333 335 8 (set (reg:SF 233 [ _147 ])
        (mult:SF (reg:SF 371)
            (reg:SF 372))) "../src/spline.f":510 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 372)
        (expr_list:REG_DEAD (reg:SF 371)
            (nil))))
(insn 335 334 336 8 (set (reg:SF 234 [ _148 ])
        (mult:SF (reg:SF 233 [ _147 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -92 [0xffffffffffffffa4])) [3 g3+0 S4 A32]))) "../src/spline.f":510 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 233 [ _147 ])
        (nil)))
(insn 336 335 337 8 (set (reg:SF 373)
        (plus:SF (reg:SF 232 [ _146 ])
            (reg:SF 234 [ _148 ]))) "../src/spline.f":510 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 234 [ _148 ])
        (expr_list:REG_DEAD (reg:SF 232 [ _146 ])
            (nil))))
(insn 337 336 338 8 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -100 [0xffffffffffffff9c])) [3 ydd+0 S4 A32])
        (reg:SF 373)) "../src/spline.f":510 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 373)
        (nil)))
(insn 338 337 339 8 (set (reg:SF 374)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -76 [0xffffffffffffffb4])) [3 xd+0 S4 A32])) "../src/spline.f":513 127 {*movsf_internal}
     (nil))
(insn 339 338 340 8 (set (reg:SF 235 [ _149 ])
        (mult:SF (reg:SF 374)
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -76 [0xffffffffffffffb4])) [3 xd+0 S4 A32]))) "../src/spline.f":513 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 374)
        (nil)))
(insn 340 339 341 8 (set (reg:SF 375)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [3 yd+0 S4 A32])) "../src/spline.f":513 127 {*movsf_internal}
     (nil))
(insn 341 340 342 8 (set (reg:SF 236 [ _150 ])
        (mult:SF (reg:SF 375)
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -96 [0xffffffffffffffa0])) [3 yd+0 S4 A32]))) "../src/spline.f":513 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 375)
        (nil)))
(insn 342 341 343 8 (set (reg:SF 237 [ _151 ])
        (plus:SF (reg:SF 235 [ _149 ])
            (reg:SF 236 [ _150 ]))) "../src/spline.f":513 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 236 [ _150 ])
        (expr_list:REG_DEAD (reg:SF 235 [ _149 ])
            (nil))))
(insn 343 342 344 8 (set (reg:SF 270 [ _218 ])
        (reg:SF 237 [ _151 ])) "../src/spline.f":513 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 237 [ _151 ])
        (nil)))
(insn 344 343 345 8 (set (reg:SF 376)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -76 [0xffffffffffffffb4])) [3 xd+0 S4 A32])) "../src/spline.f":513 127 {*movsf_internal}
     (nil))
(insn 345 344 346 8 (set (reg:SF 238 [ _152 ])
        (mult:SF (reg:SF 376)
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -100 [0xffffffffffffff9c])) [3 ydd+0 S4 A32]))) "../src/spline.f":513 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 376)
        (nil)))
(insn 346 345 347 8 (set (reg:SF 377)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [3 yd+0 S4 A32])) "../src/spline.f":513 127 {*movsf_internal}
     (nil))
(insn 347 346 348 8 (set (reg:SF 239 [ _153 ])
        (mult:SF (reg:SF 377)
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -80 [0xffffffffffffffb0])) [3 xdd+0 S4 A32]))) "../src/spline.f":513 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 377)
        (nil)))
(insn 348 347 349 8 (set (reg:SF 240 [ _154 ])
        (minus:SF (reg:SF 238 [ _152 ])
            (reg:SF 239 [ _153 ]))) "../src/spline.f":513 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 239 [ _153 ])
        (expr_list:REG_DEAD (reg:SF 238 [ _152 ])
            (nil))))
(insn 349 348 350 8 (set (reg:SF 241 [ _155 ])
        (reg:SF 240 [ _154 ])) "../src/spline.f":513 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 240 [ _154 ])
        (nil)))
(insn 350 349 351 8 (set (reg:SI 5 di)
        (const_int 3 [0x3])) "../src/spline.f":513 82 {*movsi_internal}
     (nil))
(insn 351 350 352 8 (set (reg:SF 21 xmm0)
        (reg:SF 270 [ _218 ])) "../src/spline.f":513 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 270 [ _218 ])
        (nil)))
(call_insn/u 352 351 353 8 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("__powisf2") [flags 0x41]) [0  S1 A8])
            (const_int 0 [0]))) "../src/spline.f":513 665 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (use (reg:SI 5 di))
        (expr_list (use (reg:SF 21 xmm0))
            (nil))))
(insn 353 352 354 8 (set (reg:SF 242 [ _156 ])
        (reg:SF 21 xmm0)) "../src/spline.f":513 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 21 xmm0)
        (nil)))
(insn 354 353 355 8 (set (reg:SF 243 [ _157 ])
        (sqrt:SF (reg:SF 242 [ _156 ]))) "../src/spline.f":513 836 {*sqrtsf2_sse}
     (expr_list:REG_DEAD (reg:SF 242 [ _156 ])
        (nil)))
(insn 355 354 356 8 (set (reg:SF 244 [ _158 ])
        (div:SF (reg:SF 241 [ _155 ])
            (reg:SF 243 [ _157 ]))) "../src/spline.f":513 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 243 [ _157 ])
        (expr_list:REG_DEAD (reg:SF 241 [ _155 ])
            (nil))))
(insn 356 355 357 8 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -104 [0xffffffffffffff98])) [3 __result_curv+0 S4 A64])
        (reg:SF 244 [ _158 ])) "../src/spline.f":513 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 244 [ _158 ])
        (nil)))
(insn 357 356 360 8 (set (reg:SF 271 [ _220 ])
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -104 [0xffffffffffffff98])) [3 __result_curv+0 S4 A64])) "../src/spline.f":515 127 {*movsf_internal}
     (nil))
(insn 360 357 364 8 (set (reg:SF 272 [ <retval> ])
        (reg:SF 271 [ _220 ])) 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 271 [ _220 ])
        (nil)))
(insn 364 360 365 8 (set (reg/i:SF 21 xmm0)
        (reg:SF 272 [ <retval> ])) "../src/spline.f":516 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 272 [ <retval> ])
        (nil)))
(insn 365 364 0 8 (use (reg/i:SF 21 xmm0)) "../src/spline.f":516 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0]


;; Function curvs (curvs_, funcdef_no=11, decl_uid=4028, cgraph_uid=11, symbol_order=11)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 10 n_edges 11 count 10 (    1)
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 9 8
;;
;; Loop 1
;;  header 3, latch 7
;;  depth 1, outer 0
;;  nodes: 3 7 6 5 4
;; 2 succs { 3 }
;; 3 succs { 9 4 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 3 }
;; 9 succs { 8 }
;; 8 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 556.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r595: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a9 (r595,l0) best SSE_REGS, allocno SSE_REGS
    r594: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a10 (r594,l0) best SSE_REGS, allocno SSE_REGS
    r593: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a12 (r593,l0) best SSE_REGS, allocno SSE_REGS
    r592: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a15 (r592,l0) best SSE_REGS, allocno SSE_REGS
    r591: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a16 (r591,l0) best SSE_REGS, allocno SSE_REGS
    r590: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a17 (r590,l0) best SSE_REGS, allocno SSE_REGS
    r589: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a20 (r589,l0) best SSE_REGS, allocno SSE_REGS
    r588: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a21 (r588,l0) best SSE_REGS, allocno SSE_REGS
    r587: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a22 (r587,l0) best SSE_REGS, allocno SSE_REGS
    r586: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a28 (r586,l0) best SSE_REGS, allocno SSE_REGS
    r585: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a29 (r585,l0) best SSE_REGS, allocno SSE_REGS
    r584: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a30 (r584,l0) best SSE_REGS, allocno SSE_REGS
    r583: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a31 (r583,l0) best SSE_REGS, allocno SSE_REGS
    r582: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a33 (r582,l0) best SSE_REGS, allocno SSE_REGS
    r581: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a37 (r581,l0) best SSE_REGS, allocno SSE_REGS
    r580: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a38 (r580,l0) best SSE_REGS, allocno SSE_REGS
    r579: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a40 (r579,l0) best SSE_REGS, allocno SSE_REGS
    r578: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a41 (r578,l0) best SSE_REGS, allocno SSE_REGS
    r577: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a39 (r577,l0) best SSE_REGS, allocno SSE_REGS
    r576: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a42 (r576,l0) best SSE_REGS, allocno SSE_REGS
    r575: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a46 (r575,l0) best SSE_REGS, allocno SSE_REGS
    r574: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a47 (r574,l0) best SSE_REGS, allocno SSE_REGS
    r573: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a48 (r573,l0) best SSE_REGS, allocno SSE_REGS
    r572: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a51 (r572,l0) best SSE_REGS, allocno SSE_REGS
    r571: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a49 (r571,l0) best SSE_REGS, allocno SSE_REGS
    r570: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a57 (r570,l0) best SSE_REGS, allocno SSE_REGS
    r569: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a58 (r569,l0) best SSE_REGS, allocno SSE_REGS
    r568: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a59 (r568,l0) best SSE_REGS, allocno SSE_REGS
    r567: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a60 (r567,l0) best SSE_REGS, allocno SSE_REGS
    r566: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a67 (r566,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r565: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a71 (r565,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r564: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a72 (r564,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r563: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a75 (r563,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r562: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a80 (r562,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r561: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a83 (r561,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r560: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a84 (r560,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r559: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a88 (r559,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r558: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a89 (r558,l0) best SSE_REGS, allocno SSE_REGS
    r557: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a96 (r557,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r556: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a99 (r556,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r555: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a101 (r555,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r554: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a105 (r554,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r553: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a106 (r553,l0) best SSE_REGS, allocno SSE_REGS
    r552: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a111 (r552,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r551: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a115 (r551,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r550: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a116 (r550,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r549: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a119 (r549,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r548: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a122 (r548,l0) best SSE_REGS, allocno SSE_REGS
    r547: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a120 (r547,l0) best SSE_REGS, allocno SSE_REGS
    r546: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a123 (r546,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r545: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a127 (r545,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r544: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a129 (r544,l0) best SSE_REGS, allocno SSE_REGS
    r543: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a130 (r543,l0) best SSE_REGS, allocno SSE_REGS
    r542: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a128 (r542,l0) best SSE_REGS, allocno SSE_REGS
    r541: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a131 (r541,l0) best SSE_REGS, allocno SSE_REGS
    r540: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a135 (r540,l0) best SSE_REGS, allocno SSE_REGS
    r539: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a136 (r539,l0) best SSE_REGS, allocno SSE_REGS
    r538: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a137 (r538,l0) best SSE_REGS, allocno SSE_REGS
    r537: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a140 (r537,l0) best SSE_REGS, allocno SSE_REGS
    r536: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a138 (r536,l0) best SSE_REGS, allocno SSE_REGS
    r535: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a146 (r535,l0) best SSE_REGS, allocno SSE_REGS
    r534: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a147 (r534,l0) best SSE_REGS, allocno SSE_REGS
    r533: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a148 (r533,l0) best SSE_REGS, allocno SSE_REGS
    r532: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a149 (r532,l0) best SSE_REGS, allocno SSE_REGS
    r531: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a156 (r531,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r530: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a160 (r530,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r529: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a161 (r529,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r528: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a164 (r528,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r527: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a169 (r527,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r526: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a172 (r526,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r525: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a173 (r525,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r524: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a177 (r524,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r523: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a178 (r523,l0) best SSE_REGS, allocno SSE_REGS
    r522: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a185 (r522,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r521: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a188 (r521,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r520: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a190 (r520,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r519: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a194 (r519,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r518: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a195 (r518,l0) best SSE_REGS, allocno SSE_REGS
    r517: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a200 (r517,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r516: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a204 (r516,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r515: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a205 (r515,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r514: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a208 (r514,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r513: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a211 (r513,l0) best SSE_REGS, allocno SSE_REGS
    r512: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a209 (r512,l0) best SSE_REGS, allocno SSE_REGS
    r511: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a212 (r511,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r510: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a216 (r510,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r509: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a217 (r509,l0) best SSE_REGS, allocno SSE_REGS
    r508: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a220 (r508,l0) best SSE_REGS, allocno SSE_REGS
    r507: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a221 (r507,l0) best SSE_REGS, allocno SSE_REGS
    r506: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a222 (r506,l0) best SSE_REGS, allocno SSE_REGS
    r505: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a223 (r505,l0) best SSE_REGS, allocno SSE_REGS
    r504: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a224 (r504,l0) best SSE_REGS, allocno SSE_REGS
    r503: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a229 (r503,l0) best SSE_REGS, allocno SSE_REGS
    r502: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a231 (r502,l0) best SSE_REGS, allocno SSE_REGS
    r501: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a232 (r501,l0) best SSE_REGS, allocno SSE_REGS
    r500: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a235 (r500,l0) best SSE_REGS, allocno SSE_REGS
    r499: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a237 (r499,l0) best SSE_REGS, allocno SSE_REGS
    r498: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a238 (r498,l0) best SSE_REGS, allocno SSE_REGS
    r497: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a239 (r497,l0) best SSE_REGS, allocno SSE_REGS
    r496: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a245 (r496,l0) best SSE_REGS, allocno SSE_REGS
    r495: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a247 (r495,l0) best SSE_REGS, allocno SSE_REGS
    r494: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a248 (r494,l0) best SSE_REGS, allocno SSE_REGS
    r493: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a256 (r493,l0) best SSE_REGS, allocno SSE_REGS
    r492: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a257 (r492,l0) best SSE_REGS, allocno SSE_REGS
    r491: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a259 (r491,l0) best SSE_REGS, allocno SSE_REGS
    r490: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a260 (r490,l0) best SSE_REGS, allocno SSE_REGS
    r489: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a261 (r489,l0) best SSE_REGS, allocno SSE_REGS
    r488: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a264 (r488,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r487: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a268 (r487,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r486: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a269 (r486,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r485: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a272 (r485,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r484: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a273 (r484,l0) best SSE_REGS, allocno SSE_REGS
    r483: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a276 (r483,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r482: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a280 (r482,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r481: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a283 (r481,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r480: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a286 (r480,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r479: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a288 (r479,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r478: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a291 (r478,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r477: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a292 (r477,l0) best SSE_REGS, allocno SSE_REGS
    r476: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a295 (r476,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r475: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a299 (r475,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r474: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a302 (r474,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r473: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a305 (r473,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r472: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a307 (r472,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r471: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a311 (r471,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r470: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a312 (r470,l0) best SSE_REGS, allocno SSE_REGS
    r469: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a315 (r469,l0) best SSE_REGS, allocno SSE_REGS
    r468: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a316 (r468,l0) best SSE_REGS, allocno SSE_REGS
    r467: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a317 (r467,l0) best SSE_REGS, allocno SSE_REGS
    r466: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a318 (r466,l0) best SSE_REGS, allocno SSE_REGS
    r465: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a319 (r465,l0) best SSE_REGS, allocno SSE_REGS
    r464: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a324 (r464,l0) best SSE_REGS, allocno SSE_REGS
    r463: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a326 (r463,l0) best SSE_REGS, allocno SSE_REGS
    r462: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a327 (r462,l0) best SSE_REGS, allocno SSE_REGS
    r461: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a330 (r461,l0) best SSE_REGS, allocno SSE_REGS
    r460: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a332 (r460,l0) best SSE_REGS, allocno SSE_REGS
    r459: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a333 (r459,l0) best SSE_REGS, allocno SSE_REGS
    r458: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a334 (r458,l0) best SSE_REGS, allocno SSE_REGS
    r457: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a340 (r457,l0) best SSE_REGS, allocno SSE_REGS
    r456: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a342 (r456,l0) best SSE_REGS, allocno SSE_REGS
    r455: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a343 (r455,l0) best SSE_REGS, allocno SSE_REGS
    r454: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a351 (r454,l0) best SSE_REGS, allocno SSE_REGS
    r453: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a352 (r453,l0) best SSE_REGS, allocno SSE_REGS
    r452: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a354 (r452,l0) best SSE_REGS, allocno SSE_REGS
    r451: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a355 (r451,l0) best SSE_REGS, allocno SSE_REGS
    r450: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a356 (r450,l0) best SSE_REGS, allocno SSE_REGS
    r449: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a359 (r449,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r448: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a363 (r448,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r447: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a364 (r447,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r446: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a367 (r446,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r445: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a368 (r445,l0) best SSE_REGS, allocno SSE_REGS
    r444: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a371 (r444,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r443: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a375 (r443,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r442: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a378 (r442,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r441: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a381 (r441,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r440: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a383 (r440,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r439: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a386 (r439,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r438: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a387 (r438,l0) best SSE_REGS, allocno SSE_REGS
    r437: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a390 (r437,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r436: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a394 (r436,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r435: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a397 (r435,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r434: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a400 (r434,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r433: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a402 (r433,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r432: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a406 (r432,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r431: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a407 (r431,l0) best SSE_REGS, allocno SSE_REGS
    r430: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a412 (r430,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r429: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a416 (r429,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r428: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a417 (r428,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r427: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a418 (r427,l0) best SSE_REGS, allocno SSE_REGS
    r426: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a421 (r426,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r425: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a425 (r425,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r424: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a426 (r424,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r423: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a429 (r423,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r422: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a430 (r422,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r421: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a431 (r421,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r420: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a434 (r420,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r419: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a437 (r419,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r418: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a438 (r418,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r417: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a439 (r417,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r416: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a440 (r416,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r415: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a442 (r415,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r414: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a443 (r414,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r413: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a444 (r413,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r412: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a446 (r412,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r411: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a447 (r411,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r410: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a448 (r410,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r409: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a452 (r409,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r408: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a454 (r408,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r407: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a456 (r407,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r406: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a460 (r406,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r405: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a462 (r405,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r404: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a464 (r404,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r403: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a468 (r403,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r402: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a470 (r402,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r401: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a472 (r401,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r400: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a476 (r400,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r399: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a478 (r399,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r398: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a480 (r398,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r397: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a484 (r397,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r396: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a486 (r396,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r395: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a488 (r395,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r394: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a0 (r394,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r393: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a1 (r393,l0) best SSE_REGS, allocno SSE_REGS
    r392: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a4 (r392,l0) best SSE_REGS, allocno SSE_REGS
    r391: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a11 (r391,l0) best SSE_REGS, allocno SSE_REGS
    r390: preferred SSE_FIRST_REG, alternative GENERAL_REGS, allocno INT_SSE_REGS
    a32 (r390,l0) best SSE_FIRST_REG, allocno INT_SSE_REGS
    r386: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a451 (r386,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r385: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a453 (r385,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r381: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a459 (r381,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r380: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a461 (r380,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r376: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a467 (r376,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r375: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a469 (r375,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r371: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a475 (r371,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r370: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a477 (r370,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r366: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a483 (r366,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r365: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a485 (r365,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r364: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a2 (r364,l0) best SSE_REGS, allocno SSE_REGS
    r363: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a3 (r363,l0) best SSE_REGS, allocno SSE_REGS
    r362: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a5 (r362,l0) best SSE_REGS, allocno SSE_REGS
    r361: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a6 (r361,l0) best SSE_REGS, allocno SSE_REGS
    r360: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a7 (r360,l0) best SSE_REGS, allocno SSE_REGS
    r359: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a8 (r359,l0) best SSE_REGS, allocno SSE_REGS
    r358: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a13 (r358,l0) best SSE_REGS, allocno SSE_REGS
    r357: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a14 (r357,l0) best SSE_REGS, allocno SSE_REGS
    r356: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a18 (r356,l0) best SSE_REGS, allocno SSE_REGS
    r355: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a19 (r355,l0) best SSE_REGS, allocno SSE_REGS
    r354: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a23 (r354,l0) best SSE_REGS, allocno SSE_REGS
    r353: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a25 (r353,l0) best SSE_REGS, allocno SSE_REGS
    r352: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a26 (r352,l0) best SSE_REGS, allocno SSE_REGS
    r351: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a27 (r351,l0) best SSE_REGS, allocno SSE_REGS
    r350: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a24 (r350,l0) best SSE_REGS, allocno SSE_REGS
    r349: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a34 (r349,l0) best SSE_REGS, allocno SSE_REGS
    r348: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a35 (r348,l0) best SSE_REGS, allocno SSE_REGS
    r347: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a36 (r347,l0) best SSE_REGS, allocno SSE_REGS
    r346: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a43 (r346,l0) best SSE_REGS, allocno SSE_REGS
    r345: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a45 (r345,l0) best SSE_REGS, allocno SSE_REGS
    r344: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a44 (r344,l0) best SSE_REGS, allocno SSE_REGS
    r343: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a50 (r343,l0) best SSE_REGS, allocno SSE_REGS
    r342: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a52 (r342,l0) best SSE_REGS, allocno SSE_REGS
    r341: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a53 (r341,l0) best SSE_REGS, allocno SSE_REGS
    r340: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a54 (r340,l0) best SSE_REGS, allocno SSE_REGS
    r339: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a56 (r339,l0) best SSE_REGS, allocno SSE_REGS
    r338: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a55 (r338,l0) best SSE_REGS, allocno SSE_REGS
    r337: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a61 (r337,l0) best SSE_REGS, allocno SSE_REGS
    r336: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a63 (r336,l0) best SSE_REGS, allocno SSE_REGS
    r335: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a64 (r335,l0) best SSE_REGS, allocno SSE_REGS
    r334: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a65 (r334,l0) best SSE_REGS, allocno SSE_REGS
    r333: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a68 (r333,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r332: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a69 (r332,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r331: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a70 (r331,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r330: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a66 (r330,l0) best SSE_REGS, allocno SSE_REGS
    r329: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a73 (r329,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r328: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a74 (r328,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r327: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a62 (r327,l0) best SSE_REGS, allocno SSE_REGS
    r326: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a76 (r326,l0) best SSE_REGS, allocno SSE_REGS
    r325: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a77 (r325,l0) best SSE_REGS, allocno SSE_REGS
    r324: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a78 (r324,l0) best SSE_REGS, allocno SSE_REGS
    r323: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a81 (r323,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r322: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a82 (r322,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r321: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a79 (r321,l0) best SSE_REGS, allocno SSE_REGS
    r320: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a85 (r320,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r319: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a86 (r319,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r318: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a87 (r318,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r317: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a90 (r317,l0) best SSE_REGS, allocno SSE_REGS
    r316: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a92 (r316,l0) best SSE_REGS, allocno SSE_REGS
    r315: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a93 (r315,l0) best SSE_REGS, allocno SSE_REGS
    r314: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a94 (r314,l0) best SSE_REGS, allocno SSE_REGS
    r313: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a97 (r313,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r312: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a98 (r312,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r311: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a95 (r311,l0) best SSE_REGS, allocno SSE_REGS
    r310: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a100 (r310,l0) best SSE_REGS, allocno SSE_REGS
    r309: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a102 (r309,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r308: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a103 (r308,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r307: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a104 (r307,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r306: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a91 (r306,l0) best SSE_REGS, allocno SSE_REGS
    r305: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a107 (r305,l0) best SSE_REGS, allocno SSE_REGS
    r304: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a108 (r304,l0) best SSE_REGS, allocno SSE_REGS
    r303: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a109 (r303,l0) best SSE_REGS, allocno SSE_REGS
    r302: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a112 (r302,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r301: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a113 (r301,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r300: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a114 (r300,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r299: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a110 (r299,l0) best SSE_REGS, allocno SSE_REGS
    r298: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a117 (r298,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r297: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a118 (r297,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r296: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a121 (r296,l0) best SSE_REGS, allocno SSE_REGS
    r295: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a124 (r295,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r294: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a125 (r294,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r293: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a126 (r293,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r292: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a132 (r292,l0) best SSE_REGS, allocno SSE_REGS
    r291: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a134 (r291,l0) best SSE_REGS, allocno SSE_REGS
    r290: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a133 (r290,l0) best SSE_REGS, allocno SSE_REGS
    r289: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a139 (r289,l0) best SSE_REGS, allocno SSE_REGS
    r288: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a141 (r288,l0) best SSE_REGS, allocno SSE_REGS
    r287: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a142 (r287,l0) best SSE_REGS, allocno SSE_REGS
    r286: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a143 (r286,l0) best SSE_REGS, allocno SSE_REGS
    r285: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a145 (r285,l0) best SSE_REGS, allocno SSE_REGS
    r284: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a144 (r284,l0) best SSE_REGS, allocno SSE_REGS
    r283: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a150 (r283,l0) best SSE_REGS, allocno SSE_REGS
    r282: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a152 (r282,l0) best SSE_REGS, allocno SSE_REGS
    r281: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a153 (r281,l0) best SSE_REGS, allocno SSE_REGS
    r280: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a154 (r280,l0) best SSE_REGS, allocno SSE_REGS
    r279: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a157 (r279,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r278: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a158 (r278,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r277: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a159 (r277,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r276: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a155 (r276,l0) best SSE_REGS, allocno SSE_REGS
    r275: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a162 (r275,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r274: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a163 (r274,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r273: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a151 (r273,l0) best SSE_REGS, allocno SSE_REGS
    r272: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a165 (r272,l0) best SSE_REGS, allocno SSE_REGS
    r271: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a166 (r271,l0) best SSE_REGS, allocno SSE_REGS
    r270: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a167 (r270,l0) best SSE_REGS, allocno SSE_REGS
    r269: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a170 (r269,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r268: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a171 (r268,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r267: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a168 (r267,l0) best SSE_REGS, allocno SSE_REGS
    r266: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a174 (r266,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r265: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a175 (r265,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r264: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a176 (r264,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r263: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a179 (r263,l0) best SSE_REGS, allocno SSE_REGS
    r262: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a181 (r262,l0) best SSE_REGS, allocno SSE_REGS
    r261: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a182 (r261,l0) best SSE_REGS, allocno SSE_REGS
    r260: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a183 (r260,l0) best SSE_REGS, allocno SSE_REGS
    r259: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a186 (r259,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r258: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a187 (r258,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r257: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a184 (r257,l0) best SSE_REGS, allocno SSE_REGS
    r256: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a189 (r256,l0) best SSE_REGS, allocno SSE_REGS
    r255: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a191 (r255,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r254: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a192 (r254,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r253: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a193 (r253,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r252: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a180 (r252,l0) best SSE_REGS, allocno SSE_REGS
    r251: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a196 (r251,l0) best SSE_REGS, allocno SSE_REGS
    r250: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a197 (r250,l0) best SSE_REGS, allocno SSE_REGS
    r249: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a198 (r249,l0) best SSE_REGS, allocno SSE_REGS
    r248: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a201 (r248,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r247: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a202 (r247,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r246: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a203 (r246,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r245: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a199 (r245,l0) best SSE_REGS, allocno SSE_REGS
    r244: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a206 (r244,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r243: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a207 (r243,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r242: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a210 (r242,l0) best SSE_REGS, allocno SSE_REGS
    r241: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a213 (r241,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r240: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a214 (r240,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r239: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a215 (r239,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r238: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a218 (r238,l0) best SSE_REGS, allocno SSE_REGS
    r237: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a219 (r237,l0) best SSE_REGS, allocno SSE_REGS
    r236: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a225 (r236,l0) best SSE_REGS, allocno SSE_REGS
    r235: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a227 (r235,l0) best SSE_REGS, allocno SSE_REGS
    r234: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a228 (r234,l0) best SSE_REGS, allocno SSE_REGS
    r233: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a230 (r233,l0) best SSE_REGS, allocno SSE_REGS
    r232: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a226 (r232,l0) best SSE_REGS, allocno SSE_REGS
    r231: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a233 (r231,l0) best SSE_REGS, allocno SSE_REGS
    r230: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a234 (r230,l0) best SSE_REGS, allocno SSE_REGS
    r229: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a236 (r229,l0) best SSE_REGS, allocno SSE_REGS
    r228: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a240 (r228,l0) best SSE_REGS, allocno SSE_REGS
    r227: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a242 (r227,l0) best SSE_REGS, allocno SSE_REGS
    r226: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a243 (r226,l0) best SSE_REGS, allocno SSE_REGS
    r225: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a244 (r225,l0) best SSE_REGS, allocno SSE_REGS
    r224: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a246 (r224,l0) best SSE_REGS, allocno SSE_REGS
    r223: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a241 (r223,l0) best SSE_REGS, allocno SSE_REGS
    r222: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a249 (r222,l0) best SSE_REGS, allocno SSE_REGS
    r221: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a251 (r221,l0) best SSE_REGS, allocno SSE_REGS
    r220: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a252 (r220,l0) best SSE_REGS, allocno SSE_REGS
    r219: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a253 (r219,l0) best SSE_REGS, allocno SSE_REGS
    r218: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a255 (r218,l0) best SSE_REGS, allocno SSE_REGS
    r217: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a254 (r217,l0) best SSE_REGS, allocno SSE_REGS
    r216: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a258 (r216,l0) best SSE_REGS, allocno SSE_REGS
    r215: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a250 (r215,l0) best SSE_REGS, allocno SSE_REGS
    r214: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a262 (r214,l0) best SSE_REGS, allocno SSE_REGS
    r213: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a265 (r213,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r212: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a266 (r212,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r211: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a267 (r211,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r210: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a263 (r210,l0) best SSE_REGS, allocno SSE_REGS
    r209: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a270 (r209,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r208: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a271 (r208,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r207: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a274 (r207,l0) best SSE_REGS, allocno SSE_REGS
    r206: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a277 (r206,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r205: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a278 (r205,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r204: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a279 (r204,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r203: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a275 (r203,l0) best SSE_REGS, allocno SSE_REGS
    r202: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a281 (r202,l0) best SSE_REGS, allocno SSE_REGS
    r201: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a284 (r201,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r200: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a285 (r200,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r199: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a282 (r199,l0) best SSE_REGS, allocno SSE_REGS
    r198: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a287 (r198,l0) best SSE_REGS, allocno SSE_REGS
    r197: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a289 (r197,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r196: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a290 (r196,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r195: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a293 (r195,l0) best SSE_REGS, allocno SSE_REGS
    r194: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a296 (r194,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r193: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a297 (r193,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r192: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a298 (r192,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r191: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a294 (r191,l0) best SSE_REGS, allocno SSE_REGS
    r190: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a300 (r190,l0) best SSE_REGS, allocno SSE_REGS
    r189: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a303 (r189,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r188: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a304 (r188,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r187: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a301 (r187,l0) best SSE_REGS, allocno SSE_REGS
    r186: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a306 (r186,l0) best SSE_REGS, allocno SSE_REGS
    r185: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a308 (r185,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r184: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a309 (r184,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r183: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a310 (r183,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r182: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a313 (r182,l0) best SSE_REGS, allocno SSE_REGS
    r181: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a314 (r181,l0) best SSE_REGS, allocno SSE_REGS
    r180: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a320 (r180,l0) best SSE_REGS, allocno SSE_REGS
    r179: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a322 (r179,l0) best SSE_REGS, allocno SSE_REGS
    r178: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a323 (r178,l0) best SSE_REGS, allocno SSE_REGS
    r177: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a325 (r177,l0) best SSE_REGS, allocno SSE_REGS
    r176: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a321 (r176,l0) best SSE_REGS, allocno SSE_REGS
    r175: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a328 (r175,l0) best SSE_REGS, allocno SSE_REGS
    r174: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a329 (r174,l0) best SSE_REGS, allocno SSE_REGS
    r173: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a331 (r173,l0) best SSE_REGS, allocno SSE_REGS
    r172: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a335 (r172,l0) best SSE_REGS, allocno SSE_REGS
    r171: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a337 (r171,l0) best SSE_REGS, allocno SSE_REGS
    r170: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a338 (r170,l0) best SSE_REGS, allocno SSE_REGS
    r169: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a339 (r169,l0) best SSE_REGS, allocno SSE_REGS
    r168: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a341 (r168,l0) best SSE_REGS, allocno SSE_REGS
    r167: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a336 (r167,l0) best SSE_REGS, allocno SSE_REGS
    r166: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a344 (r166,l0) best SSE_REGS, allocno SSE_REGS
    r165: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a346 (r165,l0) best SSE_REGS, allocno SSE_REGS
    r164: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a347 (r164,l0) best SSE_REGS, allocno SSE_REGS
    r163: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a348 (r163,l0) best SSE_REGS, allocno SSE_REGS
    r162: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a350 (r162,l0) best SSE_REGS, allocno SSE_REGS
    r161: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a349 (r161,l0) best SSE_REGS, allocno SSE_REGS
    r160: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a353 (r160,l0) best SSE_REGS, allocno SSE_REGS
    r159: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a345 (r159,l0) best SSE_REGS, allocno SSE_REGS
    r158: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a357 (r158,l0) best SSE_REGS, allocno SSE_REGS
    r157: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a360 (r157,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r156: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a361 (r156,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r155: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a362 (r155,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r154: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a358 (r154,l0) best SSE_REGS, allocno SSE_REGS
    r153: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a365 (r153,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r152: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a366 (r152,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r151: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a369 (r151,l0) best SSE_REGS, allocno SSE_REGS
    r150: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a372 (r150,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r149: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a373 (r149,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r148: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a374 (r148,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r147: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a370 (r147,l0) best SSE_REGS, allocno SSE_REGS
    r146: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a376 (r146,l0) best SSE_REGS, allocno SSE_REGS
    r145: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a379 (r145,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r144: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a380 (r144,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r143: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a377 (r143,l0) best SSE_REGS, allocno SSE_REGS
    r142: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a382 (r142,l0) best SSE_REGS, allocno SSE_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a384 (r141,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a385 (r140,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r139: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a388 (r139,l0) best SSE_REGS, allocno SSE_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a391 (r138,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a392 (r137,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a393 (r136,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r135: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a389 (r135,l0) best SSE_REGS, allocno SSE_REGS
    r134: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a395 (r134,l0) best SSE_REGS, allocno SSE_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a398 (r133,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r132: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a399 (r132,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r131: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a396 (r131,l0) best SSE_REGS, allocno SSE_REGS
    r130: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a401 (r130,l0) best SSE_REGS, allocno SSE_REGS
    r129: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a403 (r129,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r128: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a404 (r128,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r127: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a405 (r127,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r126: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a408 (r126,l0) best SSE_REGS, allocno SSE_REGS
    r125: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a409 (r125,l0) best SSE_REGS, allocno SSE_REGS
    r124: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a410 (r124,l0) best SSE_REGS, allocno SSE_REGS
    r123: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a413 (r123,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r122: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a414 (r122,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a415 (r121,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r120: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a411 (r120,l0) best SSE_REGS, allocno SSE_REGS
    r119: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a419 (r119,l0) best SSE_REGS, allocno SSE_REGS
    r118: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a422 (r118,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a423 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a424 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a420 (r115,l0) best SSE_REGS, allocno SSE_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a427 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a428 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r112: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a433 (r112,l0) best SSE_REGS, allocno SSE_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a435 (r111,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a436 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a432 (r109,l0) best SSE_REGS, allocno SSE_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a441 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a445 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a449 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a450 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a455 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a457 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a458 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a463 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a465 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a466 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a471 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a473 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a474 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a479 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a481 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a482 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a487 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r394,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 CLOBBERED_REGS:4 Q_REGS:4 NON_Q_REGS:4 TLS_GOTBASE_REGS:4 GENERAL_REGS:4 FP_TOP_REG:18 FP_SECOND_REG:18 FLOAT_REGS:18 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:16 FP_TOP_SSE_REGS:20 FP_SECOND_SSE_REGS:20 FLOAT_SSE_REGS:20 FLOAT_INT_REGS:18 INT_SSE_REGS:16 FLOAT_INT_SSE_REGS:20 ALL_REGS:20 MEM:2
  a1(r393,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 CLOBBERED_REGS:4 Q_REGS:4 NON_Q_REGS:4 TLS_GOTBASE_REGS:4 GENERAL_REGS:4 FP_TOP_REG:24 FP_SECOND_REG:24 FLOAT_REGS:24 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:22 FP_TOP_SSE_REGS:26 FP_SECOND_SSE_REGS:26 FLOAT_SSE_REGS:26 FLOAT_INT_REGS:24 INT_SSE_REGS:19 FLOAT_INT_SSE_REGS:26 ALL_REGS:26 MEM:7
  a2(r364,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a3(r363,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:16
  a4(r392,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a5(r362,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 ALL_REGS:29 MEM:9
  a6(r361,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:9
  a7(r360,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a8(r359,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:16
  a9(r595,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a10(r594,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a11(r391,l0) costs: AREG:18 DREG:18 CREG:18 BREG:18 SIREG:18 DIREG:18 AD_REGS:18 CLOBBERED_REGS:18 Q_REGS:18 NON_Q_REGS:18 TLS_GOTBASE_REGS:18 GENERAL_REGS:18 FP_TOP_REG:54 FP_SECOND_REG:54 FLOAT_REGS:54 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:48 FP_TOP_SSE_REGS:56 FP_SECOND_SSE_REGS:56 FLOAT_SSE_REGS:56 FLOAT_INT_REGS:54 INT_SSE_REGS:37 FLOAT_INT_SSE_REGS:56 ALL_REGS:56 MEM:20
  a12(r593,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a13(r358,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a14(r357,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:16
  a15(r592,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a16(r591,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a17(r590,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a18(r356,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a19(r355,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:16
  a20(r589,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a21(r588,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a22(r587,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a23(r354,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 ALL_REGS:29 MEM:8
  a24(r350,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a25(r353,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:9
  a26(r352,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a27(r351,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a28(r586,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a29(r585,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a30(r584,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a31(r583,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a32(r390,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 CLOBBERED_REGS:4 Q_REGS:4 NON_Q_REGS:4 TLS_GOTBASE_REGS:4 GENERAL_REGS:4 FP_TOP_REG:24 FP_SECOND_REG:24 FLOAT_REGS:24 SSE_FIRST_REG:19 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:22 FP_TOP_SSE_REGS:26 FP_SECOND_SSE_REGS:26 FLOAT_SSE_REGS:26 FLOAT_INT_REGS:24 INT_SSE_REGS:19 FLOAT_INT_SSE_REGS:26 ALL_REGS:26 MEM:7
  a33(r582,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a34(r349,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a35(r348,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a36(r347,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a37(r581,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a38(r580,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a39(r577,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a40(r579,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a41(r578,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a42(r576,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a43(r346,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a44(r344,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a45(r345,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:16
  a46(r575,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a47(r574,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a48(r573,l0) costs: AREG:18 DREG:18 CREG:18 BREG:18 SIREG:18 DIREG:18 AD_REGS:18 CLOBBERED_REGS:18 Q_REGS:18 NON_Q_REGS:18 TLS_GOTBASE_REGS:18 GENERAL_REGS:18 FP_TOP_REG:54 FP_SECOND_REG:54 FLOAT_REGS:54 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:48 FP_TOP_SSE_REGS:56 FP_SECOND_SSE_REGS:56 FLOAT_SSE_REGS:56 FLOAT_INT_REGS:54 INT_SSE_REGS:37 FLOAT_INT_SSE_REGS:56 ALL_REGS:56 MEM:20
  a49(r571,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a50(r343,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a51(r572,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a52(r342,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 ALL_REGS:29 MEM:9
  a53(r341,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:9
  a54(r340,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a55(r338,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a56(r339,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:16
  a57(r570,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a58(r569,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a59(r568,l0) costs: AREG:18 DREG:18 CREG:18 BREG:18 SIREG:18 DIREG:18 AD_REGS:18 CLOBBERED_REGS:18 Q_REGS:18 NON_Q_REGS:18 TLS_GOTBASE_REGS:18 GENERAL_REGS:18 FP_TOP_REG:54 FP_SECOND_REG:54 FLOAT_REGS:54 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:48 FP_TOP_SSE_REGS:56 FP_SECOND_SSE_REGS:56 FLOAT_SSE_REGS:56 FLOAT_INT_REGS:54 INT_SSE_REGS:37 FLOAT_INT_SSE_REGS:56 ALL_REGS:56 MEM:20
  a60(r567,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a61(r337,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a62(r327,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:16
  a63(r336,l0) costs: AREG:18 DREG:18 CREG:18 BREG:18 SIREG:18 DIREG:18 AD_REGS:18 CLOBBERED_REGS:18 Q_REGS:18 NON_Q_REGS:18 TLS_GOTBASE_REGS:18 GENERAL_REGS:18 FP_TOP_REG:48 FP_SECOND_REG:48 FLOAT_REGS:48 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:42 FP_TOP_SSE_REGS:50 FP_SECOND_SSE_REGS:50 FLOAT_SSE_REGS:50 FLOAT_INT_REGS:48 INT_SSE_REGS:34 FLOAT_INT_SSE_REGS:50 ALL_REGS:50 MEM:15
  a64(r335,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:9
  a65(r334,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a66(r330,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a67(r566,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a68(r333,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a69(r332,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a70(r331,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a71(r565,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a72(r564,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a73(r329,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a74(r328,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a75(r563,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a76(r326,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 ALL_REGS:29 MEM:9
  a77(r325,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:9
  a78(r324,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a79(r321,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a80(r562,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a81(r323,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a82(r322,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a83(r561,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a84(r560,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a85(r320,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a86(r319,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a87(r318,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a88(r559,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a89(r558,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a90(r317,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a91(r306,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:16
  a92(r316,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 ALL_REGS:29 MEM:9
  a93(r315,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:9
  a94(r314,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a95(r311,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a96(r557,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a97(r313,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a98(r312,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a99(r556,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a100(r310,l0) costs: AREG:18 DREG:18 CREG:18 BREG:18 SIREG:18 DIREG:18 AD_REGS:18 CLOBBERED_REGS:18 Q_REGS:18 NON_Q_REGS:18 TLS_GOTBASE_REGS:18 GENERAL_REGS:18 FP_TOP_REG:54 FP_SECOND_REG:54 FLOAT_REGS:54 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:48 FP_TOP_SSE_REGS:56 FP_SECOND_SSE_REGS:56 FLOAT_SSE_REGS:56 FLOAT_INT_REGS:54 INT_SSE_REGS:37 FLOAT_INT_SSE_REGS:56 ALL_REGS:56 MEM:20
  a101(r555,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a102(r309,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a103(r308,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a104(r307,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a105(r554,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a106(r553,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a107(r305,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 ALL_REGS:29 MEM:8
  a108(r304,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:9
  a109(r303,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a110(r299,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a111(r552,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a112(r302,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a113(r301,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a114(r300,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a115(r551,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a116(r550,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a117(r298,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a118(r297,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a119(r549,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a120(r547,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a121(r296,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a122(r548,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a123(r546,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a124(r295,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a125(r294,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a126(r293,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a127(r545,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a128(r542,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a129(r544,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a130(r543,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a131(r541,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a132(r292,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a133(r290,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a134(r291,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:16
  a135(r540,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a136(r539,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a137(r538,l0) costs: AREG:18 DREG:18 CREG:18 BREG:18 SIREG:18 DIREG:18 AD_REGS:18 CLOBBERED_REGS:18 Q_REGS:18 NON_Q_REGS:18 TLS_GOTBASE_REGS:18 GENERAL_REGS:18 FP_TOP_REG:54 FP_SECOND_REG:54 FLOAT_REGS:54 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:48 FP_TOP_SSE_REGS:56 FP_SECOND_SSE_REGS:56 FLOAT_SSE_REGS:56 FLOAT_INT_REGS:54 INT_SSE_REGS:37 FLOAT_INT_SSE_REGS:56 ALL_REGS:56 MEM:20
  a138(r536,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a139(r289,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a140(r537,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a141(r288,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 ALL_REGS:29 MEM:9
  a142(r287,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:9
  a143(r286,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a144(r284,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a145(r285,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:16
  a146(r535,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a147(r534,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a148(r533,l0) costs: AREG:18 DREG:18 CREG:18 BREG:18 SIREG:18 DIREG:18 AD_REGS:18 CLOBBERED_REGS:18 Q_REGS:18 NON_Q_REGS:18 TLS_GOTBASE_REGS:18 GENERAL_REGS:18 FP_TOP_REG:54 FP_SECOND_REG:54 FLOAT_REGS:54 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:48 FP_TOP_SSE_REGS:56 FP_SECOND_SSE_REGS:56 FLOAT_SSE_REGS:56 FLOAT_INT_REGS:54 INT_SSE_REGS:37 FLOAT_INT_SSE_REGS:56 ALL_REGS:56 MEM:20
  a149(r532,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a150(r283,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a151(r273,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:16
  a152(r282,l0) costs: AREG:18 DREG:18 CREG:18 BREG:18 SIREG:18 DIREG:18 AD_REGS:18 CLOBBERED_REGS:18 Q_REGS:18 NON_Q_REGS:18 TLS_GOTBASE_REGS:18 GENERAL_REGS:18 FP_TOP_REG:48 FP_SECOND_REG:48 FLOAT_REGS:48 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:42 FP_TOP_SSE_REGS:50 FP_SECOND_SSE_REGS:50 FLOAT_SSE_REGS:50 FLOAT_INT_REGS:48 INT_SSE_REGS:34 FLOAT_INT_SSE_REGS:50 ALL_REGS:50 MEM:15
  a153(r281,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:9
  a154(r280,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a155(r276,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a156(r531,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a157(r279,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a158(r278,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a159(r277,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a160(r530,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a161(r529,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a162(r275,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a163(r274,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a164(r528,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a165(r272,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 ALL_REGS:29 MEM:9
  a166(r271,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:9
  a167(r270,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a168(r267,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a169(r527,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a170(r269,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a171(r268,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a172(r526,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a173(r525,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a174(r266,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a175(r265,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a176(r264,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a177(r524,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a178(r523,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a179(r263,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a180(r252,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:16
  a181(r262,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 ALL_REGS:29 MEM:9
  a182(r261,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:9
  a183(r260,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a184(r257,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a185(r522,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a186(r259,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a187(r258,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a188(r521,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a189(r256,l0) costs: AREG:18 DREG:18 CREG:18 BREG:18 SIREG:18 DIREG:18 AD_REGS:18 CLOBBERED_REGS:18 Q_REGS:18 NON_Q_REGS:18 TLS_GOTBASE_REGS:18 GENERAL_REGS:18 FP_TOP_REG:54 FP_SECOND_REG:54 FLOAT_REGS:54 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:48 FP_TOP_SSE_REGS:56 FP_SECOND_SSE_REGS:56 FLOAT_SSE_REGS:56 FLOAT_INT_REGS:54 INT_SSE_REGS:37 FLOAT_INT_SSE_REGS:56 ALL_REGS:56 MEM:20
  a190(r520,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a191(r255,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a192(r254,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a193(r253,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a194(r519,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a195(r518,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a196(r251,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 ALL_REGS:29 MEM:8
  a197(r250,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:9
  a198(r249,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a199(r245,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a200(r517,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a201(r248,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a202(r247,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a203(r246,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a204(r516,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a205(r515,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a206(r244,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a207(r243,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a208(r514,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a209(r512,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a210(r242,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a211(r513,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a212(r511,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a213(r241,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a214(r240,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a215(r239,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a216(r510,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a217(r509,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a218(r238,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a219(r237,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a220(r508,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a221(r507,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a222(r506,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a223(r505,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a224(r504,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a225(r236,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a226(r232,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a227(r235,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 ALL_REGS:29 MEM:9
  a228(r234,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:9
  a229(r503,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a230(r233,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:16
  a231(r502,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a232(r501,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a233(r231,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 ALL_REGS:29 MEM:9
  a234(r230,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:9
  a235(r500,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a236(r229,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:16
  a237(r499,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a238(r498,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a239(r497,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a240(r228,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a241(r223,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a242(r227,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:16
  a243(r226,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 ALL_REGS:29 MEM:9
  a244(r225,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:9
  a245(r496,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a246(r224,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:16
  a247(r495,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a248(r494,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a249(r222,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a250(r215,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a251(r221,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 ALL_REGS:29 MEM:9
  a252(r220,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:9
  a253(r219,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a254(r217,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a255(r218,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:16
  a256(r493,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a257(r492,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a258(r216,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a259(r491,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a260(r490,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a261(r489,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a262(r214,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a263(r210,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a264(r488,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a265(r213,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a266(r212,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a267(r211,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a268(r487,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a269(r486,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a270(r209,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a271(r208,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a272(r485,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a273(r484,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a274(r207,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a275(r203,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a276(r483,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a277(r206,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a278(r205,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a279(r204,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a280(r482,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a281(r202,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a282(r199,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:16
  a283(r481,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a284(r201,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a285(r200,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a286(r480,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a287(r198,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a288(r479,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a289(r197,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a290(r196,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a291(r478,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a292(r477,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a293(r195,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a294(r191,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a295(r476,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a296(r194,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a297(r193,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a298(r192,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a299(r475,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a300(r190,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a301(r187,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:16
  a302(r474,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a303(r189,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a304(r188,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a305(r473,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a306(r186,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a307(r472,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a308(r185,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a309(r184,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a310(r183,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a311(r471,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a312(r470,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a313(r182,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a314(r181,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a315(r469,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a316(r468,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a317(r467,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a318(r466,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a319(r465,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a320(r180,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a321(r176,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a322(r179,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 ALL_REGS:29 MEM:9
  a323(r178,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:9
  a324(r464,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a325(r177,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:16
  a326(r463,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a327(r462,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a328(r175,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 ALL_REGS:29 MEM:9
  a329(r174,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:9
  a330(r461,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a331(r173,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:16
  a332(r460,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a333(r459,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a334(r458,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a335(r172,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a336(r167,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a337(r171,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:16
  a338(r170,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 ALL_REGS:29 MEM:9
  a339(r169,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:9
  a340(r457,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a341(r168,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:16
  a342(r456,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a343(r455,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a344(r166,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a345(r159,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a346(r165,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 ALL_REGS:29 MEM:9
  a347(r164,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:9
  a348(r163,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a349(r161,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a350(r162,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:16
  a351(r454,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a352(r453,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a353(r160,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a354(r452,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a355(r451,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a356(r450,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a357(r158,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a358(r154,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a359(r449,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a360(r157,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a361(r156,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a362(r155,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a363(r448,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a364(r447,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a365(r153,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a366(r152,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a367(r446,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a368(r445,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a369(r151,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a370(r147,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a371(r444,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a372(r150,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a373(r149,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a374(r148,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a375(r443,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a376(r146,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a377(r143,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:16
  a378(r442,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a379(r145,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a380(r144,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a381(r441,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a382(r142,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a383(r440,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a384(r141,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a385(r140,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a386(r439,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a387(r438,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a388(r139,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a389(r135,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a390(r437,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a391(r138,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a392(r137,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a393(r136,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a394(r436,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a395(r134,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a396(r131,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:16
  a397(r435,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a398(r133,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a399(r132,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a400(r434,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a401(r130,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a402(r433,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a403(r129,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a404(r128,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a405(r127,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a406(r432,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a407(r431,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a408(r126,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 ALL_REGS:29 MEM:9
  a409(r125,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:9
  a410(r124,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a411(r120,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a412(r430,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a413(r123,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a414(r122,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a415(r121,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a416(r429,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a417(r428,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a418(r427,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a419(r119,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a420(r115,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a421(r426,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a422(r118,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a423(r117,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a424(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a425(r425,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a426(r424,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a427(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a428(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a429(r423,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a430(r422,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a431(r421,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a432(r109,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a433(r112,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a434(r420,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a435(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a436(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a437(r419,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a438(r418,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a439(r417,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a440(r416,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a441(r108,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 CLOBBERED_REGS:2 Q_REGS:2 NON_Q_REGS:2 TLS_GOTBASE_REGS:2 GENERAL_REGS:2 SSE_FIRST_REG:26 NO_REX_SSE_REGS:26 SSE_REGS:26 MMX_REGS:41 INT_SSE_REGS:29 ALL_REGS:626 MEM:11
  a442(r415,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 CLOBBERED_REGS:2 Q_REGS:2 NON_Q_REGS:2 TLS_GOTBASE_REGS:2 GENERAL_REGS:2 SSE_FIRST_REG:18 NO_REX_SSE_REGS:18 SSE_REGS:18 MMX_REGS:28 INT_SSE_REGS:20 ALL_REGS:418 MEM:8
  a443(r414,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a444(r413,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a445(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a446(r412,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a447(r411,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a448(r410,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a449(r105,l0) costs: AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:2
  a450(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a451(r386,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a452(r409,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a453(r385,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:38 INT_SSE_REGS:27 ALL_REGS:520 MEM:11
  a454(r408,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:8
  a455(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a456(r407,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a457(r101,l0) costs: AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:2
  a458(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a459(r381,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a460(r406,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a461(r380,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:38 INT_SSE_REGS:27 ALL_REGS:520 MEM:11
  a462(r405,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:8
  a463(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a464(r404,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a465(r97,l0) costs: AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:2
  a466(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a467(r376,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a468(r403,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a469(r375,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:38 INT_SSE_REGS:27 ALL_REGS:520 MEM:11
  a470(r402,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:8
  a471(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a472(r401,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a473(r93,l0) costs: AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:2
  a474(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a475(r371,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a476(r400,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a477(r370,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:38 INT_SSE_REGS:27 ALL_REGS:520 MEM:11
  a478(r399,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:8
  a479(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a480(r398,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a481(r89,l0) costs: AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:2
  a482(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a483(r366,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a484(r397,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a485(r365,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:38 INT_SSE_REGS:27 ALL_REGS:520 MEM:11
  a486(r396,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:8
  a487(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a488(r395,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8

   Insn 600(l0): point = 0
   Insn 599(l0): point = 2
   Insn 595(l0): point = 4
   Insn 592(l0): point = 6
   Insn 591(l0): point = 8
   Insn 590(l0): point = 10
   Insn 589(l0): point = 12
   Insn 588(l0): point = 14
   Insn 587(l0): point = 16
   Insn 586(l0): point = 18
   Insn 585(l0): point = 20
   Insn 584(l0): point = 22
   Insn 583(l0): point = 24
   Insn 582(l0): point = 26
   Insn 581(l0): point = 28
   Insn 580(l0): point = 30
   Insn 579(l0): point = 32
   Insn 578(l0): point = 34
   Insn 577(l0): point = 36
   Insn 576(l0): point = 38
   Insn 575(l0): point = 40
   Insn 574(l0): point = 42
   Insn 573(l0): point = 44
   Insn 572(l0): point = 46
   Insn 571(l0): point = 48
   Insn 570(l0): point = 50
   Insn 569(l0): point = 52
   Insn 568(l0): point = 54
   Insn 567(l0): point = 56
   Insn 566(l0): point = 58
   Insn 565(l0): point = 60
   Insn 564(l0): point = 62
   Insn 563(l0): point = 64
   Insn 562(l0): point = 66
   Insn 561(l0): point = 68
   Insn 560(l0): point = 70
   Insn 559(l0): point = 72
   Insn 558(l0): point = 74
   Insn 557(l0): point = 76
   Insn 556(l0): point = 78
   Insn 555(l0): point = 80
   Insn 554(l0): point = 82
   Insn 553(l0): point = 84
   Insn 552(l0): point = 86
   Insn 551(l0): point = 88
   Insn 550(l0): point = 90
   Insn 549(l0): point = 92
   Insn 548(l0): point = 94
   Insn 547(l0): point = 96
   Insn 546(l0): point = 98
   Insn 545(l0): point = 100
   Insn 544(l0): point = 102
   Insn 543(l0): point = 104
   Insn 542(l0): point = 106
   Insn 541(l0): point = 108
   Insn 540(l0): point = 110
   Insn 539(l0): point = 112
   Insn 538(l0): point = 114
   Insn 537(l0): point = 116
   Insn 536(l0): point = 118
   Insn 535(l0): point = 120
   Insn 534(l0): point = 122
   Insn 533(l0): point = 124
   Insn 532(l0): point = 126
   Insn 531(l0): point = 128
   Insn 530(l0): point = 130
   Insn 529(l0): point = 132
   Insn 528(l0): point = 134
   Insn 527(l0): point = 136
   Insn 526(l0): point = 138
   Insn 525(l0): point = 140
   Insn 524(l0): point = 142
   Insn 523(l0): point = 144
   Insn 522(l0): point = 146
   Insn 521(l0): point = 148
   Insn 520(l0): point = 150
   Insn 519(l0): point = 152
   Insn 518(l0): point = 154
   Insn 517(l0): point = 156
   Insn 516(l0): point = 158
   Insn 515(l0): point = 160
   Insn 514(l0): point = 162
   Insn 513(l0): point = 164
   Insn 512(l0): point = 166
   Insn 511(l0): point = 168
   Insn 510(l0): point = 170
   Insn 509(l0): point = 172
   Insn 508(l0): point = 174
   Insn 507(l0): point = 176
   Insn 506(l0): point = 178
   Insn 505(l0): point = 180
   Insn 504(l0): point = 182
   Insn 503(l0): point = 184
   Insn 502(l0): point = 186
   Insn 501(l0): point = 188
   Insn 500(l0): point = 190
   Insn 499(l0): point = 192
   Insn 498(l0): point = 194
   Insn 497(l0): point = 196
   Insn 496(l0): point = 198
   Insn 495(l0): point = 200
   Insn 494(l0): point = 202
   Insn 493(l0): point = 204
   Insn 492(l0): point = 206
   Insn 491(l0): point = 208
   Insn 490(l0): point = 210
   Insn 489(l0): point = 212
   Insn 488(l0): point = 214
   Insn 487(l0): point = 216
   Insn 486(l0): point = 218
   Insn 485(l0): point = 220
   Insn 484(l0): point = 222
   Insn 483(l0): point = 224
   Insn 482(l0): point = 226
   Insn 481(l0): point = 228
   Insn 480(l0): point = 230
   Insn 479(l0): point = 232
   Insn 478(l0): point = 234
   Insn 477(l0): point = 236
   Insn 476(l0): point = 238
   Insn 475(l0): point = 240
   Insn 474(l0): point = 242
   Insn 473(l0): point = 244
   Insn 472(l0): point = 246
   Insn 471(l0): point = 248
   Insn 470(l0): point = 250
   Insn 469(l0): point = 252
   Insn 468(l0): point = 254
   Insn 467(l0): point = 256
   Insn 466(l0): point = 258
   Insn 465(l0): point = 260
   Insn 464(l0): point = 262
   Insn 463(l0): point = 264
   Insn 462(l0): point = 266
   Insn 461(l0): point = 268
   Insn 460(l0): point = 270
   Insn 459(l0): point = 272
   Insn 458(l0): point = 274
   Insn 457(l0): point = 276
   Insn 456(l0): point = 278
   Insn 455(l0): point = 280
   Insn 454(l0): point = 282
   Insn 453(l0): point = 284
   Insn 452(l0): point = 286
   Insn 451(l0): point = 288
   Insn 450(l0): point = 290
   Insn 449(l0): point = 292
   Insn 448(l0): point = 294
   Insn 447(l0): point = 296
   Insn 446(l0): point = 298
   Insn 445(l0): point = 300
   Insn 444(l0): point = 302
   Insn 443(l0): point = 304
   Insn 442(l0): point = 306
   Insn 441(l0): point = 308
   Insn 440(l0): point = 310
   Insn 439(l0): point = 312
   Insn 438(l0): point = 314
   Insn 437(l0): point = 316
   Insn 436(l0): point = 318
   Insn 435(l0): point = 320
   Insn 434(l0): point = 322
   Insn 433(l0): point = 324
   Insn 432(l0): point = 326
   Insn 431(l0): point = 328
   Insn 430(l0): point = 330
   Insn 429(l0): point = 332
   Insn 428(l0): point = 334
   Insn 427(l0): point = 336
   Insn 426(l0): point = 338
   Insn 425(l0): point = 340
   Insn 424(l0): point = 342
   Insn 423(l0): point = 344
   Insn 422(l0): point = 346
   Insn 421(l0): point = 348
   Insn 420(l0): point = 350
   Insn 419(l0): point = 352
   Insn 418(l0): point = 354
   Insn 417(l0): point = 356
   Insn 416(l0): point = 358
   Insn 415(l0): point = 360
   Insn 414(l0): point = 362
   Insn 413(l0): point = 364
   Insn 412(l0): point = 366
   Insn 411(l0): point = 368
   Insn 410(l0): point = 370
   Insn 409(l0): point = 372
   Insn 408(l0): point = 374
   Insn 407(l0): point = 376
   Insn 406(l0): point = 378
   Insn 405(l0): point = 380
   Insn 404(l0): point = 382
   Insn 403(l0): point = 384
   Insn 402(l0): point = 386
   Insn 401(l0): point = 388
   Insn 400(l0): point = 390
   Insn 399(l0): point = 392
   Insn 398(l0): point = 394
   Insn 397(l0): point = 396
   Insn 396(l0): point = 398
   Insn 395(l0): point = 400
   Insn 394(l0): point = 402
   Insn 393(l0): point = 404
   Insn 392(l0): point = 406
   Insn 391(l0): point = 408
   Insn 390(l0): point = 410
   Insn 389(l0): point = 412
   Insn 388(l0): point = 414
   Insn 387(l0): point = 416
   Insn 386(l0): point = 418
   Insn 385(l0): point = 420
   Insn 384(l0): point = 422
   Insn 383(l0): point = 424
   Insn 382(l0): point = 426
   Insn 381(l0): point = 428
   Insn 380(l0): point = 430
   Insn 379(l0): point = 432
   Insn 378(l0): point = 434
   Insn 377(l0): point = 436
   Insn 376(l0): point = 438
   Insn 375(l0): point = 440
   Insn 374(l0): point = 442
   Insn 373(l0): point = 444
   Insn 372(l0): point = 446
   Insn 371(l0): point = 448
   Insn 370(l0): point = 450
   Insn 369(l0): point = 452
   Insn 368(l0): point = 454
   Insn 367(l0): point = 456
   Insn 366(l0): point = 458
   Insn 365(l0): point = 460
   Insn 364(l0): point = 462
   Insn 363(l0): point = 464
   Insn 362(l0): point = 466
   Insn 361(l0): point = 468
   Insn 360(l0): point = 470
   Insn 359(l0): point = 472
   Insn 358(l0): point = 474
   Insn 357(l0): point = 476
   Insn 356(l0): point = 478
   Insn 355(l0): point = 480
   Insn 354(l0): point = 482
   Insn 353(l0): point = 484
   Insn 352(l0): point = 486
   Insn 351(l0): point = 488
   Insn 350(l0): point = 490
   Insn 349(l0): point = 492
   Insn 348(l0): point = 494
   Insn 347(l0): point = 496
   Insn 346(l0): point = 498
   Insn 345(l0): point = 500
   Insn 344(l0): point = 502
   Insn 343(l0): point = 504
   Insn 342(l0): point = 506
   Insn 341(l0): point = 508
   Insn 340(l0): point = 510
   Insn 339(l0): point = 512
   Insn 338(l0): point = 514
   Insn 337(l0): point = 516
   Insn 336(l0): point = 518
   Insn 335(l0): point = 520
   Insn 334(l0): point = 522
   Insn 333(l0): point = 524
   Insn 332(l0): point = 526
   Insn 331(l0): point = 528
   Insn 330(l0): point = 530
   Insn 329(l0): point = 532
   Insn 328(l0): point = 534
   Insn 327(l0): point = 536
   Insn 326(l0): point = 538
   Insn 325(l0): point = 540
   Insn 324(l0): point = 542
   Insn 323(l0): point = 544
   Insn 322(l0): point = 546
   Insn 321(l0): point = 548
   Insn 320(l0): point = 550
   Insn 319(l0): point = 552
   Insn 318(l0): point = 554
   Insn 317(l0): point = 556
   Insn 316(l0): point = 558
   Insn 315(l0): point = 560
   Insn 314(l0): point = 562
   Insn 313(l0): point = 564
   Insn 312(l0): point = 566
   Insn 311(l0): point = 568
   Insn 310(l0): point = 570
   Insn 309(l0): point = 572
   Insn 308(l0): point = 574
   Insn 307(l0): point = 576
   Insn 306(l0): point = 578
   Insn 305(l0): point = 580
   Insn 304(l0): point = 582
   Insn 303(l0): point = 584
   Insn 302(l0): point = 586
   Insn 301(l0): point = 588
   Insn 300(l0): point = 590
   Insn 299(l0): point = 592
   Insn 298(l0): point = 594
   Insn 297(l0): point = 596
   Insn 296(l0): point = 598
   Insn 295(l0): point = 600
   Insn 294(l0): point = 602
   Insn 293(l0): point = 604
   Insn 292(l0): point = 606
   Insn 291(l0): point = 608
   Insn 290(l0): point = 610
   Insn 289(l0): point = 612
   Insn 288(l0): point = 614
   Insn 287(l0): point = 616
   Insn 286(l0): point = 618
   Insn 285(l0): point = 620
   Insn 284(l0): point = 622
   Insn 283(l0): point = 624
   Insn 282(l0): point = 626
   Insn 281(l0): point = 628
   Insn 280(l0): point = 630
   Insn 279(l0): point = 632
   Insn 278(l0): point = 634
   Insn 277(l0): point = 636
   Insn 276(l0): point = 638
   Insn 275(l0): point = 640
   Insn 274(l0): point = 642
   Insn 273(l0): point = 644
   Insn 272(l0): point = 646
   Insn 271(l0): point = 648
   Insn 270(l0): point = 650
   Insn 269(l0): point = 652
   Insn 268(l0): point = 654
   Insn 267(l0): point = 656
   Insn 266(l0): point = 658
   Insn 265(l0): point = 660
   Insn 264(l0): point = 662
   Insn 263(l0): point = 664
   Insn 262(l0): point = 666
   Insn 261(l0): point = 668
   Insn 260(l0): point = 670
   Insn 259(l0): point = 672
   Insn 258(l0): point = 674
   Insn 257(l0): point = 676
   Insn 256(l0): point = 678
   Insn 255(l0): point = 680
   Insn 254(l0): point = 682
   Insn 253(l0): point = 684
   Insn 252(l0): point = 686
   Insn 251(l0): point = 688
   Insn 250(l0): point = 690
   Insn 249(l0): point = 692
   Insn 248(l0): point = 694
   Insn 247(l0): point = 696
   Insn 246(l0): point = 698
   Insn 245(l0): point = 700
   Insn 244(l0): point = 702
   Insn 243(l0): point = 704
   Insn 242(l0): point = 706
   Insn 241(l0): point = 708
   Insn 240(l0): point = 710
   Insn 239(l0): point = 712
   Insn 238(l0): point = 714
   Insn 237(l0): point = 716
   Insn 236(l0): point = 718
   Insn 235(l0): point = 720
   Insn 234(l0): point = 722
   Insn 233(l0): point = 724
   Insn 232(l0): point = 726
   Insn 231(l0): point = 728
   Insn 230(l0): point = 730
   Insn 229(l0): point = 732
   Insn 228(l0): point = 734
   Insn 227(l0): point = 736
   Insn 226(l0): point = 738
   Insn 225(l0): point = 740
   Insn 224(l0): point = 742
   Insn 223(l0): point = 744
   Insn 222(l0): point = 746
   Insn 221(l0): point = 748
   Insn 220(l0): point = 750
   Insn 219(l0): point = 752
   Insn 218(l0): point = 754
   Insn 217(l0): point = 756
   Insn 216(l0): point = 758
   Insn 215(l0): point = 760
   Insn 214(l0): point = 762
   Insn 213(l0): point = 764
   Insn 212(l0): point = 766
   Insn 211(l0): point = 768
   Insn 210(l0): point = 770
   Insn 209(l0): point = 772
   Insn 208(l0): point = 774
   Insn 207(l0): point = 776
   Insn 206(l0): point = 778
   Insn 205(l0): point = 780
   Insn 204(l0): point = 782
   Insn 203(l0): point = 784
   Insn 202(l0): point = 786
   Insn 201(l0): point = 788
   Insn 200(l0): point = 790
   Insn 199(l0): point = 792
   Insn 198(l0): point = 794
   Insn 197(l0): point = 796
   Insn 196(l0): point = 798
   Insn 195(l0): point = 800
   Insn 194(l0): point = 802
   Insn 193(l0): point = 804
   Insn 192(l0): point = 806
   Insn 191(l0): point = 808
   Insn 190(l0): point = 810
   Insn 189(l0): point = 812
   Insn 188(l0): point = 814
   Insn 187(l0): point = 816
   Insn 186(l0): point = 818
   Insn 185(l0): point = 820
   Insn 184(l0): point = 822
   Insn 183(l0): point = 824
   Insn 182(l0): point = 826
   Insn 181(l0): point = 828
   Insn 180(l0): point = 830
   Insn 179(l0): point = 832
   Insn 178(l0): point = 834
   Insn 177(l0): point = 836
   Insn 176(l0): point = 838
   Insn 175(l0): point = 840
   Insn 174(l0): point = 842
   Insn 173(l0): point = 844
   Insn 172(l0): point = 846
   Insn 171(l0): point = 848
   Insn 170(l0): point = 850
   Insn 169(l0): point = 852
   Insn 168(l0): point = 854
   Insn 167(l0): point = 856
   Insn 166(l0): point = 858
   Insn 165(l0): point = 860
   Insn 164(l0): point = 862
   Insn 163(l0): point = 864
   Insn 162(l0): point = 866
   Insn 161(l0): point = 868
   Insn 160(l0): point = 870
   Insn 159(l0): point = 872
   Insn 158(l0): point = 874
   Insn 157(l0): point = 876
   Insn 156(l0): point = 878
   Insn 155(l0): point = 880
   Insn 154(l0): point = 882
   Insn 153(l0): point = 884
   Insn 152(l0): point = 886
   Insn 151(l0): point = 888
   Insn 150(l0): point = 890
   Insn 149(l0): point = 892
   Insn 148(l0): point = 894
   Insn 147(l0): point = 896
   Insn 146(l0): point = 898
   Insn 145(l0): point = 900
   Insn 144(l0): point = 902
   Insn 143(l0): point = 904
   Insn 142(l0): point = 906
   Insn 141(l0): point = 908
   Insn 140(l0): point = 910
   Insn 139(l0): point = 912
   Insn 138(l0): point = 914
   Insn 137(l0): point = 916
   Insn 136(l0): point = 918
   Insn 135(l0): point = 920
   Insn 134(l0): point = 922
   Insn 133(l0): point = 924
   Insn 132(l0): point = 926
   Insn 131(l0): point = 928
   Insn 612(l0): point = 931
   Insn 94(l0): point = 934
   Insn 93(l0): point = 936
   Insn 92(l0): point = 938
   Insn 91(l0): point = 940
   Insn 608(l0): point = 943
   Insn 123(l0): point = 946
   Insn 122(l0): point = 948
   Insn 606(l0): point = 951
   Insn 117(l0): point = 953
   Insn 116(l0): point = 955
   Insn 111(l0): point = 958
   Insn 110(l0): point = 960
   Insn 109(l0): point = 962
   Insn 108(l0): point = 964
   Insn 107(l0): point = 966
   Insn 106(l0): point = 968
   Insn 105(l0): point = 970
   Insn 104(l0): point = 972
   Insn 103(l0): point = 974
   Insn 102(l0): point = 976
   Insn 101(l0): point = 978
   Insn 100(l0): point = 980
   Insn 99(l0): point = 982
   Insn 98(l0): point = 984
   Insn 97(l0): point = 986
   Insn 96(l0): point = 988
   Insn 89(l0): point = 991
   Insn 88(l0): point = 993
   Insn 87(l0): point = 995
   Insn 86(l0): point = 997
   Insn 82(l0): point = 999
   Insn 81(l0): point = 1001
   Insn 80(l0): point = 1003
   Insn 78(l0): point = 1005
   Insn 76(l0): point = 1007
   Insn 77(l0): point = 1009
   Insn 75(l0): point = 1011
   Insn 74(l0): point = 1013
   Insn 73(l0): point = 1015
   Insn 72(l0): point = 1017
   Insn 71(l0): point = 1019
   Insn 67(l0): point = 1021
   Insn 66(l0): point = 1023
   Insn 65(l0): point = 1025
   Insn 63(l0): point = 1027
   Insn 61(l0): point = 1029
   Insn 62(l0): point = 1031
   Insn 60(l0): point = 1033
   Insn 59(l0): point = 1035
   Insn 58(l0): point = 1037
   Insn 57(l0): point = 1039
   Insn 56(l0): point = 1041
   Insn 52(l0): point = 1043
   Insn 51(l0): point = 1045
   Insn 50(l0): point = 1047
   Insn 48(l0): point = 1049
   Insn 46(l0): point = 1051
   Insn 47(l0): point = 1053
   Insn 45(l0): point = 1055
   Insn 44(l0): point = 1057
   Insn 43(l0): point = 1059
   Insn 42(l0): point = 1061
   Insn 41(l0): point = 1063
   Insn 37(l0): point = 1065
   Insn 36(l0): point = 1067
   Insn 35(l0): point = 1069
   Insn 33(l0): point = 1071
   Insn 31(l0): point = 1073
   Insn 32(l0): point = 1075
   Insn 30(l0): point = 1077
   Insn 29(l0): point = 1079
   Insn 28(l0): point = 1081
   Insn 27(l0): point = 1083
   Insn 26(l0): point = 1085
   Insn 22(l0): point = 1087
   Insn 21(l0): point = 1089
   Insn 20(l0): point = 1091
   Insn 18(l0): point = 1093
   Insn 16(l0): point = 1095
   Insn 17(l0): point = 1097
   Insn 15(l0): point = 1099
   Insn 14(l0): point = 1101
   Insn 13(l0): point = 1103
   Insn 12(l0): point = 1105
   Insn 11(l0): point = 1107
   Insn 7(l0): point = 1109
   Insn 6(l0): point = 1111
   Insn 5(l0): point = 1113
   Insn 4(l0): point = 1115
   Insn 3(l0): point = 1117
   Insn 2(l0): point = 1119
 a0(r394): [3..4]
 a1(r393): [5..6]
 a2(r364): [9..10]
 a3(r363): [11..12]
 a4(r392): [13..26]
 a5(r362): [13..14]
 a6(r361): [15..16]
 a7(r360): [17..18]
 a8(r359): [17..22]
 a9(r595): [19..20]
 a10(r594): [23..24]
 a11(r391): [27..28]
 a12(r593): [31..32]
 a13(r358): [33..34]
 a14(r357): [33..38]
 a15(r592): [35..36]
 a16(r591): [39..40]
 a17(r590): [43..44]
 a18(r356): [45..46]
 a19(r355): [45..50]
 a20(r589): [47..48]
 a21(r588): [51..52]
 a22(r587): [55..56]
 a23(r354): [57..58]
 a24(r350): [57..70]
 a25(r353): [59..60]
 a26(r352): [61..62]
 a27(r351): [61..66]
 a28(r586): [63..64]
 a29(r585): [67..68]
 a30(r584): [71..72]
 a31(r583): [71..74]
 a32(r390): [81..84]
 a33(r582): [87..88]
 a34(r349): [89..90]
 a35(r348): [91..92]
 a36(r347): [91..96]
 a37(r581): [93..94]
 a38(r580): [97..98]
 a39(r577): [101..102]
 a40(r579): [103..104]
 a41(r578): [103..106]
 a42(r576): [109..110]
 a43(r346): [111..112]
 a44(r344): [111..120]
 a45(r345): [113..114]
 a46(r575): [115..116]
 a47(r574): [115..118]
 a48(r573): [121..122]
 a49(r571): [125..126]
 a50(r343): [127..130]
 a51(r572): [127..128]
 a52(r342): [131..132]
 a53(r341): [133..134]
 a54(r340): [135..136]
 a55(r338): [135..144]
 a56(r339): [137..138]
 a57(r570): [139..140]
 a58(r569): [139..142]
 a59(r568): [145..146]
 a60(r567): [149..150]
 a61(r337): [151..152]
 a62(r327): [151..180]
 a63(r336): [153..154]
 a64(r335): [155..156]
 a65(r334): [157..158]
 a66(r330): [157..170]
 a67(r566): [159..160]
 a68(r333): [159..162]
 a69(r332): [163..164]
 a70(r331): [165..166]
 a71(r565): [167..168]
 a72(r564): [171..172]
 a73(r329): [171..174]
 a74(r328): [175..176]
 a75(r563): [177..178]
 a76(r326): [181..182]
 a77(r325): [183..184]
 a78(r324): [185..186]
 a79(r321): [185..196]
 a80(r562): [187..188]
 a81(r323): [187..190]
 a82(r322): [191..192]
 a83(r561): [193..194]
 a84(r560): [197..198]
 a85(r320): [197..200]
 a86(r319): [201..202]
 a87(r318): [203..204]
 a88(r559): [205..206]
 a89(r558): [209..210]
 a90(r317): [211..212]
 a91(r306): [211..242]
 a92(r316): [213..214]
 a93(r315): [215..216]
 a94(r314): [217..218]
 a95(r311): [217..228]
 a96(r557): [219..220]
 a97(r313): [219..222]
 a98(r312): [223..224]
 a99(r556): [225..226]
 a100(r310): [229..230]
 a101(r555): [231..232]
 a102(r309): [231..234]
 a103(r308): [235..236]
 a104(r307): [237..238]
 a105(r554): [239..240]
 a106(r553): [243..244]
 a107(r305): [243..246]
 a108(r304): [247..248]
 a109(r303): [249..250]
 a110(r299): [249..262]
 a111(r552): [251..252]
 a112(r302): [251..254]
 a113(r301): [255..256]
 a114(r300): [257..258]
 a115(r551): [259..260]
 a116(r550): [263..264]
 a117(r298): [263..266]
 a118(r297): [267..268]
 a119(r549): [269..270]
 a120(r547): [273..274]
 a121(r296): [275..278]
 a122(r548): [275..276]
 a123(r546): [279..280]
 a124(r295): [279..282]
 a125(r294): [283..284]
 a126(r293): [285..286]
 a127(r545): [287..288]
 a128(r542): [291..292]
 a129(r544): [293..294]
 a130(r543): [293..296]
 a131(r541): [299..300]
 a132(r292): [301..302]
 a133(r290): [301..310]
 a134(r291): [303..304]
 a135(r540): [305..306]
 a136(r539): [305..308]
 a137(r538): [311..312]
 a138(r536): [315..316]
 a139(r289): [317..320]
 a140(r537): [317..318]
 a141(r288): [321..322]
 a142(r287): [323..324]
 a143(r286): [325..326]
 a144(r284): [325..334]
 a145(r285): [327..328]
 a146(r535): [329..330]
 a147(r534): [329..332]
 a148(r533): [335..336]
 a149(r532): [339..340]
 a150(r283): [341..342]
 a151(r273): [341..370]
 a152(r282): [343..344]
 a153(r281): [345..346]
 a154(r280): [347..348]
 a155(r276): [347..360]
 a156(r531): [349..350]
 a157(r279): [349..352]
 a158(r278): [353..354]
 a159(r277): [355..356]
 a160(r530): [357..358]
 a161(r529): [361..362]
 a162(r275): [361..364]
 a163(r274): [365..366]
 a164(r528): [367..368]
 a165(r272): [371..372]
 a166(r271): [373..374]
 a167(r270): [375..376]
 a168(r267): [375..386]
 a169(r527): [377..378]
 a170(r269): [377..380]
 a171(r268): [381..382]
 a172(r526): [383..384]
 a173(r525): [387..388]
 a174(r266): [387..390]
 a175(r265): [391..392]
 a176(r264): [393..394]
 a177(r524): [395..396]
 a178(r523): [399..400]
 a179(r263): [401..402]
 a180(r252): [401..432]
 a181(r262): [403..404]
 a182(r261): [405..406]
 a183(r260): [407..408]
 a184(r257): [407..418]
 a185(r522): [409..410]
 a186(r259): [409..412]
 a187(r258): [413..414]
 a188(r521): [415..416]
 a189(r256): [419..420]
 a190(r520): [421..422]
 a191(r255): [421..424]
 a192(r254): [425..426]
 a193(r253): [427..428]
 a194(r519): [429..430]
 a195(r518): [433..434]
 a196(r251): [433..436]
 a197(r250): [437..438]
 a198(r249): [439..440]
 a199(r245): [439..452]
 a200(r517): [441..442]
 a201(r248): [441..444]
 a202(r247): [445..446]
 a203(r246): [447..448]
 a204(r516): [449..450]
 a205(r515): [453..454]
 a206(r244): [453..456]
 a207(r243): [457..458]
 a208(r514): [459..460]
 a209(r512): [463..464]
 a210(r242): [465..468]
 a211(r513): [465..466]
 a212(r511): [469..470]
 a213(r241): [469..472]
 a214(r240): [473..474]
 a215(r239): [475..476]
 a216(r510): [477..478]
 a217(r509): [481..482]
 a218(r238): [483..484]
 a219(r237): [483..490]
 a220(r508): [485..486]
 a221(r507): [485..488]
 a222(r506): [491..492]
 a223(r505): [491..494]
 a224(r504): [497..498]
 a225(r236): [499..500]
 a226(r232): [499..514]
 a227(r235): [501..502]
 a228(r234): [503..504]
 a229(r503): [505..506]
 a230(r233): [505..508]
 a231(r502): [509..510]
 a232(r501): [509..512]
 a233(r231): [515..516]
 a234(r230): [517..518]
 a235(r500): [519..520]
 a236(r229): [519..522]
 a237(r499): [523..524]
 a238(r498): [523..526]
 a239(r497): [529..530]
 a240(r228): [531..532]
 a241(r223): [531..548]
 a242(r227): [533..534]
 a243(r226): [535..536]
 a244(r225): [537..538]
 a245(r496): [539..540]
 a246(r224): [539..542]
 a247(r495): [543..544]
 a248(r494): [543..546]
 a249(r222): [549..550]
 a250(r215): [549..574]
 a251(r221): [551..552]
 a252(r220): [553..554]
 a253(r219): [555..556]
 a254(r217): [555..564]
 a255(r218): [557..558]
 a256(r493): [559..560]
 a257(r492): [559..562]
 a258(r216): [565..568]
 a259(r491): [565..566]
 a260(r490): [569..570]
 a261(r489): [569..572]
 a262(r214): [575..576]
 a263(r210): [575..588]
 a264(r488): [577..578]
 a265(r213): [577..580]
 a266(r212): [581..582]
 a267(r211): [583..584]
 a268(r487): [585..586]
 a269(r486): [589..590]
 a270(r209): [589..592]
 a271(r208): [593..594]
 a272(r485): [595..596]
 a273(r484): [599..600]
 a274(r207): [601..602]
 a275(r203): [601..614]
 a276(r483): [603..604]
 a277(r206): [603..606]
 a278(r205): [607..608]
 a279(r204): [609..610]
 a280(r482): [611..612]
 a281(r202): [615..616]
 a282(r199): [615..626]
 a283(r481): [617..618]
 a284(r201): [617..620]
 a285(r200): [621..622]
 a286(r480): [623..624]
 a287(r198): [627..628]
 a288(r479): [629..630]
 a289(r197): [629..632]
 a290(r196): [633..634]
 a291(r478): [635..636]
 a292(r477): [639..640]
 a293(r195): [641..642]
 a294(r191): [641..654]
 a295(r476): [643..644]
 a296(r194): [643..646]
 a297(r193): [647..648]
 a298(r192): [649..650]
 a299(r475): [651..652]
 a300(r190): [655..656]
 a301(r187): [655..666]
 a302(r474): [657..658]
 a303(r189): [657..660]
 a304(r188): [661..662]
 a305(r473): [663..664]
 a306(r186): [667..668]
 a307(r472): [669..670]
 a308(r185): [669..672]
 a309(r184): [673..674]
 a310(r183): [675..676]
 a311(r471): [677..678]
 a312(r470): [681..682]
 a313(r182): [683..684]
 a314(r181): [683..690]
 a315(r469): [685..686]
 a316(r468): [685..688]
 a317(r467): [691..692]
 a318(r466): [691..694]
 a319(r465): [697..698]
 a320(r180): [699..700]
 a321(r176): [699..714]
 a322(r179): [701..702]
 a323(r178): [703..704]
 a324(r464): [705..706]
 a325(r177): [705..708]
 a326(r463): [709..710]
 a327(r462): [709..712]
 a328(r175): [715..716]
 a329(r174): [717..718]
 a330(r461): [719..720]
 a331(r173): [719..722]
 a332(r460): [723..724]
 a333(r459): [723..726]
 a334(r458): [729..730]
 a335(r172): [731..732]
 a336(r167): [731..748]
 a337(r171): [733..734]
 a338(r170): [735..736]
 a339(r169): [737..738]
 a340(r457): [739..740]
 a341(r168): [739..742]
 a342(r456): [743..744]
 a343(r455): [743..746]
 a344(r166): [749..750]
 a345(r159): [749..774]
 a346(r165): [751..752]
 a347(r164): [753..754]
 a348(r163): [755..756]
 a349(r161): [755..764]
 a350(r162): [757..758]
 a351(r454): [759..760]
 a352(r453): [759..762]
 a353(r160): [765..768]
 a354(r452): [765..766]
 a355(r451): [769..770]
 a356(r450): [769..772]
 a357(r158): [775..776]
 a358(r154): [775..788]
 a359(r449): [777..778]
 a360(r157): [777..780]
 a361(r156): [781..782]
 a362(r155): [783..784]
 a363(r448): [785..786]
 a364(r447): [789..790]
 a365(r153): [789..792]
 a366(r152): [793..794]
 a367(r446): [795..796]
 a368(r445): [799..800]
 a369(r151): [801..802]
 a370(r147): [801..814]
 a371(r444): [803..804]
 a372(r150): [803..806]
 a373(r149): [807..808]
 a374(r148): [809..810]
 a375(r443): [811..812]
 a376(r146): [815..816]
 a377(r143): [815..826]
 a378(r442): [817..818]
 a379(r145): [817..820]
 a380(r144): [821..822]
 a381(r441): [823..824]
 a382(r142): [827..828]
 a383(r440): [829..830]
 a384(r141): [829..832]
 a385(r140): [833..834]
 a386(r439): [835..836]
 a387(r438): [839..840]
 a388(r139): [841..842]
 a389(r135): [841..854]
 a390(r437): [843..844]
 a391(r138): [843..846]
 a392(r137): [847..848]
 a393(r136): [849..850]
 a394(r436): [851..852]
 a395(r134): [855..856]
 a396(r131): [855..866]
 a397(r435): [857..858]
 a398(r133): [857..860]
 a399(r132): [861..862]
 a400(r434): [863..864]
 a401(r130): [867..868]
 a402(r433): [869..870]
 a403(r129): [869..872]
 a404(r128): [873..874]
 a405(r127): [875..876]
 a406(r432): [877..878]
 a407(r431): [881..882]
 a408(r126): [883..884]
 a409(r125): [885..886]
 a410(r124): [887..888]
 a411(r120): [887..900]
 a412(r430): [889..890]
 a413(r123): [889..892]
 a414(r122): [893..894]
 a415(r121): [895..896]
 a416(r429): [897..898]
 a417(r428): [901..902]
 a418(r427): [905..906]
 a419(r119): [907..908]
 a420(r115): [907..920]
 a421(r426): [909..910]
 a422(r118): [909..912]
 a423(r117): [913..914]
 a424(r116): [915..916]
 a425(r425): [917..918]
 a426(r424): [921..922]
 a427(r114): [921..924]
 a428(r113): [925..926]
 a429(r423): [927..928]
 a430(r422): [947..948]
 a431(r421): [954..955]
 a432(r109): [961..972]
 a433(r112): [961..962]
 a434(r420): [963..964]
 a435(r111): [963..966]
 a436(r110): [967..968]
 a437(r419): [969..970]
 a438(r418): [973..974]
 a439(r417): [977..978]
 a440(r416): [979..980]
 a441(r108): [981..984]
 a442(r415): [981..982]
 a443(r414): [985..986]
 a444(r413): [985..988]
 a445(r107): [937..938]
 a446(r412): [939..940]
 a447(r411): [992..993]
 a448(r410): [994..995]
 a449(r105 [0]): [1000..1121]
 a449(r105 [1]): [999..1121]
 a450(r104): [1002..1003]
 a451(r386): [1004..1005]
 a452(r409): [1006..1009]
 a453(r385): [1006..1011]
 a454(r408): [1014..1015]
 a455(r103): [1016..1017]
 a456(r407): [1018..1019]
 a457(r101 [0]): [1022..1121]
 a457(r101 [1]): [1021..1121]
 a458(r100): [1024..1025]
 a459(r381): [1026..1027]
 a460(r406): [1028..1031]
 a461(r380): [1028..1033]
 a462(r405): [1036..1037]
 a463(r99): [1038..1039]
 a464(r404): [1040..1041]
 a465(r97 [0]): [1044..1121]
 a465(r97 [1]): [1043..1121]
 a466(r96): [1046..1047]
 a467(r376): [1048..1049]
 a468(r403): [1050..1053]
 a469(r375): [1050..1055]
 a470(r402): [1058..1059]
 a471(r95): [1060..1061]
 a472(r401): [1062..1063]
 a473(r93 [0]): [1066..1121]
 a473(r93 [1]): [1065..1121]
 a474(r92): [1068..1069]
 a475(r371): [1070..1071]
 a476(r400): [1072..1075]
 a477(r370): [1072..1077]
 a478(r399): [1080..1081]
 a479(r91): [1082..1083]
 a480(r398): [1084..1085]
 a481(r89 [0]): [1088..1121]
 a481(r89 [1]): [1087..1121]
 a482(r88): [1090..1091]
 a483(r366): [1092..1093]
 a484(r397): [1094..1097]
 a485(r365): [1094..1099]
 a486(r396): [1102..1103]
 a487(r87): [1104..1105]
 a488(r395): [1106..1107]
Compressing live ranges: from 1122 to 716 - 63%
Ranges after the compression:
 a0(r394): [0..1]
 a1(r393): [2..3]
 a2(r364): [4..5]
 a3(r363): [6..7]
 a4(r392): [8..17]
 a5(r362): [8..9]
 a6(r361): [10..11]
 a7(r360): [12..13]
 a8(r359): [12..15]
 a9(r595): [14..15]
 a10(r594): [16..17]
 a11(r391): [18..19]
 a12(r593): [20..21]
 a13(r358): [22..23]
 a14(r357): [22..25]
 a15(r592): [24..25]
 a16(r591): [26..27]
 a17(r590): [28..29]
 a18(r356): [30..31]
 a19(r355): [30..33]
 a20(r589): [32..33]
 a21(r588): [34..35]
 a22(r587): [36..37]
 a23(r354): [38..39]
 a24(r350): [38..47]
 a25(r353): [40..41]
 a26(r352): [42..43]
 a27(r351): [42..45]
 a28(r586): [44..45]
 a29(r585): [46..47]
 a30(r584): [48..49]
 a31(r583): [48..49]
 a32(r390): [50..51]
 a33(r582): [52..53]
 a34(r349): [54..55]
 a35(r348): [56..57]
 a36(r347): [56..59]
 a37(r581): [58..59]
 a38(r580): [60..61]
 a39(r577): [62..63]
 a40(r579): [64..65]
 a41(r578): [64..65]
 a42(r576): [66..67]
 a43(r346): [68..69]
 a44(r344): [68..73]
 a45(r345): [70..71]
 a46(r575): [72..73]
 a47(r574): [72..73]
 a48(r573): [74..75]
 a49(r571): [76..77]
 a50(r343): [78..79]
 a51(r572): [78..79]
 a52(r342): [80..81]
 a53(r341): [82..83]
 a54(r340): [84..85]
 a55(r338): [84..89]
 a56(r339): [86..87]
 a57(r570): [88..89]
 a58(r569): [88..89]
 a59(r568): [90..91]
 a60(r567): [92..93]
 a61(r337): [94..95]
 a62(r327): [94..115]
 a63(r336): [96..97]
 a64(r335): [98..99]
 a65(r334): [100..101]
 a66(r330): [100..109]
 a67(r566): [102..103]
 a68(r333): [102..103]
 a69(r332): [104..105]
 a70(r331): [106..107]
 a71(r565): [108..109]
 a72(r564): [110..111]
 a73(r329): [110..111]
 a74(r328): [112..113]
 a75(r563): [114..115]
 a76(r326): [116..117]
 a77(r325): [118..119]
 a78(r324): [120..121]
 a79(r321): [120..127]
 a80(r562): [122..123]
 a81(r323): [122..123]
 a82(r322): [124..125]
 a83(r561): [126..127]
 a84(r560): [128..129]
 a85(r320): [128..129]
 a86(r319): [130..131]
 a87(r318): [132..133]
 a88(r559): [134..135]
 a89(r558): [136..137]
 a90(r317): [138..139]
 a91(r306): [138..161]
 a92(r316): [140..141]
 a93(r315): [142..143]
 a94(r314): [144..145]
 a95(r311): [144..151]
 a96(r557): [146..147]
 a97(r313): [146..147]
 a98(r312): [148..149]
 a99(r556): [150..151]
 a100(r310): [152..153]
 a101(r555): [154..155]
 a102(r309): [154..155]
 a103(r308): [156..157]
 a104(r307): [158..159]
 a105(r554): [160..161]
 a106(r553): [162..163]
 a107(r305): [162..163]
 a108(r304): [164..165]
 a109(r303): [166..167]
 a110(r299): [166..175]
 a111(r552): [168..169]
 a112(r302): [168..169]
 a113(r301): [170..171]
 a114(r300): [172..173]
 a115(r551): [174..175]
 a116(r550): [176..177]
 a117(r298): [176..177]
 a118(r297): [178..179]
 a119(r549): [180..181]
 a120(r547): [182..183]
 a121(r296): [184..185]
 a122(r548): [184..185]
 a123(r546): [186..187]
 a124(r295): [186..187]
 a125(r294): [188..189]
 a126(r293): [190..191]
 a127(r545): [192..193]
 a128(r542): [194..195]
 a129(r544): [196..197]
 a130(r543): [196..197]
 a131(r541): [198..199]
 a132(r292): [200..201]
 a133(r290): [200..205]
 a134(r291): [202..203]
 a135(r540): [204..205]
 a136(r539): [204..205]
 a137(r538): [206..207]
 a138(r536): [208..209]
 a139(r289): [210..211]
 a140(r537): [210..211]
 a141(r288): [212..213]
 a142(r287): [214..215]
 a143(r286): [216..217]
 a144(r284): [216..221]
 a145(r285): [218..219]
 a146(r535): [220..221]
 a147(r534): [220..221]
 a148(r533): [222..223]
 a149(r532): [224..225]
 a150(r283): [226..227]
 a151(r273): [226..247]
 a152(r282): [228..229]
 a153(r281): [230..231]
 a154(r280): [232..233]
 a155(r276): [232..241]
 a156(r531): [234..235]
 a157(r279): [234..235]
 a158(r278): [236..237]
 a159(r277): [238..239]
 a160(r530): [240..241]
 a161(r529): [242..243]
 a162(r275): [242..243]
 a163(r274): [244..245]
 a164(r528): [246..247]
 a165(r272): [248..249]
 a166(r271): [250..251]
 a167(r270): [252..253]
 a168(r267): [252..259]
 a169(r527): [254..255]
 a170(r269): [254..255]
 a171(r268): [256..257]
 a172(r526): [258..259]
 a173(r525): [260..261]
 a174(r266): [260..261]
 a175(r265): [262..263]
 a176(r264): [264..265]
 a177(r524): [266..267]
 a178(r523): [268..269]
 a179(r263): [270..271]
 a180(r252): [270..293]
 a181(r262): [272..273]
 a182(r261): [274..275]
 a183(r260): [276..277]
 a184(r257): [276..283]
 a185(r522): [278..279]
 a186(r259): [278..279]
 a187(r258): [280..281]
 a188(r521): [282..283]
 a189(r256): [284..285]
 a190(r520): [286..287]
 a191(r255): [286..287]
 a192(r254): [288..289]
 a193(r253): [290..291]
 a194(r519): [292..293]
 a195(r518): [294..295]
 a196(r251): [294..295]
 a197(r250): [296..297]
 a198(r249): [298..299]
 a199(r245): [298..307]
 a200(r517): [300..301]
 a201(r248): [300..301]
 a202(r247): [302..303]
 a203(r246): [304..305]
 a204(r516): [306..307]
 a205(r515): [308..309]
 a206(r244): [308..309]
 a207(r243): [310..311]
 a208(r514): [312..313]
 a209(r512): [314..315]
 a210(r242): [316..317]
 a211(r513): [316..317]
 a212(r511): [318..319]
 a213(r241): [318..319]
 a214(r240): [320..321]
 a215(r239): [322..323]
 a216(r510): [324..325]
 a217(r509): [326..327]
 a218(r238): [328..329]
 a219(r237): [328..331]
 a220(r508): [330..331]
 a221(r507): [330..331]
 a222(r506): [332..333]
 a223(r505): [332..333]
 a224(r504): [334..335]
 a225(r236): [336..337]
 a226(r232): [336..345]
 a227(r235): [338..339]
 a228(r234): [340..341]
 a229(r503): [342..343]
 a230(r233): [342..343]
 a231(r502): [344..345]
 a232(r501): [344..345]
 a233(r231): [346..347]
 a234(r230): [348..349]
 a235(r500): [350..351]
 a236(r229): [350..351]
 a237(r499): [352..353]
 a238(r498): [352..353]
 a239(r497): [354..355]
 a240(r228): [356..357]
 a241(r223): [356..367]
 a242(r227): [358..359]
 a243(r226): [360..361]
 a244(r225): [362..363]
 a245(r496): [364..365]
 a246(r224): [364..365]
 a247(r495): [366..367]
 a248(r494): [366..367]
 a249(r222): [368..369]
 a250(r215): [368..383]
 a251(r221): [370..371]
 a252(r220): [372..373]
 a253(r219): [374..375]
 a254(r217): [374..379]
 a255(r218): [376..377]
 a256(r493): [378..379]
 a257(r492): [378..379]
 a258(r216): [380..381]
 a259(r491): [380..381]
 a260(r490): [382..383]
 a261(r489): [382..383]
 a262(r214): [384..385]
 a263(r210): [384..393]
 a264(r488): [386..387]
 a265(r213): [386..387]
 a266(r212): [388..389]
 a267(r211): [390..391]
 a268(r487): [392..393]
 a269(r486): [394..395]
 a270(r209): [394..395]
 a271(r208): [396..397]
 a272(r485): [398..399]
 a273(r484): [400..401]
 a274(r207): [402..403]
 a275(r203): [402..411]
 a276(r483): [404..405]
 a277(r206): [404..405]
 a278(r205): [406..407]
 a279(r204): [408..409]
 a280(r482): [410..411]
 a281(r202): [412..413]
 a282(r199): [412..419]
 a283(r481): [414..415]
 a284(r201): [414..415]
 a285(r200): [416..417]
 a286(r480): [418..419]
 a287(r198): [420..421]
 a288(r479): [422..423]
 a289(r197): [422..423]
 a290(r196): [424..425]
 a291(r478): [426..427]
 a292(r477): [428..429]
 a293(r195): [430..431]
 a294(r191): [430..439]
 a295(r476): [432..433]
 a296(r194): [432..433]
 a297(r193): [434..435]
 a298(r192): [436..437]
 a299(r475): [438..439]
 a300(r190): [440..441]
 a301(r187): [440..447]
 a302(r474): [442..443]
 a303(r189): [442..443]
 a304(r188): [444..445]
 a305(r473): [446..447]
 a306(r186): [448..449]
 a307(r472): [450..451]
 a308(r185): [450..451]
 a309(r184): [452..453]
 a310(r183): [454..455]
 a311(r471): [456..457]
 a312(r470): [458..459]
 a313(r182): [460..461]
 a314(r181): [460..463]
 a315(r469): [462..463]
 a316(r468): [462..463]
 a317(r467): [464..465]
 a318(r466): [464..465]
 a319(r465): [466..467]
 a320(r180): [468..469]
 a321(r176): [468..477]
 a322(r179): [470..471]
 a323(r178): [472..473]
 a324(r464): [474..475]
 a325(r177): [474..475]
 a326(r463): [476..477]
 a327(r462): [476..477]
 a328(r175): [478..479]
 a329(r174): [480..481]
 a330(r461): [482..483]
 a331(r173): [482..483]
 a332(r460): [484..485]
 a333(r459): [484..485]
 a334(r458): [486..487]
 a335(r172): [488..489]
 a336(r167): [488..499]
 a337(r171): [490..491]
 a338(r170): [492..493]
 a339(r169): [494..495]
 a340(r457): [496..497]
 a341(r168): [496..497]
 a342(r456): [498..499]
 a343(r455): [498..499]
 a344(r166): [500..501]
 a345(r159): [500..515]
 a346(r165): [502..503]
 a347(r164): [504..505]
 a348(r163): [506..507]
 a349(r161): [506..511]
 a350(r162): [508..509]
 a351(r454): [510..511]
 a352(r453): [510..511]
 a353(r160): [512..513]
 a354(r452): [512..513]
 a355(r451): [514..515]
 a356(r450): [514..515]
 a357(r158): [516..517]
 a358(r154): [516..525]
 a359(r449): [518..519]
 a360(r157): [518..519]
 a361(r156): [520..521]
 a362(r155): [522..523]
 a363(r448): [524..525]
 a364(r447): [526..527]
 a365(r153): [526..527]
 a366(r152): [528..529]
 a367(r446): [530..531]
 a368(r445): [532..533]
 a369(r151): [534..535]
 a370(r147): [534..543]
 a371(r444): [536..537]
 a372(r150): [536..537]
 a373(r149): [538..539]
 a374(r148): [540..541]
 a375(r443): [542..543]
 a376(r146): [544..545]
 a377(r143): [544..551]
 a378(r442): [546..547]
 a379(r145): [546..547]
 a380(r144): [548..549]
 a381(r441): [550..551]
 a382(r142): [552..553]
 a383(r440): [554..555]
 a384(r141): [554..555]
 a385(r140): [556..557]
 a386(r439): [558..559]
 a387(r438): [560..561]
 a388(r139): [562..563]
 a389(r135): [562..571]
 a390(r437): [564..565]
 a391(r138): [564..565]
 a392(r137): [566..567]
 a393(r136): [568..569]
 a394(r436): [570..571]
 a395(r134): [572..573]
 a396(r131): [572..579]
 a397(r435): [574..575]
 a398(r133): [574..575]
 a399(r132): [576..577]
 a400(r434): [578..579]
 a401(r130): [580..581]
 a402(r433): [582..583]
 a403(r129): [582..583]
 a404(r128): [584..585]
 a405(r127): [586..587]
 a406(r432): [588..589]
 a407(r431): [590..591]
 a408(r126): [592..593]
 a409(r125): [594..595]
 a410(r124): [596..597]
 a411(r120): [596..605]
 a412(r430): [598..599]
 a413(r123): [598..599]
 a414(r122): [600..601]
 a415(r121): [602..603]
 a416(r429): [604..605]
 a417(r428): [606..607]
 a418(r427): [608..609]
 a419(r119): [610..611]
 a420(r115): [610..619]
 a421(r426): [612..613]
 a422(r118): [612..613]
 a423(r117): [614..615]
 a424(r116): [616..617]
 a425(r425): [618..619]
 a426(r424): [620..621]
 a427(r114): [620..621]
 a428(r113): [622..623]
 a429(r423): [624..625]
 a430(r422): [630..631]
 a431(r421): [632..633]
 a432(r109): [634..641]
 a433(r112): [634..635]
 a434(r420): [636..637]
 a435(r111): [636..637]
 a436(r110): [638..639]
 a437(r419): [640..641]
 a438(r418): [642..643]
 a439(r417): [644..645]
 a440(r416): [646..647]
 a441(r108): [648..649]
 a442(r415): [648..649]
 a443(r414): [650..651]
 a444(r413): [650..651]
 a445(r107): [626..627]
 a446(r412): [628..629]
 a447(r411): [652..653]
 a448(r410): [654..655]
 a449(r105 [0]): [656..715]
 a449(r105 [1]): [656..715]
 a450(r104): [656..657]
 a451(r386): [658..659]
 a452(r409): [660..661]
 a453(r385): [660..661]
 a454(r408): [662..663]
 a455(r103): [664..665]
 a456(r407): [666..667]
 a457(r101 [0]): [668..715]
 a457(r101 [1]): [668..715]
 a458(r100): [668..669]
 a459(r381): [670..671]
 a460(r406): [672..673]
 a461(r380): [672..673]
 a462(r405): [674..675]
 a463(r99): [676..677]
 a464(r404): [678..679]
 a465(r97 [0]): [680..715]
 a465(r97 [1]): [680..715]
 a466(r96): [680..681]
 a467(r376): [682..683]
 a468(r403): [684..685]
 a469(r375): [684..685]
 a470(r402): [686..687]
 a471(r95): [688..689]
 a472(r401): [690..691]
 a473(r93 [0]): [692..715]
 a473(r93 [1]): [692..715]
 a474(r92): [692..693]
 a475(r371): [694..695]
 a476(r400): [696..697]
 a477(r370): [696..697]
 a478(r399): [698..699]
 a479(r91): [700..701]
 a480(r398): [702..703]
 a481(r89 [0]): [704..715]
 a481(r89 [1]): [704..715]
 a482(r88): [704..705]
 a483(r366): [706..707]
 a484(r397): [708..709]
 a485(r365): [708..709]
 a486(r396): [710..711]
 a487(r87): [712..713]
 a488(r395): [714..715]
  pref0:a32(r390)<-hr21@1
  regions=1, blocks=10, points=716
    allocnos=489 (big 5), copies=0, conflicts=0, ranges=494
Disposition:
  487:r87  l0     0  482:r88  l0     0  481:r89  l0   mem  479:r91  l0     0
  474:r92  l0     0  473:r93  l0   mem  471:r95  l0     0  466:r96  l0     0
  465:r97  l0    43  463:r99  l0     0  458:r100 l0     0  457:r101 l0    41
  455:r103 l0     0  450:r104 l0     0  449:r105 l0    39  445:r107 l0     0
  441:r108 l0     0  432:r109 l0    22  436:r110 l0     0  435:r111 l0     1
  433:r112 l0    21  428:r113 l0     0  427:r114 l0     1  420:r115 l0    21
  424:r116 l0     0  423:r117 l0     0  422:r118 l0     1  419:r119 l0    22
  411:r120 l0    21  415:r121 l0     0  414:r122 l0     0  413:r123 l0     1
  410:r124 l0    22  409:r125 l0    21  408:r126 l0    21  405:r127 l0     0
  404:r128 l0     0  403:r129 l0     1  401:r130 l0    21  396:r131 l0    21
  399:r132 l0     0  398:r133 l0     1  395:r134 l0    22  389:r135 l0    21
  393:r136 l0     0  392:r137 l0     0  391:r138 l0     1  388:r139 l0    22
  385:r140 l0     0  384:r141 l0     1  382:r142 l0    21  377:r143 l0    21
  380:r144 l0     0  379:r145 l0     1  376:r146 l0    22  370:r147 l0    21
  374:r148 l0     0  373:r149 l0     0  372:r150 l0     1  369:r151 l0    22
  366:r152 l0     0  365:r153 l0     1  358:r154 l0    21  362:r155 l0     0
  361:r156 l0     0  360:r157 l0     1  357:r158 l0    22  345:r159 l0    22
  353:r160 l0    21  349:r161 l0    23  350:r162 l0    21  348:r163 l0    21
  347:r164 l0    21  346:r165 l0    21  344:r166 l0    21  336:r167 l0    22
  341:r168 l0    21  339:r169 l0    21  338:r170 l0    21  337:r171 l0    21
  335:r172 l0    21  331:r173 l0    21  329:r174 l0    21  328:r175 l0    21
  321:r176 l0    22  325:r177 l0    21  323:r178 l0    21  322:r179 l0    21
  320:r180 l0    21  314:r181 l0    22  313:r182 l0    21  310:r183 l0     0
  309:r184 l0     0  308:r185 l0     1  306:r186 l0    21  301:r187 l0    21
  304:r188 l0     0  303:r189 l0     1  300:r190 l0    22  294:r191 l0    21
  298:r192 l0     0  297:r193 l0     0  296:r194 l0     1  293:r195 l0    22
  290:r196 l0     0  289:r197 l0     1  287:r198 l0    21  282:r199 l0    21
  285:r200 l0     0  284:r201 l0     1  281:r202 l0    22  275:r203 l0    21
  279:r204 l0     0  278:r205 l0     0  277:r206 l0     1  274:r207 l0    22
  271:r208 l0     0  270:r209 l0     1  263:r210 l0    21  267:r211 l0     0
  266:r212 l0     0  265:r213 l0     1  262:r214 l0    22  250:r215 l0    22
  258:r216 l0    21  254:r217 l0    23  255:r218 l0    21  253:r219 l0    21
  252:r220 l0    21  251:r221 l0    21  249:r222 l0    21  241:r223 l0    22
  246:r224 l0    21  244:r225 l0    21  243:r226 l0    21  242:r227 l0    21
  240:r228 l0    21  236:r229 l0    21  234:r230 l0    21  233:r231 l0    21
  226:r232 l0    22  230:r233 l0    21  228:r234 l0    21  227:r235 l0    21
  225:r236 l0    21  219:r237 l0    22  218:r238 l0    21  215:r239 l0     0
  214:r240 l0     0  213:r241 l0     1  210:r242 l0    21  207:r243 l0     0
  206:r244 l0     1  199:r245 l0    21  203:r246 l0     0  202:r247 l0     0
  201:r248 l0     1  198:r249 l0    22  197:r250 l0    21  196:r251 l0    22
  180:r252 l0    22  193:r253 l0     0  192:r254 l0     0  191:r255 l0     1
  189:r256 l0    21  184:r257 l0    21  187:r258 l0     0  186:r259 l0     1
  183:r260 l0    23  182:r261 l0    21  181:r262 l0    21  179:r263 l0    21
  176:r264 l0     0  175:r265 l0     0  174:r266 l0     1  168:r267 l0    22
  171:r268 l0     0  170:r269 l0     1  167:r270 l0    21  166:r271 l0    21
  165:r272 l0    21  151:r273 l0    21  163:r274 l0     0  162:r275 l0     1
  155:r276 l0    22  159:r277 l0     0  158:r278 l0     0  157:r279 l0     1
  154:r280 l0    23  153:r281 l0    22  152:r282 l0    22  150:r283 l0    22
  144:r284 l0    22  145:r285 l0    21  143:r286 l0    21  142:r287 l0    21
  141:r288 l0    21  139:r289 l0    21  133:r290 l0    22  134:r291 l0    21
  132:r292 l0    21  126:r293 l0     0  125:r294 l0     0  124:r295 l0     1
  121:r296 l0    21  118:r297 l0     0  117:r298 l0     1  110:r299 l0    21
  114:r300 l0     0  113:r301 l0     0  112:r302 l0     1  109:r303 l0    22
  108:r304 l0    21  107:r305 l0    22   91:r306 l0    22  104:r307 l0     0
  103:r308 l0     0  102:r309 l0     1  100:r310 l0    21   95:r311 l0    21
   98:r312 l0     0   97:r313 l0     1   94:r314 l0    23   93:r315 l0    21
   92:r316 l0    21   90:r317 l0    21   87:r318 l0     0   86:r319 l0     0
   85:r320 l0     1   79:r321 l0    22   82:r322 l0     0   81:r323 l0     1
   78:r324 l0    21   77:r325 l0    21   76:r326 l0    21   62:r327 l0    21
   74:r328 l0     0   73:r329 l0     1   66:r330 l0    22   70:r331 l0     0
   69:r332 l0     0   68:r333 l0     1   65:r334 l0    23   64:r335 l0    22
   63:r336 l0    22   61:r337 l0    22   55:r338 l0    22   56:r339 l0    21
   54:r340 l0    21   53:r341 l0    21   52:r342 l0    21   50:r343 l0    21
   44:r344 l0    22   45:r345 l0    21   43:r346 l0    21   36:r347 l0    22
   35:r348 l0    21   34:r349 l0    21   24:r350 l0    21   27:r351 l0    23
   26:r352 l0    22   25:r353 l0    22   23:r354 l0    22   19:r355 l0    21
   18:r356 l0    22   14:r357 l0    21   13:r358 l0    22    8:r359 l0    21
    7:r360 l0    23    6:r361 l0    21    5:r362 l0    21    3:r363 l0    21
    2:r364 l0    21  485:r365 l0     0  483:r366 l0     0  477:r370 l0     0
  475:r371 l0     0  469:r375 l0     0  467:r376 l0     0  461:r380 l0     0
  459:r381 l0     0  453:r385 l0     0  451:r386 l0     0   32:r390 l0     0
   11:r391 l0    21    4:r392 l0    22    1:r393 l0    21    0:r394 l0    21
  488:r395 l0     0  486:r396 l0     0  484:r397 l0     1  480:r398 l0     0
  478:r399 l0     0  476:r400 l0     1  472:r401 l0     0  470:r402 l0     0
  468:r403 l0     1  464:r404 l0     0  462:r405 l0     0  460:r406 l0     1
  456:r407 l0     0  454:r408 l0     0  452:r409 l0     1  448:r410 l0     0
  447:r411 l0     0  446:r412 l0     0  444:r413 l0     1  443:r414 l0     0
  442:r415 l0     1  440:r416 l0     0  439:r417 l0     0  438:r418 l0     0
  437:r419 l0     0  434:r420 l0     0  431:r421 l0     0  430:r422 l0     0
  429:r423 l0     0  426:r424 l0     0  425:r425 l0     0  421:r426 l0     0
  418:r427 l0    21  417:r428 l0     0  416:r429 l0     0  412:r430 l0     0
  407:r431 l0    21  406:r432 l0     0  402:r433 l0     0  400:r434 l0     0
  397:r435 l0     0  394:r436 l0     0  390:r437 l0     0  387:r438 l0    21
  386:r439 l0     0  383:r440 l0     0  381:r441 l0     0  378:r442 l0     0
  375:r443 l0     0  371:r444 l0     0  368:r445 l0    21  367:r446 l0     0
  364:r447 l0     0  363:r448 l0     0  359:r449 l0     0  356:r450 l0    23
  355:r451 l0    21  354:r452 l0    23  352:r453 l0    24  351:r454 l0    21
  343:r455 l0    23  342:r456 l0    21  340:r457 l0    23  334:r458 l0    21
  333:r459 l0    22  332:r460 l0    21  330:r461 l0    22  327:r462 l0    23
  326:r463 l0    21  324:r464 l0    23  319:r465 l0    21  318:r466 l0    22
  317:r467 l0    21  316:r468 l0    23  315:r469 l0    21  312:r470 l0    21
  311:r471 l0     0  307:r472 l0     0  305:r473 l0     0  302:r474 l0     0
  299:r475 l0     0  295:r476 l0     0  292:r477 l0    21  291:r478 l0     0
  288:r479 l0     0  286:r480 l0     0  283:r481 l0     0  280:r482 l0     0
  276:r483 l0     0  273:r484 l0    21  272:r485 l0     0  269:r486 l0     0
  268:r487 l0     0  264:r488 l0     0  261:r489 l0    23  260:r490 l0    21
  259:r491 l0    23  257:r492 l0    24  256:r493 l0    21  248:r494 l0    23
  247:r495 l0    21  245:r496 l0    23  239:r497 l0    21  238:r498 l0    22
  237:r499 l0    21  235:r500 l0    22  232:r501 l0    23  231:r502 l0    21
  229:r503 l0    23  224:r504 l0    21  223:r505 l0    22  222:r506 l0    21
  221:r507 l0    23  220:r508 l0    21  217:r509 l0    21  216:r510 l0     0
  212:r511 l0     0  209:r512 l0    21  211:r513 l0    22  208:r514 l0     0
  205:r515 l0     0  204:r516 l0     0  200:r517 l0     0  195:r518 l0    21
  194:r519 l0     0  190:r520 l0     0  188:r521 l0     0  185:r522 l0     0
  178:r523 l0    21  177:r524 l0     0  173:r525 l0     0  172:r526 l0     0
  169:r527 l0     0  164:r528 l0     0  161:r529 l0     0  160:r530 l0     0
  156:r531 l0     0  149:r532 l0    21  148:r533 l0    21  147:r534 l0    23
  146:r535 l0    21  138:r536 l0    21  140:r537 l0    22  137:r538 l0    21
  136:r539 l0    23  135:r540 l0    21  131:r541 l0    21  128:r542 l0    21
  130:r543 l0    22  129:r544 l0    21  127:r545 l0     0  123:r546 l0     0
  120:r547 l0    21  122:r548 l0    22  119:r549 l0     0  116:r550 l0     0
  115:r551 l0     0  111:r552 l0     0  106:r553 l0    21  105:r554 l0     0
  101:r555 l0     0   99:r556 l0     0   96:r557 l0     0   89:r558 l0    21
   88:r559 l0     0   84:r560 l0     0   83:r561 l0     0   80:r562 l0     0
   75:r563 l0     0   72:r564 l0     0   71:r565 l0     0   67:r566 l0     0
   60:r567 l0    21   59:r568 l0    21   58:r569 l0    23   57:r570 l0    21
   49:r571 l0    21   51:r572 l0    22   48:r573 l0    21   47:r574 l0    23
   46:r575 l0    21   42:r576 l0    21   39:r577 l0    21   41:r578 l0    22
   40:r579 l0    21   38:r580 l0    21   37:r581 l0    21   33:r582 l0    21
   31:r583 l0    22   30:r584 l0    21   29:r585 l0    22   28:r586 l0    22
   22:r587 l0    21   21:r588 l0    21   20:r589 l0    22   17:r590 l0    21
   16:r591 l0    21   15:r592 l0    22   12:r593 l0    21   10:r594 l0    21
    9:r595 l0    23
+++Costs: overall 12, reg 8, mem 4, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


curvs

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame] 21 [xmm0]
;;  regs ever live 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 21 [xmm0] 37 [r8] 38 [r9]
;;  ref usage 	r0={2d} r1={2d,1u} r2={2d,1u} r4={2d,1u} r5={3d,2u} r6={1d,9u} r7={1d,10u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,14u} r17={71d,7u} r18={1d} r19={1d} r20={1d,224u,24e} r21={4d,4u} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d,1u} r38={2d,1u} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={1d,1u} r88={1d,1u} r89={2d,2u} r91={1d,1u} r92={1d,1u} r93={2d,2u} r95={1d,1u} r96={1d,1u} r97={2d,2u} r99={1d,1u} r100={1d,1u} r101={2d,2u} r103={1d,1u} r104={1d,1u} r105={2d,2u} r107={1d,1u} r108={1d,2u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,1u} r127={1d,1u} r128={1d,1u} r129={1d,1u} r130={1d,1u} r131={1d,1u} r132={1d,1u} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d,1u} r165={1d,1u} r166={1d,1u} r167={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,1u} r171={1d,1u} r172={1d,1u} r173={1d,1u} r174={1d,1u} r175={1d,1u} r176={1d,1u} r177={1d,1u} r178={1d,1u} r179={1d,1u} r180={1d,1u} r181={1d,1u} r182={1d,1u} r183={1d,1u} r184={1d,1u} r185={1d,1u} r186={1d,1u} r187={1d,1u} r188={1d,1u} r189={1d,1u} r190={1d,1u} r191={1d,1u} r192={1d,1u} r193={1d,1u} r194={1d,1u} r195={1d,1u} r196={1d,1u} r197={1d,1u} r198={1d,1u} r199={1d,1u} r200={1d,1u} r201={1d,1u} r202={1d,1u} r203={1d,1u} r204={1d,1u} r205={1d,1u} r206={1d,1u} r207={1d,1u} r208={1d,1u} r209={1d,1u} r210={1d,1u} r211={1d,1u} r212={1d,1u} r213={1d,1u} r214={1d,1u} r215={1d,1u} r216={1d,1u} r217={1d,1u} r218={1d,1u} r219={1d,1u} r220={1d,1u} r221={1d,1u} r222={1d,1u} r223={1d,1u} r224={1d,1u} r225={1d,1u} r226={1d,1u} r227={1d,1u} r228={1d,1u} r229={1d,1u} r230={1d,1u} r231={1d,1u} r232={1d,1u} r233={1d,1u} r234={1d,1u} r235={1d,1u} r236={1d,1u} r237={1d,1u} r238={1d,1u} r239={1d,1u} r240={1d,1u} r241={1d,1u} r242={1d,1u} r243={1d,1u} r244={1d,1u} r245={1d,1u} r246={1d,1u} r247={1d,1u} r248={1d,1u} r249={1d,1u} r250={1d,1u} r251={1d,1u} r252={1d,1u} r253={1d,1u} r254={1d,1u} r255={1d,1u} r256={1d,2u} r257={1d,1u} r258={1d,1u} r259={1d,1u} r260={1d,1u} r261={1d,1u} r262={1d,1u} r263={1d,1u} r264={1d,1u} r265={1d,1u} r266={1d,1u} r267={1d,1u} r268={1d,1u} r269={1d,1u} r270={1d,1u} r271={1d,1u} r272={1d,1u} r273={1d,1u} r274={1d,1u} r275={1d,1u} r276={1d,1u} r277={1d,1u} r278={1d,1u} r279={1d,1u} r280={1d,1u} r281={1d,1u} r282={1d,2u} r283={1d,1u} r284={1d,1u} r285={1d,1u} r286={1d,1u} r287={1d,1u} r288={1d,1u} r289={1d,1u} r290={1d,1u} r291={1d,1u} r292={1d,1u} r293={1d,1u} r294={1d,1u} r295={1d,1u} r296={1d,1u} r297={1d,1u} r298={1d,1u} r299={1d,1u} r300={1d,1u} r301={1d,1u} r302={1d,1u} r303={1d,1u} r304={1d,1u} r305={1d,1u} r306={1d,1u} r307={1d,1u} r308={1d,1u} r309={1d,1u} r310={1d,2u} r311={1d,1u} r312={1d,1u} r313={1d,1u} r314={1d,1u} r315={1d,1u} r316={1d,1u} r317={1d,1u} r318={1d,1u} r319={1d,1u} r320={1d,1u} r321={1d,1u} r322={1d,1u} r323={1d,1u} r324={1d,1u} r325={1d,1u} r326={1d,1u} r327={1d,1u} r328={1d,1u} r329={1d,1u} r330={1d,1u} r331={1d,1u} r332={1d,1u} r333={1d,1u} r334={1d,1u} r335={1d,1u} r336={1d,2u} r337={1d,1u} r338={1d,1u} r339={1d,1u} r340={1d,1u} r341={1d,1u} r342={1d,1u} r343={1d,1u} r344={1d,1u} r345={1d,1u} r346={1d,1u} r347={1d,1u} r348={1d,1u} r349={1d,1u} r350={1d,1u} r351={1d,1u} r352={1d,1u} r353={1d,1u} r354={1d,1u} r355={1d,1u} r356={1d,1u} r357={1d,1u} r358={1d,1u} r359={1d,1u} r360={1d,1u} r361={1d,1u} r362={1d,1u} r363={1d,1u} r364={1d,1u} r365={1d,2u} r366={1d,1u} r370={1d,2u} r371={1d,1u} r375={1d,2u} r376={1d,1u} r380={1d,2u} r381={1d,1u} r385={1d,2u} r386={1d,1u} r390={1d,1u} r391={1d,2u} r392={1d,1u} r393={1d,1u} r394={1d,1u} r395={1d,1u} r396={1d,1u} r397={1d,1u} r398={1d,1u} r399={1d,1u} r400={1d,1u} r401={1d,1u} r402={1d,1u} r403={1d,1u} r404={1d,1u} r405={1d,1u} r406={1d,1u} r407={1d,1u} r408={1d,1u} r409={1d,1u} r410={1d,1u} r411={1d,1u} r412={1d,1u} r413={1d,1u} r414={1d,1u} r415={1d,1u} r416={1d,1u} r417={1d,1u} r418={1d,1u} r419={1d,1u} r420={1d,1u} r421={1d,1u} r422={1d,1u} r423={1d,1u} r424={1d,1u} r425={1d,1u} r426={1d,1u} r427={1d,1u} r428={1d,1u} r429={1d,1u} r430={1d,1u} r431={1d,1u} r432={1d,1u} r433={1d,1u} r434={1d,1u} r435={1d,1u} r436={1d,1u} r437={1d,1u} r438={1d,1u} r439={1d,1u} r440={1d,1u} r441={1d,1u} r442={1d,1u} r443={1d,1u} r444={1d,1u} r445={1d,1u} r446={1d,1u} r447={1d,1u} r448={1d,1u} r449={1d,1u} r450={1d,1u} r451={1d,1u} r452={1d,1u} r453={1d,1u} r454={1d,1u} r455={1d,1u} r456={1d,1u} r457={1d,1u} r458={1d,1u} r459={1d,1u} r460={1d,1u} r461={1d,1u} r462={1d,1u} r463={1d,1u} r464={1d,1u} r465={1d,1u} r466={1d,1u} r467={1d,1u} r468={1d,1u} r469={1d,1u} r470={1d,1u} r471={1d,1u} r472={1d,1u} r473={1d,1u} r474={1d,1u} r475={1d,1u} r476={1d,1u} r477={1d,1u} r478={1d,1u} r479={1d,1u} r480={1d,1u} r481={1d,1u} r482={1d,1u} r483={1d,1u} r484={1d,1u} r485={1d,1u} r486={1d,1u} r487={1d,1u} r488={1d,1u} r489={1d,1u} r490={1d,1u} r491={1d,1u} r492={1d,1u} r493={1d,1u} r494={1d,1u} r495={1d,1u} r496={1d,1u} r497={1d,1u} r498={1d,1u} r499={1d,1u} r500={1d,1u} r501={1d,1u} r502={1d,1u} r503={1d,1u} r504={1d,1u} r505={1d,1u} r506={1d,1u} r507={1d,1u} r508={1d,1u} r509={1d,1u} r510={1d,1u} r511={1d,1u} r512={1d,1u} r513={1d,1u} r514={1d,1u} r515={1d,1u} r516={1d,1u} r517={1d,1u} r518={1d,1u} r519={1d,1u} r520={1d,1u} r521={1d,1u} r522={1d,1u} r523={1d,1u} r524={1d,1u} r525={1d,1u} r526={1d,1u} r527={1d,1u} r528={1d,1u} r529={1d,1u} r530={1d,1u} r531={1d,1u} r532={1d,1u} r533={1d,2u} r534={1d,1u} r535={1d,1u} r536={1d,1u} r537={1d,1u} r538={1d,2u} r539={1d,1u} r540={1d,1u} r541={1d,1u} r542={1d,1u} r543={1d,1u} r544={1d,1u} r545={1d,1u} r546={1d,1u} r547={1d,1u} r548={1d,1u} r549={1d,1u} r550={1d,1u} r551={1d,1u} r552={1d,1u} r553={1d,1u} r554={1d,1u} r555={1d,1u} r556={1d,1u} r557={1d,1u} r558={1d,1u} r559={1d,1u} r560={1d,1u} r561={1d,1u} r562={1d,1u} r563={1d,1u} r564={1d,1u} r565={1d,1u} r566={1d,1u} r567={1d,1u} r568={1d,2u} r569={1d,1u} r570={1d,1u} r571={1d,1u} r572={1d,1u} r573={1d,2u} r574={1d,1u} r575={1d,1u} r576={1d,1u} r577={1d,1u} r578={1d,1u} r579={1d,1u} r580={1d,1u} r581={1d,1u} r582={1d,1u} r583={1d,1u} r584={1d,1u} r585={1d,1u} r586={1d,1u} r587={1d,1u} r588={1d,1u} r589={1d,1u} r590={1d,1u} r591={1d,1u} r592={1d,1u} r593={1d,1u} r594={1d,1u} r595={1d,1u} 
;;    total ref usage 1466{658d,784u,24e} in 557{556 regular + 1 call} insns.
(note 1 0 9 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9] 89 93 97 101 105
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9] 89 93 97 101 105
;; lr  def 	 17 [flags] 87 88 91 92 95 96 99 100 103 104 365 366 370 371 375 376 380 381 385 386 395 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411
(note 9 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 9 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -168 [0xffffffffffffff58])) [4 ss+0 S8 A64])
        (reg:DI 5 di [ ss ])) "../src/spline.f":519 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ ss ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -176 [0xffffffffffffff50])) [5 x+0 S8 A64])
        (reg:DI 4 si [ x ])) "../src/spline.f":519 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ x ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -184 [0xffffffffffffff48])) [5 xs+0 S8 A64])
        (reg:DI 1 dx [ xs ])) "../src/spline.f":519 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ xs ])
        (nil)))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -192 [0xffffffffffffff40])) [5 y+0 S8 A64])
        (reg:DI 2 cx [ y ])) "../src/spline.f":519 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [ y ])
        (nil)))
(insn 6 5 7 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -200 [0xffffffffffffff38])) [5 ys+0 S8 A64])
        (reg:DI 37 r8 [ ys ])) "../src/spline.f":519 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 37 r8 [ ys ])
        (nil)))
(insn 7 6 8 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -208 [0xffffffffffffff30])) [5 s+0 S8 A64])
        (reg:DI 38 r9 [ s ])) "../src/spline.f":519 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 38 r9 [ s ])
        (nil)))
(note 8 7 11 2 NOTE_INSN_FUNCTION_BEG)
(insn 11 8 12 2 (set (reg/f:DI 395)
        (mem/f/c:DI (reg/f:DI 16 argp) [6 n+0 S8 A64])) "../src/spline.f":519 81 {*movdi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:SI 87 [ _1 ])
        (mem:SI (reg/f:DI 395) [1 *n_284(D)+0 S4 A32])) "../src/spline.f":519 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 395)
        (nil)))
(insn 13 12 14 2 (set (reg:DI 396)
        (sign_extend:DI (reg:SI 87 [ _1 ]))) "../src/spline.f":519 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 87 [ _1 ])
        (nil)))
(insn 14 13 15 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 ubound.70+0 S8 A64])
        (reg:DI 396)) "../src/spline.f":519 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 396)
        (nil)))
(insn 15 14 17 2 (set (reg:DI 365 [ size.71_286 ])
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 ubound.70+0 S8 A64])) "../src/spline.f":519 81 {*movdi_internal}
     (nil))
(insn 17 15 16 2 (set (reg:DI 397)
        (const_int 0 [0])) "../src/spline.f":519 81 {*movdi_internal}
     (nil))
(insn 16 17 18 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 365 [ size.71_286 ])
            (const_int 0 [0]))) "../src/spline.f":519 4 {*cmpdi_ccno_1}
     (nil))
(insn 18 16 20 2 (set (reg:DI 366 [ size.71_287 ])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 365 [ size.71_286 ])
            (reg:DI 397))) "../src/spline.f":519 967 {*movdicc_noc}
     (expr_list:REG_DEAD (reg:DI 397)
        (expr_list:REG_DEAD (reg:DI 365 [ size.71_286 ])
            (expr_list:REG_DEAD (reg:CCGOC 17 flags)
                (nil)))))
(insn 20 18 21 2 (set (reg:DI 88 [ size.222_2 ])
        (reg:DI 366 [ size.71_287 ])) "../src/spline.f":519 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 366 [ size.71_287 ])
        (nil)))
(insn 21 20 22 2 (set (subreg:DI (reg:TI 89 [ _3 ]) 0)
        (reg:DI 88 [ size.222_2 ])) "../src/spline.f":519 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88 [ size.222_2 ])
        (nil)))
(insn 22 21 26 2 (set (subreg:DI (reg:TI 89 [ _3 ]) 8)
        (const_int 0 [0])) "../src/spline.f":519 81 {*movdi_internal}
     (expr_list:REG_UNUSED (reg:TI 89 [ _3 ])
        (nil)))
(insn 26 22 27 2 (set (reg/f:DI 398)
        (mem/f/c:DI (reg/f:DI 16 argp) [6 n+0 S8 A64])) "../src/spline.f":519 81 {*movdi_internal}
     (nil))
(insn 27 26 28 2 (set (reg:SI 91 [ _5 ])
        (mem:SI (reg/f:DI 398) [1 *n_284(D)+0 S4 A32])) "../src/spline.f":519 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 398)
        (nil)))
(insn 28 27 29 2 (set (reg:DI 399)
        (sign_extend:DI (reg:SI 91 [ _5 ]))) "../src/spline.f":519 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 91 [ _5 ])
        (nil)))
(insn 29 28 30 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [2 ubound.74+0 S8 A64])
        (reg:DI 399)) "../src/spline.f":519 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 399)
        (nil)))
(insn 30 29 32 2 (set (reg:DI 370 [ size.75_292 ])
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [2 ubound.74+0 S8 A64])) "../src/spline.f":519 81 {*movdi_internal}
     (nil))
(insn 32 30 31 2 (set (reg:DI 400)
        (const_int 0 [0])) "../src/spline.f":519 81 {*movdi_internal}
     (nil))
(insn 31 32 33 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 370 [ size.75_292 ])
            (const_int 0 [0]))) "../src/spline.f":519 4 {*cmpdi_ccno_1}
     (nil))
(insn 33 31 35 2 (set (reg:DI 371 [ size.75_293 ])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 370 [ size.75_292 ])
            (reg:DI 400))) "../src/spline.f":519 967 {*movdicc_noc}
     (expr_list:REG_DEAD (reg:DI 400)
        (expr_list:REG_DEAD (reg:DI 370 [ size.75_292 ])
            (expr_list:REG_DEAD (reg:CCGOC 17 flags)
                (nil)))))
(insn 35 33 36 2 (set (reg:DI 92 [ size.224_6 ])
        (reg:DI 371 [ size.75_293 ])) "../src/spline.f":519 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 371 [ size.75_293 ])
        (nil)))
(insn 36 35 37 2 (set (subreg:DI (reg:TI 93 [ _7 ]) 0)
        (reg:DI 92 [ size.224_6 ])) "../src/spline.f":519 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 92 [ size.224_6 ])
        (nil)))
(insn 37 36 41 2 (set (subreg:DI (reg:TI 93 [ _7 ]) 8)
        (const_int 0 [0])) "../src/spline.f":519 81 {*movdi_internal}
     (expr_list:REG_UNUSED (reg:TI 93 [ _7 ])
        (nil)))
(insn 41 37 42 2 (set (reg/f:DI 401)
        (mem/f/c:DI (reg/f:DI 16 argp) [6 n+0 S8 A64])) "../src/spline.f":519 81 {*movdi_internal}
     (nil))
(insn 42 41 43 2 (set (reg:SI 95 [ _9 ])
        (mem:SI (reg/f:DI 401) [1 *n_284(D)+0 S4 A32])) "../src/spline.f":519 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 401)
        (nil)))
(insn 43 42 44 2 (set (reg:DI 402)
        (sign_extend:DI (reg:SI 95 [ _9 ]))) "../src/spline.f":519 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 95 [ _9 ])
        (nil)))
(insn 44 43 45 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [2 ubound.72+0 S8 A64])
        (reg:DI 402)) "../src/spline.f":519 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 402)
        (nil)))
(insn 45 44 47 2 (set (reg:DI 375 [ size.73_298 ])
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [2 ubound.72+0 S8 A64])) "../src/spline.f":519 81 {*movdi_internal}
     (nil))
(insn 47 45 46 2 (set (reg:DI 403)
        (const_int 0 [0])) "../src/spline.f":519 81 {*movdi_internal}
     (nil))
(insn 46 47 48 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 375 [ size.73_298 ])
            (const_int 0 [0]))) "../src/spline.f":519 4 {*cmpdi_ccno_1}
     (nil))
(insn 48 46 50 2 (set (reg:DI 376 [ size.73_299 ])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 375 [ size.73_298 ])
            (reg:DI 403))) "../src/spline.f":519 967 {*movdicc_noc}
     (expr_list:REG_DEAD (reg:DI 403)
        (expr_list:REG_DEAD (reg:DI 375 [ size.73_298 ])
            (expr_list:REG_DEAD (reg:CCGOC 17 flags)
                (nil)))))
(insn 50 48 51 2 (set (reg:DI 96 [ size.226_10 ])
        (reg:DI 376 [ size.73_299 ])) "../src/spline.f":519 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 376 [ size.73_299 ])
        (nil)))
(insn 51 50 52 2 (set (subreg:DI (reg:TI 97 [ _11 ]) 0)
        (reg:DI 96 [ size.226_10 ])) "../src/spline.f":519 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 96 [ size.226_10 ])
        (nil)))
(insn 52 51 56 2 (set (subreg:DI (reg:TI 97 [ _11 ]) 8)
        (const_int 0 [0])) "../src/spline.f":519 81 {*movdi_internal}
     (expr_list:REG_UNUSED (reg:TI 97 [ _11 ])
        (nil)))
(insn 56 52 57 2 (set (reg/f:DI 404)
        (mem/f/c:DI (reg/f:DI 16 argp) [6 n+0 S8 A64])) "../src/spline.f":519 81 {*movdi_internal}
     (nil))
(insn 57 56 58 2 (set (reg:SI 99 [ _13 ])
        (mem:SI (reg/f:DI 404) [1 *n_284(D)+0 S4 A32])) "../src/spline.f":519 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 404)
        (nil)))
(insn 58 57 59 2 (set (reg:DI 405)
        (sign_extend:DI (reg:SI 99 [ _13 ]))) "../src/spline.f":519 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 99 [ _13 ])
        (nil)))
(insn 59 58 60 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [2 ubound.78+0 S8 A64])
        (reg:DI 405)) "../src/spline.f":519 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 405)
        (nil)))
(insn 60 59 62 2 (set (reg:DI 380 [ size.79_304 ])
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [2 ubound.78+0 S8 A64])) "../src/spline.f":519 81 {*movdi_internal}
     (nil))
(insn 62 60 61 2 (set (reg:DI 406)
        (const_int 0 [0])) "../src/spline.f":519 81 {*movdi_internal}
     (nil))
(insn 61 62 63 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 380 [ size.79_304 ])
            (const_int 0 [0]))) "../src/spline.f":519 4 {*cmpdi_ccno_1}
     (nil))
(insn 63 61 65 2 (set (reg:DI 381 [ size.79_305 ])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 380 [ size.79_304 ])
            (reg:DI 406))) "../src/spline.f":519 967 {*movdicc_noc}
     (expr_list:REG_DEAD (reg:DI 406)
        (expr_list:REG_DEAD (reg:DI 380 [ size.79_304 ])
            (expr_list:REG_DEAD (reg:CCGOC 17 flags)
                (nil)))))
(insn 65 63 66 2 (set (reg:DI 100 [ size.228_14 ])
        (reg:DI 381 [ size.79_305 ])) "../src/spline.f":519 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 381 [ size.79_305 ])
        (nil)))
(insn 66 65 67 2 (set (subreg:DI (reg:TI 101 [ _15 ]) 0)
        (reg:DI 100 [ size.228_14 ])) "../src/spline.f":519 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 100 [ size.228_14 ])
        (nil)))
(insn 67 66 71 2 (set (subreg:DI (reg:TI 101 [ _15 ]) 8)
        (const_int 0 [0])) "../src/spline.f":519 81 {*movdi_internal}
     (expr_list:REG_UNUSED (reg:TI 101 [ _15 ])
        (nil)))
(insn 71 67 72 2 (set (reg/f:DI 407)
        (mem/f/c:DI (reg/f:DI 16 argp) [6 n+0 S8 A64])) "../src/spline.f":519 81 {*movdi_internal}
     (nil))
(insn 72 71 73 2 (set (reg:SI 103 [ _17 ])
        (mem:SI (reg/f:DI 407) [1 *n_284(D)+0 S4 A32])) "../src/spline.f":519 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 407)
        (nil)))
(insn 73 72 74 2 (set (reg:DI 408)
        (sign_extend:DI (reg:SI 103 [ _17 ]))) "../src/spline.f":519 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 103 [ _17 ])
        (nil)))
(insn 74 73 75 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [2 ubound.76+0 S8 A64])
        (reg:DI 408)) "../src/spline.f":519 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 408)
        (nil)))
(insn 75 74 77 2 (set (reg:DI 385 [ size.77_310 ])
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [2 ubound.76+0 S8 A64])) "../src/spline.f":519 81 {*movdi_internal}
     (nil))
(insn 77 75 76 2 (set (reg:DI 409)
        (const_int 0 [0])) "../src/spline.f":519 81 {*movdi_internal}
     (nil))
(insn 76 77 78 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 385 [ size.77_310 ])
            (const_int 0 [0]))) "../src/spline.f":519 4 {*cmpdi_ccno_1}
     (nil))
(insn 78 76 80 2 (set (reg:DI 386 [ size.77_311 ])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 385 [ size.77_310 ])
            (reg:DI 409))) "../src/spline.f":519 967 {*movdicc_noc}
     (expr_list:REG_DEAD (reg:DI 409)
        (expr_list:REG_DEAD (reg:DI 385 [ size.77_310 ])
            (expr_list:REG_DEAD (reg:CCGOC 17 flags)
                (nil)))))
(insn 80 78 81 2 (set (reg:DI 104 [ size.230_18 ])
        (reg:DI 386 [ size.77_311 ])) "../src/spline.f":519 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 386 [ size.77_311 ])
        (nil)))
(insn 81 80 82 2 (set (subreg:DI (reg:TI 105 [ _19 ]) 0)
        (reg:DI 104 [ size.230_18 ])) "../src/spline.f":519 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 104 [ size.230_18 ])
        (nil)))
(insn 82 81 86 2 (set (subreg:DI (reg:TI 105 [ _19 ]) 8)
        (const_int 0 [0])) "../src/spline.f":519 81 {*movdi_internal}
     (expr_list:REG_UNUSED (reg:TI 105 [ _19 ])
        (nil)))
(insn 86 82 87 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 ilow+0 S4 A32])
        (const_int 1 [0x1])) "../src/spline.f":531 82 {*movsi_internal}
     (nil))
(insn 87 86 88 2 (set (reg/f:DI 410)
        (mem/f/c:DI (reg/f:DI 16 argp) [6 n+0 S8 A64])) "../src/spline.f":532 81 {*movdi_internal}
     (nil))
(insn 88 87 89 2 (set (reg:SI 411)
        (mem:SI (reg/f:DI 410) [1 *n_284(D)+0 S4 A32])) "../src/spline.f":532 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 410)
        (nil)))
(insn 89 88 126 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
        (reg:SI 411)) "../src/spline.f":532 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 411)
        (nil)))
;;  succ:       3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 (FALLTHRU)
;;              7 [100.0%] 
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 107 412
(code_label 126 89 90 3 133 (nil) [1 uses])
(note 90 126 91 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 91 90 92 3 (set (reg:SI 412)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":534 82 {*movsi_internal}
     (nil))
(insn 92 91 93 3 (parallel [
            (set (reg:SI 107 [ _21 ])
                (minus:SI (reg:SI 412)
                    (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [1 ilow+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":534 273 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 412)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [1 ilow+0 S4 A32]))
                (nil)))))
(insn 93 92 94 3 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 107 [ _21 ])
            (const_int 1 [0x1]))) "../src/spline.f":534 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 107 [ _21 ])
        (nil)))
(jump_insn 94 93 95 3 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 611)
            (pc))) "../src/spline.f":534 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 611)
;;  succ:       9
;;              4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 108 109 110 111 112 413 414 415 416 417 418 419 420
(note 95 94 96 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 96 95 97 4 (set (reg:SI 413)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":536 82 {*movsi_internal}
     (nil))
(insn 97 96 98 4 (set (reg:SI 414)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 ilow+0 S4 A32])) "../src/spline.f":536 82 {*movsi_internal}
     (nil))
(insn 98 97 99 4 (parallel [
            (set (reg:SI 108 [ _22 ])
                (plus:SI (reg:SI 413)
                    (reg:SI 414)))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":536 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 414)
        (expr_list:REG_DEAD (reg:SI 413)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                                (const_int -8 [0xfffffffffffffff8])) [1 ilow+0 S4 A32]))
                    (nil))))))
(insn 99 98 100 4 (parallel [
            (set (reg:SI 415)
                (lshiftrt:SI (reg:SI 108 [ _22 ])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":536 544 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 100 99 101 4 (parallel [
            (set (reg:SI 416)
                (plus:SI (reg:SI 415)
                    (reg:SI 108 [ _22 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":536 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 415)
        (expr_list:REG_DEAD (reg:SI 108 [ _22 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 101 100 102 4 (parallel [
            (set (reg:SI 417)
                (ashiftrt:SI (reg:SI 416)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":536 545 {*ashrsi3_1}
     (expr_list:REG_DEAD (reg:SI 416)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 102 101 103 4 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -52 [0xffffffffffffffcc])) [1 imid+0 S4 A32])
        (reg:SI 417)) "../src/spline.f":536 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 417)
        (nil)))
(insn 103 102 104 4 (set (reg/f:DI 418)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -168 [0xffffffffffffff58])) [4 ss+0 S8 A64])) "../src/spline.f":537 81 {*movdi_internal}
     (nil))
(insn 104 103 105 4 (set (reg:SF 109 [ _23 ])
        (mem:SF (reg/f:DI 418) [3 *ss_318(D)+0 S4 A32])) "../src/spline.f":537 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 418)
        (nil)))
(insn 105 104 106 4 (set (reg:SI 419)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -52 [0xffffffffffffffcc])) [1 imid+0 S4 A32])) "../src/spline.f":537 82 {*movsi_internal}
     (nil))
(insn 106 105 107 4 (set (reg:DI 110 [ _24 ])
        (sign_extend:DI (reg:SI 419))) "../src/spline.f":537 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 419)
        (nil)))
(insn 107 106 108 4 (parallel [
            (set (reg:DI 111 [ _25 ])
                (plus:DI (reg:DI 110 [ _24 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":537 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 110 [ _24 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 108 107 109 4 (set (reg/f:DI 420)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -208 [0xffffffffffffff30])) [5 s+0 S8 A64])) "../src/spline.f":537 81 {*movdi_internal}
     (nil))
(insn 109 108 110 4 (set (reg:SF 112 [ _26 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 111 [ _25 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 420)) [3 *s_319(D) S4 A32])) "../src/spline.f":537 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 420)
        (expr_list:REG_DEAD (reg:DI 111 [ _25 ])
            (nil))))
(insn 110 109 111 4 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 112 [ _26 ])
            (reg:SF 109 [ _23 ]))) "../src/spline.f":537 51 {*cmpiusf}
     (expr_list:REG_DEAD (reg:SF 112 [ _26 ])
        (expr_list:REG_DEAD (reg:SF 109 [ _23 ])
            (nil))))
(jump_insn 111 110 115 4 (set (pc)
        (if_then_else (unle (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 605)
            (pc))) "../src/spline.f":537 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil))
 -> 605)
;;  succ:       5 (FALLTHRU)
;;              6
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 421
(note 115 111 116 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 116 115 117 5 (set (reg:SI 421)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -52 [0xffffffffffffffcc])) [1 imid+0 S4 A32])) "../src/spline.f":538 82 {*movsi_internal}
     (nil))
(insn 117 116 606 5 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
        (reg:SI 421)) "../src/spline.f":538 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 421)
        (nil)))
(jump_insn 606 117 607 5 (set (pc)
        (label_ref 124)) 649 {jump}
     (nil)
 -> 124)
;;  succ:       7 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 607 606 605)
;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (RTL)
;;  pred:       4
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 422
(code_label 605 607 121 6 136 (nil) [1 uses])
(note 121 605 122 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 122 121 123 6 (set (reg:SI 422)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -52 [0xffffffffffffffcc])) [1 imid+0 S4 A32])) "../src/spline.f":540 82 {*movsi_internal}
     (nil))
(insn 123 122 124 6 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 ilow+0 S4 A32])
        (reg:SI 422)) "../src/spline.f":540 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 422)
        (nil)))
;;  succ:       7 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 9, flags: (RTL)
;;  pred:       6 (FALLTHRU)
;;              5 [100.0%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 124 123 125 7 132 (nil) [1 uses])
(note 125 124 608 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(jump_insn 608 125 609 7 (set (pc)
        (label_ref 126)) "../src/spline.f":542 649 {jump}
     (nil)
 -> 126)
;;  succ:       3 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 609 608 611)
;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 8, flags: (RTL)
;;  pred:       3
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 611 609 610 9 137 (nil) [1 uses])
(note 610 611 612 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 612 610 129 9 (const_int 0 [0]) "../src/spline.f":542 682 {nop}
     (nil))
;;  succ:       8 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 1, flags: (RTL)
;;  pred:       9 [100.0%]  (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359 360 361 362 363 364 390 391 392 393 394 423 424 425 426 427 428 429 430 431 432 433 434 435 436 437 438 439 440 441 442 443 444 445 446 447 448 449 450 451 452 453 454 455 456 457 458 459 460 461 462 463 464 465 466 467 468 469 470 471 472 473 474 475 476 477 478 479 480 481 482 483 484 485 486 487 488 489 490 491 492 493 494 495 496 497 498 499 500 501 502 503 504 505 506 507 508 509 510 511 512 513 514 515 516 517 518 519 520 521 522 523 524 525 526 527 528 529 530 531 532 533 534 535 536 537 538 539 540 541 542 543 544 545 546 547 548 549 550 551 552 553 554 555 556 557 558 559 560 561 562 563 564 565 566 567 568 569 570 571 572 573 574 575 576 577 578 579 580 581 582 583 584 585 586 587 588 589 590 591 592 593 594 595
(code_label 129 612 130 8 129 (nil) [0 uses])
(note 130 129 131 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 131 130 132 8 (set (reg:SI 423)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":544 82 {*movsi_internal}
     (nil))
(insn 132 131 133 8 (set (reg:DI 113 [ _27 ])
        (sign_extend:DI (reg:SI 423))) "../src/spline.f":544 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 423)
        (nil)))
(insn 133 132 134 8 (parallel [
            (set (reg:DI 114 [ _28 ])
                (plus:DI (reg:DI 113 [ _27 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":544 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 113 [ _27 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 134 133 135 8 (set (reg/f:DI 424)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -208 [0xffffffffffffff30])) [5 s+0 S8 A64])) "../src/spline.f":544 81 {*movdi_internal}
     (nil))
(insn 135 134 136 8 (set (reg:SF 115 [ _29 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 114 [ _28 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 424)) [3 *s_319(D) S4 A32])) "../src/spline.f":544 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 424)
        (expr_list:REG_DEAD (reg:DI 114 [ _28 ])
            (nil))))
(insn 136 135 137 8 (set (reg:SI 425)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":544 82 {*movsi_internal}
     (nil))
(insn 137 136 138 8 (parallel [
            (set (reg:SI 116 [ _30 ])
                (plus:SI (reg:SI 425)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":544 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 425)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff]))
                (nil)))))
(insn 138 137 139 8 (set (reg:DI 117 [ _31 ])
        (sign_extend:DI (reg:SI 116 [ _30 ]))) "../src/spline.f":544 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 116 [ _30 ])
        (nil)))
(insn 139 138 140 8 (parallel [
            (set (reg:DI 118 [ _32 ])
                (plus:DI (reg:DI 117 [ _31 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":544 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 117 [ _31 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 140 139 141 8 (set (reg/f:DI 426)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -208 [0xffffffffffffff30])) [5 s+0 S8 A64])) "../src/spline.f":544 81 {*movdi_internal}
     (nil))
(insn 141 140 142 8 (set (reg:SF 119 [ _33 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 118 [ _32 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 426)) [3 *s_319(D) S4 A32])) "../src/spline.f":544 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 426)
        (expr_list:REG_DEAD (reg:DI 118 [ _32 ])
            (nil))))
(insn 142 141 143 8 (set (reg:SF 427)
        (minus:SF (reg:SF 115 [ _29 ])
            (reg:SF 119 [ _33 ]))) "../src/spline.f":544 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 119 [ _33 ])
        (expr_list:REG_DEAD (reg:SF 115 [ _29 ])
            (nil))))
(insn 143 142 144 8 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [3 ds+0 S4 A32])
        (reg:SF 427)) "../src/spline.f":544 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 427)
        (nil)))
(insn 144 143 145 8 (set (reg/f:DI 428)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -168 [0xffffffffffffff58])) [4 ss+0 S8 A64])) "../src/spline.f":545 81 {*movdi_internal}
     (nil))
(insn 145 144 146 8 (set (reg:SF 120 [ _34 ])
        (mem:SF (reg/f:DI 428) [3 *ss_318(D)+0 S4 A32])) "../src/spline.f":545 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 428)
        (nil)))
(insn 146 145 147 8 (set (reg:SI 429)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":545 82 {*movsi_internal}
     (nil))
(insn 147 146 148 8 (parallel [
            (set (reg:SI 121 [ _35 ])
                (plus:SI (reg:SI 429)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":545 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 429)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff]))
                (nil)))))
(insn 148 147 149 8 (set (reg:DI 122 [ _36 ])
        (sign_extend:DI (reg:SI 121 [ _35 ]))) "../src/spline.f":545 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 121 [ _35 ])
        (nil)))
(insn 149 148 150 8 (parallel [
            (set (reg:DI 123 [ _37 ])
                (plus:DI (reg:DI 122 [ _36 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":545 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 122 [ _36 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 150 149 151 8 (set (reg/f:DI 430)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -208 [0xffffffffffffff30])) [5 s+0 S8 A64])) "../src/spline.f":545 81 {*movdi_internal}
     (nil))
(insn 151 150 152 8 (set (reg:SF 124 [ _38 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 123 [ _37 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 430)) [3 *s_319(D) S4 A32])) "../src/spline.f":545 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 430)
        (expr_list:REG_DEAD (reg:DI 123 [ _37 ])
            (nil))))
(insn 152 151 153 8 (set (reg:SF 125 [ _39 ])
        (minus:SF (reg:SF 120 [ _34 ])
            (reg:SF 124 [ _38 ]))) "../src/spline.f":545 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 124 [ _38 ])
        (expr_list:REG_DEAD (reg:SF 120 [ _34 ])
            (nil))))
(insn 153 152 154 8 (set (reg:SF 126 [ _40 ])
        (reg:SF 125 [ _39 ])) "../src/spline.f":545 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 125 [ _39 ])
        (nil)))
(insn 154 153 155 8 (set (reg:SF 431)
        (div:SF (reg:SF 126 [ _40 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -56 [0xffffffffffffffc8])) [3 ds+0 S4 A32]))) "../src/spline.f":545 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 126 [ _40 ])
        (nil)))
(insn 155 154 156 8 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -60 [0xffffffffffffffc4])) [3 t+0 S4 A32])
        (reg:SF 431)) "../src/spline.f":545 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 431)
        (nil)))
(insn 156 155 157 8 (set (reg:SI 432)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":547 82 {*movsi_internal}
     (nil))
(insn 157 156 158 8 (parallel [
            (set (reg:SI 127 [ _41 ])
                (plus:SI (reg:SI 432)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":547 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 432)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff]))
                (nil)))))
(insn 158 157 159 8 (set (reg:DI 128 [ _42 ])
        (sign_extend:DI (reg:SI 127 [ _41 ]))) "../src/spline.f":547 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 127 [ _41 ])
        (nil)))
(insn 159 158 160 8 (parallel [
            (set (reg:DI 129 [ _43 ])
                (plus:DI (reg:DI 128 [ _42 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":547 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 128 [ _42 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 160 159 161 8 (set (reg/f:DI 433)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -184 [0xffffffffffffff48])) [5 xs+0 S8 A64])) "../src/spline.f":547 81 {*movdi_internal}
     (nil))
(insn 161 160 162 8 (set (reg:SF 130 [ _44 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 129 [ _43 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 433)) [3 *xs_324(D) S4 A32])) "../src/spline.f":547 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 433)
        (expr_list:REG_DEAD (reg:DI 129 [ _43 ])
            (nil))))
(insn 162 161 163 8 (set (reg:SF 131 [ _45 ])
        (mult:SF (reg:SF 130 [ _44 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -56 [0xffffffffffffffc8])) [3 ds+0 S4 A32]))) "../src/spline.f":547 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 130 [ _44 ])
        (nil)))
(insn 163 162 164 8 (set (reg:SI 434)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":547 82 {*movsi_internal}
     (nil))
(insn 164 163 165 8 (set (reg:DI 132 [ _46 ])
        (sign_extend:DI (reg:SI 434))) "../src/spline.f":547 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 434)
        (nil)))
(insn 165 164 166 8 (parallel [
            (set (reg:DI 133 [ _47 ])
                (plus:DI (reg:DI 132 [ _46 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":547 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 132 [ _46 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 166 165 167 8 (set (reg/f:DI 435)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -176 [0xffffffffffffff50])) [5 x+0 S8 A64])) "../src/spline.f":547 81 {*movdi_internal}
     (nil))
(insn 167 166 168 8 (set (reg:SF 134 [ _48 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 133 [ _47 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 435)) [3 *x_325(D) S4 A32])) "../src/spline.f":547 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 435)
        (expr_list:REG_DEAD (reg:DI 133 [ _47 ])
            (nil))))
(insn 168 167 169 8 (set (reg:SF 135 [ _49 ])
        (minus:SF (reg:SF 131 [ _45 ])
            (reg:SF 134 [ _48 ]))) "../src/spline.f":547 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 134 [ _48 ])
        (expr_list:REG_DEAD (reg:SF 131 [ _45 ])
            (nil))))
(insn 169 168 170 8 (set (reg:SI 436)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":547 82 {*movsi_internal}
     (nil))
(insn 170 169 171 8 (parallel [
            (set (reg:SI 136 [ _50 ])
                (plus:SI (reg:SI 436)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":547 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 436)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff]))
                (nil)))))
(insn 171 170 172 8 (set (reg:DI 137 [ _51 ])
        (sign_extend:DI (reg:SI 136 [ _50 ]))) "../src/spline.f":547 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 136 [ _50 ])
        (nil)))
(insn 172 171 173 8 (parallel [
            (set (reg:DI 138 [ _52 ])
                (plus:DI (reg:DI 137 [ _51 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":547 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 137 [ _51 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 173 172 174 8 (set (reg/f:DI 437)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -176 [0xffffffffffffff50])) [5 x+0 S8 A64])) "../src/spline.f":547 81 {*movdi_internal}
     (nil))
(insn 174 173 175 8 (set (reg:SF 139 [ _53 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 138 [ _52 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 437)) [3 *x_325(D) S4 A32])) "../src/spline.f":547 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 437)
        (expr_list:REG_DEAD (reg:DI 138 [ _52 ])
            (nil))))
(insn 175 174 176 8 (set (reg:SF 438)
        (plus:SF (reg:SF 135 [ _49 ])
            (reg:SF 139 [ _53 ]))) "../src/spline.f":547 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 139 [ _53 ])
        (expr_list:REG_DEAD (reg:SF 135 [ _49 ])
            (nil))))
(insn 176 175 177 8 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [3 cx1+0 S4 A32])
        (reg:SF 438)) "../src/spline.f":547 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 438)
        (nil)))
(insn 177 176 178 8 (set (reg:SI 439)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":548 82 {*movsi_internal}
     (nil))
(insn 178 177 179 8 (set (reg:DI 140 [ _54 ])
        (sign_extend:DI (reg:SI 439))) "../src/spline.f":548 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 439)
        (nil)))
(insn 179 178 180 8 (parallel [
            (set (reg:DI 141 [ _55 ])
                (plus:DI (reg:DI 140 [ _54 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":548 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 140 [ _54 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 180 179 181 8 (set (reg/f:DI 440)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -184 [0xffffffffffffff48])) [5 xs+0 S8 A64])) "../src/spline.f":548 81 {*movdi_internal}
     (nil))
(insn 181 180 182 8 (set (reg:SF 142 [ _56 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 141 [ _55 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 440)) [3 *xs_324(D) S4 A32])) "../src/spline.f":548 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 440)
        (expr_list:REG_DEAD (reg:DI 141 [ _55 ])
            (nil))))
(insn 182 181 183 8 (set (reg:SF 143 [ _57 ])
        (mult:SF (reg:SF 142 [ _56 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -56 [0xffffffffffffffc8])) [3 ds+0 S4 A32]))) "../src/spline.f":548 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 142 [ _56 ])
        (nil)))
(insn 183 182 184 8 (set (reg:SI 441)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":548 82 {*movsi_internal}
     (nil))
(insn 184 183 185 8 (set (reg:DI 144 [ _58 ])
        (sign_extend:DI (reg:SI 441))) "../src/spline.f":548 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 441)
        (nil)))
(insn 185 184 186 8 (parallel [
            (set (reg:DI 145 [ _59 ])
                (plus:DI (reg:DI 144 [ _58 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":548 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 144 [ _58 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 186 185 187 8 (set (reg/f:DI 442)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -176 [0xffffffffffffff50])) [5 x+0 S8 A64])) "../src/spline.f":548 81 {*movdi_internal}
     (nil))
(insn 187 186 188 8 (set (reg:SF 146 [ _60 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 145 [ _59 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 442)) [3 *x_325(D) S4 A32])) "../src/spline.f":548 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 442)
        (expr_list:REG_DEAD (reg:DI 145 [ _59 ])
            (nil))))
(insn 188 187 189 8 (set (reg:SF 147 [ _61 ])
        (minus:SF (reg:SF 143 [ _57 ])
            (reg:SF 146 [ _60 ]))) "../src/spline.f":548 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 146 [ _60 ])
        (expr_list:REG_DEAD (reg:SF 143 [ _57 ])
            (nil))))
(insn 189 188 190 8 (set (reg:SI 443)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":548 82 {*movsi_internal}
     (nil))
(insn 190 189 191 8 (parallel [
            (set (reg:SI 148 [ _62 ])
                (plus:SI (reg:SI 443)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":548 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 443)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff]))
                (nil)))))
(insn 191 190 192 8 (set (reg:DI 149 [ _63 ])
        (sign_extend:DI (reg:SI 148 [ _62 ]))) "../src/spline.f":548 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 148 [ _62 ])
        (nil)))
(insn 192 191 193 8 (parallel [
            (set (reg:DI 150 [ _64 ])
                (plus:DI (reg:DI 149 [ _63 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":548 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 149 [ _63 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 193 192 194 8 (set (reg/f:DI 444)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -176 [0xffffffffffffff50])) [5 x+0 S8 A64])) "../src/spline.f":548 81 {*movdi_internal}
     (nil))
(insn 194 193 195 8 (set (reg:SF 151 [ _65 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 150 [ _64 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 444)) [3 *x_325(D) S4 A32])) "../src/spline.f":548 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 444)
        (expr_list:REG_DEAD (reg:DI 150 [ _64 ])
            (nil))))
(insn 195 194 196 8 (set (reg:SF 445)
        (plus:SF (reg:SF 147 [ _61 ])
            (reg:SF 151 [ _65 ]))) "../src/spline.f":548 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 151 [ _65 ])
        (expr_list:REG_DEAD (reg:SF 147 [ _61 ])
            (nil))))
(insn 196 195 197 8 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -68 [0xffffffffffffffbc])) [3 cx2+0 S4 A32])
        (reg:SF 445)) "../src/spline.f":548 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 445)
        (nil)))
(insn 197 196 198 8 (set (reg:SI 446)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":549 82 {*movsi_internal}
     (nil))
(insn 198 197 199 8 (set (reg:DI 152 [ _66 ])
        (sign_extend:DI (reg:SI 446))) "../src/spline.f":549 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 446)
        (nil)))
(insn 199 198 200 8 (parallel [
            (set (reg:DI 153 [ _67 ])
                (plus:DI (reg:DI 152 [ _66 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":549 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 152 [ _66 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 200 199 201 8 (set (reg/f:DI 447)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -176 [0xffffffffffffff50])) [5 x+0 S8 A64])) "../src/spline.f":549 81 {*movdi_internal}
     (nil))
(insn 201 200 202 8 (set (reg:SF 154 [ _68 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 153 [ _67 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 447)) [3 *x_325(D) S4 A32])) "../src/spline.f":549 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 447)
        (expr_list:REG_DEAD (reg:DI 153 [ _67 ])
            (nil))))
(insn 202 201 203 8 (set (reg:SI 448)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":549 82 {*movsi_internal}
     (nil))
(insn 203 202 204 8 (parallel [
            (set (reg:SI 155 [ _69 ])
                (plus:SI (reg:SI 448)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":549 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 448)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff]))
                (nil)))))
(insn 204 203 205 8 (set (reg:DI 156 [ _70 ])
        (sign_extend:DI (reg:SI 155 [ _69 ]))) "../src/spline.f":549 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 155 [ _69 ])
        (nil)))
(insn 205 204 206 8 (parallel [
            (set (reg:DI 157 [ _71 ])
                (plus:DI (reg:DI 156 [ _70 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":549 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 156 [ _70 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 206 205 207 8 (set (reg/f:DI 449)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -176 [0xffffffffffffff50])) [5 x+0 S8 A64])) "../src/spline.f":549 81 {*movdi_internal}
     (nil))
(insn 207 206 208 8 (set (reg:SF 158 [ _72 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 157 [ _71 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 449)) [3 *x_325(D) S4 A32])) "../src/spline.f":549 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 449)
        (expr_list:REG_DEAD (reg:DI 157 [ _71 ])
            (nil))))
(insn 208 207 209 8 (set (reg:SF 159 [ _73 ])
        (minus:SF (reg:SF 154 [ _68 ])
            (reg:SF 158 [ _72 ]))) "../src/spline.f":549 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 158 [ _72 ])
        (expr_list:REG_DEAD (reg:SF 154 [ _68 ])
            (nil))))
(insn 209 208 210 8 (set (reg:SF 450)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -60 [0xffffffffffffffc4])) [3 t+0 S4 A32])) "../src/spline.f":549 127 {*movsf_internal}
     (nil))
(insn 210 209 211 8 (set (reg:SF 451)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC2") [flags 0x2]) [3  S4 A32])) "../src/spline.f":549 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 4.0e+0 [0x0.8p+3])
        (nil)))
(insn 211 210 212 8 (set (reg:SF 160 [ _74 ])
        (mult:SF (reg:SF 450)
            (reg:SF 451))) "../src/spline.f":549 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 451)
        (expr_list:REG_DEAD (reg:SF 450)
            (nil))))
(insn 212 211 213 8 (set (reg:SF 452)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC3") [flags 0x2]) [3  S4 A32])) "../src/spline.f":549 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 213 212 214 8 (set (reg:SF 161 [ _75 ])
        (minus:SF (reg:SF 452)
            (reg:SF 160 [ _74 ]))) "../src/spline.f":549 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 452)
        (expr_list:REG_DEAD (reg:SF 160 [ _74 ])
            (nil))))
(insn 214 213 215 8 (set (reg:SF 453)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -60 [0xffffffffffffffc4])) [3 t+0 S4 A32])) "../src/spline.f":549 127 {*movsf_internal}
     (nil))
(insn 215 214 216 8 (set (reg:SF 454)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC0") [flags 0x2]) [3  S4 A32])) "../src/spline.f":549 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 3.0e+0 [0x0.cp+2])
        (nil)))
(insn 216 215 217 8 (set (reg:SF 162 [ _76 ])
        (mult:SF (reg:SF 453)
            (reg:SF 454))) "../src/spline.f":549 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 454)
        (expr_list:REG_DEAD (reg:SF 453)
            (nil))))
(insn 217 216 218 8 (set (reg:SF 163 [ _77 ])
        (mult:SF (reg:SF 162 [ _76 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -60 [0xffffffffffffffc4])) [3 t+0 S4 A32]))) "../src/spline.f":549 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 162 [ _76 ])
        (nil)))
(insn 218 217 219 8 (set (reg:SF 164 [ _78 ])
        (plus:SF (reg:SF 161 [ _75 ])
            (reg:SF 163 [ _77 ]))) "../src/spline.f":549 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 163 [ _77 ])
        (expr_list:REG_DEAD (reg:SF 161 [ _75 ])
            (nil))))
(insn 219 218 220 8 (set (reg:SF 165 [ _79 ])
        (reg:SF 164 [ _78 ])) "../src/spline.f":549 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 164 [ _78 ])
        (nil)))
(insn 220 219 221 8 (set (reg:SF 166 [ _80 ])
        (mult:SF (reg:SF 165 [ _79 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -64 [0xffffffffffffffc0])) [3 cx1+0 S4 A32]))) "../src/spline.f":549 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 165 [ _79 ])
        (nil)))
(insn 221 220 222 8 (set (reg:SF 167 [ _81 ])
        (plus:SF (reg:SF 159 [ _73 ])
            (reg:SF 166 [ _80 ]))) "../src/spline.f":549 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 166 [ _80 ])
        (expr_list:REG_DEAD (reg:SF 159 [ _73 ])
            (nil))))
(insn 222 221 223 8 (set (reg:SF 455)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -60 [0xffffffffffffffc4])) [3 t+0 S4 A32])) "../src/spline.f":549 127 {*movsf_internal}
     (nil))
(insn 223 222 224 8 (set (reg:SF 456)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC0") [flags 0x2]) [3  S4 A32])) "../src/spline.f":549 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 3.0e+0 [0x0.cp+2])
        (nil)))
(insn 224 223 225 8 (set (reg:SF 168 [ _82 ])
        (mult:SF (reg:SF 455)
            (reg:SF 456))) "../src/spline.f":549 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 456)
        (expr_list:REG_DEAD (reg:SF 455)
            (nil))))
(insn 225 224 226 8 (set (reg:SF 457)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC4") [flags 0x2]) [3  S4 A32])) "../src/spline.f":549 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 2.0e+0 [0x0.8p+2])
        (nil)))
(insn 226 225 227 8 (set (reg:SF 169 [ _83 ])
        (minus:SF (reg:SF 168 [ _82 ])
            (reg:SF 457))) "../src/spline.f":549 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 457)
        (expr_list:REG_DEAD (reg:SF 168 [ _82 ])
            (nil))))
(insn 227 226 228 8 (set (reg:SF 170 [ _84 ])
        (reg:SF 169 [ _83 ])) "../src/spline.f":549 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 169 [ _83 ])
        (nil)))
(insn 228 227 229 8 (set (reg:SF 171 [ _85 ])
        (mult:SF (reg:SF 170 [ _84 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -60 [0xffffffffffffffc4])) [3 t+0 S4 A32]))) "../src/spline.f":549 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 170 [ _84 ])
        (nil)))
(insn 229 228 230 8 (set (reg:SF 172 [ _86 ])
        (mult:SF (reg:SF 171 [ _85 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -68 [0xffffffffffffffbc])) [3 cx2+0 S4 A32]))) "../src/spline.f":549 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 171 [ _85 ])
        (nil)))
(insn 230 229 231 8 (set (reg:SF 458)
        (plus:SF (reg:SF 167 [ _81 ])
            (reg:SF 172 [ _86 ]))) "../src/spline.f":549 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 172 [ _86 ])
        (expr_list:REG_DEAD (reg:SF 167 [ _81 ])
            (nil))))
(insn 231 230 232 8 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [3 xd+0 S4 A32])
        (reg:SF 458)) "../src/spline.f":549 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 458)
        (nil)))
(insn 232 231 233 8 (set (reg:SF 459)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -60 [0xffffffffffffffc4])) [3 t+0 S4 A32])) "../src/spline.f":550 127 {*movsf_internal}
     (nil))
(insn 233 232 234 8 (set (reg:SF 460)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC1") [flags 0x2]) [3  S4 A32])) "../src/spline.f":550 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 6.0e+0 [0x0.cp+3])
        (nil)))
(insn 234 233 235 8 (set (reg:SF 173 [ _87 ])
        (mult:SF (reg:SF 459)
            (reg:SF 460))) "../src/spline.f":550 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 460)
        (expr_list:REG_DEAD (reg:SF 459)
            (nil))))
(insn 235 234 236 8 (set (reg:SF 461)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC2") [flags 0x2]) [3  S4 A32])) "../src/spline.f":550 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 4.0e+0 [0x0.8p+3])
        (nil)))
(insn 236 235 237 8 (set (reg:SF 174 [ _88 ])
        (minus:SF (reg:SF 173 [ _87 ])
            (reg:SF 461))) "../src/spline.f":550 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 461)
        (expr_list:REG_DEAD (reg:SF 173 [ _87 ])
            (nil))))
(insn 237 236 238 8 (set (reg:SF 175 [ _89 ])
        (reg:SF 174 [ _88 ])) "../src/spline.f":550 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 174 [ _88 ])
        (nil)))
(insn 238 237 239 8 (set (reg:SF 176 [ _90 ])
        (mult:SF (reg:SF 175 [ _89 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -64 [0xffffffffffffffc0])) [3 cx1+0 S4 A32]))) "../src/spline.f":550 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 175 [ _89 ])
        (nil)))
(insn 239 238 240 8 (set (reg:SF 462)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -60 [0xffffffffffffffc4])) [3 t+0 S4 A32])) "../src/spline.f":550 127 {*movsf_internal}
     (nil))
(insn 240 239 241 8 (set (reg:SF 463)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC1") [flags 0x2]) [3  S4 A32])) "../src/spline.f":550 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 6.0e+0 [0x0.cp+3])
        (nil)))
(insn 241 240 242 8 (set (reg:SF 177 [ _91 ])
        (mult:SF (reg:SF 462)
            (reg:SF 463))) "../src/spline.f":550 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 463)
        (expr_list:REG_DEAD (reg:SF 462)
            (nil))))
(insn 242 241 243 8 (set (reg:SF 464)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC4") [flags 0x2]) [3  S4 A32])) "../src/spline.f":550 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 2.0e+0 [0x0.8p+2])
        (nil)))
(insn 243 242 244 8 (set (reg:SF 178 [ _92 ])
        (minus:SF (reg:SF 177 [ _91 ])
            (reg:SF 464))) "../src/spline.f":550 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 464)
        (expr_list:REG_DEAD (reg:SF 177 [ _91 ])
            (nil))))
(insn 244 243 245 8 (set (reg:SF 179 [ _93 ])
        (reg:SF 178 [ _92 ])) "../src/spline.f":550 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 178 [ _92 ])
        (nil)))
(insn 245 244 246 8 (set (reg:SF 180 [ _94 ])
        (mult:SF (reg:SF 179 [ _93 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -68 [0xffffffffffffffbc])) [3 cx2+0 S4 A32]))) "../src/spline.f":550 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 179 [ _93 ])
        (nil)))
(insn 246 245 247 8 (set (reg:SF 465)
        (plus:SF (reg:SF 176 [ _90 ])
            (reg:SF 180 [ _94 ]))) "../src/spline.f":550 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 180 [ _94 ])
        (expr_list:REG_DEAD (reg:SF 176 [ _90 ])
            (nil))))
(insn 247 246 248 8 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -76 [0xffffffffffffffb4])) [3 xdd+0 S4 A32])
        (reg:SF 465)) "../src/spline.f":550 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 465)
        (nil)))
(insn 248 247 249 8 (set (reg:SF 466)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [3 cx1+0 S4 A32])) "../src/spline.f":551 127 {*movsf_internal}
     (nil))
(insn 249 248 250 8 (set (reg:SF 467)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC1") [flags 0x2]) [3  S4 A32])) "../src/spline.f":551 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 6.0e+0 [0x0.cp+3])
        (nil)))
(insn 250 249 251 8 (set (reg:SF 181 [ _95 ])
        (mult:SF (reg:SF 466)
            (reg:SF 467))) "../src/spline.f":551 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 467)
        (expr_list:REG_DEAD (reg:SF 466)
            (nil))))
(insn 251 250 252 8 (set (reg:SF 468)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -68 [0xffffffffffffffbc])) [3 cx2+0 S4 A32])) "../src/spline.f":551 127 {*movsf_internal}
     (nil))
(insn 252 251 253 8 (set (reg:SF 469)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC1") [flags 0x2]) [3  S4 A32])) "../src/spline.f":551 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 6.0e+0 [0x0.cp+3])
        (nil)))
(insn 253 252 254 8 (set (reg:SF 182 [ _96 ])
        (mult:SF (reg:SF 468)
            (reg:SF 469))) "../src/spline.f":551 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 469)
        (expr_list:REG_DEAD (reg:SF 468)
            (nil))))
(insn 254 253 255 8 (set (reg:SF 470)
        (plus:SF (reg:SF 181 [ _95 ])
            (reg:SF 182 [ _96 ]))) "../src/spline.f":551 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 182 [ _96 ])
        (expr_list:REG_DEAD (reg:SF 181 [ _95 ])
            (nil))))
(insn 255 254 256 8 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [3 xddd+0 S4 A32])
        (reg:SF 470)) "../src/spline.f":551 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 470)
        (nil)))
(insn 256 255 257 8 (set (reg:SI 471)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":553 82 {*movsi_internal}
     (nil))
(insn 257 256 258 8 (parallel [
            (set (reg:SI 183 [ _97 ])
                (plus:SI (reg:SI 471)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":553 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 471)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff]))
                (nil)))))
(insn 258 257 259 8 (set (reg:DI 184 [ _98 ])
        (sign_extend:DI (reg:SI 183 [ _97 ]))) "../src/spline.f":553 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 183 [ _97 ])
        (nil)))
(insn 259 258 260 8 (parallel [
            (set (reg:DI 185 [ _99 ])
                (plus:DI (reg:DI 184 [ _98 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":553 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 184 [ _98 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 260 259 261 8 (set (reg/f:DI 472)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -200 [0xffffffffffffff38])) [5 ys+0 S8 A64])) "../src/spline.f":553 81 {*movdi_internal}
     (nil))
(insn 261 260 262 8 (set (reg:SF 186 [ _100 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 185 [ _99 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 472)) [3 *ys_331(D) S4 A32])) "../src/spline.f":553 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 472)
        (expr_list:REG_DEAD (reg:DI 185 [ _99 ])
            (nil))))
(insn 262 261 263 8 (set (reg:SF 187 [ _101 ])
        (mult:SF (reg:SF 186 [ _100 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -56 [0xffffffffffffffc8])) [3 ds+0 S4 A32]))) "../src/spline.f":553 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 186 [ _100 ])
        (nil)))
(insn 263 262 264 8 (set (reg:SI 473)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":553 82 {*movsi_internal}
     (nil))
(insn 264 263 265 8 (set (reg:DI 188 [ _102 ])
        (sign_extend:DI (reg:SI 473))) "../src/spline.f":553 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 473)
        (nil)))
(insn 265 264 266 8 (parallel [
            (set (reg:DI 189 [ _103 ])
                (plus:DI (reg:DI 188 [ _102 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":553 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 188 [ _102 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 266 265 267 8 (set (reg/f:DI 474)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -192 [0xffffffffffffff40])) [5 y+0 S8 A64])) "../src/spline.f":553 81 {*movdi_internal}
     (nil))
(insn 267 266 268 8 (set (reg:SF 190 [ _104 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 189 [ _103 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 474)) [3 *y_332(D) S4 A32])) "../src/spline.f":553 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 474)
        (expr_list:REG_DEAD (reg:DI 189 [ _103 ])
            (nil))))
(insn 268 267 269 8 (set (reg:SF 191 [ _105 ])
        (minus:SF (reg:SF 187 [ _101 ])
            (reg:SF 190 [ _104 ]))) "../src/spline.f":553 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 190 [ _104 ])
        (expr_list:REG_DEAD (reg:SF 187 [ _101 ])
            (nil))))
(insn 269 268 270 8 (set (reg:SI 475)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":553 82 {*movsi_internal}
     (nil))
(insn 270 269 271 8 (parallel [
            (set (reg:SI 192 [ _106 ])
                (plus:SI (reg:SI 475)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":553 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 475)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff]))
                (nil)))))
(insn 271 270 272 8 (set (reg:DI 193 [ _107 ])
        (sign_extend:DI (reg:SI 192 [ _106 ]))) "../src/spline.f":553 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 192 [ _106 ])
        (nil)))
(insn 272 271 273 8 (parallel [
            (set (reg:DI 194 [ _108 ])
                (plus:DI (reg:DI 193 [ _107 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":553 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 193 [ _107 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 273 272 274 8 (set (reg/f:DI 476)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -192 [0xffffffffffffff40])) [5 y+0 S8 A64])) "../src/spline.f":553 81 {*movdi_internal}
     (nil))
(insn 274 273 275 8 (set (reg:SF 195 [ _109 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 194 [ _108 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 476)) [3 *y_332(D) S4 A32])) "../src/spline.f":553 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 476)
        (expr_list:REG_DEAD (reg:DI 194 [ _108 ])
            (nil))))
(insn 275 274 276 8 (set (reg:SF 477)
        (plus:SF (reg:SF 191 [ _105 ])
            (reg:SF 195 [ _109 ]))) "../src/spline.f":553 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 195 [ _109 ])
        (expr_list:REG_DEAD (reg:SF 191 [ _105 ])
            (nil))))
(insn 276 275 277 8 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -84 [0xffffffffffffffac])) [3 cy1+0 S4 A32])
        (reg:SF 477)) "../src/spline.f":553 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 477)
        (nil)))
(insn 277 276 278 8 (set (reg:SI 478)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":554 82 {*movsi_internal}
     (nil))
(insn 278 277 279 8 (set (reg:DI 196 [ _110 ])
        (sign_extend:DI (reg:SI 478))) "../src/spline.f":554 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 478)
        (nil)))
(insn 279 278 280 8 (parallel [
            (set (reg:DI 197 [ _111 ])
                (plus:DI (reg:DI 196 [ _110 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":554 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 196 [ _110 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 280 279 281 8 (set (reg/f:DI 479)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -200 [0xffffffffffffff38])) [5 ys+0 S8 A64])) "../src/spline.f":554 81 {*movdi_internal}
     (nil))
(insn 281 280 282 8 (set (reg:SF 198 [ _112 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 197 [ _111 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 479)) [3 *ys_331(D) S4 A32])) "../src/spline.f":554 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 479)
        (expr_list:REG_DEAD (reg:DI 197 [ _111 ])
            (nil))))
(insn 282 281 283 8 (set (reg:SF 199 [ _113 ])
        (mult:SF (reg:SF 198 [ _112 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -56 [0xffffffffffffffc8])) [3 ds+0 S4 A32]))) "../src/spline.f":554 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 198 [ _112 ])
        (nil)))
(insn 283 282 284 8 (set (reg:SI 480)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":554 82 {*movsi_internal}
     (nil))
(insn 284 283 285 8 (set (reg:DI 200 [ _114 ])
        (sign_extend:DI (reg:SI 480))) "../src/spline.f":554 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 480)
        (nil)))
(insn 285 284 286 8 (parallel [
            (set (reg:DI 201 [ _115 ])
                (plus:DI (reg:DI 200 [ _114 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":554 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 200 [ _114 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 286 285 287 8 (set (reg/f:DI 481)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -192 [0xffffffffffffff40])) [5 y+0 S8 A64])) "../src/spline.f":554 81 {*movdi_internal}
     (nil))
(insn 287 286 288 8 (set (reg:SF 202 [ _116 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 201 [ _115 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 481)) [3 *y_332(D) S4 A32])) "../src/spline.f":554 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 481)
        (expr_list:REG_DEAD (reg:DI 201 [ _115 ])
            (nil))))
(insn 288 287 289 8 (set (reg:SF 203 [ _117 ])
        (minus:SF (reg:SF 199 [ _113 ])
            (reg:SF 202 [ _116 ]))) "../src/spline.f":554 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 202 [ _116 ])
        (expr_list:REG_DEAD (reg:SF 199 [ _113 ])
            (nil))))
(insn 289 288 290 8 (set (reg:SI 482)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":554 82 {*movsi_internal}
     (nil))
(insn 290 289 291 8 (parallel [
            (set (reg:SI 204 [ _118 ])
                (plus:SI (reg:SI 482)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":554 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 482)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff]))
                (nil)))))
(insn 291 290 292 8 (set (reg:DI 205 [ _119 ])
        (sign_extend:DI (reg:SI 204 [ _118 ]))) "../src/spline.f":554 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 204 [ _118 ])
        (nil)))
(insn 292 291 293 8 (parallel [
            (set (reg:DI 206 [ _120 ])
                (plus:DI (reg:DI 205 [ _119 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":554 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 205 [ _119 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 293 292 294 8 (set (reg/f:DI 483)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -192 [0xffffffffffffff40])) [5 y+0 S8 A64])) "../src/spline.f":554 81 {*movdi_internal}
     (nil))
(insn 294 293 295 8 (set (reg:SF 207 [ _121 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 206 [ _120 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 483)) [3 *y_332(D) S4 A32])) "../src/spline.f":554 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 483)
        (expr_list:REG_DEAD (reg:DI 206 [ _120 ])
            (nil))))
(insn 295 294 296 8 (set (reg:SF 484)
        (plus:SF (reg:SF 203 [ _117 ])
            (reg:SF 207 [ _121 ]))) "../src/spline.f":554 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 207 [ _121 ])
        (expr_list:REG_DEAD (reg:SF 203 [ _117 ])
            (nil))))
(insn 296 295 297 8 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -88 [0xffffffffffffffa8])) [3 cy2+0 S4 A32])
        (reg:SF 484)) "../src/spline.f":554 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 484)
        (nil)))
(insn 297 296 298 8 (set (reg:SI 485)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":555 82 {*movsi_internal}
     (nil))
(insn 298 297 299 8 (set (reg:DI 208 [ _122 ])
        (sign_extend:DI (reg:SI 485))) "../src/spline.f":555 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 485)
        (nil)))
(insn 299 298 300 8 (parallel [
            (set (reg:DI 209 [ _123 ])
                (plus:DI (reg:DI 208 [ _122 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":555 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 208 [ _122 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 300 299 301 8 (set (reg/f:DI 486)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -192 [0xffffffffffffff40])) [5 y+0 S8 A64])) "../src/spline.f":555 81 {*movdi_internal}
     (nil))
(insn 301 300 302 8 (set (reg:SF 210 [ _124 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 209 [ _123 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 486)) [3 *y_332(D) S4 A32])) "../src/spline.f":555 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 486)
        (expr_list:REG_DEAD (reg:DI 209 [ _123 ])
            (nil))))
(insn 302 301 303 8 (set (reg:SI 487)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":555 82 {*movsi_internal}
     (nil))
(insn 303 302 304 8 (parallel [
            (set (reg:SI 211 [ _125 ])
                (plus:SI (reg:SI 487)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":555 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 487)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff]))
                (nil)))))
(insn 304 303 305 8 (set (reg:DI 212 [ _126 ])
        (sign_extend:DI (reg:SI 211 [ _125 ]))) "../src/spline.f":555 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 211 [ _125 ])
        (nil)))
(insn 305 304 306 8 (parallel [
            (set (reg:DI 213 [ _127 ])
                (plus:DI (reg:DI 212 [ _126 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":555 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 212 [ _126 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 306 305 307 8 (set (reg/f:DI 488)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -192 [0xffffffffffffff40])) [5 y+0 S8 A64])) "../src/spline.f":555 81 {*movdi_internal}
     (nil))
(insn 307 306 308 8 (set (reg:SF 214 [ _128 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 213 [ _127 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 488)) [3 *y_332(D) S4 A32])) "../src/spline.f":555 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 488)
        (expr_list:REG_DEAD (reg:DI 213 [ _127 ])
            (nil))))
(insn 308 307 309 8 (set (reg:SF 215 [ _129 ])
        (minus:SF (reg:SF 210 [ _124 ])
            (reg:SF 214 [ _128 ]))) "../src/spline.f":555 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 214 [ _128 ])
        (expr_list:REG_DEAD (reg:SF 210 [ _124 ])
            (nil))))
(insn 309 308 310 8 (set (reg:SF 489)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -60 [0xffffffffffffffc4])) [3 t+0 S4 A32])) "../src/spline.f":555 127 {*movsf_internal}
     (nil))
(insn 310 309 311 8 (set (reg:SF 490)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC2") [flags 0x2]) [3  S4 A32])) "../src/spline.f":555 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 4.0e+0 [0x0.8p+3])
        (nil)))
(insn 311 310 312 8 (set (reg:SF 216 [ _130 ])
        (mult:SF (reg:SF 489)
            (reg:SF 490))) "../src/spline.f":555 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 490)
        (expr_list:REG_DEAD (reg:SF 489)
            (nil))))
(insn 312 311 313 8 (set (reg:SF 491)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC3") [flags 0x2]) [3  S4 A32])) "../src/spline.f":555 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 313 312 314 8 (set (reg:SF 217 [ _131 ])
        (minus:SF (reg:SF 491)
            (reg:SF 216 [ _130 ]))) "../src/spline.f":555 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 491)
        (expr_list:REG_DEAD (reg:SF 216 [ _130 ])
            (nil))))
(insn 314 313 315 8 (set (reg:SF 492)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -60 [0xffffffffffffffc4])) [3 t+0 S4 A32])) "../src/spline.f":555 127 {*movsf_internal}
     (nil))
(insn 315 314 316 8 (set (reg:SF 493)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC0") [flags 0x2]) [3  S4 A32])) "../src/spline.f":555 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 3.0e+0 [0x0.cp+2])
        (nil)))
(insn 316 315 317 8 (set (reg:SF 218 [ _132 ])
        (mult:SF (reg:SF 492)
            (reg:SF 493))) "../src/spline.f":555 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 493)
        (expr_list:REG_DEAD (reg:SF 492)
            (nil))))
(insn 317 316 318 8 (set (reg:SF 219 [ _133 ])
        (mult:SF (reg:SF 218 [ _132 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -60 [0xffffffffffffffc4])) [3 t+0 S4 A32]))) "../src/spline.f":555 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 218 [ _132 ])
        (nil)))
(insn 318 317 319 8 (set (reg:SF 220 [ _134 ])
        (plus:SF (reg:SF 217 [ _131 ])
            (reg:SF 219 [ _133 ]))) "../src/spline.f":555 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 219 [ _133 ])
        (expr_list:REG_DEAD (reg:SF 217 [ _131 ])
            (nil))))
(insn 319 318 320 8 (set (reg:SF 221 [ _135 ])
        (reg:SF 220 [ _134 ])) "../src/spline.f":555 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 220 [ _134 ])
        (nil)))
(insn 320 319 321 8 (set (reg:SF 222 [ _136 ])
        (mult:SF (reg:SF 221 [ _135 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -84 [0xffffffffffffffac])) [3 cy1+0 S4 A32]))) "../src/spline.f":555 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 221 [ _135 ])
        (nil)))
(insn 321 320 322 8 (set (reg:SF 223 [ _137 ])
        (plus:SF (reg:SF 215 [ _129 ])
            (reg:SF 222 [ _136 ]))) "../src/spline.f":555 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 222 [ _136 ])
        (expr_list:REG_DEAD (reg:SF 215 [ _129 ])
            (nil))))
(insn 322 321 323 8 (set (reg:SF 494)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -60 [0xffffffffffffffc4])) [3 t+0 S4 A32])) "../src/spline.f":555 127 {*movsf_internal}
     (nil))
(insn 323 322 324 8 (set (reg:SF 495)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC0") [flags 0x2]) [3  S4 A32])) "../src/spline.f":555 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 3.0e+0 [0x0.cp+2])
        (nil)))
(insn 324 323 325 8 (set (reg:SF 224 [ _138 ])
        (mult:SF (reg:SF 494)
            (reg:SF 495))) "../src/spline.f":555 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 495)
        (expr_list:REG_DEAD (reg:SF 494)
            (nil))))
(insn 325 324 326 8 (set (reg:SF 496)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC4") [flags 0x2]) [3  S4 A32])) "../src/spline.f":555 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 2.0e+0 [0x0.8p+2])
        (nil)))
(insn 326 325 327 8 (set (reg:SF 225 [ _139 ])
        (minus:SF (reg:SF 224 [ _138 ])
            (reg:SF 496))) "../src/spline.f":555 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 496)
        (expr_list:REG_DEAD (reg:SF 224 [ _138 ])
            (nil))))
(insn 327 326 328 8 (set (reg:SF 226 [ _140 ])
        (reg:SF 225 [ _139 ])) "../src/spline.f":555 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 225 [ _139 ])
        (nil)))
(insn 328 327 329 8 (set (reg:SF 227 [ _141 ])
        (mult:SF (reg:SF 226 [ _140 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -60 [0xffffffffffffffc4])) [3 t+0 S4 A32]))) "../src/spline.f":555 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 226 [ _140 ])
        (nil)))
(insn 329 328 330 8 (set (reg:SF 228 [ _142 ])
        (mult:SF (reg:SF 227 [ _141 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -88 [0xffffffffffffffa8])) [3 cy2+0 S4 A32]))) "../src/spline.f":555 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 227 [ _141 ])
        (nil)))
(insn 330 329 331 8 (set (reg:SF 497)
        (plus:SF (reg:SF 223 [ _137 ])
            (reg:SF 228 [ _142 ]))) "../src/spline.f":555 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 228 [ _142 ])
        (expr_list:REG_DEAD (reg:SF 223 [ _137 ])
            (nil))))
(insn 331 330 332 8 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -92 [0xffffffffffffffa4])) [3 yd+0 S4 A32])
        (reg:SF 497)) "../src/spline.f":555 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 497)
        (nil)))
(insn 332 331 333 8 (set (reg:SF 498)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -60 [0xffffffffffffffc4])) [3 t+0 S4 A32])) "../src/spline.f":556 127 {*movsf_internal}
     (nil))
(insn 333 332 334 8 (set (reg:SF 499)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC1") [flags 0x2]) [3  S4 A32])) "../src/spline.f":556 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 6.0e+0 [0x0.cp+3])
        (nil)))
(insn 334 333 335 8 (set (reg:SF 229 [ _143 ])
        (mult:SF (reg:SF 498)
            (reg:SF 499))) "../src/spline.f":556 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 499)
        (expr_list:REG_DEAD (reg:SF 498)
            (nil))))
(insn 335 334 336 8 (set (reg:SF 500)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC2") [flags 0x2]) [3  S4 A32])) "../src/spline.f":556 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 4.0e+0 [0x0.8p+3])
        (nil)))
(insn 336 335 337 8 (set (reg:SF 230 [ _144 ])
        (minus:SF (reg:SF 229 [ _143 ])
            (reg:SF 500))) "../src/spline.f":556 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 500)
        (expr_list:REG_DEAD (reg:SF 229 [ _143 ])
            (nil))))
(insn 337 336 338 8 (set (reg:SF 231 [ _145 ])
        (reg:SF 230 [ _144 ])) "../src/spline.f":556 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 230 [ _144 ])
        (nil)))
(insn 338 337 339 8 (set (reg:SF 232 [ _146 ])
        (mult:SF (reg:SF 231 [ _145 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -84 [0xffffffffffffffac])) [3 cy1+0 S4 A32]))) "../src/spline.f":556 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 231 [ _145 ])
        (nil)))
(insn 339 338 340 8 (set (reg:SF 501)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -60 [0xffffffffffffffc4])) [3 t+0 S4 A32])) "../src/spline.f":556 127 {*movsf_internal}
     (nil))
(insn 340 339 341 8 (set (reg:SF 502)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC1") [flags 0x2]) [3  S4 A32])) "../src/spline.f":556 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 6.0e+0 [0x0.cp+3])
        (nil)))
(insn 341 340 342 8 (set (reg:SF 233 [ _147 ])
        (mult:SF (reg:SF 501)
            (reg:SF 502))) "../src/spline.f":556 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 502)
        (expr_list:REG_DEAD (reg:SF 501)
            (nil))))
(insn 342 341 343 8 (set (reg:SF 503)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC4") [flags 0x2]) [3  S4 A32])) "../src/spline.f":556 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 2.0e+0 [0x0.8p+2])
        (nil)))
(insn 343 342 344 8 (set (reg:SF 234 [ _148 ])
        (minus:SF (reg:SF 233 [ _147 ])
            (reg:SF 503))) "../src/spline.f":556 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 503)
        (expr_list:REG_DEAD (reg:SF 233 [ _147 ])
            (nil))))
(insn 344 343 345 8 (set (reg:SF 235 [ _149 ])
        (reg:SF 234 [ _148 ])) "../src/spline.f":556 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 234 [ _148 ])
        (nil)))
(insn 345 344 346 8 (set (reg:SF 236 [ _150 ])
        (mult:SF (reg:SF 235 [ _149 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -88 [0xffffffffffffffa8])) [3 cy2+0 S4 A32]))) "../src/spline.f":556 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 235 [ _149 ])
        (nil)))
(insn 346 345 347 8 (set (reg:SF 504)
        (plus:SF (reg:SF 232 [ _146 ])
            (reg:SF 236 [ _150 ]))) "../src/spline.f":556 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 236 [ _150 ])
        (expr_list:REG_DEAD (reg:SF 232 [ _146 ])
            (nil))))
(insn 347 346 348 8 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [3 ydd+0 S4 A32])
        (reg:SF 504)) "../src/spline.f":556 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 504)
        (nil)))
(insn 348 347 349 8 (set (reg:SF 505)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -84 [0xffffffffffffffac])) [3 cy1+0 S4 A32])) "../src/spline.f":557 127 {*movsf_internal}
     (nil))
(insn 349 348 350 8 (set (reg:SF 506)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC1") [flags 0x2]) [3  S4 A32])) "../src/spline.f":557 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 6.0e+0 [0x0.cp+3])
        (nil)))
(insn 350 349 351 8 (set (reg:SF 237 [ _151 ])
        (mult:SF (reg:SF 505)
            (reg:SF 506))) "../src/spline.f":557 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 506)
        (expr_list:REG_DEAD (reg:SF 505)
            (nil))))
(insn 351 350 352 8 (set (reg:SF 507)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -88 [0xffffffffffffffa8])) [3 cy2+0 S4 A32])) "../src/spline.f":557 127 {*movsf_internal}
     (nil))
(insn 352 351 353 8 (set (reg:SF 508)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC1") [flags 0x2]) [3  S4 A32])) "../src/spline.f":557 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 6.0e+0 [0x0.cp+3])
        (nil)))
(insn 353 352 354 8 (set (reg:SF 238 [ _152 ])
        (mult:SF (reg:SF 507)
            (reg:SF 508))) "../src/spline.f":557 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 508)
        (expr_list:REG_DEAD (reg:SF 507)
            (nil))))
(insn 354 353 355 8 (set (reg:SF 509)
        (plus:SF (reg:SF 237 [ _151 ])
            (reg:SF 238 [ _152 ]))) "../src/spline.f":557 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 238 [ _152 ])
        (expr_list:REG_DEAD (reg:SF 237 [ _151 ])
            (nil))))
(insn 355 354 356 8 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -100 [0xffffffffffffff9c])) [3 yddd+0 S4 A32])
        (reg:SF 509)) "../src/spline.f":557 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 509)
        (nil)))
(insn 356 355 357 8 (set (reg:SI 510)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":561 82 {*movsi_internal}
     (nil))
(insn 357 356 358 8 (parallel [
            (set (reg:SI 239 [ _153 ])
                (plus:SI (reg:SI 510)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":561 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 510)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff]))
                (nil)))))
(insn 358 357 359 8 (set (reg:DI 240 [ _154 ])
        (sign_extend:DI (reg:SI 239 [ _153 ]))) "../src/spline.f":561 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 239 [ _153 ])
        (nil)))
(insn 359 358 360 8 (parallel [
            (set (reg:DI 241 [ _155 ])
                (plus:DI (reg:DI 240 [ _154 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":561 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 240 [ _154 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 360 359 361 8 (set (reg/f:DI 511)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -184 [0xffffffffffffff48])) [5 xs+0 S8 A64])) "../src/spline.f":561 81 {*movdi_internal}
     (nil))
(insn 361 360 362 8 (set (reg:SF 242 [ _156 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 241 [ _155 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 511)) [3 *xs_324(D) S4 A32])) "../src/spline.f":561 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 511)
        (expr_list:REG_DEAD (reg:DI 241 [ _155 ])
            (nil))))
(insn 362 361 363 8 (set (reg:SF 513)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [3 ds+0 S4 A32])) "../src/spline.f":561 127 {*movsf_internal}
     (nil))
(insn 363 362 364 8 (set (reg:SF 512)
        (mult:SF (reg:SF 513)
            (reg:SF 242 [ _156 ]))) "../src/spline.f":561 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 513)
        (expr_list:REG_DEAD (reg:SF 242 [ _156 ])
            (nil))))
(insn 364 363 365 8 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -104 [0xffffffffffffff98])) [3 f1+0 S4 A32])
        (reg:SF 512)) "../src/spline.f":561 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 512)
        (nil)))
(insn 365 364 366 8 (set (reg:SI 514)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":562 82 {*movsi_internal}
     (nil))
(insn 366 365 367 8 (set (reg:DI 243 [ _157 ])
        (sign_extend:DI (reg:SI 514))) "../src/spline.f":562 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 514)
        (nil)))
(insn 367 366 368 8 (parallel [
            (set (reg:DI 244 [ _158 ])
                (plus:DI (reg:DI 243 [ _157 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":562 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 243 [ _157 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 368 367 369 8 (set (reg/f:DI 515)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -176 [0xffffffffffffff50])) [5 x+0 S8 A64])) "../src/spline.f":562 81 {*movdi_internal}
     (nil))
(insn 369 368 370 8 (set (reg:SF 245 [ _159 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 244 [ _158 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 515)) [3 *x_325(D) S4 A32])) "../src/spline.f":562 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 515)
        (expr_list:REG_DEAD (reg:DI 244 [ _158 ])
            (nil))))
(insn 370 369 371 8 (set (reg:SI 516)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":562 82 {*movsi_internal}
     (nil))
(insn 371 370 372 8 (parallel [
            (set (reg:SI 246 [ _160 ])
                (plus:SI (reg:SI 516)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":562 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 516)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff]))
                (nil)))))
(insn 372 371 373 8 (set (reg:DI 247 [ _161 ])
        (sign_extend:DI (reg:SI 246 [ _160 ]))) "../src/spline.f":562 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 246 [ _160 ])
        (nil)))
(insn 373 372 374 8 (parallel [
            (set (reg:DI 248 [ _162 ])
                (plus:DI (reg:DI 247 [ _161 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":562 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 247 [ _161 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 374 373 375 8 (set (reg/f:DI 517)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -176 [0xffffffffffffff50])) [5 x+0 S8 A64])) "../src/spline.f":562 81 {*movdi_internal}
     (nil))
(insn 375 374 376 8 (set (reg:SF 249 [ _163 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 248 [ _162 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 517)) [3 *x_325(D) S4 A32])) "../src/spline.f":562 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 517)
        (expr_list:REG_DEAD (reg:DI 248 [ _162 ])
            (nil))))
(insn 376 375 377 8 (set (reg:SF 250 [ _164 ])
        (minus:SF (reg:SF 245 [ _159 ])
            (reg:SF 249 [ _163 ]))) "../src/spline.f":562 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 249 [ _163 ])
        (expr_list:REG_DEAD (reg:SF 245 [ _159 ])
            (nil))))
(insn 377 376 378 8 (set (reg:SF 251 [ _165 ])
        (reg:SF 250 [ _164 ])) "../src/spline.f":562 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 250 [ _164 ])
        (nil)))
(insn 378 377 379 8 (set (reg:SF 518)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC0") [flags 0x2]) [3  S4 A32])) "../src/spline.f":562 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 3.0e+0 [0x0.cp+2])
        (nil)))
(insn 379 378 380 8 (set (reg:SF 252 [ _166 ])
        (mult:SF (reg:SF 251 [ _165 ])
            (reg:SF 518))) "../src/spline.f":562 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 518)
        (expr_list:REG_DEAD (reg:SF 251 [ _165 ])
            (nil))))
(insn 380 379 381 8 (set (reg:SI 519)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":562 82 {*movsi_internal}
     (nil))
(insn 381 380 382 8 (parallel [
            (set (reg:SI 253 [ _167 ])
                (plus:SI (reg:SI 519)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":562 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 519)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff]))
                (nil)))))
(insn 382 381 383 8 (set (reg:DI 254 [ _168 ])
        (sign_extend:DI (reg:SI 253 [ _167 ]))) "../src/spline.f":562 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 253 [ _167 ])
        (nil)))
(insn 383 382 384 8 (parallel [
            (set (reg:DI 255 [ _169 ])
                (plus:DI (reg:DI 254 [ _168 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":562 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 254 [ _168 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 384 383 385 8 (set (reg/f:DI 520)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -184 [0xffffffffffffff48])) [5 xs+0 S8 A64])) "../src/spline.f":562 81 {*movdi_internal}
     (nil))
(insn 385 384 386 8 (set (reg:SF 256 [ _170 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 255 [ _169 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 520)) [3 *xs_324(D) S4 A32])) "../src/spline.f":562 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 520)
        (expr_list:REG_DEAD (reg:DI 255 [ _169 ])
            (nil))))
(insn 386 385 387 8 (set (reg:SF 257 [ _171 ])
        (plus:SF (reg:SF 256 [ _170 ])
            (reg:SF 256 [ _170 ]))) "../src/spline.f":562 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 256 [ _170 ])
        (nil)))
(insn 387 386 388 8 (set (reg:SI 521)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":562 82 {*movsi_internal}
     (nil))
(insn 388 387 389 8 (set (reg:DI 258 [ _172 ])
        (sign_extend:DI (reg:SI 521))) "../src/spline.f":562 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 521)
        (nil)))
(insn 389 388 390 8 (parallel [
            (set (reg:DI 259 [ _173 ])
                (plus:DI (reg:DI 258 [ _172 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":562 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 258 [ _172 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 390 389 391 8 (set (reg/f:DI 522)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -184 [0xffffffffffffff48])) [5 xs+0 S8 A64])) "../src/spline.f":562 81 {*movdi_internal}
     (nil))
(insn 391 390 392 8 (set (reg:SF 260 [ _174 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 259 [ _173 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 522)) [3 *xs_324(D) S4 A32])) "../src/spline.f":562 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 522)
        (expr_list:REG_DEAD (reg:DI 259 [ _173 ])
            (nil))))
(insn 392 391 393 8 (set (reg:SF 261 [ _175 ])
        (plus:SF (reg:SF 257 [ _171 ])
            (reg:SF 260 [ _174 ]))) "../src/spline.f":562 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 260 [ _174 ])
        (expr_list:REG_DEAD (reg:SF 257 [ _171 ])
            (nil))))
(insn 393 392 394 8 (set (reg:SF 262 [ _176 ])
        (reg:SF 261 [ _175 ])) "../src/spline.f":562 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 261 [ _175 ])
        (nil)))
(insn 394 393 395 8 (set (reg:SF 263 [ _177 ])
        (mult:SF (reg:SF 262 [ _176 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -56 [0xffffffffffffffc8])) [3 ds+0 S4 A32]))) "../src/spline.f":562 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 262 [ _176 ])
        (nil)))
(insn 395 394 396 8 (set (reg:SF 523)
        (minus:SF (reg:SF 252 [ _166 ])
            (reg:SF 263 [ _177 ]))) "../src/spline.f":562 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 263 [ _177 ])
        (expr_list:REG_DEAD (reg:SF 252 [ _166 ])
            (nil))))
(insn 396 395 397 8 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -108 [0xffffffffffffff94])) [3 f2+0 S4 A32])
        (reg:SF 523)) "../src/spline.f":562 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 523)
        (nil)))
(insn 397 396 398 8 (set (reg:SI 524)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":563 82 {*movsi_internal}
     (nil))
(insn 398 397 399 8 (parallel [
            (set (reg:SI 264 [ _178 ])
                (plus:SI (reg:SI 524)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":563 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 524)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff]))
                (nil)))))
(insn 399 398 400 8 (set (reg:DI 265 [ _179 ])
        (sign_extend:DI (reg:SI 264 [ _178 ]))) "../src/spline.f":563 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 264 [ _178 ])
        (nil)))
(insn 400 399 401 8 (parallel [
            (set (reg:DI 266 [ _180 ])
                (plus:DI (reg:DI 265 [ _179 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":563 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 265 [ _179 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 401 400 402 8 (set (reg/f:DI 525)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -184 [0xffffffffffffff48])) [5 xs+0 S8 A64])) "../src/spline.f":563 81 {*movdi_internal}
     (nil))
(insn 402 401 403 8 (set (reg:SF 267 [ _181 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 266 [ _180 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 525)) [3 *xs_324(D) S4 A32])) "../src/spline.f":563 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 525)
        (expr_list:REG_DEAD (reg:DI 266 [ _180 ])
            (nil))))
(insn 403 402 404 8 (set (reg:SI 526)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":563 82 {*movsi_internal}
     (nil))
(insn 404 403 405 8 (set (reg:DI 268 [ _182 ])
        (sign_extend:DI (reg:SI 526))) "../src/spline.f":563 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 526)
        (nil)))
(insn 405 404 406 8 (parallel [
            (set (reg:DI 269 [ _183 ])
                (plus:DI (reg:DI 268 [ _182 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":563 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 268 [ _182 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 406 405 407 8 (set (reg/f:DI 527)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -184 [0xffffffffffffff48])) [5 xs+0 S8 A64])) "../src/spline.f":563 81 {*movdi_internal}
     (nil))
(insn 407 406 408 8 (set (reg:SF 270 [ _184 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 269 [ _183 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 527)) [3 *xs_324(D) S4 A32])) "../src/spline.f":563 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 527)
        (expr_list:REG_DEAD (reg:DI 269 [ _183 ])
            (nil))))
(insn 408 407 409 8 (set (reg:SF 271 [ _185 ])
        (plus:SF (reg:SF 267 [ _181 ])
            (reg:SF 270 [ _184 ]))) "../src/spline.f":563 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 270 [ _184 ])
        (expr_list:REG_DEAD (reg:SF 267 [ _181 ])
            (nil))))
(insn 409 408 410 8 (set (reg:SF 272 [ _186 ])
        (reg:SF 271 [ _185 ])) "../src/spline.f":563 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 271 [ _185 ])
        (nil)))
(insn 410 409 411 8 (set (reg:SF 273 [ _187 ])
        (mult:SF (reg:SF 272 [ _186 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -56 [0xffffffffffffffc8])) [3 ds+0 S4 A32]))) "../src/spline.f":563 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 272 [ _186 ])
        (nil)))
(insn 411 410 412 8 (set (reg:SI 528)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":563 82 {*movsi_internal}
     (nil))
(insn 412 411 413 8 (set (reg:DI 274 [ _188 ])
        (sign_extend:DI (reg:SI 528))) "../src/spline.f":563 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 528)
        (nil)))
(insn 413 412 414 8 (parallel [
            (set (reg:DI 275 [ _189 ])
                (plus:DI (reg:DI 274 [ _188 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":563 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 274 [ _188 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 414 413 415 8 (set (reg/f:DI 529)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -176 [0xffffffffffffff50])) [5 x+0 S8 A64])) "../src/spline.f":563 81 {*movdi_internal}
     (nil))
(insn 415 414 416 8 (set (reg:SF 276 [ _190 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 275 [ _189 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 529)) [3 *x_325(D) S4 A32])) "../src/spline.f":563 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 529)
        (expr_list:REG_DEAD (reg:DI 275 [ _189 ])
            (nil))))
(insn 416 415 417 8 (set (reg:SI 530)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":563 82 {*movsi_internal}
     (nil))
(insn 417 416 418 8 (parallel [
            (set (reg:SI 277 [ _191 ])
                (plus:SI (reg:SI 530)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":563 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 530)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff]))
                (nil)))))
(insn 418 417 419 8 (set (reg:DI 278 [ _192 ])
        (sign_extend:DI (reg:SI 277 [ _191 ]))) "../src/spline.f":563 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 277 [ _191 ])
        (nil)))
(insn 419 418 420 8 (parallel [
            (set (reg:DI 279 [ _193 ])
                (plus:DI (reg:DI 278 [ _192 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":563 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 278 [ _192 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 420 419 421 8 (set (reg/f:DI 531)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -176 [0xffffffffffffff50])) [5 x+0 S8 A64])) "../src/spline.f":563 81 {*movdi_internal}
     (nil))
(insn 421 420 422 8 (set (reg:SF 280 [ _194 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 279 [ _193 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 531)) [3 *x_325(D) S4 A32])) "../src/spline.f":563 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 531)
        (expr_list:REG_DEAD (reg:DI 279 [ _193 ])
            (nil))))
(insn 422 421 423 8 (set (reg:SF 281 [ _195 ])
        (minus:SF (reg:SF 276 [ _190 ])
            (reg:SF 280 [ _194 ]))) "../src/spline.f":563 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 280 [ _194 ])
        (expr_list:REG_DEAD (reg:SF 276 [ _190 ])
            (nil))))
(insn 423 422 424 8 (set (reg:SF 282 [ _196 ])
        (reg:SF 281 [ _195 ])) "../src/spline.f":563 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 281 [ _195 ])
        (nil)))
(insn 424 423 425 8 (set (reg:SF 283 [ _197 ])
        (plus:SF (reg:SF 282 [ _196 ])
            (reg:SF 282 [ _196 ]))) "../src/spline.f":563 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 282 [ _196 ])
        (nil)))
(insn 425 424 426 8 (set (reg:SF 532)
        (minus:SF (reg:SF 273 [ _187 ])
            (reg:SF 283 [ _197 ]))) "../src/spline.f":563 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 283 [ _197 ])
        (expr_list:REG_DEAD (reg:SF 273 [ _187 ])
            (nil))))
(insn 426 425 427 8 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -112 [0xffffffffffffff90])) [3 f3+0 S4 A32])
        (reg:SF 532)) "../src/spline.f":563 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 532)
        (nil)))
(insn 427 426 428 8 (set (reg:SF 533)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -108 [0xffffffffffffff94])) [3 f2+0 S4 A32])) "../src/spline.f":565 127 {*movsf_internal}
     (nil))
(insn 428 427 429 8 (set (reg:SF 284 [ _198 ])
        (plus:SF (reg:SF 533)
            (reg:SF 533))) "../src/spline.f":565 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 533)
        (nil)))
(insn 429 428 430 8 (set (reg:SF 534)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -60 [0xffffffffffffffc4])) [3 t+0 S4 A32])) "../src/spline.f":565 127 {*movsf_internal}
     (nil))
(insn 430 429 431 8 (set (reg:SF 535)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC0") [flags 0x2]) [3  S4 A32])) "../src/spline.f":565 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 3.0e+0 [0x0.cp+2])
        (nil)))
(insn 431 430 432 8 (set (reg:SF 285 [ _199 ])
        (mult:SF (reg:SF 534)
            (reg:SF 535))) "../src/spline.f":565 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 535)
        (expr_list:REG_DEAD (reg:SF 534)
            (nil))))
(insn 432 431 433 8 (set (reg:SF 286 [ _200 ])
        (mult:SF (reg:SF 285 [ _199 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -112 [0xffffffffffffff90])) [3 f3+0 S4 A32]))) "../src/spline.f":565 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 285 [ _199 ])
        (nil)))
(insn 433 432 434 8 (set (reg:SF 287 [ _201 ])
        (plus:SF (reg:SF 284 [ _198 ])
            (reg:SF 286 [ _200 ]))) "../src/spline.f":565 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 286 [ _200 ])
        (expr_list:REG_DEAD (reg:SF 284 [ _198 ])
            (nil))))
(insn 434 433 435 8 (set (reg:SF 288 [ _202 ])
        (reg:SF 287 [ _201 ])) "../src/spline.f":565 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 287 [ _201 ])
        (nil)))
(insn 435 434 436 8 (set (reg:SF 289 [ _203 ])
        (mult:SF (reg:SF 288 [ _202 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -60 [0xffffffffffffffc4])) [3 t+0 S4 A32]))) "../src/spline.f":565 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 288 [ _202 ])
        (nil)))
(insn 436 435 437 8 (set (reg:SF 537)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -104 [0xffffffffffffff98])) [3 f1+0 S4 A32])) "../src/spline.f":565 127 {*movsf_internal}
     (nil))
(insn 437 436 438 8 (set (reg:SF 536)
        (plus:SF (reg:SF 537)
            (reg:SF 289 [ _203 ]))) "../src/spline.f":565 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 537)
        (expr_list:REG_DEAD (reg:SF 289 [ _203 ])
            (nil))))
(insn 438 437 439 8 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [3 xd+0 S4 A32])
        (reg:SF 536)) "../src/spline.f":565 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 536)
        (nil)))
(insn 439 438 440 8 (set (reg:SF 538)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -108 [0xffffffffffffff94])) [3 f2+0 S4 A32])) "../src/spline.f":566 127 {*movsf_internal}
     (nil))
(insn 440 439 441 8 (set (reg:SF 290 [ _204 ])
        (plus:SF (reg:SF 538)
            (reg:SF 538))) "../src/spline.f":566 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 538)
        (nil)))
(insn 441 440 442 8 (set (reg:SF 539)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -60 [0xffffffffffffffc4])) [3 t+0 S4 A32])) "../src/spline.f":566 127 {*movsf_internal}
     (nil))
(insn 442 441 443 8 (set (reg:SF 540)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC1") [flags 0x2]) [3  S4 A32])) "../src/spline.f":566 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 6.0e+0 [0x0.cp+3])
        (nil)))
(insn 443 442 444 8 (set (reg:SF 291 [ _205 ])
        (mult:SF (reg:SF 539)
            (reg:SF 540))) "../src/spline.f":566 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 540)
        (expr_list:REG_DEAD (reg:SF 539)
            (nil))))
(insn 444 443 445 8 (set (reg:SF 292 [ _206 ])
        (mult:SF (reg:SF 291 [ _205 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -112 [0xffffffffffffff90])) [3 f3+0 S4 A32]))) "../src/spline.f":566 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 291 [ _205 ])
        (nil)))
(insn 445 444 446 8 (set (reg:SF 541)
        (plus:SF (reg:SF 290 [ _204 ])
            (reg:SF 292 [ _206 ]))) "../src/spline.f":566 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 292 [ _206 ])
        (expr_list:REG_DEAD (reg:SF 290 [ _204 ])
            (nil))))
(insn 446 445 447 8 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -76 [0xffffffffffffffb4])) [3 xdd+0 S4 A32])
        (reg:SF 541)) "../src/spline.f":566 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 541)
        (nil)))
(insn 447 446 448 8 (set (reg:SF 543)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -112 [0xffffffffffffff90])) [3 f3+0 S4 A32])) "../src/spline.f":567 127 {*movsf_internal}
     (nil))
(insn 448 447 449 8 (set (reg:SF 544)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC1") [flags 0x2]) [3  S4 A32])) "../src/spline.f":567 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 6.0e+0 [0x0.cp+3])
        (nil)))
(insn 449 448 450 8 (set (reg:SF 542)
        (mult:SF (reg:SF 543)
            (reg:SF 544))) "../src/spline.f":567 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 544)
        (expr_list:REG_DEAD (reg:SF 543)
            (nil))))
(insn 450 449 451 8 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [3 xddd+0 S4 A32])
        (reg:SF 542)) "../src/spline.f":567 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 542)
        (nil)))
(insn 451 450 452 8 (set (reg:SI 545)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":570 82 {*movsi_internal}
     (nil))
(insn 452 451 453 8 (parallel [
            (set (reg:SI 293 [ _207 ])
                (plus:SI (reg:SI 545)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":570 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 545)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff]))
                (nil)))))
(insn 453 452 454 8 (set (reg:DI 294 [ _208 ])
        (sign_extend:DI (reg:SI 293 [ _207 ]))) "../src/spline.f":570 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 293 [ _207 ])
        (nil)))
(insn 454 453 455 8 (parallel [
            (set (reg:DI 295 [ _209 ])
                (plus:DI (reg:DI 294 [ _208 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":570 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 294 [ _208 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 455 454 456 8 (set (reg/f:DI 546)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -200 [0xffffffffffffff38])) [5 ys+0 S8 A64])) "../src/spline.f":570 81 {*movdi_internal}
     (nil))
(insn 456 455 457 8 (set (reg:SF 296 [ _210 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 295 [ _209 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 546)) [3 *ys_331(D) S4 A32])) "../src/spline.f":570 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 546)
        (expr_list:REG_DEAD (reg:DI 295 [ _209 ])
            (nil))))
(insn 457 456 458 8 (set (reg:SF 548)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [3 ds+0 S4 A32])) "../src/spline.f":570 127 {*movsf_internal}
     (nil))
(insn 458 457 459 8 (set (reg:SF 547)
        (mult:SF (reg:SF 548)
            (reg:SF 296 [ _210 ]))) "../src/spline.f":570 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 548)
        (expr_list:REG_DEAD (reg:SF 296 [ _210 ])
            (nil))))
(insn 459 458 460 8 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -116 [0xffffffffffffff8c])) [3 g1+0 S4 A32])
        (reg:SF 547)) "../src/spline.f":570 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 547)
        (nil)))
(insn 460 459 461 8 (set (reg:SI 549)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":571 82 {*movsi_internal}
     (nil))
(insn 461 460 462 8 (set (reg:DI 297 [ _211 ])
        (sign_extend:DI (reg:SI 549))) "../src/spline.f":571 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 549)
        (nil)))
(insn 462 461 463 8 (parallel [
            (set (reg:DI 298 [ _212 ])
                (plus:DI (reg:DI 297 [ _211 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":571 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 297 [ _211 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 463 462 464 8 (set (reg/f:DI 550)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -192 [0xffffffffffffff40])) [5 y+0 S8 A64])) "../src/spline.f":571 81 {*movdi_internal}
     (nil))
(insn 464 463 465 8 (set (reg:SF 299 [ _213 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 298 [ _212 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 550)) [3 *y_332(D) S4 A32])) "../src/spline.f":571 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 550)
        (expr_list:REG_DEAD (reg:DI 298 [ _212 ])
            (nil))))
(insn 465 464 466 8 (set (reg:SI 551)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":571 82 {*movsi_internal}
     (nil))
(insn 466 465 467 8 (parallel [
            (set (reg:SI 300 [ _214 ])
                (plus:SI (reg:SI 551)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":571 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 551)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff]))
                (nil)))))
(insn 467 466 468 8 (set (reg:DI 301 [ _215 ])
        (sign_extend:DI (reg:SI 300 [ _214 ]))) "../src/spline.f":571 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 300 [ _214 ])
        (nil)))
(insn 468 467 469 8 (parallel [
            (set (reg:DI 302 [ _216 ])
                (plus:DI (reg:DI 301 [ _215 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":571 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 301 [ _215 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 469 468 470 8 (set (reg/f:DI 552)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -192 [0xffffffffffffff40])) [5 y+0 S8 A64])) "../src/spline.f":571 81 {*movdi_internal}
     (nil))
(insn 470 469 471 8 (set (reg:SF 303 [ _217 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 302 [ _216 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 552)) [3 *y_332(D) S4 A32])) "../src/spline.f":571 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 552)
        (expr_list:REG_DEAD (reg:DI 302 [ _216 ])
            (nil))))
(insn 471 470 472 8 (set (reg:SF 304 [ _218 ])
        (minus:SF (reg:SF 299 [ _213 ])
            (reg:SF 303 [ _217 ]))) "../src/spline.f":571 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 303 [ _217 ])
        (expr_list:REG_DEAD (reg:SF 299 [ _213 ])
            (nil))))
(insn 472 471 473 8 (set (reg:SF 305 [ _219 ])
        (reg:SF 304 [ _218 ])) "../src/spline.f":571 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 304 [ _218 ])
        (nil)))
(insn 473 472 474 8 (set (reg:SF 553)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC0") [flags 0x2]) [3  S4 A32])) "../src/spline.f":571 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 3.0e+0 [0x0.cp+2])
        (nil)))
(insn 474 473 475 8 (set (reg:SF 306 [ _220 ])
        (mult:SF (reg:SF 305 [ _219 ])
            (reg:SF 553))) "../src/spline.f":571 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 553)
        (expr_list:REG_DEAD (reg:SF 305 [ _219 ])
            (nil))))
(insn 475 474 476 8 (set (reg:SI 554)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":571 82 {*movsi_internal}
     (nil))
(insn 476 475 477 8 (parallel [
            (set (reg:SI 307 [ _221 ])
                (plus:SI (reg:SI 554)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":571 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 554)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff]))
                (nil)))))
(insn 477 476 478 8 (set (reg:DI 308 [ _222 ])
        (sign_extend:DI (reg:SI 307 [ _221 ]))) "../src/spline.f":571 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 307 [ _221 ])
        (nil)))
(insn 478 477 479 8 (parallel [
            (set (reg:DI 309 [ _223 ])
                (plus:DI (reg:DI 308 [ _222 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":571 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 308 [ _222 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 479 478 480 8 (set (reg/f:DI 555)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -200 [0xffffffffffffff38])) [5 ys+0 S8 A64])) "../src/spline.f":571 81 {*movdi_internal}
     (nil))
(insn 480 479 481 8 (set (reg:SF 310 [ _224 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 309 [ _223 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 555)) [3 *ys_331(D) S4 A32])) "../src/spline.f":571 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 555)
        (expr_list:REG_DEAD (reg:DI 309 [ _223 ])
            (nil))))
(insn 481 480 482 8 (set (reg:SF 311 [ _225 ])
        (plus:SF (reg:SF 310 [ _224 ])
            (reg:SF 310 [ _224 ]))) "../src/spline.f":571 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 310 [ _224 ])
        (nil)))
(insn 482 481 483 8 (set (reg:SI 556)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":571 82 {*movsi_internal}
     (nil))
(insn 483 482 484 8 (set (reg:DI 312 [ _226 ])
        (sign_extend:DI (reg:SI 556))) "../src/spline.f":571 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 556)
        (nil)))
(insn 484 483 485 8 (parallel [
            (set (reg:DI 313 [ _227 ])
                (plus:DI (reg:DI 312 [ _226 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":571 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 312 [ _226 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 485 484 486 8 (set (reg/f:DI 557)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -200 [0xffffffffffffff38])) [5 ys+0 S8 A64])) "../src/spline.f":571 81 {*movdi_internal}
     (nil))
(insn 486 485 487 8 (set (reg:SF 314 [ _228 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 313 [ _227 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 557)) [3 *ys_331(D) S4 A32])) "../src/spline.f":571 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 557)
        (expr_list:REG_DEAD (reg:DI 313 [ _227 ])
            (nil))))
(insn 487 486 488 8 (set (reg:SF 315 [ _229 ])
        (plus:SF (reg:SF 311 [ _225 ])
            (reg:SF 314 [ _228 ]))) "../src/spline.f":571 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 314 [ _228 ])
        (expr_list:REG_DEAD (reg:SF 311 [ _225 ])
            (nil))))
(insn 488 487 489 8 (set (reg:SF 316 [ _230 ])
        (reg:SF 315 [ _229 ])) "../src/spline.f":571 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 315 [ _229 ])
        (nil)))
(insn 489 488 490 8 (set (reg:SF 317 [ _231 ])
        (mult:SF (reg:SF 316 [ _230 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -56 [0xffffffffffffffc8])) [3 ds+0 S4 A32]))) "../src/spline.f":571 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 316 [ _230 ])
        (nil)))
(insn 490 489 491 8 (set (reg:SF 558)
        (minus:SF (reg:SF 306 [ _220 ])
            (reg:SF 317 [ _231 ]))) "../src/spline.f":571 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 317 [ _231 ])
        (expr_list:REG_DEAD (reg:SF 306 [ _220 ])
            (nil))))
(insn 491 490 492 8 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -120 [0xffffffffffffff88])) [3 g2+0 S4 A32])
        (reg:SF 558)) "../src/spline.f":571 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 558)
        (nil)))
(insn 492 491 493 8 (set (reg:SI 559)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":572 82 {*movsi_internal}
     (nil))
(insn 493 492 494 8 (parallel [
            (set (reg:SI 318 [ _232 ])
                (plus:SI (reg:SI 559)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":572 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 559)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff]))
                (nil)))))
(insn 494 493 495 8 (set (reg:DI 319 [ _233 ])
        (sign_extend:DI (reg:SI 318 [ _232 ]))) "../src/spline.f":572 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 318 [ _232 ])
        (nil)))
(insn 495 494 496 8 (parallel [
            (set (reg:DI 320 [ _234 ])
                (plus:DI (reg:DI 319 [ _233 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":572 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 319 [ _233 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 496 495 497 8 (set (reg/f:DI 560)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -200 [0xffffffffffffff38])) [5 ys+0 S8 A64])) "../src/spline.f":572 81 {*movdi_internal}
     (nil))
(insn 497 496 498 8 (set (reg:SF 321 [ _235 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 320 [ _234 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 560)) [3 *ys_331(D) S4 A32])) "../src/spline.f":572 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 560)
        (expr_list:REG_DEAD (reg:DI 320 [ _234 ])
            (nil))))
(insn 498 497 499 8 (set (reg:SI 561)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":572 82 {*movsi_internal}
     (nil))
(insn 499 498 500 8 (set (reg:DI 322 [ _236 ])
        (sign_extend:DI (reg:SI 561))) "../src/spline.f":572 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 561)
        (nil)))
(insn 500 499 501 8 (parallel [
            (set (reg:DI 323 [ _237 ])
                (plus:DI (reg:DI 322 [ _236 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":572 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 322 [ _236 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 501 500 502 8 (set (reg/f:DI 562)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -200 [0xffffffffffffff38])) [5 ys+0 S8 A64])) "../src/spline.f":572 81 {*movdi_internal}
     (nil))
(insn 502 501 503 8 (set (reg:SF 324 [ _238 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 323 [ _237 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 562)) [3 *ys_331(D) S4 A32])) "../src/spline.f":572 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 562)
        (expr_list:REG_DEAD (reg:DI 323 [ _237 ])
            (nil))))
(insn 503 502 504 8 (set (reg:SF 325 [ _239 ])
        (plus:SF (reg:SF 321 [ _235 ])
            (reg:SF 324 [ _238 ]))) "../src/spline.f":572 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 324 [ _238 ])
        (expr_list:REG_DEAD (reg:SF 321 [ _235 ])
            (nil))))
(insn 504 503 505 8 (set (reg:SF 326 [ _240 ])
        (reg:SF 325 [ _239 ])) "../src/spline.f":572 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 325 [ _239 ])
        (nil)))
(insn 505 504 506 8 (set (reg:SF 327 [ _241 ])
        (mult:SF (reg:SF 326 [ _240 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -56 [0xffffffffffffffc8])) [3 ds+0 S4 A32]))) "../src/spline.f":572 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 326 [ _240 ])
        (nil)))
(insn 506 505 507 8 (set (reg:SI 563)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":572 82 {*movsi_internal}
     (nil))
(insn 507 506 508 8 (set (reg:DI 328 [ _242 ])
        (sign_extend:DI (reg:SI 563))) "../src/spline.f":572 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 563)
        (nil)))
(insn 508 507 509 8 (parallel [
            (set (reg:DI 329 [ _243 ])
                (plus:DI (reg:DI 328 [ _242 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":572 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 328 [ _242 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 509 508 510 8 (set (reg/f:DI 564)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -192 [0xffffffffffffff40])) [5 y+0 S8 A64])) "../src/spline.f":572 81 {*movdi_internal}
     (nil))
(insn 510 509 511 8 (set (reg:SF 330 [ _244 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 329 [ _243 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 564)) [3 *y_332(D) S4 A32])) "../src/spline.f":572 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 564)
        (expr_list:REG_DEAD (reg:DI 329 [ _243 ])
            (nil))))
(insn 511 510 512 8 (set (reg:SI 565)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":572 82 {*movsi_internal}
     (nil))
(insn 512 511 513 8 (parallel [
            (set (reg:SI 331 [ _245 ])
                (plus:SI (reg:SI 565)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":572 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 565)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff]))
                (nil)))))
(insn 513 512 514 8 (set (reg:DI 332 [ _246 ])
        (sign_extend:DI (reg:SI 331 [ _245 ]))) "../src/spline.f":572 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 331 [ _245 ])
        (nil)))
(insn 514 513 515 8 (parallel [
            (set (reg:DI 333 [ _247 ])
                (plus:DI (reg:DI 332 [ _246 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":572 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 332 [ _246 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 515 514 516 8 (set (reg/f:DI 566)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -192 [0xffffffffffffff40])) [5 y+0 S8 A64])) "../src/spline.f":572 81 {*movdi_internal}
     (nil))
(insn 516 515 517 8 (set (reg:SF 334 [ _248 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 333 [ _247 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 566)) [3 *y_332(D) S4 A32])) "../src/spline.f":572 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 566)
        (expr_list:REG_DEAD (reg:DI 333 [ _247 ])
            (nil))))
(insn 517 516 518 8 (set (reg:SF 335 [ _249 ])
        (minus:SF (reg:SF 330 [ _244 ])
            (reg:SF 334 [ _248 ]))) "../src/spline.f":572 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 334 [ _248 ])
        (expr_list:REG_DEAD (reg:SF 330 [ _244 ])
            (nil))))
(insn 518 517 519 8 (set (reg:SF 336 [ _250 ])
        (reg:SF 335 [ _249 ])) "../src/spline.f":572 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 335 [ _249 ])
        (nil)))
(insn 519 518 520 8 (set (reg:SF 337 [ _251 ])
        (plus:SF (reg:SF 336 [ _250 ])
            (reg:SF 336 [ _250 ]))) "../src/spline.f":572 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 336 [ _250 ])
        (nil)))
(insn 520 519 521 8 (set (reg:SF 567)
        (minus:SF (reg:SF 327 [ _241 ])
            (reg:SF 337 [ _251 ]))) "../src/spline.f":572 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 337 [ _251 ])
        (expr_list:REG_DEAD (reg:SF 327 [ _241 ])
            (nil))))
(insn 521 520 522 8 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -124 [0xffffffffffffff84])) [3 g3+0 S4 A32])
        (reg:SF 567)) "../src/spline.f":572 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 567)
        (nil)))
(insn 522 521 523 8 (set (reg:SF 568)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -120 [0xffffffffffffff88])) [3 g2+0 S4 A32])) "../src/spline.f":574 127 {*movsf_internal}
     (nil))
(insn 523 522 524 8 (set (reg:SF 338 [ _252 ])
        (plus:SF (reg:SF 568)
            (reg:SF 568))) "../src/spline.f":574 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 568)
        (nil)))
(insn 524 523 525 8 (set (reg:SF 569)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -60 [0xffffffffffffffc4])) [3 t+0 S4 A32])) "../src/spline.f":574 127 {*movsf_internal}
     (nil))
(insn 525 524 526 8 (set (reg:SF 570)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC0") [flags 0x2]) [3  S4 A32])) "../src/spline.f":574 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 3.0e+0 [0x0.cp+2])
        (nil)))
(insn 526 525 527 8 (set (reg:SF 339 [ _253 ])
        (mult:SF (reg:SF 569)
            (reg:SF 570))) "../src/spline.f":574 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 570)
        (expr_list:REG_DEAD (reg:SF 569)
            (nil))))
(insn 527 526 528 8 (set (reg:SF 340 [ _254 ])
        (mult:SF (reg:SF 339 [ _253 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -124 [0xffffffffffffff84])) [3 g3+0 S4 A32]))) "../src/spline.f":574 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 339 [ _253 ])
        (nil)))
(insn 528 527 529 8 (set (reg:SF 341 [ _255 ])
        (plus:SF (reg:SF 338 [ _252 ])
            (reg:SF 340 [ _254 ]))) "../src/spline.f":574 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 340 [ _254 ])
        (expr_list:REG_DEAD (reg:SF 338 [ _252 ])
            (nil))))
(insn 529 528 530 8 (set (reg:SF 342 [ _256 ])
        (reg:SF 341 [ _255 ])) "../src/spline.f":574 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 341 [ _255 ])
        (nil)))
(insn 530 529 531 8 (set (reg:SF 343 [ _257 ])
        (mult:SF (reg:SF 342 [ _256 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -60 [0xffffffffffffffc4])) [3 t+0 S4 A32]))) "../src/spline.f":574 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 342 [ _256 ])
        (nil)))
(insn 531 530 532 8 (set (reg:SF 572)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -116 [0xffffffffffffff8c])) [3 g1+0 S4 A32])) "../src/spline.f":574 127 {*movsf_internal}
     (nil))
(insn 532 531 533 8 (set (reg:SF 571)
        (plus:SF (reg:SF 572)
            (reg:SF 343 [ _257 ]))) "../src/spline.f":574 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 572)
        (expr_list:REG_DEAD (reg:SF 343 [ _257 ])
            (nil))))
(insn 533 532 534 8 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -92 [0xffffffffffffffa4])) [3 yd+0 S4 A32])
        (reg:SF 571)) "../src/spline.f":574 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 571)
        (nil)))
(insn 534 533 535 8 (set (reg:SF 573)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -120 [0xffffffffffffff88])) [3 g2+0 S4 A32])) "../src/spline.f":575 127 {*movsf_internal}
     (nil))
(insn 535 534 536 8 (set (reg:SF 344 [ _258 ])
        (plus:SF (reg:SF 573)
            (reg:SF 573))) "../src/spline.f":575 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 573)
        (nil)))
(insn 536 535 537 8 (set (reg:SF 574)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -60 [0xffffffffffffffc4])) [3 t+0 S4 A32])) "../src/spline.f":575 127 {*movsf_internal}
     (nil))
(insn 537 536 538 8 (set (reg:SF 575)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC1") [flags 0x2]) [3  S4 A32])) "../src/spline.f":575 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 6.0e+0 [0x0.cp+3])
        (nil)))
(insn 538 537 539 8 (set (reg:SF 345 [ _259 ])
        (mult:SF (reg:SF 574)
            (reg:SF 575))) "../src/spline.f":575 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 575)
        (expr_list:REG_DEAD (reg:SF 574)
            (nil))))
(insn 539 538 540 8 (set (reg:SF 346 [ _260 ])
        (mult:SF (reg:SF 345 [ _259 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -124 [0xffffffffffffff84])) [3 g3+0 S4 A32]))) "../src/spline.f":575 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 345 [ _259 ])
        (nil)))
(insn 540 539 541 8 (set (reg:SF 576)
        (plus:SF (reg:SF 344 [ _258 ])
            (reg:SF 346 [ _260 ]))) "../src/spline.f":575 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 346 [ _260 ])
        (expr_list:REG_DEAD (reg:SF 344 [ _258 ])
            (nil))))
(insn 541 540 542 8 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [3 ydd+0 S4 A32])
        (reg:SF 576)) "../src/spline.f":575 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 576)
        (nil)))
(insn 542 541 543 8 (set (reg:SF 578)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -124 [0xffffffffffffff84])) [3 g3+0 S4 A32])) "../src/spline.f":576 127 {*movsf_internal}
     (nil))
(insn 543 542 544 8 (set (reg:SF 579)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC1") [flags 0x2]) [3  S4 A32])) "../src/spline.f":576 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 6.0e+0 [0x0.cp+3])
        (nil)))
(insn 544 543 545 8 (set (reg:SF 577)
        (mult:SF (reg:SF 578)
            (reg:SF 579))) "../src/spline.f":576 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 579)
        (expr_list:REG_DEAD (reg:SF 578)
            (nil))))
(insn 545 544 546 8 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -100 [0xffffffffffffff9c])) [3 yddd+0 S4 A32])
        (reg:SF 577)) "../src/spline.f":576 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 577)
        (nil)))
(insn 546 545 547 8 (set (reg:SF 580)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [3 xd+0 S4 A32])) "../src/spline.f":578 127 {*movsf_internal}
     (nil))
(insn 547 546 548 8 (set (reg:SF 347 [ _261 ])
        (mult:SF (reg:SF 580)
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -72 [0xffffffffffffffb8])) [3 xd+0 S4 A32]))) "../src/spline.f":578 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 580)
        (nil)))
(insn 548 547 549 8 (set (reg:SF 581)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -92 [0xffffffffffffffa4])) [3 yd+0 S4 A32])) "../src/spline.f":578 127 {*movsf_internal}
     (nil))
(insn 549 548 550 8 (set (reg:SF 348 [ _262 ])
        (mult:SF (reg:SF 581)
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -92 [0xffffffffffffffa4])) [3 yd+0 S4 A32]))) "../src/spline.f":578 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 581)
        (nil)))
(insn 550 549 551 8 (set (reg:SF 349 [ _263 ])
        (plus:SF (reg:SF 347 [ _261 ])
            (reg:SF 348 [ _262 ]))) "../src/spline.f":578 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 348 [ _262 ])
        (expr_list:REG_DEAD (reg:SF 347 [ _261 ])
            (nil))))
(insn 551 550 552 8 (set (reg:SF 582)
        (sqrt:SF (reg:SF 349 [ _263 ]))) "../src/spline.f":578 836 {*sqrtsf2_sse}
     (expr_list:REG_DEAD (reg:SF 349 [ _263 ])
        (nil)))
(insn 552 551 553 8 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -128 [0xffffffffffffff80])) [3 sqrtb+0 S4 A32])
        (reg:SF 582)) "../src/spline.f":578 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 582)
        (nil)))
(insn 553 552 554 8 (set (reg:SF 390 [ _351 ])
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -128 [0xffffffffffffff80])) [3 sqrtb+0 S4 A32])) "../src/spline.f":579 127 {*movsf_internal}
     (nil))
(insn 554 553 555 8 (set (reg:SI 5 di)
        (const_int 3 [0x3])) "../src/spline.f":579 82 {*movsi_internal}
     (nil))
(insn 555 554 556 8 (set (reg:SF 21 xmm0)
        (reg:SF 390 [ _351 ])) "../src/spline.f":579 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 390 [ _351 ])
        (nil)))
(call_insn/u 556 555 557 8 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("__powisf2") [flags 0x41]) [0  S1 A8])
            (const_int 0 [0]))) "../src/spline.f":579 665 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (use (reg:SI 5 di))
        (expr_list (use (reg:SF 21 xmm0))
            (nil))))
(insn 557 556 558 8 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -132 [0xffffffffffffff7c])) [3 bot+0 S4 A32])
        (reg:SF 21 xmm0)) "../src/spline.f":579 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 21 xmm0)
        (nil)))
(insn 558 557 559 8 (set (reg:SF 583)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -128 [0xffffffffffffff80])) [3 sqrtb+0 S4 A32])) "../src/spline.f":580 127 {*movsf_internal}
     (nil))
(insn 559 558 560 8 (set (reg:SF 584)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC0") [flags 0x2]) [3  S4 A32])) "../src/spline.f":580 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 3.0e+0 [0x0.cp+2])
        (nil)))
(insn 560 559 561 8 (set (reg:SF 350 [ _264 ])
        (mult:SF (reg:SF 583)
            (reg:SF 584))) "../src/spline.f":580 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 584)
        (expr_list:REG_DEAD (reg:SF 583)
            (nil))))
(insn 561 560 562 8 (set (reg:SF 585)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [3 xd+0 S4 A32])) "../src/spline.f":580 127 {*movsf_internal}
     (nil))
(insn 562 561 563 8 (set (reg:SF 351 [ _265 ])
        (mult:SF (reg:SF 585)
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -76 [0xffffffffffffffb4])) [3 xdd+0 S4 A32]))) "../src/spline.f":580 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 585)
        (nil)))
(insn 563 562 564 8 (set (reg:SF 586)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -92 [0xffffffffffffffa4])) [3 yd+0 S4 A32])) "../src/spline.f":580 127 {*movsf_internal}
     (nil))
(insn 564 563 565 8 (set (reg:SF 352 [ _266 ])
        (mult:SF (reg:SF 586)
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -96 [0xffffffffffffffa0])) [3 ydd+0 S4 A32]))) "../src/spline.f":580 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 586)
        (nil)))
(insn 565 564 566 8 (set (reg:SF 353 [ _267 ])
        (plus:SF (reg:SF 351 [ _265 ])
            (reg:SF 352 [ _266 ]))) "../src/spline.f":580 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 352 [ _266 ])
        (expr_list:REG_DEAD (reg:SF 351 [ _265 ])
            (nil))))
(insn 566 565 567 8 (set (reg:SF 354 [ _268 ])
        (reg:SF 353 [ _267 ])) "../src/spline.f":580 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 353 [ _267 ])
        (nil)))
(insn 567 566 568 8 (set (reg:SF 587)
        (mult:SF (reg:SF 350 [ _264 ])
            (reg:SF 354 [ _268 ]))) "../src/spline.f":580 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 354 [ _268 ])
        (expr_list:REG_DEAD (reg:SF 350 [ _264 ])
            (nil))))
(insn 568 567 569 8 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -136 [0xffffffffffffff78])) [3 dbotdt+0 S4 A32])
        (reg:SF 587)) "../src/spline.f":580 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 587)
        (nil)))
(insn 569 568 570 8 (set (reg:SF 588)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [3 xd+0 S4 A32])) "../src/spline.f":582 127 {*movsf_internal}
     (nil))
(insn 570 569 571 8 (set (reg:SF 355 [ _269 ])
        (mult:SF (reg:SF 588)
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -96 [0xffffffffffffffa0])) [3 ydd+0 S4 A32]))) "../src/spline.f":582 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 588)
        (nil)))
(insn 571 570 572 8 (set (reg:SF 589)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -92 [0xffffffffffffffa4])) [3 yd+0 S4 A32])) "../src/spline.f":582 127 {*movsf_internal}
     (nil))
(insn 572 571 573 8 (set (reg:SF 356 [ _270 ])
        (mult:SF (reg:SF 589)
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -76 [0xffffffffffffffb4])) [3 xdd+0 S4 A32]))) "../src/spline.f":582 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 589)
        (nil)))
(insn 573 572 574 8 (set (reg:SF 590)
        (minus:SF (reg:SF 355 [ _269 ])
            (reg:SF 356 [ _270 ]))) "../src/spline.f":582 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 356 [ _270 ])
        (expr_list:REG_DEAD (reg:SF 355 [ _269 ])
            (nil))))
(insn 574 573 575 8 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -140 [0xffffffffffffff74])) [3 top+0 S4 A32])
        (reg:SF 590)) "../src/spline.f":582 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 590)
        (nil)))
(insn 575 574 576 8 (set (reg:SF 591)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [3 xd+0 S4 A32])) "../src/spline.f":583 127 {*movsf_internal}
     (nil))
(insn 576 575 577 8 (set (reg:SF 357 [ _271 ])
        (mult:SF (reg:SF 591)
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -100 [0xffffffffffffff9c])) [3 yddd+0 S4 A32]))) "../src/spline.f":583 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 591)
        (nil)))
(insn 577 576 578 8 (set (reg:SF 592)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -92 [0xffffffffffffffa4])) [3 yd+0 S4 A32])) "../src/spline.f":583 127 {*movsf_internal}
     (nil))
(insn 578 577 579 8 (set (reg:SF 358 [ _272 ])
        (mult:SF (reg:SF 592)
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -80 [0xffffffffffffffb0])) [3 xddd+0 S4 A32]))) "../src/spline.f":583 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 592)
        (nil)))
(insn 579 578 580 8 (set (reg:SF 593)
        (minus:SF (reg:SF 357 [ _271 ])
            (reg:SF 358 [ _272 ]))) "../src/spline.f":583 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 358 [ _272 ])
        (expr_list:REG_DEAD (reg:SF 357 [ _271 ])
            (nil))))
(insn 580 579 581 8 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -144 [0xffffffffffffff70])) [3 dtopdt+0 S4 A32])
        (reg:SF 593)) "../src/spline.f":583 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 593)
        (nil)))
(insn 581 580 582 8 (set (reg:SF 391 [ _356 ])
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -132 [0xffffffffffffff7c])) [3 bot+0 S4 A32])) "../src/spline.f":585 127 {*movsf_internal}
     (nil))
(insn 582 581 583 8 (set (reg:SF 392 [ _357 ])
        (mult:SF (reg:SF 391 [ _356 ])
            (reg:SF 391 [ _356 ]))) "../src/spline.f":585 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 391 [ _356 ])
        (nil)))
(insn 583 582 584 8 (set (reg:SF 594)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -144 [0xffffffffffffff70])) [3 dtopdt+0 S4 A32])) "../src/spline.f":585 127 {*movsf_internal}
     (nil))
(insn 584 583 585 8 (set (reg:SF 359 [ _273 ])
        (mult:SF (reg:SF 594)
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -132 [0xffffffffffffff7c])) [3 bot+0 S4 A32]))) "../src/spline.f":585 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 594)
        (nil)))
(insn 585 584 586 8 (set (reg:SF 595)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -136 [0xffffffffffffff78])) [3 dbotdt+0 S4 A32])) "../src/spline.f":585 127 {*movsf_internal}
     (nil))
(insn 586 585 587 8 (set (reg:SF 360 [ _274 ])
        (mult:SF (reg:SF 595)
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -140 [0xffffffffffffff74])) [3 top+0 S4 A32]))) "../src/spline.f":585 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 595)
        (nil)))
(insn 587 586 588 8 (set (reg:SF 361 [ _275 ])
        (minus:SF (reg:SF 359 [ _273 ])
            (reg:SF 360 [ _274 ]))) "../src/spline.f":585 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 360 [ _274 ])
        (expr_list:REG_DEAD (reg:SF 359 [ _273 ])
            (nil))))
(insn 588 587 589 8 (set (reg:SF 362 [ _276 ])
        (reg:SF 361 [ _275 ])) "../src/spline.f":585 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 361 [ _275 ])
        (nil)))
(insn 589 588 590 8 (set (reg:SF 363 [ _277 ])
        (div:SF (reg:SF 362 [ _276 ])
            (reg:SF 392 [ _357 ]))) "../src/spline.f":585 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 392 [ _357 ])
        (expr_list:REG_DEAD (reg:SF 362 [ _276 ])
            (nil))))
(insn 590 589 591 8 (set (reg:SF 364 [ _278 ])
        (div:SF (reg:SF 363 [ _277 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -56 [0xffffffffffffffc8])) [3 ds+0 S4 A32]))) "../src/spline.f":585 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 363 [ _277 ])
        (nil)))
(insn 591 590 592 8 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -148 [0xffffffffffffff6c])) [3 __result_curvs+0 S4 A32])
        (reg:SF 364 [ _278 ])) "../src/spline.f":585 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 364 [ _278 ])
        (nil)))
(insn 592 591 595 8 (set (reg:SF 393 [ _359 ])
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -148 [0xffffffffffffff6c])) [3 __result_curvs+0 S4 A32])) "../src/spline.f":587 127 {*movsf_internal}
     (nil))
(insn 595 592 599 8 (set (reg:SF 394 [ <retval> ])
        (reg:SF 393 [ _359 ])) 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 393 [ _359 ])
        (nil)))
(insn 599 595 600 8 (set (reg/i:SF 21 xmm0)
        (reg:SF 394 [ <retval> ])) "../src/spline.f":588 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 394 [ <retval> ])
        (nil)))
(insn 600 599 0 8 (use (reg/i:SF 21 xmm0)) "../src/spline.f":588 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0]


;; Function sinvrt (sinvrt_, funcdef_no=12, decl_uid=4109, cgraph_uid=12, symbol_order=12)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 9 n_edges 10 count 9 (    1)
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 8 6 7
;;
;; Loop 1
;;  header 3, latch 5
;;  depth 1, outer 0
;;  nodes: 3 5 4
;; 2 succs { 3 }
;; 3 succs { 8 4 }
;; 4 succs { 7 5 }
;; 5 succs { 3 }
;; 8 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 79.
verify found no changes in insn with uid = 132.
verify found no changes in insn with uid = 137.
verify found no changes in insn with uid = 140.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r161: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r161,l0) best DIREG, allocno GENERAL_REGS
    r160: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r160,l0) best DIREG, allocno GENERAL_REGS
    r159: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r159,l0) best DIREG, allocno GENERAL_REGS
    r158: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r158,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r157: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a5 (r157,l0) best SSE_REGS, allocno SSE_REGS
    r156: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a7 (r156,l0) best SSE_REGS, allocno SSE_REGS
    r155: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a9 (r155,l0) best SSE_REGS, allocno SSE_REGS
    r154: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r154,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r153: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r153,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r152: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r152,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r151: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r151,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r150: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r150,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r149: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a23 (r149,l0) best SSE_REGS, allocno SSE_REGS
    r148: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r148,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r147: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a36 (r147,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r146: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a37 (r146,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r145: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a30 (r145,l0) best DIREG, allocno GENERAL_REGS
    r144: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a31 (r144,l0) best SIREG, allocno GENERAL_REGS
    r143: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a32 (r143,l0) best DREG, allocno GENERAL_REGS
    r142: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a33 (r142,l0) best CREG, allocno GENERAL_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a34 (r141,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a35 (r140,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a42 (r139,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a44 (r138,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a46 (r137,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a50 (r136,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a52 (r135,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a54 (r134,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a58 (r133,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r132: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a60 (r132,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r131: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a62 (r131,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r130: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a38 (r130,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r126: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a41 (r126,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r125: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a43 (r125,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a49 (r121,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r120: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a51 (r120,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a57 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a59 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a4 (r114,l0) best SSE_REGS, allocno SSE_REGS
    r113: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a6 (r113,l0) best SSE_REGS, allocno SSE_REGS
    r112: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a8 (r112,l0) best SSE_REGS, allocno SSE_REGS
    r111: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a10 (r111,l0) best SSE_REGS, allocno SSE_REGS
    r110: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a11 (r110,l0) best SSE_REGS, allocno SSE_REGS
    r109: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a12 (r109,l0) best SSE_REGS, allocno SSE_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a20 (r105,l0) best SSE_REGS, allocno SSE_REGS
    r104: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a21 (r104,l0) best SSE_REGS, allocno SSE_REGS
    r103: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a24 (r103,l0) best SSE_REGS, allocno SSE_REGS
    r102: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a25 (r102,l0) best SSE_REGS, allocno SSE_REGS
    r101: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a26 (r101,l0) best SSE_REGS, allocno SSE_REGS
    r100: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a27 (r100,l0) best SSE_REGS, allocno SSE_REGS
    r99: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a28 (r99,l0) best SSE_REGS, allocno SSE_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a39 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a40 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a45 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a47 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a48 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a53 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a55 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a56 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a61 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r161,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a1(r160,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a2(r159,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a3(r158,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a4(r114,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a5(r157,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a6(r113,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:16
  a7(r156,l0) costs: SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MEM:15
  a8(r112,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 ALL_REGS:29 MEM:8
  a9(r155,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a10(r111,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:9
  a11(r110,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a12(r109,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a13(r154,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a14(r153,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a15(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a16(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a17(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a18(r152,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a19(r151,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a20(r105,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a21(r104,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a22(r150,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a23(r149,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a24(r103,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a25(r102,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 ALL_REGS:29 MEM:9
  a26(r101,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:9
  a27(r100,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a28(r99,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a29(r148,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a30(r145,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a31(r144,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a32(r143,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a33(r142,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a34(r141,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a35(r140,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a36(r147,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:8
  a37(r146,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:8
  a38(r130,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7
  a39(r97,l0) costs: AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:2
  a40(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a41(r126,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a42(r139,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a43(r125,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:38 INT_SSE_REGS:27 ALL_REGS:520 MEM:11
  a44(r138,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:8
  a45(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a46(r137,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a47(r93,l0) costs: AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:2
  a48(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a49(r121,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a50(r136,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a51(r120,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:38 INT_SSE_REGS:27 ALL_REGS:520 MEM:11
  a52(r135,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:8
  a53(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a54(r134,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a55(r89,l0) costs: AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:2
  a56(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a57(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a58(r133,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a59(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:38 INT_SSE_REGS:27 ALL_REGS:520 MEM:11
  a60(r132,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:8
  a61(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a62(r131,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8

   Insn 149(l0): point = 1
   Insn 140(l0): point = 3
   Insn 139(l0): point = 5
   Insn 138(l0): point = 7
   Insn 137(l0): point = 9
   Insn 136(l0): point = 11
   Insn 135(l0): point = 13
   Insn 134(l0): point = 15
   Insn 133(l0): point = 17
   Insn 132(l0): point = 19
   Insn 131(l0): point = 21
   Insn 130(l0): point = 23
   Insn 129(l0): point = 25
   Insn 128(l0): point = 27
   Insn 127(l0): point = 29
   Insn 126(l0): point = 31
   Insn 125(l0): point = 33
   Insn 154(l0): point = 36
   Insn 61(l0): point = 39
   Insn 60(l0): point = 41
   Insn 59(l0): point = 43
   Insn 58(l0): point = 45
   Insn 150(l0): point = 48
   Insn 119(l0): point = 50
   Insn 110(l0): point = 53
   Insn 109(l0): point = 55
   Insn 108(l0): point = 57
   Insn 107(l0): point = 59
   Insn 106(l0): point = 61
   Insn 105(l0): point = 63
   Insn 104(l0): point = 65
   Insn 103(l0): point = 67
   Insn 102(l0): point = 69
   Insn 101(l0): point = 71
   Insn 100(l0): point = 73
   Insn 99(l0): point = 75
   Insn 98(l0): point = 77
   Insn 97(l0): point = 79
   Insn 96(l0): point = 81
   Insn 95(l0): point = 83
   Insn 94(l0): point = 85
   Insn 93(l0): point = 87
   Insn 92(l0): point = 89
   Insn 91(l0): point = 91
   Insn 90(l0): point = 93
   Insn 89(l0): point = 95
   Insn 88(l0): point = 97
   Insn 87(l0): point = 99
   Insn 86(l0): point = 101
   Insn 85(l0): point = 103
   Insn 84(l0): point = 105
   Insn 83(l0): point = 107
   Insn 82(l0): point = 109
   Insn 81(l0): point = 111
   Insn 80(l0): point = 113
   Insn 79(l0): point = 115
   Insn 78(l0): point = 117
   Insn 77(l0): point = 119
   Insn 76(l0): point = 121
   Insn 75(l0): point = 123
   Insn 74(l0): point = 125
   Insn 73(l0): point = 127
   Insn 72(l0): point = 129
   Insn 71(l0): point = 131
   Insn 70(l0): point = 133
   Insn 69(l0): point = 135
   Insn 68(l0): point = 137
   Insn 67(l0): point = 139
   Insn 66(l0): point = 141
   Insn 65(l0): point = 143
   Insn 64(l0): point = 145
   Insn 63(l0): point = 147
   Insn 56(l0): point = 150
   Insn 52(l0): point = 152
   Insn 51(l0): point = 154
   Insn 50(l0): point = 156
   Insn 48(l0): point = 158
   Insn 46(l0): point = 160
   Insn 47(l0): point = 162
   Insn 45(l0): point = 164
   Insn 44(l0): point = 166
   Insn 43(l0): point = 168
   Insn 42(l0): point = 170
   Insn 41(l0): point = 172
   Insn 37(l0): point = 174
   Insn 36(l0): point = 176
   Insn 35(l0): point = 178
   Insn 33(l0): point = 180
   Insn 31(l0): point = 182
   Insn 32(l0): point = 184
   Insn 30(l0): point = 186
   Insn 29(l0): point = 188
   Insn 28(l0): point = 190
   Insn 27(l0): point = 192
   Insn 26(l0): point = 194
   Insn 22(l0): point = 196
   Insn 21(l0): point = 198
   Insn 20(l0): point = 200
   Insn 18(l0): point = 202
   Insn 16(l0): point = 204
   Insn 17(l0): point = 206
   Insn 15(l0): point = 208
   Insn 14(l0): point = 210
   Insn 13(l0): point = 212
   Insn 12(l0): point = 214
   Insn 11(l0): point = 216
   Insn 7(l0): point = 218
   Insn 6(l0): point = 220
   Insn 5(l0): point = 222
   Insn 4(l0): point = 224
   Insn 3(l0): point = 226
   Insn 2(l0): point = 228
 a0(r161): [6..7]
 a1(r160): [12..17]
 a2(r159): [22..23]
 a3(r158): [32..33]
 a4(r114): [56..59]
 a5(r157): [56..57]
 a6(r113): [60..63]
 a7(r156): [60..61]
 a8(r112): [64..67]
 a9(r155): [64..65]
 a10(r111): [68..69]
 a11(r110): [70..71]
 a12(r109): [70..75]
 a13(r154): [72..73]
 a14(r153): [76..77]
 a15(r108): [76..79]
 a16(r107): [80..81]
 a17(r106): [82..83]
 a18(r152): [84..85]
 a19(r151): [88..89]
 a20(r105): [88..91]
 a21(r104): [92..93]
 a22(r150): [94..95]
 a23(r149): [98..99]
 a24(r103): [100..101]
 a25(r102): [100..103]
 a26(r101): [104..105]
 a27(r100): [106..107]
 a28(r99): [106..109]
 a29(r148): [110..111]
 a30(r145): [118..137]
 a31(r144): [120..139]
 a32(r143): [122..141]
 a33(r142): [124..143]
 a34(r141): [126..145]
 a35(r140): [128..147]
 a36(r147): [130..131]
 a37(r146): [134..135]
 a38(r130): [42..43]
 a39(r97 [0]): [153..230]
 a39(r97 [1]): [152..230]
 a40(r96): [155..156]
 a41(r126): [157..158]
 a42(r139): [159..162]
 a43(r125): [159..164]
 a44(r138): [167..168]
 a45(r95): [169..170]
 a46(r137): [171..172]
 a47(r93 [0]): [175..230]
 a47(r93 [1]): [174..230]
 a48(r92): [177..178]
 a49(r121): [179..180]
 a50(r136): [181..184]
 a51(r120): [181..186]
 a52(r135): [189..190]
 a53(r91): [191..192]
 a54(r134): [193..194]
 a55(r89 [0]): [197..230]
 a55(r89 [1]): [196..230]
 a56(r88): [199..200]
 a57(r116): [201..202]
 a58(r133): [203..206]
 a59(r115): [203..208]
 a60(r132): [211..212]
 a61(r87): [213..214]
 a62(r131): [215..216]
Compressing live ranges: from 231 to 86 - 37%
Ranges after the compression:
 a0(r161): [0..1]
 a1(r160): [2..3]
 a2(r159): [4..5]
 a3(r158): [6..7]
 a4(r114): [10..11]
 a5(r157): [10..11]
 a6(r113): [12..13]
 a7(r156): [12..13]
 a8(r112): [14..15]
 a9(r155): [14..15]
 a10(r111): [16..17]
 a11(r110): [18..19]
 a12(r109): [18..21]
 a13(r154): [20..21]
 a14(r153): [22..23]
 a15(r108): [22..23]
 a16(r107): [24..25]
 a17(r106): [26..27]
 a18(r152): [28..29]
 a19(r151): [30..31]
 a20(r105): [30..31]
 a21(r104): [32..33]
 a22(r150): [34..35]
 a23(r149): [36..37]
 a24(r103): [38..39]
 a25(r102): [38..39]
 a26(r101): [40..41]
 a27(r100): [42..43]
 a28(r99): [42..43]
 a29(r148): [44..45]
 a30(r145): [46..49]
 a31(r144): [46..49]
 a32(r143): [46..49]
 a33(r142): [46..49]
 a34(r141): [46..49]
 a35(r140): [46..49]
 a36(r147): [46..47]
 a37(r146): [48..49]
 a38(r130): [8..9]
 a39(r97 [0]): [50..85]
 a39(r97 [1]): [50..85]
 a40(r96): [50..51]
 a41(r126): [52..53]
 a42(r139): [54..55]
 a43(r125): [54..55]
 a44(r138): [56..57]
 a45(r95): [58..59]
 a46(r137): [60..61]
 a47(r93 [0]): [62..85]
 a47(r93 [1]): [62..85]
 a48(r92): [62..63]
 a49(r121): [64..65]
 a50(r136): [66..67]
 a51(r120): [66..67]
 a52(r135): [68..69]
 a53(r91): [70..71]
 a54(r134): [72..73]
 a55(r89 [0]): [74..85]
 a55(r89 [1]): [74..85]
 a56(r88): [74..75]
 a57(r116): [76..77]
 a58(r133): [78..79]
 a59(r115): [78..79]
 a60(r132): [80..81]
 a61(r87): [82..83]
 a62(r131): [84..85]
  regions=1, blocks=9, points=86
    allocnos=63 (big 3), copies=0, conflicts=0, ranges=66
Disposition:
   61:r87  l0     0   56:r88  l0     0   55:r89  l0    43   53:r91  l0     0
   48:r92  l0     0   47:r93  l0    41   45:r95  l0     0   40:r96  l0     0
   39:r97  l0    39   28:r99  l0    21   27:r100 l0    22   26:r101 l0    21
   25:r102 l0    22   24:r103 l0    21   21:r104 l0    21   20:r105 l0    21
   17:r106 l0     0   16:r107 l0     0   15:r108 l0     1   12:r109 l0    21
   11:r110 l0    22   10:r111 l0    21    8:r112 l0    22    6:r113 l0    21
    4:r114 l0    21   59:r115 l0     0   57:r116 l0     0   51:r120 l0     0
   49:r121 l0     0   43:r125 l0     0   41:r126 l0     0   38:r130 l0     0
   62:r131 l0     0   60:r132 l0     0   58:r133 l0     1   54:r134 l0     0
   52:r135 l0     0   50:r136 l0     1   46:r137 l0     0   44:r138 l0     0
   42:r139 l0     1   35:r140 l0    38   34:r141 l0    37   33:r142 l0     2
   32:r143 l0     1   31:r144 l0     4   30:r145 l0     0   37:r146 l0     5
   36:r147 l0     5   29:r148 l0     0   23:r149 l0    21   22:r150 l0     0
   19:r151 l0     0   18:r152 l0     0   14:r153 l0     0   13:r154 l0     0
    9:r155 l0    21    7:r156 l0    22    5:r157 l0    22    3:r158 l0     0
    2:r159 l0     0    1:r160 l0     0    0:r161 l0     0
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


sinvrt

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 37 [r8] 38 [r9]
;;  ref usage 	r0={5d} r1={7d,3u} r2={6d,2u} r4={7d,3u} r5={9d,5u} r6={1d,8u} r7={4d,16u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r16={1d,7u} r17={20d,6u} r18={4d} r19={4d} r20={1d,53u} r21={5d} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={5d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={6d,2u} r38={6d,2u} r39={4d} r40={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r87={1d,1u} r88={1d,1u} r89={2d,2u} r91={1d,1u} r92={1d,1u} r93={2d,2u} r95={1d,1u} r96={1d,1u} r97={2d,2u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u,1e} r114={1d,1u} r115={1d,2u} r116={1d,1u} r120={1d,2u} r121={1d,1u} r125={1d,2u} r126={1d,1u} r130={1d,1u} r131={1d,1u} r132={1d,1u} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} 
;;    total ref usage 580{403d,176u,1e} in 112{108 regular + 4 call} insns.
(note 1 0 9 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9] 89 93 97
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9] 89 93 97
;; lr  def 	 17 [flags] 87 88 91 92 95 96 115 116 120 121 125 126 131 132 133 134 135 136 137 138 139
(note 9 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 9 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -536 [0xfffffffffffffde8])) [4 si+0 S8 A64])
        (reg:DI 5 di [ si ])) "../src/spline.f":591 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ si ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -544 [0xfffffffffffffde0])) [4 xi+0 S8 A64])
        (reg:DI 4 si [ xi ])) "../src/spline.f":591 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ xi ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -552 [0xfffffffffffffdd8])) [5 x+0 S8 A64])
        (reg:DI 1 dx [ x ])) "../src/spline.f":591 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ x ])
        (nil)))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -560 [0xfffffffffffffdd0])) [5 xs+0 S8 A64])
        (reg:DI 2 cx [ xs ])) "../src/spline.f":591 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [ xs ])
        (nil)))
(insn 6 5 7 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -568 [0xfffffffffffffdc8])) [5 s+0 S8 A64])
        (reg:DI 37 r8 [ s ])) "../src/spline.f":591 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 37 r8 [ s ])
        (nil)))
(insn 7 6 8 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -576 [0xfffffffffffffdc0])) [6 n+0 S8 A64])
        (reg:DI 38 r9 [ n ])) "../src/spline.f":591 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 38 r9 [ n ])
        (nil)))
(note 8 7 11 2 NOTE_INSN_FUNCTION_BEG)
(insn 11 8 12 2 (set (reg/f:DI 131)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -576 [0xfffffffffffffdc0])) [6 n+0 S8 A64])) "../src/spline.f":591 81 {*movdi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:SI 87 [ _1 ])
        (mem:SI (reg/f:DI 131) [1 *n_33(D)+0 S4 A32])) "../src/spline.f":591 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 131)
        (nil)))
(insn 13 12 14 2 (set (reg:DI 132)
        (sign_extend:DI (reg:SI 87 [ _1 ]))) "../src/spline.f":591 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 87 [ _1 ])
        (nil)))
(insn 14 13 15 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 ubound.82+0 S8 A64])
        (reg:DI 132)) "../src/spline.f":591 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 132)
        (nil)))
(insn 15 14 17 2 (set (reg:DI 115 [ size.83_35 ])
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 ubound.82+0 S8 A64])) "../src/spline.f":591 81 {*movdi_internal}
     (nil))
(insn 17 15 16 2 (set (reg:DI 133)
        (const_int 0 [0])) "../src/spline.f":591 81 {*movdi_internal}
     (nil))
(insn 16 17 18 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 115 [ size.83_35 ])
            (const_int 0 [0]))) "../src/spline.f":591 4 {*cmpdi_ccno_1}
     (nil))
(insn 18 16 20 2 (set (reg:DI 116 [ size.83_36 ])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 115 [ size.83_35 ])
            (reg:DI 133))) "../src/spline.f":591 967 {*movdicc_noc}
     (expr_list:REG_DEAD (reg:DI 133)
        (expr_list:REG_DEAD (reg:DI 115 [ size.83_35 ])
            (expr_list:REG_DEAD (reg:CCGOC 17 flags)
                (nil)))))
(insn 20 18 21 2 (set (reg:DI 88 [ size.232_2 ])
        (reg:DI 116 [ size.83_36 ])) "../src/spline.f":591 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 116 [ size.83_36 ])
        (nil)))
(insn 21 20 22 2 (set (subreg:DI (reg:TI 89 [ _3 ]) 0)
        (reg:DI 88 [ size.232_2 ])) "../src/spline.f":591 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88 [ size.232_2 ])
        (nil)))
(insn 22 21 26 2 (set (subreg:DI (reg:TI 89 [ _3 ]) 8)
        (const_int 0 [0])) "../src/spline.f":591 81 {*movdi_internal}
     (expr_list:REG_UNUSED (reg:TI 89 [ _3 ])
        (nil)))
(insn 26 22 27 2 (set (reg/f:DI 134)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -576 [0xfffffffffffffdc0])) [6 n+0 S8 A64])) "../src/spline.f":591 81 {*movdi_internal}
     (nil))
(insn 27 26 28 2 (set (reg:SI 91 [ _5 ])
        (mem:SI (reg/f:DI 134) [1 *n_33(D)+0 S4 A32])) "../src/spline.f":591 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 134)
        (nil)))
(insn 28 27 29 2 (set (reg:DI 135)
        (sign_extend:DI (reg:SI 91 [ _5 ]))) "../src/spline.f":591 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 91 [ _5 ])
        (nil)))
(insn 29 28 30 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [2 ubound.84+0 S8 A64])
        (reg:DI 135)) "../src/spline.f":591 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 135)
        (nil)))
(insn 30 29 32 2 (set (reg:DI 120 [ size.85_41 ])
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [2 ubound.84+0 S8 A64])) "../src/spline.f":591 81 {*movdi_internal}
     (nil))
(insn 32 30 31 2 (set (reg:DI 136)
        (const_int 0 [0])) "../src/spline.f":591 81 {*movdi_internal}
     (nil))
(insn 31 32 33 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 120 [ size.85_41 ])
            (const_int 0 [0]))) "../src/spline.f":591 4 {*cmpdi_ccno_1}
     (nil))
(insn 33 31 35 2 (set (reg:DI 121 [ size.85_42 ])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 120 [ size.85_41 ])
            (reg:DI 136))) "../src/spline.f":591 967 {*movdicc_noc}
     (expr_list:REG_DEAD (reg:DI 136)
        (expr_list:REG_DEAD (reg:DI 120 [ size.85_41 ])
            (expr_list:REG_DEAD (reg:CCGOC 17 flags)
                (nil)))))
(insn 35 33 36 2 (set (reg:DI 92 [ size.234_6 ])
        (reg:DI 121 [ size.85_42 ])) "../src/spline.f":591 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 121 [ size.85_42 ])
        (nil)))
(insn 36 35 37 2 (set (subreg:DI (reg:TI 93 [ _7 ]) 0)
        (reg:DI 92 [ size.234_6 ])) "../src/spline.f":591 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 92 [ size.234_6 ])
        (nil)))
(insn 37 36 41 2 (set (subreg:DI (reg:TI 93 [ _7 ]) 8)
        (const_int 0 [0])) "../src/spline.f":591 81 {*movdi_internal}
     (expr_list:REG_UNUSED (reg:TI 93 [ _7 ])
        (nil)))
(insn 41 37 42 2 (set (reg/f:DI 137)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -576 [0xfffffffffffffdc0])) [6 n+0 S8 A64])) "../src/spline.f":591 81 {*movdi_internal}
     (nil))
(insn 42 41 43 2 (set (reg:SI 95 [ _9 ])
        (mem:SI (reg/f:DI 137) [1 *n_33(D)+0 S4 A32])) "../src/spline.f":591 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 137)
        (nil)))
(insn 43 42 44 2 (set (reg:DI 138)
        (sign_extend:DI (reg:SI 95 [ _9 ]))) "../src/spline.f":591 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 95 [ _9 ])
        (nil)))
(insn 44 43 45 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [2 ubound.80+0 S8 A64])
        (reg:DI 138)) "../src/spline.f":591 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 138)
        (nil)))
(insn 45 44 47 2 (set (reg:DI 125 [ size.81_47 ])
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [2 ubound.80+0 S8 A64])) "../src/spline.f":591 81 {*movdi_internal}
     (nil))
(insn 47 45 46 2 (set (reg:DI 139)
        (const_int 0 [0])) "../src/spline.f":591 81 {*movdi_internal}
     (nil))
(insn 46 47 48 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 125 [ size.81_47 ])
            (const_int 0 [0]))) "../src/spline.f":591 4 {*cmpdi_ccno_1}
     (nil))
(insn 48 46 50 2 (set (reg:DI 126 [ size.81_48 ])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 125 [ size.81_47 ])
            (reg:DI 139))) "../src/spline.f":591 967 {*movdicc_noc}
     (expr_list:REG_DEAD (reg:DI 139)
        (expr_list:REG_DEAD (reg:DI 125 [ size.81_47 ])
            (expr_list:REG_DEAD (reg:CCGOC 17 flags)
                (nil)))))
(insn 50 48 51 2 (set (reg:DI 96 [ size.236_10 ])
        (reg:DI 126 [ size.81_48 ])) "../src/spline.f":591 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 126 [ size.81_48 ])
        (nil)))
(insn 51 50 52 2 (set (subreg:DI (reg:TI 97 [ _11 ]) 0)
        (reg:DI 96 [ size.236_10 ])) "../src/spline.f":591 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 96 [ size.236_10 ])
        (nil)))
(insn 52 51 56 2 (set (subreg:DI (reg:TI 97 [ _11 ]) 8)
        (const_int 0 [0])) "../src/spline.f":591 81 {*movdi_internal}
     (expr_list:REG_UNUSED (reg:TI 97 [ _11 ])
        (nil)))
(insn 56 52 120 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 iter+0 S4 A32])
        (const_int 1 [0x1])) "../src/spline.f":606 82 {*movsi_internal}
     (nil))
;;  succ:       3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 (FALLTHRU)
;;              5 [100.0%] 
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 130
(code_label 120 56 57 3 143 (nil) [1 uses])
(note 57 120 58 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 58 57 59 3 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [1 iter+0 S4 A32])
            (const_int 10 [0xa]))) "../src/spline.f":606 7 {*cmpsi_1}
     (nil))
(insn 59 58 60 3 (set (reg:QI 130 [ _53 ])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "../src/spline.f":606 613 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil)))
(insn 60 59 61 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 130 [ _53 ])
            (const_int 0 [0]))) "../src/spline.f":606 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 130 [ _53 ])
        (nil)))
(jump_insn 61 60 62 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 153)
            (pc))) "../src/spline.f":606 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 153)
;;  succ:       8
;;              4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157
(note 62 61 63 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 63 62 64 4 (parallel [
            (set (reg:DI 140)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -40 [0xffffffffffffffd8])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":607 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 64 63 65 4 (set (reg:DI 141)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -576 [0xfffffffffffffdc0])) [6 n+0 S8 A64])) "../src/spline.f":607 81 {*movdi_internal}
     (nil))
(insn 65 64 66 4 (set (reg:DI 142)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -568 [0xfffffffffffffdc8])) [5 s+0 S8 A64])) "../src/spline.f":607 81 {*movdi_internal}
     (nil))
(insn 66 65 67 4 (set (reg:DI 143)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -560 [0xfffffffffffffdd0])) [5 xs+0 S8 A64])) "../src/spline.f":607 81 {*movdi_internal}
     (nil))
(insn 67 66 68 4 (set (reg:DI 144)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -552 [0xfffffffffffffdd8])) [5 x+0 S8 A64])) "../src/spline.f":607 81 {*movdi_internal}
     (nil))
(insn 68 67 69 4 (set (reg:DI 145)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -536 [0xfffffffffffffde8])) [4 si+0 S8 A64])) "../src/spline.f":607 81 {*movdi_internal}
     (nil))
(insn 69 68 70 4 (parallel [
            (set (reg:DI 146)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":607 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 70 69 71 4 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [5  S8 A64])
        (reg:DI 146)) "../src/spline.f":607 57 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 146)
        (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
            (nil))))
(insn 71 70 72 4 (parallel [
            (set (reg:DI 147)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -44 [0xffffffffffffffd4])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":607 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 72 71 73 4 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [5  S8 A64])
        (reg:DI 147)) "../src/spline.f":607 57 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 147)
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 73 72 74 4 (set (reg:DI 38 r9)
        (reg:DI 140)) "../src/spline.f":607 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 140)
        (nil)))
(insn 74 73 75 4 (set (reg:DI 37 r8)
        (reg:DI 141)) "../src/spline.f":607 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 141)
        (nil)))
(insn 75 74 76 4 (set (reg:DI 2 cx)
        (reg:DI 142)) "../src/spline.f":607 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 142)
        (nil)))
(insn 76 75 77 4 (set (reg:DI 1 dx)
        (reg:DI 143)) "../src/spline.f":607 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 143)
        (nil)))
(insn 77 76 78 4 (set (reg:DI 4 si)
        (reg:DI 144)) "../src/spline.f":607 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 144)
        (nil)))
(insn 78 77 79 4 (set (reg:DI 5 di)
        (reg:DI 145)) "../src/spline.f":607 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 145)
        (nil)))
(call_insn 79 78 80 4 (call (mem:QI (symbol_ref:DI ("sevall_") [flags 0x403]  <function_decl 0x1427e4800 sevall>) [0 sevall S1 A8])
        (const_int 16 [0x10])) "../src/spline.f":607 655 {*call}
     (expr_list:REG_DEAD (reg:DI 38 r9)
        (expr_list:REG_DEAD (reg:DI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:DI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:DI 1 dx)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 80 79 81 4 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":607 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 81 80 82 4 (set (reg/f:DI 148)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -544 [0xfffffffffffffde0])) [4 xi+0 S8 A64])) "../src/spline.f":608 81 {*movdi_internal}
     (nil))
(insn 82 81 83 4 (set (reg:SF 99 [ _13 ])
        (mem:SF (reg/f:DI 148) [3 *xi_59(D)+0 S4 A32])) "../src/spline.f":608 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 148)
        (nil)))
(insn 83 82 84 4 (set (reg:SF 100 [ xx.238_14 ])
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [3 xx+0 S4 A64])) "../src/spline.f":608 127 {*movsf_internal}
     (nil))
(insn 84 83 85 4 (set (reg:SF 101 [ _15 ])
        (minus:SF (reg:SF 99 [ _13 ])
            (reg:SF 100 [ xx.238_14 ]))) "../src/spline.f":608 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 100 [ xx.238_14 ])
        (expr_list:REG_DEAD (reg:SF 99 [ _13 ])
            (nil))))
(insn 85 84 86 4 (set (reg:SF 102 [ _16 ])
        (reg:SF 101 [ _15 ])) "../src/spline.f":608 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 101 [ _15 ])
        (nil)))
(insn 86 85 87 4 (set (reg:SF 103 [ xxs.239_17 ])
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -44 [0xffffffffffffffd4])) [3 xxs+0 S4 A32])) "../src/spline.f":608 127 {*movsf_internal}
     (nil))
(insn 87 86 88 4 (set (reg:SF 149)
        (div:SF (reg:SF 102 [ _16 ])
            (reg:SF 103 [ xxs.239_17 ]))) "../src/spline.f":608 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 103 [ xxs.239_17 ])
        (expr_list:REG_DEAD (reg:SF 102 [ _16 ])
            (nil))))
(insn 88 87 89 4 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -36 [0xffffffffffffffdc])) [3 ds+0 S4 A32])
        (reg:SF 149)) "../src/spline.f":608 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 149)
        (nil)))
(insn 89 88 90 4 (set (reg/f:DI 150)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -536 [0xfffffffffffffde8])) [4 si+0 S8 A64])) "../src/spline.f":609 81 {*movdi_internal}
     (nil))
(insn 90 89 91 4 (set (reg:SF 104 [ _18 ])
        (mem:SF (reg/f:DI 150) [3 *si_54(D)+0 S4 A32])) "../src/spline.f":609 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 150)
        (nil)))
(insn 91 90 92 4 (set (reg:SF 105 [ _19 ])
        (plus:SF (reg:SF 104 [ _18 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -36 [0xffffffffffffffdc])) [3 ds+0 S4 A32]))) "../src/spline.f":609 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 104 [ _18 ])
        (nil)))
(insn 92 91 93 4 (set (reg/f:DI 151)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -536 [0xfffffffffffffde8])) [4 si+0 S8 A64])) "../src/spline.f":609 81 {*movdi_internal}
     (nil))
(insn 93 92 94 4 (set (mem:SF (reg/f:DI 151) [3 *si_54(D)+0 S4 A32])
        (reg:SF 105 [ _19 ])) "../src/spline.f":609 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 151)
        (expr_list:REG_DEAD (reg:SF 105 [ _19 ])
            (nil))))
(insn 94 93 95 4 (set (reg/f:DI 152)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -576 [0xfffffffffffffdc0])) [6 n+0 S8 A64])) "../src/spline.f":610 81 {*movdi_internal}
     (nil))
(insn 95 94 96 4 (set (reg:SI 106 [ _20 ])
        (mem:SI (reg/f:DI 152) [1 *n_33(D)+0 S4 A32])) "../src/spline.f":610 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 152)
        (nil)))
(insn 96 95 97 4 (set (reg:DI 107 [ _21 ])
        (sign_extend:DI (reg:SI 106 [ _20 ]))) "../src/spline.f":610 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 106 [ _20 ])
        (nil)))
(insn 97 96 98 4 (parallel [
            (set (reg:DI 108 [ _22 ])
                (plus:DI (reg:DI 107 [ _21 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":610 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 107 [ _21 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 98 97 99 4 (set (reg/f:DI 153)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -568 [0xfffffffffffffdc8])) [5 s+0 S8 A64])) "../src/spline.f":610 81 {*movdi_internal}
     (nil))
(insn 99 98 100 4 (set (reg:SF 109 [ _23 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 108 [ _22 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 153)) [3 *s_57(D) S4 A32])) "../src/spline.f":610 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 153)
        (expr_list:REG_DEAD (reg:DI 108 [ _22 ])
            (nil))))
(insn 100 99 101 4 (set (reg/f:DI 154)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -568 [0xfffffffffffffdc8])) [5 s+0 S8 A64])) "../src/spline.f":610 81 {*movdi_internal}
     (nil))
(insn 101 100 102 4 (set (reg:SF 110 [ _24 ])
        (mem:SF (reg/f:DI 154) [3 *s_57(D)+0 S4 A32])) "../src/spline.f":610 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 154)
        (nil)))
(insn 102 101 103 4 (set (reg:SF 111 [ _25 ])
        (minus:SF (reg:SF 109 [ _23 ])
            (reg:SF 110 [ _24 ]))) "../src/spline.f":610 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 110 [ _24 ])
        (expr_list:REG_DEAD (reg:SF 109 [ _23 ])
            (nil))))
(insn 103 102 104 4 (set (reg:SF 112 [ _26 ])
        (reg:SF 111 [ _25 ])) "../src/spline.f":610 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 111 [ _25 ])
        (nil)))
(insn 104 103 105 4 (set (reg:SF 155)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -36 [0xffffffffffffffdc])) [3 ds+0 S4 A32])) "../src/spline.f":610 127 {*movsf_internal}
     (nil))
(insn 105 104 106 4 (set (reg:SF 113 [ _27 ])
        (div:SF (reg:SF 155)
            (reg:SF 112 [ _26 ]))) "../src/spline.f":610 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 155)
        (expr_list:REG_DEAD (reg:SF 112 [ _26 ])
            (nil))))
(insn 106 105 107 4 (set (reg:V4SF 156)
        (mem/u/c:V4SF (symbol_ref/u:DI ("*lC13") [flags 0x2]) [3  S16 A128])) "../src/spline.f":610 1225 {movv4sf_internal}
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF +QNaN [+QNaN])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 107 106 108 4 (parallel [
            (set (reg:SF 114 [ _28 ])
                (abs:SF (reg:SF 113 [ _27 ])))
            (use (reg:V4SF 156))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":610 470 {*absnegsf2}
     (expr_list:REG_DEAD (reg:V4SF 156)
        (expr_list:REG_DEAD (reg:SF 113 [ _27 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (abs:SF (reg:SF 113 [ _27 ]))
                    (nil))))))
(insn 108 107 109 4 (set (reg:SF 157)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC14") [flags 0x2]) [3  S4 A32])) "../src/spline.f":610 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 9.99999974737875163555145263671875e-6 [0x0.a7c5acp-16])
        (nil)))
(insn 109 108 110 4 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 157)
            (reg:SF 114 [ _28 ]))) "../src/spline.f":610 51 {*cmpiusf}
     (expr_list:REG_DEAD (reg:SF 157)
        (expr_list:REG_DEAD (reg:SF 114 [ _28 ])
            (nil))))
(jump_insn 110 109 118 4 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 145)
            (pc))) "../src/spline.f":610 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil))
 -> 145)
;;  succ:       7
;;              5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 8, flags: (RTL)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 118 110 119 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 119 118 150 5 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -4 [0xfffffffffffffffc])) [1 iter+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 iter+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":606 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 150 119 151 5 (set (pc)
        (label_ref 120)) "../src/spline.f":606 649 {jump}
     (nil)
 -> 120)
;;  succ:       3 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 151 150 153)
;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 6, flags: (RTL)
;;  pred:       3
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 153 151 152 8 145 (nil) [1 uses])
(note 152 153 154 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 154 152 123 8 (const_int 0 [0]) "../src/spline.f":611 682 {nop}
     (nil))
;;  succ:       6 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 7, flags: (RTL)
;;  pred:       8 [100.0%]  (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 158 159 160 161
(code_label 123 154 124 6 139 (nil) [0 uses])
(note 124 123 125 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 125 124 126 6 (set (reg/f:DI 158)
        (symbol_ref/f:DI ("*lC15") [flags 0x2]  <var_decl 0x143540c60 *lC15>)) "../src/spline.f":612 81 {*movdi_internal}
     (nil))
(insn 126 125 127 6 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -520 [0xfffffffffffffdf8])) [12 dt_parm.86.common.filename+0 S8 A64])
        (reg/f:DI 158)) "../src/spline.f":612 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 158)
        (nil)))
(insn 127 126 128 6 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -512 [0xfffffffffffffe00])) [1 dt_parm.86.common.line+0 S4 A128])
        (const_int 612 [0x264])) "../src/spline.f":612 82 {*movsi_internal}
     (nil))
(insn 128 127 129 6 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -528 [0xfffffffffffffdf0])) [1 dt_parm.86.common.flags+0 S4 A128])
        (const_int 128 [0x80])) "../src/spline.f":612 82 {*movsi_internal}
     (nil))
(insn 129 128 130 6 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -524 [0xfffffffffffffdf4])) [1 dt_parm.86.common.unit+0 S4 A32])
        (const_int 6 [0x6])) "../src/spline.f":612 82 {*movsi_internal}
     (nil))
(insn 130 129 131 6 (parallel [
            (set (reg:DI 159)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -528 [0xfffffffffffffdf0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":612 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 131 130 132 6 (set (reg:DI 5 di)
        (reg:DI 159)) "../src/spline.f":612 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 159)
        (nil)))
(call_insn 132 131 133 6 (call (mem:QI (symbol_ref:DI ("_gfortran_st_write") [flags 0x41]  <function_decl 0x1427e0800 _gfortran_st_write>) [0 _gfortran_st_write S1 A8])
        (const_int 0 [0])) "../src/spline.f":612 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 133 132 134 6 (parallel [
            (set (reg:DI 160)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -528 [0xfffffffffffffdf0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":612 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 134 133 135 6 (set (reg:SI 1 dx)
        (const_int 47 [0x2f])) "../src/spline.f":612 82 {*movsi_internal}
     (nil))
(insn 135 134 136 6 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*lC16") [flags 0x2]  <var_decl 0x143540cf0 *lC16>)) "../src/spline.f":612 81 {*movdi_internal}
     (nil))
(insn 136 135 137 6 (set (reg:DI 5 di)
        (reg:DI 160)) "../src/spline.f":612 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 160)
        (nil)))
(call_insn 137 136 138 6 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_character_write") [flags 0x41]  <function_decl 0x1427d4900 _gfortran_transfer_character_write>) [0 _gfortran_transfer_character_write S1 A8])
        (const_int 0 [0])) "../src/spline.f":612 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 138 137 139 6 (parallel [
            (set (reg:DI 161)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -528 [0xfffffffffffffdf0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":612 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 139 138 140 6 (set (reg:DI 5 di)
        (reg:DI 161)) "../src/spline.f":612 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 161)
        (nil)))
(call_insn 140 139 149 6 (call (mem:QI (symbol_ref:DI ("_gfortran_st_write_done") [flags 0x41]  <function_decl 0x1427e4300 _gfortran_st_write_done>) [0 _gfortran_st_write_done S1 A8])
        (const_int 0 [0])) "../src/spline.f":612 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 149 140 145 6 (const_int 0 [0]) "../src/spline.f":613 682 {nop}
     (nil))
;;  succ:       7 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 1, flags: (RTL)
;;  pred:       6 (FALLTHRU)
;;              4
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 145 149 146 7 138 (nil) [1 uses])
(note 146 145 0 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function scalc (scalc_, funcdef_no=13, decl_uid=4152, cgraph_uid=13, symbol_order=13)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 7 n_edges 7 count 7 (    1)
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 6 5
;;
;; Loop 1
;;  header 3, latch 4
;;  depth 1, outer 0
;;  nodes: 3 4
;; 2 succs { 3 }
;; 3 succs { 6 4 }
;; 4 succs { 3 }
;; 6 succs { 5 }
;; 5 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r168: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r168,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r167: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r167,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r166: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r166,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r165: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r165,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r164: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r164,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r163: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r163,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r162: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r162,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r161: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r161,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r160: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r160,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r159: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a36 (r159,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r158: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a37 (r158,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r157: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a40 (r157,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r156: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a43 (r156,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r155: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a45 (r155,l0) best SSE_REGS, allocno SSE_REGS
    r154: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a44 (r154,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r153: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a49 (r153,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r152: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a51 (r152,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r151: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a53 (r151,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r150: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a57 (r150,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r149: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a59 (r149,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r148: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a61 (r148,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r147: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a65 (r147,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r146: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a67 (r146,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r145: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a69 (r145,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r144: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a8 (r144,l0) best SSE_REGS, allocno SSE_REGS
    r143: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a15 (r143,l0) best SSE_REGS, allocno SSE_REGS
    r142: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a9 (r142,l0) best SSE_REGS, allocno SSE_REGS
    r141: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a28 (r141,l0) best SSE_REGS, allocno SSE_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a42 (r140,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a41 (r139,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a48 (r135,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a50 (r134,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r130: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a56 (r130,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r129: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a58 (r129,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r125: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a64 (r125,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r124: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a66 (r124,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r123: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a2 (r123,l0) best SSE_REGS, allocno SSE_REGS
    r122: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r122,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r121,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r120: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a3 (r120,l0) best SSE_REGS, allocno SSE_REGS
    r119: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a7 (r119,l0) best SSE_REGS, allocno SSE_REGS
    r118: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a4 (r118,l0) best SSE_REGS, allocno SSE_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a16 (r114,l0) best SSE_REGS, allocno SSE_REGS
    r113: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a17 (r113,l0) best SSE_REGS, allocno SSE_REGS
    r112: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r112,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r111,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a18 (r109,l0) best SSE_REGS, allocno SSE_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a29 (r106,l0) best SSE_REGS, allocno SSE_REGS
    r105: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a30 (r105,l0) best SSE_REGS, allocno SSE_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a33 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a34 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a35 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a31 (r101,l0) best SSE_REGS, allocno SSE_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a38 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a39 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a46 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a47 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a52 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a54 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a55 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a60 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a62 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a63 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a68 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r168,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a1(r122,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a2(r123,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a3(r120,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a4(r118,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a5(r121,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a6(r167,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a7(r119,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a8(r144,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a9(r142,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a10(r166,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a11(r117,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a12(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a13(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a14(r165,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a15(r143,l0) costs: AREG:18 DREG:18 CREG:18 BREG:18 SIREG:18 DIREG:18 AD_REGS:18 CLOBBERED_REGS:18 Q_REGS:18 NON_Q_REGS:18 TLS_GOTBASE_REGS:18 GENERAL_REGS:18 FP_TOP_REG:48 FP_SECOND_REG:48 FLOAT_REGS:48 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:42 FP_TOP_SSE_REGS:50 FP_SECOND_SSE_REGS:50 FLOAT_SSE_REGS:50 FLOAT_INT_REGS:48 INT_SSE_REGS:34 FLOAT_INT_SSE_REGS:50 ALL_REGS:50 MEM:15
  a16(r114,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:9
  a17(r113,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a18(r109,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a19(r164,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a20(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a21(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a22(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a23(r163,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a24(r162,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a25(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a26(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a27(r161,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a28(r141,l0) costs: AREG:18 DREG:18 CREG:18 BREG:18 SIREG:18 DIREG:18 AD_REGS:18 CLOBBERED_REGS:18 Q_REGS:18 NON_Q_REGS:18 TLS_GOTBASE_REGS:18 GENERAL_REGS:18 FP_TOP_REG:48 FP_SECOND_REG:48 FLOAT_REGS:48 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:42 FP_TOP_SSE_REGS:50 FP_SECOND_SSE_REGS:50 FLOAT_SSE_REGS:50 FLOAT_INT_REGS:48 INT_SSE_REGS:34 FLOAT_INT_SSE_REGS:50 ALL_REGS:50 MEM:15
  a29(r106,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:9
  a30(r105,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a31(r101,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a32(r160,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a33(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a34(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a35(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a36(r159,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a37(r158,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a38(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a39(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a40(r157,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a41(r139,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a42(r140,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7
  a43(r156,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a44(r154,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a45(r155,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 CLOBBERED_REGS:4 Q_REGS:4 NON_Q_REGS:4 TLS_GOTBASE_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:29 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:12
  a46(r97,l0) costs: AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:2
  a47(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a48(r135,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a49(r153,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a50(r134,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:38 INT_SSE_REGS:27 ALL_REGS:520 MEM:11
  a51(r152,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:8
  a52(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a53(r151,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a54(r93,l0) costs: AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:2
  a55(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a56(r130,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a57(r150,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a58(r129,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:38 INT_SSE_REGS:27 ALL_REGS:520 MEM:11
  a59(r149,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:8
  a60(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a61(r148,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a62(r89,l0) costs: AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:2
  a63(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a64(r125,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a65(r147,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a66(r124,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:38 INT_SSE_REGS:27 ALL_REGS:520 MEM:11
  a67(r146,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:8
  a68(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a69(r145,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8

   Insn 118(l0): point = 0
   Insn 123(l0): point = 3
   Insn 64(l0): point = 6
   Insn 63(l0): point = 8
   Insn 62(l0): point = 10
   Insn 61(l0): point = 12
   Insn 119(l0): point = 15
   Insn 108(l0): point = 17
   Insn 107(l0): point = 19
   Insn 106(l0): point = 21
   Insn 105(l0): point = 23
   Insn 104(l0): point = 25
   Insn 103(l0): point = 27
   Insn 102(l0): point = 29
   Insn 101(l0): point = 31
   Insn 100(l0): point = 33
   Insn 99(l0): point = 35
   Insn 98(l0): point = 37
   Insn 97(l0): point = 39
   Insn 96(l0): point = 41
   Insn 95(l0): point = 43
   Insn 94(l0): point = 45
   Insn 93(l0): point = 47
   Insn 92(l0): point = 49
   Insn 91(l0): point = 51
   Insn 90(l0): point = 53
   Insn 89(l0): point = 55
   Insn 88(l0): point = 57
   Insn 87(l0): point = 59
   Insn 86(l0): point = 61
   Insn 85(l0): point = 63
   Insn 84(l0): point = 65
   Insn 83(l0): point = 67
   Insn 82(l0): point = 69
   Insn 81(l0): point = 71
   Insn 80(l0): point = 73
   Insn 79(l0): point = 75
   Insn 78(l0): point = 77
   Insn 77(l0): point = 79
   Insn 76(l0): point = 81
   Insn 75(l0): point = 83
   Insn 74(l0): point = 85
   Insn 73(l0): point = 87
   Insn 72(l0): point = 89
   Insn 71(l0): point = 91
   Insn 70(l0): point = 93
   Insn 69(l0): point = 95
   Insn 68(l0): point = 97
   Insn 67(l0): point = 99
   Insn 66(l0): point = 101
   Insn 59(l0): point = 104
   Insn 58(l0): point = 106
   Insn 57(l0): point = 108
   Insn 56(l0): point = 110
   Insn 55(l0): point = 112
   Insn 54(l0): point = 114
   Insn 50(l0): point = 116
   Insn 49(l0): point = 118
   Insn 48(l0): point = 120
   Insn 46(l0): point = 122
   Insn 44(l0): point = 124
   Insn 45(l0): point = 126
   Insn 43(l0): point = 128
   Insn 42(l0): point = 130
   Insn 41(l0): point = 132
   Insn 40(l0): point = 134
   Insn 39(l0): point = 136
   Insn 35(l0): point = 138
   Insn 34(l0): point = 140
   Insn 33(l0): point = 142
   Insn 31(l0): point = 144
   Insn 29(l0): point = 146
   Insn 30(l0): point = 148
   Insn 28(l0): point = 150
   Insn 27(l0): point = 152
   Insn 26(l0): point = 154
   Insn 25(l0): point = 156
   Insn 24(l0): point = 158
   Insn 20(l0): point = 160
   Insn 19(l0): point = 162
   Insn 18(l0): point = 164
   Insn 16(l0): point = 166
   Insn 14(l0): point = 168
   Insn 15(l0): point = 170
   Insn 13(l0): point = 172
   Insn 12(l0): point = 174
   Insn 11(l0): point = 176
   Insn 10(l0): point = 178
   Insn 9(l0): point = 180
   Insn 5(l0): point = 182
   Insn 4(l0): point = 184
   Insn 3(l0): point = 186
   Insn 2(l0): point = 188
 a0(r168): [20..21]
 a1(r122): [20..25]
 a2(r123): [20..23]
 a3(r120): [24..31]
 a4(r118): [24..35]
 a5(r121): [26..27]
 a6(r167): [28..29]
 a7(r119): [32..33]
 a8(r144): [34..47]
 a9(r142): [34..75]
 a10(r166): [36..37]
 a11(r117): [36..39]
 a12(r116): [40..41]
 a13(r115): [42..43]
 a14(r165): [44..45]
 a15(r143): [48..49]
 a16(r114): [50..51]
 a17(r113): [52..53]
 a18(r109): [52..65]
 a19(r164): [54..55]
 a20(r112): [54..57]
 a21(r111): [58..59]
 a22(r110): [60..61]
 a23(r163): [62..63]
 a24(r162): [66..67]
 a25(r108): [66..69]
 a26(r107): [70..71]
 a27(r161): [72..73]
 a28(r141): [76..77]
 a29(r106): [78..79]
 a30(r105): [80..81]
 a31(r101): [80..93]
 a32(r160): [82..83]
 a33(r104): [82..85]
 a34(r103): [86..87]
 a35(r102): [88..89]
 a36(r159): [90..91]
 a37(r158): [94..95]
 a38(r100): [94..97]
 a39(r99): [98..99]
 a40(r157): [100..101]
 a41(r139): [6..106]
 a42(r140): [9..10]
 a43(r156): [107..108]
 a44(r154): [111..114]
 a45(r155): [111..112]
 a46(r97 [0]): [117..190]
 a46(r97 [1]): [116..190]
 a47(r96): [119..120]
 a48(r135): [121..122]
 a49(r153): [123..126]
 a50(r134): [123..128]
 a51(r152): [131..132]
 a52(r95): [133..134]
 a53(r151): [135..136]
 a54(r93 [0]): [139..190]
 a54(r93 [1]): [138..190]
 a55(r92): [141..142]
 a56(r130): [143..144]
 a57(r150): [145..148]
 a58(r129): [145..150]
 a59(r149): [153..154]
 a60(r91): [155..156]
 a61(r148): [157..158]
 a62(r89 [0]): [161..190]
 a62(r89 [1]): [160..190]
 a63(r88): [163..164]
 a64(r125): [165..166]
 a65(r147): [167..170]
 a66(r124): [167..172]
 a67(r146): [175..176]
 a68(r87): [177..178]
 a69(r145): [179..180]
Compressing live ranges: from 191 to 102 - 53%
Ranges after the compression:
 a0(r168): [2..3]
 a1(r122): [2..5]
 a2(r123): [2..3]
 a3(r120): [4..9]
 a4(r118): [4..13]
 a5(r121): [6..7]
 a6(r167): [8..9]
 a7(r119): [10..11]
 a8(r144): [12..21]
 a9(r142): [12..41]
 a10(r166): [14..15]
 a11(r117): [14..15]
 a12(r116): [16..17]
 a13(r115): [18..19]
 a14(r165): [20..21]
 a15(r143): [22..23]
 a16(r114): [24..25]
 a17(r113): [26..27]
 a18(r109): [26..35]
 a19(r164): [28..29]
 a20(r112): [28..29]
 a21(r111): [30..31]
 a22(r110): [32..33]
 a23(r163): [34..35]
 a24(r162): [36..37]
 a25(r108): [36..37]
 a26(r107): [38..39]
 a27(r161): [40..41]
 a28(r141): [42..43]
 a29(r106): [44..45]
 a30(r105): [46..47]
 a31(r101): [46..55]
 a32(r160): [48..49]
 a33(r104): [48..49]
 a34(r103): [50..51]
 a35(r102): [52..53]
 a36(r159): [54..55]
 a37(r158): [56..57]
 a38(r100): [56..57]
 a39(r99): [58..59]
 a40(r157): [60..61]
 a41(r139): [0..61]
 a42(r140): [0..1]
 a43(r156): [62..63]
 a44(r154): [64..65]
 a45(r155): [64..65]
 a46(r97 [0]): [66..101]
 a46(r97 [1]): [66..101]
 a47(r96): [66..67]
 a48(r135): [68..69]
 a49(r153): [70..71]
 a50(r134): [70..71]
 a51(r152): [72..73]
 a52(r95): [74..75]
 a53(r151): [76..77]
 a54(r93 [0]): [78..101]
 a54(r93 [1]): [78..101]
 a55(r92): [78..79]
 a56(r130): [80..81]
 a57(r150): [82..83]
 a58(r129): [82..83]
 a59(r149): [84..85]
 a60(r91): [86..87]
 a61(r148): [88..89]
 a62(r89 [0]): [90..101]
 a62(r89 [1]): [90..101]
 a63(r88): [90..91]
 a64(r125): [92..93]
 a65(r147): [94..95]
 a66(r124): [94..95]
 a67(r146): [96..97]
 a68(r87): [98..99]
 a69(r145): [100..101]
  regions=1, blocks=7, points=102
    allocnos=70 (big 3), copies=0, conflicts=0, ranges=73
Disposition:
   68:r87  l0     0   63:r88  l0     0   62:r89  l0    41   60:r91  l0     0
   55:r92  l0     0   54:r93  l0    39   52:r95  l0     0   47:r96  l0     0
   46:r97  l0    37   39:r99  l0     0   38:r100 l0     2   31:r101 l0    21
   35:r102 l0     0   34:r103 l0     0   33:r104 l0     2   30:r105 l0    22
   29:r106 l0    21   26:r107 l0     0   25:r108 l0     2   18:r109 l0    21
   22:r110 l0     0   21:r111 l0     0   20:r112 l0     2   17:r113 l0    23
   16:r114 l0    21   13:r115 l0     0   12:r116 l0     0   11:r117 l0     2
    4:r118 l0    23    7:r119 l0    21    3:r120 l0    21    5:r121 l0     0
    1:r122 l0     2    2:r123 l0    21   66:r124 l0     0   64:r125 l0     0
   58:r129 l0     0   56:r130 l0     0   50:r134 l0     0   48:r135 l0     0
   41:r139 l0     1   42:r140 l0     0   28:r141 l0    21    9:r142 l0    22
   15:r143 l0    21    8:r144 l0    21   69:r145 l0     0   67:r146 l0     0
   65:r147 l0     1   61:r148 l0     0   59:r149 l0     0   57:r150 l0     1
   53:r151 l0     0   51:r152 l0     0   49:r153 l0     1   44:r154 l0     0
   45:r155 l0    21   43:r156 l0     0   40:r157 l0     0   37:r158 l0     0
   36:r159 l0     0   32:r160 l0     0   27:r161 l0     0   24:r162 l0     0
   23:r163 l0     0   19:r164 l0     0   14:r165 l0     0   10:r166 l0     0
    6:r167 l0     0    0:r168 l0     0
+++Costs: overall 6, reg 6, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


scalc

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 17 [flags]
;;  ref usage 	r0={1d} r1={1d,1u} r2={1d,1u} r4={1d,1u} r5={1d,1u} r6={1d,6u} r7={1d,6u} r16={1d,5u} r17={15d,5u} r20={1d,37u,3e} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r87={1d,1u} r88={1d,1u} r89={2d,2u} r91={1d,1u} r92={1d,1u} r93={2d,2u} r95={1d,1u} r96={1d,1u} r97={2d,2u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,2u} r125={1d,1u} r129={1d,2u} r130={1d,1u} r134={1d,2u} r135={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,2u} r142={1d,1u} r143={1d,2u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d,1u} r165={1d,1u} r166={1d,1u} r167={1d,1u} r168={1d,1u} 
;;    total ref usage 251{107d,141u,3e} in 93{93 regular + 0 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 93 97
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 93 97
;; lr  def 	 17 [flags] 87 88 91 92 95 96 124 125 129 130 134 135 139 145 146 147 148 149 150 151 152 153 154 155 156
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [5 x+0 S8 A64])
        (reg:DI 5 di [ x ])) "../src/spline.f":618 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ x ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [5 y+0 S8 A64])
        (reg:DI 4 si [ y ])) "../src/spline.f":618 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ y ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [5 s+0 S8 A64])
        (reg:DI 1 dx [ s ])) "../src/spline.f":618 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ s ])
        (nil)))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [6 n+0 S8 A64])
        (reg:DI 2 cx [ n ])) "../src/spline.f":618 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [ n ])
        (nil)))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (reg/f:DI 145)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [6 n+0 S8 A64])) "../src/spline.f":618 81 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:SI 87 [ _1 ])
        (mem:SI (reg/f:DI 145) [1 *n_41(D)+0 S4 A32])) "../src/spline.f":618 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 145)
        (nil)))
(insn 11 10 12 2 (set (reg:DI 146)
        (sign_extend:DI (reg:SI 87 [ _1 ]))) "../src/spline.f":618 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 87 [ _1 ])
        (nil)))
(insn 12 11 13 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 ubound.87+0 S8 A64])
        (reg:DI 146)) "../src/spline.f":618 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 146)
        (nil)))
(insn 13 12 15 2 (set (reg:DI 124 [ size.88_43 ])
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 ubound.87+0 S8 A64])) "../src/spline.f":618 81 {*movdi_internal}
     (nil))
(insn 15 13 14 2 (set (reg:DI 147)
        (const_int 0 [0])) "../src/spline.f":618 81 {*movdi_internal}
     (nil))
(insn 14 15 16 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 124 [ size.88_43 ])
            (const_int 0 [0]))) "../src/spline.f":618 4 {*cmpdi_ccno_1}
     (nil))
(insn 16 14 18 2 (set (reg:DI 125 [ size.88_44 ])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 124 [ size.88_43 ])
            (reg:DI 147))) "../src/spline.f":618 967 {*movdicc_noc}
     (expr_list:REG_DEAD (reg:DI 147)
        (expr_list:REG_DEAD (reg:DI 124 [ size.88_43 ])
            (expr_list:REG_DEAD (reg:CCGOC 17 flags)
                (nil)))))
(insn 18 16 19 2 (set (reg:DI 88 [ size.240_2 ])
        (reg:DI 125 [ size.88_44 ])) "../src/spline.f":618 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 125 [ size.88_44 ])
        (nil)))
(insn 19 18 20 2 (set (subreg:DI (reg:TI 89 [ _3 ]) 0)
        (reg:DI 88 [ size.240_2 ])) "../src/spline.f":618 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88 [ size.240_2 ])
        (nil)))
(insn 20 19 24 2 (set (subreg:DI (reg:TI 89 [ _3 ]) 8)
        (const_int 0 [0])) "../src/spline.f":618 81 {*movdi_internal}
     (expr_list:REG_UNUSED (reg:TI 89 [ _3 ])
        (nil)))
(insn 24 20 25 2 (set (reg/f:DI 148)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [6 n+0 S8 A64])) "../src/spline.f":618 81 {*movdi_internal}
     (nil))
(insn 25 24 26 2 (set (reg:SI 91 [ _5 ])
        (mem:SI (reg/f:DI 148) [1 *n_41(D)+0 S4 A32])) "../src/spline.f":618 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 148)
        (nil)))
(insn 26 25 27 2 (set (reg:DI 149)
        (sign_extend:DI (reg:SI 91 [ _5 ]))) "../src/spline.f":618 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 91 [ _5 ])
        (nil)))
(insn 27 26 28 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [2 ubound.89+0 S8 A64])
        (reg:DI 149)) "../src/spline.f":618 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 149)
        (nil)))
(insn 28 27 30 2 (set (reg:DI 129 [ size.90_49 ])
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [2 ubound.89+0 S8 A64])) "../src/spline.f":618 81 {*movdi_internal}
     (nil))
(insn 30 28 29 2 (set (reg:DI 150)
        (const_int 0 [0])) "../src/spline.f":618 81 {*movdi_internal}
     (nil))
(insn 29 30 31 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 129 [ size.90_49 ])
            (const_int 0 [0]))) "../src/spline.f":618 4 {*cmpdi_ccno_1}
     (nil))
(insn 31 29 33 2 (set (reg:DI 130 [ size.90_50 ])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 129 [ size.90_49 ])
            (reg:DI 150))) "../src/spline.f":618 967 {*movdicc_noc}
     (expr_list:REG_DEAD (reg:DI 150)
        (expr_list:REG_DEAD (reg:DI 129 [ size.90_49 ])
            (expr_list:REG_DEAD (reg:CCGOC 17 flags)
                (nil)))))
(insn 33 31 34 2 (set (reg:DI 92 [ size.242_6 ])
        (reg:DI 130 [ size.90_50 ])) "../src/spline.f":618 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 130 [ size.90_50 ])
        (nil)))
(insn 34 33 35 2 (set (subreg:DI (reg:TI 93 [ _7 ]) 0)
        (reg:DI 92 [ size.242_6 ])) "../src/spline.f":618 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 92 [ size.242_6 ])
        (nil)))
(insn 35 34 39 2 (set (subreg:DI (reg:TI 93 [ _7 ]) 8)
        (const_int 0 [0])) "../src/spline.f":618 81 {*movdi_internal}
     (expr_list:REG_UNUSED (reg:TI 93 [ _7 ])
        (nil)))
(insn 39 35 40 2 (set (reg/f:DI 151)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [6 n+0 S8 A64])) "../src/spline.f":618 81 {*movdi_internal}
     (nil))
(insn 40 39 41 2 (set (reg:SI 95 [ _9 ])
        (mem:SI (reg/f:DI 151) [1 *n_41(D)+0 S4 A32])) "../src/spline.f":618 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 151)
        (nil)))
(insn 41 40 42 2 (set (reg:DI 152)
        (sign_extend:DI (reg:SI 95 [ _9 ]))) "../src/spline.f":618 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 95 [ _9 ])
        (nil)))
(insn 42 41 43 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [2 ubound.91+0 S8 A64])
        (reg:DI 152)) "../src/spline.f":618 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 152)
        (nil)))
(insn 43 42 45 2 (set (reg:DI 134 [ size.92_55 ])
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [2 ubound.91+0 S8 A64])) "../src/spline.f":618 81 {*movdi_internal}
     (nil))
(insn 45 43 44 2 (set (reg:DI 153)
        (const_int 0 [0])) "../src/spline.f":618 81 {*movdi_internal}
     (nil))
(insn 44 45 46 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 134 [ size.92_55 ])
            (const_int 0 [0]))) "../src/spline.f":618 4 {*cmpdi_ccno_1}
     (nil))
(insn 46 44 48 2 (set (reg:DI 135 [ size.92_56 ])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 134 [ size.92_55 ])
            (reg:DI 153))) "../src/spline.f":618 967 {*movdicc_noc}
     (expr_list:REG_DEAD (reg:DI 153)
        (expr_list:REG_DEAD (reg:DI 134 [ size.92_55 ])
            (expr_list:REG_DEAD (reg:CCGOC 17 flags)
                (nil)))))
(insn 48 46 49 2 (set (reg:DI 96 [ size.244_10 ])
        (reg:DI 135 [ size.92_56 ])) "../src/spline.f":618 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 135 [ size.92_56 ])
        (nil)))
(insn 49 48 50 2 (set (subreg:DI (reg:TI 97 [ _11 ]) 0)
        (reg:DI 96 [ size.244_10 ])) "../src/spline.f":618 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 96 [ size.244_10 ])
        (nil)))
(insn 50 49 54 2 (set (subreg:DI (reg:TI 97 [ _11 ]) 8)
        (const_int 0 [0])) "../src/spline.f":618 81 {*movdi_internal}
     (expr_list:REG_UNUSED (reg:TI 97 [ _11 ])
        (nil)))
(insn 54 50 55 2 (set (reg/f:DI 154)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [5 s+0 S8 A64])) "../src/spline.f":625 81 {*movdi_internal}
     (nil))
(insn 55 54 56 2 (set (reg:SF 155)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC8") [flags 0x2]) [3  S4 A32])) "../src/spline.f":625 127 {*movsf_internal}
     (nil))
(insn 56 55 57 2 (set (mem:SF (reg/f:DI 154) [3 *s_60(D)+0 S4 A32])
        (reg:SF 155)) "../src/spline.f":625 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 155)
        (expr_list:REG_DEAD (reg/f:DI 154)
            (nil))))
(insn 57 56 58 2 (set (reg/f:DI 156)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [6 n+0 S8 A64])) "../src/spline.f":626 81 {*movdi_internal}
     (nil))
(insn 58 57 59 2 (set (reg:SI 139 [ _62 ])
        (mem:SI (reg/f:DI 156) [1 *n_41(D)+0 S4 A32])) "../src/spline.f":626 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 156)
        (nil)))
(insn 59 58 109 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
        (const_int 2 [0x2])) "../src/spline.f":626 82 {*movsi_internal}
     (nil))
;;  succ:       3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 139

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 (FALLTHRU)
;;              4 [100.0%] 
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 139
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 139
;; lr  def 	 17 [flags] 140
(code_label 109 59 60 3 148 (nil) [1 uses])
(note 60 109 61 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 61 60 62 3 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
            (reg:SI 139 [ _62 ]))) "../src/spline.f":626 7 {*cmpsi_1}
     (nil))
(insn 62 61 63 3 (set (reg:QI 140 [ _64 ])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "../src/spline.f":626 613 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil)))
(insn 63 62 64 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 140 [ _64 ])
            (const_int 0 [0]))) "../src/spline.f":626 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 140 [ _64 ])
        (nil)))
(jump_insn 64 63 65 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 122)
            (pc))) "../src/spline.f":626 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 122)
;;  succ:       6
;;              4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 139

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 6, flags: (RTL)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 139
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 141 142 143 144 157 158 159 160 161 162 163 164 165 166 167 168
(note 65 64 66 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 66 65 67 4 (set (reg:SI 157)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":627 82 {*movsi_internal}
     (nil))
(insn 67 66 68 4 (set (reg:DI 99 [ _13 ])
        (sign_extend:DI (reg:SI 157))) "../src/spline.f":627 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 157)
        (nil)))
(insn 68 67 69 4 (parallel [
            (set (reg:DI 100 [ _14 ])
                (plus:DI (reg:DI 99 [ _13 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":627 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 99 [ _13 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 69 68 70 4 (set (reg/f:DI 158)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [5 x+0 S8 A64])) "../src/spline.f":627 81 {*movdi_internal}
     (nil))
(insn 70 69 71 4 (set (reg:SF 101 [ _15 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 100 [ _14 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 158)) [3 *x_65(D) S4 A32])) "../src/spline.f":627 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 158)
        (expr_list:REG_DEAD (reg:DI 100 [ _14 ])
            (nil))))
(insn 71 70 72 4 (set (reg:SI 159)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":627 82 {*movsi_internal}
     (nil))
(insn 72 71 73 4 (parallel [
            (set (reg:SI 102 [ _16 ])
                (plus:SI (reg:SI 159)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":627 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 159)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff]))
                (nil)))))
(insn 73 72 74 4 (set (reg:DI 103 [ _17 ])
        (sign_extend:DI (reg:SI 102 [ _16 ]))) "../src/spline.f":627 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 102 [ _16 ])
        (nil)))
(insn 74 73 75 4 (parallel [
            (set (reg:DI 104 [ _18 ])
                (plus:DI (reg:DI 103 [ _17 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":627 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 103 [ _17 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 75 74 76 4 (set (reg/f:DI 160)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [5 x+0 S8 A64])) "../src/spline.f":627 81 {*movdi_internal}
     (nil))
(insn 76 75 77 4 (set (reg:SF 105 [ _19 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 104 [ _18 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 160)) [3 *x_65(D) S4 A32])) "../src/spline.f":627 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 160)
        (expr_list:REG_DEAD (reg:DI 104 [ _18 ])
            (nil))))
(insn 77 76 78 4 (set (reg:SF 106 [ _20 ])
        (minus:SF (reg:SF 101 [ _15 ])
            (reg:SF 105 [ _19 ]))) "../src/spline.f":627 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 105 [ _19 ])
        (expr_list:REG_DEAD (reg:SF 101 [ _15 ])
            (nil))))
(insn 78 77 79 4 (set (reg:SF 141 [ _66 ])
        (reg:SF 106 [ _20 ])) "../src/spline.f":627 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 106 [ _20 ])
        (nil)))
(insn 79 78 80 4 (set (reg:SF 142 [ _67 ])
        (mult:SF (reg:SF 141 [ _66 ])
            (reg:SF 141 [ _66 ]))) "../src/spline.f":627 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 141 [ _66 ])
        (nil)))
(insn 80 79 81 4 (set (reg:SI 161)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":627 82 {*movsi_internal}
     (nil))
(insn 81 80 82 4 (set (reg:DI 107 [ _21 ])
        (sign_extend:DI (reg:SI 161))) "../src/spline.f":627 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 161)
        (nil)))
(insn 82 81 83 4 (parallel [
            (set (reg:DI 108 [ _22 ])
                (plus:DI (reg:DI 107 [ _21 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":627 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 107 [ _21 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 83 82 84 4 (set (reg/f:DI 162)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [5 y+0 S8 A64])) "../src/spline.f":627 81 {*movdi_internal}
     (nil))
(insn 84 83 85 4 (set (reg:SF 109 [ _23 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 108 [ _22 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 162)) [3 *y_68(D) S4 A32])) "../src/spline.f":627 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 162)
        (expr_list:REG_DEAD (reg:DI 108 [ _22 ])
            (nil))))
(insn 85 84 86 4 (set (reg:SI 163)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":627 82 {*movsi_internal}
     (nil))
(insn 86 85 87 4 (parallel [
            (set (reg:SI 110 [ _24 ])
                (plus:SI (reg:SI 163)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":627 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 163)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff]))
                (nil)))))
(insn 87 86 88 4 (set (reg:DI 111 [ _25 ])
        (sign_extend:DI (reg:SI 110 [ _24 ]))) "../src/spline.f":627 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 110 [ _24 ])
        (nil)))
(insn 88 87 89 4 (parallel [
            (set (reg:DI 112 [ _26 ])
                (plus:DI (reg:DI 111 [ _25 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":627 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 111 [ _25 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 89 88 90 4 (set (reg/f:DI 164)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [5 y+0 S8 A64])) "../src/spline.f":627 81 {*movdi_internal}
     (nil))
(insn 90 89 91 4 (set (reg:SF 113 [ _27 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 112 [ _26 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 164)) [3 *y_68(D) S4 A32])) "../src/spline.f":627 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 164)
        (expr_list:REG_DEAD (reg:DI 112 [ _26 ])
            (nil))))
(insn 91 90 92 4 (set (reg:SF 114 [ _28 ])
        (minus:SF (reg:SF 109 [ _23 ])
            (reg:SF 113 [ _27 ]))) "../src/spline.f":627 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 113 [ _27 ])
        (expr_list:REG_DEAD (reg:SF 109 [ _23 ])
            (nil))))
(insn 92 91 93 4 (set (reg:SF 143 [ _69 ])
        (reg:SF 114 [ _28 ])) "../src/spline.f":627 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 114 [ _28 ])
        (nil)))
(insn 93 92 94 4 (set (reg:SF 144 [ _70 ])
        (mult:SF (reg:SF 143 [ _69 ])
            (reg:SF 143 [ _69 ]))) "../src/spline.f":627 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 143 [ _69 ])
        (nil)))
(insn 94 93 95 4 (set (reg:SI 165)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":627 82 {*movsi_internal}
     (nil))
(insn 95 94 96 4 (parallel [
            (set (reg:SI 115 [ _29 ])
                (plus:SI (reg:SI 165)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":627 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 165)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff]))
                (nil)))))
(insn 96 95 97 4 (set (reg:DI 116 [ _30 ])
        (sign_extend:DI (reg:SI 115 [ _29 ]))) "../src/spline.f":627 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 115 [ _29 ])
        (nil)))
(insn 97 96 98 4 (parallel [
            (set (reg:DI 117 [ _31 ])
                (plus:DI (reg:DI 116 [ _30 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":627 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 116 [ _30 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 98 97 99 4 (set (reg/f:DI 166)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [5 s+0 S8 A64])) "../src/spline.f":627 81 {*movdi_internal}
     (nil))
(insn 99 98 100 4 (set (reg:SF 118 [ _32 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 117 [ _31 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 166)) [3 *s_60(D) S4 A32])) "../src/spline.f":627 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 166)
        (expr_list:REG_DEAD (reg:DI 117 [ _31 ])
            (nil))))
(insn 100 99 101 4 (set (reg:SF 119 [ _33 ])
        (plus:SF (reg:SF 142 [ _67 ])
            (reg:SF 144 [ _70 ]))) "../src/spline.f":627 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 144 [ _70 ])
        (expr_list:REG_DEAD (reg:SF 142 [ _67 ])
            (nil))))
(insn 101 100 102 4 (set (reg:SF 120 [ _34 ])
        (sqrt:SF (reg:SF 119 [ _33 ]))) "../src/spline.f":627 836 {*sqrtsf2_sse}
     (expr_list:REG_DEAD (reg:SF 119 [ _33 ])
        (nil)))
(insn 102 101 103 4 (set (reg:SI 167)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/spline.f":627 82 {*movsi_internal}
     (nil))
(insn 103 102 104 4 (set (reg:DI 121 [ _35 ])
        (sign_extend:DI (reg:SI 167))) "../src/spline.f":627 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 167)
        (nil)))
(insn 104 103 105 4 (parallel [
            (set (reg:DI 122 [ _36 ])
                (plus:DI (reg:DI 121 [ _35 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":627 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 121 [ _35 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 105 104 106 4 (set (reg:SF 123 [ _37 ])
        (plus:SF (reg:SF 118 [ _32 ])
            (reg:SF 120 [ _34 ]))) "../src/spline.f":627 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 120 [ _34 ])
        (expr_list:REG_DEAD (reg:SF 118 [ _32 ])
            (nil))))
(insn 106 105 107 4 (set (reg/f:DI 168)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [5 s+0 S8 A64])) "../src/spline.f":627 81 {*movdi_internal}
     (nil))
(insn 107 106 108 4 (set (mem:SF (plus:DI (mult:DI (reg:DI 122 [ _36 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 168)) [3 *s_60(D) S4 A32])
        (reg:SF 123 [ _37 ])) "../src/spline.f":627 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 168)
        (expr_list:REG_DEAD (reg:SF 123 [ _37 ])
            (expr_list:REG_DEAD (reg:DI 122 [ _36 ])
                (nil)))))
(insn 108 107 119 4 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":626 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 119 108 120 4 (set (pc)
        (label_ref 109)) "../src/spline.f":626 649 {jump}
     (nil)
 -> 109)
;;  succ:       3 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 139

(barrier 120 119 122)
;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 5, flags: (RTL)
;;  pred:       3
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 122 120 121 6 150 (nil) [1 uses])
(note 121 122 123 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 123 121 112 6 (const_int 0 [0]) "../src/spline.f":628 682 {nop}
     (nil))
;;  succ:       5 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 1, flags: (RTL)
;;  pred:       6 [100.0%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 112 123 113 5 147 (nil) [0 uses])
(note 113 112 118 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 118 113 0 5 (const_int 0 [0]) "../src/spline.f":630 682 {nop}
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function segspl (segspl_, funcdef_no=14, decl_uid=4192, cgraph_uid=14, symbol_order=14)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 16 n_edges 20 count 16 (    1)
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 15 14
;;
;; Loop 1
;;  header 9, latch 13
;;  depth 1, outer 0
;;  nodes: 9 13 12 10 11
;; 2 succs { 5 3 }
;; 3 succs { 4 5 }
;; 4 succs { }
;; 5 succs { 8 6 }
;; 6 succs { 7 8 }
;; 7 succs { }
;; 8 succs { 9 }
;; 9 succs { 15 10 }
;; 10 succs { 13 11 }
;; 11 succs { 12 13 }
;; 12 succs { 13 }
;; 13 succs { 9 }
;; 15 succs { 14 }
;; 14 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 68.
verify found no changes in insn with uid = 95.
verify found no changes in insn with uid = 156.
verify found no changes in insn with uid = 199.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r203: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r203,l0) best CREG, allocno GENERAL_REGS
    r202: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r202,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r201: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r201,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r200: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r200,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r199: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r199,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r198: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r198,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r197: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r197,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r196: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r196,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r195: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r195,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r194: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r194,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r193: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r193,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r192: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r192,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r191: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r191,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r188: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a29 (r188,l0) best CREG, allocno GENERAL_REGS
    r187: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r187,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r186: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a31 (r186,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r185: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a34 (r185,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r184: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a35 (r184,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r183: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a36 (r183,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r182: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a39 (r182,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r181: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a40 (r181,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r180: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a41 (r180,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r179: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a44 (r179,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r178: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a47 (r178,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r177: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a50 (r177,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r176: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a54 (r176,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r175: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a55 (r175,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r174: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a58 (r174,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r173: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a61 (r173,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r172: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a64 (r172,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r171: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a69 (r171,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r170: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a70 (r170,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r169: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a74 (r169,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r168: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a77 (r168,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r167: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a78 (r167,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r166: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a82 (r166,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r165: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a84 (r165,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r164: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a86 (r164,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r163: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a90 (r163,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r162: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a92 (r162,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r161: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a94 (r161,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r160: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a98 (r160,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r159: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a100 (r159,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r158: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a102 (r158,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r157: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a59 (r157,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r156: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r156,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r152: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a81 (r152,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r151: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a83 (r151,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r147: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a89 (r147,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r146: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a91 (r146,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a97 (r142,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a99 (r141,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r140: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r140,l0) best DIREG, allocno GENERAL_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r139,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r138,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r137: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r137,l0) best SIREG, allocno GENERAL_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r136,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r135,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r134: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r134,l0) best DREG, allocno GENERAL_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r133,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r132: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r132,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r131: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r131,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r130: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r130,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r129: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r129,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r128: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a26 (r128,l0) best DIREG, allocno GENERAL_REGS
    r127: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r127,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r126: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a33 (r126,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r125: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a27 (r125,l0) best SIREG, allocno GENERAL_REGS
    r124: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a37 (r124,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r123: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a38 (r123,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r122: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a28 (r122,l0) best DREG, allocno GENERAL_REGS
    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a42 (r121,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r120: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a43 (r120,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a45 (r119,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r118: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a46 (r118,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r117: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a48 (r117,l0) best SSE_REGS, allocno SSE_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a51 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a52 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a53 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a49 (r113,l0) best SSE_REGS, allocno SSE_REGS
    r112: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a56 (r112,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a57 (r111,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a60 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a62 (r109,l0) best SSE_REGS, allocno SSE_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a65 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a66 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a67 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a68 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a63 (r104,l0) best SSE_REGS, allocno SSE_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a71 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a72 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a73 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a75 (r100,l0) best SSE_REGS, allocno SSE_REGS
    r99: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a76 (r99,l0) best SSE_REGS, allocno SSE_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a79 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a80 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a85 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a87 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a88 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a93 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a95 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a96 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a101 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r140,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a1(r137,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a2(r134,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a3(r203,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a4(r202,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a5(r201,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a6(r139,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a7(r138,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a8(r200,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a9(r199,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a10(r198,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a11(r136,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a12(r135,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a13(r197,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a14(r196,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a15(r195,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a16(r133,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a17(r132,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a18(r194,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a19(r131,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a20(r130,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a21(r129,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a22(r193,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a23(r156,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a24(r191,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a25(r192,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a26(r128,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a27(r125,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a28(r122,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a29(r188,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a30(r187,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a31(r186,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a32(r127,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a33(r126,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a34(r185,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a35(r184,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a36(r183,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a37(r124,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a38(r123,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a39(r182,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a40(r181,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a41(r180,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a42(r121,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a43(r120,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a44(r179,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a45(r119,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a46(r118,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a47(r178,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a48(r117,l0) costs: AREG:18 DREG:18 CREG:18 BREG:18 SIREG:18 DIREG:18 AD_REGS:18 CLOBBERED_REGS:18 Q_REGS:18 NON_Q_REGS:18 TLS_GOTBASE_REGS:18 GENERAL_REGS:18 FP_TOP_REG:54 FP_SECOND_REG:54 FLOAT_REGS:54 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:48 FP_TOP_SSE_REGS:56 FP_SECOND_SSE_REGS:56 FLOAT_SSE_REGS:56 FLOAT_INT_REGS:54 INT_SSE_REGS:37 FLOAT_INT_SSE_REGS:56 ALL_REGS:56 MEM:20
  a49(r113,l0) costs: AREG:18 DREG:18 CREG:18 BREG:18 SIREG:18 DIREG:18 AD_REGS:18 CLOBBERED_REGS:18 Q_REGS:18 NON_Q_REGS:18 TLS_GOTBASE_REGS:18 GENERAL_REGS:18 FP_TOP_REG:54 FP_SECOND_REG:54 FLOAT_REGS:54 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:48 FP_TOP_SSE_REGS:56 FP_SECOND_SSE_REGS:56 FLOAT_SSE_REGS:56 FLOAT_INT_REGS:54 INT_SSE_REGS:37 FLOAT_INT_SSE_REGS:56 ALL_REGS:56 MEM:22
  a50(r177,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a51(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a52(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a53(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a54(r176,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a55(r175,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a56(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a57(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a58(r174,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a59(r157,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7
  a60(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a61(r173,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a62(r109,l0) costs: AREG:18 DREG:18 CREG:18 BREG:18 SIREG:18 DIREG:18 AD_REGS:18 CLOBBERED_REGS:18 Q_REGS:18 NON_Q_REGS:18 TLS_GOTBASE_REGS:18 GENERAL_REGS:18 FP_TOP_REG:54 FP_SECOND_REG:54 FLOAT_REGS:54 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:48 FP_TOP_SSE_REGS:56 FP_SECOND_SSE_REGS:56 FLOAT_SSE_REGS:56 FLOAT_INT_REGS:54 INT_SSE_REGS:37 FLOAT_INT_SSE_REGS:56 ALL_REGS:56 MEM:20
  a63(r104,l0) costs: AREG:18 DREG:18 CREG:18 BREG:18 SIREG:18 DIREG:18 AD_REGS:18 CLOBBERED_REGS:18 Q_REGS:18 NON_Q_REGS:18 TLS_GOTBASE_REGS:18 GENERAL_REGS:18 FP_TOP_REG:54 FP_SECOND_REG:54 FLOAT_REGS:54 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:48 FP_TOP_SSE_REGS:56 FP_SECOND_SSE_REGS:56 FLOAT_SSE_REGS:56 FLOAT_INT_REGS:54 INT_SSE_REGS:37 FLOAT_INT_SSE_REGS:56 ALL_REGS:56 MEM:22
  a64(r172,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a65(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a66(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a67(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a68(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a69(r171,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a70(r170,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a71(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a72(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a73(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a74(r169,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a75(r100,l0) costs: AREG:18 DREG:18 CREG:18 BREG:18 SIREG:18 DIREG:18 AD_REGS:18 CLOBBERED_REGS:18 Q_REGS:18 NON_Q_REGS:18 TLS_GOTBASE_REGS:18 GENERAL_REGS:18 FP_TOP_REG:54 FP_SECOND_REG:54 FLOAT_REGS:54 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:48 FP_TOP_SSE_REGS:56 FP_SECOND_SSE_REGS:56 FLOAT_SSE_REGS:56 FLOAT_INT_REGS:54 INT_SSE_REGS:37 FLOAT_INT_SSE_REGS:56 ALL_REGS:56 MEM:20
  a76(r99,l0) costs: AREG:18 DREG:18 CREG:18 BREG:18 SIREG:18 DIREG:18 AD_REGS:18 CLOBBERED_REGS:18 Q_REGS:18 NON_Q_REGS:18 TLS_GOTBASE_REGS:18 GENERAL_REGS:18 FP_TOP_REG:54 FP_SECOND_REG:54 FLOAT_REGS:54 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:48 FP_TOP_SSE_REGS:56 FP_SECOND_SSE_REGS:56 FLOAT_SSE_REGS:56 FLOAT_INT_REGS:54 INT_SSE_REGS:37 FLOAT_INT_SSE_REGS:56 ALL_REGS:56 MEM:22
  a77(r168,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a78(r167,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a79(r97,l0) costs: AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:2
  a80(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a81(r152,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a82(r166,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a83(r151,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:38 INT_SSE_REGS:27 ALL_REGS:520 MEM:11
  a84(r165,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:8
  a85(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a86(r164,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a87(r93,l0) costs: AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:2
  a88(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a89(r147,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a90(r163,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a91(r146,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:38 INT_SSE_REGS:27 ALL_REGS:520 MEM:11
  a92(r162,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:8
  a93(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a94(r161,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a95(r89,l0) costs: AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:2
  a96(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a97(r142,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a98(r160,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a99(r141,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:38 INT_SSE_REGS:27 ALL_REGS:520 MEM:11
  a100(r159,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:8
  a101(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a102(r158,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8

   Insn 217(l0): point = 0
   Insn 199(l0): point = 2
   Insn 198(l0): point = 4
   Insn 197(l0): point = 6
   Insn 196(l0): point = 8
   Insn 195(l0): point = 10
   Insn 194(l0): point = 12
   Insn 193(l0): point = 14
   Insn 192(l0): point = 16
   Insn 191(l0): point = 18
   Insn 190(l0): point = 20
   Insn 189(l0): point = 22
   Insn 188(l0): point = 24
   Insn 187(l0): point = 26
   Insn 186(l0): point = 28
   Insn 185(l0): point = 30
   Insn 184(l0): point = 32
   Insn 183(l0): point = 34
   Insn 182(l0): point = 36
   Insn 181(l0): point = 38
   Insn 180(l0): point = 40
   Insn 179(l0): point = 42
   Insn 178(l0): point = 44
   Insn 177(l0): point = 46
   Insn 176(l0): point = 48
   Insn 175(l0): point = 50
   Insn 174(l0): point = 52
   Insn 173(l0): point = 54
   Insn 172(l0): point = 56
   Insn 171(l0): point = 58
   Insn 222(l0): point = 61
   Insn 108(l0): point = 64
   Insn 107(l0): point = 66
   Insn 106(l0): point = 68
   Insn 105(l0): point = 70
   Insn 218(l0): point = 73
   Insn 165(l0): point = 75
   Insn 162(l0): point = 78
   Insn 161(l0): point = 80
   Insn 160(l0): point = 82
   Insn 156(l0): point = 84
   Insn 155(l0): point = 86
   Insn 154(l0): point = 88
   Insn 153(l0): point = 90
   Insn 152(l0): point = 92
   Insn 151(l0): point = 94
   Insn 150(l0): point = 96
   Insn 149(l0): point = 98
   Insn 148(l0): point = 100
   Insn 147(l0): point = 102
   Insn 146(l0): point = 104
   Insn 145(l0): point = 106
   Insn 144(l0): point = 108
   Insn 143(l0): point = 110
   Insn 142(l0): point = 112
   Insn 141(l0): point = 114
   Insn 140(l0): point = 116
   Insn 139(l0): point = 118
   Insn 138(l0): point = 120
   Insn 137(l0): point = 122
   Insn 136(l0): point = 124
   Insn 135(l0): point = 126
   Insn 134(l0): point = 128
   Insn 133(l0): point = 130
   Insn 132(l0): point = 132
   Insn 131(l0): point = 134
   Insn 130(l0): point = 136
   Insn 129(l0): point = 138
   Insn 122(l0): point = 141
   Insn 121(l0): point = 143
   Insn 120(l0): point = 145
   Insn 119(l0): point = 147
   Insn 118(l0): point = 149
   Insn 117(l0): point = 151
   Insn 116(l0): point = 153
   Insn 115(l0): point = 155
   Insn 114(l0): point = 157
   Insn 113(l0): point = 159
   Insn 112(l0): point = 161
   Insn 111(l0): point = 163
   Insn 110(l0): point = 165
   Insn 124(l0): point = 168
   Insn 123(l0): point = 170
   Insn 103(l0): point = 173
   Insn 102(l0): point = 175
   Insn 101(l0): point = 177
   Insn 100(l0): point = 179
   Insn 99(l0): point = 181
   Insn 95(l0): point = 184
   Insn 94(l0): point = 186
   Insn 93(l0): point = 188
   Insn 88(l0): point = 191
   Insn 87(l0): point = 193
   Insn 86(l0): point = 196
   Insn 85(l0): point = 198
   Insn 84(l0): point = 200
   Insn 83(l0): point = 202
   Insn 82(l0): point = 204
   Insn 81(l0): point = 206
   Insn 80(l0): point = 208
   Insn 79(l0): point = 210
   Insn 78(l0): point = 212
   Insn 77(l0): point = 214
   Insn 76(l0): point = 216
   Insn 75(l0): point = 218
   Insn 74(l0): point = 220
   Insn 73(l0): point = 222
   Insn 72(l0): point = 224
   Insn 68(l0): point = 227
   Insn 67(l0): point = 229
   Insn 66(l0): point = 231
   Insn 61(l0): point = 234
   Insn 60(l0): point = 236
   Insn 59(l0): point = 239
   Insn 58(l0): point = 241
   Insn 57(l0): point = 243
   Insn 56(l0): point = 245
   Insn 55(l0): point = 247
   Insn 54(l0): point = 249
   Insn 50(l0): point = 251
   Insn 49(l0): point = 253
   Insn 48(l0): point = 255
   Insn 46(l0): point = 257
   Insn 44(l0): point = 259
   Insn 45(l0): point = 261
   Insn 43(l0): point = 263
   Insn 42(l0): point = 265
   Insn 41(l0): point = 267
   Insn 40(l0): point = 269
   Insn 39(l0): point = 271
   Insn 35(l0): point = 273
   Insn 34(l0): point = 275
   Insn 33(l0): point = 277
   Insn 31(l0): point = 279
   Insn 29(l0): point = 281
   Insn 30(l0): point = 283
   Insn 28(l0): point = 285
   Insn 27(l0): point = 287
   Insn 26(l0): point = 289
   Insn 25(l0): point = 291
   Insn 24(l0): point = 293
   Insn 20(l0): point = 295
   Insn 19(l0): point = 297
   Insn 18(l0): point = 299
   Insn 16(l0): point = 301
   Insn 14(l0): point = 303
   Insn 15(l0): point = 305
   Insn 13(l0): point = 307
   Insn 12(l0): point = 309
   Insn 11(l0): point = 311
   Insn 10(l0): point = 313
   Insn 9(l0): point = 315
   Insn 5(l0): point = 317
   Insn 4(l0): point = 319
   Insn 3(l0): point = 321
   Insn 2(l0): point = 323
 a0(r140): [5..14]
 a1(r137): [7..26]
 a2(r134): [9..38]
 a3(r203): [11..12]
 a4(r202): [15..16]
 a5(r201): [15..18]
 a6(r139): [19..20]
 a7(r138): [21..22]
 a8(r200): [23..24]
 a9(r199): [27..28]
 a10(r198): [27..30]
 a11(r136): [31..32]
 a12(r135): [33..34]
 a13(r197): [35..36]
 a14(r196): [39..40]
 a15(r195): [39..42]
 a16(r133): [43..44]
 a17(r132): [45..46]
 a18(r194): [47..48]
 a19(r131): [51..52]
 a20(r130): [53..54]
 a21(r129): [55..56]
 a22(r193): [57..58]
 a23(r156): [64..175]
 a24(r191): [79..80]
 a25(r192): [81..82]
 a26(r128): [87..96]
 a27(r125): [89..108]
 a28(r122): [91..120]
 a29(r188): [93..94]
 a30(r187): [97..98]
 a31(r186): [97..100]
 a32(r127): [101..102]
 a33(r126): [103..104]
 a34(r185): [105..106]
 a35(r184): [109..110]
 a36(r183): [109..112]
 a37(r124): [113..114]
 a38(r123): [115..116]
 a39(r182): [117..118]
 a40(r181): [121..122]
 a41(r180): [121..124]
 a42(r121): [125..126]
 a43(r120): [127..128]
 a44(r179): [129..130]
 a45(r119): [133..134]
 a46(r118): [135..136]
 a47(r178): [137..138]
 a48(r117): [171..172] [141..145]
 a49(r113): [171..172] [141..157]
 a50(r177): [146..147]
 a51(r116): [146..149]
 a52(r115): [150..151]
 a53(r114): [152..153]
 a54(r176): [154..155]
 a55(r175): [158..159]
 a56(r112): [158..161]
 a57(r111): [162..163]
 a58(r174): [164..165]
 a59(r157): [67..68]
 a60(r110): [176..177]
 a61(r173): [178..179]
 a62(r109): [194..200]
 a63(r104): [194..214]
 a64(r172): [201..202]
 a65(r108): [201..204]
 a66(r107): [205..206]
 a67(r106): [207..208]
 a68(r105): [209..210]
 a69(r171): [211..212]
 a70(r170): [215..216]
 a71(r103): [215..218]
 a72(r102): [219..220]
 a73(r101): [221..222]
 a74(r169): [223..224]
 a75(r100): [237..243]
 a76(r99): [237..247]
 a77(r168): [244..245]
 a78(r167): [248..249]
 a79(r97 [0]): [252..325]
 a79(r97 [1]): [251..325]
 a80(r96): [254..255]
 a81(r152): [256..257]
 a82(r166): [258..261]
 a83(r151): [258..263]
 a84(r165): [266..267]
 a85(r95): [268..269]
 a86(r164): [270..271]
 a87(r93 [0]): [274..325]
 a87(r93 [1]): [273..325]
 a88(r92): [276..277]
 a89(r147): [278..279]
 a90(r163): [280..283]
 a91(r146): [280..285]
 a92(r162): [288..289]
 a93(r91): [290..291]
 a94(r161): [292..293]
 a95(r89 [0]): [296..325]
 a95(r89 [1]): [295..325]
 a96(r88): [298..299]
 a97(r142): [300..301]
 a98(r160): [302..305]
 a99(r141): [302..307]
 a100(r159): [310..311]
 a101(r87): [312..313]
 a102(r158): [314..315]
Compressing live ranges: from 326 to 156 - 47%
Ranges after the compression:
 a0(r140): [0..1]
 a1(r137): [0..9]
 a2(r134): [0..17]
 a3(r203): [0..1]
 a4(r202): [2..3]
 a5(r201): [2..3]
 a6(r139): [4..5]
 a7(r138): [6..7]
 a8(r200): [8..9]
 a9(r199): [10..11]
 a10(r198): [10..11]
 a11(r136): [12..13]
 a12(r135): [14..15]
 a13(r197): [16..17]
 a14(r196): [18..19]
 a15(r195): [18..19]
 a16(r133): [20..21]
 a17(r132): [22..23]
 a18(r194): [24..25]
 a19(r131): [26..27]
 a20(r130): [28..29]
 a21(r129): [30..31]
 a22(r193): [32..33]
 a23(r156): [34..89]
 a24(r191): [36..37]
 a25(r192): [38..39]
 a26(r128): [40..41]
 a27(r125): [40..49]
 a28(r122): [40..57]
 a29(r188): [40..41]
 a30(r187): [42..43]
 a31(r186): [42..43]
 a32(r127): [44..45]
 a33(r126): [46..47]
 a34(r185): [48..49]
 a35(r184): [50..51]
 a36(r183): [50..51]
 a37(r124): [52..53]
 a38(r123): [54..55]
 a39(r182): [56..57]
 a40(r181): [58..59]
 a41(r180): [58..59]
 a42(r121): [60..61]
 a43(r120): [62..63]
 a44(r179): [64..65]
 a45(r119): [66..67]
 a46(r118): [68..69]
 a47(r178): [70..71]
 a48(r117): [88..89] [72..73]
 a49(r113): [88..89] [72..81]
 a50(r177): [74..75]
 a51(r116): [74..75]
 a52(r115): [76..77]
 a53(r114): [78..79]
 a54(r176): [80..81]
 a55(r175): [82..83]
 a56(r112): [82..83]
 a57(r111): [84..85]
 a58(r174): [86..87]
 a59(r157): [34..35]
 a60(r110): [90..91]
 a61(r173): [92..93]
 a62(r109): [94..95]
 a63(r104): [94..105]
 a64(r172): [96..97]
 a65(r108): [96..97]
 a66(r107): [98..99]
 a67(r106): [100..101]
 a68(r105): [102..103]
 a69(r171): [104..105]
 a70(r170): [106..107]
 a71(r103): [106..107]
 a72(r102): [108..109]
 a73(r101): [110..111]
 a74(r169): [112..113]
 a75(r100): [114..115]
 a76(r99): [114..117]
 a77(r168): [116..117]
 a78(r167): [118..119]
 a79(r97 [0]): [120..155]
 a79(r97 [1]): [120..155]
 a80(r96): [120..121]
 a81(r152): [122..123]
 a82(r166): [124..125]
 a83(r151): [124..125]
 a84(r165): [126..127]
 a85(r95): [128..129]
 a86(r164): [130..131]
 a87(r93 [0]): [132..155]
 a87(r93 [1]): [132..155]
 a88(r92): [132..133]
 a89(r147): [134..135]
 a90(r163): [136..137]
 a91(r146): [136..137]
 a92(r162): [138..139]
 a93(r91): [140..141]
 a94(r161): [142..143]
 a95(r89 [0]): [144..155]
 a95(r89 [1]): [144..155]
 a96(r88): [144..145]
 a97(r142): [146..147]
 a98(r160): [148..149]
 a99(r141): [148..149]
 a100(r159): [150..151]
 a101(r87): [152..153]
 a102(r158): [154..155]
  regions=1, blocks=16, points=156
    allocnos=103 (big 3), copies=0, conflicts=0, ranges=108
Disposition:
  101:r87  l0     0   96:r88  l0     0   95:r89  l0    41   93:r91  l0     0
   88:r92  l0     0   87:r93  l0    39   85:r95  l0     0   80:r96  l0     0
   79:r97  l0    37   76:r99  l0    21   75:r100 l0    22   73:r101 l0     0
   72:r102 l0     0   71:r103 l0     1   63:r104 l0    21   68:r105 l0     0
   67:r106 l0     0   66:r107 l0     0   65:r108 l0     1   62:r109 l0    22
   60:r110 l0     0   57:r111 l0     0   56:r112 l0     1   49:r113 l0    21
   53:r114 l0     0   52:r115 l0     0   51:r116 l0     1   48:r117 l0    22
   46:r118 l0     0   45:r119 l0     0   43:r120 l0     0   42:r121 l0     0
   28:r122 l0     1   38:r123 l0     0   37:r124 l0     0   27:r125 l0     4
   33:r126 l0     0   32:r127 l0     0   26:r128 l0     5   21:r129 l0     0
   20:r130 l0     0   19:r131 l0     0   17:r132 l0     0   16:r133 l0     0
    2:r134 l0     1   12:r135 l0     0   11:r136 l0     0    1:r137 l0     4
    7:r138 l0     0    6:r139 l0     0    0:r140 l0     5   99:r141 l0     0
   97:r142 l0     0   91:r146 l0     0   89:r147 l0     0   83:r151 l0     0
   81:r152 l0     0   23:r156 l0     3   59:r157 l0     0  102:r158 l0     0
  100:r159 l0     0   98:r160 l0     1   94:r161 l0     0   92:r162 l0     0
   90:r163 l0     1   86:r164 l0     0   84:r165 l0     0   82:r166 l0     1
   78:r167 l0     0   77:r168 l0     0   74:r169 l0     0   70:r170 l0     0
   69:r171 l0     0   64:r172 l0     0   61:r173 l0     0   58:r174 l0     0
   55:r175 l0     0   54:r176 l0     0   50:r177 l0     0   47:r178 l0     0
   44:r179 l0     0   41:r180 l0     1   40:r181 l0     0   39:r182 l0     0
   36:r183 l0     2   35:r184 l0     0   34:r185 l0     0   31:r186 l0     2
   30:r187 l0     0   29:r188 l0     0   24:r191 l0     0   25:r192 l0     0
   22:r193 l0     0   18:r194 l0     0   15:r195 l0     1   14:r196 l0     0
   13:r197 l0     0   10:r198 l0     2    9:r199 l0     0    8:r200 l0     0
    5:r201 l0     2    4:r202 l0     0    3:r203 l0     0
+++Costs: overall -2, reg -2, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


segspl

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags]
;;  ref usage 	r0={5d} r1={7d,3u} r2={7d,3u} r4={9d,5u} r5={9d,5u} r6={1d,15u} r7={1d,19u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r16={1d,14u} r17={48d,11u} r18={4d} r19={4d} r20={1d,66u,10e} r21={5d} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={5d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={5d} r38={5d} r39={4d} r40={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r87={1d,1u} r88={1d,1u} r89={2d,2u} r91={1d,1u} r92={1d,1u} r93={2d,2u} r95={1d,1u} r96={1d,1u} r97={2d,2u} r99={1d,2u} r100={1d,2u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,2u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,2u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,2u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,2u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,1u} r127={1d,1u} r128={1d,1u} r129={1d,1u} r130={1d,1u} r131={1d,1u} r132={1d,1u} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,2u} r142={1d,1u} r146={1d,2u} r147={1d,1u} r151={1d,2u} r152={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d,1u} r165={1d,1u} r166={1d,1u} r167={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,1u} r171={1d,1u} r172={1d,1u} r173={1d,1u} r174={1d,1u} r175={1d,1u} r176={1d,1u} r177={1d,1u} r178={1d,1u} r179={1d,1u} r180={1d,1u,1e} r181={1d,1u} r182={1d,1u} r183={1d,1u,1e} r184={1d,1u} r185={1d,1u} r186={1d,1u,1e} r187={1d,1u} r188={1d,1u} r191={1d,1u} r192={1d,1u} r193={1d,1u} r194={1d,1u} r195={1d,1u,1e} r196={1d,1u} r197={1d,1u} r198={1d,1u,1e} r199={1d,1u} r200={1d,1u} r201={1d,1u,1e} r202={1d,1u} r203={1d,1u} 
;;    total ref usage 741{469d,256u,16e} in 156{152 regular + 4 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 93 97
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 93 97
;; lr  def 	 17 [flags] 87 88 91 92 95 96 99 100 141 142 146 147 151 152 158 159 160 161 162 163 164 165 166 167 168
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [5 x+0 S8 A64])
        (reg:DI 5 di [ x ])) "../src/spline.f":634 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ x ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [5 xs+0 S8 A64])
        (reg:DI 4 si [ xs ])) "../src/spline.f":634 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ xs ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [5 s+0 S8 A64])
        (reg:DI 1 dx [ s ])) "../src/spline.f":634 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ s ])
        (nil)))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [6 n+0 S8 A64])
        (reg:DI 2 cx [ n ])) "../src/spline.f":634 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [ n ])
        (nil)))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (reg/f:DI 158)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [6 n+0 S8 A64])) "../src/spline.f":634 81 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:SI 87 [ _1 ])
        (mem:SI (reg/f:DI 158) [1 *n_61(D)+0 S4 A32])) "../src/spline.f":634 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 158)
        (nil)))
(insn 11 10 12 2 (set (reg:DI 159)
        (sign_extend:DI (reg:SI 87 [ _1 ]))) "../src/spline.f":634 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 87 [ _1 ])
        (nil)))
(insn 12 11 13 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 ubound.93+0 S8 A64])
        (reg:DI 159)) "../src/spline.f":634 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 159)
        (nil)))
(insn 13 12 15 2 (set (reg:DI 141 [ size.94_63 ])
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 ubound.93+0 S8 A64])) "../src/spline.f":634 81 {*movdi_internal}
     (nil))
(insn 15 13 14 2 (set (reg:DI 160)
        (const_int 0 [0])) "../src/spline.f":634 81 {*movdi_internal}
     (nil))
(insn 14 15 16 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 141 [ size.94_63 ])
            (const_int 0 [0]))) "../src/spline.f":634 4 {*cmpdi_ccno_1}
     (nil))
(insn 16 14 18 2 (set (reg:DI 142 [ size.94_64 ])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 141 [ size.94_63 ])
            (reg:DI 160))) "../src/spline.f":634 967 {*movdicc_noc}
     (expr_list:REG_DEAD (reg:DI 160)
        (expr_list:REG_DEAD (reg:DI 141 [ size.94_63 ])
            (expr_list:REG_DEAD (reg:CCGOC 17 flags)
                (nil)))))
(insn 18 16 19 2 (set (reg:DI 88 [ size.246_2 ])
        (reg:DI 142 [ size.94_64 ])) "../src/spline.f":634 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 142 [ size.94_64 ])
        (nil)))
(insn 19 18 20 2 (set (subreg:DI (reg:TI 89 [ _3 ]) 0)
        (reg:DI 88 [ size.246_2 ])) "../src/spline.f":634 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88 [ size.246_2 ])
        (nil)))
(insn 20 19 24 2 (set (subreg:DI (reg:TI 89 [ _3 ]) 8)
        (const_int 0 [0])) "../src/spline.f":634 81 {*movdi_internal}
     (expr_list:REG_UNUSED (reg:TI 89 [ _3 ])
        (nil)))
(insn 24 20 25 2 (set (reg/f:DI 161)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [6 n+0 S8 A64])) "../src/spline.f":634 81 {*movdi_internal}
     (nil))
(insn 25 24 26 2 (set (reg:SI 91 [ _5 ])
        (mem:SI (reg/f:DI 161) [1 *n_61(D)+0 S4 A32])) "../src/spline.f":634 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 161)
        (nil)))
(insn 26 25 27 2 (set (reg:DI 162)
        (sign_extend:DI (reg:SI 91 [ _5 ]))) "../src/spline.f":634 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 91 [ _5 ])
        (nil)))
(insn 27 26 28 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [2 ubound.95+0 S8 A64])
        (reg:DI 162)) "../src/spline.f":634 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 162)
        (nil)))
(insn 28 27 30 2 (set (reg:DI 146 [ size.96_69 ])
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [2 ubound.95+0 S8 A64])) "../src/spline.f":634 81 {*movdi_internal}
     (nil))
(insn 30 28 29 2 (set (reg:DI 163)
        (const_int 0 [0])) "../src/spline.f":634 81 {*movdi_internal}
     (nil))
(insn 29 30 31 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 146 [ size.96_69 ])
            (const_int 0 [0]))) "../src/spline.f":634 4 {*cmpdi_ccno_1}
     (nil))
(insn 31 29 33 2 (set (reg:DI 147 [ size.96_70 ])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 146 [ size.96_69 ])
            (reg:DI 163))) "../src/spline.f":634 967 {*movdicc_noc}
     (expr_list:REG_DEAD (reg:DI 163)
        (expr_list:REG_DEAD (reg:DI 146 [ size.96_69 ])
            (expr_list:REG_DEAD (reg:CCGOC 17 flags)
                (nil)))))
(insn 33 31 34 2 (set (reg:DI 92 [ size.248_6 ])
        (reg:DI 147 [ size.96_70 ])) "../src/spline.f":634 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 147 [ size.96_70 ])
        (nil)))
(insn 34 33 35 2 (set (subreg:DI (reg:TI 93 [ _7 ]) 0)
        (reg:DI 92 [ size.248_6 ])) "../src/spline.f":634 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 92 [ size.248_6 ])
        (nil)))
(insn 35 34 39 2 (set (subreg:DI (reg:TI 93 [ _7 ]) 8)
        (const_int 0 [0])) "../src/spline.f":634 81 {*movdi_internal}
     (expr_list:REG_UNUSED (reg:TI 93 [ _7 ])
        (nil)))
(insn 39 35 40 2 (set (reg/f:DI 164)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [6 n+0 S8 A64])) "../src/spline.f":634 81 {*movdi_internal}
     (nil))
(insn 40 39 41 2 (set (reg:SI 95 [ _9 ])
        (mem:SI (reg/f:DI 164) [1 *n_61(D)+0 S4 A32])) "../src/spline.f":634 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 164)
        (nil)))
(insn 41 40 42 2 (set (reg:DI 165)
        (sign_extend:DI (reg:SI 95 [ _9 ]))) "../src/spline.f":634 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 95 [ _9 ])
        (nil)))
(insn 42 41 43 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [2 ubound.97+0 S8 A64])
        (reg:DI 165)) "../src/spline.f":634 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 165)
        (nil)))
(insn 43 42 45 2 (set (reg:DI 151 [ size.98_75 ])
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [2 ubound.97+0 S8 A64])) "../src/spline.f":634 81 {*movdi_internal}
     (nil))
(insn 45 43 44 2 (set (reg:DI 166)
        (const_int 0 [0])) "../src/spline.f":634 81 {*movdi_internal}
     (nil))
(insn 44 45 46 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 151 [ size.98_75 ])
            (const_int 0 [0]))) "../src/spline.f":634 4 {*cmpdi_ccno_1}
     (nil))
(insn 46 44 48 2 (set (reg:DI 152 [ size.98_76 ])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 151 [ size.98_75 ])
            (reg:DI 166))) "../src/spline.f":634 967 {*movdicc_noc}
     (expr_list:REG_DEAD (reg:DI 166)
        (expr_list:REG_DEAD (reg:DI 151 [ size.98_75 ])
            (expr_list:REG_DEAD (reg:CCGOC 17 flags)
                (nil)))))
(insn 48 46 49 2 (set (reg:DI 96 [ size.250_10 ])
        (reg:DI 152 [ size.98_76 ])) "../src/spline.f":634 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 152 [ size.98_76 ])
        (nil)))
(insn 49 48 50 2 (set (subreg:DI (reg:TI 97 [ _11 ]) 0)
        (reg:DI 96 [ size.250_10 ])) "../src/spline.f":634 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 96 [ size.250_10 ])
        (nil)))
(insn 50 49 54 2 (set (subreg:DI (reg:TI 97 [ _11 ]) 8)
        (const_int 0 [0])) "../src/spline.f":634 81 {*movdi_internal}
     (expr_list:REG_UNUSED (reg:TI 97 [ _11 ])
        (nil)))
(insn 54 50 55 2 (set (reg/f:DI 167)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [5 s+0 S8 A64])) "../src/spline.f":643 81 {*movdi_internal}
     (nil))
(insn 55 54 56 2 (set (reg:SF 99 [ _13 ])
        (mem:SF (reg/f:DI 167) [3 *s_80(D)+0 S4 A32])) "../src/spline.f":643 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 167)
        (nil)))
(insn 56 55 57 2 (set (reg/f:DI 168)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [5 s+0 S8 A64])) "../src/spline.f":643 81 {*movdi_internal}
     (nil))
(insn 57 56 58 2 (set (reg:SF 100 [ _14 ])
        (mem:SF (plus:DI (reg/f:DI 168)
                (const_int 4 [0x4])) [3 *s_80(D)+4 S4 A32])) "../src/spline.f":643 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 168)
        (nil)))
(insn 58 57 59 2 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 99 [ _13 ])
            (reg:SF 100 [ _14 ]))) "../src/spline.f":643 51 {*cmpiusf}
     (nil))
(jump_insn 59 58 205 2 (set (pc)
        (if_then_else (unordered (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref 70)
            (pc))) "../src/spline.f":643 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil))
 -> 70)
;;  succ:       5
;;              3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 99 100

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 99 100
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 99 100
;; lr  def 	 17 [flags]
(note 205 59 60 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 60 205 61 3 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 99 [ _13 ])
            (reg:SF 100 [ _14 ]))) "../src/spline.f":643 51 {*cmpiusf}
     (expr_list:REG_DEAD (reg:SF 100 [ _14 ])
        (expr_list:REG_DEAD (reg:SF 99 [ _13 ])
            (nil))))
(jump_insn 61 60 65 3 (set (pc)
        (if_then_else (ltgt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 70)
            (pc))) "../src/spline.f":643 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil))
 -> 70)
;;  succ:       4 (FALLTHRU)
;;              5
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 65 61 66 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 66 65 67 4 (set (reg:SI 4 si)
        (const_int 37 [0x25])) "../src/spline.f":643 82 {*movsi_internal}
     (nil))
(insn 67 66 68 4 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*lC17") [flags 0x2]  <var_decl 0x143579a20 *lC17>)) "../src/spline.f":643 81 {*movdi_internal}
     (nil))
(call_insn 68 67 69 4 (call (mem:QI (symbol_ref:DI ("_gfortran_stop_string") [flags 0x41]  <function_decl 0x1427c2200 _gfortran_stop_string>) [0 _gfortran_stop_string S1 A8])
        (const_int 0 [0])) "../src/spline.f":643 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 69 68 70)
;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       2
;;              3
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 101 102 103 104 105 106 107 108 109 169 170 171 172
(code_label 70 69 71 5 152 (nil) [2 uses])
(note 71 70 72 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 72 71 73 5 (set (reg/f:DI 169)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [6 n+0 S8 A64])) "../src/spline.f":644 81 {*movdi_internal}
     (nil))
(insn 73 72 74 5 (set (reg:SI 101 [ _15 ])
        (mem:SI (reg/f:DI 169) [1 *n_61(D)+0 S4 A32])) "../src/spline.f":644 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 169)
        (nil)))
(insn 74 73 75 5 (set (reg:DI 102 [ _16 ])
        (sign_extend:DI (reg:SI 101 [ _15 ]))) "../src/spline.f":644 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 101 [ _15 ])
        (nil)))
(insn 75 74 76 5 (parallel [
            (set (reg:DI 103 [ _17 ])
                (plus:DI (reg:DI 102 [ _16 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":644 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 102 [ _16 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 76 75 77 5 (set (reg/f:DI 170)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [5 s+0 S8 A64])) "../src/spline.f":644 81 {*movdi_internal}
     (nil))
(insn 77 76 78 5 (set (reg:SF 104 [ _18 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 103 [ _17 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 170)) [3 *s_80(D) S4 A32])) "../src/spline.f":644 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 170)
        (expr_list:REG_DEAD (reg:DI 103 [ _17 ])
            (nil))))
(insn 78 77 79 5 (set (reg/f:DI 171)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [6 n+0 S8 A64])) "../src/spline.f":644 81 {*movdi_internal}
     (nil))
(insn 79 78 80 5 (set (reg:SI 105 [ _19 ])
        (mem:SI (reg/f:DI 171) [1 *n_61(D)+0 S4 A32])) "../src/spline.f":644 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 171)
        (nil)))
(insn 80 79 81 5 (parallel [
            (set (reg:SI 106 [ _20 ])
                (plus:SI (reg:SI 105 [ _19 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":644 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 105 [ _19 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 81 80 82 5 (set (reg:DI 107 [ _21 ])
        (sign_extend:DI (reg:SI 106 [ _20 ]))) "../src/spline.f":644 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 106 [ _20 ])
        (nil)))
(insn 82 81 83 5 (parallel [
            (set (reg:DI 108 [ _22 ])
                (plus:DI (reg:DI 107 [ _21 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":644 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 107 [ _21 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 83 82 84 5 (set (reg/f:DI 172)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [5 s+0 S8 A64])) "../src/spline.f":644 81 {*movdi_internal}
     (nil))
(insn 84 83 85 5 (set (reg:SF 109 [ _23 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 108 [ _22 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 172)) [3 *s_80(D) S4 A32])) "../src/spline.f":644 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 172)
        (expr_list:REG_DEAD (reg:DI 108 [ _22 ])
            (nil))))
(insn 85 84 86 5 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 104 [ _18 ])
            (reg:SF 109 [ _23 ]))) "../src/spline.f":644 51 {*cmpiusf}
     (nil))
(jump_insn 86 85 208 5 (set (pc)
        (if_then_else (unordered (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref 97)
            (pc))) "../src/spline.f":644 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil))
 -> 97)
;;  succ:       8
;;              6 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 109

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (RTL)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 109
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 109
;; lr  def 	 17 [flags]
(note 208 86 87 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 87 208 88 6 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 104 [ _18 ])
            (reg:SF 109 [ _23 ]))) "../src/spline.f":644 51 {*cmpiusf}
     (expr_list:REG_DEAD (reg:SF 109 [ _23 ])
        (expr_list:REG_DEAD (reg:SF 104 [ _18 ])
            (nil))))
(jump_insn 88 87 92 6 (set (pc)
        (if_then_else (ltgt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 97)
            (pc))) "../src/spline.f":644 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil))
 -> 97)
;;  succ:       7 (FALLTHRU)
;;              8
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (RTL)
;;  pred:       6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 92 88 93 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 93 92 94 7 (set (reg:SI 4 si)
        (const_int 37 [0x25])) "../src/spline.f":644 82 {*movsi_internal}
     (nil))
(insn 94 93 95 7 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*lC18") [flags 0x2]  <var_decl 0x143579ab0 *lC18>)) "../src/spline.f":644 81 {*movdi_internal}
     (nil))
(call_insn 95 94 96 7 (call (mem:QI (symbol_ref:DI ("_gfortran_stop_string") [flags 0x41]  <function_decl 0x1427c2200 _gfortran_stop_string>) [0 _gfortran_stop_string S1 A8])
        (const_int 0 [0])) "../src/spline.f":644 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 96 95 97)
;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (RTL)
;;  pred:       5
;;              6
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 110 156 173
(code_label 97 96 98 8 154 (nil) [2 uses])
(note 98 97 99 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 99 98 100 8 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 iseg0+0 S4 A32])
        (const_int 1 [0x1])) "../src/spline.f":646 82 {*movsi_internal}
     (nil))
(insn 100 99 101 8 (set (reg/f:DI 173)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [6 n+0 S8 A64])) "../src/spline.f":647 81 {*movdi_internal}
     (nil))
(insn 101 100 102 8 (set (reg:SI 110 [ _24 ])
        (mem:SI (reg/f:DI 173) [1 *n_61(D)+0 S4 A32])) "../src/spline.f":647 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 173)
        (nil)))
(insn 102 101 103 8 (parallel [
            (set (reg:SI 156 [ _82 ])
                (plus:SI (reg:SI 110 [ _24 ])
                    (const_int -2 [0xfffffffffffffffe])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":647 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 110 [ _24 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 103 102 166 8 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 iseg+0 S4 A32])
        (const_int 2 [0x2])) "../src/spline.f":647 82 {*movsi_internal}
     (nil))
;;  succ:       9 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 156

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (RTL)
;;  pred:       8 (FALLTHRU)
;;              13 [100.0%] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 156
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 156
;; lr  def 	 17 [flags] 157
(code_label 166 103 104 9 159 (nil) [1 uses])
(note 104 166 105 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 105 104 106 9 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [1 iseg+0 S4 A32])
            (reg:SI 156 [ _82 ]))) "../src/spline.f":647 7 {*cmpsi_1}
     (nil))
(insn 106 105 107 9 (set (reg:QI 157 [ _84 ])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "../src/spline.f":647 613 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil)))
(insn 107 106 108 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 157 [ _84 ])
            (const_int 0 [0]))) "../src/spline.f":647 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 157 [ _84 ])
        (nil)))
(jump_insn 108 107 109 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 221)
            (pc))) "../src/spline.f":647 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 221)
;;  succ:       15
;;              10 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 156

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (RTL)
;;  pred:       9 (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 156
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 111 112 113 114 115 116 117 174 175 176 177
(note 109 108 110 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 110 109 111 10 (set (reg:SI 174)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 iseg+0 S4 A32])) "../src/spline.f":648 82 {*movsi_internal}
     (nil))
(insn 111 110 112 10 (set (reg:DI 111 [ _25 ])
        (sign_extend:DI (reg:SI 174))) "../src/spline.f":648 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 174)
        (nil)))
(insn 112 111 113 10 (parallel [
            (set (reg:DI 112 [ _26 ])
                (plus:DI (reg:DI 111 [ _25 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":648 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 111 [ _25 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 113 112 114 10 (set (reg/f:DI 175)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [5 s+0 S8 A64])) "../src/spline.f":648 81 {*movdi_internal}
     (nil))
(insn 114 113 115 10 (set (reg:SF 113 [ _27 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 112 [ _26 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 175)) [3 *s_80(D) S4 A32])) "../src/spline.f":648 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 175)
        (expr_list:REG_DEAD (reg:DI 112 [ _26 ])
            (nil))))
(insn 115 114 116 10 (set (reg:SI 176)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 iseg+0 S4 A32])) "../src/spline.f":648 82 {*movsi_internal}
     (nil))
(insn 116 115 117 10 (parallel [
            (set (reg:SI 114 [ _28 ])
                (plus:SI (reg:SI 176)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":648 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 176)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 iseg+0 S4 A32])
                    (const_int 1 [0x1]))
                (nil)))))
(insn 117 116 118 10 (set (reg:DI 115 [ _29 ])
        (sign_extend:DI (reg:SI 114 [ _28 ]))) "../src/spline.f":648 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 114 [ _28 ])
        (nil)))
(insn 118 117 119 10 (parallel [
            (set (reg:DI 116 [ _30 ])
                (plus:DI (reg:DI 115 [ _29 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":648 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 115 [ _29 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 119 118 120 10 (set (reg/f:DI 177)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [5 s+0 S8 A64])) "../src/spline.f":648 81 {*movdi_internal}
     (nil))
(insn 120 119 121 10 (set (reg:SF 117 [ _31 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 116 [ _30 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 177)) [3 *s_80(D) S4 A32])) "../src/spline.f":648 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 177)
        (expr_list:REG_DEAD (reg:DI 116 [ _30 ])
            (nil))))
(insn 121 120 122 10 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 113 [ _27 ])
            (reg:SF 117 [ _31 ]))) "../src/spline.f":648 51 {*cmpiusf}
     (nil))
(jump_insn 122 121 211 10 (set (pc)
        (if_then_else (unordered (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref 163)
            (pc))) "../src/spline.f":648 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil))
 -> 163)
;;  succ:       13
;;              11 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 113 117 156

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (RTL)
;;  pred:       10 (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 113 117 156
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 113 117
;; lr  def 	 17 [flags]
(note 211 122 123 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 123 211 124 11 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 113 [ _27 ])
            (reg:SF 117 [ _31 ]))) "../src/spline.f":648 51 {*cmpiusf}
     (expr_list:REG_DEAD (reg:SF 117 [ _31 ])
        (expr_list:REG_DEAD (reg:SF 113 [ _27 ])
            (nil))))
(jump_insn 124 123 128 11 (set (pc)
        (if_then_else (ltgt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 163)
            (pc))) "../src/spline.f":648 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil))
 -> 163)
;;  succ:       12 (FALLTHRU)
;;              13
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 156

;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (RTL)
;;  pred:       11 (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 156
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 118 119 120 121 122 123 124 125 126 127 128 178 179 180 181 182 183 184 185 186 187 188 191 192
(note 128 124 129 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 129 128 130 12 (set (reg:SI 178)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 iseg+0 S4 A32])) "../src/spline.f":649 82 {*movsi_internal}
     (nil))
(insn 130 129 131 12 (parallel [
            (set (reg:SI 118 [ _32 ])
                (minus:SI (reg:SI 178)
                    (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [1 iseg0+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":649 273 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 178)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 iseg+0 S4 A32])
                    (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [1 iseg0+0 S4 A32]))
                (nil)))))
(insn 131 130 132 12 (parallel [
            (set (reg:SI 119 [ _33 ])
                (plus:SI (reg:SI 118 [ _32 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":649 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 118 [ _32 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 132 131 133 12 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -36 [0xffffffffffffffdc])) [1 nseg+0 S4 A32])
        (reg:SI 119 [ _33 ])) "../src/spline.f":649 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 119 [ _33 ])
        (nil)))
(insn 133 132 134 12 (set (reg:SI 179)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 iseg0+0 S4 A32])) "../src/spline.f":650 82 {*movsi_internal}
     (nil))
(insn 134 133 135 12 (set (reg:DI 120 [ _34 ])
        (sign_extend:DI (reg:SI 179))) "../src/spline.f":650 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 179)
        (nil)))
(insn 135 134 136 12 (parallel [
            (set (reg:DI 121 [ _35 ])
                (plus:DI (reg:DI 120 [ _34 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":650 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 120 [ _34 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 136 135 137 12 (parallel [
            (set (reg:DI 180)
                (ashift:DI (reg:DI 121 [ _35 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":650 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 121 [ _35 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 137 136 138 12 (set (reg/f:DI 181)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [5 s+0 S8 A64])) "../src/spline.f":650 81 {*movdi_internal}
     (nil))
(insn 138 137 139 12 (parallel [
            (set (reg/f:DI 122 [ _36 ])
                (plus:DI (reg:DI 180)
                    (reg/f:DI 181)))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":650 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 181)
        (expr_list:REG_DEAD (reg:DI 180)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -72 [0xffffffffffffffb8])) [5 s+0 S8 A64])
                        (reg:DI 180))
                    (nil))))))
(insn 139 138 140 12 (set (reg:SI 182)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 iseg0+0 S4 A32])) "../src/spline.f":650 82 {*movsi_internal}
     (nil))
(insn 140 139 141 12 (set (reg:DI 123 [ _37 ])
        (sign_extend:DI (reg:SI 182))) "../src/spline.f":650 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 182)
        (nil)))
(insn 141 140 142 12 (parallel [
            (set (reg:DI 124 [ _38 ])
                (plus:DI (reg:DI 123 [ _37 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":650 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 123 [ _37 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 142 141 143 12 (parallel [
            (set (reg:DI 183)
                (ashift:DI (reg:DI 124 [ _38 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":650 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 124 [ _38 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 143 142 144 12 (set (reg/f:DI 184)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [5 xs+0 S8 A64])) "../src/spline.f":650 81 {*movdi_internal}
     (nil))
(insn 144 143 145 12 (parallel [
            (set (reg/f:DI 125 [ _39 ])
                (plus:DI (reg:DI 183)
                    (reg/f:DI 184)))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":650 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 184)
        (expr_list:REG_DEAD (reg:DI 183)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -64 [0xffffffffffffffc0])) [5 xs+0 S8 A64])
                        (reg:DI 183))
                    (nil))))))
(insn 145 144 146 12 (set (reg:SI 185)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 iseg0+0 S4 A32])) "../src/spline.f":650 82 {*movsi_internal}
     (nil))
(insn 146 145 147 12 (set (reg:DI 126 [ _40 ])
        (sign_extend:DI (reg:SI 185))) "../src/spline.f":650 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 185)
        (nil)))
(insn 147 146 148 12 (parallel [
            (set (reg:DI 127 [ _41 ])
                (plus:DI (reg:DI 126 [ _40 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":650 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 126 [ _40 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 148 147 149 12 (parallel [
            (set (reg:DI 186)
                (ashift:DI (reg:DI 127 [ _41 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":650 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 127 [ _41 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 149 148 150 12 (set (reg/f:DI 187)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [5 x+0 S8 A64])) "../src/spline.f":650 81 {*movdi_internal}
     (nil))
(insn 150 149 151 12 (parallel [
            (set (reg/f:DI 128 [ _42 ])
                (plus:DI (reg:DI 186)
                    (reg/f:DI 187)))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":650 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 187)
        (expr_list:REG_DEAD (reg:DI 186)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -56 [0xffffffffffffffc8])) [5 x+0 S8 A64])
                        (reg:DI 186))
                    (nil))))))
(insn 151 150 152 12 (parallel [
            (set (reg:DI 188)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -36 [0xffffffffffffffdc])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":650 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 152 151 153 12 (set (reg:DI 2 cx)
        (reg:DI 188)) "../src/spline.f":650 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 188)
        (nil)))
(insn 153 152 154 12 (set (reg:DI 1 dx)
        (reg/f:DI 122 [ _36 ])) "../src/spline.f":650 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 122 [ _36 ])
        (nil)))
(insn 154 153 155 12 (set (reg:DI 4 si)
        (reg/f:DI 125 [ _39 ])) "../src/spline.f":650 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 125 [ _39 ])
        (nil)))
(insn 155 154 156 12 (set (reg:DI 5 di)
        (reg/f:DI 128 [ _42 ])) "../src/spline.f":650 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 128 [ _42 ])
        (nil)))
(call_insn 156 155 160 12 (call (mem:QI (symbol_ref:DI ("spline_") [flags 0x403]  <function_decl 0x1427e4d00 spline>) [0 spline S1 A8])
        (const_int 0 [0])) "../src/spline.f":650 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 160 156 161 12 (set (reg:SI 192)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 iseg+0 S4 A32])) "../src/spline.f":651 82 {*movsi_internal}
     (nil))
(insn 161 160 162 12 (parallel [
            (set (reg:SI 191)
                (plus:SI (reg:SI 192)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":651 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 192)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 iseg+0 S4 A32])
                    (const_int 1 [0x1]))
                (nil)))))
(insn 162 161 163 12 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 iseg0+0 S4 A32])
        (reg:SI 191)) "../src/spline.f":651 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 191)
        (nil)))
;;  succ:       13 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 156

;; basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 15, flags: (RTL)
;;  pred:       12 (FALLTHRU)
;;              10
;;              11
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 156
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 163 162 164 13 157 (nil) [2 uses])
(note 164 163 165 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 165 164 218 13 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -4 [0xfffffffffffffffc])) [1 iseg+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 iseg+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":647 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 218 165 219 13 (set (pc)
        (label_ref 166)) "../src/spline.f":647 649 {jump}
     (nil)
 -> 166)
;;  succ:       9 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 156

(barrier 219 218 221)
;; basic block 15, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 13, next block 14, flags: (RTL)
;;  pred:       9
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 221 219 220 15 164 (nil) [1 uses])
(note 220 221 222 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 222 220 169 15 (const_int 0 [0]) "../src/spline.f":653 682 {nop}
     (nil))
;;  succ:       14 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 14, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 15, next block 1, flags: (RTL)
;;  pred:       15 [100.0%]  (FALLTHRU)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 129 130 131 132 133 134 135 136 137 138 139 140 193 194 195 196 197 198 199 200 201 202 203
(code_label 169 222 170 14 156 (nil) [0 uses])
(note 170 169 171 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 171 170 172 14 (set (reg/f:DI 193)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [6 n+0 S8 A64])) "../src/spline.f":655 81 {*movdi_internal}
     (nil))
(insn 172 171 173 14 (set (reg:SI 129 [ _43 ])
        (mem:SI (reg/f:DI 193) [1 *n_61(D)+0 S4 A32])) "../src/spline.f":655 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 193)
        (nil)))
(insn 173 172 174 14 (parallel [
            (set (reg:SI 130 [ _44 ])
                (minus:SI (reg:SI 129 [ _43 ])
                    (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [1 iseg0+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":655 273 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 129 [ _43 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 174 173 175 14 (parallel [
            (set (reg:SI 131 [ _45 ])
                (plus:SI (reg:SI 130 [ _44 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":655 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 130 [ _44 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 175 174 176 14 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -36 [0xffffffffffffffdc])) [1 nseg+0 S4 A32])
        (reg:SI 131 [ _45 ])) "../src/spline.f":655 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 131 [ _45 ])
        (nil)))
(insn 176 175 177 14 (set (reg:SI 194)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 iseg0+0 S4 A32])) "../src/spline.f":656 82 {*movsi_internal}
     (nil))
(insn 177 176 178 14 (set (reg:DI 132 [ _46 ])
        (sign_extend:DI (reg:SI 194))) "../src/spline.f":656 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 194)
        (nil)))
(insn 178 177 179 14 (parallel [
            (set (reg:DI 133 [ _47 ])
                (plus:DI (reg:DI 132 [ _46 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":656 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 132 [ _46 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 179 178 180 14 (parallel [
            (set (reg:DI 195)
                (ashift:DI (reg:DI 133 [ _47 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":656 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 133 [ _47 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 180 179 181 14 (set (reg/f:DI 196)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [5 s+0 S8 A64])) "../src/spline.f":656 81 {*movdi_internal}
     (nil))
(insn 181 180 182 14 (parallel [
            (set (reg/f:DI 134 [ _48 ])
                (plus:DI (reg:DI 195)
                    (reg/f:DI 196)))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":656 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 196)
        (expr_list:REG_DEAD (reg:DI 195)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -72 [0xffffffffffffffb8])) [5 s+0 S8 A64])
                        (reg:DI 195))
                    (nil))))))
(insn 182 181 183 14 (set (reg:SI 197)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 iseg0+0 S4 A32])) "../src/spline.f":656 82 {*movsi_internal}
     (nil))
(insn 183 182 184 14 (set (reg:DI 135 [ _49 ])
        (sign_extend:DI (reg:SI 197))) "../src/spline.f":656 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 197)
        (nil)))
(insn 184 183 185 14 (parallel [
            (set (reg:DI 136 [ _50 ])
                (plus:DI (reg:DI 135 [ _49 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":656 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 135 [ _49 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 185 184 186 14 (parallel [
            (set (reg:DI 198)
                (ashift:DI (reg:DI 136 [ _50 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":656 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 136 [ _50 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 186 185 187 14 (set (reg/f:DI 199)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [5 xs+0 S8 A64])) "../src/spline.f":656 81 {*movdi_internal}
     (nil))
(insn 187 186 188 14 (parallel [
            (set (reg/f:DI 137 [ _51 ])
                (plus:DI (reg:DI 198)
                    (reg/f:DI 199)))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":656 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 199)
        (expr_list:REG_DEAD (reg:DI 198)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -64 [0xffffffffffffffc0])) [5 xs+0 S8 A64])
                        (reg:DI 198))
                    (nil))))))
(insn 188 187 189 14 (set (reg:SI 200)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 iseg0+0 S4 A32])) "../src/spline.f":656 82 {*movsi_internal}
     (nil))
(insn 189 188 190 14 (set (reg:DI 138 [ _52 ])
        (sign_extend:DI (reg:SI 200))) "../src/spline.f":656 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 200)
        (nil)))
(insn 190 189 191 14 (parallel [
            (set (reg:DI 139 [ _53 ])
                (plus:DI (reg:DI 138 [ _52 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":656 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 138 [ _52 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 191 190 192 14 (parallel [
            (set (reg:DI 201)
                (ashift:DI (reg:DI 139 [ _53 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":656 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 139 [ _53 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 192 191 193 14 (set (reg/f:DI 202)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [5 x+0 S8 A64])) "../src/spline.f":656 81 {*movdi_internal}
     (nil))
(insn 193 192 194 14 (parallel [
            (set (reg/f:DI 140 [ _54 ])
                (plus:DI (reg:DI 201)
                    (reg/f:DI 202)))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":656 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 202)
        (expr_list:REG_DEAD (reg:DI 201)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -56 [0xffffffffffffffc8])) [5 x+0 S8 A64])
                        (reg:DI 201))
                    (nil))))))
(insn 194 193 195 14 (parallel [
            (set (reg:DI 203)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -36 [0xffffffffffffffdc])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":656 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 195 194 196 14 (set (reg:DI 2 cx)
        (reg:DI 203)) "../src/spline.f":656 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 203)
        (nil)))
(insn 196 195 197 14 (set (reg:DI 1 dx)
        (reg/f:DI 134 [ _48 ])) "../src/spline.f":656 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 134 [ _48 ])
        (nil)))
(insn 197 196 198 14 (set (reg:DI 4 si)
        (reg/f:DI 137 [ _51 ])) "../src/spline.f":656 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 137 [ _51 ])
        (nil)))
(insn 198 197 199 14 (set (reg:DI 5 di)
        (reg/f:DI 140 [ _54 ])) "../src/spline.f":656 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 140 [ _54 ])
        (nil)))
(call_insn 199 198 217 14 (call (mem:QI (symbol_ref:DI ("spline_") [flags 0x403]  <function_decl 0x1427e4d00 spline>) [0 spline S1 A8])
        (const_int 0 [0])) "../src/spline.f":656 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 217 199 0 14 (const_int 0 [0]) "../src/spline.f":658 682 {nop}
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function segspd (segspd_, funcdef_no=15, decl_uid=4233, cgraph_uid=15, symbol_order=15)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 16 n_edges 20 count 16 (    1)
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 15 14
;;
;; Loop 1
;;  header 9, latch 13
;;  depth 1, outer 0
;;  nodes: 9 13 12 10 11
;; 2 succs { 5 3 }
;; 3 succs { 4 5 }
;; 4 succs { }
;; 5 succs { 8 6 }
;; 6 succs { 7 8 }
;; 7 succs { }
;; 8 succs { 9 }
;; 9 succs { 15 10 }
;; 10 succs { 13 11 }
;; 11 succs { 12 13 }
;; 12 succs { 13 }
;; 13 succs { 9 }
;; 15 succs { 14 }
;; 14 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 70.
verify found no changes in insn with uid = 97.
verify found no changes in insn with uid = 162.
verify found no changes in insn with uid = 209.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r207: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r207,l0) best CREG, allocno GENERAL_REGS
    r206: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r206,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r205: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r205,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r204: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r204,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r203: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r203,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r202: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r202,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r201: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r201,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r200: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r200,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r199: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r199,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r198: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r198,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r197: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r197,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r196: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r196,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r195: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r195,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r194: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r194,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r193: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r193,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r190: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a31 (r190,l0) best CREG, allocno GENERAL_REGS
    r189: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r189,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r188: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a33 (r188,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r187: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a34 (r187,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r186: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a35 (r186,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r185: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a38 (r185,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r184: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a39 (r184,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r183: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a40 (r183,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r182: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a43 (r182,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r181: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a44 (r181,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r180: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a45 (r180,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r179: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a48 (r179,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r178: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a51 (r178,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r177: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a54 (r177,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r176: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a58 (r176,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r175: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a59 (r175,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r174: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a62 (r174,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r173: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a65 (r173,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r172: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a68 (r172,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r171: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a73 (r171,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r170: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a74 (r170,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r169: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a78 (r169,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r168: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a81 (r168,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r167: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a82 (r167,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r166: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a86 (r166,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r165: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a88 (r165,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r164: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a90 (r164,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r163: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a94 (r163,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r162: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a96 (r162,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r161: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a98 (r161,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r160: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a102 (r160,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r159: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a104 (r159,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r158: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a106 (r158,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r157: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a63 (r157,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r156: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r156,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r152: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a85 (r152,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r151: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a87 (r151,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r147: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a93 (r147,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r146: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a95 (r146,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a101 (r142,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a103 (r141,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r140: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r140,l0) best DIREG, allocno GENERAL_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r139,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r138,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r137: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r137,l0) best SIREG, allocno GENERAL_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r136,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r135,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r134: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r134,l0) best DREG, allocno GENERAL_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r133,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r132: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r132,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r131: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r131,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r130: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r130,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r129: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r129,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r128: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a28 (r128,l0) best DIREG, allocno GENERAL_REGS
    r127: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a36 (r127,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r126: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a37 (r126,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r125: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a29 (r125,l0) best SIREG, allocno GENERAL_REGS
    r124: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a41 (r124,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r123: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a42 (r123,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r122: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a30 (r122,l0) best DREG, allocno GENERAL_REGS
    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a46 (r121,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r120: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a47 (r120,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a49 (r119,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r118: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a50 (r118,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r117: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a52 (r117,l0) best SSE_REGS, allocno SSE_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a55 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a56 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a57 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a53 (r113,l0) best SSE_REGS, allocno SSE_REGS
    r112: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a60 (r112,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a61 (r111,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a64 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a66 (r109,l0) best SSE_REGS, allocno SSE_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a69 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a70 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a71 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a72 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a67 (r104,l0) best SSE_REGS, allocno SSE_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a75 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a76 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a77 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a79 (r100,l0) best SSE_REGS, allocno SSE_REGS
    r99: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a80 (r99,l0) best SSE_REGS, allocno SSE_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a83 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a84 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a89 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a91 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a92 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a97 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a99 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a100 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a105 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r140,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a1(r137,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a2(r134,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a3(r207,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a4(r206,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a5(r205,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a6(r204,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a7(r203,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a8(r139,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a9(r138,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a10(r202,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a11(r201,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a12(r200,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a13(r136,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a14(r135,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a15(r199,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a16(r198,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a17(r197,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a18(r133,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a19(r132,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a20(r196,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a21(r131,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a22(r130,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a23(r129,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a24(r195,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a25(r156,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a26(r193,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a27(r194,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a28(r128,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a29(r125,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a30(r122,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a31(r190,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a32(r189,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a33(r188,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a34(r187,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a35(r186,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a36(r127,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a37(r126,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a38(r185,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a39(r184,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a40(r183,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a41(r124,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a42(r123,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a43(r182,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a44(r181,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a45(r180,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a46(r121,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a47(r120,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a48(r179,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a49(r119,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a50(r118,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a51(r178,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a52(r117,l0) costs: AREG:18 DREG:18 CREG:18 BREG:18 SIREG:18 DIREG:18 AD_REGS:18 CLOBBERED_REGS:18 Q_REGS:18 NON_Q_REGS:18 TLS_GOTBASE_REGS:18 GENERAL_REGS:18 FP_TOP_REG:54 FP_SECOND_REG:54 FLOAT_REGS:54 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:48 FP_TOP_SSE_REGS:56 FP_SECOND_SSE_REGS:56 FLOAT_SSE_REGS:56 FLOAT_INT_REGS:54 INT_SSE_REGS:37 FLOAT_INT_SSE_REGS:56 ALL_REGS:56 MEM:20
  a53(r113,l0) costs: AREG:18 DREG:18 CREG:18 BREG:18 SIREG:18 DIREG:18 AD_REGS:18 CLOBBERED_REGS:18 Q_REGS:18 NON_Q_REGS:18 TLS_GOTBASE_REGS:18 GENERAL_REGS:18 FP_TOP_REG:54 FP_SECOND_REG:54 FLOAT_REGS:54 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:48 FP_TOP_SSE_REGS:56 FP_SECOND_SSE_REGS:56 FLOAT_SSE_REGS:56 FLOAT_INT_REGS:54 INT_SSE_REGS:37 FLOAT_INT_SSE_REGS:56 ALL_REGS:56 MEM:22
  a54(r177,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a55(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a56(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a57(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a58(r176,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a59(r175,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a60(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a61(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a62(r174,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a63(r157,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7
  a64(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a65(r173,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a66(r109,l0) costs: AREG:18 DREG:18 CREG:18 BREG:18 SIREG:18 DIREG:18 AD_REGS:18 CLOBBERED_REGS:18 Q_REGS:18 NON_Q_REGS:18 TLS_GOTBASE_REGS:18 GENERAL_REGS:18 FP_TOP_REG:54 FP_SECOND_REG:54 FLOAT_REGS:54 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:48 FP_TOP_SSE_REGS:56 FP_SECOND_SSE_REGS:56 FLOAT_SSE_REGS:56 FLOAT_INT_REGS:54 INT_SSE_REGS:37 FLOAT_INT_SSE_REGS:56 ALL_REGS:56 MEM:20
  a67(r104,l0) costs: AREG:18 DREG:18 CREG:18 BREG:18 SIREG:18 DIREG:18 AD_REGS:18 CLOBBERED_REGS:18 Q_REGS:18 NON_Q_REGS:18 TLS_GOTBASE_REGS:18 GENERAL_REGS:18 FP_TOP_REG:54 FP_SECOND_REG:54 FLOAT_REGS:54 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:48 FP_TOP_SSE_REGS:56 FP_SECOND_SSE_REGS:56 FLOAT_SSE_REGS:56 FLOAT_INT_REGS:54 INT_SSE_REGS:37 FLOAT_INT_SSE_REGS:56 ALL_REGS:56 MEM:22
  a68(r172,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a69(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a70(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a71(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a72(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a73(r171,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a74(r170,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a75(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a76(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a77(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a78(r169,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a79(r100,l0) costs: AREG:18 DREG:18 CREG:18 BREG:18 SIREG:18 DIREG:18 AD_REGS:18 CLOBBERED_REGS:18 Q_REGS:18 NON_Q_REGS:18 TLS_GOTBASE_REGS:18 GENERAL_REGS:18 FP_TOP_REG:54 FP_SECOND_REG:54 FLOAT_REGS:54 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:48 FP_TOP_SSE_REGS:56 FP_SECOND_SSE_REGS:56 FLOAT_SSE_REGS:56 FLOAT_INT_REGS:54 INT_SSE_REGS:37 FLOAT_INT_SSE_REGS:56 ALL_REGS:56 MEM:20
  a80(r99,l0) costs: AREG:18 DREG:18 CREG:18 BREG:18 SIREG:18 DIREG:18 AD_REGS:18 CLOBBERED_REGS:18 Q_REGS:18 NON_Q_REGS:18 TLS_GOTBASE_REGS:18 GENERAL_REGS:18 FP_TOP_REG:54 FP_SECOND_REG:54 FLOAT_REGS:54 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:48 FP_TOP_SSE_REGS:56 FP_SECOND_SSE_REGS:56 FLOAT_SSE_REGS:56 FLOAT_INT_REGS:54 INT_SSE_REGS:37 FLOAT_INT_SSE_REGS:56 ALL_REGS:56 MEM:22
  a81(r168,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a82(r167,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a83(r97,l0) costs: AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:2
  a84(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a85(r152,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a86(r166,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a87(r151,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:38 INT_SSE_REGS:27 ALL_REGS:520 MEM:11
  a88(r165,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:8
  a89(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a90(r164,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a91(r93,l0) costs: AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:2
  a92(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a93(r147,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a94(r163,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a95(r146,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:38 INT_SSE_REGS:27 ALL_REGS:520 MEM:11
  a96(r162,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:8
  a97(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a98(r161,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a99(r89,l0) costs: AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:2
  a100(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a101(r142,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a102(r160,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a103(r141,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:38 INT_SSE_REGS:27 ALL_REGS:520 MEM:11
  a104(r159,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:8
  a105(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a106(r158,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8

   Insn 227(l0): point = 0
   Insn 209(l0): point = 2
   Insn 208(l0): point = 4
   Insn 207(l0): point = 6
   Insn 206(l0): point = 8
   Insn 205(l0): point = 10
   Insn 204(l0): point = 12
   Insn 203(l0): point = 14
   Insn 202(l0): point = 16
   Insn 201(l0): point = 18
   Insn 200(l0): point = 20
   Insn 199(l0): point = 22
   Insn 198(l0): point = 24
   Insn 197(l0): point = 26
   Insn 196(l0): point = 28
   Insn 195(l0): point = 30
   Insn 194(l0): point = 32
   Insn 193(l0): point = 34
   Insn 192(l0): point = 36
   Insn 191(l0): point = 38
   Insn 190(l0): point = 40
   Insn 189(l0): point = 42
   Insn 188(l0): point = 44
   Insn 187(l0): point = 46
   Insn 186(l0): point = 48
   Insn 185(l0): point = 50
   Insn 184(l0): point = 52
   Insn 183(l0): point = 54
   Insn 182(l0): point = 56
   Insn 181(l0): point = 58
   Insn 180(l0): point = 60
   Insn 179(l0): point = 62
   Insn 178(l0): point = 64
   Insn 177(l0): point = 66
   Insn 232(l0): point = 69
   Insn 110(l0): point = 72
   Insn 109(l0): point = 74
   Insn 108(l0): point = 76
   Insn 107(l0): point = 78
   Insn 228(l0): point = 81
   Insn 171(l0): point = 83
   Insn 168(l0): point = 86
   Insn 167(l0): point = 88
   Insn 166(l0): point = 90
   Insn 162(l0): point = 92
   Insn 161(l0): point = 94
   Insn 160(l0): point = 96
   Insn 159(l0): point = 98
   Insn 158(l0): point = 100
   Insn 157(l0): point = 102
   Insn 156(l0): point = 104
   Insn 155(l0): point = 106
   Insn 154(l0): point = 108
   Insn 153(l0): point = 110
   Insn 152(l0): point = 112
   Insn 151(l0): point = 114
   Insn 150(l0): point = 116
   Insn 149(l0): point = 118
   Insn 148(l0): point = 120
   Insn 147(l0): point = 122
   Insn 146(l0): point = 124
   Insn 145(l0): point = 126
   Insn 144(l0): point = 128
   Insn 143(l0): point = 130
   Insn 142(l0): point = 132
   Insn 141(l0): point = 134
   Insn 140(l0): point = 136
   Insn 139(l0): point = 138
   Insn 138(l0): point = 140
   Insn 137(l0): point = 142
   Insn 136(l0): point = 144
   Insn 135(l0): point = 146
   Insn 134(l0): point = 148
   Insn 133(l0): point = 150
   Insn 132(l0): point = 152
   Insn 131(l0): point = 154
   Insn 124(l0): point = 157
   Insn 123(l0): point = 159
   Insn 122(l0): point = 161
   Insn 121(l0): point = 163
   Insn 120(l0): point = 165
   Insn 119(l0): point = 167
   Insn 118(l0): point = 169
   Insn 117(l0): point = 171
   Insn 116(l0): point = 173
   Insn 115(l0): point = 175
   Insn 114(l0): point = 177
   Insn 113(l0): point = 179
   Insn 112(l0): point = 181
   Insn 126(l0): point = 184
   Insn 125(l0): point = 186
   Insn 105(l0): point = 189
   Insn 104(l0): point = 191
   Insn 103(l0): point = 193
   Insn 102(l0): point = 195
   Insn 101(l0): point = 197
   Insn 97(l0): point = 200
   Insn 96(l0): point = 202
   Insn 95(l0): point = 204
   Insn 90(l0): point = 207
   Insn 89(l0): point = 209
   Insn 88(l0): point = 212
   Insn 87(l0): point = 214
   Insn 86(l0): point = 216
   Insn 85(l0): point = 218
   Insn 84(l0): point = 220
   Insn 83(l0): point = 222
   Insn 82(l0): point = 224
   Insn 81(l0): point = 226
   Insn 80(l0): point = 228
   Insn 79(l0): point = 230
   Insn 78(l0): point = 232
   Insn 77(l0): point = 234
   Insn 76(l0): point = 236
   Insn 75(l0): point = 238
   Insn 74(l0): point = 240
   Insn 70(l0): point = 243
   Insn 69(l0): point = 245
   Insn 68(l0): point = 247
   Insn 63(l0): point = 250
   Insn 62(l0): point = 252
   Insn 61(l0): point = 255
   Insn 60(l0): point = 257
   Insn 59(l0): point = 259
   Insn 58(l0): point = 261
   Insn 57(l0): point = 263
   Insn 56(l0): point = 265
   Insn 52(l0): point = 267
   Insn 51(l0): point = 269
   Insn 50(l0): point = 271
   Insn 48(l0): point = 273
   Insn 46(l0): point = 275
   Insn 47(l0): point = 277
   Insn 45(l0): point = 279
   Insn 44(l0): point = 281
   Insn 43(l0): point = 283
   Insn 42(l0): point = 285
   Insn 41(l0): point = 287
   Insn 37(l0): point = 289
   Insn 36(l0): point = 291
   Insn 35(l0): point = 293
   Insn 33(l0): point = 295
   Insn 31(l0): point = 297
   Insn 32(l0): point = 299
   Insn 30(l0): point = 301
   Insn 29(l0): point = 303
   Insn 28(l0): point = 305
   Insn 27(l0): point = 307
   Insn 26(l0): point = 309
   Insn 22(l0): point = 311
   Insn 21(l0): point = 313
   Insn 20(l0): point = 315
   Insn 18(l0): point = 317
   Insn 16(l0): point = 319
   Insn 17(l0): point = 321
   Insn 15(l0): point = 323
   Insn 14(l0): point = 325
   Insn 13(l0): point = 327
   Insn 12(l0): point = 329
   Insn 11(l0): point = 331
   Insn 7(l0): point = 333
   Insn 6(l0): point = 335
   Insn 5(l0): point = 337
   Insn 4(l0): point = 339
   Insn 3(l0): point = 341
   Insn 2(l0): point = 343
 a0(r140): [5..22]
 a1(r137): [7..34]
 a2(r134): [9..46]
 a3(r207): [11..16]
 a4(r206): [13..18]
 a5(r205): [15..20]
 a6(r204): [23..24]
 a7(r203): [23..26]
 a8(r139): [27..28]
 a9(r138): [29..30]
 a10(r202): [31..32]
 a11(r201): [35..36]
 a12(r200): [35..38]
 a13(r136): [39..40]
 a14(r135): [41..42]
 a15(r199): [43..44]
 a16(r198): [47..48]
 a17(r197): [47..50]
 a18(r133): [51..52]
 a19(r132): [53..54]
 a20(r196): [55..56]
 a21(r131): [59..60]
 a22(r130): [61..62]
 a23(r129): [63..64]
 a24(r195): [65..66]
 a25(r156): [72..191]
 a26(r193): [87..88]
 a27(r194): [89..90]
 a28(r128): [95..112]
 a29(r125): [97..124]
 a30(r122): [99..136]
 a31(r190): [101..106]
 a32(r189): [103..108]
 a33(r188): [105..110]
 a34(r187): [113..114]
 a35(r186): [113..116]
 a36(r127): [117..118]
 a37(r126): [119..120]
 a38(r185): [121..122]
 a39(r184): [125..126]
 a40(r183): [125..128]
 a41(r124): [129..130]
 a42(r123): [131..132]
 a43(r182): [133..134]
 a44(r181): [137..138]
 a45(r180): [137..140]
 a46(r121): [141..142]
 a47(r120): [143..144]
 a48(r179): [145..146]
 a49(r119): [149..150]
 a50(r118): [151..152]
 a51(r178): [153..154]
 a52(r117): [187..188] [157..161]
 a53(r113): [187..188] [157..173]
 a54(r177): [162..163]
 a55(r116): [162..165]
 a56(r115): [166..167]
 a57(r114): [168..169]
 a58(r176): [170..171]
 a59(r175): [174..175]
 a60(r112): [174..177]
 a61(r111): [178..179]
 a62(r174): [180..181]
 a63(r157): [75..76]
 a64(r110): [192..193]
 a65(r173): [194..195]
 a66(r109): [210..216]
 a67(r104): [210..230]
 a68(r172): [217..218]
 a69(r108): [217..220]
 a70(r107): [221..222]
 a71(r106): [223..224]
 a72(r105): [225..226]
 a73(r171): [227..228]
 a74(r170): [231..232]
 a75(r103): [231..234]
 a76(r102): [235..236]
 a77(r101): [237..238]
 a78(r169): [239..240]
 a79(r100): [253..259]
 a80(r99): [253..263]
 a81(r168): [260..261]
 a82(r167): [264..265]
 a83(r97 [0]): [268..345]
 a83(r97 [1]): [267..345]
 a84(r96): [270..271]
 a85(r152): [272..273]
 a86(r166): [274..277]
 a87(r151): [274..279]
 a88(r165): [282..283]
 a89(r95): [284..285]
 a90(r164): [286..287]
 a91(r93 [0]): [290..345]
 a91(r93 [1]): [289..345]
 a92(r92): [292..293]
 a93(r147): [294..295]
 a94(r163): [296..299]
 a95(r146): [296..301]
 a96(r162): [304..305]
 a97(r91): [306..307]
 a98(r161): [308..309]
 a99(r89 [0]): [312..345]
 a99(r89 [1]): [311..345]
 a100(r88): [314..315]
 a101(r142): [316..317]
 a102(r160): [318..321]
 a103(r141): [318..323]
 a104(r159): [326..327]
 a105(r87): [328..329]
 a106(r158): [330..331]
Compressing live ranges: from 346 to 156 - 45%
Ranges after the compression:
 a0(r140): [0..1]
 a1(r137): [0..9]
 a2(r134): [0..17]
 a3(r207): [0..1]
 a4(r206): [0..1]
 a5(r205): [0..1]
 a6(r204): [2..3]
 a7(r203): [2..3]
 a8(r139): [4..5]
 a9(r138): [6..7]
 a10(r202): [8..9]
 a11(r201): [10..11]
 a12(r200): [10..11]
 a13(r136): [12..13]
 a14(r135): [14..15]
 a15(r199): [16..17]
 a16(r198): [18..19]
 a17(r197): [18..19]
 a18(r133): [20..21]
 a19(r132): [22..23]
 a20(r196): [24..25]
 a21(r131): [26..27]
 a22(r130): [28..29]
 a23(r129): [30..31]
 a24(r195): [32..33]
 a25(r156): [34..89]
 a26(r193): [36..37]
 a27(r194): [38..39]
 a28(r128): [40..41]
 a29(r125): [40..49]
 a30(r122): [40..57]
 a31(r190): [40..41]
 a32(r189): [40..41]
 a33(r188): [40..41]
 a34(r187): [42..43]
 a35(r186): [42..43]
 a36(r127): [44..45]
 a37(r126): [46..47]
 a38(r185): [48..49]
 a39(r184): [50..51]
 a40(r183): [50..51]
 a41(r124): [52..53]
 a42(r123): [54..55]
 a43(r182): [56..57]
 a44(r181): [58..59]
 a45(r180): [58..59]
 a46(r121): [60..61]
 a47(r120): [62..63]
 a48(r179): [64..65]
 a49(r119): [66..67]
 a50(r118): [68..69]
 a51(r178): [70..71]
 a52(r117): [88..89] [72..73]
 a53(r113): [88..89] [72..81]
 a54(r177): [74..75]
 a55(r116): [74..75]
 a56(r115): [76..77]
 a57(r114): [78..79]
 a58(r176): [80..81]
 a59(r175): [82..83]
 a60(r112): [82..83]
 a61(r111): [84..85]
 a62(r174): [86..87]
 a63(r157): [34..35]
 a64(r110): [90..91]
 a65(r173): [92..93]
 a66(r109): [94..95]
 a67(r104): [94..105]
 a68(r172): [96..97]
 a69(r108): [96..97]
 a70(r107): [98..99]
 a71(r106): [100..101]
 a72(r105): [102..103]
 a73(r171): [104..105]
 a74(r170): [106..107]
 a75(r103): [106..107]
 a76(r102): [108..109]
 a77(r101): [110..111]
 a78(r169): [112..113]
 a79(r100): [114..115]
 a80(r99): [114..117]
 a81(r168): [116..117]
 a82(r167): [118..119]
 a83(r97 [0]): [120..155]
 a83(r97 [1]): [120..155]
 a84(r96): [120..121]
 a85(r152): [122..123]
 a86(r166): [124..125]
 a87(r151): [124..125]
 a88(r165): [126..127]
 a89(r95): [128..129]
 a90(r164): [130..131]
 a91(r93 [0]): [132..155]
 a91(r93 [1]): [132..155]
 a92(r92): [132..133]
 a93(r147): [134..135]
 a94(r163): [136..137]
 a95(r146): [136..137]
 a96(r162): [138..139]
 a97(r91): [140..141]
 a98(r161): [142..143]
 a99(r89 [0]): [144..155]
 a99(r89 [1]): [144..155]
 a100(r88): [144..145]
 a101(r142): [146..147]
 a102(r160): [148..149]
 a103(r141): [148..149]
 a104(r159): [150..151]
 a105(r87): [152..153]
 a106(r158): [154..155]
  regions=1, blocks=16, points=156
    allocnos=107 (big 3), copies=0, conflicts=0, ranges=112
Disposition:
  105:r87  l0     0  100:r88  l0     0   99:r89  l0    43   97:r91  l0     0
   92:r92  l0     0   91:r93  l0    41   89:r95  l0     0   84:r96  l0     0
   83:r97  l0    39   80:r99  l0    21   79:r100 l0    22   77:r101 l0     0
   76:r102 l0     0   75:r103 l0     1   67:r104 l0    21   72:r105 l0     0
   71:r106 l0     0   70:r107 l0     0   69:r108 l0     1   66:r109 l0    22
   64:r110 l0     0   61:r111 l0     0   60:r112 l0     1   53:r113 l0    21
   57:r114 l0     0   56:r115 l0     0   55:r116 l0     1   52:r117 l0    22
   50:r118 l0     0   49:r119 l0     0   47:r120 l0     0   46:r121 l0     0
   30:r122 l0     1   42:r123 l0     0   41:r124 l0     0   29:r125 l0     4
   37:r126 l0     0   36:r127 l0     0   28:r128 l0     5   23:r129 l0     0
   22:r130 l0     0   21:r131 l0     0   19:r132 l0     0   18:r133 l0     0
    2:r134 l0     1   14:r135 l0     0   13:r136 l0     0    1:r137 l0     4
    9:r138 l0     0    8:r139 l0     0    0:r140 l0     5  103:r141 l0     0
  101:r142 l0     0   95:r146 l0     0   93:r147 l0     0   87:r151 l0     0
   85:r152 l0     0   25:r156 l0     3   63:r157 l0     0  106:r158 l0     0
  104:r159 l0     0  102:r160 l0     1   98:r161 l0     0   96:r162 l0     0
   94:r163 l0     1   90:r164 l0     0   88:r165 l0     0   86:r166 l0     1
   82:r167 l0     0   81:r168 l0     0   78:r169 l0     0   74:r170 l0     0
   73:r171 l0     0   68:r172 l0     0   65:r173 l0     0   62:r174 l0     0
   59:r175 l0     0   58:r176 l0     0   54:r177 l0     0   51:r178 l0     0
   48:r179 l0     0   45:r180 l0     1   44:r181 l0     0   43:r182 l0     0
   40:r183 l0     2   39:r184 l0     0   38:r185 l0     0   35:r186 l0     2
   34:r187 l0     0   33:r188 l0    37   32:r189 l0     2   31:r190 l0     0
   26:r193 l0     0   27:r194 l0     0   24:r195 l0     0   20:r196 l0     0
   17:r197 l0     1   16:r198 l0     0   15:r199 l0     0   12:r200 l0     2
   11:r201 l0     0   10:r202 l0     0    7:r203 l0     2    6:r204 l0     0
    5:r205 l0    37    4:r206 l0     2    3:r207 l0     0
+++Costs: overall -2, reg -2, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


segspd

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 37 [r8] 38 [r9]
;;  ref usage 	r0={5d} r1={7d,3u} r2={7d,3u} r4={9d,5u} r5={9d,5u} r6={1d,15u} r7={1d,19u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r16={1d,14u} r17={48d,11u} r18={4d} r19={4d} r20={1d,72u,10e} r21={5d} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={5d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={7d,3u} r38={7d,3u} r39={4d} r40={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r87={1d,1u} r88={1d,1u} r89={2d,2u} r91={1d,1u} r92={1d,1u} r93={2d,2u} r95={1d,1u} r96={1d,1u} r97={2d,2u} r99={1d,2u} r100={1d,2u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,2u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,2u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,2u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,2u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,1u} r127={1d,1u} r128={1d,1u} r129={1d,1u} r130={1d,1u} r131={1d,1u} r132={1d,1u} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,2u} r142={1d,1u} r146={1d,2u} r147={1d,1u} r151={1d,2u} r152={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d,1u} r165={1d,1u} r166={1d,1u} r167={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,1u} r171={1d,1u} r172={1d,1u} r173={1d,1u} r174={1d,1u} r175={1d,1u} r176={1d,1u} r177={1d,1u} r178={1d,1u} r179={1d,1u} r180={1d,1u,1e} r181={1d,1u} r182={1d,1u} r183={1d,1u,1e} r184={1d,1u} r185={1d,1u} r186={1d,1u,1e} r187={1d,1u} r188={1d,1u} r189={1d,1u} r190={1d,1u} r193={1d,1u} r194={1d,1u} r195={1d,1u} r196={1d,1u} r197={1d,1u,1e} r198={1d,1u} r199={1d,1u} r200={1d,1u,1e} r201={1d,1u} r202={1d,1u} r203={1d,1u,1e} r204={1d,1u} r205={1d,1u} r206={1d,1u} r207={1d,1u} 
;;    total ref usage 765{477d,272u,16e} in 166{162 regular + 4 call} insns.
(note 1 0 9 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9] 89 93 97
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9] 89 93 97
;; lr  def 	 17 [flags] 87 88 91 92 95 96 99 100 141 142 146 147 151 152 158 159 160 161 162 163 164 165 166 167 168
(note 9 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 9 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [5 x+0 S8 A64])
        (reg:DI 5 di [ x ])) "../src/spline.f":662 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ x ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [5 xs+0 S8 A64])
        (reg:DI 4 si [ xs ])) "../src/spline.f":662 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ xs ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [5 s+0 S8 A64])
        (reg:DI 1 dx [ s ])) "../src/spline.f":662 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ s ])
        (nil)))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [6 n+0 S8 A64])
        (reg:DI 2 cx [ n ])) "../src/spline.f":662 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [ n ])
        (nil)))
(insn 6 5 7 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -88 [0xffffffffffffffa8])) [4 xs1+0 S8 A64])
        (reg:DI 37 r8 [ xs1 ])) "../src/spline.f":662 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 37 r8 [ xs1 ])
        (nil)))
(insn 7 6 8 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [4 xs2+0 S8 A64])
        (reg:DI 38 r9 [ xs2 ])) "../src/spline.f":662 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 38 r9 [ xs2 ])
        (nil)))
(note 8 7 11 2 NOTE_INSN_FUNCTION_BEG)
(insn 11 8 12 2 (set (reg/f:DI 158)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [6 n+0 S8 A64])) "../src/spline.f":662 81 {*movdi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:SI 87 [ _1 ])
        (mem:SI (reg/f:DI 158) [1 *n_61(D)+0 S4 A32])) "../src/spline.f":662 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 158)
        (nil)))
(insn 13 12 14 2 (set (reg:DI 159)
        (sign_extend:DI (reg:SI 87 [ _1 ]))) "../src/spline.f":662 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 87 [ _1 ])
        (nil)))
(insn 14 13 15 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 ubound.99+0 S8 A64])
        (reg:DI 159)) "../src/spline.f":662 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 159)
        (nil)))
(insn 15 14 17 2 (set (reg:DI 141 [ size.100_63 ])
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 ubound.99+0 S8 A64])) "../src/spline.f":662 81 {*movdi_internal}
     (nil))
(insn 17 15 16 2 (set (reg:DI 160)
        (const_int 0 [0])) "../src/spline.f":662 81 {*movdi_internal}
     (nil))
(insn 16 17 18 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 141 [ size.100_63 ])
            (const_int 0 [0]))) "../src/spline.f":662 4 {*cmpdi_ccno_1}
     (nil))
(insn 18 16 20 2 (set (reg:DI 142 [ size.100_64 ])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 141 [ size.100_63 ])
            (reg:DI 160))) "../src/spline.f":662 967 {*movdicc_noc}
     (expr_list:REG_DEAD (reg:DI 160)
        (expr_list:REG_DEAD (reg:DI 141 [ size.100_63 ])
            (expr_list:REG_DEAD (reg:CCGOC 17 flags)
                (nil)))))
(insn 20 18 21 2 (set (reg:DI 88 [ size.252_2 ])
        (reg:DI 142 [ size.100_64 ])) "../src/spline.f":662 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 142 [ size.100_64 ])
        (nil)))
(insn 21 20 22 2 (set (subreg:DI (reg:TI 89 [ _3 ]) 0)
        (reg:DI 88 [ size.252_2 ])) "../src/spline.f":662 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88 [ size.252_2 ])
        (nil)))
(insn 22 21 26 2 (set (subreg:DI (reg:TI 89 [ _3 ]) 8)
        (const_int 0 [0])) "../src/spline.f":662 81 {*movdi_internal}
     (expr_list:REG_UNUSED (reg:TI 89 [ _3 ])
        (nil)))
(insn 26 22 27 2 (set (reg/f:DI 161)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [6 n+0 S8 A64])) "../src/spline.f":662 81 {*movdi_internal}
     (nil))
(insn 27 26 28 2 (set (reg:SI 91 [ _5 ])
        (mem:SI (reg/f:DI 161) [1 *n_61(D)+0 S4 A32])) "../src/spline.f":662 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 161)
        (nil)))
(insn 28 27 29 2 (set (reg:DI 162)
        (sign_extend:DI (reg:SI 91 [ _5 ]))) "../src/spline.f":662 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 91 [ _5 ])
        (nil)))
(insn 29 28 30 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [2 ubound.101+0 S8 A64])
        (reg:DI 162)) "../src/spline.f":662 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 162)
        (nil)))
(insn 30 29 32 2 (set (reg:DI 146 [ size.102_69 ])
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [2 ubound.101+0 S8 A64])) "../src/spline.f":662 81 {*movdi_internal}
     (nil))
(insn 32 30 31 2 (set (reg:DI 163)
        (const_int 0 [0])) "../src/spline.f":662 81 {*movdi_internal}
     (nil))
(insn 31 32 33 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 146 [ size.102_69 ])
            (const_int 0 [0]))) "../src/spline.f":662 4 {*cmpdi_ccno_1}
     (nil))
(insn 33 31 35 2 (set (reg:DI 147 [ size.102_70 ])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 146 [ size.102_69 ])
            (reg:DI 163))) "../src/spline.f":662 967 {*movdicc_noc}
     (expr_list:REG_DEAD (reg:DI 163)
        (expr_list:REG_DEAD (reg:DI 146 [ size.102_69 ])
            (expr_list:REG_DEAD (reg:CCGOC 17 flags)
                (nil)))))
(insn 35 33 36 2 (set (reg:DI 92 [ size.254_6 ])
        (reg:DI 147 [ size.102_70 ])) "../src/spline.f":662 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 147 [ size.102_70 ])
        (nil)))
(insn 36 35 37 2 (set (subreg:DI (reg:TI 93 [ _7 ]) 0)
        (reg:DI 92 [ size.254_6 ])) "../src/spline.f":662 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 92 [ size.254_6 ])
        (nil)))
(insn 37 36 41 2 (set (subreg:DI (reg:TI 93 [ _7 ]) 8)
        (const_int 0 [0])) "../src/spline.f":662 81 {*movdi_internal}
     (expr_list:REG_UNUSED (reg:TI 93 [ _7 ])
        (nil)))
(insn 41 37 42 2 (set (reg/f:DI 164)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [6 n+0 S8 A64])) "../src/spline.f":662 81 {*movdi_internal}
     (nil))
(insn 42 41 43 2 (set (reg:SI 95 [ _9 ])
        (mem:SI (reg/f:DI 164) [1 *n_61(D)+0 S4 A32])) "../src/spline.f":662 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 164)
        (nil)))
(insn 43 42 44 2 (set (reg:DI 165)
        (sign_extend:DI (reg:SI 95 [ _9 ]))) "../src/spline.f":662 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 95 [ _9 ])
        (nil)))
(insn 44 43 45 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [2 ubound.103+0 S8 A64])
        (reg:DI 165)) "../src/spline.f":662 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 165)
        (nil)))
(insn 45 44 47 2 (set (reg:DI 151 [ size.104_75 ])
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [2 ubound.103+0 S8 A64])) "../src/spline.f":662 81 {*movdi_internal}
     (nil))
(insn 47 45 46 2 (set (reg:DI 166)
        (const_int 0 [0])) "../src/spline.f":662 81 {*movdi_internal}
     (nil))
(insn 46 47 48 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 151 [ size.104_75 ])
            (const_int 0 [0]))) "../src/spline.f":662 4 {*cmpdi_ccno_1}
     (nil))
(insn 48 46 50 2 (set (reg:DI 152 [ size.104_76 ])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 151 [ size.104_75 ])
            (reg:DI 166))) "../src/spline.f":662 967 {*movdicc_noc}
     (expr_list:REG_DEAD (reg:DI 166)
        (expr_list:REG_DEAD (reg:DI 151 [ size.104_75 ])
            (expr_list:REG_DEAD (reg:CCGOC 17 flags)
                (nil)))))
(insn 50 48 51 2 (set (reg:DI 96 [ size.256_10 ])
        (reg:DI 152 [ size.104_76 ])) "../src/spline.f":662 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 152 [ size.104_76 ])
        (nil)))
(insn 51 50 52 2 (set (subreg:DI (reg:TI 97 [ _11 ]) 0)
        (reg:DI 96 [ size.256_10 ])) "../src/spline.f":662 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 96 [ size.256_10 ])
        (nil)))
(insn 52 51 56 2 (set (subreg:DI (reg:TI 97 [ _11 ]) 8)
        (const_int 0 [0])) "../src/spline.f":662 81 {*movdi_internal}
     (expr_list:REG_UNUSED (reg:TI 97 [ _11 ])
        (nil)))
(insn 56 52 57 2 (set (reg/f:DI 167)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [5 s+0 S8 A64])) "../src/spline.f":671 81 {*movdi_internal}
     (nil))
(insn 57 56 58 2 (set (reg:SF 99 [ _13 ])
        (mem:SF (reg/f:DI 167) [3 *s_80(D)+0 S4 A32])) "../src/spline.f":671 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 167)
        (nil)))
(insn 58 57 59 2 (set (reg/f:DI 168)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [5 s+0 S8 A64])) "../src/spline.f":671 81 {*movdi_internal}
     (nil))
(insn 59 58 60 2 (set (reg:SF 100 [ _14 ])
        (mem:SF (plus:DI (reg/f:DI 168)
                (const_int 4 [0x4])) [3 *s_80(D)+4 S4 A32])) "../src/spline.f":671 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 168)
        (nil)))
(insn 60 59 61 2 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 99 [ _13 ])
            (reg:SF 100 [ _14 ]))) "../src/spline.f":671 51 {*cmpiusf}
     (nil))
(jump_insn 61 60 215 2 (set (pc)
        (if_then_else (unordered (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref 72)
            (pc))) "../src/spline.f":671 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil))
 -> 72)
;;  succ:       5
;;              3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 99 100

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 99 100
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 99 100
;; lr  def 	 17 [flags]
(note 215 61 62 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 62 215 63 3 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 99 [ _13 ])
            (reg:SF 100 [ _14 ]))) "../src/spline.f":671 51 {*cmpiusf}
     (expr_list:REG_DEAD (reg:SF 100 [ _14 ])
        (expr_list:REG_DEAD (reg:SF 99 [ _13 ])
            (nil))))
(jump_insn 63 62 67 3 (set (pc)
        (if_then_else (ltgt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 72)
            (pc))) "../src/spline.f":671 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil))
 -> 72)
;;  succ:       4 (FALLTHRU)
;;              5
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 67 63 68 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 68 67 69 4 (set (reg:SI 4 si)
        (const_int 37 [0x25])) "../src/spline.f":671 82 {*movsi_internal}
     (nil))
(insn 69 68 70 4 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*lC19") [flags 0x2]  <var_decl 0x1433d3cf0 *lC19>)) "../src/spline.f":671 81 {*movdi_internal}
     (nil))
(call_insn 70 69 71 4 (call (mem:QI (symbol_ref:DI ("_gfortran_stop_string") [flags 0x41]  <function_decl 0x1427c2200 _gfortran_stop_string>) [0 _gfortran_stop_string S1 A8])
        (const_int 0 [0])) "../src/spline.f":671 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 71 70 72)
;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       2
;;              3
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 101 102 103 104 105 106 107 108 109 169 170 171 172
(code_label 72 71 73 5 166 (nil) [2 uses])
(note 73 72 74 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 74 73 75 5 (set (reg/f:DI 169)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [6 n+0 S8 A64])) "../src/spline.f":672 81 {*movdi_internal}
     (nil))
(insn 75 74 76 5 (set (reg:SI 101 [ _15 ])
        (mem:SI (reg/f:DI 169) [1 *n_61(D)+0 S4 A32])) "../src/spline.f":672 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 169)
        (nil)))
(insn 76 75 77 5 (set (reg:DI 102 [ _16 ])
        (sign_extend:DI (reg:SI 101 [ _15 ]))) "../src/spline.f":672 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 101 [ _15 ])
        (nil)))
(insn 77 76 78 5 (parallel [
            (set (reg:DI 103 [ _17 ])
                (plus:DI (reg:DI 102 [ _16 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":672 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 102 [ _16 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 78 77 79 5 (set (reg/f:DI 170)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [5 s+0 S8 A64])) "../src/spline.f":672 81 {*movdi_internal}
     (nil))
(insn 79 78 80 5 (set (reg:SF 104 [ _18 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 103 [ _17 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 170)) [3 *s_80(D) S4 A32])) "../src/spline.f":672 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 170)
        (expr_list:REG_DEAD (reg:DI 103 [ _17 ])
            (nil))))
(insn 80 79 81 5 (set (reg/f:DI 171)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [6 n+0 S8 A64])) "../src/spline.f":672 81 {*movdi_internal}
     (nil))
(insn 81 80 82 5 (set (reg:SI 105 [ _19 ])
        (mem:SI (reg/f:DI 171) [1 *n_61(D)+0 S4 A32])) "../src/spline.f":672 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 171)
        (nil)))
(insn 82 81 83 5 (parallel [
            (set (reg:SI 106 [ _20 ])
                (plus:SI (reg:SI 105 [ _19 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":672 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 105 [ _19 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 83 82 84 5 (set (reg:DI 107 [ _21 ])
        (sign_extend:DI (reg:SI 106 [ _20 ]))) "../src/spline.f":672 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 106 [ _20 ])
        (nil)))
(insn 84 83 85 5 (parallel [
            (set (reg:DI 108 [ _22 ])
                (plus:DI (reg:DI 107 [ _21 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":672 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 107 [ _21 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 85 84 86 5 (set (reg/f:DI 172)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [5 s+0 S8 A64])) "../src/spline.f":672 81 {*movdi_internal}
     (nil))
(insn 86 85 87 5 (set (reg:SF 109 [ _23 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 108 [ _22 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 172)) [3 *s_80(D) S4 A32])) "../src/spline.f":672 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 172)
        (expr_list:REG_DEAD (reg:DI 108 [ _22 ])
            (nil))))
(insn 87 86 88 5 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 104 [ _18 ])
            (reg:SF 109 [ _23 ]))) "../src/spline.f":672 51 {*cmpiusf}
     (nil))
(jump_insn 88 87 218 5 (set (pc)
        (if_then_else (unordered (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref 99)
            (pc))) "../src/spline.f":672 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil))
 -> 99)
;;  succ:       8
;;              6 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 109

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (RTL)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 109
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 109
;; lr  def 	 17 [flags]
(note 218 88 89 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 89 218 90 6 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 104 [ _18 ])
            (reg:SF 109 [ _23 ]))) "../src/spline.f":672 51 {*cmpiusf}
     (expr_list:REG_DEAD (reg:SF 109 [ _23 ])
        (expr_list:REG_DEAD (reg:SF 104 [ _18 ])
            (nil))))
(jump_insn 90 89 94 6 (set (pc)
        (if_then_else (ltgt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 99)
            (pc))) "../src/spline.f":672 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil))
 -> 99)
;;  succ:       7 (FALLTHRU)
;;              8
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (RTL)
;;  pred:       6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 94 90 95 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 95 94 96 7 (set (reg:SI 4 si)
        (const_int 37 [0x25])) "../src/spline.f":672 82 {*movsi_internal}
     (nil))
(insn 96 95 97 7 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*lC20") [flags 0x2]  <var_decl 0x143594480 *lC20>)) "../src/spline.f":672 81 {*movdi_internal}
     (nil))
(call_insn 97 96 98 7 (call (mem:QI (symbol_ref:DI ("_gfortran_stop_string") [flags 0x41]  <function_decl 0x1427c2200 _gfortran_stop_string>) [0 _gfortran_stop_string S1 A8])
        (const_int 0 [0])) "../src/spline.f":672 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 98 97 99)
;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (RTL)
;;  pred:       5
;;              6
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 110 156 173
(code_label 99 98 100 8 168 (nil) [2 uses])
(note 100 99 101 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 101 100 102 8 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 iseg0+0 S4 A32])
        (const_int 1 [0x1])) "../src/spline.f":674 82 {*movsi_internal}
     (nil))
(insn 102 101 103 8 (set (reg/f:DI 173)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [6 n+0 S8 A64])) "../src/spline.f":675 81 {*movdi_internal}
     (nil))
(insn 103 102 104 8 (set (reg:SI 110 [ _24 ])
        (mem:SI (reg/f:DI 173) [1 *n_61(D)+0 S4 A32])) "../src/spline.f":675 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 173)
        (nil)))
(insn 104 103 105 8 (parallel [
            (set (reg:SI 156 [ _82 ])
                (plus:SI (reg:SI 110 [ _24 ])
                    (const_int -2 [0xfffffffffffffffe])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":675 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 110 [ _24 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 105 104 172 8 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 iseg+0 S4 A32])
        (const_int 2 [0x2])) "../src/spline.f":675 82 {*movsi_internal}
     (nil))
;;  succ:       9 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 156

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (RTL)
;;  pred:       8 (FALLTHRU)
;;              13 [100.0%] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 156
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 156
;; lr  def 	 17 [flags] 157
(code_label 172 105 106 9 173 (nil) [1 uses])
(note 106 172 107 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 107 106 108 9 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [1 iseg+0 S4 A32])
            (reg:SI 156 [ _82 ]))) "../src/spline.f":675 7 {*cmpsi_1}
     (nil))
(insn 108 107 109 9 (set (reg:QI 157 [ _84 ])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "../src/spline.f":675 613 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil)))
(insn 109 108 110 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 157 [ _84 ])
            (const_int 0 [0]))) "../src/spline.f":675 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 157 [ _84 ])
        (nil)))
(jump_insn 110 109 111 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 231)
            (pc))) "../src/spline.f":675 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 231)
;;  succ:       15
;;              10 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 156

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (RTL)
;;  pred:       9 (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 156
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 111 112 113 114 115 116 117 174 175 176 177
(note 111 110 112 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 112 111 113 10 (set (reg:SI 174)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 iseg+0 S4 A32])) "../src/spline.f":676 82 {*movsi_internal}
     (nil))
(insn 113 112 114 10 (set (reg:DI 111 [ _25 ])
        (sign_extend:DI (reg:SI 174))) "../src/spline.f":676 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 174)
        (nil)))
(insn 114 113 115 10 (parallel [
            (set (reg:DI 112 [ _26 ])
                (plus:DI (reg:DI 111 [ _25 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":676 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 111 [ _25 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 115 114 116 10 (set (reg/f:DI 175)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [5 s+0 S8 A64])) "../src/spline.f":676 81 {*movdi_internal}
     (nil))
(insn 116 115 117 10 (set (reg:SF 113 [ _27 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 112 [ _26 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 175)) [3 *s_80(D) S4 A32])) "../src/spline.f":676 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 175)
        (expr_list:REG_DEAD (reg:DI 112 [ _26 ])
            (nil))))
(insn 117 116 118 10 (set (reg:SI 176)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 iseg+0 S4 A32])) "../src/spline.f":676 82 {*movsi_internal}
     (nil))
(insn 118 117 119 10 (parallel [
            (set (reg:SI 114 [ _28 ])
                (plus:SI (reg:SI 176)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":676 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 176)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 iseg+0 S4 A32])
                    (const_int 1 [0x1]))
                (nil)))))
(insn 119 118 120 10 (set (reg:DI 115 [ _29 ])
        (sign_extend:DI (reg:SI 114 [ _28 ]))) "../src/spline.f":676 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 114 [ _28 ])
        (nil)))
(insn 120 119 121 10 (parallel [
            (set (reg:DI 116 [ _30 ])
                (plus:DI (reg:DI 115 [ _29 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":676 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 115 [ _29 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 121 120 122 10 (set (reg/f:DI 177)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [5 s+0 S8 A64])) "../src/spline.f":676 81 {*movdi_internal}
     (nil))
(insn 122 121 123 10 (set (reg:SF 117 [ _31 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 116 [ _30 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 177)) [3 *s_80(D) S4 A32])) "../src/spline.f":676 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 177)
        (expr_list:REG_DEAD (reg:DI 116 [ _30 ])
            (nil))))
(insn 123 122 124 10 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 113 [ _27 ])
            (reg:SF 117 [ _31 ]))) "../src/spline.f":676 51 {*cmpiusf}
     (nil))
(jump_insn 124 123 221 10 (set (pc)
        (if_then_else (unordered (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref 169)
            (pc))) "../src/spline.f":676 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil))
 -> 169)
;;  succ:       13
;;              11 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 113 117 156

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (RTL)
;;  pred:       10 (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 113 117 156
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 113 117
;; lr  def 	 17 [flags]
(note 221 124 125 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 125 221 126 11 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 113 [ _27 ])
            (reg:SF 117 [ _31 ]))) "../src/spline.f":676 51 {*cmpiusf}
     (expr_list:REG_DEAD (reg:SF 117 [ _31 ])
        (expr_list:REG_DEAD (reg:SF 113 [ _27 ])
            (nil))))
(jump_insn 126 125 130 11 (set (pc)
        (if_then_else (ltgt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 169)
            (pc))) "../src/spline.f":676 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil))
 -> 169)
;;  succ:       12 (FALLTHRU)
;;              13
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 156

;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (RTL)
;;  pred:       11 (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 156
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 118 119 120 121 122 123 124 125 126 127 128 178 179 180 181 182 183 184 185 186 187 188 189 190 193 194
(note 130 126 131 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 131 130 132 12 (set (reg:SI 178)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 iseg+0 S4 A32])) "../src/spline.f":677 82 {*movsi_internal}
     (nil))
(insn 132 131 133 12 (parallel [
            (set (reg:SI 118 [ _32 ])
                (minus:SI (reg:SI 178)
                    (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [1 iseg0+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":677 273 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 178)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 iseg+0 S4 A32])
                    (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [1 iseg0+0 S4 A32]))
                (nil)))))
(insn 133 132 134 12 (parallel [
            (set (reg:SI 119 [ _33 ])
                (plus:SI (reg:SI 118 [ _32 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":677 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 118 [ _32 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 134 133 135 12 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -36 [0xffffffffffffffdc])) [1 nseg+0 S4 A32])
        (reg:SI 119 [ _33 ])) "../src/spline.f":677 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 119 [ _33 ])
        (nil)))
(insn 135 134 136 12 (set (reg:SI 179)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 iseg0+0 S4 A32])) "../src/spline.f":678 82 {*movsi_internal}
     (nil))
(insn 136 135 137 12 (set (reg:DI 120 [ _34 ])
        (sign_extend:DI (reg:SI 179))) "../src/spline.f":678 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 179)
        (nil)))
(insn 137 136 138 12 (parallel [
            (set (reg:DI 121 [ _35 ])
                (plus:DI (reg:DI 120 [ _34 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":678 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 120 [ _34 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 138 137 139 12 (parallel [
            (set (reg:DI 180)
                (ashift:DI (reg:DI 121 [ _35 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":678 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 121 [ _35 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 139 138 140 12 (set (reg/f:DI 181)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [5 s+0 S8 A64])) "../src/spline.f":678 81 {*movdi_internal}
     (nil))
(insn 140 139 141 12 (parallel [
            (set (reg/f:DI 122 [ _36 ])
                (plus:DI (reg:DI 180)
                    (reg/f:DI 181)))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":678 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 181)
        (expr_list:REG_DEAD (reg:DI 180)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -72 [0xffffffffffffffb8])) [5 s+0 S8 A64])
                        (reg:DI 180))
                    (nil))))))
(insn 141 140 142 12 (set (reg:SI 182)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 iseg0+0 S4 A32])) "../src/spline.f":678 82 {*movsi_internal}
     (nil))
(insn 142 141 143 12 (set (reg:DI 123 [ _37 ])
        (sign_extend:DI (reg:SI 182))) "../src/spline.f":678 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 182)
        (nil)))
(insn 143 142 144 12 (parallel [
            (set (reg:DI 124 [ _38 ])
                (plus:DI (reg:DI 123 [ _37 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":678 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 123 [ _37 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 144 143 145 12 (parallel [
            (set (reg:DI 183)
                (ashift:DI (reg:DI 124 [ _38 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":678 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 124 [ _38 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 145 144 146 12 (set (reg/f:DI 184)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [5 xs+0 S8 A64])) "../src/spline.f":678 81 {*movdi_internal}
     (nil))
(insn 146 145 147 12 (parallel [
            (set (reg/f:DI 125 [ _39 ])
                (plus:DI (reg:DI 183)
                    (reg/f:DI 184)))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":678 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 184)
        (expr_list:REG_DEAD (reg:DI 183)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -64 [0xffffffffffffffc0])) [5 xs+0 S8 A64])
                        (reg:DI 183))
                    (nil))))))
(insn 147 146 148 12 (set (reg:SI 185)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 iseg0+0 S4 A32])) "../src/spline.f":678 82 {*movsi_internal}
     (nil))
(insn 148 147 149 12 (set (reg:DI 126 [ _40 ])
        (sign_extend:DI (reg:SI 185))) "../src/spline.f":678 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 185)
        (nil)))
(insn 149 148 150 12 (parallel [
            (set (reg:DI 127 [ _41 ])
                (plus:DI (reg:DI 126 [ _40 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":678 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 126 [ _40 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 150 149 151 12 (parallel [
            (set (reg:DI 186)
                (ashift:DI (reg:DI 127 [ _41 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":678 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 127 [ _41 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 151 150 152 12 (set (reg/f:DI 187)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [5 x+0 S8 A64])) "../src/spline.f":678 81 {*movdi_internal}
     (nil))
(insn 152 151 153 12 (parallel [
            (set (reg/f:DI 128 [ _42 ])
                (plus:DI (reg:DI 186)
                    (reg/f:DI 187)))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":678 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 187)
        (expr_list:REG_DEAD (reg:DI 186)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -56 [0xffffffffffffffc8])) [5 x+0 S8 A64])
                        (reg:DI 186))
                    (nil))))))
(insn 153 152 154 12 (set (reg:DI 188)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [4 xs2+0 S8 A64])) "../src/spline.f":678 81 {*movdi_internal}
     (nil))
(insn 154 153 155 12 (set (reg:DI 189)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -88 [0xffffffffffffffa8])) [4 xs1+0 S8 A64])) "../src/spline.f":678 81 {*movdi_internal}
     (nil))
(insn 155 154 156 12 (parallel [
            (set (reg:DI 190)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -36 [0xffffffffffffffdc])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":678 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 156 155 157 12 (set (reg:DI 38 r9)
        (reg:DI 188)) "../src/spline.f":678 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 188)
        (nil)))
(insn 157 156 158 12 (set (reg:DI 37 r8)
        (reg:DI 189)) "../src/spline.f":678 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 189)
        (nil)))
(insn 158 157 159 12 (set (reg:DI 2 cx)
        (reg:DI 190)) "../src/spline.f":678 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 190)
        (nil)))
(insn 159 158 160 12 (set (reg:DI 1 dx)
        (reg/f:DI 122 [ _36 ])) "../src/spline.f":678 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 122 [ _36 ])
        (nil)))
(insn 160 159 161 12 (set (reg:DI 4 si)
        (reg/f:DI 125 [ _39 ])) "../src/spline.f":678 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 125 [ _39 ])
        (nil)))
(insn 161 160 162 12 (set (reg:DI 5 di)
        (reg/f:DI 128 [ _42 ])) "../src/spline.f":678 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 128 [ _42 ])
        (nil)))
(call_insn 162 161 166 12 (call (mem:QI (symbol_ref:DI ("splind_") [flags 0x403]  <function_decl 0x1427e4b00 splind>) [0 splind S1 A8])
        (const_int 0 [0])) "../src/spline.f":678 655 {*call}
     (expr_list:REG_DEAD (reg:DI 38 r9)
        (expr_list:REG_DEAD (reg:DI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:DI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:DI 1 dx)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 166 162 167 12 (set (reg:SI 194)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 iseg+0 S4 A32])) "../src/spline.f":679 82 {*movsi_internal}
     (nil))
(insn 167 166 168 12 (parallel [
            (set (reg:SI 193)
                (plus:SI (reg:SI 194)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":679 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 194)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 iseg+0 S4 A32])
                    (const_int 1 [0x1]))
                (nil)))))
(insn 168 167 169 12 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 iseg0+0 S4 A32])
        (reg:SI 193)) "../src/spline.f":679 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 193)
        (nil)))
;;  succ:       13 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 156

;; basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 15, flags: (RTL)
;;  pred:       12 (FALLTHRU)
;;              10
;;              11
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 156
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 169 168 170 13 171 (nil) [2 uses])
(note 170 169 171 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 171 170 228 13 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -4 [0xfffffffffffffffc])) [1 iseg+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 iseg+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":675 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 228 171 229 13 (set (pc)
        (label_ref 172)) "../src/spline.f":675 649 {jump}
     (nil)
 -> 172)
;;  succ:       9 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 156

(barrier 229 228 231)
;; basic block 15, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 13, next block 14, flags: (RTL)
;;  pred:       9
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 231 229 230 15 178 (nil) [1 uses])
(note 230 231 232 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 232 230 175 15 (const_int 0 [0]) "../src/spline.f":681 682 {nop}
     (nil))
;;  succ:       14 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 14, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 15, next block 1, flags: (RTL)
;;  pred:       15 [100.0%]  (FALLTHRU)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 129 130 131 132 133 134 135 136 137 138 139 140 195 196 197 198 199 200 201 202 203 204 205 206 207
(code_label 175 232 176 14 170 (nil) [0 uses])
(note 176 175 177 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 177 176 178 14 (set (reg/f:DI 195)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [6 n+0 S8 A64])) "../src/spline.f":683 81 {*movdi_internal}
     (nil))
(insn 178 177 179 14 (set (reg:SI 129 [ _43 ])
        (mem:SI (reg/f:DI 195) [1 *n_61(D)+0 S4 A32])) "../src/spline.f":683 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 195)
        (nil)))
(insn 179 178 180 14 (parallel [
            (set (reg:SI 130 [ _44 ])
                (minus:SI (reg:SI 129 [ _43 ])
                    (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [1 iseg0+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":683 273 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 129 [ _43 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 180 179 181 14 (parallel [
            (set (reg:SI 131 [ _45 ])
                (plus:SI (reg:SI 130 [ _44 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":683 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 130 [ _44 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 181 180 182 14 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -36 [0xffffffffffffffdc])) [1 nseg+0 S4 A32])
        (reg:SI 131 [ _45 ])) "../src/spline.f":683 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 131 [ _45 ])
        (nil)))
(insn 182 181 183 14 (set (reg:SI 196)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 iseg0+0 S4 A32])) "../src/spline.f":684 82 {*movsi_internal}
     (nil))
(insn 183 182 184 14 (set (reg:DI 132 [ _46 ])
        (sign_extend:DI (reg:SI 196))) "../src/spline.f":684 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 196)
        (nil)))
(insn 184 183 185 14 (parallel [
            (set (reg:DI 133 [ _47 ])
                (plus:DI (reg:DI 132 [ _46 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":684 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 132 [ _46 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 185 184 186 14 (parallel [
            (set (reg:DI 197)
                (ashift:DI (reg:DI 133 [ _47 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":684 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 133 [ _47 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 186 185 187 14 (set (reg/f:DI 198)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [5 s+0 S8 A64])) "../src/spline.f":684 81 {*movdi_internal}
     (nil))
(insn 187 186 188 14 (parallel [
            (set (reg/f:DI 134 [ _48 ])
                (plus:DI (reg:DI 197)
                    (reg/f:DI 198)))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":684 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 198)
        (expr_list:REG_DEAD (reg:DI 197)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -72 [0xffffffffffffffb8])) [5 s+0 S8 A64])
                        (reg:DI 197))
                    (nil))))))
(insn 188 187 189 14 (set (reg:SI 199)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 iseg0+0 S4 A32])) "../src/spline.f":684 82 {*movsi_internal}
     (nil))
(insn 189 188 190 14 (set (reg:DI 135 [ _49 ])
        (sign_extend:DI (reg:SI 199))) "../src/spline.f":684 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 199)
        (nil)))
(insn 190 189 191 14 (parallel [
            (set (reg:DI 136 [ _50 ])
                (plus:DI (reg:DI 135 [ _49 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":684 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 135 [ _49 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 191 190 192 14 (parallel [
            (set (reg:DI 200)
                (ashift:DI (reg:DI 136 [ _50 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":684 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 136 [ _50 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 192 191 193 14 (set (reg/f:DI 201)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [5 xs+0 S8 A64])) "../src/spline.f":684 81 {*movdi_internal}
     (nil))
(insn 193 192 194 14 (parallel [
            (set (reg/f:DI 137 [ _51 ])
                (plus:DI (reg:DI 200)
                    (reg/f:DI 201)))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":684 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 201)
        (expr_list:REG_DEAD (reg:DI 200)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -64 [0xffffffffffffffc0])) [5 xs+0 S8 A64])
                        (reg:DI 200))
                    (nil))))))
(insn 194 193 195 14 (set (reg:SI 202)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 iseg0+0 S4 A32])) "../src/spline.f":684 82 {*movsi_internal}
     (nil))
(insn 195 194 196 14 (set (reg:DI 138 [ _52 ])
        (sign_extend:DI (reg:SI 202))) "../src/spline.f":684 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 202)
        (nil)))
(insn 196 195 197 14 (parallel [
            (set (reg:DI 139 [ _53 ])
                (plus:DI (reg:DI 138 [ _52 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":684 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 138 [ _52 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 197 196 198 14 (parallel [
            (set (reg:DI 203)
                (ashift:DI (reg:DI 139 [ _53 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":684 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 139 [ _53 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 198 197 199 14 (set (reg/f:DI 204)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [5 x+0 S8 A64])) "../src/spline.f":684 81 {*movdi_internal}
     (nil))
(insn 199 198 200 14 (parallel [
            (set (reg/f:DI 140 [ _54 ])
                (plus:DI (reg:DI 203)
                    (reg/f:DI 204)))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":684 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 204)
        (expr_list:REG_DEAD (reg:DI 203)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -56 [0xffffffffffffffc8])) [5 x+0 S8 A64])
                        (reg:DI 203))
                    (nil))))))
(insn 200 199 201 14 (set (reg:DI 205)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [4 xs2+0 S8 A64])) "../src/spline.f":684 81 {*movdi_internal}
     (nil))
(insn 201 200 202 14 (set (reg:DI 206)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -88 [0xffffffffffffffa8])) [4 xs1+0 S8 A64])) "../src/spline.f":684 81 {*movdi_internal}
     (nil))
(insn 202 201 203 14 (parallel [
            (set (reg:DI 207)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -36 [0xffffffffffffffdc])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":684 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 203 202 204 14 (set (reg:DI 38 r9)
        (reg:DI 205)) "../src/spline.f":684 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 205)
        (nil)))
(insn 204 203 205 14 (set (reg:DI 37 r8)
        (reg:DI 206)) "../src/spline.f":684 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 206)
        (nil)))
(insn 205 204 206 14 (set (reg:DI 2 cx)
        (reg:DI 207)) "../src/spline.f":684 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 207)
        (nil)))
(insn 206 205 207 14 (set (reg:DI 1 dx)
        (reg/f:DI 134 [ _48 ])) "../src/spline.f":684 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 134 [ _48 ])
        (nil)))
(insn 207 206 208 14 (set (reg:DI 4 si)
        (reg/f:DI 137 [ _51 ])) "../src/spline.f":684 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 137 [ _51 ])
        (nil)))
(insn 208 207 209 14 (set (reg:DI 5 di)
        (reg/f:DI 140 [ _54 ])) "../src/spline.f":684 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 140 [ _54 ])
        (nil)))
(call_insn 209 208 227 14 (call (mem:QI (symbol_ref:DI ("splind_") [flags 0x403]  <function_decl 0x1427e4b00 splind>) [0 splind S1 A8])
        (const_int 0 [0])) "../src/spline.f":684 655 {*call}
     (expr_list:REG_DEAD (reg:DI 38 r9)
        (expr_list:REG_DEAD (reg:DI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:DI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:DI 1 dx)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 227 209 0 14 (const_int 0 [0]) "../src/spline.f":686 682 {nop}
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function inters (inters_, funcdef_no=16, decl_uid=4283, cgraph_uid=16, symbol_order=16)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 49 n_edges 68 count 49 (    1)
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 46 32 47 33 34 35 36 37 38 45 39 40 41 42 43 48 44
;;
;; Loop 1
;;  header 3, latch 38
;;  depth 1, outer 0
;;  nodes: 3 38 37 36 35 34 33 47 32 46 5 4 31 30 29 28 27 26 20 25 23 24 21 22 19 18 16 17 10 15 13 14 11 12 9 8 6 7
;;
;; Loop 2
;;  header 5, latch 31
;;  depth 2, outer 1
;;  nodes: 5 31 30 29 28 27 26 20 25 23 24 21 22 19 18 16 17 10 15 13 14 11 12 9 8 6 7
;; 2 succs { 3 }
;; 3 succs { 45 4 }
;; 4 succs { 5 }
;; 5 succs { 46 6 }
;; 6 succs { 8 7 }
;; 7 succs { 8 9 }
;; 8 succs { 10 }
;; 9 succs { 10 }
;; 10 succs { 11 16 }
;; 11 succs { 12 13 }
;; 12 succs { 13 }
;; 13 succs { 14 15 }
;; 14 succs { 15 }
;; 15 succs { 16 }
;; 16 succs { 18 17 }
;; 17 succs { 18 19 }
;; 18 succs { 20 }
;; 19 succs { 20 }
;; 20 succs { 21 26 }
;; 21 succs { 22 23 }
;; 22 succs { 23 }
;; 23 succs { 24 25 }
;; 24 succs { 25 }
;; 25 succs { 26 }
;; 26 succs { 27 29 }
;; 27 succs { 28 29 }
;; 28 succs { 30 }
;; 29 succs { 30 }
;; 30 succs { 47 31 }
;; 31 succs { 5 }
;; 46 succs { 32 }
;; 32 succs { 33 }
;; 47 succs { 33 }
;; 33 succs { 34 36 }
;; 34 succs { 35 36 }
;; 35 succs { 37 }
;; 36 succs { 37 }
;; 37 succs { 48 38 }
;; 38 succs { 3 }
;; 45 succs { 39 }
;; 39 succs { 40 41 }
;; 40 succs { 41 }
;; 41 succs { 42 43 }
;; 42 succs { 43 }
;; 43 succs { 44 }
;; 48 succs { 44 }
;; 44 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 375.
verify found no changes in insn with uid = 388.
verify found no changes in insn with uid = 400.
verify found no changes in insn with uid = 413.
verify found no changes in insn with uid = 476.
verify found no changes in insn with uid = 481.
verify found no changes in insn with uid = 484.
verify found no changes in insn with uid = 497.
verify found no changes in insn with uid = 510.
verify found no changes in insn with uid = 524.
verify found no changes in insn with uid = 537.
verify found no changes in insn with uid = 640.
verify found no changes in insn with uid = 645.
verify found no changes in insn with uid = 651.
verify found no changes in insn with uid = 657.
verify found no changes in insn with uid = 660.
verify found no changes in insn with uid = 671.
verify found no changes in insn with uid = 676.
verify found no changes in insn with uid = 682.
verify found no changes in insn with uid = 694.
verify found no changes in insn with uid = 700.
verify found no changes in insn with uid = 706.
verify found no changes in insn with uid = 709.
verify found no changes in insn with uid = 722.
verify found no changes in insn with uid = 727.
verify found no changes in insn with uid = 733.
verify found no changes in insn with uid = 745.
verify found no changes in insn with uid = 751.
verify found no changes in insn with uid = 757.
verify found no changes in insn with uid = 760.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r471: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r471,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r470: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r470,l0) best DIREG, allocno GENERAL_REGS
    r469: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r469,l0) best DIREG, allocno GENERAL_REGS
    r468: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r468,l0) best SIREG, allocno GENERAL_REGS
    r467: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r467,l0) best DIREG, allocno GENERAL_REGS
    r466: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r466,l0) best SIREG, allocno GENERAL_REGS
    r465: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r465,l0) best DIREG, allocno GENERAL_REGS
    r464: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r464,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r463: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r463,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r462: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r462,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r461: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a14 (r461,l0) best DIREG, allocno GENERAL_REGS
    r460: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a16 (r460,l0) best DIREG, allocno GENERAL_REGS
    r459: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a17 (r459,l0) best DIREG, allocno GENERAL_REGS
    r458: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r458,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r457: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a19 (r457,l0) best DIREG, allocno GENERAL_REGS
    r456: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a20 (r456,l0) best DIREG, allocno GENERAL_REGS
    r455: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a21 (r455,l0) best SIREG, allocno GENERAL_REGS
    r454: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a22 (r454,l0) best DIREG, allocno GENERAL_REGS
    r453: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a23 (r453,l0) best SIREG, allocno GENERAL_REGS
    r452: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a24 (r452,l0) best DIREG, allocno GENERAL_REGS
    r451: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r451,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r450: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r450,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r449: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a31 (r449,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r448: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a32 (r448,l0) best DIREG, allocno GENERAL_REGS
    r447: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a34 (r447,l0) best DIREG, allocno GENERAL_REGS
    r446: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a35 (r446,l0) best DIREG, allocno GENERAL_REGS
    r445: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a36 (r445,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r444: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a37 (r444,l0) best DIREG, allocno GENERAL_REGS
    r443: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a38 (r443,l0) best DIREG, allocno GENERAL_REGS
    r442: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a39 (r442,l0) best SIREG, allocno GENERAL_REGS
    r441: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a40 (r441,l0) best DIREG, allocno GENERAL_REGS
    r440: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a41 (r440,l0) best SIREG, allocno GENERAL_REGS
    r439: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a42 (r439,l0) best DIREG, allocno GENERAL_REGS
    r438: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a43 (r438,l0) best DIREG, allocno GENERAL_REGS
    r437: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a44 (r437,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r436: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a54 (r436,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r435: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a55 (r435,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r434: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a59 (r434,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r433: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a61 (r433,l0) best SSE_REGS, allocno SSE_REGS
    r432: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a69 (r432,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r431: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a70 (r431,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r430: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a74 (r430,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r429: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a76 (r429,l0) best SSE_REGS, allocno SSE_REGS
    r428: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a79 (r428,l0) best SSE_REGS, allocno SSE_REGS
    r427: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a88 (r427,l0) best SSE_REGS, allocno SSE_REGS
    r426: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a95 (r426,l0) best SSE_REGS, allocno SSE_REGS
    r425: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a98 (r425,l0) best SSE_REGS, allocno SSE_REGS
    r424: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a99 (r424,l0) best SSE_REGS, allocno SSE_REGS
    r423: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a102 (r423,l0) best SSE_REGS, allocno SSE_REGS
    r422: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a100 (r422,l0) best SSE_REGS, allocno SSE_REGS
    r421: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a103 (r421,l0) best DIREG, allocno GENERAL_REGS
    r420: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a104 (r420,l0) best SIREG, allocno GENERAL_REGS
    r419: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a105 (r419,l0) best DREG, allocno GENERAL_REGS
    r418: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a106 (r418,l0) best CREG, allocno GENERAL_REGS
    r417: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a107 (r417,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r416: preferred SSE_FIRST_REG, alternative GENERAL_REGS, allocno INT_SSE_REGS
    a108 (r416,l0) best SSE_FIRST_REG, allocno INT_SSE_REGS
    r415: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a109 (r415,l0) best DIREG, allocno GENERAL_REGS
    r414: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a110 (r414,l0) best SIREG, allocno GENERAL_REGS
    r413: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a111 (r413,l0) best CREG, allocno GENERAL_REGS
    r412: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a112 (r412,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r411: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a115 (r411,l0) best SSE_REGS, allocno SSE_REGS
    r410: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a113 (r410,l0) best SSE_REGS, allocno SSE_REGS
    r409: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a116 (r409,l0) best DIREG, allocno GENERAL_REGS
    r408: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a117 (r408,l0) best SIREG, allocno GENERAL_REGS
    r407: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a118 (r407,l0) best DREG, allocno GENERAL_REGS
    r406: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a119 (r406,l0) best CREG, allocno GENERAL_REGS
    r405: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a120 (r405,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r404: preferred SSE_FIRST_REG, alternative GENERAL_REGS, allocno INT_SSE_REGS
    a121 (r404,l0) best SSE_FIRST_REG, allocno INT_SSE_REGS
    r403: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a122 (r403,l0) best DIREG, allocno GENERAL_REGS
    r402: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a123 (r402,l0) best SIREG, allocno GENERAL_REGS
    r401: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a124 (r401,l0) best DREG, allocno GENERAL_REGS
    r400: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a125 (r400,l0) best CREG, allocno GENERAL_REGS
    r399: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a126 (r399,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r398: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a127 (r398,l0) best DIREG, allocno GENERAL_REGS
    r397: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a128 (r397,l0) best DIREG, allocno GENERAL_REGS
    r396: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a129 (r396,l0) best DIREG, allocno GENERAL_REGS
    r395: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a130 (r395,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r394: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a132 (r394,l0) best SSE_REGS, allocno SSE_REGS
    r393: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a133 (r393,l0) best SSE_REGS, allocno SSE_REGS
    r392: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a131 (r392,l0) best SSE_REGS, allocno SSE_REGS
    r391: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a137 (r391,l0) best SSE_REGS, allocno SSE_REGS
    r390: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a139 (r390,l0) best SSE_REGS, allocno SSE_REGS
    r389: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a141 (r389,l0) best SSE_REGS, allocno SSE_REGS
    r388: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a143 (r388,l0) best SSE_REGS, allocno SSE_REGS
    r387: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a145 (r387,l0) best SSE_REGS, allocno SSE_REGS
    r386: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a147 (r386,l0) best SSE_REGS, allocno SSE_REGS
    r385: preferred SSE_FIRST_REG, alternative GENERAL_REGS, allocno INT_SSE_REGS
    a148 (r385,l0) best SSE_FIRST_REG, allocno INT_SSE_REGS
    r384: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a149 (r384,l0) best DIREG, allocno GENERAL_REGS
    r383: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a150 (r383,l0) best SIREG, allocno GENERAL_REGS
    r382: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a151 (r382,l0) best DREG, allocno GENERAL_REGS
    r381: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a152 (r381,l0) best CREG, allocno GENERAL_REGS
    r380: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a153 (r380,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r379: preferred SSE_FIRST_REG, alternative GENERAL_REGS, allocno INT_SSE_REGS
    a154 (r379,l0) best SSE_FIRST_REG, allocno INT_SSE_REGS
    r378: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a155 (r378,l0) best DIREG, allocno GENERAL_REGS
    r377: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a156 (r377,l0) best SIREG, allocno GENERAL_REGS
    r376: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a157 (r376,l0) best CREG, allocno GENERAL_REGS
    r375: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a158 (r375,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r374: preferred SSE_FIRST_REG, alternative GENERAL_REGS, allocno INT_SSE_REGS
    a159 (r374,l0) best SSE_FIRST_REG, allocno INT_SSE_REGS
    r373: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a160 (r373,l0) best DIREG, allocno GENERAL_REGS
    r372: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a161 (r372,l0) best SIREG, allocno GENERAL_REGS
    r371: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a162 (r371,l0) best DREG, allocno GENERAL_REGS
    r370: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a163 (r370,l0) best CREG, allocno GENERAL_REGS
    r369: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a164 (r369,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r368: preferred SSE_FIRST_REG, alternative GENERAL_REGS, allocno INT_SSE_REGS
    a165 (r368,l0) best SSE_FIRST_REG, allocno INT_SSE_REGS
    r367: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a166 (r367,l0) best DIREG, allocno GENERAL_REGS
    r366: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a167 (r366,l0) best SIREG, allocno GENERAL_REGS
    r365: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a168 (r365,l0) best DREG, allocno GENERAL_REGS
    r364: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a169 (r364,l0) best CREG, allocno GENERAL_REGS
    r363: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a170 (r363,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r362: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a171 (r362,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r361: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a177 (r361,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r360: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a181 (r360,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r359: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a182 (r359,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r358: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a183 (r358,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r357: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a189 (r357,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r356: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a190 (r356,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r355: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a195 (r355,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r354: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a199 (r354,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r353: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a200 (r353,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r352: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a203 (r352,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r351: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a204 (r351,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r350: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a205 (r350,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r349: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a211 (r349,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r348: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a215 (r348,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r347: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a216 (r347,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r346: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a217 (r346,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r345: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a223 (r345,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r344: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a224 (r344,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r343: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a229 (r343,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r342: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a233 (r342,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r341: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a234 (r341,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r340: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a237 (r340,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r339: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a238 (r339,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r338: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a239 (r338,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r337: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a243 (r337,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r336: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a250 (r336,l0) best SSE_REGS, allocno SSE_REGS
    r335: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a248 (r335,l0) best SSE_REGS, allocno SSE_REGS
    r334: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a253 (r334,l0) best SSE_REGS, allocno SSE_REGS
    r333: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a251 (r333,l0) best SSE_REGS, allocno SSE_REGS
    r332: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a254 (r332,l0) best SSE_REGS, allocno SSE_REGS
    r331: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a255 (r331,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r330: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a256 (r330,l0) best SSE_REGS, allocno SSE_REGS
    r329: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a257 (r329,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r328: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a258 (r328,l0) best SSE_REGS, allocno SSE_REGS
    r327: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a260 (r327,l0) best SSE_REGS, allocno SSE_REGS
    r326: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a261 (r326,l0) best SSE_REGS, allocno SSE_REGS
    r325: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a262 (r325,l0) best SSE_REGS, allocno SSE_REGS
    r324: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a263 (r324,l0) best SSE_REGS, allocno SSE_REGS
    r323: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a264 (r323,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r322: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a268 (r322,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r321: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a270 (r321,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r320: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a272 (r320,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r319: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a276 (r319,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r318: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a278 (r318,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r317: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a280 (r317,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r316: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a284 (r316,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r315: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a286 (r315,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r314: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a288 (r314,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r313: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a292 (r313,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r312: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a294 (r312,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r311: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a296 (r311,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r310: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a300 (r310,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r309: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a302 (r309,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r308: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a304 (r308,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r307: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a308 (r307,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r306: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a310 (r306,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r305: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a312 (r305,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r304: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a316 (r304,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r303: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a318 (r303,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r302: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a320 (r302,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r301: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a324 (r301,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r300: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a326 (r300,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r299: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a328 (r299,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r298: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a332 (r298,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r297: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a334 (r297,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r296: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a336 (r296,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r295: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a340 (r295,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r294: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a342 (r294,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r293: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a344 (r293,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r292: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a173 (r292,l0) best SSE_REGS, allocno SSE_REGS
    r291: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a185 (r291,l0) best SSE_REGS, allocno SSE_REGS
    r290: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a207 (r290,l0) best SSE_REGS, allocno SSE_REGS
    r289: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a219 (r289,l0) best SSE_REGS, allocno SSE_REGS
    r288: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a247 (r288,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r287: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a259 (r287,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r283: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a267 (r283,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r282: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a269 (r282,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r278: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a275 (r278,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r277: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a277 (r277,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r273: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a283 (r273,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r272: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a285 (r272,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r268: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a291 (r268,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r267: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a293 (r267,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r263: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a299 (r263,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r262: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a301 (r262,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r258: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a307 (r258,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r257: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a309 (r257,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r253: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a315 (r253,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r252: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a317 (r252,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r248: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a323 (r248,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r247: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a325 (r247,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r243: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a331 (r243,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r242: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a333 (r242,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r238: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a339 (r238,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r237: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a341 (r237,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r236: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a46 (r236,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r235: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a135 (r235,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r234: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a192 (r234,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r233: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a226 (r233,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r232: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a172 (r232,l0) best SSE_REGS, allocno SSE_REGS
    r231: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a184 (r231,l0) best SSE_REGS, allocno SSE_REGS
    r230: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a206 (r230,l0) best SSE_REGS, allocno SSE_REGS
    r229: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a218 (r229,l0) best SSE_REGS, allocno SSE_REGS
    r228: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a7 (r228,l0) best SIREG, allocno GENERAL_REGS
    r227: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r227,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r226: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r226,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r225: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r225,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r224: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a15 (r224,l0) best SIREG, allocno GENERAL_REGS
    r223: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a25 (r223,l0) best SIREG, allocno GENERAL_REGS
    r222: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r222,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r221: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r221,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r220: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r220,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r219: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a33 (r219,l0) best SIREG, allocno GENERAL_REGS
    r218: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a45 (r218,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r217: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a48 (r217,l0) best SSE_REGS, allocno SSE_REGS
    r216: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a49 (r216,l0) best SSE_REGS, allocno SSE_REGS
    r215: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a50 (r215,l0) best SSE_REGS, allocno SSE_REGS
    r214: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a51 (r214,l0) best SSE_REGS, allocno SSE_REGS
    r213: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a52 (r213,l0) best SSE_REGS, allocno SSE_REGS
    r212: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a53 (r212,l0) best SSE_REGS, allocno SSE_REGS
    r211: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a56 (r211,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r210: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a57 (r210,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r209: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a58 (r209,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r208: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a47 (r208,l0) best SSE_REGS, allocno SSE_REGS
    r207: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a60 (r207,l0) best SSE_REGS, allocno SSE_REGS
    r206: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a63 (r206,l0) best SSE_REGS, allocno SSE_REGS
    r205: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a64 (r205,l0) best SSE_REGS, allocno SSE_REGS
    r204: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a65 (r204,l0) best SSE_REGS, allocno SSE_REGS
    r203: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a66 (r203,l0) best SSE_REGS, allocno SSE_REGS
    r202: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a67 (r202,l0) best SSE_REGS, allocno SSE_REGS
    r201: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a68 (r201,l0) best SSE_REGS, allocno SSE_REGS
    r200: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a71 (r200,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r199: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a72 (r199,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r198: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a73 (r198,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r197: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a62 (r197,l0) best SSE_REGS, allocno SSE_REGS
    r196: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a75 (r196,l0) best SSE_REGS, allocno SSE_REGS
    r195: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a77 (r195,l0) best SSE_REGS, allocno SSE_REGS
    r194: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a78 (r194,l0) best SSE_REGS, allocno SSE_REGS
    r193: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a80 (r193,l0) best SSE_REGS, allocno SSE_REGS
    r192: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a81 (r192,l0) best SSE_REGS, allocno SSE_REGS
    r191: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a82 (r191,l0) best SSE_REGS, allocno SSE_REGS
    r190: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a84 (r190,l0) best SSE_REGS, allocno SSE_REGS
    r189: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a83 (r189,l0) best SSE_REGS, allocno SSE_REGS
    r188: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a85 (r188,l0) best SSE_REGS, allocno SSE_REGS
    r187: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a86 (r187,l0) best SSE_REGS, allocno SSE_REGS
    r186: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a87 (r186,l0) best SSE_REGS, allocno SSE_REGS
    r185: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a89 (r185,l0) best SSE_REGS, allocno SSE_REGS
    r184: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a90 (r184,l0) best SSE_REGS, allocno SSE_REGS
    r183: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a91 (r183,l0) best SSE_REGS, allocno SSE_REGS
    r182: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a93 (r182,l0) best SSE_REGS, allocno SSE_REGS
    r181: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a92 (r181,l0) best SSE_REGS, allocno SSE_REGS
    r180: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a94 (r180,l0) best SSE_REGS, allocno SSE_REGS
    r179: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a96 (r179,l0) best SSE_REGS, allocno SSE_REGS
    r178: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a97 (r178,l0) best SSE_REGS, allocno SSE_REGS
    r177: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a101 (r177,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r176: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a114 (r176,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r175: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a134 (r175,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r174: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a136 (r174,l0) best SSE_REGS, allocno SSE_REGS
    r173: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a138 (r173,l0) best SSE_REGS, allocno SSE_REGS
    r172: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a140 (r172,l0) best SSE_REGS, allocno SSE_REGS
    r171: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a142 (r171,l0) best SSE_REGS, allocno SSE_REGS
    r170: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a144 (r170,l0) best SSE_REGS, allocno SSE_REGS
    r169: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a146 (r169,l0) best SSE_REGS, allocno SSE_REGS
    r168: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a174 (r168,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r167: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a175 (r167,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r166: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a176 (r166,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r165: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a178 (r165,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r164: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a179 (r164,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r163: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a180 (r163,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r162: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a186 (r162,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r161: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a187 (r161,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r160: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a188 (r160,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r159: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a191 (r159,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r158: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a193 (r158,l0) best SSE_REGS, allocno SSE_REGS
    r157: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a196 (r157,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r156: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a197 (r156,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r155: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a198 (r155,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r154: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a194 (r154,l0) best SSE_REGS, allocno SSE_REGS
    r153: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a202 (r153,l0) best SSE_REGS, allocno SSE_REGS
    r152: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a201 (r152,l0) best SSE_REGS, allocno SSE_REGS
    r151: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a208 (r151,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r150: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a209 (r150,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r149: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a210 (r149,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r148: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a212 (r148,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r147: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a213 (r147,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r146: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a214 (r146,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r145: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a220 (r145,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r144: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a221 (r144,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a222 (r143,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a225 (r142,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r141: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a227 (r141,l0) best SSE_REGS, allocno SSE_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a230 (r140,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a231 (r139,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a232 (r138,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r137: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a228 (r137,l0) best SSE_REGS, allocno SSE_REGS
    r136: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a236 (r136,l0) best SSE_REGS, allocno SSE_REGS
    r135: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a235 (r135,l0) best SSE_REGS, allocno SSE_REGS
    r134: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a240 (r134,l0) best SSE_REGS, allocno SSE_REGS
    r133: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a241 (r133,l0) best SSE_REGS, allocno SSE_REGS
    r132: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a242 (r132,l0) best SSE_REGS, allocno SSE_REGS
    r131: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a244 (r131,l0) best SSE_REGS, allocno SSE_REGS
    r130: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a245 (r130,l0) best SSE_REGS, allocno SSE_REGS
    r129: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a246 (r129,l0) best SSE_REGS, allocno SSE_REGS
    r128: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a249 (r128,l0) best SSE_REGS, allocno SSE_REGS
    r127: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a252 (r127,l0) best SSE_REGS, allocno SSE_REGS
    r125: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a265 (r125,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r124: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a266 (r124,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r123: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a271 (r123,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a273 (r121,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r120: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a274 (r120,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a279 (r119,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a281 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a282 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a287 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a289 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r112: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a290 (r112,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a295 (r111,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a297 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a298 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a303 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a305 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a306 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a311 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a313 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a314 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a319 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a321 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a322 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a327 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a329 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a330 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a335 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a337 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a338 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a343 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r471,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a1(r470,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a2(r469,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a3(r468,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a4(r467,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a5(r466,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a6(r465,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a7(r228,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a8(r464,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a9(r463,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a10(r227,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a11(r226,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a12(r225,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a13(r462,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a14(r461,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a15(r224,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a16(r460,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a17(r459,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a18(r458,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a19(r457,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a20(r456,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a21(r455,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a22(r454,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a23(r453,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a24(r452,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a25(r223,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a26(r451,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a27(r450,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a28(r222,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a29(r221,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a30(r220,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a31(r449,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a32(r448,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a33(r219,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a34(r447,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a35(r446,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a36(r445,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a37(r444,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a38(r443,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a39(r442,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a40(r441,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a41(r440,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a42(r439,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a43(r438,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a44(r437,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a45(r218,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:32 NO_REX_SSE_REGS:32 SSE_REGS:32 MMX_REGS:52 INT_SSE_REGS:36 ALL_REGS:832 MEM:14
  a46(r236,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:5
  a47(r208,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a48(r217,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:16
  a49(r216,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a50(r215,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 ALL_REGS:29 MEM:8
  a51(r214,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:9
  a52(r213,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a53(r212,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a54(r436,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a55(r435,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a56(r211,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a57(r210,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a58(r209,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a59(r434,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a60(r207,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a61(r433,l0) costs: SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MEM:15
  a62(r197,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a63(r206,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:16
  a64(r205,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a65(r204,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 ALL_REGS:29 MEM:8
  a66(r203,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:9
  a67(r202,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a68(r201,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a69(r432,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a70(r431,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a71(r200,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a72(r199,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a73(r198,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a74(r430,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a75(r196,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a76(r429,l0) costs: SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MEM:15
  a77(r195,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a78(r194,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:16
  a79(r428,l0) costs: SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MEM:15
  a80(r193,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 ALL_REGS:29 MEM:9
  a81(r192,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:9
  a82(r191,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a83(r189,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:16
  a84(r190,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a85(r188,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a86(r187,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a87(r186,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:16
  a88(r427,l0) costs: SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MEM:15
  a89(r185,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 ALL_REGS:29 MEM:9
  a90(r184,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:9
  a91(r183,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a92(r181,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:16
  a93(r182,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a94(r180,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a95(r426,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a96(r179,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a97(r178,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:16
  a98(r425,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a99(r424,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a100(r422,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a101(r177,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 ALL_REGS:29 MEM:9
  a102(r423,l0) costs: SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MEM:15
  a103(r421,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a104(r420,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a105(r419,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a106(r418,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a107(r417,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a108(r416,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 CLOBBERED_REGS:4 Q_REGS:4 NON_Q_REGS:4 TLS_GOTBASE_REGS:4 GENERAL_REGS:4 FP_TOP_REG:25 FP_SECOND_REG:25 FLOAT_REGS:25 SSE_FIRST_REG:19 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:23 FP_TOP_SSE_REGS:27 FP_SECOND_SSE_REGS:27 FLOAT_SSE_REGS:27 FLOAT_INT_REGS:25 INT_SSE_REGS:19 FLOAT_INT_SSE_REGS:27 ALL_REGS:27 MEM:7
  a109(r415,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a110(r414,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a111(r413,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a112(r412,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a113(r410,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a114(r176,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 ALL_REGS:29 MEM:9
  a115(r411,l0) costs: SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MEM:15
  a116(r409,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a117(r408,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a118(r407,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a119(r406,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a120(r405,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a121(r404,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 CLOBBERED_REGS:4 Q_REGS:4 NON_Q_REGS:4 TLS_GOTBASE_REGS:4 GENERAL_REGS:4 FP_TOP_REG:25 FP_SECOND_REG:25 FLOAT_REGS:25 SSE_FIRST_REG:19 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:23 FP_TOP_SSE_REGS:27 FP_SECOND_SSE_REGS:27 FLOAT_SSE_REGS:27 FLOAT_INT_REGS:25 INT_SSE_REGS:19 FLOAT_INT_SSE_REGS:27 ALL_REGS:27 MEM:7
  a122(r403,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a123(r402,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a124(r401,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a125(r400,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a126(r399,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a127(r398,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a128(r397,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a129(r396,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a130(r395,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a131(r392,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a132(r394,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a133(r393,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a134(r175,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:32 NO_REX_SSE_REGS:32 SSE_REGS:32 MMX_REGS:52 INT_SSE_REGS:36 ALL_REGS:832 MEM:14
  a135(r235,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:5
  a136(r174,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a137(r391,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a138(r173,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a139(r390,l0) costs: SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MEM:15
  a140(r172,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a141(r389,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a142(r171,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a143(r388,l0) costs: SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MEM:15
  a144(r170,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a145(r387,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a146(r169,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a147(r386,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a148(r385,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 CLOBBERED_REGS:4 Q_REGS:4 NON_Q_REGS:4 TLS_GOTBASE_REGS:4 GENERAL_REGS:4 FP_TOP_REG:25 FP_SECOND_REG:25 FLOAT_REGS:25 SSE_FIRST_REG:19 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:23 FP_TOP_SSE_REGS:27 FP_SECOND_SSE_REGS:27 FLOAT_SSE_REGS:27 FLOAT_INT_REGS:25 INT_SSE_REGS:19 FLOAT_INT_SSE_REGS:27 ALL_REGS:27 MEM:7
  a149(r384,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a150(r383,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a151(r382,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a152(r381,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a153(r380,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a154(r379,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 CLOBBERED_REGS:4 Q_REGS:4 NON_Q_REGS:4 TLS_GOTBASE_REGS:4 GENERAL_REGS:4 FP_TOP_REG:25 FP_SECOND_REG:25 FLOAT_REGS:25 SSE_FIRST_REG:19 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:23 FP_TOP_SSE_REGS:27 FP_SECOND_SSE_REGS:27 FLOAT_SSE_REGS:27 FLOAT_INT_REGS:25 INT_SSE_REGS:19 FLOAT_INT_SSE_REGS:27 ALL_REGS:27 MEM:7
  a155(r378,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a156(r377,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a157(r376,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a158(r375,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a159(r374,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 CLOBBERED_REGS:4 Q_REGS:4 NON_Q_REGS:4 TLS_GOTBASE_REGS:4 GENERAL_REGS:4 FP_TOP_REG:25 FP_SECOND_REG:25 FLOAT_REGS:25 SSE_FIRST_REG:19 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:23 FP_TOP_SSE_REGS:27 FP_SECOND_SSE_REGS:27 FLOAT_SSE_REGS:27 FLOAT_INT_REGS:25 INT_SSE_REGS:19 FLOAT_INT_SSE_REGS:27 ALL_REGS:27 MEM:7
  a160(r373,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a161(r372,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a162(r371,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a163(r370,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a164(r369,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a165(r368,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 CLOBBERED_REGS:4 Q_REGS:4 NON_Q_REGS:4 TLS_GOTBASE_REGS:4 GENERAL_REGS:4 FP_TOP_REG:25 FP_SECOND_REG:25 FLOAT_REGS:25 SSE_FIRST_REG:19 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:23 FP_TOP_SSE_REGS:27 FP_SECOND_SSE_REGS:27 FLOAT_SSE_REGS:27 FLOAT_INT_REGS:25 INT_SSE_REGS:19 FLOAT_INT_SSE_REGS:27 ALL_REGS:27 MEM:7
  a166(r367,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a167(r366,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a168(r365,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a169(r364,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a170(r363,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a171(r362,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a172(r232,l0) costs: AREG:30 DREG:30 CREG:30 BREG:30 SIREG:30 DIREG:30 AD_REGS:30 CLOBBERED_REGS:30 Q_REGS:30 NON_Q_REGS:30 TLS_GOTBASE_REGS:30 GENERAL_REGS:30 FP_TOP_REG:100 FP_SECOND_REG:100 FLOAT_REGS:100 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:88 FP_TOP_SSE_REGS:104 FP_SECOND_SSE_REGS:104 FLOAT_SSE_REGS:104 FLOAT_INT_REGS:100 INT_SSE_REGS:69 FLOAT_INT_SSE_REGS:104 ALL_REGS:104 MEM:36
  a173(r292,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 CLOBBERED_REGS:12 Q_REGS:12 NON_Q_REGS:12 TLS_GOTBASE_REGS:12 GENERAL_REGS:12 FP_TOP_REG:45 FP_SECOND_REG:45 FLOAT_REGS:45 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:39 FP_TOP_SSE_REGS:47 FP_SECOND_SSE_REGS:47 FLOAT_SSE_REGS:47 FLOAT_INT_REGS:45 INT_SSE_REGS:32 FLOAT_INT_SSE_REGS:47 ALL_REGS:47 MEM:14
  a174(r168,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:5
  a175(r167,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:4
  a176(r166,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:4
  a177(r361,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a178(r165,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a179(r164,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a180(r163,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a181(r360,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a182(r359,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a183(r358,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a184(r231,l0) costs: AREG:30 DREG:30 CREG:30 BREG:30 SIREG:30 DIREG:30 AD_REGS:30 CLOBBERED_REGS:30 Q_REGS:30 NON_Q_REGS:30 TLS_GOTBASE_REGS:30 GENERAL_REGS:30 FP_TOP_REG:100 FP_SECOND_REG:100 FLOAT_REGS:100 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:88 FP_TOP_SSE_REGS:104 FP_SECOND_SSE_REGS:104 FLOAT_SSE_REGS:104 FLOAT_INT_REGS:100 INT_SSE_REGS:69 FLOAT_INT_SSE_REGS:104 ALL_REGS:104 MEM:35
  a185(r291,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 CLOBBERED_REGS:12 Q_REGS:12 NON_Q_REGS:12 TLS_GOTBASE_REGS:12 GENERAL_REGS:12 FP_TOP_REG:45 FP_SECOND_REG:45 FLOAT_REGS:45 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:39 FP_TOP_SSE_REGS:47 FP_SECOND_SSE_REGS:47 FLOAT_SSE_REGS:47 FLOAT_INT_REGS:45 INT_SSE_REGS:32 FLOAT_INT_SSE_REGS:47 ALL_REGS:47 MEM:15
  a186(r162,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:5
  a187(r161,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:4
  a188(r160,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:4
  a189(r357,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a190(r356,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a191(r159,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:32 NO_REX_SSE_REGS:32 SSE_REGS:32 MMX_REGS:52 INT_SSE_REGS:36 ALL_REGS:832 MEM:14
  a192(r234,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:5
  a193(r158,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a194(r154,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a195(r355,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a196(r157,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a197(r156,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a198(r155,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a199(r354,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a200(r353,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a201(r152,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a202(r153,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a203(r352,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a204(r351,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a205(r350,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a206(r230,l0) costs: AREG:30 DREG:30 CREG:30 BREG:30 SIREG:30 DIREG:30 AD_REGS:30 CLOBBERED_REGS:30 Q_REGS:30 NON_Q_REGS:30 TLS_GOTBASE_REGS:30 GENERAL_REGS:30 FP_TOP_REG:100 FP_SECOND_REG:100 FLOAT_REGS:100 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:88 FP_TOP_SSE_REGS:104 FP_SECOND_SSE_REGS:104 FLOAT_SSE_REGS:104 FLOAT_INT_REGS:100 INT_SSE_REGS:69 FLOAT_INT_SSE_REGS:104 ALL_REGS:104 MEM:36
  a207(r290,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 CLOBBERED_REGS:12 Q_REGS:12 NON_Q_REGS:12 TLS_GOTBASE_REGS:12 GENERAL_REGS:12 FP_TOP_REG:45 FP_SECOND_REG:45 FLOAT_REGS:45 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:39 FP_TOP_SSE_REGS:47 FP_SECOND_SSE_REGS:47 FLOAT_SSE_REGS:47 FLOAT_INT_REGS:45 INT_SSE_REGS:32 FLOAT_INT_SSE_REGS:47 ALL_REGS:47 MEM:14
  a208(r151,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:5
  a209(r150,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:4
  a210(r149,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:4
  a211(r349,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a212(r148,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a213(r147,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a214(r146,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a215(r348,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a216(r347,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a217(r346,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a218(r229,l0) costs: AREG:30 DREG:30 CREG:30 BREG:30 SIREG:30 DIREG:30 AD_REGS:30 CLOBBERED_REGS:30 Q_REGS:30 NON_Q_REGS:30 TLS_GOTBASE_REGS:30 GENERAL_REGS:30 FP_TOP_REG:100 FP_SECOND_REG:100 FLOAT_REGS:100 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:88 FP_TOP_SSE_REGS:104 FP_SECOND_SSE_REGS:104 FLOAT_SSE_REGS:104 FLOAT_INT_REGS:100 INT_SSE_REGS:69 FLOAT_INT_SSE_REGS:104 ALL_REGS:104 MEM:35
  a219(r289,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 CLOBBERED_REGS:12 Q_REGS:12 NON_Q_REGS:12 TLS_GOTBASE_REGS:12 GENERAL_REGS:12 FP_TOP_REG:45 FP_SECOND_REG:45 FLOAT_REGS:45 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:39 FP_TOP_SSE_REGS:47 FP_SECOND_SSE_REGS:47 FLOAT_SSE_REGS:47 FLOAT_INT_REGS:45 INT_SSE_REGS:32 FLOAT_INT_SSE_REGS:47 ALL_REGS:47 MEM:15
  a220(r145,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:5
  a221(r144,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:4
  a222(r143,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:4
  a223(r345,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a224(r344,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a225(r142,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:32 NO_REX_SSE_REGS:32 SSE_REGS:32 MMX_REGS:52 INT_SSE_REGS:36 ALL_REGS:832 MEM:14
  a226(r233,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:5
  a227(r141,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a228(r137,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a229(r343,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a230(r140,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a231(r139,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a232(r138,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a233(r342,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a234(r341,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a235(r135,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a236(r136,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a237(r340,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a238(r339,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a239(r338,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a240(r134,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a241(r133,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:16
  a242(r132,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a243(r337,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a244(r131,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a245(r130,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:16
  a246(r129,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a247(r288,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7
  a248(r335,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a249(r128,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a250(r336,l0) costs: SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MEM:15
  a251(r333,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a252(r127,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a253(r334,l0) costs: SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MEM:15
  a254(r332,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 CLOBBERED_REGS:4 Q_REGS:4 NON_Q_REGS:4 TLS_GOTBASE_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:29 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:12
  a255(r331,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a256(r330,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 CLOBBERED_REGS:4 Q_REGS:4 NON_Q_REGS:4 TLS_GOTBASE_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:29 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:12
  a257(r329,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a258(r328,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 CLOBBERED_REGS:4 Q_REGS:4 NON_Q_REGS:4 TLS_GOTBASE_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:29 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:12
  a259(r287,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7
  a260(r327,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 CLOBBERED_REGS:4 Q_REGS:4 NON_Q_REGS:4 TLS_GOTBASE_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:29 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:12
  a261(r326,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 CLOBBERED_REGS:4 Q_REGS:4 NON_Q_REGS:4 TLS_GOTBASE_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:29 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:12
  a262(r325,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 CLOBBERED_REGS:4 Q_REGS:4 NON_Q_REGS:4 TLS_GOTBASE_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:29 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:12
  a263(r324,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 CLOBBERED_REGS:4 Q_REGS:4 NON_Q_REGS:4 TLS_GOTBASE_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:29 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:12
  a264(r323,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a265(r125,l0) costs: AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:2
  a266(r124,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a267(r283,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a268(r322,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a269(r282,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:38 INT_SSE_REGS:27 ALL_REGS:520 MEM:11
  a270(r321,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:8
  a271(r123,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a272(r320,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a273(r121,l0) costs: AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:2
  a274(r120,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a275(r278,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a276(r319,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a277(r277,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:38 INT_SSE_REGS:27 ALL_REGS:520 MEM:11
  a278(r318,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:8
  a279(r119,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a280(r317,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a281(r117,l0) costs: AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:2
  a282(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a283(r273,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a284(r316,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a285(r272,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:38 INT_SSE_REGS:27 ALL_REGS:520 MEM:11
  a286(r315,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:8
  a287(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a288(r314,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a289(r113,l0) costs: AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:2
  a290(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a291(r268,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a292(r313,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a293(r267,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:38 INT_SSE_REGS:27 ALL_REGS:520 MEM:11
  a294(r312,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:8
  a295(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a296(r311,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a297(r109,l0) costs: AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:2
  a298(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a299(r263,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a300(r310,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a301(r262,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:38 INT_SSE_REGS:27 ALL_REGS:520 MEM:11
  a302(r309,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:8
  a303(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a304(r308,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a305(r105,l0) costs: AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:2
  a306(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a307(r258,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a308(r307,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a309(r257,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:38 INT_SSE_REGS:27 ALL_REGS:520 MEM:11
  a310(r306,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:8
  a311(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a312(r305,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a313(r101,l0) costs: AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:2
  a314(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a315(r253,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a316(r304,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a317(r252,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:38 INT_SSE_REGS:27 ALL_REGS:520 MEM:11
  a318(r303,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:8
  a319(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a320(r302,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a321(r97,l0) costs: AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:2
  a322(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a323(r248,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a324(r301,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a325(r247,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:38 INT_SSE_REGS:27 ALL_REGS:520 MEM:11
  a326(r300,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:8
  a327(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a328(r299,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a329(r93,l0) costs: AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:2
  a330(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a331(r243,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a332(r298,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a333(r242,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:38 INT_SSE_REGS:27 ALL_REGS:520 MEM:11
  a334(r297,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:8
  a335(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a336(r296,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a337(r89,l0) costs: AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:2
  a338(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a339(r238,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a340(r295,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a341(r237,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:38 INT_SSE_REGS:27 ALL_REGS:520 MEM:11
  a342(r294,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:8
  a343(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a344(r293,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8

   Insn 817(l0): point = 1
   Insn 813(l0): point = 4
   Insn 787(l0): point = 6
   Insn 764(l0): point = 8
   Insn 763(l0): point = 10
   Insn 760(l0): point = 13
   Insn 759(l0): point = 15
   Insn 758(l0): point = 17
   Insn 757(l0): point = 19
   Insn 756(l0): point = 21
   Insn 755(l0): point = 23
   Insn 754(l0): point = 25
   Insn 753(l0): point = 27
   Insn 752(l0): point = 29
   Insn 751(l0): point = 31
   Insn 750(l0): point = 33
   Insn 749(l0): point = 35
   Insn 748(l0): point = 37
   Insn 747(l0): point = 39
   Insn 746(l0): point = 41
   Insn 745(l0): point = 43
   Insn 744(l0): point = 45
   Insn 743(l0): point = 47
   Insn 742(l0): point = 49
   Insn 741(l0): point = 51
   Insn 740(l0): point = 53
   Insn 739(l0): point = 55
   Insn 738(l0): point = 57
   Insn 737(l0): point = 59
   Insn 736(l0): point = 61
   Insn 735(l0): point = 63
   Insn 734(l0): point = 65
   Insn 733(l0): point = 67
   Insn 732(l0): point = 69
   Insn 731(l0): point = 71
   Insn 730(l0): point = 73
   Insn 729(l0): point = 75
   Insn 728(l0): point = 77
   Insn 727(l0): point = 79
   Insn 726(l0): point = 81
   Insn 725(l0): point = 83
   Insn 724(l0): point = 85
   Insn 723(l0): point = 87
   Insn 722(l0): point = 89
   Insn 721(l0): point = 91
   Insn 720(l0): point = 93
   Insn 719(l0): point = 95
   Insn 718(l0): point = 97
   Insn 717(l0): point = 99
   Insn 716(l0): point = 101
   Insn 715(l0): point = 103
   Insn 713(l0): point = 106
   Insn 712(l0): point = 108
   Insn 709(l0): point = 111
   Insn 708(l0): point = 113
   Insn 707(l0): point = 115
   Insn 706(l0): point = 117
   Insn 705(l0): point = 119
   Insn 704(l0): point = 121
   Insn 703(l0): point = 123
   Insn 702(l0): point = 125
   Insn 701(l0): point = 127
   Insn 700(l0): point = 129
   Insn 699(l0): point = 131
   Insn 698(l0): point = 133
   Insn 697(l0): point = 135
   Insn 696(l0): point = 137
   Insn 695(l0): point = 139
   Insn 694(l0): point = 141
   Insn 693(l0): point = 143
   Insn 692(l0): point = 145
   Insn 691(l0): point = 147
   Insn 690(l0): point = 149
   Insn 689(l0): point = 151
   Insn 688(l0): point = 153
   Insn 687(l0): point = 155
   Insn 686(l0): point = 157
   Insn 685(l0): point = 159
   Insn 684(l0): point = 161
   Insn 683(l0): point = 163
   Insn 682(l0): point = 165
   Insn 681(l0): point = 167
   Insn 680(l0): point = 169
   Insn 679(l0): point = 171
   Insn 678(l0): point = 173
   Insn 677(l0): point = 175
   Insn 676(l0): point = 177
   Insn 675(l0): point = 179
   Insn 674(l0): point = 181
   Insn 673(l0): point = 183
   Insn 672(l0): point = 185
   Insn 671(l0): point = 187
   Insn 670(l0): point = 189
   Insn 669(l0): point = 191
   Insn 668(l0): point = 193
   Insn 667(l0): point = 195
   Insn 666(l0): point = 197
   Insn 665(l0): point = 199
   Insn 664(l0): point = 201
   Insn 662(l0): point = 204
   Insn 661(l0): point = 206
   Insn 660(l0): point = 208
   Insn 659(l0): point = 210
   Insn 658(l0): point = 212
   Insn 657(l0): point = 214
   Insn 656(l0): point = 216
   Insn 655(l0): point = 218
   Insn 654(l0): point = 220
   Insn 653(l0): point = 222
   Insn 652(l0): point = 224
   Insn 651(l0): point = 226
   Insn 650(l0): point = 228
   Insn 649(l0): point = 230
   Insn 648(l0): point = 232
   Insn 647(l0): point = 234
   Insn 646(l0): point = 236
   Insn 645(l0): point = 238
   Insn 644(l0): point = 240
   Insn 643(l0): point = 242
   Insn 642(l0): point = 244
   Insn 641(l0): point = 246
   Insn 640(l0): point = 248
   Insn 639(l0): point = 250
   Insn 638(l0): point = 252
   Insn 637(l0): point = 254
   Insn 636(l0): point = 256
   Insn 635(l0): point = 258
   Insn 634(l0): point = 260
   Insn 633(l0): point = 262
   Insn 804(l0): point = 265
   Insn 180(l0): point = 268
   Insn 179(l0): point = 270
   Insn 178(l0): point = 272
   Insn 177(l0): point = 274
   Insn 800(l0): point = 277
   Insn 627(l0): point = 279
   Insn 621(l0): point = 282
   Insn 620(l0): point = 284
   Insn 619(l0): point = 286
   Insn 618(l0): point = 288
   Insn 615(l0): point = 291
   Insn 798(l0): point = 294
   Insn 610(l0): point = 296
   Insn 605(l0): point = 299
   Insn 604(l0): point = 301
   Insn 603(l0): point = 303
   Insn 602(l0): point = 305
   Insn 601(l0): point = 307
   Insn 600(l0): point = 309
   Insn 599(l0): point = 311
   Insn 598(l0): point = 313
   Insn 597(l0): point = 315
   Insn 596(l0): point = 317
   Insn 595(l0): point = 319
   Insn 594(l0): point = 321
   Insn 593(l0): point = 323
   Insn 592(l0): point = 325
   Insn 591(l0): point = 327
   Insn 590(l0): point = 329
   Insn 589(l0): point = 331
   Insn 584(l0): point = 334
   Insn 583(l0): point = 336
   Insn 582(l0): point = 338
   Insn 581(l0): point = 340
   Insn 580(l0): point = 342
   Insn 579(l0): point = 344
   Insn 578(l0): point = 346
   Insn 577(l0): point = 348
   Insn 576(l0): point = 350
   Insn 575(l0): point = 352
   Insn 574(l0): point = 354
   Insn 573(l0): point = 356
   Insn 572(l0): point = 358
   Insn 571(l0): point = 360
   Insn 570(l0): point = 362
   Insn 569(l0): point = 364
   Insn 568(l0): point = 366
   Insn 567(l0): point = 368
   Insn 566(l0): point = 370
   Insn 565(l0): point = 372
   Insn 564(l0): point = 374
   Insn 563(l0): point = 376
   Insn 562(l0): point = 378
   Insn 561(l0): point = 380
   Insn 560(l0): point = 382
   Insn 559(l0): point = 384
   Insn 558(l0): point = 386
   Insn 557(l0): point = 388
   Insn 556(l0): point = 390
   Insn 555(l0): point = 392
   Insn 554(l0): point = 394
   Insn 553(l0): point = 396
   Insn 552(l0): point = 398
   Insn 551(l0): point = 400
   Insn 550(l0): point = 402
   Insn 549(l0): point = 404
   Insn 548(l0): point = 406
   Insn 547(l0): point = 408
   Insn 546(l0): point = 410
   Insn 545(l0): point = 412
   Insn 544(l0): point = 414
   Insn 543(l0): point = 416
   Insn 542(l0): point = 418
   Insn 541(l0): point = 420
   Insn 540(l0): point = 422
   Insn 539(l0): point = 424
   Insn 538(l0): point = 426
   Insn 537(l0): point = 428
   Insn 536(l0): point = 430
   Insn 535(l0): point = 432
   Insn 534(l0): point = 434
   Insn 533(l0): point = 436
   Insn 532(l0): point = 438
   Insn 531(l0): point = 440
   Insn 530(l0): point = 442
   Insn 529(l0): point = 444
   Insn 528(l0): point = 446
   Insn 527(l0): point = 448
   Insn 526(l0): point = 450
   Insn 525(l0): point = 452
   Insn 524(l0): point = 454
   Insn 523(l0): point = 456
   Insn 522(l0): point = 458
   Insn 521(l0): point = 460
   Insn 520(l0): point = 462
   Insn 519(l0): point = 464
   Insn 518(l0): point = 466
   Insn 517(l0): point = 468
   Insn 516(l0): point = 470
   Insn 515(l0): point = 472
   Insn 514(l0): point = 474
   Insn 513(l0): point = 476
   Insn 512(l0): point = 478
   Insn 511(l0): point = 480
   Insn 510(l0): point = 482
   Insn 509(l0): point = 484
   Insn 508(l0): point = 486
   Insn 507(l0): point = 488
   Insn 506(l0): point = 490
   Insn 505(l0): point = 492
   Insn 504(l0): point = 494
   Insn 503(l0): point = 496
   Insn 502(l0): point = 498
   Insn 501(l0): point = 500
   Insn 500(l0): point = 502
   Insn 499(l0): point = 504
   Insn 498(l0): point = 506
   Insn 497(l0): point = 508
   Insn 496(l0): point = 510
   Insn 495(l0): point = 512
   Insn 494(l0): point = 514
   Insn 493(l0): point = 516
   Insn 492(l0): point = 518
   Insn 491(l0): point = 520
   Insn 490(l0): point = 522
   Insn 489(l0): point = 524
   Insn 488(l0): point = 526
   Insn 487(l0): point = 528
   Insn 812(l0): point = 531
   Insn 808(l0): point = 534
   Insn 484(l0): point = 536
   Insn 483(l0): point = 538
   Insn 482(l0): point = 540
   Insn 481(l0): point = 542
   Insn 480(l0): point = 544
   Insn 479(l0): point = 546
   Insn 478(l0): point = 548
   Insn 477(l0): point = 550
   Insn 476(l0): point = 552
   Insn 475(l0): point = 554
   Insn 474(l0): point = 556
   Insn 473(l0): point = 558
   Insn 472(l0): point = 560
   Insn 471(l0): point = 562
   Insn 470(l0): point = 564
   Insn 469(l0): point = 566
   Insn 807(l0): point = 569
   Insn 203(l0): point = 572
   Insn 202(l0): point = 574
   Insn 201(l0): point = 576
   Insn 200(l0): point = 578
   Insn 198(l0): point = 581
   Insn 197(l0): point = 583
   Insn 196(l0): point = 585
   Insn 195(l0): point = 587
   Insn 194(l0): point = 589
   Insn 193(l0): point = 591
   Insn 192(l0): point = 593
   Insn 191(l0): point = 595
   Insn 190(l0): point = 597
   Insn 189(l0): point = 599
   Insn 188(l0): point = 601
   Insn 187(l0): point = 603
   Insn 186(l0): point = 605
   Insn 185(l0): point = 607
   Insn 184(l0): point = 609
   Insn 183(l0): point = 611
   Insn 182(l0): point = 613
   Insn 796(l0): point = 616
   Insn 463(l0): point = 618
   Insn 462(l0): point = 620
   Insn 461(l0): point = 622
   Insn 460(l0): point = 624
   Insn 459(l0): point = 626
   Insn 453(l0): point = 629
   Insn 452(l0): point = 631
   Insn 451(l0): point = 633
   Insn 450(l0): point = 635
   Insn 447(l0): point = 638
   Insn 794(l0): point = 641
   Insn 442(l0): point = 643
   Insn 437(l0): point = 646
   Insn 436(l0): point = 648
   Insn 435(l0): point = 650
   Insn 434(l0): point = 652
   Insn 433(l0): point = 654
   Insn 432(l0): point = 656
   Insn 427(l0): point = 659
   Insn 426(l0): point = 661
   Insn 425(l0): point = 663
   Insn 424(l0): point = 665
   Insn 423(l0): point = 667
   Insn 422(l0): point = 669
   Insn 421(l0): point = 671
   Insn 420(l0): point = 673
   Insn 419(l0): point = 675
   Insn 418(l0): point = 677
   Insn 417(l0): point = 679
   Insn 416(l0): point = 681
   Insn 415(l0): point = 683
   Insn 414(l0): point = 685
   Insn 413(l0): point = 687
   Insn 412(l0): point = 689
   Insn 411(l0): point = 691
   Insn 410(l0): point = 693
   Insn 409(l0): point = 695
   Insn 408(l0): point = 697
   Insn 407(l0): point = 699
   Insn 406(l0): point = 701
   Insn 405(l0): point = 703
   Insn 404(l0): point = 705
   Insn 403(l0): point = 707
   Insn 402(l0): point = 709
   Insn 401(l0): point = 711
   Insn 400(l0): point = 713
   Insn 399(l0): point = 715
   Insn 398(l0): point = 717
   Insn 397(l0): point = 719
   Insn 396(l0): point = 721
   Insn 395(l0): point = 723
   Insn 394(l0): point = 725
   Insn 393(l0): point = 727
   Insn 392(l0): point = 729
   Insn 391(l0): point = 731
   Insn 390(l0): point = 733
   Insn 389(l0): point = 735
   Insn 388(l0): point = 737
   Insn 387(l0): point = 739
   Insn 386(l0): point = 741
   Insn 385(l0): point = 743
   Insn 384(l0): point = 745
   Insn 383(l0): point = 747
   Insn 382(l0): point = 749
   Insn 381(l0): point = 751
   Insn 380(l0): point = 753
   Insn 379(l0): point = 755
   Insn 378(l0): point = 757
   Insn 377(l0): point = 759
   Insn 376(l0): point = 761
   Insn 375(l0): point = 763
   Insn 374(l0): point = 765
   Insn 373(l0): point = 767
   Insn 372(l0): point = 769
   Insn 371(l0): point = 771
   Insn 370(l0): point = 773
   Insn 369(l0): point = 775
   Insn 368(l0): point = 777
   Insn 367(l0): point = 779
   Insn 366(l0): point = 781
   Insn 365(l0): point = 783
   Insn 324(l0): point = 786
   Insn 323(l0): point = 788
   Insn 322(l0): point = 790
   Insn 321(l0): point = 792
   Insn 318(l0): point = 795
   Insn 792(l0): point = 798
   Insn 313(l0): point = 800
   Insn 296(l0): point = 803
   Insn 295(l0): point = 805
   Insn 294(l0): point = 807
   Insn 293(l0): point = 809
   Insn 292(l0): point = 811
   Insn 291(l0): point = 813
   Insn 250(l0): point = 816
   Insn 249(l0): point = 818
   Insn 248(l0): point = 820
   Insn 247(l0): point = 822
   Insn 244(l0): point = 825
   Insn 789(l0): point = 828
   Insn 239(l0): point = 830
   Insn 222(l0): point = 833
   Insn 221(l0): point = 835
   Insn 220(l0): point = 837
   Insn 219(l0): point = 839
   Insn 218(l0): point = 841
   Insn 217(l0): point = 843
   Insn 216(l0): point = 845
   Insn 215(l0): point = 847
   Insn 214(l0): point = 849
   Insn 213(l0): point = 851
   Insn 212(l0): point = 853
   Insn 211(l0): point = 855
   Insn 210(l0): point = 857
   Insn 209(l0): point = 859
   Insn 208(l0): point = 861
   Insn 207(l0): point = 863
   Insn 206(l0): point = 865
   Insn 205(l0): point = 867
   Insn 233(l0): point = 870
   Insn 232(l0): point = 872
   Insn 231(l0): point = 874
   Insn 230(l0): point = 876
   Insn 229(l0): point = 878
   Insn 228(l0): point = 880
   Insn 227(l0): point = 882
   Insn 226(l0): point = 884
   Insn 225(l0): point = 886
   Insn 224(l0): point = 888
   Insn 288(l0): point = 891
   Insn 287(l0): point = 893
   Insn 283(l0): point = 896
   Insn 282(l0): point = 898
   Insn 281(l0): point = 900
   Insn 280(l0): point = 902
   Insn 279(l0): point = 904
   Insn 278(l0): point = 906
   Insn 277(l0): point = 908
   Insn 276(l0): point = 910
   Insn 275(l0): point = 912
   Insn 274(l0): point = 914
   Insn 273(l0): point = 916
   Insn 272(l0): point = 918
   Insn 271(l0): point = 920
   Insn 270(l0): point = 922
   Insn 269(l0): point = 924
   Insn 268(l0): point = 926
   Insn 267(l0): point = 928
   Insn 263(l0): point = 931
   Insn 262(l0): point = 933
   Insn 261(l0): point = 935
   Insn 260(l0): point = 937
   Insn 259(l0): point = 939
   Insn 258(l0): point = 941
   Insn 257(l0): point = 943
   Insn 256(l0): point = 945
   Insn 255(l0): point = 947
   Insn 254(l0): point = 949
   Insn 253(l0): point = 951
   Insn 252(l0): point = 953
   Insn 9(l0): point = 956
   Insn 10(l0): point = 959
   Insn 307(l0): point = 962
   Insn 306(l0): point = 964
   Insn 305(l0): point = 966
   Insn 304(l0): point = 968
   Insn 303(l0): point = 970
   Insn 302(l0): point = 972
   Insn 301(l0): point = 974
   Insn 300(l0): point = 976
   Insn 299(l0): point = 978
   Insn 298(l0): point = 980
   Insn 362(l0): point = 983
   Insn 361(l0): point = 985
   Insn 357(l0): point = 988
   Insn 356(l0): point = 990
   Insn 355(l0): point = 992
   Insn 354(l0): point = 994
   Insn 353(l0): point = 996
   Insn 352(l0): point = 998
   Insn 351(l0): point = 1000
   Insn 350(l0): point = 1002
   Insn 349(l0): point = 1004
   Insn 348(l0): point = 1006
   Insn 347(l0): point = 1008
   Insn 346(l0): point = 1010
   Insn 345(l0): point = 1012
   Insn 344(l0): point = 1014
   Insn 343(l0): point = 1016
   Insn 342(l0): point = 1018
   Insn 341(l0): point = 1020
   Insn 337(l0): point = 1023
   Insn 336(l0): point = 1025
   Insn 335(l0): point = 1027
   Insn 334(l0): point = 1029
   Insn 333(l0): point = 1031
   Insn 332(l0): point = 1033
   Insn 331(l0): point = 1035
   Insn 330(l0): point = 1037
   Insn 329(l0): point = 1039
   Insn 328(l0): point = 1041
   Insn 327(l0): point = 1043
   Insn 326(l0): point = 1045
   Insn 11(l0): point = 1048
   Insn 12(l0): point = 1051
   Insn 175(l0): point = 1054
   Insn 174(l0): point = 1056
   Insn 173(l0): point = 1058
   Insn 172(l0): point = 1060
   Insn 171(l0): point = 1062
   Insn 170(l0): point = 1064
   Insn 169(l0): point = 1066
   Insn 168(l0): point = 1068
   Insn 167(l0): point = 1070
   Insn 166(l0): point = 1072
   Insn 165(l0): point = 1074
   Insn 161(l0): point = 1076
   Insn 160(l0): point = 1078
   Insn 159(l0): point = 1080
   Insn 157(l0): point = 1082
   Insn 155(l0): point = 1084
   Insn 156(l0): point = 1086
   Insn 154(l0): point = 1088
   Insn 153(l0): point = 1090
   Insn 152(l0): point = 1092
   Insn 151(l0): point = 1094
   Insn 150(l0): point = 1096
   Insn 146(l0): point = 1098
   Insn 145(l0): point = 1100
   Insn 144(l0): point = 1102
   Insn 142(l0): point = 1104
   Insn 140(l0): point = 1106
   Insn 141(l0): point = 1108
   Insn 139(l0): point = 1110
   Insn 138(l0): point = 1112
   Insn 137(l0): point = 1114
   Insn 136(l0): point = 1116
   Insn 135(l0): point = 1118
   Insn 131(l0): point = 1120
   Insn 130(l0): point = 1122
   Insn 129(l0): point = 1124
   Insn 127(l0): point = 1126
   Insn 125(l0): point = 1128
   Insn 126(l0): point = 1130
   Insn 124(l0): point = 1132
   Insn 123(l0): point = 1134
   Insn 122(l0): point = 1136
   Insn 121(l0): point = 1138
   Insn 120(l0): point = 1140
   Insn 116(l0): point = 1142
   Insn 115(l0): point = 1144
   Insn 114(l0): point = 1146
   Insn 112(l0): point = 1148
   Insn 110(l0): point = 1150
   Insn 111(l0): point = 1152
   Insn 109(l0): point = 1154
   Insn 108(l0): point = 1156
   Insn 107(l0): point = 1158
   Insn 106(l0): point = 1160
   Insn 105(l0): point = 1162
   Insn 101(l0): point = 1164
   Insn 100(l0): point = 1166
   Insn 99(l0): point = 1168
   Insn 97(l0): point = 1170
   Insn 95(l0): point = 1172
   Insn 96(l0): point = 1174
   Insn 94(l0): point = 1176
   Insn 93(l0): point = 1178
   Insn 92(l0): point = 1180
   Insn 91(l0): point = 1182
   Insn 90(l0): point = 1184
   Insn 86(l0): point = 1186
   Insn 85(l0): point = 1188
   Insn 84(l0): point = 1190
   Insn 82(l0): point = 1192
   Insn 80(l0): point = 1194
   Insn 81(l0): point = 1196
   Insn 79(l0): point = 1198
   Insn 78(l0): point = 1200
   Insn 77(l0): point = 1202
   Insn 76(l0): point = 1204
   Insn 75(l0): point = 1206
   Insn 71(l0): point = 1208
   Insn 70(l0): point = 1210
   Insn 69(l0): point = 1212
   Insn 67(l0): point = 1214
   Insn 65(l0): point = 1216
   Insn 66(l0): point = 1218
   Insn 64(l0): point = 1220
   Insn 63(l0): point = 1222
   Insn 62(l0): point = 1224
   Insn 61(l0): point = 1226
   Insn 60(l0): point = 1228
   Insn 56(l0): point = 1230
   Insn 55(l0): point = 1232
   Insn 54(l0): point = 1234
   Insn 52(l0): point = 1236
   Insn 50(l0): point = 1238
   Insn 51(l0): point = 1240
   Insn 49(l0): point = 1242
   Insn 48(l0): point = 1244
   Insn 47(l0): point = 1246
   Insn 46(l0): point = 1248
   Insn 45(l0): point = 1250
   Insn 41(l0): point = 1252
   Insn 40(l0): point = 1254
   Insn 39(l0): point = 1256
   Insn 37(l0): point = 1258
   Insn 35(l0): point = 1260
   Insn 36(l0): point = 1262
   Insn 34(l0): point = 1264
   Insn 33(l0): point = 1266
   Insn 32(l0): point = 1268
   Insn 31(l0): point = 1270
   Insn 30(l0): point = 1272
   Insn 26(l0): point = 1274
   Insn 25(l0): point = 1276
   Insn 24(l0): point = 1278
   Insn 22(l0): point = 1280
   Insn 20(l0): point = 1282
   Insn 21(l0): point = 1284
   Insn 19(l0): point = 1286
   Insn 18(l0): point = 1288
   Insn 17(l0): point = 1290
   Insn 16(l0): point = 1292
   Insn 15(l0): point = 1294
   Insn 7(l0): point = 1296
   Insn 6(l0): point = 1298
   Insn 5(l0): point = 1300
   Insn 4(l0): point = 1302
   Insn 3(l0): point = 1304
   Insn 2(l0): point = 1306
 a0(r471): [9..10]
 a1(r470): [16..17]
 a2(r469): [22..27]
 a3(r468): [24..29]
 a4(r467): [34..39]
 a5(r466): [36..41]
 a6(r465): [46..51]
 a7(r228): [48..53]
 a8(r464): [54..55]
 a9(r463): [54..57]
 a10(r227): [58..59]
 a11(r226): [60..61]
 a12(r225): [62..63]
 a13(r462): [64..65]
 a14(r461): [70..75]
 a15(r224): [72..77]
 a16(r460): [82..87]
 a17(r459): [92..93]
 a18(r458): [102..103]
 a19(r457): [114..115]
 a20(r456): [120..125]
 a21(r455): [122..127]
 a22(r454): [132..137]
 a23(r453): [134..139]
 a24(r452): [144..149]
 a25(r223): [146..151]
 a26(r451): [152..153]
 a27(r450): [152..155]
 a28(r222): [156..157]
 a29(r221): [158..159]
 a30(r220): [160..161]
 a31(r449): [162..163]
 a32(r448): [168..173]
 a33(r219): [170..175]
 a34(r447): [180..185]
 a35(r446): [190..191]
 a36(r445): [200..201]
 a37(r444): [211..212]
 a38(r443): [217..222]
 a39(r442): [219..224]
 a40(r441): [229..234]
 a41(r440): [231..236]
 a42(r439): [241..246]
 a43(r438): [251..252]
 a44(r437): [261..262]
 a45(r218): [285..288]
 a46(r236): [294..296] [289..291]
 a47(r208): [302..327]
 a48(r217): [302..303]
 a49(r216): [304..305]
 a50(r215): [304..307]
 a51(r214): [308..309]
 a52(r213): [310..311]
 a53(r212): [310..315]
 a54(r436): [312..313]
 a55(r435): [316..317]
 a56(r211): [316..319]
 a57(r210): [320..321]
 a58(r209): [322..323]
 a59(r434): [324..325]
 a60(r207): [328..331]
 a61(r433): [328..329]
 a62(r197): [337..362]
 a63(r206): [337..338]
 a64(r205): [339..340]
 a65(r204): [339..342]
 a66(r203): [343..344]
 a67(r202): [345..346]
 a68(r201): [345..350]
 a69(r432): [347..348]
 a70(r431): [351..352]
 a71(r200): [351..354]
 a72(r199): [355..356]
 a73(r198): [357..358]
 a74(r430): [359..360]
 a75(r196): [363..366]
 a76(r429): [363..364]
 a77(r195): [369..370]
 a78(r194): [371..374]
 a79(r428): [371..372]
 a80(r193): [375..376]
 a81(r192): [377..378]
 a82(r191): [379..380]
 a83(r189): [379..384]
 a84(r190): [381..382]
 a85(r188): [385..386]
 a86(r187): [389..390]
 a87(r186): [391..394]
 a88(r427): [391..392]
 a89(r185): [395..396]
 a90(r184): [397..398]
 a91(r183): [399..400]
 a92(r181): [399..404]
 a93(r182): [401..402]
 a94(r180): [405..406]
 a95(r426): [409..410]
 a96(r179): [411..412]
 a97(r178): [411..416]
 a98(r425): [413..414]
 a99(r424): [417..418]
 a100(r422): [421..422]
 a101(r177): [423..426]
 a102(r423): [423..424]
 a103(r421): [431..440]
 a104(r420): [433..442]
 a105(r419): [435..444]
 a106(r418): [437..446]
 a107(r417): [439..448]
 a108(r416): [451..452]
 a109(r415): [457..466]
 a110(r414): [459..468]
 a111(r413): [463..470]
 a112(r412): [465..472]
 a113(r410): [475..476]
 a114(r176): [477..480]
 a115(r411): [477..478]
 a116(r409): [485..494]
 a117(r408): [487..496]
 a118(r407): [489..498]
 a119(r406): [491..500]
 a120(r405): [493..502]
 a121(r404): [505..506]
 a122(r403): [511..520]
 a123(r402): [513..522]
 a124(r401): [515..524]
 a125(r400): [517..526]
 a126(r399): [519..528]
 a127(r398): [539..540]
 a128(r397): [545..550]
 a129(r396): [555..556]
 a130(r395): [565..566]
 a131(r392): [621..622]
 a132(r394): [623..624]
 a133(r393): [623..626]
 a134(r175): [632..635]
 a135(r235): [641..643] [636..638]
 a136(r174): [649..652]
 a137(r391): [649..650]
 a138(r173): [653..656]
 a139(r390): [653..654]
 a140(r172): [662..665]
 a141(r389): [662..663]
 a142(r171): [666..669]
 a143(r388): [666..667]
 a144(r170): [672..673]
 a145(r387): [674..675]
 a146(r169): [678..679]
 a147(r386): [680..681]
 a148(r385): [684..685]
 a149(r384): [690..699]
 a150(r383): [692..701]
 a151(r382): [694..703]
 a152(r381): [696..705]
 a153(r380): [698..707]
 a154(r379): [710..711]
 a155(r378): [716..725]
 a156(r377): [718..727]
 a157(r376): [722..729]
 a158(r375): [724..731]
 a159(r374): [734..735]
 a160(r373): [740..749]
 a161(r372): [742..751]
 a162(r371): [744..753]
 a163(r370): [746..755]
 a164(r369): [748..757]
 a165(r368): [760..761]
 a166(r367): [766..775]
 a167(r366): [768..777]
 a168(r365): [770..779]
 a169(r364): [772..781]
 a170(r363): [774..783]
 a171(r362): [984..985]
 a172(r232): [1051..1051] [984..1014]
 a173(r292): [1052..1053] [988..1002]
 a174(r168): [991..992]
 a175(r167): [993..994]
 a176(r166): [993..998]
 a177(r361): [1003..1004]
 a178(r165): [1003..1006]
 a179(r164): [1007..1008]
 a180(r163): [1009..1010]
 a181(r360): [1011..1012]
 a182(r359): [1015..1016]
 a183(r358): [1019..1020]
 a184(r231): [1048..1048] [1019..1041]
 a185(r291): [1049..1050] [1023..1037]
 a186(r162): [1026..1027]
 a187(r161): [1028..1029]
 a188(r160): [1028..1033]
 a189(r357): [1038..1039]
 a190(r356): [1042..1043]
 a191(r159): [789..792]
 a192(r234): [798..800] [793..795]
 a193(r158): [965..966]
 a194(r154): [965..978]
 a195(r355): [967..968]
 a196(r157): [967..970]
 a197(r156): [971..972]
 a198(r155): [973..974]
 a199(r354): [975..976]
 a200(r353): [979..980]
 a201(r152): [806..811]
 a202(r153): [806..807]
 a203(r352): [808..809]
 a204(r351): [812..813]
 a205(r350): [892..893]
 a206(r230): [959..959] [892..922]
 a207(r290): [960..961] [896..910]
 a208(r151): [899..900]
 a209(r150): [901..902]
 a210(r149): [901..906]
 a211(r349): [911..912]
 a212(r148): [911..914]
 a213(r147): [915..916]
 a214(r146): [917..918]
 a215(r348): [919..920]
 a216(r347): [923..924]
 a217(r346): [927..928]
 a218(r229): [956..956] [927..949]
 a219(r289): [957..958] [931..945]
 a220(r145): [934..935]
 a221(r144): [936..937]
 a222(r143): [936..941]
 a223(r345): [946..947]
 a224(r344): [950..951]
 a225(r142): [819..822]
 a226(r233): [828..830] [823..825]
 a227(r141): [873..874]
 a228(r137): [873..886]
 a229(r343): [875..876]
 a230(r140): [875..878]
 a231(r139): [879..880]
 a232(r138): [881..882]
 a233(r342): [883..884]
 a234(r341): [887..888]
 a235(r135): [836..841]
 a236(r136): [836..837]
 a237(r340): [838..839]
 a238(r339): [842..843]
 a239(r338): [846..847]
 a240(r134): [846..849]
 a241(r133): [850..851]
 a242(r132): [852..853]
 a243(r337): [856..857]
 a244(r131): [856..859]
 a245(r130): [860..861]
 a246(r129): [862..863]
 a247(r288): [575..576]
 a248(r335): [584..585]
 a249(r128): [586..589]
 a250(r336): [586..587]
 a251(r333): [592..593]
 a252(r127): [594..597]
 a253(r334): [594..595]
 a254(r332): [600..601]
 a255(r331): [602..603]
 a256(r330): [606..607]
 a257(r329): [608..609]
 a258(r328): [612..613]
 a259(r287): [271..272]
 a260(r327): [1057..1058]
 a261(r326): [1061..1062]
 a262(r325): [1065..1066]
 a263(r324): [1069..1070]
 a264(r323): [1073..1074]
 a265(r125 [0]): [1077..1308]
 a265(r125 [1]): [1076..1308]
 a266(r124): [1079..1080]
 a267(r283): [1081..1082]
 a268(r322): [1083..1086]
 a269(r282): [1083..1088]
 a270(r321): [1091..1092]
 a271(r123): [1093..1094]
 a272(r320): [1095..1096]
 a273(r121 [0]): [1099..1308]
 a273(r121 [1]): [1098..1308]
 a274(r120): [1101..1102]
 a275(r278): [1103..1104]
 a276(r319): [1105..1108]
 a277(r277): [1105..1110]
 a278(r318): [1113..1114]
 a279(r119): [1115..1116]
 a280(r317): [1117..1118]
 a281(r117 [0]): [1121..1308]
 a281(r117 [1]): [1120..1308]
 a282(r116): [1123..1124]
 a283(r273): [1125..1126]
 a284(r316): [1127..1130]
 a285(r272): [1127..1132]
 a286(r315): [1135..1136]
 a287(r115): [1137..1138]
 a288(r314): [1139..1140]
 a289(r113 [0]): [1143..1308]
 a289(r113 [1]): [1142..1308]
 a290(r112): [1145..1146]
 a291(r268): [1147..1148]
 a292(r313): [1149..1152]
 a293(r267): [1149..1154]
 a294(r312): [1157..1158]
 a295(r111): [1159..1160]
 a296(r311): [1161..1162]
 a297(r109 [0]): [1165..1308]
 a297(r109 [1]): [1164..1308]
 a298(r108): [1167..1168]
 a299(r263): [1169..1170]
 a300(r310): [1171..1174]
 a301(r262): [1171..1176]
 a302(r309): [1179..1180]
 a303(r107): [1181..1182]
 a304(r308): [1183..1184]
 a305(r105 [0]): [1187..1308]
 a305(r105 [1]): [1186..1308]
 a306(r104): [1189..1190]
 a307(r258): [1191..1192]
 a308(r307): [1193..1196]
 a309(r257): [1193..1198]
 a310(r306): [1201..1202]
 a311(r103): [1203..1204]
 a312(r305): [1205..1206]
 a313(r101 [0]): [1209..1308]
 a313(r101 [1]): [1208..1308]
 a314(r100): [1211..1212]
 a315(r253): [1213..1214]
 a316(r304): [1215..1218]
 a317(r252): [1215..1220]
 a318(r303): [1223..1224]
 a319(r99): [1225..1226]
 a320(r302): [1227..1228]
 a321(r97 [0]): [1231..1308]
 a321(r97 [1]): [1230..1308]
 a322(r96): [1233..1234]
 a323(r248): [1235..1236]
 a324(r301): [1237..1240]
 a325(r247): [1237..1242]
 a326(r300): [1245..1246]
 a327(r95): [1247..1248]
 a328(r299): [1249..1250]
 a329(r93 [0]): [1253..1308]
 a329(r93 [1]): [1252..1308]
 a330(r92): [1255..1256]
 a331(r243): [1257..1258]
 a332(r298): [1259..1262]
 a333(r242): [1259..1264]
 a334(r297): [1267..1268]
 a335(r91): [1269..1270]
 a336(r296): [1271..1272]
 a337(r89 [0]): [1275..1308]
 a337(r89 [1]): [1274..1308]
 a338(r88): [1277..1278]
 a339(r238): [1279..1280]
 a340(r295): [1281..1284]
 a341(r237): [1281..1286]
 a342(r294): [1289..1290]
 a343(r87): [1291..1292]
 a344(r293): [1293..1294]
Compressing live ranges: from 1309 to 494 - 37%
Ranges after the compression:
 a0(r471): [0..1]
 a1(r470): [2..3]
 a2(r469): [4..5]
 a3(r468): [4..5]
 a4(r467): [6..7]
 a5(r466): [6..7]
 a6(r465): [8..9]
 a7(r228): [8..9]
 a8(r464): [10..11]
 a9(r463): [10..11]
 a10(r227): [12..13]
 a11(r226): [14..15]
 a12(r225): [16..17]
 a13(r462): [18..19]
 a14(r461): [20..21]
 a15(r224): [20..21]
 a16(r460): [22..23]
 a17(r459): [24..25]
 a18(r458): [26..27]
 a19(r457): [28..29]
 a20(r456): [30..31]
 a21(r455): [30..31]
 a22(r454): [32..33]
 a23(r453): [32..33]
 a24(r452): [34..35]
 a25(r223): [34..35]
 a26(r451): [36..37]
 a27(r450): [36..37]
 a28(r222): [38..39]
 a29(r221): [40..41]
 a30(r220): [42..43]
 a31(r449): [44..45]
 a32(r448): [46..47]
 a33(r219): [46..47]
 a34(r447): [48..49]
 a35(r446): [50..51]
 a36(r445): [52..53]
 a37(r444): [54..55]
 a38(r443): [56..57]
 a39(r442): [56..57]
 a40(r441): [58..59]
 a41(r440): [58..59]
 a42(r439): [60..61]
 a43(r438): [62..63]
 a44(r437): [64..65]
 a45(r218): [68..69]
 a46(r236): [70..73]
 a47(r208): [74..91]
 a48(r217): [74..75]
 a49(r216): [76..77]
 a50(r215): [76..77]
 a51(r214): [78..79]
 a52(r213): [80..81]
 a53(r212): [80..83]
 a54(r436): [82..83]
 a55(r435): [84..85]
 a56(r211): [84..85]
 a57(r210): [86..87]
 a58(r209): [88..89]
 a59(r434): [90..91]
 a60(r207): [92..93]
 a61(r433): [92..93]
 a62(r197): [94..111]
 a63(r206): [94..95]
 a64(r205): [96..97]
 a65(r204): [96..97]
 a66(r203): [98..99]
 a67(r202): [100..101]
 a68(r201): [100..103]
 a69(r432): [102..103]
 a70(r431): [104..105]
 a71(r200): [104..105]
 a72(r199): [106..107]
 a73(r198): [108..109]
 a74(r430): [110..111]
 a75(r196): [112..113]
 a76(r429): [112..113]
 a77(r195): [114..115]
 a78(r194): [116..117]
 a79(r428): [116..117]
 a80(r193): [118..119]
 a81(r192): [120..121]
 a82(r191): [122..123]
 a83(r189): [122..125]
 a84(r190): [124..125]
 a85(r188): [126..127]
 a86(r187): [128..129]
 a87(r186): [130..131]
 a88(r427): [130..131]
 a89(r185): [132..133]
 a90(r184): [134..135]
 a91(r183): [136..137]
 a92(r181): [136..139]
 a93(r182): [138..139]
 a94(r180): [140..141]
 a95(r426): [142..143]
 a96(r179): [144..145]
 a97(r178): [144..147]
 a98(r425): [146..147]
 a99(r424): [148..149]
 a100(r422): [150..151]
 a101(r177): [152..153]
 a102(r423): [152..153]
 a103(r421): [154..155]
 a104(r420): [154..155]
 a105(r419): [154..155]
 a106(r418): [154..155]
 a107(r417): [154..155]
 a108(r416): [156..157]
 a109(r415): [158..159]
 a110(r414): [158..159]
 a111(r413): [158..159]
 a112(r412): [158..159]
 a113(r410): [160..161]
 a114(r176): [162..163]
 a115(r411): [162..163]
 a116(r409): [164..165]
 a117(r408): [164..165]
 a118(r407): [164..165]
 a119(r406): [164..165]
 a120(r405): [164..165]
 a121(r404): [166..167]
 a122(r403): [168..169]
 a123(r402): [168..169]
 a124(r401): [168..169]
 a125(r400): [168..169]
 a126(r399): [168..169]
 a127(r398): [170..171]
 a128(r397): [172..173]
 a129(r396): [174..175]
 a130(r395): [176..177]
 a131(r392): [198..199]
 a132(r394): [200..201]
 a133(r393): [200..201]
 a134(r175): [202..203]
 a135(r235): [204..207]
 a136(r174): [208..209]
 a137(r391): [208..209]
 a138(r173): [210..211]
 a139(r390): [210..211]
 a140(r172): [212..213]
 a141(r389): [212..213]
 a142(r171): [214..215]
 a143(r388): [214..215]
 a144(r170): [216..217]
 a145(r387): [218..219]
 a146(r169): [220..221]
 a147(r386): [222..223]
 a148(r385): [224..225]
 a149(r384): [226..227]
 a150(r383): [226..227]
 a151(r382): [226..227]
 a152(r381): [226..227]
 a153(r380): [226..227]
 a154(r379): [228..229]
 a155(r378): [230..231]
 a156(r377): [230..231]
 a157(r376): [230..231]
 a158(r375): [230..231]
 a159(r374): [232..233]
 a160(r373): [234..235]
 a161(r372): [234..235]
 a162(r371): [234..235]
 a163(r370): [234..235]
 a164(r369): [234..235]
 a165(r368): [236..237]
 a166(r367): [238..239]
 a167(r366): [238..239]
 a168(r365): [238..239]
 a169(r364): [238..239]
 a170(r363): [238..239]
 a171(r362): [332..333]
 a172(r232): [361..361] [332..345]
 a173(r292): [362..363] [334..337]
 a174(r168): [334..335]
 a175(r167): [336..337]
 a176(r166): [336..337]
 a177(r361): [338..339]
 a178(r165): [338..339]
 a179(r164): [340..341]
 a180(r163): [342..343]
 a181(r360): [344..345]
 a182(r359): [346..347]
 a183(r358): [348..349]
 a184(r231): [358..358] [348..355]
 a185(r291): [359..360] [350..353]
 a186(r162): [350..351]
 a187(r161): [352..353]
 a188(r160): [352..353]
 a189(r357): [354..355]
 a190(r356): [356..357]
 a191(r159): [240..241]
 a192(r234): [242..245]
 a193(r158): [320..321]
 a194(r154): [320..329]
 a195(r355): [322..323]
 a196(r157): [322..323]
 a197(r156): [324..325]
 a198(r155): [326..327]
 a199(r354): [328..329]
 a200(r353): [330..331]
 a201(r152): [246..249]
 a202(r153): [246..247]
 a203(r352): [248..249]
 a204(r351): [250..251]
 a205(r350): [288..289]
 a206(r230): [317..317] [288..301]
 a207(r290): [318..319] [290..293]
 a208(r151): [290..291]
 a209(r150): [292..293]
 a210(r149): [292..293]
 a211(r349): [294..295]
 a212(r148): [294..295]
 a213(r147): [296..297]
 a214(r146): [298..299]
 a215(r348): [300..301]
 a216(r347): [302..303]
 a217(r346): [304..305]
 a218(r229): [314..314] [304..311]
 a219(r289): [315..316] [306..309]
 a220(r145): [306..307]
 a221(r144): [308..309]
 a222(r143): [308..309]
 a223(r345): [310..311]
 a224(r344): [312..313]
 a225(r142): [252..253]
 a226(r233): [254..257]
 a227(r141): [276..277]
 a228(r137): [276..285]
 a229(r343): [278..279]
 a230(r140): [278..279]
 a231(r139): [280..281]
 a232(r138): [282..283]
 a233(r342): [284..285]
 a234(r341): [286..287]
 a235(r135): [258..261]
 a236(r136): [258..259]
 a237(r340): [260..261]
 a238(r339): [262..263]
 a239(r338): [264..265]
 a240(r134): [264..265]
 a241(r133): [266..267]
 a242(r132): [268..269]
 a243(r337): [270..271]
 a244(r131): [270..271]
 a245(r130): [272..273]
 a246(r129): [274..275]
 a247(r288): [178..179]
 a248(r335): [180..181]
 a249(r128): [182..183]
 a250(r336): [182..183]
 a251(r333): [184..185]
 a252(r127): [186..187]
 a253(r334): [186..187]
 a254(r332): [188..189]
 a255(r331): [190..191]
 a256(r330): [192..193]
 a257(r329): [194..195]
 a258(r328): [196..197]
 a259(r287): [66..67]
 a260(r327): [364..365]
 a261(r326): [366..367]
 a262(r325): [368..369]
 a263(r324): [370..371]
 a264(r323): [372..373]
 a265(r125 [0]): [374..493]
 a265(r125 [1]): [374..493]
 a266(r124): [374..375]
 a267(r283): [376..377]
 a268(r322): [378..379]
 a269(r282): [378..379]
 a270(r321): [380..381]
 a271(r123): [382..383]
 a272(r320): [384..385]
 a273(r121 [0]): [386..493]
 a273(r121 [1]): [386..493]
 a274(r120): [386..387]
 a275(r278): [388..389]
 a276(r319): [390..391]
 a277(r277): [390..391]
 a278(r318): [392..393]
 a279(r119): [394..395]
 a280(r317): [396..397]
 a281(r117 [0]): [398..493]
 a281(r117 [1]): [398..493]
 a282(r116): [398..399]
 a283(r273): [400..401]
 a284(r316): [402..403]
 a285(r272): [402..403]
 a286(r315): [404..405]
 a287(r115): [406..407]
 a288(r314): [408..409]
 a289(r113 [0]): [410..493]
 a289(r113 [1]): [410..493]
 a290(r112): [410..411]
 a291(r268): [412..413]
 a292(r313): [414..415]
 a293(r267): [414..415]
 a294(r312): [416..417]
 a295(r111): [418..419]
 a296(r311): [420..421]
 a297(r109 [0]): [422..493]
 a297(r109 [1]): [422..493]
 a298(r108): [422..423]
 a299(r263): [424..425]
 a300(r310): [426..427]
 a301(r262): [426..427]
 a302(r309): [428..429]
 a303(r107): [430..431]
 a304(r308): [432..433]
 a305(r105 [0]): [434..493]
 a305(r105 [1]): [434..493]
 a306(r104): [434..435]
 a307(r258): [436..437]
 a308(r307): [438..439]
 a309(r257): [438..439]
 a310(r306): [440..441]
 a311(r103): [442..443]
 a312(r305): [444..445]
 a313(r101 [0]): [446..493]
 a313(r101 [1]): [446..493]
 a314(r100): [446..447]
 a315(r253): [448..449]
 a316(r304): [450..451]
 a317(r252): [450..451]
 a318(r303): [452..453]
 a319(r99): [454..455]
 a320(r302): [456..457]
 a321(r97 [0]): [458..493]
 a321(r97 [1]): [458..493]
 a322(r96): [458..459]
 a323(r248): [460..461]
 a324(r301): [462..463]
 a325(r247): [462..463]
 a326(r300): [464..465]
 a327(r95): [466..467]
 a328(r299): [468..469]
 a329(r93 [0]): [470..493]
 a329(r93 [1]): [470..493]
 a330(r92): [470..471]
 a331(r243): [472..473]
 a332(r298): [474..475]
 a333(r242): [474..475]
 a334(r297): [476..477]
 a335(r91): [478..479]
 a336(r296): [480..481]
 a337(r89 [0]): [482..493]
 a337(r89 [1]): [482..493]
 a338(r88): [482..483]
 a339(r238): [484..485]
 a340(r295): [486..487]
 a341(r237): [486..487]
 a342(r294): [488..489]
 a343(r87): [490..491]
 a344(r293): [492..493]
  pref0:a108(r416)<-hr21@1
  pref1:a121(r404)<-hr21@1
  pref2:a148(r385)<-hr21@1
  pref3:a154(r379)<-hr21@1
  pref4:a159(r374)<-hr21@1
  pref5:a165(r368)<-hr21@1
  regions=1, blocks=49, points=494
    allocnos=345 (big 10), copies=0, conflicts=0, ranges=363
Disposition:
  343:r87  l0     0  338:r88  l0     0  337:r89  l0    39  335:r91  l0     0
  330:r92  l0     0  329:r93  l0    41  327:r95  l0     0  322:r96  l0     0
  321:r97  l0    43  319:r99  l0     0  314:r100 l0     0  313:r101 l0   mem
  311:r103 l0     0  306:r104 l0     0  305:r105 l0   mem  303:r107 l0     0
  298:r108 l0     0  297:r109 l0   mem  295:r111 l0     0  290:r112 l0     0
  289:r113 l0   mem  287:r115 l0     0  282:r116 l0     0  281:r117 l0   mem
  279:r119 l0     0  274:r120 l0     0  273:r121 l0   mem  271:r123 l0     0
  266:r124 l0     0  265:r125 l0   mem  252:r127 l0    22  249:r128 l0    22
  246:r129 l0    21  245:r130 l0    21  244:r131 l0    21  242:r132 l0    21
  241:r133 l0    21  240:r134 l0    21  235:r135 l0    22  236:r136 l0    21
  228:r137 l0    21  232:r138 l0     0  231:r139 l0     0  230:r140 l0     1
  227:r141 l0    22  225:r142 l0     0  222:r143 l0     1  221:r144 l0     0
  220:r145 l0     0  214:r146 l0     0  213:r147 l0     0  212:r148 l0     1
  210:r149 l0     1  209:r150 l0     0  208:r151 l0     0  201:r152 l0    22
  202:r153 l0    21  194:r154 l0    21  198:r155 l0     0  197:r156 l0     0
  196:r157 l0     1  193:r158 l0    22  191:r159 l0     0  188:r160 l0     1
  187:r161 l0     0  186:r162 l0     0  180:r163 l0     0  179:r164 l0     0
  178:r165 l0     1  176:r166 l0     1  175:r167 l0     0  174:r168 l0     0
  146:r169 l0    21  144:r170 l0    21  142:r171 l0    22  140:r172 l0    21
  138:r173 l0    22  136:r174 l0    21  134:r175 l0     0  114:r176 l0    22
  101:r177 l0    22   97:r178 l0    21   96:r179 l0    22   94:r180 l0    21
   92:r181 l0    21   93:r182 l0    22   91:r183 l0    22   90:r184 l0    21
   89:r185 l0    21   87:r186 l0    21   86:r187 l0    21   85:r188 l0    21
   83:r189 l0    21   84:r190 l0    22   82:r191 l0    22   81:r192 l0    21
   80:r193 l0    21   78:r194 l0    21   77:r195 l0    21   75:r196 l0    22
   62:r197 l0    22   73:r198 l0     0   72:r199 l0     0   71:r200 l0     1
   68:r201 l0    21   67:r202 l0    23   66:r203 l0    21   65:r204 l0    23
   64:r205 l0    21   63:r206 l0    21   60:r207 l0    22   47:r208 l0    22
   58:r209 l0     0   57:r210 l0     0   56:r211 l0     1   53:r212 l0    21
   52:r213 l0    23   51:r214 l0    21   50:r215 l0    23   49:r216 l0    21
   48:r217 l0    21   45:r218 l0     0   33:r219 l0     2   30:r220 l0     0
   29:r221 l0     0   28:r222 l0     0   25:r223 l0     2   15:r224 l0     2
   12:r225 l0     0   11:r226 l0     0   10:r227 l0     0    7:r228 l0     2
  218:r229 l0    21  206:r230 l0    21  184:r231 l0    21  172:r232 l0    21
  226:r233 l0     0  192:r234 l0     0  135:r235 l0     0   46:r236 l0     0
  341:r237 l0     0  339:r238 l0     0  333:r242 l0     0  331:r243 l0     0
  325:r247 l0     0  323:r248 l0     0  317:r252 l0     0  315:r253 l0     0
  309:r257 l0     0  307:r258 l0     0  301:r262 l0     0  299:r263 l0     0
  293:r267 l0     0  291:r268 l0     0  285:r272 l0     0  283:r273 l0     0
  277:r277 l0     0  275:r278 l0     0  269:r282 l0     0  267:r283 l0     0
  259:r287 l0     0  247:r288 l0     0  219:r289 l0    22  207:r290 l0    22
  185:r291 l0    22  173:r292 l0    22  344:r293 l0     0  342:r294 l0     0
  340:r295 l0     1  336:r296 l0     0  334:r297 l0     0  332:r298 l0     1
  328:r299 l0     0  326:r300 l0     0  324:r301 l0     1  320:r302 l0     0
  318:r303 l0     0  316:r304 l0     1  312:r305 l0     0  310:r306 l0     0
  308:r307 l0     1  304:r308 l0     0  302:r309 l0     0  300:r310 l0     1
  296:r311 l0     0  294:r312 l0     0  292:r313 l0     1  288:r314 l0     0
  286:r315 l0     0  284:r316 l0     1  280:r317 l0     0  278:r318 l0     0
  276:r319 l0     1  272:r320 l0     0  270:r321 l0     0  268:r322 l0     1
  264:r323 l0     0  263:r324 l0    21  262:r325 l0    21  261:r326 l0    21
  260:r327 l0    21  258:r328 l0    21  257:r329 l0     0  256:r330 l0    21
  255:r331 l0     0  254:r332 l0    21  251:r333 l0    21  253:r334 l0    21
  248:r335 l0    21  250:r336 l0    21  243:r337 l0     0  239:r338 l0     0
  238:r339 l0     0  237:r340 l0     0  234:r341 l0     0  233:r342 l0     0
  229:r343 l0     0  224:r344 l0     0  223:r345 l0     0  217:r346 l0     0
  216:r347 l0     0  215:r348 l0     0  211:r349 l0     0  205:r350 l0     0
  204:r351 l0     0  203:r352 l0     0  200:r353 l0     0  199:r354 l0     0
  195:r355 l0     0  190:r356 l0     0  189:r357 l0     0  183:r358 l0     0
  182:r359 l0     0  181:r360 l0     0  177:r361 l0     0  171:r362 l0     0
  170:r363 l0     5  169:r364 l0     2  168:r365 l0     1  167:r366 l0     4
  166:r367 l0     0  165:r368 l0     0  164:r369 l0     5  163:r370 l0     2
  162:r371 l0     1  161:r372 l0     4  160:r373 l0     0  159:r374 l0     0
  158:r375 l0     2  157:r376 l0     1  156:r377 l0     4  155:r378 l0     0
  154:r379 l0     0  153:r380 l0     5  152:r381 l0     2  151:r382 l0     1
  150:r383 l0     4  149:r384 l0     0  148:r385 l0     0  147:r386 l0    21
  145:r387 l0    21  143:r388 l0    21  141:r389 l0    22  139:r390 l0    21
  137:r391 l0    22  131:r392 l0    21  133:r393 l0    22  132:r394 l0    21
  130:r395 l0     0  129:r396 l0     0  128:r397 l0     0  127:r398 l0     0
  126:r399 l0     5  125:r400 l0     2  124:r401 l0     1  123:r402 l0     4
  122:r403 l0     0  121:r404 l0     0  120:r405 l0     5  119:r406 l0     2
  118:r407 l0     1  117:r408 l0     4  116:r409 l0     0  113:r410 l0    21
  115:r411 l0    21  112:r412 l0     2  111:r413 l0     1  110:r414 l0     4
  109:r415 l0     0  108:r416 l0     0  107:r417 l0     5  106:r418 l0     2
  105:r419 l0     1  104:r420 l0     4  103:r421 l0     0  100:r422 l0    21
  102:r423 l0    21   99:r424 l0    21   98:r425 l0    22   95:r426 l0    21
   88:r427 l0    22   79:r428 l0    22   76:r429 l0    21   74:r430 l0     0
   70:r431 l0     0   69:r432 l0     0   61:r433 l0    21   59:r434 l0     0
   55:r435 l0     0   54:r436 l0     0   44:r437 l0     0   43:r438 l0     0
   42:r439 l0     0   41:r440 l0     2   40:r441 l0     0   39:r442 l0     2
   38:r443 l0     0   37:r444 l0     0   36:r445 l0     0   35:r446 l0     0
   34:r447 l0     0   32:r448 l0     0   31:r449 l0     0   27:r450 l0     1
   26:r451 l0     0   24:r452 l0     0   23:r453 l0     2   22:r454 l0     0
   21:r455 l0     2   20:r456 l0     0   19:r457 l0     0   18:r458 l0     0
   17:r459 l0     0   16:r460 l0     0   14:r461 l0     0   13:r462 l0     0
    9:r463 l0     1    8:r464 l0     0    6:r465 l0     0    5:r466 l0     2
    4:r467 l0     0    3:r468 l0     2    2:r469 l0     0    1:r470 l0     0
    0:r471 l0     0
+++Costs: overall -50, reg -64, mem 14, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


inters

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 21 [xmm0] 37 [r8] 38 [r9]
;;  ref usage 	r0={31d} r1={53d,23u} r2={39d,9u} r4={53d,23u} r5={61d,31u} r6={1d,48u} r7={1d,78u} r8={30d} r9={30d} r10={30d} r11={30d} r12={30d} r13={30d} r14={30d} r15={30d} r16={1d,107u,2e} r17={128d,40u} r18={30d} r19={30d} r20={1d,220u} r21={31d,8u} r22={31d} r23={31d} r24={31d} r25={31d} r26={31d} r27={31d} r28={31d} r29={30d} r30={30d} r31={30d} r32={30d} r33={30d} r34={30d} r35={30d} r36={30d} r37={39d,9u} r38={31d,1u} r39={30d} r40={30d} r45={30d} r46={30d} r47={30d} r48={30d} r49={30d} r50={30d} r51={30d} r52={30d} r53={30d} r54={30d} r55={30d} r56={30d} r57={30d} r58={30d} r59={30d} r60={30d} r61={30d} r62={30d} r63={30d} r64={30d} r65={30d} r66={30d} r67={30d} r68={30d} r69={30d} r70={30d} r71={30d} r72={30d} r73={30d} r74={30d} r75={30d} r76={30d} r77={30d} r78={30d} r79={30d} r80={30d} r87={1d,1u} r88={1d,1u} r89={2d,2u} r91={1d,1u} r92={1d,1u} r93={2d,2u} r95={1d,1u} r96={1d,1u} r97={2d,2u} r99={1d,1u} r100={1d,1u} r101={2d,2u} r103={1d,1u} r104={1d,1u} r105={2d,2u} r107={1d,1u} r108={1d,1u} r109={2d,2u} r111={1d,1u} r112={1d,1u} r113={2d,2u} r115={1d,1u} r116={1d,1u} r117={2d,2u} r119={1d,1u} r120={1d,1u} r121={2d,2u} r123={1d,1u} r124={1d,1u} r125={2d,2u} r127={1d,1u,1e} r128={1d,1u,1e} r129={1d,1u} r130={1d,1u} r131={1d,1u} r132={1d,1u} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={2d,2u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={2d,2u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d,1u} r165={1d,1u} r166={1d,1u} r167={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,1u} r171={1d,1u,1e} r172={1d,1u} r173={1d,1u,1e} r174={1d,1u} r175={2d,2u} r176={1d,1u,1e} r177={1d,1u,1e} r178={1d,1u} r179={1d,1u} r180={1d,1u} r181={1d,1u} r182={1d,1u} r183={1d,1u} r184={1d,1u} r185={1d,1u} r186={1d,1u,1e} r187={1d,1u} r188={1d,1u} r189={1d,1u} r190={1d,1u} r191={1d,1u} r192={1d,1u} r193={1d,1u} r194={1d,1u,1e} r195={1d,1u} r196={1d,1u,1e} r197={1d,1u} r198={1d,1u} r199={1d,1u} r200={1d,1u} r201={1d,1u} r202={1d,1u} r203={1d,1u} r204={1d,1u} r205={1d,1u} r206={1d,1u} r207={1d,1u,1e} r208={1d,1u} r209={1d,1u} r210={1d,1u} r211={1d,1u} r212={1d,1u} r213={1d,1u} r214={1d,1u} r215={1d,1u} r216={1d,1u} r217={1d,1u} r218={2d,2u} r219={1d,1u} r220={1d,1u} r221={1d,1u} r222={1d,1u} r223={1d,1u} r224={1d,1u} r225={1d,1u} r226={1d,1u} r227={1d,1u} r228={1d,1u} r229={2d,4u} r230={2d,4u} r231={2d,4u} r232={2d,4u} r233={2d,1u} r234={2d,1u} r235={2d,1u} r236={2d,1u} r237={1d,2u} r238={1d,1u} r242={1d,2u} r243={1d,1u} r247={1d,2u} r248={1d,1u} r252={1d,2u} r253={1d,1u} r257={1d,2u} r258={1d,1u} r262={1d,2u} r263={1d,1u} r267={1d,2u} r268={1d,1u} r272={1d,2u} r273={1d,1u} r277={1d,2u} r278={1d,1u} r282={1d,2u} r283={1d,1u} r287={1d,1u} r288={1d,1u} r289={1d,2u} r290={1d,2u} r291={1d,2u} r292={1d,2u} r293={1d,1u} r294={1d,1u} r295={1d,1u} r296={1d,1u} r297={1d,1u} r298={1d,1u} r299={1d,1u} r300={1d,1u} r301={1d,1u} r302={1d,1u} r303={1d,1u} r304={1d,1u} r305={1d,1u} r306={1d,1u} r307={1d,1u} r308={1d,1u} r309={1d,1u} r310={1d,1u} r311={1d,1u} r312={1d,1u} r313={1d,1u} r314={1d,1u} r315={1d,1u} r316={1d,1u} r317={1d,1u} r318={1d,1u} r319={1d,1u} r320={1d,1u} r321={1d,1u} r322={1d,1u} r323={1d,1u} r324={1d,1u} r325={1d,1u} r326={1d,1u} r327={1d,1u} r328={1d,1u} r329={1d,1u} r330={1d,1u} r331={1d,1u} r332={1d,1u} r333={1d,1u} r334={1d,1u} r335={1d,1u} r336={1d,1u} r337={1d,1u} r338={1d,1u} r339={1d,1u} r340={1d,1u} r341={1d,1u} r342={1d,1u} r343={1d,1u} r344={1d,1u} r345={1d,1u} r346={1d,1u} r347={1d,1u} r348={1d,1u} r349={1d,1u} r350={1d,1u} r351={1d,1u} r352={1d,1u} r353={1d,1u} r354={1d,1u} r355={1d,1u} r356={1d,1u} r357={1d,1u} r358={1d,1u} r359={1d,1u} r360={1d,1u} r361={1d,1u} r362={1d,1u} r363={1d,1u} r364={1d,1u} r365={1d,1u} r366={1d,1u} r367={1d,1u} r368={1d,1u} r369={1d,1u} r370={1d,1u} r371={1d,1u} r372={1d,1u} r373={1d,1u} r374={1d,1u} r375={1d,1u} r376={1d,1u} r377={1d,1u} r378={1d,1u} r379={1d,1u} r380={1d,1u} r381={1d,1u} r382={1d,1u} r383={1d,1u} r384={1d,1u} r385={1d,1u} r386={1d,1u} r387={1d,1u} r388={1d,1u} r389={1d,1u} r390={1d,1u} r391={1d,1u} r392={1d,1u} r393={1d,1u} r394={1d,1u} r395={1d,1u} r396={1d,1u} r397={1d,1u} r398={1d,1u} r399={1d,1u} r400={1d,1u} r401={1d,1u} r402={1d,1u} r403={1d,1u} r404={1d,1u} r405={1d,1u} r406={1d,1u} r407={1d,1u} r408={1d,1u} r409={1d,1u} r410={1d,1u} r411={1d,1u} r412={1d,1u} r413={1d,1u} r414={1d,1u} r415={1d,1u} r416={1d,1u} r417={1d,1u} r418={1d,1u} r419={1d,1u} r420={1d,1u} r421={1d,1u} r422={1d,1u} r423={1d,1u} r424={1d,1u} r425={1d,1u} r426={1d,1u} r427={1d,1u} r428={1d,1u} r429={1d,1u} r430={1d,1u} r431={1d,1u} r432={1d,1u} r433={1d,1u} r434={1d,1u} r435={1d,1u} r436={1d,1u} r437={1d,1u} r438={1d,1u} r439={1d,1u} r440={1d,1u} r441={1d,1u} r442={1d,1u} r443={1d,1u} r444={1d,1u} r445={1d,1u} r446={1d,1u} r447={1d,1u} r448={1d,1u} r449={1d,1u} r450={1d,1u,1e} r451={1d,1u} r452={1d,1u} r453={1d,1u} r454={1d,1u} r455={1d,1u} r456={1d,1u} r457={1d,1u} r458={1d,1u} r459={1d,1u} r460={1d,1u} r461={1d,1u} r462={1d,1u} r463={1d,1u,1e} r464={1d,1u} r465={1d,1u} r466={1d,1u} r467={1d,1u} r468={1d,1u} r469={1d,1u} r470={1d,1u} r471={1d,1u} 
;;    total ref usage 3730{2734d,982u,14e} in 631{601 regular + 30 call} insns.
(note 1 0 13 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9] 89 93 97 101 105 109 113 117 121 125
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9] 89 93 97 101 105 109 113 117 121 125
;; lr  def 	 17 [flags] 87 88 91 92 95 96 99 100 103 104 107 108 111 112 115 116 119 120 123 124 237 238 242 243 247 248 252 253 257 258 262 263 267 268 272 273 277 278 282 283 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327
(note 13 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 13 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -664 [0xfffffffffffffd68])) [16 ok+0 S8 A64])
        (reg:DI 5 di [ ok ])) "../src/spline.f":691 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ ok ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -672 [0xfffffffffffffd60])) [4 ss1+0 S8 A64])
        (reg:DI 4 si [ ss1 ])) "../src/spline.f":691 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ ss1 ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -680 [0xfffffffffffffd58])) [4 ss2+0 S8 A64])
        (reg:DI 1 dx [ ss2 ])) "../src/spline.f":691 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ ss2 ])
        (nil)))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -688 [0xfffffffffffffd50])) [5 x1+0 S8 A64])
        (reg:DI 2 cx [ x1 ])) "../src/spline.f":691 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [ x1 ])
        (nil)))
(insn 6 5 7 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -696 [0xfffffffffffffd48])) [5 xs1+0 S8 A64])
        (reg:DI 37 r8 [ xs1 ])) "../src/spline.f":691 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 37 r8 [ xs1 ])
        (nil)))
(insn 7 6 8 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -704 [0xfffffffffffffd40])) [5 y1+0 S8 A64])
        (reg:DI 38 r9 [ y1 ])) "../src/spline.f":691 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 38 r9 [ y1 ])
        (nil)))
(note 8 7 15 2 NOTE_INSN_FUNCTION_BEG)
(insn 15 8 16 2 (set (reg/f:DI 293)
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 16 [0x10])) [6 n1+0 S8 A64])) "../src/spline.f":692 81 {*movdi_internal}
     (nil))
(insn 16 15 17 2 (set (reg:SI 87 [ _1 ])
        (mem:SI (reg/f:DI 293) [1 *n1_171(D)+0 S4 A32])) "../src/spline.f":692 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 293)
        (nil)))
(insn 17 16 18 2 (set (reg:DI 294)
        (sign_extend:DI (reg:SI 87 [ _1 ]))) "../src/spline.f":692 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 87 [ _1 ])
        (nil)))
(insn 18 17 19 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [2 ubound.105+0 S8 A64])
        (reg:DI 294)) "../src/spline.f":692 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 294)
        (nil)))
(insn 19 18 21 2 (set (reg:DI 237 [ size.106_173 ])
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [2 ubound.105+0 S8 A64])) "../src/spline.f":692 81 {*movdi_internal}
     (nil))
(insn 21 19 20 2 (set (reg:DI 295)
        (const_int 0 [0])) "../src/spline.f":692 81 {*movdi_internal}
     (nil))
(insn 20 21 22 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 237 [ size.106_173 ])
            (const_int 0 [0]))) "../src/spline.f":692 4 {*cmpdi_ccno_1}
     (nil))
(insn 22 20 24 2 (set (reg:DI 238 [ size.106_174 ])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 237 [ size.106_173 ])
            (reg:DI 295))) "../src/spline.f":692 967 {*movdicc_noc}
     (expr_list:REG_DEAD (reg:DI 295)
        (expr_list:REG_DEAD (reg:DI 237 [ size.106_173 ])
            (expr_list:REG_DEAD (reg:CCGOC 17 flags)
                (nil)))))
(insn 24 22 25 2 (set (reg:DI 88 [ size.258_2 ])
        (reg:DI 238 [ size.106_174 ])) "../src/spline.f":692 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 238 [ size.106_174 ])
        (nil)))
(insn 25 24 26 2 (set (subreg:DI (reg:TI 89 [ _3 ]) 0)
        (reg:DI 88 [ size.258_2 ])) "../src/spline.f":692 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88 [ size.258_2 ])
        (nil)))
(insn 26 25 30 2 (set (subreg:DI (reg:TI 89 [ _3 ]) 8)
        (const_int 0 [0])) "../src/spline.f":692 81 {*movdi_internal}
     (expr_list:REG_UNUSED (reg:TI 89 [ _3 ])
        (nil)))
(insn 30 26 31 2 (set (reg/f:DI 296)
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 64 [0x40])) [6 n2+0 S8 A64])) "../src/spline.f":693 81 {*movdi_internal}
     (nil))
(insn 31 30 32 2 (set (reg:SI 91 [ _5 ])
        (mem:SI (reg/f:DI 296) [1 *n2_178(D)+0 S4 A32])) "../src/spline.f":693 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 296)
        (nil)))
(insn 32 31 33 2 (set (reg:DI 297)
        (sign_extend:DI (reg:SI 91 [ _5 ]))) "../src/spline.f":693 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 91 [ _5 ])
        (nil)))
(insn 33 32 34 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [2 ubound.107+0 S8 A64])
        (reg:DI 297)) "../src/spline.f":693 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 297)
        (nil)))
(insn 34 33 36 2 (set (reg:DI 242 [ size.108_180 ])
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [2 ubound.107+0 S8 A64])) "../src/spline.f":693 81 {*movdi_internal}
     (nil))
(insn 36 34 35 2 (set (reg:DI 298)
        (const_int 0 [0])) "../src/spline.f":693 81 {*movdi_internal}
     (nil))
(insn 35 36 37 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 242 [ size.108_180 ])
            (const_int 0 [0]))) "../src/spline.f":693 4 {*cmpdi_ccno_1}
     (nil))
(insn 37 35 39 2 (set (reg:DI 243 [ size.108_181 ])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 242 [ size.108_180 ])
            (reg:DI 298))) "../src/spline.f":693 967 {*movdicc_noc}
     (expr_list:REG_DEAD (reg:DI 298)
        (expr_list:REG_DEAD (reg:DI 242 [ size.108_180 ])
            (expr_list:REG_DEAD (reg:CCGOC 17 flags)
                (nil)))))
(insn 39 37 40 2 (set (reg:DI 92 [ size.260_6 ])
        (reg:DI 243 [ size.108_181 ])) "../src/spline.f":693 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 243 [ size.108_181 ])
        (nil)))
(insn 40 39 41 2 (set (subreg:DI (reg:TI 93 [ _7 ]) 0)
        (reg:DI 92 [ size.260_6 ])) "../src/spline.f":693 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 92 [ size.260_6 ])
        (nil)))
(insn 41 40 45 2 (set (subreg:DI (reg:TI 93 [ _7 ]) 8)
        (const_int 0 [0])) "../src/spline.f":693 81 {*movdi_internal}
     (expr_list:REG_UNUSED (reg:TI 93 [ _7 ])
        (nil)))
(insn 45 41 46 2 (set (reg/f:DI 299)
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 16 [0x10])) [6 n1+0 S8 A64])) "../src/spline.f":692 81 {*movdi_internal}
     (nil))
(insn 46 45 47 2 (set (reg:SI 95 [ _9 ])
        (mem:SI (reg/f:DI 299) [1 *n1_171(D)+0 S4 A32])) "../src/spline.f":692 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 299)
        (nil)))
(insn 47 46 48 2 (set (reg:DI 300)
        (sign_extend:DI (reg:SI 95 [ _9 ]))) "../src/spline.f":692 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 95 [ _9 ])
        (nil)))
(insn 48 47 49 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [2 ubound.109+0 S8 A64])
        (reg:DI 300)) "../src/spline.f":692 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 300)
        (nil)))
(insn 49 48 51 2 (set (reg:DI 247 [ size.110_186 ])
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [2 ubound.109+0 S8 A64])) "../src/spline.f":692 81 {*movdi_internal}
     (nil))
(insn 51 49 50 2 (set (reg:DI 301)
        (const_int 0 [0])) "../src/spline.f":692 81 {*movdi_internal}
     (nil))
(insn 50 51 52 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 247 [ size.110_186 ])
            (const_int 0 [0]))) "../src/spline.f":692 4 {*cmpdi_ccno_1}
     (nil))
(insn 52 50 54 2 (set (reg:DI 248 [ size.110_187 ])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 247 [ size.110_186 ])
            (reg:DI 301))) "../src/spline.f":692 967 {*movdicc_noc}
     (expr_list:REG_DEAD (reg:DI 301)
        (expr_list:REG_DEAD (reg:DI 247 [ size.110_186 ])
            (expr_list:REG_DEAD (reg:CCGOC 17 flags)
                (nil)))))
(insn 54 52 55 2 (set (reg:DI 96 [ size.262_10 ])
        (reg:DI 248 [ size.110_187 ])) "../src/spline.f":692 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 248 [ size.110_187 ])
        (nil)))
(insn 55 54 56 2 (set (subreg:DI (reg:TI 97 [ _11 ]) 0)
        (reg:DI 96 [ size.262_10 ])) "../src/spline.f":692 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 96 [ size.262_10 ])
        (nil)))
(insn 56 55 60 2 (set (subreg:DI (reg:TI 97 [ _11 ]) 8)
        (const_int 0 [0])) "../src/spline.f":692 81 {*movdi_internal}
     (expr_list:REG_UNUSED (reg:TI 97 [ _11 ])
        (nil)))
(insn 60 56 61 2 (set (reg/f:DI 302)
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 16 [0x10])) [6 n1+0 S8 A64])) "../src/spline.f":692 81 {*movdi_internal}
     (nil))
(insn 61 60 62 2 (set (reg:SI 99 [ _13 ])
        (mem:SI (reg/f:DI 302) [1 *n1_171(D)+0 S4 A32])) "../src/spline.f":692 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 302)
        (nil)))
(insn 62 61 63 2 (set (reg:DI 303)
        (sign_extend:DI (reg:SI 99 [ _13 ]))) "../src/spline.f":692 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 99 [ _13 ])
        (nil)))
(insn 63 62 64 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [2 ubound.113+0 S8 A64])
        (reg:DI 303)) "../src/spline.f":692 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 303)
        (nil)))
(insn 64 63 66 2 (set (reg:DI 252 [ size.114_192 ])
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [2 ubound.113+0 S8 A64])) "../src/spline.f":692 81 {*movdi_internal}
     (nil))
(insn 66 64 65 2 (set (reg:DI 304)
        (const_int 0 [0])) "../src/spline.f":692 81 {*movdi_internal}
     (nil))
(insn 65 66 67 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 252 [ size.114_192 ])
            (const_int 0 [0]))) "../src/spline.f":692 4 {*cmpdi_ccno_1}
     (nil))
(insn 67 65 69 2 (set (reg:DI 253 [ size.114_193 ])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 252 [ size.114_192 ])
            (reg:DI 304))) "../src/spline.f":692 967 {*movdicc_noc}
     (expr_list:REG_DEAD (reg:DI 304)
        (expr_list:REG_DEAD (reg:DI 252 [ size.114_192 ])
            (expr_list:REG_DEAD (reg:CCGOC 17 flags)
                (nil)))))
(insn 69 67 70 2 (set (reg:DI 100 [ size.264_14 ])
        (reg:DI 253 [ size.114_193 ])) "../src/spline.f":692 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 253 [ size.114_193 ])
        (nil)))
(insn 70 69 71 2 (set (subreg:DI (reg:TI 101 [ _15 ]) 0)
        (reg:DI 100 [ size.264_14 ])) "../src/spline.f":692 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 100 [ size.264_14 ])
        (nil)))
(insn 71 70 75 2 (set (subreg:DI (reg:TI 101 [ _15 ]) 8)
        (const_int 0 [0])) "../src/spline.f":692 81 {*movdi_internal}
     (expr_list:REG_UNUSED (reg:TI 101 [ _15 ])
        (nil)))
(insn 75 71 76 2 (set (reg/f:DI 305)
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 64 [0x40])) [6 n2+0 S8 A64])) "../src/spline.f":693 81 {*movdi_internal}
     (nil))
(insn 76 75 77 2 (set (reg:SI 103 [ _17 ])
        (mem:SI (reg/f:DI 305) [1 *n2_178(D)+0 S4 A32])) "../src/spline.f":693 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 305)
        (nil)))
(insn 77 76 78 2 (set (reg:DI 306)
        (sign_extend:DI (reg:SI 103 [ _17 ]))) "../src/spline.f":693 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 103 [ _17 ])
        (nil)))
(insn 78 77 79 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [2 ubound.111+0 S8 A64])
        (reg:DI 306)) "../src/spline.f":693 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 306)
        (nil)))
(insn 79 78 81 2 (set (reg:DI 257 [ size.112_198 ])
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [2 ubound.111+0 S8 A64])) "../src/spline.f":693 81 {*movdi_internal}
     (nil))
(insn 81 79 80 2 (set (reg:DI 307)
        (const_int 0 [0])) "../src/spline.f":693 81 {*movdi_internal}
     (nil))
(insn 80 81 82 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 257 [ size.112_198 ])
            (const_int 0 [0]))) "../src/spline.f":693 4 {*cmpdi_ccno_1}
     (nil))
(insn 82 80 84 2 (set (reg:DI 258 [ size.112_199 ])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 257 [ size.112_198 ])
            (reg:DI 307))) "../src/spline.f":693 967 {*movdicc_noc}
     (expr_list:REG_DEAD (reg:DI 307)
        (expr_list:REG_DEAD (reg:DI 257 [ size.112_198 ])
            (expr_list:REG_DEAD (reg:CCGOC 17 flags)
                (nil)))))
(insn 84 82 85 2 (set (reg:DI 104 [ size.266_18 ])
        (reg:DI 258 [ size.112_199 ])) "../src/spline.f":693 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 258 [ size.112_199 ])
        (nil)))
(insn 85 84 86 2 (set (subreg:DI (reg:TI 105 [ _19 ]) 0)
        (reg:DI 104 [ size.266_18 ])) "../src/spline.f":693 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 104 [ size.266_18 ])
        (nil)))
(insn 86 85 90 2 (set (subreg:DI (reg:TI 105 [ _19 ]) 8)
        (const_int 0 [0])) "../src/spline.f":693 81 {*movdi_internal}
     (expr_list:REG_UNUSED (reg:TI 105 [ _19 ])
        (nil)))
(insn 90 86 91 2 (set (reg/f:DI 308)
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 64 [0x40])) [6 n2+0 S8 A64])) "../src/spline.f":693 81 {*movdi_internal}
     (nil))
(insn 91 90 92 2 (set (reg:SI 107 [ _21 ])
        (mem:SI (reg/f:DI 308) [1 *n2_178(D)+0 S4 A32])) "../src/spline.f":693 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 308)
        (nil)))
(insn 92 91 93 2 (set (reg:DI 309)
        (sign_extend:DI (reg:SI 107 [ _21 ]))) "../src/spline.f":693 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 107 [ _21 ])
        (nil)))
(insn 93 92 94 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [2 ubound.115+0 S8 A64])
        (reg:DI 309)) "../src/spline.f":693 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 309)
        (nil)))
(insn 94 93 96 2 (set (reg:DI 262 [ size.116_204 ])
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [2 ubound.115+0 S8 A64])) "../src/spline.f":693 81 {*movdi_internal}
     (nil))
(insn 96 94 95 2 (set (reg:DI 310)
        (const_int 0 [0])) "../src/spline.f":693 81 {*movdi_internal}
     (nil))
(insn 95 96 97 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 262 [ size.116_204 ])
            (const_int 0 [0]))) "../src/spline.f":693 4 {*cmpdi_ccno_1}
     (nil))
(insn 97 95 99 2 (set (reg:DI 263 [ size.116_205 ])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 262 [ size.116_204 ])
            (reg:DI 310))) "../src/spline.f":693 967 {*movdicc_noc}
     (expr_list:REG_DEAD (reg:DI 310)
        (expr_list:REG_DEAD (reg:DI 262 [ size.116_204 ])
            (expr_list:REG_DEAD (reg:CCGOC 17 flags)
                (nil)))))
(insn 99 97 100 2 (set (reg:DI 108 [ size.268_22 ])
        (reg:DI 263 [ size.116_205 ])) "../src/spline.f":693 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 263 [ size.116_205 ])
        (nil)))
(insn 100 99 101 2 (set (subreg:DI (reg:TI 109 [ _23 ]) 0)
        (reg:DI 108 [ size.268_22 ])) "../src/spline.f":693 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 108 [ size.268_22 ])
        (nil)))
(insn 101 100 105 2 (set (subreg:DI (reg:TI 109 [ _23 ]) 8)
        (const_int 0 [0])) "../src/spline.f":693 81 {*movdi_internal}
     (expr_list:REG_UNUSED (reg:TI 109 [ _23 ])
        (nil)))
(insn 105 101 106 2 (set (reg/f:DI 311)
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 16 [0x10])) [6 n1+0 S8 A64])) "../src/spline.f":692 81 {*movdi_internal}
     (nil))
(insn 106 105 107 2 (set (reg:SI 111 [ _25 ])
        (mem:SI (reg/f:DI 311) [1 *n1_171(D)+0 S4 A32])) "../src/spline.f":692 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 311)
        (nil)))
(insn 107 106 108 2 (set (reg:DI 312)
        (sign_extend:DI (reg:SI 111 [ _25 ]))) "../src/spline.f":692 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 111 [ _25 ])
        (nil)))
(insn 108 107 109 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [2 ubound.117+0 S8 A64])
        (reg:DI 312)) "../src/spline.f":692 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 312)
        (nil)))
(insn 109 108 111 2 (set (reg:DI 267 [ size.118_210 ])
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [2 ubound.117+0 S8 A64])) "../src/spline.f":692 81 {*movdi_internal}
     (nil))
(insn 111 109 110 2 (set (reg:DI 313)
        (const_int 0 [0])) "../src/spline.f":692 81 {*movdi_internal}
     (nil))
(insn 110 111 112 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 267 [ size.118_210 ])
            (const_int 0 [0]))) "../src/spline.f":692 4 {*cmpdi_ccno_1}
     (nil))
(insn 112 110 114 2 (set (reg:DI 268 [ size.118_211 ])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 267 [ size.118_210 ])
            (reg:DI 313))) "../src/spline.f":692 967 {*movdicc_noc}
     (expr_list:REG_DEAD (reg:DI 313)
        (expr_list:REG_DEAD (reg:DI 267 [ size.118_210 ])
            (expr_list:REG_DEAD (reg:CCGOC 17 flags)
                (nil)))))
(insn 114 112 115 2 (set (reg:DI 112 [ size.270_26 ])
        (reg:DI 268 [ size.118_211 ])) "../src/spline.f":692 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 268 [ size.118_211 ])
        (nil)))
(insn 115 114 116 2 (set (subreg:DI (reg:TI 113 [ _27 ]) 0)
        (reg:DI 112 [ size.270_26 ])) "../src/spline.f":692 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 112 [ size.270_26 ])
        (nil)))
(insn 116 115 120 2 (set (subreg:DI (reg:TI 113 [ _27 ]) 8)
        (const_int 0 [0])) "../src/spline.f":692 81 {*movdi_internal}
     (expr_list:REG_UNUSED (reg:TI 113 [ _27 ])
        (nil)))
(insn 120 116 121 2 (set (reg/f:DI 314)
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 16 [0x10])) [6 n1+0 S8 A64])) "../src/spline.f":692 81 {*movdi_internal}
     (nil))
(insn 121 120 122 2 (set (reg:SI 115 [ _29 ])
        (mem:SI (reg/f:DI 314) [1 *n1_171(D)+0 S4 A32])) "../src/spline.f":692 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 314)
        (nil)))
(insn 122 121 123 2 (set (reg:DI 315)
        (sign_extend:DI (reg:SI 115 [ _29 ]))) "../src/spline.f":692 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 115 [ _29 ])
        (nil)))
(insn 123 122 124 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -88 [0xffffffffffffffa8])) [2 ubound.121+0 S8 A64])
        (reg:DI 315)) "../src/spline.f":692 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 315)
        (nil)))
(insn 124 123 126 2 (set (reg:DI 272 [ size.122_216 ])
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -88 [0xffffffffffffffa8])) [2 ubound.121+0 S8 A64])) "../src/spline.f":692 81 {*movdi_internal}
     (nil))
(insn 126 124 125 2 (set (reg:DI 316)
        (const_int 0 [0])) "../src/spline.f":692 81 {*movdi_internal}
     (nil))
(insn 125 126 127 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 272 [ size.122_216 ])
            (const_int 0 [0]))) "../src/spline.f":692 4 {*cmpdi_ccno_1}
     (nil))
(insn 127 125 129 2 (set (reg:DI 273 [ size.122_217 ])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 272 [ size.122_216 ])
            (reg:DI 316))) "../src/spline.f":692 967 {*movdicc_noc}
     (expr_list:REG_DEAD (reg:DI 316)
        (expr_list:REG_DEAD (reg:DI 272 [ size.122_216 ])
            (expr_list:REG_DEAD (reg:CCGOC 17 flags)
                (nil)))))
(insn 129 127 130 2 (set (reg:DI 116 [ size.272_30 ])
        (reg:DI 273 [ size.122_217 ])) "../src/spline.f":692 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 273 [ size.122_217 ])
        (nil)))
(insn 130 129 131 2 (set (subreg:DI (reg:TI 117 [ _31 ]) 0)
        (reg:DI 116 [ size.272_30 ])) "../src/spline.f":692 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 116 [ size.272_30 ])
        (nil)))
(insn 131 130 135 2 (set (subreg:DI (reg:TI 117 [ _31 ]) 8)
        (const_int 0 [0])) "../src/spline.f":692 81 {*movdi_internal}
     (expr_list:REG_UNUSED (reg:TI 117 [ _31 ])
        (nil)))
(insn 135 131 136 2 (set (reg/f:DI 317)
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 64 [0x40])) [6 n2+0 S8 A64])) "../src/spline.f":693 81 {*movdi_internal}
     (nil))
(insn 136 135 137 2 (set (reg:SI 119 [ _33 ])
        (mem:SI (reg/f:DI 317) [1 *n2_178(D)+0 S4 A32])) "../src/spline.f":693 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 317)
        (nil)))
(insn 137 136 138 2 (set (reg:DI 318)
        (sign_extend:DI (reg:SI 119 [ _33 ]))) "../src/spline.f":693 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 119 [ _33 ])
        (nil)))
(insn 138 137 139 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [2 ubound.119+0 S8 A64])
        (reg:DI 318)) "../src/spline.f":693 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 318)
        (nil)))
(insn 139 138 141 2 (set (reg:DI 277 [ size.120_222 ])
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [2 ubound.119+0 S8 A64])) "../src/spline.f":693 81 {*movdi_internal}
     (nil))
(insn 141 139 140 2 (set (reg:DI 319)
        (const_int 0 [0])) "../src/spline.f":693 81 {*movdi_internal}
     (nil))
(insn 140 141 142 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 277 [ size.120_222 ])
            (const_int 0 [0]))) "../src/spline.f":693 4 {*cmpdi_ccno_1}
     (nil))
(insn 142 140 144 2 (set (reg:DI 278 [ size.120_223 ])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 277 [ size.120_222 ])
            (reg:DI 319))) "../src/spline.f":693 967 {*movdicc_noc}
     (expr_list:REG_DEAD (reg:DI 319)
        (expr_list:REG_DEAD (reg:DI 277 [ size.120_222 ])
            (expr_list:REG_DEAD (reg:CCGOC 17 flags)
                (nil)))))
(insn 144 142 145 2 (set (reg:DI 120 [ size.274_34 ])
        (reg:DI 278 [ size.120_223 ])) "../src/spline.f":693 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 278 [ size.120_223 ])
        (nil)))
(insn 145 144 146 2 (set (subreg:DI (reg:TI 121 [ _35 ]) 0)
        (reg:DI 120 [ size.274_34 ])) "../src/spline.f":693 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 120 [ size.274_34 ])
        (nil)))
(insn 146 145 150 2 (set (subreg:DI (reg:TI 121 [ _35 ]) 8)
        (const_int 0 [0])) "../src/spline.f":693 81 {*movdi_internal}
     (expr_list:REG_UNUSED (reg:TI 121 [ _35 ])
        (nil)))
(insn 150 146 151 2 (set (reg/f:DI 320)
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 64 [0x40])) [6 n2+0 S8 A64])) "../src/spline.f":693 81 {*movdi_internal}
     (nil))
(insn 151 150 152 2 (set (reg:SI 123 [ _37 ])
        (mem:SI (reg/f:DI 320) [1 *n2_178(D)+0 S4 A32])) "../src/spline.f":693 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 320)
        (nil)))
(insn 152 151 153 2 (set (reg:DI 321)
        (sign_extend:DI (reg:SI 123 [ _37 ]))) "../src/spline.f":693 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 123 [ _37 ])
        (nil)))
(insn 153 152 154 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -104 [0xffffffffffffff98])) [2 ubound.123+0 S8 A64])
        (reg:DI 321)) "../src/spline.f":693 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 321)
        (nil)))
(insn 154 153 156 2 (set (reg:DI 282 [ size.124_228 ])
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -104 [0xffffffffffffff98])) [2 ubound.123+0 S8 A64])) "../src/spline.f":693 81 {*movdi_internal}
     (nil))
(insn 156 154 155 2 (set (reg:DI 322)
        (const_int 0 [0])) "../src/spline.f":693 81 {*movdi_internal}
     (nil))
(insn 155 156 157 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 282 [ size.124_228 ])
            (const_int 0 [0]))) "../src/spline.f":693 4 {*cmpdi_ccno_1}
     (nil))
(insn 157 155 159 2 (set (reg:DI 283 [ size.124_229 ])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 282 [ size.124_228 ])
            (reg:DI 322))) "../src/spline.f":693 967 {*movdicc_noc}
     (expr_list:REG_DEAD (reg:DI 322)
        (expr_list:REG_DEAD (reg:DI 282 [ size.124_228 ])
            (expr_list:REG_DEAD (reg:CCGOC 17 flags)
                (nil)))))
(insn 159 157 160 2 (set (reg:DI 124 [ size.276_38 ])
        (reg:DI 283 [ size.124_229 ])) "../src/spline.f":693 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 283 [ size.124_229 ])
        (nil)))
(insn 160 159 161 2 (set (subreg:DI (reg:TI 125 [ _39 ]) 0)
        (reg:DI 124 [ size.276_38 ])) "../src/spline.f":693 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 124 [ size.276_38 ])
        (nil)))
(insn 161 160 165 2 (set (subreg:DI (reg:TI 125 [ _39 ]) 8)
        (const_int 0 [0])) "../src/spline.f":693 81 {*movdi_internal}
     (expr_list:REG_UNUSED (reg:TI 125 [ _39 ])
        (nil)))
(insn 165 161 166 2 (set (reg/f:DI 323)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -664 [0xfffffffffffffd68])) [16 ok+0 S8 A64])) "../src/spline.f":704 81 {*movdi_internal}
     (nil))
(insn 166 165 167 2 (set (mem:SI (reg/f:DI 323) [9 *ok_233(D)+0 S4 A32])
        (const_int 1 [0x1])) "../src/spline.f":704 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 323)
        (nil)))
(insn 167 166 168 2 (set (reg:SF 324)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC21") [flags 0x2]) [3  S4 A32])) "../src/spline.f":707 127 {*movsf_internal}
     (nil))
(insn 168 167 169 2 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -168 [0xffffffffffffff58])) [3 rs1+0 S4 A64])
        (reg:SF 324)) "../src/spline.f":707 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 324)
        (nil)))
(insn 169 168 170 2 (set (reg:SF 325)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC21") [flags 0x2]) [3  S4 A32])) "../src/spline.f":708 127 {*movsf_internal}
     (nil))
(insn 170 169 171 2 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -172 [0xffffffffffffff54])) [3 rs2+0 S4 A32])
        (reg:SF 325)) "../src/spline.f":708 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 325)
        (nil)))
(insn 171 170 172 2 (set (reg:SF 326)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC8") [flags 0x2]) [3  S4 A32])) "../src/spline.f":709 127 {*movsf_internal}
     (nil))
(insn 172 171 173 2 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -160 [0xffffffffffffff60])) [3 ds1+0 S4 A128])
        (reg:SF 326)) "../src/spline.f":709 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 326)
        (nil)))
(insn 173 172 174 2 (set (reg:SF 327)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC8") [flags 0x2]) [3  S4 A32])) "../src/spline.f":710 127 {*movsf_internal}
     (nil))
(insn 174 173 175 2 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -164 [0xffffffffffffff5c])) [3 ds2+0 S4 A32])
        (reg:SF 327)) "../src/spline.f":710 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 327)
        (nil)))
(insn 175 174 628 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [1 iter+0 S4 A32])
        (const_int 1 [0x1])) "../src/spline.f":712 82 {*movsi_internal}
     (nil))
;;  succ:       3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 (FALLTHRU)
;;              38 [100.0%] 
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 287
(code_label 628 175 176 3 209 (nil) [1 uses])
(note 176 628 177 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 177 176 178 3 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [1 iter+0 S4 A32])
            (const_int 12 [0xc]))) "../src/spline.f":712 7 {*cmpsi_1}
     (nil))
(insn 178 177 179 3 (set (reg:QI 287 [ _242 ])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "../src/spline.f":712 613 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil)))
(insn 179 178 180 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 287 [ _242 ])
            (const_int 0 [0]))) "../src/spline.f":712 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 287 [ _242 ])
        (nil)))
(jump_insn 180 179 181 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 803)
            (pc))) "../src/spline.f":712 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 803)
;;  succ:       45
;;              4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 127 128 328 329 330 331 332 333 334 335 336
(note 181 180 182 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 182 181 183 4 (set (reg:SF 328)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC3") [flags 0x2]) [3  S4 A32])) "../src/spline.f":714 127 {*movsf_internal}
     (nil))
(insn 183 182 184 4 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [3 rlx+0 S4 A32])
        (reg:SF 328)) "../src/spline.f":714 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 328)
        (nil)))
(insn 184 183 185 4 (set (reg/f:DI 329)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -672 [0xfffffffffffffd60])) [4 ss1+0 S8 A64])) "../src/spline.f":715 81 {*movdi_internal}
     (nil))
(insn 185 184 186 4 (set (reg:SF 330)
        (mem:SF (reg/f:DI 329) [3 *ss1_244(D)+0 S4 A32])) "../src/spline.f":715 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 329)
        (nil)))
(insn 186 185 187 4 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -108 [0xffffffffffffff94])) [3 ss1old+0 S4 A32])
        (reg:SF 330)) "../src/spline.f":715 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 330)
        (nil)))
(insn 187 186 188 4 (set (reg/f:DI 331)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -680 [0xfffffffffffffd58])) [4 ss2+0 S8 A64])) "../src/spline.f":716 81 {*movdi_internal}
     (nil))
(insn 188 187 189 4 (set (reg:SF 332)
        (mem:SF (reg/f:DI 331) [3 *ss2_246(D)+0 S4 A32])) "../src/spline.f":716 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 331)
        (nil)))
(insn 189 188 190 4 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -112 [0xffffffffffffff90])) [3 ss2old+0 S4 A32])
        (reg:SF 332)) "../src/spline.f":716 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 332)
        (nil)))
(insn 190 189 191 4 (set (reg:SF 127 [ rs1.278_41 ])
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -168 [0xffffffffffffff58])) [3 rs1+0 S4 A64])) "../src/spline.f":717 127 {*movsf_internal}
     (nil))
(insn 191 190 192 4 (set (reg:V4SF 334)
        (mem/u/c:V4SF (symbol_ref/u:DI ("*lC13") [flags 0x2]) [3  S16 A128])) "../src/spline.f":717 1225 {movv4sf_internal}
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF +QNaN [+QNaN])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 192 191 193 4 (parallel [
            (set (reg:SF 333)
                (abs:SF (reg:SF 127 [ rs1.278_41 ])))
            (use (reg:V4SF 334))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":717 470 {*absnegsf2}
     (expr_list:REG_DEAD (reg:V4SF 334)
        (expr_list:REG_DEAD (reg:SF 127 [ rs1.278_41 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (abs:SF (reg:SF 127 [ rs1.278_41 ]))
                    (nil))))))
(insn 193 192 194 4 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -116 [0xffffffffffffff8c])) [3 rs1old+0 S4 A32])
        (reg:SF 333)) "../src/spline.f":717 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 333)
        (nil)))
(insn 194 193 195 4 (set (reg:SF 128 [ rs2.279_42 ])
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -172 [0xffffffffffffff54])) [3 rs2+0 S4 A32])) "../src/spline.f":718 127 {*movsf_internal}
     (nil))
(insn 195 194 196 4 (set (reg:V4SF 336)
        (mem/u/c:V4SF (symbol_ref/u:DI ("*lC13") [flags 0x2]) [3  S16 A128])) "../src/spline.f":718 1225 {movv4sf_internal}
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF +QNaN [+QNaN])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 196 195 197 4 (parallel [
            (set (reg:SF 335)
                (abs:SF (reg:SF 128 [ rs2.279_42 ])))
            (use (reg:V4SF 336))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":718 470 {*absnegsf2}
     (expr_list:REG_DEAD (reg:V4SF 336)
        (expr_list:REG_DEAD (reg:SF 128 [ rs2.279_42 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (abs:SF (reg:SF 128 [ rs2.279_42 ]))
                    (nil))))))
(insn 197 196 198 4 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -120 [0xffffffffffffff88])) [3 rs2old+0 S4 A32])
        (reg:SF 335)) "../src/spline.f":718 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 335)
        (nil)))
(insn 198 197 464 4 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 irlx+0 S4 A32])
        (const_int 1 [0x1])) "../src/spline.f":720 82 {*movsi_internal}
     (nil))
;;  succ:       5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       4 (FALLTHRU)
;;              31 [100.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 288
(code_label 464 198 199 5 202 (nil) [1 uses])
(note 199 464 200 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 200 199 201 5 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [1 irlx+0 S4 A32])
            (const_int 16 [0x10]))) "../src/spline.f":720 7 {*cmpsi_1}
     (nil))
(insn 201 200 202 5 (set (reg:QI 288 [ _251 ])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "../src/spline.f":720 613 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil)))
(insn 202 201 203 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 288 [ _251 ])
            (const_int 0 [0]))) "../src/spline.f":720 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 288 [ _251 ])
        (nil)))
(jump_insn 203 202 204 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 806)
            (pc))) "../src/spline.f":720 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 806)
;;  succ:       46
;;              6 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (RTL)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 129 130 131 132 133 134 135 136 337 338 339 340
(note 204 203 205 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 205 204 206 6 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [9 clip1+0 S4 A32])
        (const_int 0 [0])) "../src/spline.f":722 82 {*movsi_internal}
     (nil))
(insn 206 205 207 6 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [9 clip2+0 S4 A32])
        (const_int 0 [0])) "../src/spline.f":723 82 {*movsi_internal}
     (nil))
(insn 207 206 208 6 (set (reg:SF 129 [ ds1.280_43 ])
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -160 [0xffffffffffffff60])) [3 ds1+0 S4 A128])) "../src/spline.f":724 127 {*movsf_internal}
     (nil))
(insn 208 207 209 6 (set (reg:SF 130 [ _44 ])
        (mult:SF (reg:SF 129 [ ds1.280_43 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -20 [0xffffffffffffffec])) [3 rlx+0 S4 A32]))) "../src/spline.f":724 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 129 [ ds1.280_43 ])
        (nil)))
(insn 209 208 210 6 (set (reg:SF 131 [ _45 ])
        (plus:SF (reg:SF 130 [ _44 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -108 [0xffffffffffffff94])) [3 ss1old+0 S4 A32]))) "../src/spline.f":724 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 130 [ _44 ])
        (nil)))
(insn 210 209 211 6 (set (reg/f:DI 337)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -672 [0xfffffffffffffd60])) [4 ss1+0 S8 A64])) "../src/spline.f":724 81 {*movdi_internal}
     (nil))
(insn 211 210 212 6 (set (mem:SF (reg/f:DI 337) [3 *ss1_244(D)+0 S4 A32])
        (reg:SF 131 [ _45 ])) "../src/spline.f":724 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 337)
        (expr_list:REG_DEAD (reg:SF 131 [ _45 ])
            (nil))))
(insn 212 211 213 6 (set (reg:SF 132 [ ds2.281_46 ])
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -164 [0xffffffffffffff5c])) [3 ds2+0 S4 A32])) "../src/spline.f":725 127 {*movsf_internal}
     (nil))
(insn 213 212 214 6 (set (reg:SF 133 [ _47 ])
        (mult:SF (reg:SF 132 [ ds2.281_46 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -20 [0xffffffffffffffec])) [3 rlx+0 S4 A32]))) "../src/spline.f":725 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 132 [ ds2.281_46 ])
        (nil)))
(insn 214 213 215 6 (set (reg:SF 134 [ _48 ])
        (plus:SF (reg:SF 133 [ _47 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -112 [0xffffffffffffff90])) [3 ss2old+0 S4 A32]))) "../src/spline.f":725 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 133 [ _47 ])
        (nil)))
(insn 215 214 216 6 (set (reg/f:DI 338)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -680 [0xfffffffffffffd58])) [4 ss2+0 S8 A64])) "../src/spline.f":725 81 {*movdi_internal}
     (nil))
(insn 216 215 217 6 (set (mem:SF (reg/f:DI 338) [3 *ss2_246(D)+0 S4 A32])
        (reg:SF 134 [ _48 ])) "../src/spline.f":725 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 338)
        (expr_list:REG_DEAD (reg:SF 134 [ _48 ])
            (nil))))
(insn 217 216 218 6 (set (reg/f:DI 339)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -672 [0xfffffffffffffd60])) [4 ss1+0 S8 A64])) "../src/spline.f":727 81 {*movdi_internal}
     (nil))
(insn 218 217 219 6 (set (reg:SF 135 [ _49 ])
        (mem:SF (reg/f:DI 339) [3 *ss1_244(D)+0 S4 A32])) "../src/spline.f":727 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 339)
        (nil)))
(insn 219 218 220 6 (set (reg/f:DI 340)
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 8 [0x8])) [5 s1+0 S8 A64])) "../src/spline.f":727 81 {*movdi_internal}
     (nil))
(insn 220 219 221 6 (set (reg:SF 136 [ _50 ])
        (mem:SF (reg/f:DI 340) [3 *s1_256(D)+0 S4 A32])) "../src/spline.f":727 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 340)
        (nil)))
(insn 221 220 222 6 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 136 [ _50 ])
            (reg:SF 135 [ _49 ]))) "../src/spline.f":727 51 {*cmpiusf}
     (expr_list:REG_DEAD (reg:SF 136 [ _50 ])
        (expr_list:REG_DEAD (reg:SF 135 [ _49 ])
            (nil))))
(jump_insn 222 221 223 6 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref 237)
            (pc))) "../src/spline.f":727 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil))
 -> 237)
;;  succ:       8
;;              7 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (RTL)
;;  pred:       6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 137 138 139 140 141 341 342 343
(note 223 222 224 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 224 223 225 7 (set (reg/f:DI 341)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -672 [0xfffffffffffffd60])) [4 ss1+0 S8 A64])) "../src/spline.f":727 81 {*movdi_internal}
     (nil))
(insn 225 224 226 7 (set (reg:SF 137 [ _51 ])
        (mem:SF (reg/f:DI 341) [3 *ss1_244(D)+0 S4 A32])) "../src/spline.f":727 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 341)
        (nil)))
(insn 226 225 227 7 (set (reg/f:DI 342)
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 16 [0x10])) [6 n1+0 S8 A64])) "../src/spline.f":727 81 {*movdi_internal}
     (nil))
(insn 227 226 228 7 (set (reg:SI 138 [ _52 ])
        (mem:SI (reg/f:DI 342) [1 *n1_171(D)+0 S4 A32])) "../src/spline.f":727 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 342)
        (nil)))
(insn 228 227 229 7 (set (reg:DI 139 [ _53 ])
        (sign_extend:DI (reg:SI 138 [ _52 ]))) "../src/spline.f":727 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 138 [ _52 ])
        (nil)))
(insn 229 228 230 7 (parallel [
            (set (reg:DI 140 [ _54 ])
                (plus:DI (reg:DI 139 [ _53 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":727 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 139 [ _53 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 230 229 231 7 (set (reg/f:DI 343)
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 8 [0x8])) [5 s1+0 S8 A64])) "../src/spline.f":727 81 {*movdi_internal}
     (nil))
(insn 231 230 232 7 (set (reg:SF 141 [ _55 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 140 [ _54 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 343)) [3 *s1_256(D) S4 A32])) "../src/spline.f":727 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 343)
        (expr_list:REG_DEAD (reg:DI 140 [ _54 ])
            (nil))))
(insn 232 231 233 7 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 137 [ _51 ])
            (reg:SF 141 [ _55 ]))) "../src/spline.f":727 51 {*cmpiusf}
     (expr_list:REG_DEAD (reg:SF 141 [ _55 ])
        (expr_list:REG_DEAD (reg:SF 137 [ _51 ])
            (nil))))
(jump_insn 233 232 237 7 (set (pc)
        (if_then_else (unle (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 788)
            (pc))) "../src/spline.f":727 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil))
 -> 788)
;;  succ:       8 (FALLTHRU)
;;              9
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (RTL)
;;  pred:       6
;;              7 (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 233
(code_label 237 233 238 8 182 (nil) [1 uses])
(note 238 237 239 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 239 238 789 8 (set (reg:QI 233 [ iftmp.282_158 ])
        (const_int 1 [0x1])) "../src/spline.f":727 84 {*movqi_internal}
     (nil))
(jump_insn 789 239 790 8 (set (pc)
        (label_ref 245)) "../src/spline.f":727 649 {jump}
     (nil)
 -> 245)
;;  succ:       10 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 233

(barrier 790 789 788)
;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (RTL)
;;  pred:       7
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 233
(code_label 788 790 243 9 217 (nil) [1 uses])
(note 243 788 244 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 244 243 245 9 (set (reg:QI 233 [ iftmp.282_158 ])
        (const_int 0 [0])) "../src/spline.f":727 84 {*movqi_internal}
     (nil))
;;  succ:       10 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 233

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (RTL)
;;  pred:       9 (FALLTHRU)
;;              8 [100.0%] 
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 233
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 233
;; lr  def 	 17 [flags] 142
(code_label 245 244 246 10 185 (nil) [1 uses])
(note 246 245 247 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 247 246 248 10 (set (reg:SI 142 [ iftmp.283_56 ])
        (zero_extend:SI (reg:QI 233 [ iftmp.282_158 ]))) "../src/spline.f":727 136 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 233 [ iftmp.282_158 ])
        (nil)))
(insn 248 247 249 10 (parallel [
            (set (reg:SI 142 [ iftmp.283_56 ])
                (and:SI (reg:SI 142 [ iftmp.283_56 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":727 391 {*andsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 249 248 250 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 142 [ iftmp.283_56 ])
            (const_int 0 [0]))) "../src/spline.f":727 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 142 [ iftmp.283_56 ])
        (nil)))
(jump_insn 250 249 251 10 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 289)
            (pc))) "../src/spline.f":727 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 289)
;;  succ:       11 (FALLTHRU)
;;              16
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (RTL)
;;  pred:       10 (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 143 144 145 229 289 344 345
(note 251 250 252 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 252 251 253 11 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [9 clip1+0 S4 A32])
        (const_int 1 [0x1])) "../src/spline.f":728 82 {*movsi_internal}
     (nil))
(insn 253 252 254 11 (set (reg/f:DI 344)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -672 [0xfffffffffffffd60])) [4 ss1+0 S8 A64])) "../src/spline.f":729 81 {*movdi_internal}
     (nil))
(insn 254 253 255 11 (set (reg:SF 229 [ M.125_154 ])
        (mem:SF (reg/f:DI 344) [3 *ss1_244(D)+0 S4 A32])) "../src/spline.f":729 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 344)
        (nil)))
(insn 255 254 256 11 (set (reg/f:DI 345)
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 8 [0x8])) [5 s1+0 S8 A64])) "../src/spline.f":729 81 {*movdi_internal}
     (nil))
(insn 256 255 257 11 (set (reg:SF 289 [ _262 ])
        (mem:SF (reg/f:DI 345) [3 *s1_256(D)+0 S4 A32])) "../src/spline.f":729 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 345)
        (nil)))
(insn 257 256 258 11 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 289 [ _262 ])
            (reg:SF 229 [ M.125_154 ]))) "../src/spline.f":729 51 {*cmpiusf}
     (nil))
(insn 258 257 259 11 (set (reg:QI 143 [ _57 ])
        (gt:QI (reg:CCFPU 17 flags)
            (const_int 0 [0]))) "../src/spline.f":729 613 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil)))
(insn 259 258 260 11 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 229 [ M.125_154 ])
            (reg:SF 229 [ M.125_154 ]))) "../src/spline.f":729 51 {*cmpiusf}
     (nil))
(insn 260 259 261 11 (set (reg:QI 144 [ _58 ])
        (unordered:QI (reg:CCFPU 17 flags)
            (const_int 0 [0]))) "../src/spline.f":729 613 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil)))
(insn 261 260 262 11 (parallel [
            (set (reg:QI 145 [ _59 ])
                (ior:QI (reg:QI 143 [ _57 ])
                    (reg:QI 144 [ _58 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":729 423 {*iorqi_1}
     (expr_list:REG_DEAD (reg:QI 144 [ _58 ])
        (expr_list:REG_DEAD (reg:QI 143 [ _57 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 262 261 263 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 145 [ _59 ])
            (const_int 0 [0]))) "../src/spline.f":729 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 145 [ _59 ])
        (nil)))
(jump_insn 263 262 264 11 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 265)
            (pc))) "../src/spline.f":729 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 265)
;;  succ:       12 (FALLTHRU)
;;              13
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 229 289

;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (RTL)
;;  pred:       11 (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 289
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 289
;; lr  def 	 229
(note 264 263 9 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 9 264 265 12 (set (reg:SF 229 [ M.125_154 ])
        (reg:SF 289 [ _262 ])) "../src/spline.f":729 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 289 [ _262 ])
        (nil)))
;;  succ:       13 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 229

;; basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 14, flags: (RTL)
;;  pred:       11
;;              12 (FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 229
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 229
;; lr  def 	 17 [flags] 146 147 148 149 150 151 230 290 346 347 348 349
(code_label 265 9 266 13 187 (nil) [1 uses])
(note 266 265 267 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 267 266 268 13 (set (reg/f:DI 346)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -672 [0xfffffffffffffd60])) [4 ss1+0 S8 A64])) "../src/spline.f":729 81 {*movdi_internal}
     (nil))
(insn 268 267 269 13 (set (mem:SF (reg/f:DI 346) [3 *ss1_244(D)+0 S4 A32])
        (reg:SF 229 [ M.125_154 ])) "../src/spline.f":729 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 346)
        (expr_list:REG_DEAD (reg:SF 229 [ M.125_154 ])
            (nil))))
(insn 269 268 270 13 (set (reg/f:DI 347)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -672 [0xfffffffffffffd60])) [4 ss1+0 S8 A64])) "../src/spline.f":730 81 {*movdi_internal}
     (nil))
(insn 270 269 271 13 (set (reg:SF 230 [ M.126_155 ])
        (mem:SF (reg/f:DI 347) [3 *ss1_244(D)+0 S4 A32])) "../src/spline.f":730 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 347)
        (nil)))
(insn 271 270 272 13 (set (reg/f:DI 348)
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 16 [0x10])) [6 n1+0 S8 A64])) "../src/spline.f":730 81 {*movdi_internal}
     (nil))
(insn 272 271 273 13 (set (reg:SI 146 [ _60 ])
        (mem:SI (reg/f:DI 348) [1 *n1_171(D)+0 S4 A32])) "../src/spline.f":730 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 348)
        (nil)))
(insn 273 272 274 13 (set (reg:DI 147 [ _61 ])
        (sign_extend:DI (reg:SI 146 [ _60 ]))) "../src/spline.f":730 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 146 [ _60 ])
        (nil)))
(insn 274 273 275 13 (parallel [
            (set (reg:DI 148 [ _62 ])
                (plus:DI (reg:DI 147 [ _61 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":730 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 147 [ _61 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 275 274 276 13 (set (reg/f:DI 349)
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 8 [0x8])) [5 s1+0 S8 A64])) "../src/spline.f":730 81 {*movdi_internal}
     (nil))
(insn 276 275 277 13 (set (reg:SF 290 [ _267 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 148 [ _62 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 349)) [3 *s1_256(D) S4 A32])) "../src/spline.f":730 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 349)
        (expr_list:REG_DEAD (reg:DI 148 [ _62 ])
            (nil))))
(insn 277 276 278 13 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 230 [ M.126_155 ])
            (reg:SF 290 [ _267 ]))) "../src/spline.f":730 51 {*cmpiusf}
     (nil))
(insn 278 277 279 13 (set (reg:QI 149 [ _63 ])
        (gt:QI (reg:CCFPU 17 flags)
            (const_int 0 [0]))) "../src/spline.f":730 613 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil)))
(insn 279 278 280 13 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 230 [ M.126_155 ])
            (reg:SF 230 [ M.126_155 ]))) "../src/spline.f":730 51 {*cmpiusf}
     (nil))
(insn 280 279 281 13 (set (reg:QI 150 [ _64 ])
        (unordered:QI (reg:CCFPU 17 flags)
            (const_int 0 [0]))) "../src/spline.f":730 613 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil)))
(insn 281 280 282 13 (parallel [
            (set (reg:QI 151 [ _65 ])
                (ior:QI (reg:QI 149 [ _63 ])
                    (reg:QI 150 [ _64 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":730 423 {*iorqi_1}
     (expr_list:REG_DEAD (reg:QI 150 [ _64 ])
        (expr_list:REG_DEAD (reg:QI 149 [ _63 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 282 281 283 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 151 [ _65 ])
            (const_int 0 [0]))) "../src/spline.f":730 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 151 [ _65 ])
        (nil)))
(jump_insn 283 282 284 13 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 285)
            (pc))) "../src/spline.f":730 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 285)
;;  succ:       14 (FALLTHRU)
;;              15
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 230 290

;; basic block 14, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 13, next block 15, flags: (RTL)
;;  pred:       13 (FALLTHRU)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 290
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 290
;; lr  def 	 230
(note 284 283 10 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 10 284 285 14 (set (reg:SF 230 [ M.126_155 ])
        (reg:SF 290 [ _267 ])) "../src/spline.f":730 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 290 [ _267 ])
        (nil)))
;;  succ:       15 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 230

;; basic block 15, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 14, next block 16, flags: (RTL)
;;  pred:       13
;;              14 (FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 230
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 230
;; lr  def 	 350
(code_label 285 10 286 15 188 (nil) [1 uses])
(note 286 285 287 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 287 286 288 15 (set (reg/f:DI 350)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -672 [0xfffffffffffffd60])) [4 ss1+0 S8 A64])) "../src/spline.f":730 81 {*movdi_internal}
     (nil))
(insn 288 287 289 15 (set (mem:SF (reg/f:DI 350) [3 *ss1_244(D)+0 S4 A32])
        (reg:SF 230 [ M.126_155 ])) "../src/spline.f":730 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 350)
        (expr_list:REG_DEAD (reg:SF 230 [ M.126_155 ])
            (nil))))
;;  succ:       16 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 16, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 15, next block 17, flags: (RTL)
;;  pred:       10
;;              15 (FALLTHRU)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 152 153 351 352
(code_label 289 288 290 16 186 (nil) [1 uses])
(note 290 289 291 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 291 290 292 16 (set (reg/f:DI 351)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -680 [0xfffffffffffffd58])) [4 ss2+0 S8 A64])) "../src/spline.f":732 81 {*movdi_internal}
     (nil))
(insn 292 291 293 16 (set (reg:SF 152 [ _66 ])
        (mem:SF (reg/f:DI 351) [3 *ss2_246(D)+0 S4 A32])) "../src/spline.f":732 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 351)
        (nil)))
(insn 293 292 294 16 (set (reg/f:DI 352)
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 56 [0x38])) [5 s2+0 S8 A64])) "../src/spline.f":732 81 {*movdi_internal}
     (nil))
(insn 294 293 295 16 (set (reg:SF 153 [ _67 ])
        (mem:SF (reg/f:DI 352) [3 *s2_270(D)+0 S4 A32])) "../src/spline.f":732 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 352)
        (nil)))
(insn 295 294 296 16 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 153 [ _67 ])
            (reg:SF 152 [ _66 ]))) "../src/spline.f":732 51 {*cmpiusf}
     (expr_list:REG_DEAD (reg:SF 153 [ _67 ])
        (expr_list:REG_DEAD (reg:SF 152 [ _66 ])
            (nil))))
(jump_insn 296 295 297 16 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref 311)
            (pc))) "../src/spline.f":732 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil))
 -> 311)
;;  succ:       18
;;              17 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 17, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 16, next block 18, flags: (RTL)
;;  pred:       16 (FALLTHRU)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 154 155 156 157 158 353 354 355
(note 297 296 298 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 298 297 299 17 (set (reg/f:DI 353)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -680 [0xfffffffffffffd58])) [4 ss2+0 S8 A64])) "../src/spline.f":732 81 {*movdi_internal}
     (nil))
(insn 299 298 300 17 (set (reg:SF 154 [ _68 ])
        (mem:SF (reg/f:DI 353) [3 *ss2_246(D)+0 S4 A32])) "../src/spline.f":732 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 353)
        (nil)))
(insn 300 299 301 17 (set (reg/f:DI 354)
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 64 [0x40])) [6 n2+0 S8 A64])) "../src/spline.f":732 81 {*movdi_internal}
     (nil))
(insn 301 300 302 17 (set (reg:SI 155 [ _69 ])
        (mem:SI (reg/f:DI 354) [1 *n2_178(D)+0 S4 A32])) "../src/spline.f":732 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 354)
        (nil)))
(insn 302 301 303 17 (set (reg:DI 156 [ _70 ])
        (sign_extend:DI (reg:SI 155 [ _69 ]))) "../src/spline.f":732 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 155 [ _69 ])
        (nil)))
(insn 303 302 304 17 (parallel [
            (set (reg:DI 157 [ _71 ])
                (plus:DI (reg:DI 156 [ _70 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":732 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 156 [ _70 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 304 303 305 17 (set (reg/f:DI 355)
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 56 [0x38])) [5 s2+0 S8 A64])) "../src/spline.f":732 81 {*movdi_internal}
     (nil))
(insn 305 304 306 17 (set (reg:SF 158 [ _72 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 157 [ _71 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 355)) [3 *s2_270(D) S4 A32])) "../src/spline.f":732 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 355)
        (expr_list:REG_DEAD (reg:DI 157 [ _71 ])
            (nil))))
(insn 306 305 307 17 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 154 [ _68 ])
            (reg:SF 158 [ _72 ]))) "../src/spline.f":732 51 {*cmpiusf}
     (expr_list:REG_DEAD (reg:SF 158 [ _72 ])
        (expr_list:REG_DEAD (reg:SF 154 [ _68 ])
            (nil))))
(jump_insn 307 306 311 17 (set (pc)
        (if_then_else (unle (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 791)
            (pc))) "../src/spline.f":732 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil))
 -> 791)
;;  succ:       18 (FALLTHRU)
;;              19
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 18, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 17, next block 19, flags: (RTL)
;;  pred:       16
;;              17 (FALLTHRU)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 234
(code_label 311 307 312 18 189 (nil) [1 uses])
(note 312 311 313 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 313 312 792 18 (set (reg:QI 234 [ iftmp.284_159 ])
        (const_int 1 [0x1])) "../src/spline.f":732 84 {*movqi_internal}
     (nil))
(jump_insn 792 313 793 18 (set (pc)
        (label_ref 319)) "../src/spline.f":732 649 {jump}
     (nil)
 -> 319)
;;  succ:       20 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 234

(barrier 793 792 791)
;; basic block 19, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 18, next block 20, flags: (RTL)
;;  pred:       17
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 234
(code_label 791 793 317 19 218 (nil) [1 uses])
(note 317 791 318 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 318 317 319 19 (set (reg:QI 234 [ iftmp.284_159 ])
        (const_int 0 [0])) "../src/spline.f":732 84 {*movqi_internal}
     (nil))
;;  succ:       20 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 234

;; basic block 20, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 19, next block 21, flags: (RTL)
;;  pred:       19 (FALLTHRU)
;;              18 [100.0%] 
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 234
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 234
;; lr  def 	 17 [flags] 159
(code_label 319 318 320 20 192 (nil) [1 uses])
(note 320 319 321 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 321 320 322 20 (set (reg:SI 159 [ iftmp.285_73 ])
        (zero_extend:SI (reg:QI 234 [ iftmp.284_159 ]))) "../src/spline.f":732 136 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 234 [ iftmp.284_159 ])
        (nil)))
(insn 322 321 323 20 (parallel [
            (set (reg:SI 159 [ iftmp.285_73 ])
                (and:SI (reg:SI 159 [ iftmp.285_73 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":732 391 {*andsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 323 322 324 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 159 [ iftmp.285_73 ])
            (const_int 0 [0]))) "../src/spline.f":732 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 159 [ iftmp.285_73 ])
        (nil)))
(jump_insn 324 323 325 20 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 363)
            (pc))) "../src/spline.f":732 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 363)
;;  succ:       21 (FALLTHRU)
;;              26
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 21, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 20, next block 22, flags: (RTL)
;;  pred:       20 (FALLTHRU)
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 160 161 162 231 291 356 357
(note 325 324 326 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 326 325 327 21 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [9 clip2+0 S4 A32])
        (const_int 1 [0x1])) "../src/spline.f":733 82 {*movsi_internal}
     (nil))
(insn 327 326 328 21 (set (reg/f:DI 356)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -680 [0xfffffffffffffd58])) [4 ss2+0 S8 A64])) "../src/spline.f":734 81 {*movdi_internal}
     (nil))
(insn 328 327 329 21 (set (reg:SF 231 [ M.127_156 ])
        (mem:SF (reg/f:DI 356) [3 *ss2_246(D)+0 S4 A32])) "../src/spline.f":734 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 356)
        (nil)))
(insn 329 328 330 21 (set (reg/f:DI 357)
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 56 [0x38])) [5 s2+0 S8 A64])) "../src/spline.f":734 81 {*movdi_internal}
     (nil))
(insn 330 329 331 21 (set (reg:SF 291 [ _276 ])
        (mem:SF (reg/f:DI 357) [3 *s2_270(D)+0 S4 A32])) "../src/spline.f":734 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 357)
        (nil)))
(insn 331 330 332 21 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 291 [ _276 ])
            (reg:SF 231 [ M.127_156 ]))) "../src/spline.f":734 51 {*cmpiusf}
     (nil))
(insn 332 331 333 21 (set (reg:QI 160 [ _74 ])
        (gt:QI (reg:CCFPU 17 flags)
            (const_int 0 [0]))) "../src/spline.f":734 613 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil)))
(insn 333 332 334 21 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 231 [ M.127_156 ])
            (reg:SF 231 [ M.127_156 ]))) "../src/spline.f":734 51 {*cmpiusf}
     (nil))
(insn 334 333 335 21 (set (reg:QI 161 [ _75 ])
        (unordered:QI (reg:CCFPU 17 flags)
            (const_int 0 [0]))) "../src/spline.f":734 613 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil)))
(insn 335 334 336 21 (parallel [
            (set (reg:QI 162 [ _76 ])
                (ior:QI (reg:QI 160 [ _74 ])
                    (reg:QI 161 [ _75 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":734 423 {*iorqi_1}
     (expr_list:REG_DEAD (reg:QI 161 [ _75 ])
        (expr_list:REG_DEAD (reg:QI 160 [ _74 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 336 335 337 21 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 162 [ _76 ])
            (const_int 0 [0]))) "../src/spline.f":734 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 162 [ _76 ])
        (nil)))
(jump_insn 337 336 338 21 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 339)
            (pc))) "../src/spline.f":734 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 339)
;;  succ:       22 (FALLTHRU)
;;              23
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 231 291

;; basic block 22, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 21, next block 23, flags: (RTL)
;;  pred:       21 (FALLTHRU)
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 291
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 291
;; lr  def 	 231
(note 338 337 11 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 11 338 339 22 (set (reg:SF 231 [ M.127_156 ])
        (reg:SF 291 [ _276 ])) "../src/spline.f":734 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 291 [ _276 ])
        (nil)))
;;  succ:       23 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 231

;; basic block 23, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 22, next block 24, flags: (RTL)
;;  pred:       21
;;              22 (FALLTHRU)
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 231
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 231
;; lr  def 	 17 [flags] 163 164 165 166 167 168 232 292 358 359 360 361
(code_label 339 11 340 23 194 (nil) [1 uses])
(note 340 339 341 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 341 340 342 23 (set (reg/f:DI 358)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -680 [0xfffffffffffffd58])) [4 ss2+0 S8 A64])) "../src/spline.f":734 81 {*movdi_internal}
     (nil))
(insn 342 341 343 23 (set (mem:SF (reg/f:DI 358) [3 *ss2_246(D)+0 S4 A32])
        (reg:SF 231 [ M.127_156 ])) "../src/spline.f":734 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 358)
        (expr_list:REG_DEAD (reg:SF 231 [ M.127_156 ])
            (nil))))
(insn 343 342 344 23 (set (reg/f:DI 359)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -680 [0xfffffffffffffd58])) [4 ss2+0 S8 A64])) "../src/spline.f":735 81 {*movdi_internal}
     (nil))
(insn 344 343 345 23 (set (reg:SF 232 [ M.128_157 ])
        (mem:SF (reg/f:DI 359) [3 *ss2_246(D)+0 S4 A32])) "../src/spline.f":735 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 359)
        (nil)))
(insn 345 344 346 23 (set (reg/f:DI 360)
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 64 [0x40])) [6 n2+0 S8 A64])) "../src/spline.f":735 81 {*movdi_internal}
     (nil))
(insn 346 345 347 23 (set (reg:SI 163 [ _77 ])
        (mem:SI (reg/f:DI 360) [1 *n2_178(D)+0 S4 A32])) "../src/spline.f":735 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 360)
        (nil)))
(insn 347 346 348 23 (set (reg:DI 164 [ _78 ])
        (sign_extend:DI (reg:SI 163 [ _77 ]))) "../src/spline.f":735 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 163 [ _77 ])
        (nil)))
(insn 348 347 349 23 (parallel [
            (set (reg:DI 165 [ _79 ])
                (plus:DI (reg:DI 164 [ _78 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":735 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 164 [ _78 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 349 348 350 23 (set (reg/f:DI 361)
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 56 [0x38])) [5 s2+0 S8 A64])) "../src/spline.f":735 81 {*movdi_internal}
     (nil))
(insn 350 349 351 23 (set (reg:SF 292 [ _281 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 165 [ _79 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 361)) [3 *s2_270(D) S4 A32])) "../src/spline.f":735 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 361)
        (expr_list:REG_DEAD (reg:DI 165 [ _79 ])
            (nil))))
(insn 351 350 352 23 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 232 [ M.128_157 ])
            (reg:SF 292 [ _281 ]))) "../src/spline.f":735 51 {*cmpiusf}
     (nil))
(insn 352 351 353 23 (set (reg:QI 166 [ _80 ])
        (gt:QI (reg:CCFPU 17 flags)
            (const_int 0 [0]))) "../src/spline.f":735 613 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil)))
(insn 353 352 354 23 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 232 [ M.128_157 ])
            (reg:SF 232 [ M.128_157 ]))) "../src/spline.f":735 51 {*cmpiusf}
     (nil))
(insn 354 353 355 23 (set (reg:QI 167 [ _81 ])
        (unordered:QI (reg:CCFPU 17 flags)
            (const_int 0 [0]))) "../src/spline.f":735 613 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil)))
(insn 355 354 356 23 (parallel [
            (set (reg:QI 168 [ _82 ])
                (ior:QI (reg:QI 166 [ _80 ])
                    (reg:QI 167 [ _81 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":735 423 {*iorqi_1}
     (expr_list:REG_DEAD (reg:QI 167 [ _81 ])
        (expr_list:REG_DEAD (reg:QI 166 [ _80 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 356 355 357 23 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 168 [ _82 ])
            (const_int 0 [0]))) "../src/spline.f":735 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 168 [ _82 ])
        (nil)))
(jump_insn 357 356 358 23 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 359)
            (pc))) "../src/spline.f":735 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 359)
;;  succ:       24 (FALLTHRU)
;;              25
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 232 292

;; basic block 24, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 23, next block 25, flags: (RTL)
;;  pred:       23 (FALLTHRU)
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 292
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 292
;; lr  def 	 232
(note 358 357 12 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 12 358 359 24 (set (reg:SF 232 [ M.128_157 ])
        (reg:SF 292 [ _281 ])) "../src/spline.f":735 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 292 [ _281 ])
        (nil)))
;;  succ:       25 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 232

;; basic block 25, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 24, next block 26, flags: (RTL)
;;  pred:       23
;;              24 (FALLTHRU)
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 232
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 232
;; lr  def 	 362
(code_label 359 12 360 25 195 (nil) [1 uses])
(note 360 359 361 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 361 360 362 25 (set (reg/f:DI 362)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -680 [0xfffffffffffffd58])) [4 ss2+0 S8 A64])) "../src/spline.f":735 81 {*movdi_internal}
     (nil))
(insn 362 361 363 25 (set (mem:SF (reg/f:DI 362) [3 *ss2_246(D)+0 S4 A32])
        (reg:SF 232 [ M.128_157 ])) "../src/spline.f":735 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 362)
        (expr_list:REG_DEAD (reg:SF 232 [ M.128_157 ])
            (nil))))
;;  succ:       26 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 26, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 25, next block 27, flags: (RTL)
;;  pred:       20
;;              25 (FALLTHRU)
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 169 170 171 172 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384 385 386 387 388 389
(code_label 363 362 364 26 193 (nil) [1 uses])
(note 364 363 365 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 365 364 366 26 (set (reg:DI 363)
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 16 [0x10])) [6 n1+0 S8 A64])) "../src/spline.f":738 81 {*movdi_internal}
     (nil))
(insn 366 365 367 26 (set (reg:DI 364)
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 8 [0x8])) [5 s1+0 S8 A64])) "../src/spline.f":738 81 {*movdi_internal}
     (nil))
(insn 367 366 368 26 (set (reg:DI 365)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -696 [0xfffffffffffffd48])) [5 xs1+0 S8 A64])) "../src/spline.f":738 81 {*movdi_internal}
     (nil))
(insn 368 367 369 26 (set (reg:DI 366)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -688 [0xfffffffffffffd50])) [5 x1+0 S8 A64])) "../src/spline.f":738 81 {*movdi_internal}
     (nil))
(insn 369 368 370 26 (set (reg:DI 367)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -672 [0xfffffffffffffd60])) [4 ss1+0 S8 A64])) "../src/spline.f":738 81 {*movdi_internal}
     (nil))
(insn 370 369 371 26 (set (reg:DI 37 r8)
        (reg:DI 363)) "../src/spline.f":738 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 363)
        (nil)))
(insn 371 370 372 26 (set (reg:DI 2 cx)
        (reg:DI 364)) "../src/spline.f":738 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 364)
        (nil)))
(insn 372 371 373 26 (set (reg:DI 1 dx)
        (reg:DI 365)) "../src/spline.f":738 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 365)
        (nil)))
(insn 373 372 374 26 (set (reg:DI 4 si)
        (reg:DI 366)) "../src/spline.f":738 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 366)
        (nil)))
(insn 374 373 375 26 (set (reg:DI 5 di)
        (reg:DI 367)) "../src/spline.f":738 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 367)
        (nil)))
(call_insn 375 374 376 26 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("seval_") [flags 0x403]  <function_decl 0x1427e4a00 seval>) [0 seval S1 A8])
            (const_int 0 [0]))) "../src/spline.f":738 665 {*call_value}
     (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (nil)))))))
(insn 376 375 377 26 (set (reg:SF 368)
        (reg:SF 21 xmm0)) "../src/spline.f":738 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 21 xmm0)
        (nil)))
(insn 377 376 378 26 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -124 [0xffffffffffffff84])) [3 xx1+0 S4 A32])
        (reg:SF 368)) "../src/spline.f":738 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 368)
        (nil)))
(insn 378 377 379 26 (set (reg:DI 369)
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 64 [0x40])) [6 n2+0 S8 A64])) "../src/spline.f":739 81 {*movdi_internal}
     (nil))
(insn 379 378 380 26 (set (reg:DI 370)
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 56 [0x38])) [5 s2+0 S8 A64])) "../src/spline.f":739 81 {*movdi_internal}
     (nil))
(insn 380 379 381 26 (set (reg:DI 371)
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 32 [0x20])) [5 xs2+0 S8 A64])) "../src/spline.f":739 81 {*movdi_internal}
     (nil))
(insn 381 380 382 26 (set (reg:DI 372)
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 24 [0x18])) [5 x2+0 S8 A64])) "../src/spline.f":739 81 {*movdi_internal}
     (nil))
(insn 382 381 383 26 (set (reg:DI 373)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -680 [0xfffffffffffffd58])) [4 ss2+0 S8 A64])) "../src/spline.f":739 81 {*movdi_internal}
     (nil))
(insn 383 382 384 26 (set (reg:DI 37 r8)
        (reg:DI 369)) "../src/spline.f":739 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 369)
        (nil)))
(insn 384 383 385 26 (set (reg:DI 2 cx)
        (reg:DI 370)) "../src/spline.f":739 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 370)
        (nil)))
(insn 385 384 386 26 (set (reg:DI 1 dx)
        (reg:DI 371)) "../src/spline.f":739 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 371)
        (nil)))
(insn 386 385 387 26 (set (reg:DI 4 si)
        (reg:DI 372)) "../src/spline.f":739 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 372)
        (nil)))
(insn 387 386 388 26 (set (reg:DI 5 di)
        (reg:DI 373)) "../src/spline.f":739 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 373)
        (nil)))
(call_insn 388 387 389 26 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("seval_") [flags 0x403]  <function_decl 0x1427e4a00 seval>) [0 seval S1 A8])
            (const_int 0 [0]))) "../src/spline.f":739 665 {*call_value}
     (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (nil)))))))
(insn 389 388 390 26 (set (reg:SF 374)
        (reg:SF 21 xmm0)) "../src/spline.f":739 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 21 xmm0)
        (nil)))
(insn 390 389 391 26 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -128 [0xffffffffffffff80])) [3 xx2+0 S4 A32])
        (reg:SF 374)) "../src/spline.f":739 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 374)
        (nil)))
(insn 391 390 392 26 (set (reg:DI 375)
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 16 [0x10])) [6 n1+0 S8 A64])) "../src/spline.f":740 81 {*movdi_internal}
     (nil))
(insn 392 391 393 26 (set (reg:DI 376)
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 8 [0x8])) [5 s1+0 S8 A64])) "../src/spline.f":740 81 {*movdi_internal}
     (nil))
(insn 393 392 394 26 (set (reg:DI 377)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -704 [0xfffffffffffffd40])) [5 y1+0 S8 A64])) "../src/spline.f":740 81 {*movdi_internal}
     (nil))
(insn 394 393 395 26 (set (reg:DI 378)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -672 [0xfffffffffffffd60])) [4 ss1+0 S8 A64])) "../src/spline.f":740 81 {*movdi_internal}
     (nil))
(insn 395 394 396 26 (set (reg:DI 37 r8)
        (reg:DI 375)) "../src/spline.f":740 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 375)
        (nil)))
(insn 396 395 397 26 (set (reg:DI 2 cx)
        (reg:DI 376)) "../src/spline.f":740 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 376)
        (nil)))
(insn 397 396 398 26 (set (reg:DI 1 dx)
        (mem/f/c:DI (reg/f:DI 16 argp) [5 ys1+0 S8 A64])) "../src/spline.f":740 81 {*movdi_internal}
     (nil))
(insn 398 397 399 26 (set (reg:DI 4 si)
        (reg:DI 377)) "../src/spline.f":740 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 377)
        (nil)))
(insn 399 398 400 26 (set (reg:DI 5 di)
        (reg:DI 378)) "../src/spline.f":740 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 378)
        (nil)))
(call_insn 400 399 401 26 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("seval_") [flags 0x403]  <function_decl 0x1427e4a00 seval>) [0 seval S1 A8])
            (const_int 0 [0]))) "../src/spline.f":740 665 {*call_value}
     (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (nil)))))))
(insn 401 400 402 26 (set (reg:SF 379)
        (reg:SF 21 xmm0)) "../src/spline.f":740 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 21 xmm0)
        (nil)))
(insn 402 401 403 26 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -132 [0xffffffffffffff7c])) [3 yy1+0 S4 A32])
        (reg:SF 379)) "../src/spline.f":740 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 379)
        (nil)))
(insn 403 402 404 26 (set (reg:DI 380)
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 64 [0x40])) [6 n2+0 S8 A64])) "../src/spline.f":741 81 {*movdi_internal}
     (nil))
(insn 404 403 405 26 (set (reg:DI 381)
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 56 [0x38])) [5 s2+0 S8 A64])) "../src/spline.f":741 81 {*movdi_internal}
     (nil))
(insn 405 404 406 26 (set (reg:DI 382)
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 48 [0x30])) [5 ys2+0 S8 A64])) "../src/spline.f":741 81 {*movdi_internal}
     (nil))
(insn 406 405 407 26 (set (reg:DI 383)
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 40 [0x28])) [5 y2+0 S8 A64])) "../src/spline.f":741 81 {*movdi_internal}
     (nil))
(insn 407 406 408 26 (set (reg:DI 384)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -680 [0xfffffffffffffd58])) [4 ss2+0 S8 A64])) "../src/spline.f":741 81 {*movdi_internal}
     (nil))
(insn 408 407 409 26 (set (reg:DI 37 r8)
        (reg:DI 380)) "../src/spline.f":741 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 380)
        (nil)))
(insn 409 408 410 26 (set (reg:DI 2 cx)
        (reg:DI 381)) "../src/spline.f":741 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 381)
        (nil)))
(insn 410 409 411 26 (set (reg:DI 1 dx)
        (reg:DI 382)) "../src/spline.f":741 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 382)
        (nil)))
(insn 411 410 412 26 (set (reg:DI 4 si)
        (reg:DI 383)) "../src/spline.f":741 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 383)
        (nil)))
(insn 412 411 413 26 (set (reg:DI 5 di)
        (reg:DI 384)) "../src/spline.f":741 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 384)
        (nil)))
(call_insn 413 412 414 26 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("seval_") [flags 0x403]  <function_decl 0x1427e4a00 seval>) [0 seval S1 A8])
            (const_int 0 [0]))) "../src/spline.f":741 665 {*call_value}
     (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (nil)))))))
(insn 414 413 415 26 (set (reg:SF 385)
        (reg:SF 21 xmm0)) "../src/spline.f":741 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 21 xmm0)
        (nil)))
(insn 415 414 416 26 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -136 [0xffffffffffffff78])) [3 yy2+0 S4 A32])
        (reg:SF 385)) "../src/spline.f":741 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 385)
        (nil)))
(insn 416 415 417 26 (set (reg:SF 386)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -124 [0xffffffffffffff84])) [3 xx1+0 S4 A32])) "../src/spline.f":743 127 {*movsf_internal}
     (nil))
(insn 417 416 418 26 (set (reg:SF 169 [ _83 ])
        (minus:SF (reg:SF 386)
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -128 [0xffffffffffffff80])) [3 xx2+0 S4 A32]))) "../src/spline.f":743 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 386)
        (nil)))
(insn 418 417 419 26 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -168 [0xffffffffffffff58])) [3 rs1+0 S4 A64])
        (reg:SF 169 [ _83 ])) "../src/spline.f":743 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 169 [ _83 ])
        (nil)))
(insn 419 418 420 26 (set (reg:SF 387)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -132 [0xffffffffffffff7c])) [3 yy1+0 S4 A32])) "../src/spline.f":744 127 {*movsf_internal}
     (nil))
(insn 420 419 421 26 (set (reg:SF 170 [ _84 ])
        (minus:SF (reg:SF 387)
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -136 [0xffffffffffffff78])) [3 yy2+0 S4 A32]))) "../src/spline.f":744 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 387)
        (nil)))
(insn 421 420 422 26 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -172 [0xffffffffffffff54])) [3 rs2+0 S4 A32])
        (reg:SF 170 [ _84 ])) "../src/spline.f":744 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 170 [ _84 ])
        (nil)))
(insn 422 421 423 26 (set (reg:SF 171 [ rs1.287_85 ])
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -168 [0xffffffffffffff58])) [3 rs1+0 S4 A64])) "../src/spline.f":746 127 {*movsf_internal}
     (nil))
(insn 423 422 424 26 (set (reg:V4SF 388)
        (mem/u/c:V4SF (symbol_ref/u:DI ("*lC13") [flags 0x2]) [3  S16 A128])) "../src/spline.f":746 1225 {movv4sf_internal}
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF +QNaN [+QNaN])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 424 423 425 26 (parallel [
            (set (reg:SF 172 [ _86 ])
                (abs:SF (reg:SF 171 [ rs1.287_85 ])))
            (use (reg:V4SF 388))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":746 470 {*absnegsf2}
     (expr_list:REG_DEAD (reg:V4SF 388)
        (expr_list:REG_DEAD (reg:SF 171 [ rs1.287_85 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (abs:SF (reg:SF 171 [ rs1.287_85 ]))
                    (nil))))))
(insn 425 424 426 26 (set (reg:SF 389)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -116 [0xffffffffffffff8c])) [3 rs1old+0 S4 A32])) "../src/spline.f":746 127 {*movsf_internal}
     (nil))
(insn 426 425 427 26 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 389)
            (reg:SF 172 [ _86 ]))) "../src/spline.f":746 51 {*cmpiusf}
     (expr_list:REG_DEAD (reg:SF 389)
        (expr_list:REG_DEAD (reg:SF 172 [ _86 ])
            (nil))))
(jump_insn 427 426 431 26 (set (pc)
        (if_then_else (unle (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 445)
            (pc))) "../src/spline.f":746 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil))
 -> 445)
;;  succ:       27 (FALLTHRU)
;;              29
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 27, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 26, next block 28, flags: (RTL)
;;  pred:       26 (FALLTHRU)
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 173 174 390 391
(note 431 427 432 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 432 431 433 27 (set (reg:SF 173 [ rs2.288_87 ])
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -172 [0xffffffffffffff54])) [3 rs2+0 S4 A32])) "../src/spline.f":746 127 {*movsf_internal}
     (nil))
(insn 433 432 434 27 (set (reg:V4SF 390)
        (mem/u/c:V4SF (symbol_ref/u:DI ("*lC13") [flags 0x2]) [3  S16 A128])) "../src/spline.f":746 1225 {movv4sf_internal}
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF +QNaN [+QNaN])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 434 433 435 27 (parallel [
            (set (reg:SF 174 [ _88 ])
                (abs:SF (reg:SF 173 [ rs2.288_87 ])))
            (use (reg:V4SF 390))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":746 470 {*absnegsf2}
     (expr_list:REG_DEAD (reg:V4SF 390)
        (expr_list:REG_DEAD (reg:SF 173 [ rs2.288_87 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (abs:SF (reg:SF 173 [ rs2.288_87 ]))
                    (nil))))))
(insn 435 434 436 27 (set (reg:SF 391)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -120 [0xffffffffffffff88])) [3 rs2old+0 S4 A32])) "../src/spline.f":746 127 {*movsf_internal}
     (nil))
(insn 436 435 437 27 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 391)
            (reg:SF 174 [ _88 ]))) "../src/spline.f":746 51 {*cmpiusf}
     (expr_list:REG_DEAD (reg:SF 391)
        (expr_list:REG_DEAD (reg:SF 174 [ _88 ])
            (nil))))
(jump_insn 437 436 441 27 (set (pc)
        (if_then_else (unle (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 445)
            (pc))) "../src/spline.f":746 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil))
 -> 445)
;;  succ:       28 (FALLTHRU)
;;              29
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 28, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 27, next block 29, flags: (RTL)
;;  pred:       27 (FALLTHRU)
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 235
(note 441 437 442 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 442 441 794 28 (set (reg:QI 235 [ iftmp.286_160 ])
        (const_int 1 [0x1])) "../src/spline.f":746 84 {*movqi_internal}
     (nil))
(jump_insn 794 442 795 28 (set (pc)
        (label_ref 448)) "../src/spline.f":746 649 {jump}
     (nil)
 -> 448)
;;  succ:       30 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 235

(barrier 795 794 445)
;; basic block 29, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 28, next block 30, flags: (RTL)
;;  pred:       26
;;              27
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 235
(code_label 445 795 446 29 196 (nil) [2 uses])
(note 446 445 447 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 447 446 448 29 (set (reg:QI 235 [ iftmp.286_160 ])
        (const_int 0 [0])) "../src/spline.f":746 84 {*movqi_internal}
     (nil))
;;  succ:       30 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 235

;; basic block 30, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 29, next block 31, flags: (RTL)
;;  pred:       29 (FALLTHRU)
;;              28 [100.0%] 
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 235
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 235
;; lr  def 	 17 [flags] 175
(code_label 448 447 449 30 199 (nil) [1 uses])
(note 449 448 450 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 450 449 451 30 (set (reg:SI 175 [ iftmp.289_89 ])
        (zero_extend:SI (reg:QI 235 [ iftmp.286_160 ]))) "../src/spline.f":746 136 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 235 [ iftmp.286_160 ])
        (nil)))
(insn 451 450 452 30 (parallel [
            (set (reg:SI 175 [ iftmp.289_89 ])
                (and:SI (reg:SI 175 [ iftmp.289_89 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":746 391 {*andsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 452 451 453 30 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 175 [ iftmp.289_89 ])
            (const_int 0 [0]))) "../src/spline.f":746 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 175 [ iftmp.289_89 ])
        (nil)))
(jump_insn 453 452 458 30 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 811)
            (pc))) "../src/spline.f":746 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 811)
;;  succ:       47
;;              31 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 31, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 30, next block 46, flags: (RTL)
;;  pred:       30 (FALLTHRU)
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 392 393 394
(note 458 453 459 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 459 458 460 31 (set (reg:SF 393)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [3 rlx+0 S4 A32])) "../src/spline.f":749 127 {*movsf_internal}
     (nil))
(insn 460 459 461 31 (set (reg:SF 394)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC10") [flags 0x2]) [3  S4 A32])) "../src/spline.f":749 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 5.0e-1 [0x0.8p+0])
        (nil)))
(insn 461 460 462 31 (set (reg:SF 392)
        (mult:SF (reg:SF 393)
            (reg:SF 394))) "../src/spline.f":749 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 394)
        (expr_list:REG_DEAD (reg:SF 393)
            (nil))))
(insn 462 461 463 31 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [3 rlx+0 S4 A32])
        (reg:SF 392)) "../src/spline.f":749 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 392)
        (nil)))
(insn 463 462 796 31 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -12 [0xfffffffffffffff4])) [1 irlx+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -12 [0xfffffffffffffff4])) [1 irlx+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":720 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 796 463 797 31 (set (pc)
        (label_ref 464)) "../src/spline.f":720 649 {jump}
     (nil)
 -> 464)
;;  succ:       5 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 797 796 806)
;; basic block 46, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 31, next block 32, flags: (RTL)
;;  pred:       5
;; bb 46 artificial_defs: { }
;; bb 46 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 806 797 805 46 220 (nil) [1 uses])
(note 805 806 807 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 807 805 467 46 (const_int 0 [0]) "../src/spline.f":751 682 {nop}
     (nil))
;;  succ:       32 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 32, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 46, next block 47, flags: (RTL)
;;  pred:       46 [100.0%]  (FALLTHRU)
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 395 396 397 398
(code_label 467 807 468 32 181 (nil) [0 uses])
(note 468 467 469 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 469 468 470 32 (set (reg/f:DI 395)
        (symbol_ref/f:DI ("*lC15") [flags 0x2]  <var_decl 0x143540c60 *lC15>)) "../src/spline.f":752 81 {*movdi_internal}
     (nil))
(insn 470 469 471 32 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -648 [0xfffffffffffffd78])) [12 dt_parm.129.common.filename+0 S8 A64])
        (reg/f:DI 395)) "../src/spline.f":752 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 395)
        (nil)))
(insn 471 470 472 32 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -640 [0xfffffffffffffd80])) [1 dt_parm.129.common.line+0 S4 A128])
        (const_int 752 [0x2f0])) "../src/spline.f":752 82 {*movsi_internal}
     (nil))
(insn 472 471 473 32 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -656 [0xfffffffffffffd70])) [1 dt_parm.129.common.flags+0 S4 A128])
        (const_int 128 [0x80])) "../src/spline.f":752 82 {*movsi_internal}
     (nil))
(insn 473 472 474 32 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -652 [0xfffffffffffffd74])) [1 dt_parm.129.common.unit+0 S4 A32])
        (const_int 6 [0x6])) "../src/spline.f":752 82 {*movsi_internal}
     (nil))
(insn 474 473 475 32 (parallel [
            (set (reg:DI 396)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -656 [0xfffffffffffffd70])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":752 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 475 474 476 32 (set (reg:DI 5 di)
        (reg:DI 396)) "../src/spline.f":752 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 396)
        (nil)))
(call_insn 476 475 477 32 (call (mem:QI (symbol_ref:DI ("_gfortran_st_write") [flags 0x41]  <function_decl 0x1427e0800 _gfortran_st_write>) [0 _gfortran_st_write S1 A8])
        (const_int 0 [0])) "../src/spline.f":752 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 477 476 478 32 (parallel [
            (set (reg:DI 397)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -656 [0xfffffffffffffd70])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":752 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 478 477 479 32 (set (reg:SI 1 dx)
        (const_int 37 [0x25])) "../src/spline.f":752 82 {*movsi_internal}
     (nil))
(insn 479 478 480 32 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*lC22") [flags 0x2]  <var_decl 0x143594ea0 *lC22>)) "../src/spline.f":752 81 {*movdi_internal}
     (nil))
(insn 480 479 481 32 (set (reg:DI 5 di)
        (reg:DI 397)) "../src/spline.f":752 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 397)
        (nil)))
(call_insn 481 480 482 32 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_character_write") [flags 0x41]  <function_decl 0x1427d4900 _gfortran_transfer_character_write>) [0 _gfortran_transfer_character_write S1 A8])
        (const_int 0 [0])) "../src/spline.f":752 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 482 481 483 32 (parallel [
            (set (reg:DI 398)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -656 [0xfffffffffffffd70])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":752 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 483 482 484 32 (set (reg:DI 5 di)
        (reg:DI 398)) "../src/spline.f":752 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 398)
        (nil)))
(call_insn 484 483 808 32 (call (mem:QI (symbol_ref:DI ("_gfortran_st_write_done") [flags 0x41]  <function_decl 0x1427e4300 _gfortran_st_write_done>) [0 _gfortran_st_write_done S1 A8])
        (const_int 0 [0])) "../src/spline.f":752 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 808 484 809 32 (set (pc)
        (label_ref 485)) 649 {jump}
     (nil)
 -> 485)
;;  succ:       33
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 809 808 811)
;; basic block 47, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 32, next block 33, flags: (RTL)
;;  pred:       30
;; bb 47 artificial_defs: { }
;; bb 47 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 811 809 810 47 221 (nil) [1 uses])
(note 810 811 812 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 812 810 485 47 (const_int 0 [0]) "../src/spline.f":747 682 {nop}
     (nil))
;;  succ:       33 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 33, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 47, next block 34, flags: (RTL)
;;  pred:       47 [100.0%]  (FALLTHRU)
;;              32
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 419 420 421 422 423 424 425 426 427 428 429 430 431 432
(code_label 485 812 486 33 201 (nil) [1 uses])
(note 486 485 487 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 487 486 488 33 (set (reg:DI 399)
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 16 [0x10])) [6 n1+0 S8 A64])) "../src/spline.f":755 81 {*movdi_internal}
     (nil))
(insn 488 487 489 33 (set (reg:DI 400)
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 8 [0x8])) [5 s1+0 S8 A64])) "../src/spline.f":755 81 {*movdi_internal}
     (nil))
(insn 489 488 490 33 (set (reg:DI 401)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -696 [0xfffffffffffffd48])) [5 xs1+0 S8 A64])) "../src/spline.f":755 81 {*movdi_internal}
     (nil))
(insn 490 489 491 33 (set (reg:DI 402)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -688 [0xfffffffffffffd50])) [5 x1+0 S8 A64])) "../src/spline.f":755 81 {*movdi_internal}
     (nil))
(insn 491 490 492 33 (set (reg:DI 403)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -672 [0xfffffffffffffd60])) [4 ss1+0 S8 A64])) "../src/spline.f":755 81 {*movdi_internal}
     (nil))
(insn 492 491 493 33 (set (reg:DI 37 r8)
        (reg:DI 399)) "../src/spline.f":755 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 399)
        (nil)))
(insn 493 492 494 33 (set (reg:DI 2 cx)
        (reg:DI 400)) "../src/spline.f":755 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 400)
        (nil)))
(insn 494 493 495 33 (set (reg:DI 1 dx)
        (reg:DI 401)) "../src/spline.f":755 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 401)
        (nil)))
(insn 495 494 496 33 (set (reg:DI 4 si)
        (reg:DI 402)) "../src/spline.f":755 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 402)
        (nil)))
(insn 496 495 497 33 (set (reg:DI 5 di)
        (reg:DI 403)) "../src/spline.f":755 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 403)
        (nil)))
(call_insn 497 496 498 33 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("deval_") [flags 0x403]  <function_decl 0x1427e4900 deval>) [0 deval S1 A8])
            (const_int 0 [0]))) "../src/spline.f":755 665 {*call_value}
     (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (nil)))))))
(insn 498 497 499 33 (set (reg:SF 404)
        (reg:SF 21 xmm0)) "../src/spline.f":755 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 21 xmm0)
        (nil)))
(insn 499 498 500 33 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -140 [0xffffffffffffff74])) [3 a11+0 S4 A32])
        (reg:SF 404)) "../src/spline.f":755 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 404)
        (nil)))
(insn 500 499 501 33 (set (reg:DI 405)
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 64 [0x40])) [6 n2+0 S8 A64])) "../src/spline.f":756 81 {*movdi_internal}
     (nil))
(insn 501 500 502 33 (set (reg:DI 406)
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 56 [0x38])) [5 s2+0 S8 A64])) "../src/spline.f":756 81 {*movdi_internal}
     (nil))
(insn 502 501 503 33 (set (reg:DI 407)
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 32 [0x20])) [5 xs2+0 S8 A64])) "../src/spline.f":756 81 {*movdi_internal}
     (nil))
(insn 503 502 504 33 (set (reg:DI 408)
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 24 [0x18])) [5 x2+0 S8 A64])) "../src/spline.f":756 81 {*movdi_internal}
     (nil))
(insn 504 503 505 33 (set (reg:DI 409)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -680 [0xfffffffffffffd58])) [4 ss2+0 S8 A64])) "../src/spline.f":756 81 {*movdi_internal}
     (nil))
(insn 505 504 506 33 (set (reg:DI 37 r8)
        (reg:DI 405)) "../src/spline.f":756 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 405)
        (nil)))
(insn 506 505 507 33 (set (reg:DI 2 cx)
        (reg:DI 406)) "../src/spline.f":756 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 406)
        (nil)))
(insn 507 506 508 33 (set (reg:DI 1 dx)
        (reg:DI 407)) "../src/spline.f":756 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 407)
        (nil)))
(insn 508 507 509 33 (set (reg:DI 4 si)
        (reg:DI 408)) "../src/spline.f":756 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 408)
        (nil)))
(insn 509 508 510 33 (set (reg:DI 5 di)
        (reg:DI 409)) "../src/spline.f":756 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 409)
        (nil)))
(call_insn 510 509 511 33 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("deval_") [flags 0x403]  <function_decl 0x1427e4900 deval>) [0 deval S1 A8])
            (const_int 0 [0]))) "../src/spline.f":756 665 {*call_value}
     (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (nil)))))))
(insn 511 510 512 33 (set (reg:SF 176 [ _90 ])
        (reg:SF 21 xmm0)) "../src/spline.f":756 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 21 xmm0)
        (nil)))
(insn 512 511 513 33 (set (reg:V4SF 411)
        (mem/u/c:V4SF (symbol_ref/u:DI ("*lC23") [flags 0x2]) [3  S16 A128])) "../src/spline.f":756 1225 {movv4sf_internal}
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF -0.0 [-0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 513 512 514 33 (parallel [
            (set (reg:SF 410)
                (neg:SF (reg:SF 176 [ _90 ])))
            (use (reg:V4SF 411))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":756 470 {*absnegsf2}
     (expr_list:REG_DEAD (reg:V4SF 411)
        (expr_list:REG_DEAD (reg:SF 176 [ _90 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (neg:SF (reg:SF 176 [ _90 ]))
                    (nil))))))
(insn 514 513 515 33 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -144 [0xffffffffffffff70])) [3 a12+0 S4 A32])
        (reg:SF 410)) "../src/spline.f":756 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 410)
        (nil)))
(insn 515 514 516 33 (set (reg:DI 412)
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 16 [0x10])) [6 n1+0 S8 A64])) "../src/spline.f":757 81 {*movdi_internal}
     (nil))
(insn 516 515 517 33 (set (reg:DI 413)
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 8 [0x8])) [5 s1+0 S8 A64])) "../src/spline.f":757 81 {*movdi_internal}
     (nil))
(insn 517 516 518 33 (set (reg:DI 414)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -704 [0xfffffffffffffd40])) [5 y1+0 S8 A64])) "../src/spline.f":757 81 {*movdi_internal}
     (nil))
(insn 518 517 519 33 (set (reg:DI 415)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -672 [0xfffffffffffffd60])) [4 ss1+0 S8 A64])) "../src/spline.f":757 81 {*movdi_internal}
     (nil))
(insn 519 518 520 33 (set (reg:DI 37 r8)
        (reg:DI 412)) "../src/spline.f":757 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 412)
        (nil)))
(insn 520 519 521 33 (set (reg:DI 2 cx)
        (reg:DI 413)) "../src/spline.f":757 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 413)
        (nil)))
(insn 521 520 522 33 (set (reg:DI 1 dx)
        (mem/f/c:DI (reg/f:DI 16 argp) [5 ys1+0 S8 A64])) "../src/spline.f":757 81 {*movdi_internal}
     (nil))
(insn 522 521 523 33 (set (reg:DI 4 si)
        (reg:DI 414)) "../src/spline.f":757 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 414)
        (nil)))
(insn 523 522 524 33 (set (reg:DI 5 di)
        (reg:DI 415)) "../src/spline.f":757 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 415)
        (nil)))
(call_insn 524 523 525 33 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("deval_") [flags 0x403]  <function_decl 0x1427e4900 deval>) [0 deval S1 A8])
            (const_int 0 [0]))) "../src/spline.f":757 665 {*call_value}
     (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (nil)))))))
(insn 525 524 526 33 (set (reg:SF 416)
        (reg:SF 21 xmm0)) "../src/spline.f":757 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 21 xmm0)
        (nil)))
(insn 526 525 527 33 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -148 [0xffffffffffffff6c])) [3 a21+0 S4 A32])
        (reg:SF 416)) "../src/spline.f":757 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 416)
        (nil)))
(insn 527 526 528 33 (set (reg:DI 417)
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 64 [0x40])) [6 n2+0 S8 A64])) "../src/spline.f":758 81 {*movdi_internal}
     (nil))
(insn 528 527 529 33 (set (reg:DI 418)
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 56 [0x38])) [5 s2+0 S8 A64])) "../src/spline.f":758 81 {*movdi_internal}
     (nil))
(insn 529 528 530 33 (set (reg:DI 419)
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 48 [0x30])) [5 ys2+0 S8 A64])) "../src/spline.f":758 81 {*movdi_internal}
     (nil))
(insn 530 529 531 33 (set (reg:DI 420)
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 40 [0x28])) [5 y2+0 S8 A64])) "../src/spline.f":758 81 {*movdi_internal}
     (nil))
(insn 531 530 532 33 (set (reg:DI 421)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -680 [0xfffffffffffffd58])) [4 ss2+0 S8 A64])) "../src/spline.f":758 81 {*movdi_internal}
     (nil))
(insn 532 531 533 33 (set (reg:DI 37 r8)
        (reg:DI 417)) "../src/spline.f":758 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 417)
        (nil)))
(insn 533 532 534 33 (set (reg:DI 2 cx)
        (reg:DI 418)) "../src/spline.f":758 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 418)
        (nil)))
(insn 534 533 535 33 (set (reg:DI 1 dx)
        (reg:DI 419)) "../src/spline.f":758 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 419)
        (nil)))
(insn 535 534 536 33 (set (reg:DI 4 si)
        (reg:DI 420)) "../src/spline.f":758 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 420)
        (nil)))
(insn 536 535 537 33 (set (reg:DI 5 di)
        (reg:DI 421)) "../src/spline.f":758 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 421)
        (nil)))
(call_insn 537 536 538 33 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("deval_") [flags 0x403]  <function_decl 0x1427e4900 deval>) [0 deval S1 A8])
            (const_int 0 [0]))) "../src/spline.f":758 665 {*call_value}
     (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (nil)))))))
(insn 538 537 539 33 (set (reg:SF 177 [ _91 ])
        (reg:SF 21 xmm0)) "../src/spline.f":758 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 21 xmm0)
        (nil)))
(insn 539 538 540 33 (set (reg:V4SF 423)
        (mem/u/c:V4SF (symbol_ref/u:DI ("*lC23") [flags 0x2]) [3  S16 A128])) "../src/spline.f":758 1225 {movv4sf_internal}
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF -0.0 [-0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 540 539 541 33 (parallel [
            (set (reg:SF 422)
                (neg:SF (reg:SF 177 [ _91 ])))
            (use (reg:V4SF 423))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":758 470 {*absnegsf2}
     (expr_list:REG_DEAD (reg:V4SF 423)
        (expr_list:REG_DEAD (reg:SF 177 [ _91 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (neg:SF (reg:SF 177 [ _91 ]))
                    (nil))))))
(insn 541 540 542 33 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -152 [0xffffffffffffff68])) [3 a22+0 S4 A32])
        (reg:SF 422)) "../src/spline.f":758 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 422)
        (nil)))
(insn 542 541 543 33 (set (reg:SF 424)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -140 [0xffffffffffffff74])) [3 a11+0 S4 A32])) "../src/spline.f":760 127 {*movsf_internal}
     (nil))
(insn 543 542 544 33 (set (reg:SF 178 [ _92 ])
        (mult:SF (reg:SF 424)
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -152 [0xffffffffffffff68])) [3 a22+0 S4 A32]))) "../src/spline.f":760 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 424)
        (nil)))
(insn 544 543 545 33 (set (reg:SF 425)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -144 [0xffffffffffffff70])) [3 a12+0 S4 A32])) "../src/spline.f":760 127 {*movsf_internal}
     (nil))
(insn 545 544 546 33 (set (reg:SF 179 [ _93 ])
        (mult:SF (reg:SF 425)
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -148 [0xffffffffffffff6c])) [3 a21+0 S4 A32]))) "../src/spline.f":760 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 425)
        (nil)))
(insn 546 545 547 33 (set (reg:SF 426)
        (minus:SF (reg:SF 178 [ _92 ])
            (reg:SF 179 [ _93 ]))) "../src/spline.f":760 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 179 [ _93 ])
        (expr_list:REG_DEAD (reg:SF 178 [ _92 ])
            (nil))))
(insn 547 546 548 33 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -156 [0xffffffffffffff64])) [3 det+0 S4 A32])
        (reg:SF 426)) "../src/spline.f":760 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 426)
        (nil)))
(insn 548 547 549 33 (set (reg:SF 180 [ rs1.290_94 ])
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -168 [0xffffffffffffff58])) [3 rs1+0 S4 A64])) "../src/spline.f":761 127 {*movsf_internal}
     (nil))
(insn 549 548 550 33 (set (reg:SF 181 [ _95 ])
        (mult:SF (reg:SF 180 [ rs1.290_94 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -152 [0xffffffffffffff68])) [3 a22+0 S4 A32]))) "../src/spline.f":761 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 180 [ rs1.290_94 ])
        (nil)))
(insn 550 549 551 33 (set (reg:SF 182 [ rs2.291_96 ])
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -172 [0xffffffffffffff54])) [3 rs2+0 S4 A32])) "../src/spline.f":761 127 {*movsf_internal}
     (nil))
(insn 551 550 552 33 (set (reg:SF 183 [ _97 ])
        (mult:SF (reg:SF 182 [ rs2.291_96 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -144 [0xffffffffffffff70])) [3 a12+0 S4 A32]))) "../src/spline.f":761 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 182 [ rs2.291_96 ])
        (nil)))
(insn 552 551 553 33 (set (reg:SF 184 [ _98 ])
        (minus:SF (reg:SF 181 [ _95 ])
            (reg:SF 183 [ _97 ]))) "../src/spline.f":761 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 183 [ _97 ])
        (expr_list:REG_DEAD (reg:SF 181 [ _95 ])
            (nil))))
(insn 553 552 554 33 (set (reg:SF 185 [ _99 ])
        (reg:SF 184 [ _98 ])) "../src/spline.f":761 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 184 [ _98 ])
        (nil)))
(insn 554 553 555 33 (set (reg:SF 186 [ _100 ])
        (div:SF (reg:SF 185 [ _99 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -156 [0xffffffffffffff64])) [3 det+0 S4 A32]))) "../src/spline.f":761 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 185 [ _99 ])
        (nil)))
(insn 555 554 556 33 (set (reg:V4SF 427)
        (mem/u/c:V4SF (symbol_ref/u:DI ("*lC23") [flags 0x2]) [3  S16 A128])) "../src/spline.f":761 1225 {movv4sf_internal}
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF -0.0 [-0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 556 555 557 33 (parallel [
            (set (reg:SF 187 [ _101 ])
                (neg:SF (reg:SF 186 [ _100 ])))
            (use (reg:V4SF 427))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":761 470 {*absnegsf2}
     (expr_list:REG_DEAD (reg:V4SF 427)
        (expr_list:REG_DEAD (reg:SF 186 [ _100 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (neg:SF (reg:SF 186 [ _100 ]))
                    (nil))))))
(insn 557 556 558 33 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -160 [0xffffffffffffff60])) [3 ds1+0 S4 A128])
        (reg:SF 187 [ _101 ])) "../src/spline.f":761 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 187 [ _101 ])
        (nil)))
(insn 558 557 559 33 (set (reg:SF 188 [ rs2.292_102 ])
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -172 [0xffffffffffffff54])) [3 rs2+0 S4 A32])) "../src/spline.f":762 127 {*movsf_internal}
     (nil))
(insn 559 558 560 33 (set (reg:SF 189 [ _103 ])
        (mult:SF (reg:SF 188 [ rs2.292_102 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -140 [0xffffffffffffff74])) [3 a11+0 S4 A32]))) "../src/spline.f":762 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 188 [ rs2.292_102 ])
        (nil)))
(insn 560 559 561 33 (set (reg:SF 190 [ rs1.293_104 ])
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -168 [0xffffffffffffff58])) [3 rs1+0 S4 A64])) "../src/spline.f":762 127 {*movsf_internal}
     (nil))
(insn 561 560 562 33 (set (reg:SF 191 [ _105 ])
        (mult:SF (reg:SF 190 [ rs1.293_104 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -148 [0xffffffffffffff6c])) [3 a21+0 S4 A32]))) "../src/spline.f":762 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 190 [ rs1.293_104 ])
        (nil)))
(insn 562 561 563 33 (set (reg:SF 192 [ _106 ])
        (minus:SF (reg:SF 189 [ _103 ])
            (reg:SF 191 [ _105 ]))) "../src/spline.f":762 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 191 [ _105 ])
        (expr_list:REG_DEAD (reg:SF 189 [ _103 ])
            (nil))))
(insn 563 562 564 33 (set (reg:SF 193 [ _107 ])
        (reg:SF 192 [ _106 ])) "../src/spline.f":762 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 192 [ _106 ])
        (nil)))
(insn 564 563 565 33 (set (reg:SF 194 [ _108 ])
        (div:SF (reg:SF 193 [ _107 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -156 [0xffffffffffffff64])) [3 det+0 S4 A32]))) "../src/spline.f":762 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 193 [ _107 ])
        (nil)))
(insn 565 564 566 33 (set (reg:V4SF 428)
        (mem/u/c:V4SF (symbol_ref/u:DI ("*lC23") [flags 0x2]) [3  S16 A128])) "../src/spline.f":762 1225 {movv4sf_internal}
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF -0.0 [-0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 566 565 567 33 (parallel [
            (set (reg:SF 195 [ _109 ])
                (neg:SF (reg:SF 194 [ _108 ])))
            (use (reg:V4SF 428))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":762 470 {*absnegsf2}
     (expr_list:REG_DEAD (reg:V4SF 428)
        (expr_list:REG_DEAD (reg:SF 194 [ _108 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (neg:SF (reg:SF 194 [ _108 ]))
                    (nil))))))
(insn 567 566 568 33 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -164 [0xffffffffffffff5c])) [3 ds2+0 S4 A32])
        (reg:SF 195 [ _109 ])) "../src/spline.f":762 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 195 [ _109 ])
        (nil)))
(insn 568 567 569 33 (set (reg:SF 196 [ ds1.295_110 ])
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -160 [0xffffffffffffff60])) [3 ds1+0 S4 A128])) "../src/spline.f":764 127 {*movsf_internal}
     (nil))
(insn 569 568 570 33 (set (reg:V4SF 429)
        (mem/u/c:V4SF (symbol_ref/u:DI ("*lC13") [flags 0x2]) [3  S16 A128])) "../src/spline.f":764 1225 {movv4sf_internal}
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF +QNaN [+QNaN])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 570 569 571 33 (parallel [
            (set (reg:SF 197 [ _111 ])
                (abs:SF (reg:SF 196 [ ds1.295_110 ])))
            (use (reg:V4SF 429))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":764 470 {*absnegsf2}
     (expr_list:REG_DEAD (reg:V4SF 429)
        (expr_list:REG_DEAD (reg:SF 196 [ ds1.295_110 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (abs:SF (reg:SF 196 [ ds1.295_110 ]))
                    (nil))))))
(insn 571 570 572 33 (set (reg/f:DI 430)
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 16 [0x10])) [6 n1+0 S8 A64])) "../src/spline.f":764 81 {*movdi_internal}
     (nil))
(insn 572 571 573 33 (set (reg:SI 198 [ _112 ])
        (mem:SI (reg/f:DI 430) [1 *n1_171(D)+0 S4 A32])) "../src/spline.f":764 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 430)
        (nil)))
(insn 573 572 574 33 (set (reg:DI 199 [ _113 ])
        (sign_extend:DI (reg:SI 198 [ _112 ]))) "../src/spline.f":764 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 198 [ _112 ])
        (nil)))
(insn 574 573 575 33 (parallel [
            (set (reg:DI 200 [ _114 ])
                (plus:DI (reg:DI 199 [ _113 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":764 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 199 [ _113 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 575 574 576 33 (set (reg/f:DI 431)
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 8 [0x8])) [5 s1+0 S8 A64])) "../src/spline.f":764 81 {*movdi_internal}
     (nil))
(insn 576 575 577 33 (set (reg:SF 201 [ _115 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 200 [ _114 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 431)) [3 *s1_256(D) S4 A32])) "../src/spline.f":764 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 431)
        (expr_list:REG_DEAD (reg:DI 200 [ _114 ])
            (nil))))
(insn 577 576 578 33 (set (reg/f:DI 432)
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 8 [0x8])) [5 s1+0 S8 A64])) "../src/spline.f":764 81 {*movdi_internal}
     (nil))
(insn 578 577 579 33 (set (reg:SF 202 [ _116 ])
        (mem:SF (reg/f:DI 432) [3 *s1_256(D)+0 S4 A32])) "../src/spline.f":764 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 432)
        (nil)))
(insn 579 578 580 33 (set (reg:SF 203 [ _117 ])
        (minus:SF (reg:SF 201 [ _115 ])
            (reg:SF 202 [ _116 ]))) "../src/spline.f":764 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 202 [ _116 ])
        (expr_list:REG_DEAD (reg:SF 201 [ _115 ])
            (nil))))
(insn 580 579 581 33 (set (reg:SF 204 [ _118 ])
        (reg:SF 203 [ _117 ])) "../src/spline.f":764 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 203 [ _117 ])
        (nil)))
(insn 581 580 582 33 (set (reg:SF 205 [ eps.296_119 ])
        (mem/c:SF (symbol_ref:DI ("eps.4319") [flags 0x1c02]  <var_decl 0x14325ce10 eps>) [3 eps+0 S4 A32])) "../src/spline.f":764 127 {*movsf_internal}
     (nil))
(insn 582 581 583 33 (set (reg:SF 206 [ _120 ])
        (mult:SF (reg:SF 204 [ _118 ])
            (reg:SF 205 [ eps.296_119 ]))) "../src/spline.f":764 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 205 [ eps.296_119 ])
        (expr_list:REG_DEAD (reg:SF 204 [ _118 ])
            (nil))))
(insn 583 582 584 33 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 206 [ _120 ])
            (reg:SF 197 [ _111 ]))) "../src/spline.f":764 51 {*cmpiusf}
     (expr_list:REG_DEAD (reg:SF 206 [ _120 ])
        (expr_list:REG_DEAD (reg:SF 197 [ _111 ])
            (nil))))
(jump_insn 584 583 588 33 (set (pc)
        (if_then_else (unle (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 613)
            (pc))) "../src/spline.f":764 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil))
 -> 613)
;;  succ:       34 (FALLTHRU)
;;              36
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 34, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 33, next block 35, flags: (RTL)
;;  pred:       33 (FALLTHRU)
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 207 208 209 210 211 212 213 214 215 216 217 433 434 435 436
(note 588 584 589 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 589 588 590 34 (set (reg:SF 207 [ ds2.297_121 ])
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -164 [0xffffffffffffff5c])) [3 ds2+0 S4 A32])) "../src/spline.f":764 127 {*movsf_internal}
     (nil))
(insn 590 589 591 34 (set (reg:V4SF 433)
        (mem/u/c:V4SF (symbol_ref/u:DI ("*lC13") [flags 0x2]) [3  S16 A128])) "../src/spline.f":764 1225 {movv4sf_internal}
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF +QNaN [+QNaN])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 591 590 592 34 (parallel [
            (set (reg:SF 208 [ _122 ])
                (abs:SF (reg:SF 207 [ ds2.297_121 ])))
            (use (reg:V4SF 433))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":764 470 {*absnegsf2}
     (expr_list:REG_DEAD (reg:V4SF 433)
        (expr_list:REG_DEAD (reg:SF 207 [ ds2.297_121 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (abs:SF (reg:SF 207 [ ds2.297_121 ]))
                    (nil))))))
(insn 592 591 593 34 (set (reg/f:DI 434)
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 64 [0x40])) [6 n2+0 S8 A64])) "../src/spline.f":764 81 {*movdi_internal}
     (nil))
(insn 593 592 594 34 (set (reg:SI 209 [ _123 ])
        (mem:SI (reg/f:DI 434) [1 *n2_178(D)+0 S4 A32])) "../src/spline.f":764 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 434)
        (nil)))
(insn 594 593 595 34 (set (reg:DI 210 [ _124 ])
        (sign_extend:DI (reg:SI 209 [ _123 ]))) "../src/spline.f":764 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 209 [ _123 ])
        (nil)))
(insn 595 594 596 34 (parallel [
            (set (reg:DI 211 [ _125 ])
                (plus:DI (reg:DI 210 [ _124 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":764 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 210 [ _124 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 596 595 597 34 (set (reg/f:DI 435)
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 56 [0x38])) [5 s2+0 S8 A64])) "../src/spline.f":764 81 {*movdi_internal}
     (nil))
(insn 597 596 598 34 (set (reg:SF 212 [ _126 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 211 [ _125 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 435)) [3 *s2_270(D) S4 A32])) "../src/spline.f":764 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 435)
        (expr_list:REG_DEAD (reg:DI 211 [ _125 ])
            (nil))))
(insn 598 597 599 34 (set (reg/f:DI 436)
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 56 [0x38])) [5 s2+0 S8 A64])) "../src/spline.f":764 81 {*movdi_internal}
     (nil))
(insn 599 598 600 34 (set (reg:SF 213 [ _127 ])
        (mem:SF (reg/f:DI 436) [3 *s2_270(D)+0 S4 A32])) "../src/spline.f":764 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 436)
        (nil)))
(insn 600 599 601 34 (set (reg:SF 214 [ _128 ])
        (minus:SF (reg:SF 212 [ _126 ])
            (reg:SF 213 [ _127 ]))) "../src/spline.f":764 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 213 [ _127 ])
        (expr_list:REG_DEAD (reg:SF 212 [ _126 ])
            (nil))))
(insn 601 600 602 34 (set (reg:SF 215 [ _129 ])
        (reg:SF 214 [ _128 ])) "../src/spline.f":764 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 214 [ _128 ])
        (nil)))
(insn 602 601 603 34 (set (reg:SF 216 [ eps.298_130 ])
        (mem/c:SF (symbol_ref:DI ("eps.4319") [flags 0x1c02]  <var_decl 0x14325ce10 eps>) [3 eps+0 S4 A32])) "../src/spline.f":764 127 {*movsf_internal}
     (nil))
(insn 603 602 604 34 (set (reg:SF 217 [ _131 ])
        (mult:SF (reg:SF 215 [ _129 ])
            (reg:SF 216 [ eps.298_130 ]))) "../src/spline.f":764 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 216 [ eps.298_130 ])
        (expr_list:REG_DEAD (reg:SF 215 [ _129 ])
            (nil))))
(insn 604 603 605 34 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 217 [ _131 ])
            (reg:SF 208 [ _122 ]))) "../src/spline.f":764 51 {*cmpiusf}
     (expr_list:REG_DEAD (reg:SF 217 [ _131 ])
        (expr_list:REG_DEAD (reg:SF 208 [ _122 ])
            (nil))))
(jump_insn 605 604 609 34 (set (pc)
        (if_then_else (unle (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 613)
            (pc))) "../src/spline.f":764 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil))
 -> 613)
;;  succ:       35 (FALLTHRU)
;;              36
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 35, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 34, next block 36, flags: (RTL)
;;  pred:       34 (FALLTHRU)
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 236
(note 609 605 610 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 610 609 798 35 (set (reg:QI 236 [ iftmp.294_161 ])
        (const_int 1 [0x1])) "../src/spline.f":764 84 {*movqi_internal}
     (nil))
(jump_insn 798 610 799 35 (set (pc)
        (label_ref 616)) "../src/spline.f":764 649 {jump}
     (nil)
 -> 616)
;;  succ:       37 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 236

(barrier 799 798 613)
;; basic block 36, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 35, next block 37, flags: (RTL)
;;  pred:       33
;;              34
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 236
(code_label 613 799 614 36 203 (nil) [2 uses])
(note 614 613 615 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 615 614 616 36 (set (reg:QI 236 [ iftmp.294_161 ])
        (const_int 0 [0])) "../src/spline.f":764 84 {*movqi_internal}
     (nil))
;;  succ:       37 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 236

;; basic block 37, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 36, next block 38, flags: (RTL)
;;  pred:       36 (FALLTHRU)
;;              35 [100.0%] 
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 236
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 236
;; lr  def 	 17 [flags] 218
(code_label 616 615 617 37 206 (nil) [1 uses])
(note 617 616 618 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 618 617 619 37 (set (reg:SI 218 [ iftmp.299_132 ])
        (zero_extend:SI (reg:QI 236 [ iftmp.294_161 ]))) "../src/spline.f":764 136 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 236 [ iftmp.294_161 ])
        (nil)))
(insn 619 618 620 37 (parallel [
            (set (reg:SI 218 [ iftmp.299_132 ])
                (and:SI (reg:SI 218 [ iftmp.299_132 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":764 391 {*andsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 620 619 621 37 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 218 [ iftmp.299_132 ])
            (const_int 0 [0]))) "../src/spline.f":764 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 218 [ iftmp.299_132 ])
        (nil)))
(jump_insn 621 620 626 37 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 816)
            (pc))) "../src/spline.f":764 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 816)
;;  succ:       48
;;              38 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 38, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 37, next block 45, flags: (RTL)
;;  pred:       37 (FALLTHRU)
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 626 621 627 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 627 626 800 38 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -16 [0xfffffffffffffff0])) [1 iter+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -16 [0xfffffffffffffff0])) [1 iter+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":712 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 800 627 801 38 (set (pc)
        (label_ref 628)) "../src/spline.f":712 649 {jump}
     (nil)
 -> 628)
;;  succ:       3 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 801 800 803)
;; basic block 45, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 38, next block 39, flags: (RTL)
;;  pred:       3
;; bb 45 artificial_defs: { }
;; bb 45 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 803 801 802 45 219 (nil) [1 uses])
(note 802 803 804 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 804 802 631 45 (const_int 0 [0]) "../src/spline.f":767 682 {nop}
     (nil))
;;  succ:       39 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 39, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 45, next block 40, flags: (RTL)
;;  pred:       45 [100.0%]  (FALLTHRU)
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 437 438 439 440 441 442 443 444
(code_label 631 804 632 39 180 (nil) [0 uses])
(note 632 631 633 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 633 632 634 39 (set (reg/f:DI 437)
        (symbol_ref/f:DI ("*lC15") [flags 0x2]  <var_decl 0x143540c60 *lC15>)) "../src/spline.f":768 81 {*movdi_internal}
     (nil))
(insn 634 633 635 39 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -648 [0xfffffffffffffd78])) [12 dt_parm.130.common.filename+0 S8 A64])
        (reg/f:DI 437)) "../src/spline.f":768 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 437)
        (nil)))
(insn 635 634 636 39 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -640 [0xfffffffffffffd80])) [1 dt_parm.130.common.line+0 S4 A128])
        (const_int 768 [0x300])) "../src/spline.f":768 82 {*movsi_internal}
     (nil))
(insn 636 635 637 39 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -656 [0xfffffffffffffd70])) [1 dt_parm.130.common.flags+0 S4 A128])
        (const_int 128 [0x80])) "../src/spline.f":768 82 {*movsi_internal}
     (nil))
(insn 637 636 638 39 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -652 [0xfffffffffffffd74])) [1 dt_parm.130.common.unit+0 S4 A32])
        (const_int 6 [0x6])) "../src/spline.f":768 82 {*movsi_internal}
     (nil))
(insn 638 637 639 39 (parallel [
            (set (reg:DI 438)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -656 [0xfffffffffffffd70])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":768 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 639 638 640 39 (set (reg:DI 5 di)
        (reg:DI 438)) "../src/spline.f":768 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 438)
        (nil)))
(call_insn 640 639 641 39 (call (mem:QI (symbol_ref:DI ("_gfortran_st_write") [flags 0x41]  <function_decl 0x1427e0800 _gfortran_st_write>) [0 _gfortran_st_write S1 A8])
        (const_int 0 [0])) "../src/spline.f":768 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 641 640 642 39 (parallel [
            (set (reg:DI 439)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -656 [0xfffffffffffffd70])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":768 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 642 641 643 39 (set (reg:SI 1 dx)
        (const_int 33 [0x21])) "../src/spline.f":768 82 {*movsi_internal}
     (nil))
(insn 643 642 644 39 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*lC24") [flags 0x2]  <var_decl 0x143594f30 *lC24>)) "../src/spline.f":768 81 {*movdi_internal}
     (nil))
(insn 644 643 645 39 (set (reg:DI 5 di)
        (reg:DI 439)) "../src/spline.f":768 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 439)
        (nil)))
(call_insn 645 644 646 39 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_character_write") [flags 0x41]  <function_decl 0x1427d4900 _gfortran_transfer_character_write>) [0 _gfortran_transfer_character_write S1 A8])
        (const_int 0 [0])) "../src/spline.f":768 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 646 645 647 39 (parallel [
            (set (reg:DI 440)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -168 [0xffffffffffffff58])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":768 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 647 646 648 39 (parallel [
            (set (reg:DI 441)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -656 [0xfffffffffffffd70])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":768 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 648 647 649 39 (set (reg:SI 1 dx)
        (const_int 4 [0x4])) "../src/spline.f":768 82 {*movsi_internal}
     (nil))
(insn 649 648 650 39 (set (reg:DI 4 si)
        (reg:DI 440)) "../src/spline.f":768 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 440)
        (nil)))
(insn 650 649 651 39 (set (reg:DI 5 di)
        (reg:DI 441)) "../src/spline.f":768 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 441)
        (nil)))
(call_insn 651 650 652 39 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_real_write") [flags 0x41]  <function_decl 0x1427d4d00 _gfortran_transfer_real_write>) [0 _gfortran_transfer_real_write S1 A8])
        (const_int 0 [0])) "../src/spline.f":768 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 652 651 653 39 (parallel [
            (set (reg:DI 442)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -172 [0xffffffffffffff54])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":768 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 653 652 654 39 (parallel [
            (set (reg:DI 443)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -656 [0xfffffffffffffd70])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":768 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 654 653 655 39 (set (reg:SI 1 dx)
        (const_int 4 [0x4])) "../src/spline.f":768 82 {*movsi_internal}
     (nil))
(insn 655 654 656 39 (set (reg:DI 4 si)
        (reg:DI 442)) "../src/spline.f":768 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 442)
        (nil)))
(insn 656 655 657 39 (set (reg:DI 5 di)
        (reg:DI 443)) "../src/spline.f":768 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 443)
        (nil)))
(call_insn 657 656 658 39 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_real_write") [flags 0x41]  <function_decl 0x1427d4d00 _gfortran_transfer_real_write>) [0 _gfortran_transfer_real_write S1 A8])
        (const_int 0 [0])) "../src/spline.f":768 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 658 657 659 39 (parallel [
            (set (reg:DI 444)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -656 [0xfffffffffffffd70])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":768 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 659 658 660 39 (set (reg:DI 5 di)
        (reg:DI 444)) "../src/spline.f":768 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 444)
        (nil)))
(call_insn 660 659 661 39 (call (mem:QI (symbol_ref:DI ("_gfortran_st_write_done") [flags 0x41]  <function_decl 0x1427e4300 _gfortran_st_write_done>) [0 _gfortran_st_write_done S1 A8])
        (const_int 0 [0])) "../src/spline.f":768 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 661 660 662 39 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [9 clip1+0 S4 A32])
            (const_int 0 [0]))) "../src/spline.f":769 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 662 661 663 39 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 710)
            (pc))) "../src/spline.f":769 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 710)
;;  succ:       40 (FALLTHRU)
;;              41
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 40, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 39, next block 41, flags: (RTL)
;;  pred:       39 (FALLTHRU)
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 219 220 221 222 223 445 446 447 448 449 450 451 452 453 454 455 456 457
(note 663 662 664 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 664 663 665 40 (set (reg/f:DI 445)
        (symbol_ref/f:DI ("*lC15") [flags 0x2]  <var_decl 0x143540c60 *lC15>)) "../src/spline.f":770 81 {*movdi_internal}
     (nil))
(insn 665 664 666 40 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -648 [0xfffffffffffffd78])) [12 dt_parm.131.common.filename+0 S8 A64])
        (reg/f:DI 445)) "../src/spline.f":770 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 445)
        (nil)))
(insn 666 665 667 40 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -640 [0xfffffffffffffd80])) [1 dt_parm.131.common.line+0 S4 A128])
        (const_int 770 [0x302])) "../src/spline.f":770 82 {*movsi_internal}
     (nil))
(insn 667 666 668 40 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -656 [0xfffffffffffffd70])) [1 dt_parm.131.common.flags+0 S4 A128])
        (const_int 128 [0x80])) "../src/spline.f":770 82 {*movsi_internal}
     (nil))
(insn 668 667 669 40 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -652 [0xfffffffffffffd74])) [1 dt_parm.131.common.unit+0 S4 A32])
        (const_int 6 [0x6])) "../src/spline.f":770 82 {*movsi_internal}
     (nil))
(insn 669 668 670 40 (parallel [
            (set (reg:DI 446)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -656 [0xfffffffffffffd70])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":770 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 670 669 671 40 (set (reg:DI 5 di)
        (reg:DI 446)) "../src/spline.f":770 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 446)
        (nil)))
(call_insn 671 670 672 40 (call (mem:QI (symbol_ref:DI ("_gfortran_st_write") [flags 0x41]  <function_decl 0x1427e0800 _gfortran_st_write>) [0 _gfortran_st_write S1 A8])
        (const_int 0 [0])) "../src/spline.f":770 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 672 671 673 40 (parallel [
            (set (reg:DI 447)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -656 [0xfffffffffffffd70])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":770 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 673 672 674 40 (set (reg:SI 1 dx)
        (const_int 16 [0x10])) "../src/spline.f":770 82 {*movsi_internal}
     (nil))
(insn 674 673 675 40 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*lC25") [flags 0x2]  <var_decl 0x1435c3000 *lC25>)) "../src/spline.f":770 81 {*movdi_internal}
     (nil))
(insn 675 674 676 40 (set (reg:DI 5 di)
        (reg:DI 447)) "../src/spline.f":770 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 447)
        (nil)))
(call_insn 676 675 677 40 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_character_write") [flags 0x41]  <function_decl 0x1427d4900 _gfortran_transfer_character_write>) [0 _gfortran_transfer_character_write S1 A8])
        (const_int 0 [0])) "../src/spline.f":770 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 677 676 678 40 (set (reg/f:DI 219 [ _133 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 8 [0x8])) [5 s1+0 S8 A64])) "../src/spline.f":770 81 {*movdi_internal}
     (nil))
(insn 678 677 679 40 (parallel [
            (set (reg:DI 448)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -656 [0xfffffffffffffd70])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":770 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 679 678 680 40 (set (reg:SI 1 dx)
        (const_int 4 [0x4])) "../src/spline.f":770 82 {*movsi_internal}
     (nil))
(insn 680 679 681 40 (set (reg:DI 4 si)
        (reg/f:DI 219 [ _133 ])) "../src/spline.f":770 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 219 [ _133 ])
        (nil)))
(insn 681 680 682 40 (set (reg:DI 5 di)
        (reg:DI 448)) "../src/spline.f":770 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 448)
        (nil)))
(call_insn 682 681 683 40 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_real_write") [flags 0x41]  <function_decl 0x1427d4d00 _gfortran_transfer_real_write>) [0 _gfortran_transfer_real_write S1 A8])
        (const_int 0 [0])) "../src/spline.f":770 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 683 682 684 40 (set (reg/f:DI 449)
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 16 [0x10])) [6 n1+0 S8 A64])) "../src/spline.f":770 81 {*movdi_internal}
     (nil))
(insn 684 683 685 40 (set (reg:SI 220 [ _134 ])
        (mem:SI (reg/f:DI 449) [1 *n1_171(D)+0 S4 A32])) "../src/spline.f":770 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 449)
        (nil)))
(insn 685 684 686 40 (set (reg:DI 221 [ _135 ])
        (sign_extend:DI (reg:SI 220 [ _134 ]))) "../src/spline.f":770 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 220 [ _134 ])
        (nil)))
(insn 686 685 687 40 (parallel [
            (set (reg:DI 222 [ _136 ])
                (plus:DI (reg:DI 221 [ _135 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":770 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 221 [ _135 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 687 686 688 40 (parallel [
            (set (reg:DI 450)
                (ashift:DI (reg:DI 222 [ _136 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":770 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 222 [ _136 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 688 687 689 40 (set (reg/f:DI 451)
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 8 [0x8])) [5 s1+0 S8 A64])) "../src/spline.f":770 81 {*movdi_internal}
     (nil))
(insn 689 688 690 40 (parallel [
            (set (reg/f:DI 223 [ _137 ])
                (plus:DI (reg:DI 450)
                    (reg/f:DI 451)))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":770 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 451)
        (expr_list:REG_DEAD (reg:DI 450)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                                (const_int 8 [0x8])) [5 s1+0 S8 A64])
                        (reg:DI 450))
                    (nil))))))
(insn 690 689 691 40 (parallel [
            (set (reg:DI 452)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -656 [0xfffffffffffffd70])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":770 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 691 690 692 40 (set (reg:SI 1 dx)
        (const_int 4 [0x4])) "../src/spline.f":770 82 {*movsi_internal}
     (nil))
(insn 692 691 693 40 (set (reg:DI 4 si)
        (reg/f:DI 223 [ _137 ])) "../src/spline.f":770 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 223 [ _137 ])
        (nil)))
(insn 693 692 694 40 (set (reg:DI 5 di)
        (reg:DI 452)) "../src/spline.f":770 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 452)
        (nil)))
(call_insn 694 693 695 40 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_real_write") [flags 0x41]  <function_decl 0x1427d4d00 _gfortran_transfer_real_write>) [0 _gfortran_transfer_real_write S1 A8])
        (const_int 0 [0])) "../src/spline.f":770 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 695 694 696 40 (set (reg:DI 453)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -672 [0xfffffffffffffd60])) [4 ss1+0 S8 A64])) "../src/spline.f":770 81 {*movdi_internal}
     (nil))
(insn 696 695 697 40 (parallel [
            (set (reg:DI 454)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -656 [0xfffffffffffffd70])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":770 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 697 696 698 40 (set (reg:SI 1 dx)
        (const_int 4 [0x4])) "../src/spline.f":770 82 {*movsi_internal}
     (nil))
(insn 698 697 699 40 (set (reg:DI 4 si)
        (reg:DI 453)) "../src/spline.f":770 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 453)
        (nil)))
(insn 699 698 700 40 (set (reg:DI 5 di)
        (reg:DI 454)) "../src/spline.f":770 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 454)
        (nil)))
(call_insn 700 699 701 40 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_real_write") [flags 0x41]  <function_decl 0x1427d4d00 _gfortran_transfer_real_write>) [0 _gfortran_transfer_real_write S1 A8])
        (const_int 0 [0])) "../src/spline.f":770 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 701 700 702 40 (parallel [
            (set (reg:DI 455)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -160 [0xffffffffffffff60])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":770 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 702 701 703 40 (parallel [
            (set (reg:DI 456)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -656 [0xfffffffffffffd70])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":770 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 703 702 704 40 (set (reg:SI 1 dx)
        (const_int 4 [0x4])) "../src/spline.f":770 82 {*movsi_internal}
     (nil))
(insn 704 703 705 40 (set (reg:DI 4 si)
        (reg:DI 455)) "../src/spline.f":770 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 455)
        (nil)))
(insn 705 704 706 40 (set (reg:DI 5 di)
        (reg:DI 456)) "../src/spline.f":770 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 456)
        (nil)))
(call_insn 706 705 707 40 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_real_write") [flags 0x41]  <function_decl 0x1427d4d00 _gfortran_transfer_real_write>) [0 _gfortran_transfer_real_write S1 A8])
        (const_int 0 [0])) "../src/spline.f":770 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 707 706 708 40 (parallel [
            (set (reg:DI 457)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -656 [0xfffffffffffffd70])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":770 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 708 707 709 40 (set (reg:DI 5 di)
        (reg:DI 457)) "../src/spline.f":770 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 457)
        (nil)))
(call_insn 709 708 710 40 (call (mem:QI (symbol_ref:DI ("_gfortran_st_write_done") [flags 0x41]  <function_decl 0x1427e4300 _gfortran_st_write_done>) [0 _gfortran_st_write_done S1 A8])
        (const_int 0 [0])) "../src/spline.f":770 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       41 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 41, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 40, next block 42, flags: (RTL)
;;  pred:       39
;;              40 (FALLTHRU)
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 710 709 711 41 210 (nil) [1 uses])
(note 711 710 712 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 712 711 713 41 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [9 clip2+0 S4 A32])
            (const_int 0 [0]))) "../src/spline.f":771 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 713 712 714 41 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 761)
            (pc))) "../src/spline.f":771 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 761)
;;  succ:       42 (FALLTHRU)
;;              43
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 42, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 41, next block 43, flags: (RTL)
;;  pred:       41 (FALLTHRU)
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 224 225 226 227 228 458 459 460 461 462 463 464 465 466 467 468 469 470
(note 714 713 715 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 715 714 716 42 (set (reg/f:DI 458)
        (symbol_ref/f:DI ("*lC15") [flags 0x2]  <var_decl 0x143540c60 *lC15>)) "../src/spline.f":772 81 {*movdi_internal}
     (nil))
(insn 716 715 717 42 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -648 [0xfffffffffffffd78])) [12 dt_parm.132.common.filename+0 S8 A64])
        (reg/f:DI 458)) "../src/spline.f":772 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 458)
        (nil)))
(insn 717 716 718 42 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -640 [0xfffffffffffffd80])) [1 dt_parm.132.common.line+0 S4 A128])
        (const_int 772 [0x304])) "../src/spline.f":772 82 {*movsi_internal}
     (nil))
(insn 718 717 719 42 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -656 [0xfffffffffffffd70])) [1 dt_parm.132.common.flags+0 S4 A128])
        (const_int 128 [0x80])) "../src/spline.f":772 82 {*movsi_internal}
     (nil))
(insn 719 718 720 42 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -652 [0xfffffffffffffd74])) [1 dt_parm.132.common.unit+0 S4 A32])
        (const_int 6 [0x6])) "../src/spline.f":772 82 {*movsi_internal}
     (nil))
(insn 720 719 721 42 (parallel [
            (set (reg:DI 459)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -656 [0xfffffffffffffd70])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":772 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 721 720 722 42 (set (reg:DI 5 di)
        (reg:DI 459)) "../src/spline.f":772 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 459)
        (nil)))
(call_insn 722 721 723 42 (call (mem:QI (symbol_ref:DI ("_gfortran_st_write") [flags 0x41]  <function_decl 0x1427e0800 _gfortran_st_write>) [0 _gfortran_st_write S1 A8])
        (const_int 0 [0])) "../src/spline.f":772 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 723 722 724 42 (parallel [
            (set (reg:DI 460)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -656 [0xfffffffffffffd70])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":772 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 724 723 725 42 (set (reg:SI 1 dx)
        (const_int 16 [0x10])) "../src/spline.f":772 82 {*movsi_internal}
     (nil))
(insn 725 724 726 42 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*lC26") [flags 0x2]  <var_decl 0x1435c3090 *lC26>)) "../src/spline.f":772 81 {*movdi_internal}
     (nil))
(insn 726 725 727 42 (set (reg:DI 5 di)
        (reg:DI 460)) "../src/spline.f":772 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 460)
        (nil)))
(call_insn 727 726 728 42 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_character_write") [flags 0x41]  <function_decl 0x1427d4900 _gfortran_transfer_character_write>) [0 _gfortran_transfer_character_write S1 A8])
        (const_int 0 [0])) "../src/spline.f":772 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 728 727 729 42 (set (reg/f:DI 224 [ _138 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 56 [0x38])) [5 s2+0 S8 A64])) "../src/spline.f":772 81 {*movdi_internal}
     (nil))
(insn 729 728 730 42 (parallel [
            (set (reg:DI 461)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -656 [0xfffffffffffffd70])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":772 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 730 729 731 42 (set (reg:SI 1 dx)
        (const_int 4 [0x4])) "../src/spline.f":772 82 {*movsi_internal}
     (nil))
(insn 731 730 732 42 (set (reg:DI 4 si)
        (reg/f:DI 224 [ _138 ])) "../src/spline.f":772 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 224 [ _138 ])
        (nil)))
(insn 732 731 733 42 (set (reg:DI 5 di)
        (reg:DI 461)) "../src/spline.f":772 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 461)
        (nil)))
(call_insn 733 732 734 42 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_real_write") [flags 0x41]  <function_decl 0x1427d4d00 _gfortran_transfer_real_write>) [0 _gfortran_transfer_real_write S1 A8])
        (const_int 0 [0])) "../src/spline.f":772 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 734 733 735 42 (set (reg/f:DI 462)
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 64 [0x40])) [6 n2+0 S8 A64])) "../src/spline.f":772 81 {*movdi_internal}
     (nil))
(insn 735 734 736 42 (set (reg:SI 225 [ _139 ])
        (mem:SI (reg/f:DI 462) [1 *n2_178(D)+0 S4 A32])) "../src/spline.f":772 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 462)
        (nil)))
(insn 736 735 737 42 (set (reg:DI 226 [ _140 ])
        (sign_extend:DI (reg:SI 225 [ _139 ]))) "../src/spline.f":772 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 225 [ _139 ])
        (nil)))
(insn 737 736 738 42 (parallel [
            (set (reg:DI 227 [ _141 ])
                (plus:DI (reg:DI 226 [ _140 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":772 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 226 [ _140 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 738 737 739 42 (parallel [
            (set (reg:DI 463)
                (ashift:DI (reg:DI 227 [ _141 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":772 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 227 [ _141 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 739 738 740 42 (set (reg/f:DI 464)
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 56 [0x38])) [5 s2+0 S8 A64])) "../src/spline.f":772 81 {*movdi_internal}
     (nil))
(insn 740 739 741 42 (parallel [
            (set (reg/f:DI 228 [ _142 ])
                (plus:DI (reg:DI 463)
                    (reg/f:DI 464)))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":772 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 464)
        (expr_list:REG_DEAD (reg:DI 463)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                                (const_int 56 [0x38])) [5 s2+0 S8 A64])
                        (reg:DI 463))
                    (nil))))))
(insn 741 740 742 42 (parallel [
            (set (reg:DI 465)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -656 [0xfffffffffffffd70])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":772 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 742 741 743 42 (set (reg:SI 1 dx)
        (const_int 4 [0x4])) "../src/spline.f":772 82 {*movsi_internal}
     (nil))
(insn 743 742 744 42 (set (reg:DI 4 si)
        (reg/f:DI 228 [ _142 ])) "../src/spline.f":772 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 228 [ _142 ])
        (nil)))
(insn 744 743 745 42 (set (reg:DI 5 di)
        (reg:DI 465)) "../src/spline.f":772 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 465)
        (nil)))
(call_insn 745 744 746 42 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_real_write") [flags 0x41]  <function_decl 0x1427d4d00 _gfortran_transfer_real_write>) [0 _gfortran_transfer_real_write S1 A8])
        (const_int 0 [0])) "../src/spline.f":772 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 746 745 747 42 (set (reg:DI 466)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -680 [0xfffffffffffffd58])) [4 ss2+0 S8 A64])) "../src/spline.f":772 81 {*movdi_internal}
     (nil))
(insn 747 746 748 42 (parallel [
            (set (reg:DI 467)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -656 [0xfffffffffffffd70])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":772 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 748 747 749 42 (set (reg:SI 1 dx)
        (const_int 4 [0x4])) "../src/spline.f":772 82 {*movsi_internal}
     (nil))
(insn 749 748 750 42 (set (reg:DI 4 si)
        (reg:DI 466)) "../src/spline.f":772 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 466)
        (nil)))
(insn 750 749 751 42 (set (reg:DI 5 di)
        (reg:DI 467)) "../src/spline.f":772 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 467)
        (nil)))
(call_insn 751 750 752 42 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_real_write") [flags 0x41]  <function_decl 0x1427d4d00 _gfortran_transfer_real_write>) [0 _gfortran_transfer_real_write S1 A8])
        (const_int 0 [0])) "../src/spline.f":772 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 752 751 753 42 (parallel [
            (set (reg:DI 468)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -164 [0xffffffffffffff5c])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":772 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 753 752 754 42 (parallel [
            (set (reg:DI 469)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -656 [0xfffffffffffffd70])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":772 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 754 753 755 42 (set (reg:SI 1 dx)
        (const_int 4 [0x4])) "../src/spline.f":772 82 {*movsi_internal}
     (nil))
(insn 755 754 756 42 (set (reg:DI 4 si)
        (reg:DI 468)) "../src/spline.f":772 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 468)
        (nil)))
(insn 756 755 757 42 (set (reg:DI 5 di)
        (reg:DI 469)) "../src/spline.f":772 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 469)
        (nil)))
(call_insn 757 756 758 42 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_real_write") [flags 0x41]  <function_decl 0x1427d4d00 _gfortran_transfer_real_write>) [0 _gfortran_transfer_real_write S1 A8])
        (const_int 0 [0])) "../src/spline.f":772 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 758 757 759 42 (parallel [
            (set (reg:DI 470)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -656 [0xfffffffffffffd70])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":772 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 759 758 760 42 (set (reg:DI 5 di)
        (reg:DI 470)) "../src/spline.f":772 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 470)
        (nil)))
(call_insn 760 759 761 42 (call (mem:QI (symbol_ref:DI ("_gfortran_st_write_done") [flags 0x41]  <function_decl 0x1427e4300 _gfortran_st_write_done>) [0 _gfortran_st_write_done S1 A8])
        (const_int 0 [0])) "../src/spline.f":772 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       43 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 43, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 42, next block 48, flags: (RTL)
;;  pred:       41
;;              42 (FALLTHRU)
;; bb 43 artificial_defs: { }
;; bb 43 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 471
(code_label 761 760 762 43 211 (nil) [1 uses])
(note 762 761 763 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 763 762 764 43 (set (reg/f:DI 471)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -664 [0xfffffffffffffd68])) [16 ok+0 S8 A64])) "../src/spline.f":773 81 {*movdi_internal}
     (nil))
(insn 764 763 787 43 (set (mem:SI (reg/f:DI 471) [9 *ok_233(D)+0 S4 A32])
        (const_int 0 [0])) "../src/spline.f":773 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 471)
        (nil)))
(insn 787 764 813 43 (const_int 0 [0]) "../src/spline.f":775 682 {nop}
     (nil))
(jump_insn 813 787 814 43 (set (pc)
        (label_ref 769)) "../src/spline.f":775 649 {jump}
     (nil)
 -> 769)
;;  succ:       44
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 814 813 816)
;; basic block 48, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 43, next block 44, flags: (RTL)
;;  pred:       37
;; bb 48 artificial_defs: { }
;; bb 48 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 816 814 815 48 222 (nil) [1 uses])
(note 815 816 817 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(insn 817 815 769 48 (const_int 0 [0]) "../src/spline.f":765 682 {nop}
     (nil))
;;  succ:       44 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 44, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 48, next block 1, flags: (RTL)
;;  pred:       48 [100.0%]  (FALLTHRU)
;;              43
;; bb 44 artificial_defs: { }
;; bb 44 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 769 817 770 44 179 (nil) [1 uses])
(note 770 769 0 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function nearpt (nearpt_, funcdef_no=17, decl_uid=4429, cgraph_uid=17, symbol_order=17)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 10 n_edges 11 count 10 (    1)
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 8 6 9 7
;;
;; Loop 1
;;  header 3, latch 5
;;  depth 1, outer 0
;;  nodes: 3 5 4
;; 2 succs { 3 }
;; 3 succs { 8 4 }
;; 4 succs { 9 5 }
;; 5 succs { 3 }
;; 8 succs { 6 }
;; 6 succs { 7 }
;; 9 succs { 7 }
;; 7 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 122.
verify found no changes in insn with uid = 139.
verify found no changes in insn with uid = 213.
verify found no changes in insn with uid = 218.
verify found no changes in insn with uid = 221.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r230: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r230,l0) best DIREG, allocno GENERAL_REGS
    r229: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r229,l0) best DIREG, allocno GENERAL_REGS
    r228: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r228,l0) best DIREG, allocno GENERAL_REGS
    r227: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r227,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r226: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a5 (r226,l0) best SSE_REGS, allocno SSE_REGS
    r225: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a7 (r225,l0) best SSE_REGS, allocno SSE_REGS
    r224: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a6 (r224,l0) best SSE_REGS, allocno SSE_REGS
    r223: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r223,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r222: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r222,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r221: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a14 (r221,l0) best SSE_REGS, allocno SSE_REGS
    r220: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a12 (r220,l0) best SSE_REGS, allocno SSE_REGS
    r219: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a15 (r219,l0) best SSE_REGS, allocno SSE_REGS
    r218: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a16 (r218,l0) best SSE_REGS, allocno SSE_REGS
    r217: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r217,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r216: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r216,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r215: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a41 (r215,l0) best SSE_REGS, allocno SSE_REGS
    r214: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a49 (r214,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r213: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a55 (r213,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r212: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a61 (r212,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r211: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a62 (r211,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r210: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a56 (r210,l0) best DIREG, allocno GENERAL_REGS
    r209: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a57 (r209,l0) best SIREG, allocno GENERAL_REGS
    r208: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a58 (r208,l0) best CREG, allocno GENERAL_REGS
    r207: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a59 (r207,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r206: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a60 (r206,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r205: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a69 (r205,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r204: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a70 (r204,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r203: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a63 (r203,l0) best DIREG, allocno GENERAL_REGS
    r202: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a64 (r202,l0) best SIREG, allocno GENERAL_REGS
    r201: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a65 (r201,l0) best DREG, allocno GENERAL_REGS
    r200: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a66 (r200,l0) best CREG, allocno GENERAL_REGS
    r199: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a67 (r199,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r198: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a68 (r198,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r197: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a73 (r197,l0) best SSE_REGS, allocno SSE_REGS
    r196: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a72 (r196,l0) best SSE_REGS, allocno SSE_REGS
    r195: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a78 (r195,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r194: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a79 (r194,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r193: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a83 (r193,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r192: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a87 (r192,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r191: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a89 (r191,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r190: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a91 (r190,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r189: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a95 (r189,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r188: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a97 (r188,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r187: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a99 (r187,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r186: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a103 (r186,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r185: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a105 (r185,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r184: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a107 (r184,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r183: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a111 (r183,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r182: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a113 (r182,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r181: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a115 (r181,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r180: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a119 (r180,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r179: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a121 (r179,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r178: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a123 (r178,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r177: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a71 (r177,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r173: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a86 (r173,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r172: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a88 (r172,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r168: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a94 (r168,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r167: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a96 (r167,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r163: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a102 (r163,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r162: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a104 (r162,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r158: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a110 (r158,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r157: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a112 (r157,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r153: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a118 (r153,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r152: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a120 (r152,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r151: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a4 (r151,l0) best SSE_REGS, allocno SSE_REGS
    r150: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a9 (r150,l0) best SSE_REGS, allocno SSE_REGS
    r149: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a10 (r149,l0) best SSE_REGS, allocno SSE_REGS
    r148: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a13 (r148,l0) best SSE_REGS, allocno SSE_REGS
    r147: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a17 (r147,l0) best SSE_REGS, allocno SSE_REGS
    r146: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a19 (r146,l0) best SSE_REGS, allocno SSE_REGS
    r145: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a20 (r145,l0) best SSE_REGS, allocno SSE_REGS
    r144: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a21 (r144,l0) best SSE_REGS, allocno SSE_REGS
    r143: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a22 (r143,l0) best SSE_REGS, allocno SSE_REGS
    r142: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a23 (r142,l0) best SSE_REGS, allocno SSE_REGS
    r141: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a18 (r141,l0) best SSE_REGS, allocno SSE_REGS
    r140: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a25 (r140,l0) best SSE_REGS, allocno SSE_REGS
    r139: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a27 (r139,l0) best SSE_REGS, allocno SSE_REGS
    r138: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a28 (r138,l0) best SSE_REGS, allocno SSE_REGS
    r137: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a29 (r137,l0) best SSE_REGS, allocno SSE_REGS
    r136: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a30 (r136,l0) best SSE_REGS, allocno SSE_REGS
    r135: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a31 (r135,l0) best SSE_REGS, allocno SSE_REGS
    r134: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a26 (r134,l0) best SSE_REGS, allocno SSE_REGS
    r133: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a33 (r133,l0) best SSE_REGS, allocno SSE_REGS
    r132: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a35 (r132,l0) best SSE_REGS, allocno SSE_REGS
    r131: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a36 (r131,l0) best SSE_REGS, allocno SSE_REGS
    r130: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a37 (r130,l0) best SSE_REGS, allocno SSE_REGS
    r129: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a34 (r129,l0) best SSE_REGS, allocno SSE_REGS
    r128: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a38 (r128,l0) best SSE_REGS, allocno SSE_REGS
    r127: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a39 (r127,l0) best SSE_REGS, allocno SSE_REGS
    r126: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a40 (r126,l0) best SSE_REGS, allocno SSE_REGS
    r125: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a42 (r125,l0) best SSE_REGS, allocno SSE_REGS
    r124: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a44 (r124,l0) best SSE_REGS, allocno SSE_REGS
    r123: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a45 (r123,l0) best SSE_REGS, allocno SSE_REGS
    r122: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a46 (r122,l0) best SSE_REGS, allocno SSE_REGS
    r121: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a47 (r121,l0) best SSE_REGS, allocno SSE_REGS
    r120: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a48 (r120,l0) best SSE_REGS, allocno SSE_REGS
    r119: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a43 (r119,l0) best SSE_REGS, allocno SSE_REGS
    r118: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a50 (r118,l0) best SSE_REGS, allocno SSE_REGS
    r117: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a51 (r117,l0) best SSE_REGS, allocno SSE_REGS
    r116: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a52 (r116,l0) best SSE_REGS, allocno SSE_REGS
    r115: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a53 (r115,l0) best SSE_REGS, allocno SSE_REGS
    r114: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a54 (r114,l0) best SSE_REGS, allocno SSE_REGS
    r113: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a74 (r113,l0) best SSE_REGS, allocno SSE_REGS
    r112: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a75 (r112,l0) best SSE_REGS, allocno SSE_REGS
    r111: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a76 (r111,l0) best SSE_REGS, allocno SSE_REGS
    r110: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a77 (r110,l0) best SSE_REGS, allocno SSE_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a80 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a81 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a82 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a84 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a85 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a90 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a92 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a93 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a98 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a100 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a101 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a106 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a108 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a109 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a114 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a116 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a117 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a122 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r230,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a1(r229,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a2(r228,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a3(r227,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a4(r151,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a5(r226,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a6(r224,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a7(r225,l0) costs: SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MEM:15
  a8(r223,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a9(r150,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a10(r149,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a11(r222,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a12(r220,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a13(r148,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:16
  a14(r221,l0) costs: SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MEM:15
  a15(r219,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a16(r218,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a17(r147,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a18(r141,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a19(r146,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a20(r145,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 ALL_REGS:29 MEM:8
  a21(r144,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:9
  a22(r143,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a23(r142,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a24(r217,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a25(r140,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a26(r134,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a27(r139,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a28(r138,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 ALL_REGS:29 MEM:8
  a29(r137,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:9
  a30(r136,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a31(r135,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a32(r216,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a33(r133,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a34(r129,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a35(r132,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a36(r131,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 ALL_REGS:29 MEM:8
  a37(r130,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 CLOBBERED_REGS:4 Q_REGS:4 NON_Q_REGS:4 TLS_GOTBASE_REGS:4 GENERAL_REGS:4 FP_TOP_REG:24 FP_SECOND_REG:24 FLOAT_REGS:24 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:22 FP_TOP_SSE_REGS:26 FP_SECOND_SSE_REGS:26 FLOAT_SSE_REGS:26 FLOAT_INT_REGS:24 INT_SSE_REGS:19 FLOAT_INT_SSE_REGS:26 ALL_REGS:26 MEM:7
  a38(r128,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a39(r127,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 ALL_REGS:29 MEM:8
  a40(r126,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 CLOBBERED_REGS:4 Q_REGS:4 NON_Q_REGS:4 TLS_GOTBASE_REGS:4 GENERAL_REGS:4 FP_TOP_REG:24 FP_SECOND_REG:24 FLOAT_REGS:24 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:22 FP_TOP_SSE_REGS:26 FP_SECOND_SSE_REGS:26 FLOAT_SSE_REGS:26 FLOAT_INT_REGS:24 INT_SSE_REGS:19 FLOAT_INT_SSE_REGS:26 ALL_REGS:26 MEM:7
  a41(r215,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a42(r125,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a43(r119,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a44(r124,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a45(r123,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 ALL_REGS:29 MEM:8
  a46(r122,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:9
  a47(r121,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a48(r120,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a49(r214,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a50(r118,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a51(r117,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 ALL_REGS:29 MEM:8
  a52(r116,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:9
  a53(r115,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a54(r114,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a55(r213,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a56(r210,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a57(r209,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a58(r208,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a59(r207,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a60(r206,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a61(r212,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:8
  a62(r211,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:8
  a63(r203,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a64(r202,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a65(r201,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a66(r200,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a67(r199,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a68(r198,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a69(r205,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:8
  a70(r204,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:8
  a71(r177,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7
  a72(r196,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a73(r197,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a74(r113,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 ALL_REGS:29 MEM:8
  a75(r112,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:9
  a76(r111,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a77(r110,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a78(r195,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a79(r194,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a80(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a81(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a82(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a83(r193,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a84(r105,l0) costs: AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:2
  a85(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a86(r173,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a87(r192,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a88(r172,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:38 INT_SSE_REGS:27 ALL_REGS:520 MEM:11
  a89(r191,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:8
  a90(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a91(r190,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a92(r101,l0) costs: AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:2
  a93(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a94(r168,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a95(r189,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a96(r167,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:38 INT_SSE_REGS:27 ALL_REGS:520 MEM:11
  a97(r188,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:8
  a98(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a99(r187,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a100(r97,l0) costs: AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:2
  a101(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a102(r163,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a103(r186,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a104(r162,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:38 INT_SSE_REGS:27 ALL_REGS:520 MEM:11
  a105(r185,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:8
  a106(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a107(r184,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a108(r93,l0) costs: AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:2
  a109(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a110(r158,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a111(r183,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a112(r157,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:38 INT_SSE_REGS:27 ALL_REGS:520 MEM:11
  a113(r182,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:8
  a114(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a115(r181,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a116(r89,l0) costs: AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:2
  a117(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a118(r153,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:7
  a119(r180,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a120(r152,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:38 INT_SSE_REGS:27 ALL_REGS:520 MEM:11
  a121(r179,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:8
  a122(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a123(r178,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8

   Insn 229(l0): point = 0
   Insn 239(l0): point = 3
   Insn 235(l0): point = 6
   Insn 221(l0): point = 8
   Insn 220(l0): point = 10
   Insn 219(l0): point = 12
   Insn 218(l0): point = 14
   Insn 217(l0): point = 16
   Insn 216(l0): point = 18
   Insn 215(l0): point = 20
   Insn 214(l0): point = 22
   Insn 213(l0): point = 24
   Insn 212(l0): point = 26
   Insn 211(l0): point = 28
   Insn 210(l0): point = 30
   Insn 209(l0): point = 32
   Insn 208(l0): point = 34
   Insn 207(l0): point = 36
   Insn 206(l0): point = 38
   Insn 234(l0): point = 41
   Insn 104(l0): point = 44
   Insn 103(l0): point = 46
   Insn 102(l0): point = 48
   Insn 101(l0): point = 50
   Insn 230(l0): point = 53
   Insn 200(l0): point = 55
   Insn 198(l0): point = 58
   Insn 197(l0): point = 60
   Insn 196(l0): point = 62
   Insn 195(l0): point = 64
   Insn 194(l0): point = 66
   Insn 193(l0): point = 68
   Insn 192(l0): point = 70
   Insn 191(l0): point = 72
   Insn 190(l0): point = 74
   Insn 189(l0): point = 76
   Insn 188(l0): point = 78
   Insn 187(l0): point = 80
   Insn 186(l0): point = 82
   Insn 185(l0): point = 84
   Insn 184(l0): point = 86
   Insn 183(l0): point = 88
   Insn 182(l0): point = 90
   Insn 181(l0): point = 92
   Insn 180(l0): point = 94
   Insn 179(l0): point = 96
   Insn 178(l0): point = 98
   Insn 177(l0): point = 100
   Insn 176(l0): point = 102
   Insn 175(l0): point = 104
   Insn 174(l0): point = 106
   Insn 173(l0): point = 108
   Insn 172(l0): point = 110
   Insn 171(l0): point = 112
   Insn 170(l0): point = 114
   Insn 169(l0): point = 116
   Insn 168(l0): point = 118
   Insn 167(l0): point = 120
   Insn 166(l0): point = 122
   Insn 165(l0): point = 124
   Insn 164(l0): point = 126
   Insn 163(l0): point = 128
   Insn 162(l0): point = 130
   Insn 161(l0): point = 132
   Insn 160(l0): point = 134
   Insn 159(l0): point = 136
   Insn 158(l0): point = 138
   Insn 157(l0): point = 140
   Insn 156(l0): point = 142
   Insn 155(l0): point = 144
   Insn 154(l0): point = 146
   Insn 153(l0): point = 148
   Insn 152(l0): point = 150
   Insn 151(l0): point = 152
   Insn 150(l0): point = 154
   Insn 149(l0): point = 156
   Insn 148(l0): point = 158
   Insn 147(l0): point = 160
   Insn 146(l0): point = 162
   Insn 145(l0): point = 164
   Insn 144(l0): point = 166
   Insn 143(l0): point = 168
   Insn 142(l0): point = 170
   Insn 141(l0): point = 172
   Insn 140(l0): point = 174
   Insn 139(l0): point = 176
   Insn 138(l0): point = 178
   Insn 137(l0): point = 180
   Insn 136(l0): point = 182
   Insn 135(l0): point = 184
   Insn 134(l0): point = 186
   Insn 133(l0): point = 188
   Insn 132(l0): point = 190
   Insn 131(l0): point = 192
   Insn 130(l0): point = 194
   Insn 129(l0): point = 196
   Insn 128(l0): point = 198
   Insn 127(l0): point = 200
   Insn 126(l0): point = 202
   Insn 125(l0): point = 204
   Insn 124(l0): point = 206
   Insn 123(l0): point = 208
   Insn 122(l0): point = 210
   Insn 121(l0): point = 212
   Insn 120(l0): point = 214
   Insn 119(l0): point = 216
   Insn 118(l0): point = 218
   Insn 117(l0): point = 220
   Insn 116(l0): point = 222
   Insn 115(l0): point = 224
   Insn 114(l0): point = 226
   Insn 113(l0): point = 228
   Insn 112(l0): point = 230
   Insn 111(l0): point = 232
   Insn 110(l0): point = 234
   Insn 109(l0): point = 236
   Insn 108(l0): point = 238
   Insn 107(l0): point = 240
   Insn 106(l0): point = 242
   Insn 99(l0): point = 245
   Insn 98(l0): point = 247
   Insn 97(l0): point = 249
   Insn 96(l0): point = 251
   Insn 95(l0): point = 253
   Insn 94(l0): point = 255
   Insn 93(l0): point = 257
   Insn 92(l0): point = 259
   Insn 91(l0): point = 261
   Insn 90(l0): point = 263
   Insn 89(l0): point = 265
   Insn 88(l0): point = 267
   Insn 87(l0): point = 269
   Insn 86(l0): point = 271
   Insn 82(l0): point = 273
   Insn 81(l0): point = 275
   Insn 80(l0): point = 277
   Insn 78(l0): point = 279
   Insn 76(l0): point = 281
   Insn 77(l0): point = 283
   Insn 75(l0): point = 285
   Insn 74(l0): point = 287
   Insn 73(l0): point = 289
   Insn 72(l0): point = 291
   Insn 71(l0): point = 293
   Insn 67(l0): point = 295
   Insn 66(l0): point = 297
   Insn 65(l0): point = 299
   Insn 63(l0): point = 301
   Insn 61(l0): point = 303
   Insn 62(l0): point = 305
   Insn 60(l0): point = 307
   Insn 59(l0): point = 309
   Insn 58(l0): point = 311
   Insn 57(l0): point = 313
   Insn 56(l0): point = 315
   Insn 52(l0): point = 317
   Insn 51(l0): point = 319
   Insn 50(l0): point = 321
   Insn 48(l0): point = 323
   Insn 46(l0): point = 325
   Insn 47(l0): point = 327
   Insn 45(l0): point = 329
   Insn 44(l0): point = 331
   Insn 43(l0): point = 333
   Insn 42(l0): point = 335
   Insn 41(l0): point = 337
   Insn 37(l0): point = 339
   Insn 36(l0): point = 341
   Insn 35(l0): point = 343
   Insn 33(l0): point = 345
   Insn 31(l0): point = 347
   Insn 32(l0): point = 349
   Insn 30(l0): point = 351
   Insn 29(l0): point = 353
   Insn 28(l0): point = 355
   Insn 27(l0): point = 357
   Insn 26(l0): point = 359
   Insn 22(l0): point = 361
   Insn 21(l0): point = 363
   Insn 20(l0): point = 365
   Insn 18(l0): point = 367
   Insn 16(l0): point = 369
   Insn 17(l0): point = 371
   Insn 15(l0): point = 373
   Insn 14(l0): point = 375
   Insn 13(l0): point = 377
   Insn 12(l0): point = 379
   Insn 11(l0): point = 381
   Insn 7(l0): point = 383
   Insn 6(l0): point = 385
   Insn 5(l0): point = 387
   Insn 4(l0): point = 389
   Insn 3(l0): point = 391
   Insn 2(l0): point = 393
 a0(r230): [11..12]
 a1(r229): [17..22]
 a2(r228): [27..28]
 a3(r227): [37..38]
 a4(r151): [61..64]
 a5(r226): [61..62]
 a6(r224): [65..68]
 a7(r225): [65..66]
 a8(r223): [71..72]
 a9(r150): [71..74]
 a10(r149): [75..76]
 a11(r222): [77..78]
 a12(r220): [81..82]
 a13(r148): [83..86]
 a14(r221): [83..84]
 a15(r219): [87..88]
 a16(r218): [91..92]
 a17(r147): [93..94]
 a18(r141): [93..108]
 a19(r146): [95..96]
 a20(r145): [95..98]
 a21(r144): [99..100]
 a22(r143): [101..102]
 a23(r142): [101..106]
 a24(r217): [103..104]
 a25(r140): [109..110]
 a26(r134): [109..124]
 a27(r139): [111..112]
 a28(r138): [111..114]
 a29(r137): [115..116]
 a30(r136): [117..118]
 a31(r135): [117..122]
 a32(r216): [119..120]
 a33(r133): [125..126]
 a34(r129): [125..134]
 a35(r132): [127..128]
 a36(r131): [127..130]
 a37(r130): [131..132]
 a38(r128): [135..136]
 a39(r127): [135..138]
 a40(r126): [139..140]
 a41(r215): [143..144]
 a42(r125): [145..146]
 a43(r119): [145..160]
 a44(r124): [147..148]
 a45(r123): [147..150]
 a46(r122): [151..152]
 a47(r121): [153..154]
 a48(r120): [153..158]
 a49(r214): [155..156]
 a50(r118): [161..162]
 a51(r117): [161..164]
 a52(r116): [165..166]
 a53(r115): [167..168]
 a54(r114): [167..172]
 a55(r213): [169..170]
 a56(r210): [179..198]
 a57(r209): [181..200]
 a58(r208): [185..202]
 a59(r207): [187..204]
 a60(r206): [189..206]
 a61(r212): [191..192]
 a62(r211): [195..196]
 a63(r203): [213..232]
 a64(r202): [215..234]
 a65(r201): [217..236]
 a66(r200): [219..238]
 a67(r199): [221..240]
 a68(r198): [223..242]
 a69(r205): [225..226]
 a70(r204): [229..230]
 a71(r177): [47..48]
 a72(r196): [248..249]
 a73(r197): [250..251]
 a74(r113): [250..253]
 a75(r112): [254..255]
 a76(r111): [256..257]
 a77(r110): [256..261]
 a78(r195): [258..259]
 a79(r194): [262..263]
 a80(r109): [262..265]
 a81(r108): [266..267]
 a82(r107): [268..269]
 a83(r193): [270..271]
 a84(r105 [0]): [274..395]
 a84(r105 [1]): [273..395]
 a85(r104): [276..277]
 a86(r173): [278..279]
 a87(r192): [280..283]
 a88(r172): [280..285]
 a89(r191): [288..289]
 a90(r103): [290..291]
 a91(r190): [292..293]
 a92(r101 [0]): [296..395]
 a92(r101 [1]): [295..395]
 a93(r100): [298..299]
 a94(r168): [300..301]
 a95(r189): [302..305]
 a96(r167): [302..307]
 a97(r188): [310..311]
 a98(r99): [312..313]
 a99(r187): [314..315]
 a100(r97 [0]): [318..395]
 a100(r97 [1]): [317..395]
 a101(r96): [320..321]
 a102(r163): [322..323]
 a103(r186): [324..327]
 a104(r162): [324..329]
 a105(r185): [332..333]
 a106(r95): [334..335]
 a107(r184): [336..337]
 a108(r93 [0]): [340..395]
 a108(r93 [1]): [339..395]
 a109(r92): [342..343]
 a110(r158): [344..345]
 a111(r183): [346..349]
 a112(r157): [346..351]
 a113(r182): [354..355]
 a114(r91): [356..357]
 a115(r181): [358..359]
 a116(r89 [0]): [362..395]
 a116(r89 [1]): [361..395]
 a117(r88): [364..365]
 a118(r153): [366..367]
 a119(r180): [368..371]
 a120(r152): [368..373]
 a121(r179): [376..377]
 a122(r87): [378..379]
 a123(r178): [380..381]
Compressing live ranges: from 396 to 164 - 41%
Ranges after the compression:
 a0(r230): [0..1]
 a1(r229): [2..3]
 a2(r228): [4..5]
 a3(r227): [6..7]
 a4(r151): [10..11]
 a5(r226): [10..11]
 a6(r224): [12..13]
 a7(r225): [12..13]
 a8(r223): [14..15]
 a9(r150): [14..15]
 a10(r149): [16..17]
 a11(r222): [18..19]
 a12(r220): [20..21]
 a13(r148): [22..23]
 a14(r221): [22..23]
 a15(r219): [24..25]
 a16(r218): [26..27]
 a17(r147): [28..29]
 a18(r141): [28..37]
 a19(r146): [30..31]
 a20(r145): [30..31]
 a21(r144): [32..33]
 a22(r143): [34..35]
 a23(r142): [34..37]
 a24(r217): [36..37]
 a25(r140): [38..39]
 a26(r134): [38..47]
 a27(r139): [40..41]
 a28(r138): [40..41]
 a29(r137): [42..43]
 a30(r136): [44..45]
 a31(r135): [44..47]
 a32(r216): [46..47]
 a33(r133): [48..49]
 a34(r129): [48..53]
 a35(r132): [50..51]
 a36(r131): [50..51]
 a37(r130): [52..53]
 a38(r128): [54..55]
 a39(r127): [54..55]
 a40(r126): [56..57]
 a41(r215): [58..59]
 a42(r125): [60..61]
 a43(r119): [60..69]
 a44(r124): [62..63]
 a45(r123): [62..63]
 a46(r122): [64..65]
 a47(r121): [66..67]
 a48(r120): [66..69]
 a49(r214): [68..69]
 a50(r118): [70..71]
 a51(r117): [70..71]
 a52(r116): [72..73]
 a53(r115): [74..75]
 a54(r114): [74..77]
 a55(r213): [76..77]
 a56(r210): [78..81]
 a57(r209): [78..81]
 a58(r208): [78..81]
 a59(r207): [78..81]
 a60(r206): [78..81]
 a61(r212): [78..79]
 a62(r211): [80..81]
 a63(r203): [82..85]
 a64(r202): [82..85]
 a65(r201): [82..85]
 a66(r200): [82..85]
 a67(r199): [82..85]
 a68(r198): [82..85]
 a69(r205): [82..83]
 a70(r204): [84..85]
 a71(r177): [8..9]
 a72(r196): [86..87]
 a73(r197): [88..89]
 a74(r113): [88..89]
 a75(r112): [90..91]
 a76(r111): [92..93]
 a77(r110): [92..95]
 a78(r195): [94..95]
 a79(r194): [96..97]
 a80(r109): [96..97]
 a81(r108): [98..99]
 a82(r107): [100..101]
 a83(r193): [102..103]
 a84(r105 [0]): [104..163]
 a84(r105 [1]): [104..163]
 a85(r104): [104..105]
 a86(r173): [106..107]
 a87(r192): [108..109]
 a88(r172): [108..109]
 a89(r191): [110..111]
 a90(r103): [112..113]
 a91(r190): [114..115]
 a92(r101 [0]): [116..163]
 a92(r101 [1]): [116..163]
 a93(r100): [116..117]
 a94(r168): [118..119]
 a95(r189): [120..121]
 a96(r167): [120..121]
 a97(r188): [122..123]
 a98(r99): [124..125]
 a99(r187): [126..127]
 a100(r97 [0]): [128..163]
 a100(r97 [1]): [128..163]
 a101(r96): [128..129]
 a102(r163): [130..131]
 a103(r186): [132..133]
 a104(r162): [132..133]
 a105(r185): [134..135]
 a106(r95): [136..137]
 a107(r184): [138..139]
 a108(r93 [0]): [140..163]
 a108(r93 [1]): [140..163]
 a109(r92): [140..141]
 a110(r158): [142..143]
 a111(r183): [144..145]
 a112(r157): [144..145]
 a113(r182): [146..147]
 a114(r91): [148..149]
 a115(r181): [150..151]
 a116(r89 [0]): [152..163]
 a116(r89 [1]): [152..163]
 a117(r88): [152..153]
 a118(r153): [154..155]
 a119(r180): [156..157]
 a120(r152): [156..157]
 a121(r179): [158..159]
 a122(r87): [160..161]
 a123(r178): [162..163]
  regions=1, blocks=10, points=164
    allocnos=124 (big 5), copies=0, conflicts=0, ranges=129
Disposition:
  122:r87  l0     0  117:r88  l0     0  116:r89  l0   mem  114:r91  l0     0
  109:r92  l0     0  108:r93  l0   mem  106:r95  l0     0  101:r96  l0     0
  100:r97  l0    43   98:r99  l0     0   93:r100 l0     0   92:r101 l0    41
   90:r103 l0     0   85:r104 l0     0   84:r105 l0    39   82:r107 l0     0
   81:r108 l0     0   80:r109 l0     1   77:r110 l0    21   76:r111 l0    22
   75:r112 l0    21   74:r113 l0    22   54:r114 l0    21   53:r115 l0    22
   52:r116 l0    21   51:r117 l0    22   50:r118 l0    21   43:r119 l0    22
   48:r120 l0    21   47:r121 l0    23   46:r122 l0    21   45:r123 l0    23
   44:r124 l0    21   42:r125 l0    21   40:r126 l0    21   39:r127 l0    22
   38:r128 l0    21   34:r129 l0    22   37:r130 l0    21   36:r131 l0    23
   35:r132 l0    21   33:r133 l0    21   26:r134 l0    22   31:r135 l0    21
   30:r136 l0    23   29:r137 l0    21   28:r138 l0    23   27:r139 l0    21
   25:r140 l0    21   18:r141 l0    22   23:r142 l0    21   22:r143 l0    23
   21:r144 l0    21   20:r145 l0    23   19:r146 l0    21   17:r147 l0    21
   13:r148 l0    21   10:r149 l0    21    9:r150 l0    21    4:r151 l0    21
  120:r152 l0     0  118:r153 l0     0  112:r157 l0     0  110:r158 l0     0
  104:r162 l0     0  102:r163 l0     0   96:r167 l0     0   94:r168 l0     0
   88:r172 l0     0   86:r173 l0     0   71:r177 l0     0  123:r178 l0     0
  121:r179 l0     0  119:r180 l0     1  115:r181 l0     0  113:r182 l0     0
  111:r183 l0     1  107:r184 l0     0  105:r185 l0     0  103:r186 l0     1
   99:r187 l0     0   97:r188 l0     0   95:r189 l0     1   91:r190 l0     0
   89:r191 l0     0   87:r192 l0     1   83:r193 l0     0   79:r194 l0     0
   78:r195 l0     0   72:r196 l0    21   73:r197 l0    21   68:r198 l0    38
   67:r199 l0    37   66:r200 l0     2   65:r201 l0     1   64:r202 l0     4
   63:r203 l0     0   70:r204 l0     5   69:r205 l0     5   60:r206 l0    37
   59:r207 l0     5   58:r208 l0     1   57:r209 l0     4   56:r210 l0     0
   62:r211 l0     2   61:r212 l0     2   55:r213 l0     0   49:r214 l0     0
   41:r215 l0    21   32:r216 l0     0   24:r217 l0     0   16:r218 l0    21
   15:r219 l0    21   12:r220 l0    21   14:r221 l0    22   11:r222 l0     0
    8:r223 l0     0    6:r224 l0    22    7:r225 l0    21    5:r226 l0    22
    3:r227 l0     0    2:r228 l0     0    1:r229 l0     0    0:r230 l0     0
+++Costs: overall 0, reg -4, mem 4, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


nearpt

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 37 [r8] 38 [r9]
;;  ref usage 	r0={6d} r1={9d,4u} r2={8d,3u} r4={9d,4u} r5={11d,6u} r6={1d,9u} r7={7d,22u} r8={5d} r9={5d} r10={5d} r11={5d} r12={5d} r13={5d} r14={5d} r15={5d} r16={1d,21u} r17={28d,8u} r18={5d} r19={5d} r20={1d,74u} r21={6d} r22={6d} r23={6d} r24={6d} r25={6d} r26={6d} r27={6d} r28={6d} r29={5d} r30={5d} r31={5d} r32={5d} r33={5d} r34={5d} r35={5d} r36={5d} r37={8d,3u} r38={8d,3u} r39={5d} r40={5d} r45={5d} r46={5d} r47={5d} r48={5d} r49={5d} r50={5d} r51={5d} r52={5d} r53={5d} r54={5d} r55={5d} r56={5d} r57={5d} r58={5d} r59={5d} r60={5d} r61={5d} r62={5d} r63={5d} r64={5d} r65={5d} r66={5d} r67={5d} r68={5d} r69={5d} r70={5d} r71={5d} r72={5d} r73={5d} r74={5d} r75={5d} r76={5d} r77={5d} r78={5d} r79={5d} r80={5d} r87={1d,1u} r88={1d,1u} r89={2d,2u} r91={1d,1u} r92={1d,1u} r93={2d,2u} r95={1d,1u} r96={1d,1u} r97={2d,2u} r99={1d,1u} r100={1d,1u} r101={2d,2u} r103={1d,1u} r104={1d,1u} r105={2d,2u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,1u} r127={1d,1u} r128={1d,1u} r129={1d,1u} r130={1d,1u} r131={1d,1u} r132={1d,1u} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u,1e} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,2u} r153={1d,1u} r157={1d,2u} r158={1d,1u} r162={1d,2u} r163={1d,1u} r167={1d,2u} r168={1d,1u} r172={1d,2u} r173={1d,1u} r177={1d,1u} r178={1d,1u} r179={1d,1u} r180={1d,1u} r181={1d,1u} r182={1d,1u} r183={1d,1u} r184={1d,1u} r185={1d,1u} r186={1d,1u} r187={1d,1u} r188={1d,1u} r189={1d,1u} r190={1d,1u} r191={1d,1u} r192={1d,1u} r193={1d,1u} r194={1d,1u} r195={1d,1u} r196={1d,1u} r197={1d,1u} r198={1d,1u} r199={1d,1u} r200={1d,1u} r201={1d,1u} r202={1d,1u} r203={1d,1u} r204={1d,1u} r205={1d,1u} r206={1d,1u} r207={1d,1u} r208={1d,1u} r209={1d,1u} r210={1d,1u} r211={1d,1u} r212={1d,1u} r213={1d,1u} r214={1d,1u} r215={1d,1u} r216={1d,1u} r217={1d,1u} r218={1d,1u} r219={1d,1u} r220={1d,1u} r221={1d,1u} r222={1d,1u} r223={1d,1u} r224={1d,1u,1e} r225={1d,1u} r226={1d,1u} r227={1d,1u} r228={1d,1u} r229={1d,1u} r230={1d,1u} 
;;    total ref usage 847{554d,291u,2e} in 194{189 regular + 5 call} insns.
(note 1 0 9 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9] 89 93 97 101 105
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9] 89 93 97 101 105
;; lr  def 	 17 [flags] 87 88 91 92 95 96 99 100 103 104 107 108 109 110 111 112 113 152 153 157 158 162 163 167 168 172 173 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197
(note 9 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 9 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -584 [0xfffffffffffffdb8])) [4 xpnt+0 S8 A64])
        (reg:DI 5 di [ xpnt ])) "../src/spline.f":782 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ xpnt ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -592 [0xfffffffffffffdb0])) [4 ypnt+0 S8 A64])
        (reg:DI 4 si [ ypnt ])) "../src/spline.f":782 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ ypnt ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -600 [0xfffffffffffffda8])) [4 snear+0 S8 A64])
        (reg:DI 1 dx [ snear ])) "../src/spline.f":782 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ snear ])
        (nil)))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -608 [0xfffffffffffffda0])) [5 x+0 S8 A64])
        (reg:DI 2 cx [ x ])) "../src/spline.f":782 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [ x ])
        (nil)))
(insn 6 5 7 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -616 [0xfffffffffffffd98])) [5 xp+0 S8 A64])
        (reg:DI 37 r8 [ xp ])) "../src/spline.f":782 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 37 r8 [ xp ])
        (nil)))
(insn 7 6 8 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -624 [0xfffffffffffffd90])) [5 y+0 S8 A64])
        (reg:DI 38 r9 [ y ])) "../src/spline.f":782 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 38 r9 [ y ])
        (nil)))
(note 8 7 11 2 NOTE_INSN_FUNCTION_BEG)
(insn 11 8 12 2 (set (reg/f:DI 178)
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 16 [0x10])) [6 n+0 S8 A64])) "../src/spline.f":782 81 {*movdi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:SI 87 [ _1 ])
        (mem:SI (reg/f:DI 178) [1 *n_70(D)+0 S4 A32])) "../src/spline.f":782 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 178)
        (nil)))
(insn 13 12 14 2 (set (reg:DI 179)
        (sign_extend:DI (reg:SI 87 [ _1 ]))) "../src/spline.f":782 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 87 [ _1 ])
        (nil)))
(insn 14 13 15 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 ubound.133+0 S8 A64])
        (reg:DI 179)) "../src/spline.f":782 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 179)
        (nil)))
(insn 15 14 17 2 (set (reg:DI 152 [ size.134_72 ])
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 ubound.133+0 S8 A64])) "../src/spline.f":782 81 {*movdi_internal}
     (nil))
(insn 17 15 16 2 (set (reg:DI 180)
        (const_int 0 [0])) "../src/spline.f":782 81 {*movdi_internal}
     (nil))
(insn 16 17 18 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 152 [ size.134_72 ])
            (const_int 0 [0]))) "../src/spline.f":782 4 {*cmpdi_ccno_1}
     (nil))
(insn 18 16 20 2 (set (reg:DI 153 [ size.134_73 ])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 152 [ size.134_72 ])
            (reg:DI 180))) "../src/spline.f":782 967 {*movdicc_noc}
     (expr_list:REG_DEAD (reg:DI 180)
        (expr_list:REG_DEAD (reg:DI 152 [ size.134_72 ])
            (expr_list:REG_DEAD (reg:CCGOC 17 flags)
                (nil)))))
(insn 20 18 21 2 (set (reg:DI 88 [ size.300_2 ])
        (reg:DI 153 [ size.134_73 ])) "../src/spline.f":782 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 153 [ size.134_73 ])
        (nil)))
(insn 21 20 22 2 (set (subreg:DI (reg:TI 89 [ _3 ]) 0)
        (reg:DI 88 [ size.300_2 ])) "../src/spline.f":782 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88 [ size.300_2 ])
        (nil)))
(insn 22 21 26 2 (set (subreg:DI (reg:TI 89 [ _3 ]) 8)
        (const_int 0 [0])) "../src/spline.f":782 81 {*movdi_internal}
     (expr_list:REG_UNUSED (reg:TI 89 [ _3 ])
        (nil)))
(insn 26 22 27 2 (set (reg/f:DI 181)
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 16 [0x10])) [6 n+0 S8 A64])) "../src/spline.f":782 81 {*movdi_internal}
     (nil))
(insn 27 26 28 2 (set (reg:SI 91 [ _5 ])
        (mem:SI (reg/f:DI 181) [1 *n_70(D)+0 S4 A32])) "../src/spline.f":782 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 181)
        (nil)))
(insn 28 27 29 2 (set (reg:DI 182)
        (sign_extend:DI (reg:SI 91 [ _5 ]))) "../src/spline.f":782 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 91 [ _5 ])
        (nil)))
(insn 29 28 30 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [2 ubound.135+0 S8 A64])
        (reg:DI 182)) "../src/spline.f":782 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 182)
        (nil)))
(insn 30 29 32 2 (set (reg:DI 157 [ size.136_78 ])
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [2 ubound.135+0 S8 A64])) "../src/spline.f":782 81 {*movdi_internal}
     (nil))
(insn 32 30 31 2 (set (reg:DI 183)
        (const_int 0 [0])) "../src/spline.f":782 81 {*movdi_internal}
     (nil))
(insn 31 32 33 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 157 [ size.136_78 ])
            (const_int 0 [0]))) "../src/spline.f":782 4 {*cmpdi_ccno_1}
     (nil))
(insn 33 31 35 2 (set (reg:DI 158 [ size.136_79 ])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 157 [ size.136_78 ])
            (reg:DI 183))) "../src/spline.f":782 967 {*movdicc_noc}
     (expr_list:REG_DEAD (reg:DI 183)
        (expr_list:REG_DEAD (reg:DI 157 [ size.136_78 ])
            (expr_list:REG_DEAD (reg:CCGOC 17 flags)
                (nil)))))
(insn 35 33 36 2 (set (reg:DI 92 [ size.302_6 ])
        (reg:DI 158 [ size.136_79 ])) "../src/spline.f":782 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 158 [ size.136_79 ])
        (nil)))
(insn 36 35 37 2 (set (subreg:DI (reg:TI 93 [ _7 ]) 0)
        (reg:DI 92 [ size.302_6 ])) "../src/spline.f":782 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 92 [ size.302_6 ])
        (nil)))
(insn 37 36 41 2 (set (subreg:DI (reg:TI 93 [ _7 ]) 8)
        (const_int 0 [0])) "../src/spline.f":782 81 {*movdi_internal}
     (expr_list:REG_UNUSED (reg:TI 93 [ _7 ])
        (nil)))
(insn 41 37 42 2 (set (reg/f:DI 184)
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 16 [0x10])) [6 n+0 S8 A64])) "../src/spline.f":782 81 {*movdi_internal}
     (nil))
(insn 42 41 43 2 (set (reg:SI 95 [ _9 ])
        (mem:SI (reg/f:DI 184) [1 *n_70(D)+0 S4 A32])) "../src/spline.f":782 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 184)
        (nil)))
(insn 43 42 44 2 (set (reg:DI 185)
        (sign_extend:DI (reg:SI 95 [ _9 ]))) "../src/spline.f":782 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 95 [ _9 ])
        (nil)))
(insn 44 43 45 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [2 ubound.137+0 S8 A64])
        (reg:DI 185)) "../src/spline.f":782 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 185)
        (nil)))
(insn 45 44 47 2 (set (reg:DI 162 [ size.138_84 ])
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [2 ubound.137+0 S8 A64])) "../src/spline.f":782 81 {*movdi_internal}
     (nil))
(insn 47 45 46 2 (set (reg:DI 186)
        (const_int 0 [0])) "../src/spline.f":782 81 {*movdi_internal}
     (nil))
(insn 46 47 48 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 162 [ size.138_84 ])
            (const_int 0 [0]))) "../src/spline.f":782 4 {*cmpdi_ccno_1}
     (nil))
(insn 48 46 50 2 (set (reg:DI 163 [ size.138_85 ])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 162 [ size.138_84 ])
            (reg:DI 186))) "../src/spline.f":782 967 {*movdicc_noc}
     (expr_list:REG_DEAD (reg:DI 186)
        (expr_list:REG_DEAD (reg:DI 162 [ size.138_84 ])
            (expr_list:REG_DEAD (reg:CCGOC 17 flags)
                (nil)))))
(insn 50 48 51 2 (set (reg:DI 96 [ size.304_10 ])
        (reg:DI 163 [ size.138_85 ])) "../src/spline.f":782 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 163 [ size.138_85 ])
        (nil)))
(insn 51 50 52 2 (set (subreg:DI (reg:TI 97 [ _11 ]) 0)
        (reg:DI 96 [ size.304_10 ])) "../src/spline.f":782 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 96 [ size.304_10 ])
        (nil)))
(insn 52 51 56 2 (set (subreg:DI (reg:TI 97 [ _11 ]) 8)
        (const_int 0 [0])) "../src/spline.f":782 81 {*movdi_internal}
     (expr_list:REG_UNUSED (reg:TI 97 [ _11 ])
        (nil)))
(insn 56 52 57 2 (set (reg/f:DI 187)
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 16 [0x10])) [6 n+0 S8 A64])) "../src/spline.f":782 81 {*movdi_internal}
     (nil))
(insn 57 56 58 2 (set (reg:SI 99 [ _13 ])
        (mem:SI (reg/f:DI 187) [1 *n_70(D)+0 S4 A32])) "../src/spline.f":782 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 187)
        (nil)))
(insn 58 57 59 2 (set (reg:DI 188)
        (sign_extend:DI (reg:SI 99 [ _13 ]))) "../src/spline.f":782 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 99 [ _13 ])
        (nil)))
(insn 59 58 60 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [2 ubound.139+0 S8 A64])
        (reg:DI 188)) "../src/spline.f":782 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 188)
        (nil)))
(insn 60 59 62 2 (set (reg:DI 167 [ size.140_90 ])
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [2 ubound.139+0 S8 A64])) "../src/spline.f":782 81 {*movdi_internal}
     (nil))
(insn 62 60 61 2 (set (reg:DI 189)
        (const_int 0 [0])) "../src/spline.f":782 81 {*movdi_internal}
     (nil))
(insn 61 62 63 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 167 [ size.140_90 ])
            (const_int 0 [0]))) "../src/spline.f":782 4 {*cmpdi_ccno_1}
     (nil))
(insn 63 61 65 2 (set (reg:DI 168 [ size.140_91 ])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 167 [ size.140_90 ])
            (reg:DI 189))) "../src/spline.f":782 967 {*movdicc_noc}
     (expr_list:REG_DEAD (reg:DI 189)
        (expr_list:REG_DEAD (reg:DI 167 [ size.140_90 ])
            (expr_list:REG_DEAD (reg:CCGOC 17 flags)
                (nil)))))
(insn 65 63 66 2 (set (reg:DI 100 [ size.306_14 ])
        (reg:DI 168 [ size.140_91 ])) "../src/spline.f":782 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 168 [ size.140_91 ])
        (nil)))
(insn 66 65 67 2 (set (subreg:DI (reg:TI 101 [ _15 ]) 0)
        (reg:DI 100 [ size.306_14 ])) "../src/spline.f":782 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 100 [ size.306_14 ])
        (nil)))
(insn 67 66 71 2 (set (subreg:DI (reg:TI 101 [ _15 ]) 8)
        (const_int 0 [0])) "../src/spline.f":782 81 {*movdi_internal}
     (expr_list:REG_UNUSED (reg:TI 101 [ _15 ])
        (nil)))
(insn 71 67 72 2 (set (reg/f:DI 190)
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 16 [0x10])) [6 n+0 S8 A64])) "../src/spline.f":782 81 {*movdi_internal}
     (nil))
(insn 72 71 73 2 (set (reg:SI 103 [ _17 ])
        (mem:SI (reg/f:DI 190) [1 *n_70(D)+0 S4 A32])) "../src/spline.f":782 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 190)
        (nil)))
(insn 73 72 74 2 (set (reg:DI 191)
        (sign_extend:DI (reg:SI 103 [ _17 ]))) "../src/spline.f":782 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 103 [ _17 ])
        (nil)))
(insn 74 73 75 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [2 ubound.141+0 S8 A64])
        (reg:DI 191)) "../src/spline.f":782 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 191)
        (nil)))
(insn 75 74 77 2 (set (reg:DI 172 [ size.142_96 ])
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [2 ubound.141+0 S8 A64])) "../src/spline.f":782 81 {*movdi_internal}
     (nil))
(insn 77 75 76 2 (set (reg:DI 192)
        (const_int 0 [0])) "../src/spline.f":782 81 {*movdi_internal}
     (nil))
(insn 76 77 78 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 172 [ size.142_96 ])
            (const_int 0 [0]))) "../src/spline.f":782 4 {*cmpdi_ccno_1}
     (nil))
(insn 78 76 80 2 (set (reg:DI 173 [ size.142_97 ])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 172 [ size.142_96 ])
            (reg:DI 192))) "../src/spline.f":782 967 {*movdicc_noc}
     (expr_list:REG_DEAD (reg:DI 192)
        (expr_list:REG_DEAD (reg:DI 172 [ size.142_96 ])
            (expr_list:REG_DEAD (reg:CCGOC 17 flags)
                (nil)))))
(insn 80 78 81 2 (set (reg:DI 104 [ size.308_18 ])
        (reg:DI 173 [ size.142_97 ])) "../src/spline.f":782 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 173 [ size.142_97 ])
        (nil)))
(insn 81 80 82 2 (set (subreg:DI (reg:TI 105 [ _19 ]) 0)
        (reg:DI 104 [ size.308_18 ])) "../src/spline.f":782 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 104 [ size.308_18 ])
        (nil)))
(insn 82 81 86 2 (set (subreg:DI (reg:TI 105 [ _19 ]) 8)
        (const_int 0 [0])) "../src/spline.f":782 81 {*movdi_internal}
     (expr_list:REG_UNUSED (reg:TI 105 [ _19 ])
        (nil)))
(insn 86 82 87 2 (set (reg/f:DI 193)
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 16 [0x10])) [6 n+0 S8 A64])) "../src/spline.f":795 81 {*movdi_internal}
     (nil))
(insn 87 86 88 2 (set (reg:SI 107 [ _21 ])
        (mem:SI (reg/f:DI 193) [1 *n_70(D)+0 S4 A32])) "../src/spline.f":795 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 193)
        (nil)))
(insn 88 87 89 2 (set (reg:DI 108 [ _22 ])
        (sign_extend:DI (reg:SI 107 [ _21 ]))) "../src/spline.f":795 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 107 [ _21 ])
        (nil)))
(insn 89 88 90 2 (parallel [
            (set (reg:DI 109 [ _23 ])
                (plus:DI (reg:DI 108 [ _22 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":795 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 108 [ _22 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 90 89 91 2 (set (reg/f:DI 194)
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 8 [0x8])) [5 s+0 S8 A64])) "../src/spline.f":795 81 {*movdi_internal}
     (nil))
(insn 91 90 92 2 (set (reg:SF 110 [ _24 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 109 [ _23 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 194)) [3 *s_101(D) S4 A32])) "../src/spline.f":795 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 194)
        (expr_list:REG_DEAD (reg:DI 109 [ _23 ])
            (nil))))
(insn 92 91 93 2 (set (reg/f:DI 195)
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 8 [0x8])) [5 s+0 S8 A64])) "../src/spline.f":795 81 {*movdi_internal}
     (nil))
(insn 93 92 94 2 (set (reg:SF 111 [ _25 ])
        (mem:SF (reg/f:DI 195) [3 *s_101(D)+0 S4 A32])) "../src/spline.f":795 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 195)
        (nil)))
(insn 94 93 95 2 (set (reg:SF 112 [ _26 ])
        (minus:SF (reg:SF 110 [ _24 ])
            (reg:SF 111 [ _25 ]))) "../src/spline.f":795 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 111 [ _25 ])
        (expr_list:REG_DEAD (reg:SF 110 [ _24 ])
            (nil))))
(insn 95 94 96 2 (set (reg:SF 113 [ _27 ])
        (reg:SF 112 [ _26 ])) "../src/spline.f":795 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 112 [ _26 ])
        (nil)))
(insn 96 95 97 2 (set (reg:SF 197)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC27") [flags 0x2]) [3  S4 A32])) "../src/spline.f":795 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 9.99999974737875163555145263671875e-5 [0x0.d1b717p-13])
        (nil)))
(insn 97 96 98 2 (set (reg:SF 196)
        (mult:SF (reg:SF 113 [ _27 ])
            (reg:SF 197))) "../src/spline.f":795 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 197)
        (expr_list:REG_DEAD (reg:SF 113 [ _27 ])
            (nil))))
(insn 98 97 99 2 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -52 [0xffffffffffffffcc])) [3 eps+0 S4 A32])
        (reg:SF 196)) "../src/spline.f":795 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 196)
        (nil)))
(insn 99 98 201 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 ipass+0 S4 A32])
        (const_int 1 [0x1])) "../src/spline.f":798 82 {*movsi_internal}
     (nil))
;;  succ:       3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 (FALLTHRU)
;;              5 [100.0%] 
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 177
(code_label 201 99 100 3 226 (nil) [1 uses])
(note 100 201 101 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 101 100 102 3 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [1 ipass+0 S4 A32])
            (const_int 10 [0xa]))) "../src/spline.f":798 7 {*cmpsi_1}
     (nil))
(insn 102 101 103 3 (set (reg:QI 177 [ _104 ])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "../src/spline.f":798 613 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil)))
(insn 103 102 104 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 177 [ _104 ])
            (const_int 0 [0]))) "../src/spline.f":798 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 177 [ _104 ])
        (nil)))
(jump_insn 104 103 105 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 233)
            (pc))) "../src/spline.f":798 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 233)
;;  succ:       8
;;              4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226
(note 105 104 106 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 106 105 107 4 (parallel [
            (set (reg:DI 198)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -76 [0xffffffffffffffb4])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":799 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 107 106 108 4 (set (reg:DI 199)
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 16 [0x10])) [6 n+0 S8 A64])) "../src/spline.f":799 81 {*movdi_internal}
     (nil))
(insn 108 107 109 4 (set (reg:DI 200)
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 8 [0x8])) [5 s+0 S8 A64])) "../src/spline.f":799 81 {*movdi_internal}
     (nil))
(insn 109 108 110 4 (set (reg:DI 201)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -616 [0xfffffffffffffd98])) [5 xp+0 S8 A64])) "../src/spline.f":799 81 {*movdi_internal}
     (nil))
(insn 110 109 111 4 (set (reg:DI 202)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -608 [0xfffffffffffffda0])) [5 x+0 S8 A64])) "../src/spline.f":799 81 {*movdi_internal}
     (nil))
(insn 111 110 112 4 (set (reg:DI 203)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -600 [0xfffffffffffffda8])) [4 snear+0 S8 A64])) "../src/spline.f":799 81 {*movdi_internal}
     (nil))
(insn 112 111 113 4 (parallel [
            (set (reg:DI 204)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -68 [0xffffffffffffffbc])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":799 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 113 112 114 4 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [5  S8 A64])
        (reg:DI 204)) "../src/spline.f":799 57 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 204)
        (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
            (nil))))
(insn 114 113 115 4 (parallel [
            (set (reg:DI 205)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -72 [0xffffffffffffffb8])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":799 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 115 114 116 4 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [5  S8 A64])
        (reg:DI 205)) "../src/spline.f":799 57 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 205)
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 116 115 117 4 (set (reg:DI 38 r9)
        (reg:DI 198)) "../src/spline.f":799 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 198)
        (nil)))
(insn 117 116 118 4 (set (reg:DI 37 r8)
        (reg:DI 199)) "../src/spline.f":799 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 199)
        (nil)))
(insn 118 117 119 4 (set (reg:DI 2 cx)
        (reg:DI 200)) "../src/spline.f":799 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 200)
        (nil)))
(insn 119 118 120 4 (set (reg:DI 1 dx)
        (reg:DI 201)) "../src/spline.f":799 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 201)
        (nil)))
(insn 120 119 121 4 (set (reg:DI 4 si)
        (reg:DI 202)) "../src/spline.f":799 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 202)
        (nil)))
(insn 121 120 122 4 (set (reg:DI 5 di)
        (reg:DI 203)) "../src/spline.f":799 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 203)
        (nil)))
(call_insn 122 121 123 4 (call (mem:QI (symbol_ref:DI ("sevall_") [flags 0x403]  <function_decl 0x1427e4800 sevall>) [0 sevall S1 A8])
        (const_int 16 [0x10])) "../src/spline.f":799 655 {*call}
     (expr_list:REG_DEAD (reg:DI 38 r9)
        (expr_list:REG_DEAD (reg:DI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:DI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:DI 1 dx)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 123 122 124 4 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":799 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 124 123 125 4 (parallel [
            (set (reg:DI 206)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -88 [0xffffffffffffffa8])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":800 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 125 124 126 4 (set (reg:DI 207)
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 16 [0x10])) [6 n+0 S8 A64])) "../src/spline.f":800 81 {*movdi_internal}
     (nil))
(insn 126 125 127 4 (set (reg:DI 208)
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 8 [0x8])) [5 s+0 S8 A64])) "../src/spline.f":800 81 {*movdi_internal}
     (nil))
(insn 127 126 128 4 (set (reg:DI 209)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -624 [0xfffffffffffffd90])) [5 y+0 S8 A64])) "../src/spline.f":800 81 {*movdi_internal}
     (nil))
(insn 128 127 129 4 (set (reg:DI 210)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -600 [0xfffffffffffffda8])) [4 snear+0 S8 A64])) "../src/spline.f":800 81 {*movdi_internal}
     (nil))
(insn 129 128 130 4 (parallel [
            (set (reg:DI 211)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -80 [0xffffffffffffffb0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":800 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 130 129 131 4 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [5  S8 A64])
        (reg:DI 211)) "../src/spline.f":800 57 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 211)
        (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
            (nil))))
(insn 131 130 132 4 (parallel [
            (set (reg:DI 212)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -84 [0xffffffffffffffac])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":800 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 132 131 133 4 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [5  S8 A64])
        (reg:DI 212)) "../src/spline.f":800 57 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 212)
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 133 132 134 4 (set (reg:DI 38 r9)
        (reg:DI 206)) "../src/spline.f":800 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 206)
        (nil)))
(insn 134 133 135 4 (set (reg:DI 37 r8)
        (reg:DI 207)) "../src/spline.f":800 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 207)
        (nil)))
(insn 135 134 136 4 (set (reg:DI 2 cx)
        (reg:DI 208)) "../src/spline.f":800 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 208)
        (nil)))
(insn 136 135 137 4 (set (reg:DI 1 dx)
        (mem/f/c:DI (reg/f:DI 16 argp) [5 yp+0 S8 A64])) "../src/spline.f":800 81 {*movdi_internal}
     (nil))
(insn 137 136 138 4 (set (reg:DI 4 si)
        (reg:DI 209)) "../src/spline.f":800 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 209)
        (nil)))
(insn 138 137 139 4 (set (reg:DI 5 di)
        (reg:DI 210)) "../src/spline.f":800 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 210)
        (nil)))
(call_insn 139 138 140 4 (call (mem:QI (symbol_ref:DI ("sevall_") [flags 0x403]  <function_decl 0x1427e4800 sevall>) [0 sevall S1 A8])
        (const_int 16 [0x10])) "../src/spline.f":800 655 {*call}
     (expr_list:REG_DEAD (reg:DI 38 r9)
        (expr_list:REG_DEAD (reg:DI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:DI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:DI 1 dx)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 140 139 141 4 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":800 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 141 140 142 4 (set (reg:SF 114 [ xxi.310_28 ])
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -76 [0xffffffffffffffb4])) [3 xxi+0 S4 A32])) "../src/spline.f":803 127 {*movsf_internal}
     (nil))
(insn 142 141 143 4 (set (reg/f:DI 213)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -584 [0xfffffffffffffdb8])) [4 xpnt+0 S8 A64])) "../src/spline.f":803 81 {*movdi_internal}
     (nil))
(insn 143 142 144 4 (set (reg:SF 115 [ _29 ])
        (mem:SF (reg/f:DI 213) [3 *xpnt_112(D)+0 S4 A32])) "../src/spline.f":803 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 213)
        (nil)))
(insn 144 143 145 4 (set (reg:SF 116 [ _30 ])
        (minus:SF (reg:SF 114 [ xxi.310_28 ])
            (reg:SF 115 [ _29 ]))) "../src/spline.f":803 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 115 [ _29 ])
        (expr_list:REG_DEAD (reg:SF 114 [ xxi.310_28 ])
            (nil))))
(insn 145 144 146 4 (set (reg:SF 117 [ _31 ])
        (reg:SF 116 [ _30 ])) "../src/spline.f":803 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 116 [ _30 ])
        (nil)))
(insn 146 145 147 4 (set (reg:SF 118 [ xpi.311_32 ])
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [3 xpi+0 S4 A64])) "../src/spline.f":803 127 {*movsf_internal}
     (nil))
(insn 147 146 148 4 (set (reg:SF 119 [ _33 ])
        (mult:SF (reg:SF 117 [ _31 ])
            (reg:SF 118 [ xpi.311_32 ]))) "../src/spline.f":803 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 118 [ xpi.311_32 ])
        (expr_list:REG_DEAD (reg:SF 117 [ _31 ])
            (nil))))
(insn 148 147 149 4 (set (reg:SF 120 [ yyi.312_34 ])
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -88 [0xffffffffffffffa8])) [3 yyi+0 S4 A64])) "../src/spline.f":803 127 {*movsf_internal}
     (nil))
(insn 149 148 150 4 (set (reg/f:DI 214)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -592 [0xfffffffffffffdb0])) [4 ypnt+0 S8 A64])) "../src/spline.f":803 81 {*movdi_internal}
     (nil))
(insn 150 149 151 4 (set (reg:SF 121 [ _35 ])
        (mem:SF (reg/f:DI 214) [3 *ypnt_113(D)+0 S4 A32])) "../src/spline.f":803 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 214)
        (nil)))
(insn 151 150 152 4 (set (reg:SF 122 [ _36 ])
        (minus:SF (reg:SF 120 [ yyi.312_34 ])
            (reg:SF 121 [ _35 ]))) "../src/spline.f":803 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 121 [ _35 ])
        (expr_list:REG_DEAD (reg:SF 120 [ yyi.312_34 ])
            (nil))))
(insn 152 151 153 4 (set (reg:SF 123 [ _37 ])
        (reg:SF 122 [ _36 ])) "../src/spline.f":803 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 122 [ _36 ])
        (nil)))
(insn 153 152 154 4 (set (reg:SF 124 [ ypi.313_38 ])
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -84 [0xffffffffffffffac])) [3 ypi+0 S4 A32])) "../src/spline.f":803 127 {*movsf_internal}
     (nil))
(insn 154 153 155 4 (set (reg:SF 125 [ _39 ])
        (mult:SF (reg:SF 123 [ _37 ])
            (reg:SF 124 [ ypi.313_38 ]))) "../src/spline.f":803 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 124 [ ypi.313_38 ])
        (expr_list:REG_DEAD (reg:SF 123 [ _37 ])
            (nil))))
(insn 155 154 156 4 (set (reg:SF 215)
        (plus:SF (reg:SF 119 [ _33 ])
            (reg:SF 125 [ _39 ]))) "../src/spline.f":803 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 125 [ _39 ])
        (expr_list:REG_DEAD (reg:SF 119 [ _33 ])
            (nil))))
(insn 156 155 157 4 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [3 res+0 S4 A32])
        (reg:SF 215)) "../src/spline.f":803 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 215)
        (nil)))
(insn 157 156 158 4 (set (reg:SF 126 [ xpi.314_40 ])
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [3 xpi+0 S4 A64])) "../src/spline.f":806 127 {*movsf_internal}
     (nil))
(insn 158 157 159 4 (set (reg:SF 127 [ _41 ])
        (reg:SF 126 [ xpi.314_40 ])) "../src/spline.f":806 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 126 [ xpi.314_40 ])
        (nil)))
(insn 159 158 160 4 (set (reg:SF 128 [ xpi.315_42 ])
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [3 xpi+0 S4 A64])) "../src/spline.f":806 127 {*movsf_internal}
     (nil))
(insn 160 159 161 4 (set (reg:SF 129 [ _43 ])
        (mult:SF (reg:SF 127 [ _41 ])
            (reg:SF 128 [ xpi.315_42 ]))) "../src/spline.f":806 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 128 [ xpi.315_42 ])
        (expr_list:REG_DEAD (reg:SF 127 [ _41 ])
            (nil))))
(insn 161 160 162 4 (set (reg:SF 130 [ ypi.316_44 ])
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -84 [0xffffffffffffffac])) [3 ypi+0 S4 A32])) "../src/spline.f":806 127 {*movsf_internal}
     (nil))
(insn 162 161 163 4 (set (reg:SF 131 [ _45 ])
        (reg:SF 130 [ ypi.316_44 ])) "../src/spline.f":806 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 130 [ ypi.316_44 ])
        (nil)))
(insn 163 162 164 4 (set (reg:SF 132 [ ypi.317_46 ])
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -84 [0xffffffffffffffac])) [3 ypi+0 S4 A32])) "../src/spline.f":806 127 {*movsf_internal}
     (nil))
(insn 164 163 165 4 (set (reg:SF 133 [ _47 ])
        (mult:SF (reg:SF 131 [ _45 ])
            (reg:SF 132 [ ypi.317_46 ]))) "../src/spline.f":806 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 132 [ ypi.317_46 ])
        (expr_list:REG_DEAD (reg:SF 131 [ _45 ])
            (nil))))
(insn 165 164 166 4 (set (reg:SF 134 [ _48 ])
        (plus:SF (reg:SF 129 [ _43 ])
            (reg:SF 133 [ _47 ]))) "../src/spline.f":806 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 133 [ _47 ])
        (expr_list:REG_DEAD (reg:SF 129 [ _43 ])
            (nil))))
(insn 166 165 167 4 (set (reg:SF 135 [ xxi.318_49 ])
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -76 [0xffffffffffffffb4])) [3 xxi+0 S4 A32])) "../src/spline.f":806 127 {*movsf_internal}
     (nil))
(insn 167 166 168 4 (set (reg/f:DI 216)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -584 [0xfffffffffffffdb8])) [4 xpnt+0 S8 A64])) "../src/spline.f":806 81 {*movdi_internal}
     (nil))
(insn 168 167 169 4 (set (reg:SF 136 [ _50 ])
        (mem:SF (reg/f:DI 216) [3 *xpnt_112(D)+0 S4 A32])) "../src/spline.f":806 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 216)
        (nil)))
(insn 169 168 170 4 (set (reg:SF 137 [ _51 ])
        (minus:SF (reg:SF 135 [ xxi.318_49 ])
            (reg:SF 136 [ _50 ]))) "../src/spline.f":806 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 136 [ _50 ])
        (expr_list:REG_DEAD (reg:SF 135 [ xxi.318_49 ])
            (nil))))
(insn 170 169 171 4 (set (reg:SF 138 [ _52 ])
        (reg:SF 137 [ _51 ])) "../src/spline.f":806 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 137 [ _51 ])
        (nil)))
(insn 171 170 172 4 (set (reg:SF 139 [ x2i.319_53 ])
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -68 [0xffffffffffffffbc])) [3 x2i+0 S4 A32])) "../src/spline.f":806 127 {*movsf_internal}
     (nil))
(insn 172 171 173 4 (set (reg:SF 140 [ _54 ])
        (mult:SF (reg:SF 138 [ _52 ])
            (reg:SF 139 [ x2i.319_53 ]))) "../src/spline.f":806 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 139 [ x2i.319_53 ])
        (expr_list:REG_DEAD (reg:SF 138 [ _52 ])
            (nil))))
(insn 173 172 174 4 (set (reg:SF 141 [ _55 ])
        (plus:SF (reg:SF 134 [ _48 ])
            (reg:SF 140 [ _54 ]))) "../src/spline.f":806 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 140 [ _54 ])
        (expr_list:REG_DEAD (reg:SF 134 [ _48 ])
            (nil))))
(insn 174 173 175 4 (set (reg:SF 142 [ yyi.320_56 ])
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -88 [0xffffffffffffffa8])) [3 yyi+0 S4 A64])) "../src/spline.f":806 127 {*movsf_internal}
     (nil))
(insn 175 174 176 4 (set (reg/f:DI 217)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -592 [0xfffffffffffffdb0])) [4 ypnt+0 S8 A64])) "../src/spline.f":806 81 {*movdi_internal}
     (nil))
(insn 176 175 177 4 (set (reg:SF 143 [ _57 ])
        (mem:SF (reg/f:DI 217) [3 *ypnt_113(D)+0 S4 A32])) "../src/spline.f":806 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 217)
        (nil)))
(insn 177 176 178 4 (set (reg:SF 144 [ _58 ])
        (minus:SF (reg:SF 142 [ yyi.320_56 ])
            (reg:SF 143 [ _57 ]))) "../src/spline.f":806 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 143 [ _57 ])
        (expr_list:REG_DEAD (reg:SF 142 [ yyi.320_56 ])
            (nil))))
(insn 178 177 179 4 (set (reg:SF 145 [ _59 ])
        (reg:SF 144 [ _58 ])) "../src/spline.f":806 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 144 [ _58 ])
        (nil)))
(insn 179 178 180 4 (set (reg:SF 146 [ y2i.321_60 ])
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [3 y2i+0 S4 A128])) "../src/spline.f":806 127 {*movsf_internal}
     (nil))
(insn 180 179 181 4 (set (reg:SF 147 [ _61 ])
        (mult:SF (reg:SF 145 [ _59 ])
            (reg:SF 146 [ y2i.321_60 ]))) "../src/spline.f":806 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 146 [ y2i.321_60 ])
        (expr_list:REG_DEAD (reg:SF 145 [ _59 ])
            (nil))))
(insn 181 180 182 4 (set (reg:SF 218)
        (plus:SF (reg:SF 141 [ _55 ])
            (reg:SF 147 [ _61 ]))) "../src/spline.f":806 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 147 [ _61 ])
        (expr_list:REG_DEAD (reg:SF 141 [ _55 ])
            (nil))))
(insn 182 181 183 4 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -60 [0xffffffffffffffc4])) [3 res_s+0 S4 A32])
        (reg:SF 218)) "../src/spline.f":806 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 218)
        (nil)))
(insn 183 182 184 4 (set (reg:SF 219)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [3 res+0 S4 A32])) "../src/spline.f":808 127 {*movsf_internal}
     (nil))
(insn 184 183 185 4 (set (reg:SF 148 [ _62 ])
        (div:SF (reg:SF 219)
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -60 [0xffffffffffffffc4])) [3 res_s+0 S4 A32]))) "../src/spline.f":808 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 219)
        (nil)))
(insn 185 184 186 4 (set (reg:V4SF 221)
        (mem/u/c:V4SF (symbol_ref/u:DI ("*lC23") [flags 0x2]) [3  S16 A128])) "../src/spline.f":808 1225 {movv4sf_internal}
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF -0.0 [-0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 186 185 187 4 (parallel [
            (set (reg:SF 220)
                (neg:SF (reg:SF 148 [ _62 ])))
            (use (reg:V4SF 221))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":808 470 {*absnegsf2}
     (expr_list:REG_DEAD (reg:V4SF 221)
        (expr_list:REG_DEAD (reg:SF 148 [ _62 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (neg:SF (reg:SF 148 [ _62 ]))
                    (nil))))))
(insn 187 186 188 4 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [3 dsn+0 S4 A32])
        (reg:SF 220)) "../src/spline.f":808 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 220)
        (nil)))
(insn 188 187 189 4 (set (reg/f:DI 222)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -600 [0xfffffffffffffda8])) [4 snear+0 S8 A64])) "../src/spline.f":809 81 {*movdi_internal}
     (nil))
(insn 189 188 190 4 (set (reg:SF 149 [ _63 ])
        (mem:SF (reg/f:DI 222) [3 *snear_105(D)+0 S4 A32])) "../src/spline.f":809 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 222)
        (nil)))
(insn 190 189 191 4 (set (reg:SF 150 [ _64 ])
        (plus:SF (reg:SF 149 [ _63 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -64 [0xffffffffffffffc0])) [3 dsn+0 S4 A32]))) "../src/spline.f":809 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 149 [ _63 ])
        (nil)))
(insn 191 190 192 4 (set (reg/f:DI 223)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -600 [0xfffffffffffffda8])) [4 snear+0 S8 A64])) "../src/spline.f":809 81 {*movdi_internal}
     (nil))
(insn 192 191 193 4 (set (mem:SF (reg/f:DI 223) [3 *snear_105(D)+0 S4 A32])
        (reg:SF 150 [ _64 ])) "../src/spline.f":809 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 223)
        (expr_list:REG_DEAD (reg:SF 150 [ _64 ])
            (nil))))
(insn 193 192 194 4 (set (reg:SF 224)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [3 dsn+0 S4 A32])) "../src/spline.f":810 127 {*movsf_internal}
     (nil))
(insn 194 193 195 4 (set (reg:V4SF 225)
        (mem/u/c:V4SF (symbol_ref/u:DI ("*lC13") [flags 0x2]) [3  S16 A128])) "../src/spline.f":810 1225 {movv4sf_internal}
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF +QNaN [+QNaN])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 195 194 196 4 (parallel [
            (set (reg:SF 151 [ _65 ])
                (abs:SF (reg:SF 224)))
            (use (reg:V4SF 225))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":810 470 {*absnegsf2}
     (expr_list:REG_DEAD (reg:V4SF 225)
        (expr_list:REG_DEAD (reg:SF 224)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (abs:SF (reg:SF 224))
                    (nil))))))
(insn 196 195 197 4 (set (reg:SF 226)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -52 [0xffffffffffffffcc])) [3 eps+0 S4 A32])) "../src/spline.f":810 127 {*movsf_internal}
     (nil))
(insn 197 196 198 4 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 226)
            (reg:SF 151 [ _65 ]))) "../src/spline.f":810 51 {*cmpiusf}
     (expr_list:REG_DEAD (reg:SF 226)
        (expr_list:REG_DEAD (reg:SF 151 [ _65 ])
            (nil))))
(jump_insn 198 197 199 4 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 238)
            (pc))) "../src/spline.f":810 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil))
 -> 238)
;;  succ:       9
;;              5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 8, flags: (RTL)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 199 198 200 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 200 199 230 5 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -4 [0xfffffffffffffffc])) [1 ipass+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 ipass+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":798 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 230 200 231 5 (set (pc)
        (label_ref 201)) "../src/spline.f":798 649 {jump}
     (nil)
 -> 201)
;;  succ:       3 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 231 230 233)
;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 6, flags: (RTL)
;;  pred:       3
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 233 231 232 8 228 (nil) [1 uses])
(note 232 233 234 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 234 232 204 8 (const_int 0 [0]) "../src/spline.f":812 682 {nop}
     (nil))
;;  succ:       6 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 9, flags: (RTL)
;;  pred:       8 [100.0%]  (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 227 228 229 230
(code_label 204 234 205 6 224 (nil) [0 uses])
(note 205 204 206 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 206 205 207 6 (set (reg/f:DI 227)
        (symbol_ref/f:DI ("*lC15") [flags 0x2]  <var_decl 0x143540c60 *lC15>)) "../src/spline.f":813 81 {*movdi_internal}
     (nil))
(insn 207 206 208 6 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -568 [0xfffffffffffffdc8])) [12 dt_parm.143.common.filename+0 S8 A64])
        (reg/f:DI 227)) "../src/spline.f":813 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 227)
        (nil)))
(insn 208 207 209 6 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -560 [0xfffffffffffffdd0])) [1 dt_parm.143.common.line+0 S4 A128])
        (const_int 813 [0x32d])) "../src/spline.f":813 82 {*movsi_internal}
     (nil))
(insn 209 208 210 6 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -576 [0xfffffffffffffdc0])) [1 dt_parm.143.common.flags+0 S4 A128])
        (const_int 128 [0x80])) "../src/spline.f":813 82 {*movsi_internal}
     (nil))
(insn 210 209 211 6 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -572 [0xfffffffffffffdc4])) [1 dt_parm.143.common.unit+0 S4 A32])
        (const_int 6 [0x6])) "../src/spline.f":813 82 {*movsi_internal}
     (nil))
(insn 211 210 212 6 (parallel [
            (set (reg:DI 228)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -576 [0xfffffffffffffdc0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":813 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 212 211 213 6 (set (reg:DI 5 di)
        (reg:DI 228)) "../src/spline.f":813 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 228)
        (nil)))
(call_insn 213 212 214 6 (call (mem:QI (symbol_ref:DI ("_gfortran_st_write") [flags 0x41]  <function_decl 0x1427e0800 _gfortran_st_write>) [0 _gfortran_st_write S1 A8])
        (const_int 0 [0])) "../src/spline.f":813 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 214 213 215 6 (parallel [
            (set (reg:DI 229)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -576 [0xfffffffffffffdc0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":813 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 215 214 216 6 (set (reg:SI 1 dx)
        (const_int 42 [0x2a])) "../src/spline.f":813 82 {*movsi_internal}
     (nil))
(insn 216 215 217 6 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*lC28") [flags 0x2]  <var_decl 0x1435da2d0 *lC28>)) "../src/spline.f":813 81 {*movdi_internal}
     (nil))
(insn 217 216 218 6 (set (reg:DI 5 di)
        (reg:DI 229)) "../src/spline.f":813 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 229)
        (nil)))
(call_insn 218 217 219 6 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_character_write") [flags 0x41]  <function_decl 0x1427d4900 _gfortran_transfer_character_write>) [0 _gfortran_transfer_character_write S1 A8])
        (const_int 0 [0])) "../src/spline.f":813 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 219 218 220 6 (parallel [
            (set (reg:DI 230)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -576 [0xfffffffffffffdc0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/spline.f":813 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 220 219 221 6 (set (reg:DI 5 di)
        (reg:DI 230)) "../src/spline.f":813 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 230)
        (nil)))
(call_insn 221 220 235 6 (call (mem:QI (symbol_ref:DI ("_gfortran_st_write_done") [flags 0x41]  <function_decl 0x1427e4300 _gfortran_st_write_done>) [0 _gfortran_st_write_done S1 A8])
        (const_int 0 [0])) "../src/spline.f":813 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 235 221 236 6 (set (pc)
        (label_ref 222)) "../src/spline.f":816 649 {jump}
     (nil)
 -> 222)
;;  succ:       7
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 236 235 238)
;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 7, flags: (RTL)
;;  pred:       4
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 238 236 237 9 229 (nil) [1 uses])
(note 237 238 239 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 239 237 222 9 (const_int 0 [0]) "../src/spline.f":813 682 {nop}
     (nil))
;;  succ:       7 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 1, flags: (RTL)
;;  pred:       9 [100.0%]  (FALLTHRU)
;;              6
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 222 239 223 7 225 (nil) [1 uses])
(note 223 222 229 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 229 223 0 7 (const_int 0 [0]) "../src/spline.f":816 682 {nop}
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

