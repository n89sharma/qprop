
;; Function cdfun (cdfun_, funcdef_no=0, decl_uid=3499, cgraph_uid=0, symbol_order=0)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 6 n_edges 6 count 6 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 4 3 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 21.
verify found no changes in insn with uid = 93.
verify found no changes in insn with uid = 112.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r173: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r173,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r172: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r172,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r171: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r171,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r170: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r170,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r169: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r169,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r168: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r168,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r167: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r167,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r166: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a31 (r166,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r165: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a34 (r165,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r164: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a35 (r164,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r163: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a37 (r163,l0) best SSE_REGS, allocno SSE_REGS
    r162: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a36 (r162,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r161: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a38 (r161,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r160: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a46 (r160,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r159: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a47 (r159,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r158: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a49 (r158,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r157: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a55 (r157,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r156: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a56 (r156,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r155: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a64 (r155,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r154: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a65 (r154,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r153: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a67 (r153,l0) best SSE_REGS, allocno SSE_REGS
    r152: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a70 (r152,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r151: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a71 (r151,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r150: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a72 (r150,l0) best SSE_REGS, allocno SSE_REGS
    r149: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a75 (r149,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r148: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a77 (r148,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r147: preferred SSE_FIRST_REG, alternative GENERAL_REGS, allocno INT_SSE_REGS
    a78 (r147,l0) best SSE_FIRST_REG, allocno INT_SSE_REGS
    r146: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a81 (r146,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r145: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a85 (r145,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r144: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a86 (r144,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r143: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a9 (r143,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r142: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a24 (r142,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r141: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a45 (r141,l0) best SSE_REGS, allocno SSE_REGS
    r140: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a48 (r140,l0) best SSE_REGS, allocno SSE_REGS
    r139: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a63 (r139,l0) best SSE_REGS, allocno SSE_REGS
    r138: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a66 (r138,l0) best SSE_REGS, allocno SSE_REGS
    r137: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a79 (r137,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r136: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a1 (r136,l0) best SSE_REGS, allocno SSE_REGS
    r135: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a2 (r135,l0) best SSE_REGS, allocno SSE_REGS
    r134: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a4 (r134,l0) best SSE_REGS, allocno SSE_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r133,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r132: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a5 (r132,l0) best SSE_REGS, allocno SSE_REGS
    r131: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a7 (r131,l0) best SSE_REGS, allocno SSE_REGS
    r130: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a8 (r130,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r129: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a10 (r129,l0) best DIREG, allocno GENERAL_REGS
    r128: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r128,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r127: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a3 (r127,l0) best SSE_REGS, allocno SSE_REGS
    r126: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a13 (r126,l0) best SSE_REGS, allocno SSE_REGS
    r125: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a14 (r125,l0) best SSE_REGS, allocno SSE_REGS
    r124: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a15 (r124,l0) best SSE_REGS, allocno SSE_REGS
    r123: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a19 (r123,l0) best SSE_REGS, allocno SSE_REGS
    r122: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a20 (r122,l0) best SSE_REGS, allocno SSE_REGS
    r121: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a22 (r121,l0) best SSE_REGS, allocno SSE_REGS
    r120: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a23 (r120,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r119: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a25 (r119,l0) best DIREG, allocno GENERAL_REGS
    r118: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a21 (r118,l0) best SSE_REGS, allocno SSE_REGS
    r117: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a27 (r117,l0) best SSE_REGS, allocno SSE_REGS
    r116: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a28 (r116,l0) best SSE_REGS, allocno SSE_REGS
    r115: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a29 (r115,l0) best SSE_REGS, allocno SSE_REGS
    r114: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a32 (r114,l0) best SSE_REGS, allocno SSE_REGS
    r113: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a33 (r113,l0) best SSE_REGS, allocno SSE_REGS
    r112: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a39 (r112,l0) best SSE_REGS, allocno SSE_REGS
    r111: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a40 (r111,l0) best SSE_REGS, allocno SSE_REGS
    r110: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a41 (r110,l0) best SSE_REGS, allocno SSE_REGS
    r109: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a42 (r109,l0) best SSE_REGS, allocno SSE_REGS
    r108: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a44 (r108,l0) best SSE_REGS, allocno SSE_REGS
    r107: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a43 (r107,l0) best SSE_REGS, allocno SSE_REGS
    r106: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a50 (r106,l0) best SSE_REGS, allocno SSE_REGS
    r105: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a51 (r105,l0) best SSE_REGS, allocno SSE_REGS
    r104: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a52 (r104,l0) best SSE_REGS, allocno SSE_REGS
    r103: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a53 (r103,l0) best SSE_REGS, allocno SSE_REGS
    r102: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a54 (r102,l0) best SSE_REGS, allocno SSE_REGS
    r101: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a57 (r101,l0) best SSE_REGS, allocno SSE_REGS
    r100: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a58 (r100,l0) best SSE_REGS, allocno SSE_REGS
    r99: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a59 (r99,l0) best SSE_REGS, allocno SSE_REGS
    r98: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a60 (r98,l0) best SSE_REGS, allocno SSE_REGS
    r97: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a62 (r97,l0) best SSE_REGS, allocno SSE_REGS
    r96: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a61 (r96,l0) best SSE_REGS, allocno SSE_REGS
    r95: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a68 (r95,l0) best SSE_REGS, allocno SSE_REGS
    r94: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a69 (r94,l0) best SSE_REGS, allocno SSE_REGS
    r93: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a73 (r93,l0) best SSE_REGS, allocno SSE_REGS
    r92: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a74 (r92,l0) best SSE_REGS, allocno SSE_REGS
    r91: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a76 (r91,l0) best SSE_REGS, allocno SSE_REGS
    r90: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a80 (r90,l0) best SSE_REGS, allocno SSE_REGS
    r89: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a82 (r89,l0) best SSE_REGS, allocno SSE_REGS
    r88: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a83 (r88,l0) best SSE_REGS, allocno SSE_REGS
    r87: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a84 (r87,l0) best SSE_REGS, allocno SSE_REGS

  a0(r173,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a1(r136,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a2(r135,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a3(r127,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a4(r134,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a5(r132,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a6(r133,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:20 INT_SSE_REGS:17 ALL_REGS:204 MEM:5
  a7(r131,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a8(r130,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 ALL_REGS:29 MEM:8
  a9(r143,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 CLOBBERED_REGS:4 Q_REGS:4 NON_Q_REGS:4 TLS_GOTBASE_REGS:4 GENERAL_REGS:4 FP_TOP_REG:18 FP_SECOND_REG:18 FLOAT_REGS:18 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:16 FP_TOP_SSE_REGS:20 FP_SECOND_SSE_REGS:20 FLOAT_SSE_REGS:20 FLOAT_INT_REGS:18 INT_SSE_REGS:16 FLOAT_INT_SSE_REGS:20 ALL_REGS:20 MEM:2
  a10(r129,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:26 INT_SSE_REGS:18 ALL_REGS:416 MEM:6
  a11(r128,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a12(r172,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a13(r126,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:9
  a14(r125,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a15(r124,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a16(r171,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a17(r170,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a18(r169,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a19(r123,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a20(r122,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a21(r118,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a22(r121,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a23(r120,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 ALL_REGS:29 MEM:8
  a24(r142,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 CLOBBERED_REGS:4 Q_REGS:4 NON_Q_REGS:4 TLS_GOTBASE_REGS:4 GENERAL_REGS:4 FP_TOP_REG:18 FP_SECOND_REG:18 FLOAT_REGS:18 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:16 FP_TOP_SSE_REGS:20 FP_SECOND_SSE_REGS:20 FLOAT_SSE_REGS:20 FLOAT_INT_REGS:18 INT_SSE_REGS:16 FLOAT_INT_SSE_REGS:20 ALL_REGS:20 MEM:2
  a25(r119,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:7
  a26(r168,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a27(r117,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:9
  a28(r116,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a29(r115,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a30(r167,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a31(r166,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a32(r114,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a33(r113,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a34(r165,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a35(r164,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a36(r162,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a37(r163,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 CLOBBERED_REGS:4 Q_REGS:4 NON_Q_REGS:4 TLS_GOTBASE_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:29 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:12
  a38(r161,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a39(r112,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a40(r111,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 ALL_REGS:29 MEM:9
  a41(r110,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:9
  a42(r109,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a43(r107,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a44(r108,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a45(r141,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a46(r160,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a47(r159,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a48(r140,l0) costs: AREG:18 DREG:18 CREG:18 BREG:18 SIREG:18 DIREG:18 AD_REGS:18 CLOBBERED_REGS:18 Q_REGS:18 NON_Q_REGS:18 TLS_GOTBASE_REGS:18 GENERAL_REGS:18 FP_TOP_REG:54 FP_SECOND_REG:54 FLOAT_REGS:54 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:48 FP_TOP_SSE_REGS:56 FP_SECOND_SSE_REGS:56 FLOAT_SSE_REGS:56 FLOAT_INT_REGS:54 INT_SSE_REGS:37 FLOAT_INT_SSE_REGS:56 ALL_REGS:56 MEM:20
  a49(r158,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a50(r106,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a51(r105,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 ALL_REGS:29 MEM:9
  a52(r104,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:9
  a53(r103,l0) costs: AREG:24 DREG:24 CREG:24 BREG:24 SIREG:24 DIREG:24 AD_REGS:24 CLOBBERED_REGS:24 Q_REGS:24 NON_Q_REGS:24 TLS_GOTBASE_REGS:24 GENERAL_REGS:24 FP_TOP_REG:63 FP_SECOND_REG:63 FLOAT_REGS:63 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:51 FP_TOP_SSE_REGS:63 FP_SECOND_SSE_REGS:63 FLOAT_SSE_REGS:63 FLOAT_INT_REGS:63 INT_SSE_REGS:39 FLOAT_INT_SSE_REGS:63 ALL_REGS:63 MEM:22
  a54(r102,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a55(r157,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a56(r156,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a57(r101,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a58(r100,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 ALL_REGS:29 MEM:9
  a59(r99,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:9
  a60(r98,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a61(r96,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a62(r97,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a63(r139,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a64(r155,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a65(r154,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a66(r138,l0) costs: AREG:18 DREG:18 CREG:18 BREG:18 SIREG:18 DIREG:18 AD_REGS:18 CLOBBERED_REGS:18 Q_REGS:18 NON_Q_REGS:18 TLS_GOTBASE_REGS:18 GENERAL_REGS:18 FP_TOP_REG:54 FP_SECOND_REG:54 FLOAT_REGS:54 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:48 FP_TOP_SSE_REGS:56 FP_SECOND_SSE_REGS:56 FLOAT_SSE_REGS:56 FLOAT_INT_REGS:54 INT_SSE_REGS:37 FLOAT_INT_SSE_REGS:56 ALL_REGS:56 MEM:20
  a67(r153,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a68(r95,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a69(r94,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a70(r152,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a71(r151,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a72(r150,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a73(r93,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a74(r92,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:16
  a75(r149,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a76(r91,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a77(r148,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a78(r147,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 CLOBBERED_REGS:4 Q_REGS:4 NON_Q_REGS:4 TLS_GOTBASE_REGS:4 GENERAL_REGS:4 FP_TOP_REG:25 FP_SECOND_REG:25 FLOAT_REGS:25 SSE_FIRST_REG:19 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:23 FP_TOP_SSE_REGS:27 FP_SECOND_SSE_REGS:27 FLOAT_SSE_REGS:27 FLOAT_INT_REGS:25 INT_SSE_REGS:19 FLOAT_INT_SSE_REGS:27 ALL_REGS:27 MEM:7
  a79(r137,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 CLOBBERED_REGS:4 Q_REGS:4 NON_Q_REGS:4 TLS_GOTBASE_REGS:4 GENERAL_REGS:4 FP_TOP_REG:18 FP_SECOND_REG:18 FLOAT_REGS:18 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:16 FP_TOP_SSE_REGS:20 FP_SECOND_SSE_REGS:20 FLOAT_SSE_REGS:20 FLOAT_INT_REGS:18 INT_SSE_REGS:16 FLOAT_INT_SSE_REGS:20 ALL_REGS:20 MEM:2
  a80(r90,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 CLOBBERED_REGS:4 Q_REGS:4 NON_Q_REGS:4 TLS_GOTBASE_REGS:4 GENERAL_REGS:4 FP_TOP_REG:24 FP_SECOND_REG:24 FLOAT_REGS:24 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:22 FP_TOP_SSE_REGS:26 FP_SECOND_SSE_REGS:26 FLOAT_SSE_REGS:26 FLOAT_INT_REGS:24 INT_SSE_REGS:19 FLOAT_INT_SSE_REGS:26 ALL_REGS:26 MEM:7
  a81(r146,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a82(r89,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:9
  a83(r88,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a84(r87,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a85(r145,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a86(r144,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8

   Insn 131(l0): point = 1
   Insn 121(l0): point = 3
   Insn 120(l0): point = 5
   Insn 119(l0): point = 7
   Insn 118(l0): point = 9
   Insn 117(l0): point = 11
   Insn 116(l0): point = 13
   Insn 115(l0): point = 15
   Insn 114(l0): point = 17
   Insn 113(l0): point = 19
   Insn 112(l0): point = 21
   Insn 111(l0): point = 23
   Insn 110(l0): point = 25
   Insn 109(l0): point = 27
   Insn 108(l0): point = 29
   Insn 107(l0): point = 31
   Insn 106(l0): point = 33
   Insn 105(l0): point = 35
   Insn 104(l0): point = 37
   Insn 103(l0): point = 39
   Insn 102(l0): point = 41
   Insn 101(l0): point = 43
   Insn 100(l0): point = 45
   Insn 99(l0): point = 47
   Insn 98(l0): point = 49
   Insn 97(l0): point = 51
   Insn 96(l0): point = 53
   Insn 95(l0): point = 55
   Insn 94(l0): point = 57
   Insn 93(l0): point = 59
   Insn 92(l0): point = 61
   Insn 91(l0): point = 63
   Insn 90(l0): point = 65
   Insn 89(l0): point = 67
   Insn 88(l0): point = 69
   Insn 87(l0): point = 71
   Insn 86(l0): point = 73
   Insn 85(l0): point = 75
   Insn 84(l0): point = 77
   Insn 83(l0): point = 79
   Insn 82(l0): point = 81
   Insn 132(l0): point = 84
   Insn 77(l0): point = 87
   Insn 76(l0): point = 89
   Insn 75(l0): point = 91
   Insn 74(l0): point = 93
   Insn 73(l0): point = 95
   Insn 72(l0): point = 97
   Insn 71(l0): point = 99
   Insn 70(l0): point = 101
   Insn 69(l0): point = 103
   Insn 68(l0): point = 105
   Insn 67(l0): point = 107
   Insn 66(l0): point = 109
   Insn 65(l0): point = 111
   Insn 64(l0): point = 113
   Insn 63(l0): point = 115
   Insn 62(l0): point = 117
   Insn 61(l0): point = 119
   Insn 60(l0): point = 121
   Insn 59(l0): point = 123
   Insn 58(l0): point = 125
   Insn 57(l0): point = 127
   Insn 56(l0): point = 129
   Insn 55(l0): point = 131
   Insn 54(l0): point = 133
   Insn 53(l0): point = 135
   Insn 52(l0): point = 137
   Insn 51(l0): point = 139
   Insn 50(l0): point = 141
   Insn 49(l0): point = 143
   Insn 48(l0): point = 145
   Insn 47(l0): point = 147
   Insn 46(l0): point = 149
   Insn 45(l0): point = 151
   Insn 44(l0): point = 153
   Insn 43(l0): point = 155
   Insn 42(l0): point = 157
   Insn 41(l0): point = 159
   Insn 40(l0): point = 161
   Insn 39(l0): point = 163
   Insn 38(l0): point = 165
   Insn 37(l0): point = 167
   Insn 36(l0): point = 169
   Insn 35(l0): point = 171
   Insn 34(l0): point = 173
   Insn 33(l0): point = 175
   Insn 32(l0): point = 177
   Insn 31(l0): point = 179
   Insn 30(l0): point = 181
   Insn 29(l0): point = 183
   Insn 28(l0): point = 185
   Insn 27(l0): point = 187
   Insn 26(l0): point = 189
   Insn 25(l0): point = 191
   Insn 24(l0): point = 193
   Insn 23(l0): point = 195
   Insn 22(l0): point = 197
   Insn 21(l0): point = 199
   Insn 20(l0): point = 201
   Insn 19(l0): point = 203
   Insn 18(l0): point = 205
   Insn 17(l0): point = 207
   Insn 16(l0): point = 209
   Insn 15(l0): point = 211
   Insn 14(l0): point = 213
   Insn 13(l0): point = 215
   Insn 12(l0): point = 217
   Insn 11(l0): point = 219
   Insn 7(l0): point = 221
   Insn 6(l0): point = 223
   Insn 5(l0): point = 225
   Insn 4(l0): point = 227
   Insn 3(l0): point = 229
   Insn 2(l0): point = 231
 a0(r173): [4..5]
 a1(r136): [4..7]
 a2(r135): [8..9]
 a3(r127): [8..31]
 a4(r134): [10..11]
 a5(r132): [10..15]
 a6(r133): [12..13]
 a7(r131): [16..17]
 a8(r130): [16..19]
 a9(r143): [24..35]
 a10(r129): [26..27]
 a11(r128): [28..29]
 a12(r172): [32..33]
 a13(r126): [36..37]
 a14(r125): [38..39]
 a15(r124): [38..43]
 a16(r171): [40..41]
 a17(r170): [44..45]
 a18(r169): [48..49]
 a19(r123): [48..51]
 a20(r122): [52..53]
 a21(r118): [52..67]
 a22(r121): [54..55]
 a23(r120): [54..57]
 a24(r142): [62..71]
 a25(r119): [64..65]
 a26(r168): [68..69]
 a27(r117): [72..73]
 a28(r116): [74..75]
 a29(r115): [74..79]
 a30(r167): [76..77]
 a31(r166): [80..81]
 a32(r114): [90..91]
 a33(r113): [90..95]
 a34(r165): [92..93]
 a35(r164): [96..97]
 a36(r162): [100..103]
 a37(r163): [100..101]
 a38(r161): [106..107]
 a39(r112): [106..109]
 a40(r111): [110..111]
 a41(r110): [112..113]
 a42(r109): [114..115]
 a43(r107): [114..121]
 a44(r108): [116..117]
 a45(r141): [116..125]
 a46(r160): [118..119]
 a47(r159): [122..123]
 a48(r140): [126..127]
 a49(r158): [130..131]
 a50(r106): [130..133]
 a51(r105): [134..135]
 a52(r104): [136..137]
 a53(r103): [138..139]
 a54(r102): [140..141]
 a55(r157): [142..143]
 a56(r156): [146..147]
 a57(r101): [146..149]
 a58(r100): [150..151]
 a59(r99): [152..153]
 a60(r98): [154..155]
 a61(r96): [154..161]
 a62(r97): [156..157]
 a63(r139): [156..165]
 a64(r155): [158..159]
 a65(r154): [162..163]
 a66(r138): [166..167]
 a67(r153): [170..171]
 a68(r95): [172..173]
 a69(r94): [172..177]
 a70(r152): [174..175]
 a71(r151): [178..179]
 a72(r150): [182..183]
 a73(r93): [184..185]
 a74(r92): [184..189]
 a75(r149): [186..187]
 a76(r91): [190..191]
 a77(r148): [192..193]
 a78(r147): [196..197]
 a79(r137): [202..209]
 a80(r90): [204..205]
 a81(r146): [206..207]
 a82(r89): [210..211]
 a83(r88): [212..213]
 a84(r87): [212..217]
 a85(r145): [214..215]
 a86(r144): [218..219]
Compressing live ranges: from 234 to 126 - 53%
Ranges after the compression:
 a0(r173): [0..1]
 a1(r136): [0..1]
 a2(r135): [2..3]
 a3(r127): [2..13]
 a4(r134): [4..5]
 a5(r132): [4..7]
 a6(r133): [6..7]
 a7(r131): [8..9]
 a8(r130): [8..9]
 a9(r143): [10..15]
 a10(r129): [10..11]
 a11(r128): [12..13]
 a12(r172): [14..15]
 a13(r126): [16..17]
 a14(r125): [18..19]
 a15(r124): [18..21]
 a16(r171): [20..21]
 a17(r170): [22..23]
 a18(r169): [24..25]
 a19(r123): [24..25]
 a20(r122): [26..27]
 a21(r118): [26..31]
 a22(r121): [28..29]
 a23(r120): [28..29]
 a24(r142): [30..33]
 a25(r119): [30..31]
 a26(r168): [32..33]
 a27(r117): [34..35]
 a28(r116): [36..37]
 a29(r115): [36..39]
 a30(r167): [38..39]
 a31(r166): [40..41]
 a32(r114): [42..43]
 a33(r113): [42..45]
 a34(r165): [44..45]
 a35(r164): [46..47]
 a36(r162): [48..49]
 a37(r163): [48..49]
 a38(r161): [50..51]
 a39(r112): [50..51]
 a40(r111): [52..53]
 a41(r110): [54..55]
 a42(r109): [56..57]
 a43(r107): [56..61]
 a44(r108): [58..59]
 a45(r141): [58..63]
 a46(r160): [60..61]
 a47(r159): [62..63]
 a48(r140): [64..65]
 a49(r158): [66..67]
 a50(r106): [66..67]
 a51(r105): [68..69]
 a52(r104): [70..71]
 a53(r103): [72..73]
 a54(r102): [74..75]
 a55(r157): [76..77]
 a56(r156): [78..79]
 a57(r101): [78..79]
 a58(r100): [80..81]
 a59(r99): [82..83]
 a60(r98): [84..85]
 a61(r96): [84..89]
 a62(r97): [86..87]
 a63(r139): [86..91]
 a64(r155): [88..89]
 a65(r154): [90..91]
 a66(r138): [92..93]
 a67(r153): [94..95]
 a68(r95): [96..97]
 a69(r94): [96..99]
 a70(r152): [98..99]
 a71(r151): [100..101]
 a72(r150): [102..103]
 a73(r93): [104..105]
 a74(r92): [104..107]
 a75(r149): [106..107]
 a76(r91): [108..109]
 a77(r148): [110..111]
 a78(r147): [112..113]
 a79(r137): [114..117]
 a80(r90): [114..115]
 a81(r146): [116..117]
 a82(r89): [118..119]
 a83(r88): [120..121]
 a84(r87): [120..123]
 a85(r145): [122..123]
 a86(r144): [124..125]
  pref0:a78(r147)<-hr21@1
  regions=1, blocks=6, points=126
    allocnos=87 (big 0), copies=0, conflicts=0, ranges=87
Disposition:
   84:r87  l0    21   83:r88  l0    22   82:r89  l0    21   80:r90  l0    21
   76:r91  l0    21   74:r92  l0    21   73:r93  l0    22   69:r94  l0    21
   68:r95  l0    22   61:r96  l0    22   62:r97  l0    23   60:r98  l0    21
   59:r99  l0    21   58:r100 l0    21   57:r101 l0    21   54:r102 l0    21
   53:r103 l0    21   52:r104 l0    21   51:r105 l0    21   50:r106 l0    21
   43:r107 l0    22   44:r108 l0    23   42:r109 l0    21   41:r110 l0    21
   40:r111 l0    21   39:r112 l0    21   33:r113 l0    21   32:r114 l0    22
   29:r115 l0    21   28:r116 l0    22   27:r117 l0    21   21:r118 l0   mem
   25:r119 l0     0   23:r120 l0    22   22:r121 l0    21   20:r122 l0    21
   19:r123 l0    21   15:r124 l0    21   14:r125 l0    22   13:r126 l0    21
    3:r127 l0   mem   11:r128 l0     0   10:r129 l0     0    8:r130 l0    22
    7:r131 l0    21    5:r132 l0    22    6:r133 l0     0    4:r134 l0    21
    2:r135 l0    21    1:r136 l0    21   79:r137 l0    23   66:r138 l0    21
   63:r139 l0    21   48:r140 l0    21   45:r141 l0    21   24:r142 l0    21
    9:r143 l0    21   86:r144 l0     0   85:r145 l0     0   81:r146 l0     0
   78:r147 l0     0   77:r148 l0     0   75:r149 l0     0   72:r150 l0    21
   71:r151 l0     0   70:r152 l0     0   67:r153 l0    21   65:r154 l0     0
   64:r155 l0     0   56:r156 l0     0   55:r157 l0     0   49:r158 l0     0
   47:r159 l0     0   46:r160 l0     0   38:r161 l0     0   36:r162 l0     0
   37:r163 l0    21   35:r164 l0     0   34:r165 l0     0   31:r166 l0     0
   30:r167 l0     0   26:r168 l0     0   18:r169 l0     0   17:r170 l0     0
   16:r171 l0     0   12:r172 l0     0    0:r173 l0     0
+++Costs: overall 18, reg -8, mem 26, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


cdfun

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 21 [xmm0] 22 [xmm1] 37 [r8] 38 [r9]
;;  ref usage 	r0={4d} r1={4d,1u} r2={4d,1u} r4={4d,1u} r5={6d,3u} r6={1d,5u} r7={1d,8u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r16={1d,18u} r17={5d,1u} r18={3d} r19={3d} r20={1d,33u} r21={7d,6u} r22={5d,1u} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={4d,1u} r38={4d,1u} r39={3d} r40={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,2u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,1u} r127={1d,1u} r128={1d,1u} r129={1d,1u} r130={1d,1u} r131={1d,1u} r132={1d,1u} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,2u} r139={1d,1u} r140={1d,2u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d,1u} r165={1d,1u} r166={1d,1u} r167={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,1u} r171={1d,1u} r172={1d,1u} r173={1d,1u} 
;;    total ref usage 500{330d,170u,0e} in 115{112 regular + 3 call} insns.
(note 1 0 9 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 137 138 139 140 141 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165
(note 9 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 9 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [2 cl+0 S8 A64])
        (reg:DI 5 di [ cl ])) "../src/cdfun.f":22 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ cl ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [2 re+0 S8 A64])
        (reg:DI 4 si [ re ])) "../src/cdfun.f":22 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ re ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [2 ma+0 S8 A64])
        (reg:DI 1 dx [ ma ])) "../src/cdfun.f":22 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ ma ])
        (nil)))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [2 clcd0+0 S8 A64])
        (reg:DI 2 cx [ clcd0 ])) "../src/cdfun.f":22 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [ clcd0 ])
        (nil)))
(insn 6 5 7 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [2 cd0+0 S8 A64])
        (reg:DI 37 r8 [ cd0 ])) "../src/cdfun.f":22 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 37 r8 [ cd0 ])
        (nil)))
(insn 7 6 8 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [2 cd2+0 S8 A64])
        (reg:DI 38 r9 [ cd2 ])) "../src/cdfun.f":22 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 38 r9 [ cd2 ])
        (nil)))
(note 8 7 11 2 NOTE_INSN_FUNCTION_BEG)
(insn 11 8 12 2 (set (reg/f:DI 144)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [2 re+0 S8 A64])) "../src/cdfun.f":30 81 {*movdi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:SF 87 [ _1 ])
        (mem:SF (reg/f:DI 144) [1 *re_53(D)+0 S4 A32])) "../src/cdfun.f":30 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 144)
        (nil)))
(insn 13 12 14 2 (set (reg/f:DI 145)
        (mem/f/c:DI (reg/f:DI 16 argp) [2 reref+0 S8 A64])) "../src/cdfun.f":30 81 {*movdi_internal}
     (nil))
(insn 14 13 15 2 (set (reg:SF 88 [ _2 ])
        (mem:SF (reg/f:DI 145) [1 *reref_54(D)+0 S4 A32])) "../src/cdfun.f":30 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 145)
        (nil)))
(insn 15 14 16 2 (set (reg:SF 89 [ _3 ])
        (div:SF (reg:SF 87 [ _1 ])
            (reg:SF 88 [ _2 ]))) "../src/cdfun.f":30 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 88 [ _2 ])
        (expr_list:REG_DEAD (reg:SF 87 [ _1 ])
            (nil))))
(insn 16 15 17 2 (set (reg:SF 137 [ _55 ])
        (reg:SF 89 [ _3 ])) "../src/cdfun.f":30 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 89 [ _3 ])
        (nil)))
(insn 17 16 18 2 (set (reg/f:DI 146)
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 8 [0x8])) [2 reexp+0 S8 A64])) "../src/cdfun.f":30 81 {*movdi_internal}
     (nil))
(insn 18 17 19 2 (set (reg:SF 90 [ _4 ])
        (mem:SF (reg/f:DI 146) [1 *reexp_56(D)+0 S4 A32])) "../src/cdfun.f":30 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 146)
        (nil)))
(insn 19 18 20 2 (set (reg:SF 22 xmm1)
        (reg:SF 90 [ _4 ])) "../src/cdfun.f":30 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 90 [ _4 ])
        (nil)))
(insn 20 19 21 2 (set (reg:SF 21 xmm0)
        (reg:SF 137 [ _55 ])) "../src/cdfun.f":30 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 137 [ _55 ])
        (nil)))
(call_insn/u 21 20 22 2 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("powf") [flags 0x41]  <function_decl 0x142648100 __builtin_powf>) [0 __builtin_powf S1 A8])
            (const_int 0 [0]))) "../src/cdfun.f":30 665 {*call_value}
     (expr_list:REG_DEAD (reg:SF 22 xmm1)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (expr_list:SF (use (reg:SF 22 xmm1))
            (nil))))
(insn 22 21 23 2 (set (reg:SF 147)
        (reg:SF 21 xmm0)) "../src/cdfun.f":30 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 21 xmm0)
        (nil)))
(insn 23 22 24 2 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 fac+0 S4 A32])
        (reg:SF 147)) "../src/cdfun.f":30 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 147)
        (nil)))
(insn 24 23 25 2 (set (reg/f:DI 148)
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 8 [0x8])) [2 reexp+0 S8 A64])) "../src/cdfun.f":31 81 {*movdi_internal}
     (nil))
(insn 25 24 26 2 (set (reg:SF 91 [ _5 ])
        (mem:SF (reg/f:DI 148) [1 *reexp_56(D)+0 S4 A32])) "../src/cdfun.f":31 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 148)
        (nil)))
(insn 26 25 27 2 (set (reg:SF 92 [ _6 ])
        (mult:SF (reg:SF 91 [ _5 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [1 fac+0 S4 A32]))) "../src/cdfun.f":31 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 91 [ _5 ])
        (nil)))
(insn 27 26 28 2 (set (reg/f:DI 149)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [2 re+0 S8 A64])) "../src/cdfun.f":31 81 {*movdi_internal}
     (nil))
(insn 28 27 29 2 (set (reg:SF 93 [ _7 ])
        (mem:SF (reg/f:DI 149) [1 *re_53(D)+0 S4 A32])) "../src/cdfun.f":31 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 149)
        (nil)))
(insn 29 28 30 2 (set (reg:SF 150)
        (div:SF (reg:SF 92 [ _6 ])
            (reg:SF 93 [ _7 ]))) "../src/cdfun.f":31 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 93 [ _7 ])
        (expr_list:REG_DEAD (reg:SF 92 [ _6 ])
            (nil))))
(insn 30 29 31 2 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 fac_re+0 S4 A32])
        (reg:SF 150)) "../src/cdfun.f":31 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 150)
        (nil)))
(insn 31 30 32 2 (set (reg/f:DI 151)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [2 cl+0 S8 A64])) "../src/cdfun.f":34 81 {*movdi_internal}
     (nil))
(insn 32 31 33 2 (set (reg:SF 94 [ _8 ])
        (mem:SF (reg/f:DI 151) [1 *cl_59(D)+0 S4 A32])) "../src/cdfun.f":34 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 151)
        (nil)))
(insn 33 32 34 2 (set (reg/f:DI 152)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [2 clcd0+0 S8 A64])) "../src/cdfun.f":34 81 {*movdi_internal}
     (nil))
(insn 34 33 35 2 (set (reg:SF 95 [ _9 ])
        (mem:SF (reg/f:DI 152) [1 *clcd0_60(D)+0 S4 A32])) "../src/cdfun.f":34 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 152)
        (nil)))
(insn 35 34 36 2 (set (reg:SF 153)
        (minus:SF (reg:SF 94 [ _8 ])
            (reg:SF 95 [ _9 ]))) "../src/cdfun.f":34 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 95 [ _9 ])
        (expr_list:REG_DEAD (reg:SF 94 [ _8 ])
            (nil))))
(insn 36 35 37 2 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 clb+0 S4 A32])
        (reg:SF 153)) "../src/cdfun.f":34 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 153)
        (nil)))
(insn 37 36 38 2 (set (reg:SF 138 [ _62 ])
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 clb+0 S4 A32])) "../src/cdfun.f":35 127 {*movsf_internal}
     (nil))
(insn 38 37 39 2 (set (reg:SF 139 [ _63 ])
        (mult:SF (reg:SF 138 [ _62 ])
            (reg:SF 138 [ _62 ]))) "../src/cdfun.f":35 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 138 [ _62 ])
        (nil)))
(insn 39 38 40 2 (set (reg/f:DI 154)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [2 cd0+0 S8 A64])) "../src/cdfun.f":35 81 {*movdi_internal}
     (nil))
(insn 40 39 41 2 (set (reg:SF 96 [ _10 ])
        (mem:SF (reg/f:DI 154) [1 *cd0_64(D)+0 S4 A32])) "../src/cdfun.f":35 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 154)
        (nil)))
(insn 41 40 42 2 (set (reg/f:DI 155)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [2 cd2+0 S8 A64])) "../src/cdfun.f":35 81 {*movdi_internal}
     (nil))
(insn 42 41 43 2 (set (reg:SF 97 [ _11 ])
        (mem:SF (reg/f:DI 155) [1 *cd2_65(D)+0 S4 A32])) "../src/cdfun.f":35 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 155)
        (nil)))
(insn 43 42 44 2 (set (reg:SF 98 [ _12 ])
        (mult:SF (reg:SF 139 [ _63 ])
            (reg:SF 97 [ _11 ]))) "../src/cdfun.f":35 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 139 [ _63 ])
        (expr_list:REG_DEAD (reg:SF 97 [ _11 ])
            (nil))))
(insn 44 43 45 2 (set (reg:SF 99 [ _13 ])
        (plus:SF (reg:SF 96 [ _10 ])
            (reg:SF 98 [ _12 ]))) "../src/cdfun.f":35 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 98 [ _12 ])
        (expr_list:REG_DEAD (reg:SF 96 [ _10 ])
            (nil))))
(insn 45 44 46 2 (set (reg:SF 100 [ _14 ])
        (reg:SF 99 [ _13 ])) "../src/cdfun.f":35 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 99 [ _13 ])
        (nil)))
(insn 46 45 47 2 (set (reg:SF 101 [ _15 ])
        (mult:SF (reg:SF 100 [ _14 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [1 fac+0 S4 A32]))) "../src/cdfun.f":35 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 100 [ _14 ])
        (nil)))
(insn 47 46 48 2 (set (reg/f:DI 156)
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 24 [0x18])) [2 cd+0 S8 A64])) "../src/cdfun.f":35 81 {*movdi_internal}
     (nil))
(insn 48 47 49 2 (set (mem:SF (reg/f:DI 156) [1 *cd_66(D)+0 S4 A32])
        (reg:SF 101 [ _15 ])) "../src/cdfun.f":35 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 156)
        (expr_list:REG_DEAD (reg:SF 101 [ _15 ])
            (nil))))
(insn 49 48 50 2 (set (reg/f:DI 157)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [2 cd2+0 S8 A64])) "../src/cdfun.f":36 81 {*movdi_internal}
     (nil))
(insn 50 49 51 2 (set (reg:SF 102 [ _16 ])
        (mem:SF (reg/f:DI 157) [1 *cd2_65(D)+0 S4 A32])) "../src/cdfun.f":36 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 157)
        (nil)))
(insn 51 50 52 2 (set (reg:SF 103 [ _17 ])
        (mult:SF (reg:SF 102 [ _16 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [1 clb+0 S4 A32]))) "../src/cdfun.f":36 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 102 [ _16 ])
        (nil)))
(insn 52 51 53 2 (set (reg:SF 104 [ _18 ])
        (plus:SF (reg:SF 103 [ _17 ])
            (reg:SF 103 [ _17 ]))) "../src/cdfun.f":36 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 103 [ _17 ])
        (nil)))
(insn 53 52 54 2 (set (reg:SF 105 [ _19 ])
        (reg:SF 104 [ _18 ])) "../src/cdfun.f":36 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 104 [ _18 ])
        (nil)))
(insn 54 53 55 2 (set (reg:SF 106 [ _20 ])
        (mult:SF (reg:SF 105 [ _19 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [1 fac+0 S4 A32]))) "../src/cdfun.f":36 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 105 [ _19 ])
        (nil)))
(insn 55 54 56 2 (set (reg/f:DI 158)
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 32 [0x20])) [2 cd_cl+0 S8 A64])) "../src/cdfun.f":36 81 {*movdi_internal}
     (nil))
(insn 56 55 57 2 (set (mem:SF (reg/f:DI 158) [1 *cd_cl_68(D)+0 S4 A32])
        (reg:SF 106 [ _20 ])) "../src/cdfun.f":36 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 158)
        (expr_list:REG_DEAD (reg:SF 106 [ _20 ])
            (nil))))
(insn 57 56 58 2 (set (reg:SF 140 [ _70 ])
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 clb+0 S4 A32])) "../src/cdfun.f":37 127 {*movsf_internal}
     (nil))
(insn 58 57 59 2 (set (reg:SF 141 [ _71 ])
        (mult:SF (reg:SF 140 [ _70 ])
            (reg:SF 140 [ _70 ]))) "../src/cdfun.f":37 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 140 [ _70 ])
        (nil)))
(insn 59 58 60 2 (set (reg/f:DI 159)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [2 cd0+0 S8 A64])) "../src/cdfun.f":37 81 {*movdi_internal}
     (nil))
(insn 60 59 61 2 (set (reg:SF 107 [ _21 ])
        (mem:SF (reg/f:DI 159) [1 *cd0_64(D)+0 S4 A32])) "../src/cdfun.f":37 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 159)
        (nil)))
(insn 61 60 62 2 (set (reg/f:DI 160)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [2 cd2+0 S8 A64])) "../src/cdfun.f":37 81 {*movdi_internal}
     (nil))
(insn 62 61 63 2 (set (reg:SF 108 [ _22 ])
        (mem:SF (reg/f:DI 160) [1 *cd2_65(D)+0 S4 A32])) "../src/cdfun.f":37 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 160)
        (nil)))
(insn 63 62 64 2 (set (reg:SF 109 [ _23 ])
        (mult:SF (reg:SF 141 [ _71 ])
            (reg:SF 108 [ _22 ]))) "../src/cdfun.f":37 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 141 [ _71 ])
        (expr_list:REG_DEAD (reg:SF 108 [ _22 ])
            (nil))))
(insn 64 63 65 2 (set (reg:SF 110 [ _24 ])
        (plus:SF (reg:SF 107 [ _21 ])
            (reg:SF 109 [ _23 ]))) "../src/cdfun.f":37 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 109 [ _23 ])
        (expr_list:REG_DEAD (reg:SF 107 [ _21 ])
            (nil))))
(insn 65 64 66 2 (set (reg:SF 111 [ _25 ])
        (reg:SF 110 [ _24 ])) "../src/cdfun.f":37 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 110 [ _24 ])
        (nil)))
(insn 66 65 67 2 (set (reg:SF 112 [ _26 ])
        (mult:SF (reg:SF 111 [ _25 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 fac_re+0 S4 A32]))) "../src/cdfun.f":37 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 111 [ _25 ])
        (nil)))
(insn 67 66 68 2 (set (reg/f:DI 161)
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 40 [0x28])) [2 cd_re+0 S8 A64])) "../src/cdfun.f":37 81 {*movdi_internal}
     (nil))
(insn 68 67 69 2 (set (mem:SF (reg/f:DI 161) [1 *cd_re_72(D)+0 S4 A32])
        (reg:SF 112 [ _26 ])) "../src/cdfun.f":37 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 161)
        (expr_list:REG_DEAD (reg:SF 112 [ _26 ])
            (nil))))
(insn 69 68 70 2 (set (reg/f:DI 162)
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 48 [0x30])) [2 cd_ma+0 S8 A64])) "../src/cdfun.f":38 81 {*movdi_internal}
     (nil))
(insn 70 69 71 2 (set (reg:SF 163)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC0") [flags 0x2]) [1  S4 A32])) "../src/cdfun.f":38 127 {*movsf_internal}
     (nil))
(insn 71 70 72 2 (set (mem:SF (reg/f:DI 162) [1 *cd_ma_74(D)+0 S4 A32])
        (reg:SF 163)) "../src/cdfun.f":38 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 163)
        (expr_list:REG_DEAD (reg/f:DI 162)
            (nil))))
(insn 72 71 73 2 (set (reg/f:DI 164)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [2 ma+0 S8 A64])) "../src/cdfun.f":40 81 {*movdi_internal}
     (nil))
(insn 73 72 74 2 (set (reg:SF 113 [ _27 ])
        (mem:SF (reg/f:DI 164) [1 *ma_76(D)+0 S4 A32])) "../src/cdfun.f":40 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 164)
        (nil)))
(insn 74 73 75 2 (set (reg/f:DI 165)
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 16 [0x10])) [2 mcrit+0 S8 A64])) "../src/cdfun.f":40 81 {*movdi_internal}
     (nil))
(insn 75 74 76 2 (set (reg:SF 114 [ _28 ])
        (mem:SF (reg/f:DI 165) [1 *mcrit_77(D)+0 S4 A32])) "../src/cdfun.f":40 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 165)
        (nil)))
(insn 76 75 77 2 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 113 [ _27 ])
            (reg:SF 114 [ _28 ]))) "../src/cdfun.f":40 51 {*cmpiusf}
     (expr_list:REG_DEAD (reg:SF 114 [ _28 ])
        (expr_list:REG_DEAD (reg:SF 113 [ _27 ])
            (nil))))
(jump_insn 77 76 128 2 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 130)
            (pc))) "../src/cdfun.f":40 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil))
 -> 130)
;;  succ:       4
;;              3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 128 77 132 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(jump_insn 132 128 133 3 (set (pc)
        (label_ref 126)) "../src/cdfun.f":45 649 {jump}
     (nil)
 -> 126)
;;  succ:       5 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 133 132 130)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 142 143 166 167 168 169 170 171 172 173
(code_label 130 133 81 4 5 (nil) [1 uses])
(note 81 130 82 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 82 81 83 4 (set (reg/f:DI 166)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [2 ma+0 S8 A64])) "../src/cdfun.f":41 81 {*movdi_internal}
     (nil))
(insn 83 82 84 4 (set (reg:SF 115 [ _29 ])
        (mem:SF (reg/f:DI 166) [1 *ma_76(D)+0 S4 A32])) "../src/cdfun.f":41 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 166)
        (nil)))
(insn 84 83 85 4 (set (reg/f:DI 167)
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 16 [0x10])) [2 mcrit+0 S8 A64])) "../src/cdfun.f":41 81 {*movdi_internal}
     (nil))
(insn 85 84 86 4 (set (reg:SF 116 [ _30 ])
        (mem:SF (reg/f:DI 167) [1 *mcrit_77(D)+0 S4 A32])) "../src/cdfun.f":41 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 167)
        (nil)))
(insn 86 85 87 4 (set (reg:SF 117 [ _31 ])
        (minus:SF (reg:SF 115 [ _29 ])
            (reg:SF 116 [ _30 ]))) "../src/cdfun.f":41 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 116 [ _30 ])
        (expr_list:REG_DEAD (reg:SF 115 [ _29 ])
            (nil))))
(insn 87 86 88 4 (set (reg:SF 142 [ _78 ])
        (reg:SF 117 [ _31 ])) "../src/cdfun.f":41 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 117 [ _31 ])
        (nil)))
(insn 88 87 89 4 (set (reg/f:DI 168)
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 24 [0x18])) [2 cd+0 S8 A64])) "../src/cdfun.f":41 81 {*movdi_internal}
     (nil))
(insn 89 88 90 4 (set (reg:SF 118 [ _32 ])
        (mem:SF (reg/f:DI 168) [1 *cd_66(D)+0 S4 A32])) "../src/cdfun.f":41 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 168)
        (nil)))
(insn 90 89 91 4 (set (reg:SI 119 [ iexp.0_33 ])
        (mem/c:SI (symbol_ref:DI ("iexp.3518") [flags 0x1c02]  <var_decl 0x142004e10 iexp>) [3 iexp+0 S4 A32])) "../src/cdfun.f":41 82 {*movsi_internal}
     (nil))
(insn 91 90 92 4 (set (reg:SI 5 di)
        (reg:SI 119 [ iexp.0_33 ])) "../src/cdfun.f":41 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 119 [ iexp.0_33 ])
        (nil)))
(insn 92 91 93 4 (set (reg:SF 21 xmm0)
        (reg:SF 142 [ _78 ])) "../src/cdfun.f":41 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 142 [ _78 ])
        (nil)))
(call_insn/u 93 92 94 4 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("__powisf2") [flags 0x41]) [0  S1 A8])
            (const_int 0 [0]))) "../src/cdfun.f":41 665 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (use (reg:SI 5 di))
        (expr_list (use (reg:SF 21 xmm0))
            (nil))))
(insn 94 93 95 4 (set (reg:SF 120 [ _34 ])
        (reg:SF 21 xmm0)) "../src/cdfun.f":41 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 21 xmm0)
        (nil)))
(insn 95 94 96 4 (set (reg:SF 121 [ cdmf.1_35 ])
        (mem/c:SF (symbol_ref:DI ("cdmf.3514") [flags 0x1c02]  <var_decl 0x142004bd0 cdmf>) [1 cdmf+0 S4 A32])) "../src/cdfun.f":41 127 {*movsf_internal}
     (nil))
(insn 96 95 97 4 (set (reg:SF 122 [ _36 ])
        (mult:SF (reg:SF 120 [ _34 ])
            (reg:SF 121 [ cdmf.1_35 ]))) "../src/cdfun.f":41 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 121 [ cdmf.1_35 ])
        (expr_list:REG_DEAD (reg:SF 120 [ _34 ])
            (nil))))
(insn 97 96 98 4 (set (reg:SF 123 [ _37 ])
        (plus:SF (reg:SF 118 [ _32 ])
            (reg:SF 122 [ _36 ]))) "../src/cdfun.f":41 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 122 [ _36 ])
        (expr_list:REG_DEAD (reg:SF 118 [ _32 ])
            (nil))))
(insn 98 97 99 4 (set (reg/f:DI 169)
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 24 [0x18])) [2 cd+0 S8 A64])) "../src/cdfun.f":41 81 {*movdi_internal}
     (nil))
(insn 99 98 100 4 (set (mem:SF (reg/f:DI 169) [1 *cd_66(D)+0 S4 A32])
        (reg:SF 123 [ _37 ])) "../src/cdfun.f":41 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 169)
        (expr_list:REG_DEAD (reg:SF 123 [ _37 ])
            (nil))))
(insn 100 99 101 4 (set (reg/f:DI 170)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [2 ma+0 S8 A64])) "../src/cdfun.f":42 81 {*movdi_internal}
     (nil))
(insn 101 100 102 4 (set (reg:SF 124 [ _38 ])
        (mem:SF (reg/f:DI 170) [1 *ma_76(D)+0 S4 A32])) "../src/cdfun.f":42 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 170)
        (nil)))
(insn 102 101 103 4 (set (reg/f:DI 171)
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 16 [0x10])) [2 mcrit+0 S8 A64])) "../src/cdfun.f":42 81 {*movdi_internal}
     (nil))
(insn 103 102 104 4 (set (reg:SF 125 [ _39 ])
        (mem:SF (reg/f:DI 171) [1 *mcrit_77(D)+0 S4 A32])) "../src/cdfun.f":42 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 171)
        (nil)))
(insn 104 103 105 4 (set (reg:SF 126 [ _40 ])
        (minus:SF (reg:SF 124 [ _38 ])
            (reg:SF 125 [ _39 ]))) "../src/cdfun.f":42 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 125 [ _39 ])
        (expr_list:REG_DEAD (reg:SF 124 [ _38 ])
            (nil))))
(insn 105 104 106 4 (set (reg:SF 143 [ _80 ])
        (reg:SF 126 [ _40 ])) "../src/cdfun.f":42 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 126 [ _40 ])
        (nil)))
(insn 106 105 107 4 (set (reg/f:DI 172)
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 48 [0x30])) [2 cd_ma+0 S8 A64])) "../src/cdfun.f":42 81 {*movdi_internal}
     (nil))
(insn 107 106 108 4 (set (reg:SF 127 [ _41 ])
        (mem:SF (reg/f:DI 172) [1 *cd_ma_74(D)+0 S4 A32])) "../src/cdfun.f":42 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 172)
        (nil)))
(insn 108 107 109 4 (set (reg:SI 128 [ iexp.2_42 ])
        (mem/c:SI (symbol_ref:DI ("iexp.3518") [flags 0x1c02]  <var_decl 0x142004e10 iexp>) [3 iexp+0 S4 A32])) "../src/cdfun.f":42 82 {*movsi_internal}
     (nil))
(insn 109 108 110 4 (parallel [
            (set (reg:SI 129 [ _43 ])
                (plus:SI (reg:SI 128 [ iexp.2_42 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/cdfun.f":42 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 128 [ iexp.2_42 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 110 109 111 4 (set (reg:SI 5 di)
        (reg:SI 129 [ _43 ])) "../src/cdfun.f":42 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 129 [ _43 ])
        (nil)))
(insn 111 110 112 4 (set (reg:SF 21 xmm0)
        (reg:SF 143 [ _80 ])) "../src/cdfun.f":42 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 143 [ _80 ])
        (nil)))
(call_insn/u 112 111 113 4 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("__powisf2") [flags 0x41]) [0  S1 A8])
            (const_int 0 [0]))) "../src/cdfun.f":42 665 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (use (reg:SI 5 di))
        (expr_list (use (reg:SF 21 xmm0))
            (nil))))
(insn 113 112 114 4 (set (reg:SF 130 [ _44 ])
        (reg:SF 21 xmm0)) "../src/cdfun.f":42 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 21 xmm0)
        (nil)))
(insn 114 113 115 4 (set (reg:SF 131 [ cdmf.3_45 ])
        (mem/c:SF (symbol_ref:DI ("cdmf.3514") [flags 0x1c02]  <var_decl 0x142004bd0 cdmf>) [1 cdmf+0 S4 A32])) "../src/cdfun.f":42 127 {*movsf_internal}
     (nil))
(insn 115 114 116 4 (set (reg:SF 132 [ _46 ])
        (mult:SF (reg:SF 130 [ _44 ])
            (reg:SF 131 [ cdmf.3_45 ]))) "../src/cdfun.f":42 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 131 [ cdmf.3_45 ])
        (expr_list:REG_DEAD (reg:SF 130 [ _44 ])
            (nil))))
(insn 116 115 117 4 (set (reg:SI 133 [ iexp.4_47 ])
        (mem/c:SI (symbol_ref:DI ("iexp.3518") [flags 0x1c02]  <var_decl 0x142004e10 iexp>) [3 iexp+0 S4 A32])) "../src/cdfun.f":42 82 {*movsi_internal}
     (nil))
(insn 117 116 118 4 (set (reg:SF 134 [ _48 ])
        (float:SF (reg:SI 133 [ iexp.4_47 ]))) "../src/cdfun.f":42 199 {*floatsisf2_mixed}
     (expr_list:REG_DEAD (reg:SI 133 [ iexp.4_47 ])
        (nil)))
(insn 118 117 119 4 (set (reg:SF 135 [ _49 ])
        (mult:SF (reg:SF 132 [ _46 ])
            (reg:SF 134 [ _48 ]))) "../src/cdfun.f":42 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 134 [ _48 ])
        (expr_list:REG_DEAD (reg:SF 132 [ _46 ])
            (nil))))
(insn 119 118 120 4 (set (reg:SF 136 [ _50 ])
        (plus:SF (reg:SF 127 [ _41 ])
            (reg:SF 135 [ _49 ]))) "../src/cdfun.f":42 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 135 [ _49 ])
        (expr_list:REG_DEAD (reg:SF 127 [ _41 ])
            (nil))))
(insn 120 119 121 4 (set (reg/f:DI 173)
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 48 [0x30])) [2 cd_ma+0 S8 A64])) "../src/cdfun.f":42 81 {*movdi_internal}
     (nil))
(insn 121 120 131 4 (set (mem:SF (reg/f:DI 173) [1 *cd_ma_74(D)+0 S4 A32])
        (reg:SF 136 [ _50 ])) "../src/cdfun.f":42 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 173)
        (expr_list:REG_DEAD (reg:SF 136 [ _50 ])
            (nil))))
(insn 131 121 126 4 (const_int 0 [0]) "../src/cdfun.f":45 682 {nop}
     (nil))
;;  succ:       5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 1, flags: (RTL)
;;  pred:       4 (FALLTHRU)
;;              3 [100.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 126 131 127 5 1 (nil) [1 uses])
(note 127 126 0 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function dcdfun (dcdfun_, funcdef_no=1, decl_uid=3527, cgraph_uid=1, symbol_order=1)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 19.
verify found no changes in insn with uid = 64.
verify found no changes in insn with uid = 73.
verify found no changes in insn with uid = 80.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r152: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r152,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r151: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a2 (r151,l0) best SSE_REGS, allocno SSE_REGS
    r150: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r150,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r149: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a5 (r149,l0) best SSE_REGS, allocno SSE_REGS
    r148: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r148,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r147: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a8 (r147,l0) best SSE_REGS, allocno SSE_REGS
    r146: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a9 (r146,l0) best SSE_REGS, allocno SSE_REGS
    r145: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a13 (r145,l0) best SSE_REGS, allocno SSE_REGS
    r144: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a14 (r144,l0) best SSE_REGS, allocno SSE_REGS
    r143: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a17 (r143,l0) best SSE_REGS, allocno SSE_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r142,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r141: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a23 (r141,l0) best SSE_REGS, allocno SSE_REGS
    r140: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a24 (r140,l0) best SSE_REGS, allocno SSE_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r139,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a31 (r138,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r137,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r136: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a33 (r136,l0) best SSE_REGS, allocno SSE_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a39 (r135,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a41 (r134,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a43 (r133,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r132: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a46 (r132,l0) best SSE_REGS, allocno SSE_REGS
    r131: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a44 (r131,l0) best SSE_REGS, allocno SSE_REGS
    r130: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a52 (r130,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r129: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a54 (r129,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r128: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a56 (r128,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r127: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a57 (r127,l0) best SSE_REGS, allocno SSE_REGS
    r126: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a58 (r126,l0) best SSE_REGS, allocno SSE_REGS
    r125: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a63 (r125,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r124: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a64 (r124,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r123: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a65 (r123,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r122: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a20 (r122,l0) best SSE_REGS, allocno SSE_REGS
    r121: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a21 (r121,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r120: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a37 (r120,l0) best SSE_REGS, allocno SSE_REGS
    r119: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a40 (r119,l0) best SSE_REGS, allocno SSE_REGS
    r118: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a38 (r118,l0) best SSE_REGS, allocno SSE_REGS
    r117: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a42 (r117,l0) best SSE_REGS, allocno SSE_REGS
    r116: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a50 (r116,l0) best SSE_REGS, allocno SSE_REGS
    r115: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a53 (r115,l0) best SSE_REGS, allocno SSE_REGS
    r114: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a51 (r114,l0) best SSE_REGS, allocno SSE_REGS
    r113: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a55 (r113,l0) best SSE_REGS, allocno SSE_REGS
    r112: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a1 (r112,l0) best SSE_REGS, allocno SSE_REGS
    r111: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a4 (r111,l0) best SSE_REGS, allocno SSE_REGS
    r110: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a7 (r110,l0) best SSE_REGS, allocno SSE_REGS
    r109: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a10 (r109,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r108: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a12 (r108,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r107: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a11 (r107,l0) best SSE_REGS, allocno SSE_REGS
    r106: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a15 (r106,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r105: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a16 (r105,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r104: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a19 (r104,l0) best SSE_REGS, allocno SSE_REGS
    r103: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a22 (r103,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r102: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a25 (r102,l0) best SSE_REGS, allocno SSE_REGS
    r101: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a26 (r101,l0) best SSE_REGS, allocno SSE_REGS
    r100: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a28 (r100,l0) best SSE_REGS, allocno SSE_REGS
    r99: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a29 (r99,l0) best SSE_REGS, allocno SSE_REGS
    r98: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a30 (r98,l0) best SSE_REGS, allocno SSE_REGS
    r97: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a34 (r97,l0) best SSE_REGS, allocno SSE_REGS
    r96: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a36 (r96,l0) best SSE_REGS, allocno SSE_REGS
    r95: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a35 (r95,l0) best SSE_REGS, allocno SSE_REGS
    r94: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a45 (r94,l0) best SSE_REGS, allocno SSE_REGS
    r93: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a47 (r93,l0) best SSE_REGS, allocno SSE_REGS
    r92: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a49 (r92,l0) best SSE_REGS, allocno SSE_REGS
    r91: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a48 (r91,l0) best SSE_REGS, allocno SSE_REGS
    r90: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a59 (r90,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r89: preferred SSE_FIRST_REG, alternative GENERAL_REGS, allocno INT_SSE_REGS
    a61 (r89,l0) best SSE_FIRST_REG, allocno INT_SSE_REGS
    r88: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a62 (r88,l0) best SSE_REGS, allocno SSE_REGS
    r87: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a60 (r87,l0) best SSE_REGS, allocno SSE_REGS

  a0(r152,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a1(r112,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a2(r151,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a3(r150,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a4(r111,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a5(r149,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a6(r148,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a7(r110,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a8(r147,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a9(r146,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a10(r109,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 ALL_REGS:29 MEM:8
  a11(r107,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a12(r108,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:9
  a13(r145,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a14(r144,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a15(r106,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 ALL_REGS:29 MEM:8
  a16(r105,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:9
  a17(r143,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a18(r142,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a19(r104,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a20(r122,l0) costs: AREG:24 DREG:24 CREG:24 BREG:24 SIREG:24 DIREG:24 AD_REGS:24 CLOBBERED_REGS:24 Q_REGS:24 NON_Q_REGS:24 TLS_GOTBASE_REGS:24 GENERAL_REGS:24 FP_TOP_REG:63 FP_SECOND_REG:63 FLOAT_REGS:63 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:51 FP_TOP_SSE_REGS:63 FP_SECOND_SSE_REGS:63 FLOAT_SSE_REGS:63 FLOAT_INT_REGS:63 INT_SSE_REGS:39 FLOAT_INT_SSE_REGS:63 ALL_REGS:63 MEM:22
  a21(r121,l0) costs: AREG:18 DREG:18 CREG:18 BREG:18 SIREG:18 DIREG:18 AD_REGS:18 CLOBBERED_REGS:18 Q_REGS:18 NON_Q_REGS:18 TLS_GOTBASE_REGS:18 GENERAL_REGS:18 FP_TOP_REG:48 FP_SECOND_REG:48 FLOAT_REGS:48 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:42 FP_TOP_SSE_REGS:50 FP_SECOND_SSE_REGS:50 FLOAT_SSE_REGS:50 FLOAT_INT_REGS:48 INT_SSE_REGS:34 FLOAT_INT_SSE_REGS:50 ALL_REGS:50 MEM:15
  a22(r103,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:9
  a23(r141,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a24(r140,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a25(r102,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a26(r101,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 ALL_REGS:29 MEM:9
  a27(r139,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a28(r100,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:9
  a29(r99,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a30(r98,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a31(r138,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a32(r137,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a33(r136,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a34(r97,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 ALL_REGS:29 MEM:8
  a35(r95,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a36(r96,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:9
  a37(r120,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a38(r118,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a39(r135,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a40(r119,l0) costs: AREG:18 DREG:18 CREG:18 BREG:18 SIREG:18 DIREG:18 AD_REGS:18 CLOBBERED_REGS:18 Q_REGS:18 NON_Q_REGS:18 TLS_GOTBASE_REGS:18 GENERAL_REGS:18 FP_TOP_REG:54 FP_SECOND_REG:54 FLOAT_REGS:54 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:48 FP_TOP_SSE_REGS:56 FP_SECOND_SSE_REGS:56 FLOAT_SSE_REGS:56 FLOAT_INT_REGS:54 INT_SSE_REGS:37 FLOAT_INT_SSE_REGS:56 ALL_REGS:56 MEM:20
  a41(r134,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a42(r117,l0) costs: AREG:18 DREG:18 CREG:18 BREG:18 SIREG:18 DIREG:18 AD_REGS:18 CLOBBERED_REGS:18 Q_REGS:18 NON_Q_REGS:18 TLS_GOTBASE_REGS:18 GENERAL_REGS:18 FP_TOP_REG:54 FP_SECOND_REG:54 FLOAT_REGS:54 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:48 FP_TOP_SSE_REGS:56 FP_SECOND_SSE_REGS:56 FLOAT_SSE_REGS:56 FLOAT_INT_REGS:54 INT_SSE_REGS:37 FLOAT_INT_SSE_REGS:56 ALL_REGS:56 MEM:20
  a43(r133,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a44(r131,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a45(r94,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:16
  a46(r132,l0) costs: SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MEM:15
  a47(r93,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 ALL_REGS:29 MEM:8
  a48(r91,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a49(r92,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:9
  a50(r116,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a51(r114,l0) costs: AREG:16 DREG:16 CREG:16 BREG:16 SIREG:16 DIREG:16 AD_REGS:16 CLOBBERED_REGS:16 Q_REGS:16 NON_Q_REGS:16 TLS_GOTBASE_REGS:16 GENERAL_REGS:16 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a52(r130,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a53(r115,l0) costs: AREG:18 DREG:18 CREG:18 BREG:18 SIREG:18 DIREG:18 AD_REGS:18 CLOBBERED_REGS:18 Q_REGS:18 NON_Q_REGS:18 TLS_GOTBASE_REGS:18 GENERAL_REGS:18 FP_TOP_REG:54 FP_SECOND_REG:54 FLOAT_REGS:54 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:48 FP_TOP_SSE_REGS:56 FP_SECOND_SSE_REGS:56 FLOAT_SSE_REGS:56 FLOAT_INT_REGS:54 INT_SSE_REGS:37 FLOAT_INT_SSE_REGS:56 ALL_REGS:56 MEM:20
  a54(r129,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a55(r113,l0) costs: AREG:18 DREG:18 CREG:18 BREG:18 SIREG:18 DIREG:18 AD_REGS:18 CLOBBERED_REGS:18 Q_REGS:18 NON_Q_REGS:18 TLS_GOTBASE_REGS:18 GENERAL_REGS:18 FP_TOP_REG:54 FP_SECOND_REG:54 FLOAT_REGS:54 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:48 FP_TOP_SSE_REGS:56 FP_SECOND_SSE_REGS:56 FLOAT_SSE_REGS:56 FLOAT_INT_REGS:54 INT_SSE_REGS:37 FLOAT_INT_SSE_REGS:56 ALL_REGS:56 MEM:20
  a56(r128,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a57(r127,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 CLOBBERED_REGS:4 Q_REGS:4 NON_Q_REGS:4 TLS_GOTBASE_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:29 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:12
  a58(r126,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a59(r90,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 ALL_REGS:29 MEM:8
  a60(r87,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 CLOBBERED_REGS:10 Q_REGS:10 NON_Q_REGS:10 TLS_GOTBASE_REGS:10 GENERAL_REGS:10 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a61(r89,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 CLOBBERED_REGS:4 Q_REGS:4 NON_Q_REGS:4 TLS_GOTBASE_REGS:4 GENERAL_REGS:4 FP_TOP_REG:24 FP_SECOND_REG:24 FLOAT_REGS:24 SSE_FIRST_REG:19 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:22 FP_TOP_SSE_REGS:26 FP_SECOND_SSE_REGS:26 FLOAT_SSE_REGS:26 FLOAT_INT_REGS:24 INT_SSE_REGS:19 FLOAT_INT_SSE_REGS:26 ALL_REGS:26 MEM:7
  a62(r88,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 CLOBBERED_REGS:4 Q_REGS:4 NON_Q_REGS:4 TLS_GOTBASE_REGS:4 GENERAL_REGS:4 FP_TOP_REG:24 FP_SECOND_REG:24 FLOAT_REGS:24 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:22 FP_TOP_SSE_REGS:26 FP_SECOND_SSE_REGS:26 FLOAT_SSE_REGS:26 FLOAT_INT_REGS:24 INT_SSE_REGS:19 FLOAT_INT_SSE_REGS:26 ALL_REGS:26 MEM:7
  a63(r125,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a64(r124,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8
  a65(r123,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:25 INT_SSE_REGS:18 ALL_REGS:312 MEM:8

   Insn 100(l0): point = 0
   Insn 95(l0): point = 2
   Insn 94(l0): point = 4
   Insn 93(l0): point = 6
   Insn 92(l0): point = 8
   Insn 91(l0): point = 10
   Insn 90(l0): point = 12
   Insn 89(l0): point = 14
   Insn 88(l0): point = 16
   Insn 87(l0): point = 18
   Insn 86(l0): point = 20
   Insn 85(l0): point = 22
   Insn 84(l0): point = 24
   Insn 83(l0): point = 26
   Insn 82(l0): point = 28
   Insn 81(l0): point = 30
   Insn 80(l0): point = 32
   Insn 79(l0): point = 34
   Insn 78(l0): point = 36
   Insn 77(l0): point = 38
   Insn 76(l0): point = 40
   Insn 75(l0): point = 42
   Insn 74(l0): point = 44
   Insn 73(l0): point = 46
   Insn 72(l0): point = 48
   Insn 71(l0): point = 50
   Insn 70(l0): point = 52
   Insn 69(l0): point = 54
   Insn 68(l0): point = 56
   Insn 67(l0): point = 58
   Insn 66(l0): point = 60
   Insn 65(l0): point = 62
   Insn 64(l0): point = 64
   Insn 63(l0): point = 66
   Insn 62(l0): point = 68
   Insn 61(l0): point = 70
   Insn 60(l0): point = 72
   Insn 59(l0): point = 74
   Insn 58(l0): point = 76
   Insn 57(l0): point = 78
   Insn 56(l0): point = 80
   Insn 55(l0): point = 82
   Insn 54(l0): point = 84
   Insn 53(l0): point = 86
   Insn 52(l0): point = 88
   Insn 51(l0): point = 90
   Insn 50(l0): point = 92
   Insn 49(l0): point = 94
   Insn 48(l0): point = 96
   Insn 47(l0): point = 98
   Insn 46(l0): point = 100
   Insn 45(l0): point = 102
   Insn 44(l0): point = 104
   Insn 43(l0): point = 106
   Insn 42(l0): point = 108
   Insn 41(l0): point = 110
   Insn 40(l0): point = 112
   Insn 39(l0): point = 114
   Insn 38(l0): point = 116
   Insn 37(l0): point = 118
   Insn 36(l0): point = 120
   Insn 35(l0): point = 122
   Insn 34(l0): point = 124
   Insn 33(l0): point = 126
   Insn 32(l0): point = 128
   Insn 31(l0): point = 130
   Insn 30(l0): point = 132
   Insn 29(l0): point = 134
   Insn 28(l0): point = 136
   Insn 27(l0): point = 138
   Insn 26(l0): point = 140
   Insn 25(l0): point = 142
   Insn 24(l0): point = 144
   Insn 23(l0): point = 146
   Insn 22(l0): point = 148
   Insn 21(l0): point = 150
   Insn 20(l0): point = 152
   Insn 19(l0): point = 154
   Insn 18(l0): point = 156
   Insn 17(l0): point = 158
   Insn 16(l0): point = 160
   Insn 15(l0): point = 162
   Insn 14(l0): point = 164
   Insn 13(l0): point = 166
   Insn 12(l0): point = 168
   Insn 11(l0): point = 170
   Insn 7(l0): point = 172
   Insn 6(l0): point = 174
   Insn 5(l0): point = 176
   Insn 4(l0): point = 178
   Insn 3(l0): point = 180
   Insn 2(l0): point = 182
 a0(r152): [3..4]
 a1(r112): [3..6]
 a2(r151): [7..8]
 a3(r150): [11..12]
 a4(r111): [11..14]
 a5(r149): [15..16]
 a6(r148): [19..20]
 a7(r110): [19..22]
 a8(r147): [23..24]
 a9(r146): [27..28]
 a10(r109): [29..30]
 a11(r107): [29..40]
 a12(r108): [35..36]
 a13(r145): [37..38]
 a14(r144): [41..42]
 a15(r106): [41..44]
 a16(r105): [49..50]
 a17(r143): [51..52]
 a18(r142): [55..56]
 a19(r104): [55..58]
 a20(r122): [59..60]
 a21(r121): [61..62]
 a22(r103): [67..68]
 a23(r141): [69..70]
 a24(r140): [73..74]
 a25(r102): [75..76]
 a26(r101): [75..80]
 a27(r139): [77..78]
 a28(r100): [81..82]
 a29(r99): [83..84]
 a30(r98): [83..88]
 a31(r138): [85..86]
 a32(r137): [89..90]
 a33(r136): [93..94]
 a34(r97): [95..96]
 a35(r95): [95..100]
 a36(r96): [97..98]
 a37(r120): [99..104]
 a38(r118): [99..110]
 a39(r135): [101..102]
 a40(r119): [105..106]
 a41(r134): [107..108]
 a42(r117): [111..112]
 a43(r133): [113..114]
 a44(r131): [117..118]
 a45(r94): [119..122]
 a46(r132): [119..120]
 a47(r93): [123..124]
 a48(r91): [123..128]
 a49(r92): [125..126]
 a50(r116): [127..132]
 a51(r114): [127..138]
 a52(r130): [129..130]
 a53(r115): [133..134]
 a54(r129): [135..136]
 a55(r113): [139..140]
 a56(r128): [141..142]
 a57(r127): [145..146]
 a58(r126): [149..150]
 a59(r90): [151..152]
 a60(r87): [151..168]
 a61(r89): [157..160]
 a62(r88): [159..164]
 a63(r125): [161..162]
 a64(r124): [165..166]
 a65(r123): [169..170]
Compressing live ranges: from 185 to 102 - 55%
Ranges after the compression:
 a0(r152): [0..1]
 a1(r112): [0..1]
 a2(r151): [2..3]
 a3(r150): [4..5]
 a4(r111): [4..5]
 a5(r149): [6..7]
 a6(r148): [8..9]
 a7(r110): [8..9]
 a8(r147): [10..11]
 a9(r146): [12..13]
 a10(r109): [14..15]
 a11(r107): [14..19]
 a12(r108): [16..17]
 a13(r145): [18..19]
 a14(r144): [20..21]
 a15(r106): [20..21]
 a16(r105): [22..23]
 a17(r143): [24..25]
 a18(r142): [26..27]
 a19(r104): [26..27]
 a20(r122): [28..29]
 a21(r121): [30..31]
 a22(r103): [32..33]
 a23(r141): [34..35]
 a24(r140): [36..37]
 a25(r102): [38..39]
 a26(r101): [38..41]
 a27(r139): [40..41]
 a28(r100): [42..43]
 a29(r99): [44..45]
 a30(r98): [44..47]
 a31(r138): [46..47]
 a32(r137): [48..49]
 a33(r136): [50..51]
 a34(r97): [52..53]
 a35(r95): [52..57]
 a36(r96): [54..55]
 a37(r120): [56..59]
 a38(r118): [56..63]
 a39(r135): [58..59]
 a40(r119): [60..61]
 a41(r134): [62..63]
 a42(r117): [64..65]
 a43(r133): [66..67]
 a44(r131): [68..69]
 a45(r94): [70..71]
 a46(r132): [70..71]
 a47(r93): [72..73]
 a48(r91): [72..77]
 a49(r92): [74..75]
 a50(r116): [76..79]
 a51(r114): [76..83]
 a52(r130): [78..79]
 a53(r115): [80..81]
 a54(r129): [82..83]
 a55(r113): [84..85]
 a56(r128): [86..87]
 a57(r127): [88..89]
 a58(r126): [90..91]
 a59(r90): [92..93]
 a60(r87): [92..99]
 a61(r89): [94..95]
 a62(r88): [94..97]
 a63(r125): [96..97]
 a64(r124): [98..99]
 a65(r123): [100..101]
  pref0:a61(r89)<-hr21@1
  regions=1, blocks=3, points=102
    allocnos=66 (big 0), copies=0, conflicts=0, ranges=66
Disposition:
   60:r87  l0   mem   62:r88  l0    21   61:r89  l0     0   59:r90  l0    21
   48:r91  l0    23   49:r92  l0    21   47:r93  l0    21   45:r94  l0    21
   35:r95  l0    23   36:r96  l0    21   34:r97  l0    21   30:r98  l0    21
   29:r99  l0    22   28:r100 l0    21   26:r101 l0    22   25:r102 l0    21
   22:r103 l0    21   19:r104 l0    21   16:r105 l0    21   15:r106 l0    22
   11:r107 l0   mem   12:r108 l0    21   10:r109 l0    21    7:r110 l0    21
    4:r111 l0    21    1:r112 l0    21   55:r113 l0    21   51:r114 l0    22
   53:r115 l0    21   50:r116 l0    21   42:r117 l0    21   38:r118 l0    22
   40:r119 l0    21   37:r120 l0    21   21:r121 l0    21   20:r122 l0    21
   65:r123 l0     0   64:r124 l0     0   63:r125 l0     0   58:r126 l0    21
   57:r127 l0    21   56:r128 l0     0   54:r129 l0     0   52:r130 l0     0
   44:r131 l0    21   46:r132 l0    22   43:r133 l0     0   41:r134 l0     0
   39:r135 l0     0   33:r136 l0    21   32:r137 l0     0   31:r138 l0     0
   27:r139 l0     0   24:r140 l0    21   23:r141 l0    21   18:r142 l0     0
   17:r143 l0    21   14:r144 l0    21   13:r145 l0    21    9:r146 l0    21
    8:r147 l0    21    6:r148 l0     0    5:r149 l0    21    3:r150 l0     0
    2:r151 l0    21    0:r152 l0     0
+++Costs: overall 21, reg -8, mem 29, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


dcdfun

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 21 [xmm0] 22 [xmm1] 37 [r8] 38 [r9]
;;  ref usage 	r0={5d} r1={5d,1u} r2={5d,1u} r4={5d,1u} r5={5d,1u} r6={1d,2u} r7={1d,6u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r16={1d,5u} r17={5d} r18={4d} r19={4d} r20={1d,38u} r21={9d,8u} r22={6d,1u} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={5d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={5d,1u} r38={5d,1u} r39={4d} r40={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u,1e} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,2u} r114={1d,1u} r115={1d,2u} r116={1d,1u} r117={1d,2u} r118={1d,1u} r119={1d,2u} r120={1d,1u} r121={1d,2u} r122={1d,2u} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,1u} r127={1d,1u} r128={1d,1u} r129={1d,1u} r130={1d,1u} r131={1d,1u} r132={1d,1u} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} 
;;    total ref usage 518{379d,138u,1e} in 92{88 regular + 4 call} insns.
(note 1 0 9 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152
(note 9 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 9 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [2 be+0 S8 A64])
        (reg:DI 5 di [ be ])) "../src/cdfun.f":50 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ be ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [2 wa+0 S8 A64])
        (reg:DI 4 si [ wa ])) "../src/cdfun.f":50 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ wa ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [2 wt+0 S8 A64])
        (reg:DI 1 dx [ wt ])) "../src/cdfun.f":50 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ wt ])
        (nil)))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [2 clcd0+0 S8 A64])
        (reg:DI 2 cx [ clcd0 ])) "../src/cdfun.f":50 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [ clcd0 ])
        (nil)))
(insn 6 5 7 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [2 cl0+0 S8 A64])
        (reg:DI 37 r8 [ cl0 ])) "../src/cdfun.f":50 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 37 r8 [ cl0 ])
        (nil)))
(insn 7 6 8 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [2 dclda+0 S8 A64])
        (reg:DI 38 r9 [ dclda ])) "../src/cdfun.f":50 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 38 r9 [ dclda ])
        (nil)))
(note 8 7 11 2 NOTE_INSN_FUNCTION_BEG)
(insn 11 8 12 2 (set (reg/f:DI 123)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [2 be+0 S8 A64])) "../src/cdfun.f":53 81 {*movdi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:SF 87 [ _1 ])
        (mem:SF (reg/f:DI 123) [1 *be_28(D)+0 S4 A32])) "../src/cdfun.f":53 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 123)
        (nil)))
(insn 13 12 14 2 (set (reg/f:DI 124)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [2 wt+0 S8 A64])) "../src/cdfun.f":53 81 {*movdi_internal}
     (nil))
(insn 14 13 15 2 (set (reg:SF 88 [ _2 ])
        (mem:SF (reg/f:DI 124) [1 *wt_29(D)+0 S4 A32])) "../src/cdfun.f":53 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 124)
        (nil)))
(insn 15 14 16 2 (set (reg/f:DI 125)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [2 wa+0 S8 A64])) "../src/cdfun.f":53 81 {*movdi_internal}
     (nil))
(insn 16 15 17 2 (set (reg:SF 89 [ _3 ])
        (mem:SF (reg/f:DI 125) [1 *wa_30(D)+0 S4 A32])) "../src/cdfun.f":53 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 125)
        (nil)))
(insn 17 16 18 2 (set (reg:SF 22 xmm1)
        (reg:SF 88 [ _2 ])) "../src/cdfun.f":53 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 88 [ _2 ])
        (nil)))
(insn 18 17 19 2 (set (reg:SF 21 xmm0)
        (reg:SF 89 [ _3 ])) "../src/cdfun.f":53 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 89 [ _3 ])
        (nil)))
(call_insn/u 19 18 20 2 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("atan2f") [flags 0x41]  <function_decl 0x14263a400 __builtin_atan2f>) [0 __builtin_atan2f S1 A8])
            (const_int 0 [0]))) "../src/cdfun.f":53 665 {*call_value}
     (expr_list:REG_DEAD (reg:SF 22 xmm1)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (expr_list:SF (use (reg:SF 22 xmm1))
            (nil))))
(insn 20 19 21 2 (set (reg:SF 90 [ _4 ])
        (reg:SF 21 xmm0)) "../src/cdfun.f":53 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 21 xmm0)
        (nil)))
(insn 21 20 22 2 (set (reg:SF 126)
        (minus:SF (reg:SF 87 [ _1 ])
            (reg:SF 90 [ _4 ]))) "../src/cdfun.f":53 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 90 [ _4 ])
        (expr_list:REG_DEAD (reg:SF 87 [ _1 ])
            (nil))))
(insn 22 21 23 2 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 a+0 S4 A32])
        (reg:SF 126)) "../src/cdfun.f":53 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 126)
        (nil)))
(insn 23 22 24 2 (set (reg:SF 127)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC1") [flags 0x2]) [1  S4 A32])) "../src/cdfun.f":54 127 {*movsf_internal}
     (nil))
(insn 24 23 25 2 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 a_be+0 S4 A32])
        (reg:SF 127)) "../src/cdfun.f":54 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 127)
        (nil)))
(insn 25 24 26 2 (set (reg/f:DI 128)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [2 wa+0 S8 A64])) "../src/cdfun.f":55 81 {*movdi_internal}
     (nil))
(insn 26 25 27 2 (set (reg:SF 113 [ _33 ])
        (mem:SF (reg/f:DI 128) [1 *wa_30(D)+0 S4 A32])) "../src/cdfun.f":55 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 128)
        (nil)))
(insn 27 26 28 2 (set (reg:SF 114 [ _34 ])
        (mult:SF (reg:SF 113 [ _33 ])
            (reg:SF 113 [ _33 ]))) "../src/cdfun.f":55 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 113 [ _33 ])
        (nil)))
(insn 28 27 29 2 (set (reg/f:DI 129)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [2 wt+0 S8 A64])) "../src/cdfun.f":55 81 {*movdi_internal}
     (nil))
(insn 29 28 30 2 (set (reg:SF 115 [ _35 ])
        (mem:SF (reg/f:DI 129) [1 *wt_29(D)+0 S4 A32])) "../src/cdfun.f":55 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 129)
        (nil)))
(insn 30 29 31 2 (set (reg:SF 116 [ _36 ])
        (mult:SF (reg:SF 115 [ _35 ])
            (reg:SF 115 [ _35 ]))) "../src/cdfun.f":55 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 115 [ _35 ])
        (nil)))
(insn 31 30 32 2 (set (reg/f:DI 130)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [2 wt+0 S8 A64])) "../src/cdfun.f":55 81 {*movdi_internal}
     (nil))
(insn 32 31 33 2 (set (reg:SF 91 [ _5 ])
        (mem:SF (reg/f:DI 130) [1 *wt_29(D)+0 S4 A32])) "../src/cdfun.f":55 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 130)
        (nil)))
(insn 33 32 34 2 (set (reg:SF 92 [ _6 ])
        (plus:SF (reg:SF 114 [ _34 ])
            (reg:SF 116 [ _36 ]))) "../src/cdfun.f":55 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 116 [ _36 ])
        (expr_list:REG_DEAD (reg:SF 114 [ _34 ])
            (nil))))
(insn 34 33 35 2 (set (reg:SF 93 [ _7 ])
        (reg:SF 92 [ _6 ])) "../src/cdfun.f":55 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 92 [ _6 ])
        (nil)))
(insn 35 34 36 2 (set (reg:SF 94 [ _8 ])
        (div:SF (reg:SF 91 [ _5 ])
            (reg:SF 93 [ _7 ]))) "../src/cdfun.f":55 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 93 [ _7 ])
        (expr_list:REG_DEAD (reg:SF 91 [ _5 ])
            (nil))))
(insn 36 35 37 2 (set (reg:V4SF 132)
        (mem/u/c:V4SF (symbol_ref/u:DI ("*lC2") [flags 0x2]) [1  S16 A128])) "../src/cdfun.f":55 1225 {movv4sf_internal}
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF -0.0 [-0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 37 36 38 2 (parallel [
            (set (reg:SF 131)
                (neg:SF (reg:SF 94 [ _8 ])))
            (use (reg:V4SF 132))
            (clobber (reg:CC 17 flags))
        ]) "../src/cdfun.f":55 470 {*absnegsf2}
     (expr_list:REG_DEAD (reg:V4SF 132)
        (expr_list:REG_DEAD (reg:SF 94 [ _8 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (neg:SF (reg:SF 94 [ _8 ]))
                    (nil))))))
(insn 38 37 39 2 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 a_wa+0 S4 A32])
        (reg:SF 131)) "../src/cdfun.f":55 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 131)
        (nil)))
(insn 39 38 40 2 (set (reg/f:DI 133)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [2 wa+0 S8 A64])) "../src/cdfun.f":56 81 {*movdi_internal}
     (nil))
(insn 40 39 41 2 (set (reg:SF 117 [ _38 ])
        (mem:SF (reg/f:DI 133) [1 *wa_30(D)+0 S4 A32])) "../src/cdfun.f":56 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 133)
        (nil)))
(insn 41 40 42 2 (set (reg:SF 118 [ _39 ])
        (mult:SF (reg:SF 117 [ _38 ])
            (reg:SF 117 [ _38 ]))) "../src/cdfun.f":56 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 117 [ _38 ])
        (nil)))
(insn 42 41 43 2 (set (reg/f:DI 134)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [2 wt+0 S8 A64])) "../src/cdfun.f":56 81 {*movdi_internal}
     (nil))
(insn 43 42 44 2 (set (reg:SF 119 [ _40 ])
        (mem:SF (reg/f:DI 134) [1 *wt_29(D)+0 S4 A32])) "../src/cdfun.f":56 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 134)
        (nil)))
(insn 44 43 45 2 (set (reg:SF 120 [ _41 ])
        (mult:SF (reg:SF 119 [ _40 ])
            (reg:SF 119 [ _40 ]))) "../src/cdfun.f":56 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 119 [ _40 ])
        (nil)))
(insn 45 44 46 2 (set (reg/f:DI 135)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [2 wa+0 S8 A64])) "../src/cdfun.f":56 81 {*movdi_internal}
     (nil))
(insn 46 45 47 2 (set (reg:SF 95 [ _9 ])
        (mem:SF (reg/f:DI 135) [1 *wa_30(D)+0 S4 A32])) "../src/cdfun.f":56 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 135)
        (nil)))
(insn 47 46 48 2 (set (reg:SF 96 [ _10 ])
        (plus:SF (reg:SF 118 [ _39 ])
            (reg:SF 120 [ _41 ]))) "../src/cdfun.f":56 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 120 [ _41 ])
        (expr_list:REG_DEAD (reg:SF 118 [ _39 ])
            (nil))))
(insn 48 47 49 2 (set (reg:SF 97 [ _11 ])
        (reg:SF 96 [ _10 ])) "../src/cdfun.f":56 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 96 [ _10 ])
        (nil)))
(insn 49 48 50 2 (set (reg:SF 136)
        (div:SF (reg:SF 95 [ _9 ])
            (reg:SF 97 [ _11 ]))) "../src/cdfun.f":56 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 97 [ _11 ])
        (expr_list:REG_DEAD (reg:SF 95 [ _9 ])
            (nil))))
(insn 50 49 51 2 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [1 a_wt+0 S4 A32])
        (reg:SF 136)) "../src/cdfun.f":56 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 136)
        (nil)))
(insn 51 50 52 2 (set (reg/f:DI 137)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [2 clcd0+0 S8 A64])) "../src/cdfun.f":58 81 {*movdi_internal}
     (nil))
(insn 52 51 53 2 (set (reg:SF 98 [ _12 ])
        (mem:SF (reg/f:DI 137) [1 *clcd0_43(D)+0 S4 A32])) "../src/cdfun.f":58 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 137)
        (nil)))
(insn 53 52 54 2 (set (reg/f:DI 138)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [2 cl0+0 S8 A64])) "../src/cdfun.f":58 81 {*movdi_internal}
     (nil))
(insn 54 53 55 2 (set (reg:SF 99 [ _13 ])
        (mem:SF (reg/f:DI 138) [1 *cl0_44(D)+0 S4 A32])) "../src/cdfun.f":58 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 138)
        (nil)))
(insn 55 54 56 2 (set (reg:SF 100 [ _14 ])
        (minus:SF (reg:SF 98 [ _12 ])
            (reg:SF 99 [ _13 ]))) "../src/cdfun.f":58 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 99 [ _13 ])
        (expr_list:REG_DEAD (reg:SF 98 [ _12 ])
            (nil))))
(insn 56 55 57 2 (set (reg:SF 101 [ _15 ])
        (reg:SF 100 [ _14 ])) "../src/cdfun.f":58 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 100 [ _14 ])
        (nil)))
(insn 57 56 58 2 (set (reg/f:DI 139)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [2 dclda+0 S8 A64])) "../src/cdfun.f":58 81 {*movdi_internal}
     (nil))
(insn 58 57 59 2 (set (reg:SF 102 [ _16 ])
        (mem:SF (reg/f:DI 139) [1 *dclda_45(D)+0 S4 A32])) "../src/cdfun.f":58 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 139)
        (nil)))
(insn 59 58 60 2 (set (reg:SF 140)
        (div:SF (reg:SF 101 [ _15 ])
            (reg:SF 102 [ _16 ]))) "../src/cdfun.f":58 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 102 [ _16 ])
        (expr_list:REG_DEAD (reg:SF 101 [ _15 ])
            (nil))))
(insn 60 59 61 2 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [1 acd0+0 S4 A32])
        (reg:SF 140)) "../src/cdfun.f":58 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 140)
        (nil)))
(insn 61 60 62 2 (set (reg:SF 141)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 a+0 S4 A32])) "../src/cdfun.f":59 127 {*movsf_internal}
     (nil))
(insn 62 61 63 2 (set (reg:SF 103 [ _17 ])
        (minus:SF (reg:SF 141)
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -20 [0xffffffffffffffec])) [1 acd0+0 S4 A32]))) "../src/cdfun.f":59 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 141)
        (nil)))
(insn 63 62 64 2 (set (reg:SF 21 xmm0)
        (reg:SF 103 [ _17 ])) "../src/cdfun.f":59 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 103 [ _17 ])
        (nil)))
(call_insn/u 64 63 65 2 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("sinf") [flags 0x41]  <function_decl 0x14263c500 __builtin_sinf>) [0 __builtin_sinf S1 A8])
            (const_int 0 [0]))) "../src/cdfun.f":59 665 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (nil)))
(insn 65 64 66 2 (set (reg:SF 121 [ _47 ])
        (reg:SF 21 xmm0)) "../src/cdfun.f":59 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 21 xmm0)
        (nil)))
(insn 66 65 67 2 (set (reg:SF 122 [ _48 ])
        (mult:SF (reg:SF 121 [ _47 ])
            (reg:SF 121 [ _47 ]))) "../src/cdfun.f":59 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 121 [ _47 ])
        (nil)))
(insn 67 66 68 2 (set (reg:SF 104 [ _18 ])
        (plus:SF (reg:SF 122 [ _48 ])
            (reg:SF 122 [ _48 ]))) "../src/cdfun.f":59 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 122 [ _48 ])
        (nil)))
(insn 68 67 69 2 (set (reg/f:DI 142)
        (mem/f/c:DI (reg/f:DI 16 argp) [2 dcd+0 S8 A64])) "../src/cdfun.f":59 81 {*movdi_internal}
     (nil))
(insn 69 68 70 2 (set (mem:SF (reg/f:DI 142) [1 *dcd_49(D)+0 S4 A32])
        (reg:SF 104 [ _18 ])) "../src/cdfun.f":59 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 142)
        (expr_list:REG_DEAD (reg:SF 104 [ _18 ])
            (nil))))
(insn 70 69 71 2 (set (reg:SF 143)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 a+0 S4 A32])) "../src/cdfun.f":60 127 {*movsf_internal}
     (nil))
(insn 71 70 72 2 (set (reg:SF 105 [ _19 ])
        (minus:SF (reg:SF 143)
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -20 [0xffffffffffffffec])) [1 acd0+0 S4 A32]))) "../src/cdfun.f":60 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 143)
        (nil)))
(insn 72 71 73 2 (set (reg:SF 21 xmm0)
        (reg:SF 105 [ _19 ])) "../src/cdfun.f":60 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 105 [ _19 ])
        (nil)))
(call_insn/u 73 72 74 2 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("sinf") [flags 0x41]  <function_decl 0x14263c500 __builtin_sinf>) [0 __builtin_sinf S1 A8])
            (const_int 0 [0]))) "../src/cdfun.f":60 665 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (nil)))
(insn 74 73 75 2 (set (reg:SF 106 [ _20 ])
        (reg:SF 21 xmm0)) "../src/cdfun.f":60 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 21 xmm0)
        (nil)))
(insn 75 74 76 2 (set (reg:SF 144)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC3") [flags 0x2]) [1  S4 A32])) "../src/cdfun.f":60 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 4.0e+0 [0x0.8p+3])
        (nil)))
(insn 76 75 77 2 (set (reg:SF 107 [ _21 ])
        (mult:SF (reg:SF 106 [ _20 ])
            (reg:SF 144))) "../src/cdfun.f":60 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 144)
        (expr_list:REG_DEAD (reg:SF 106 [ _20 ])
            (nil))))
(insn 77 76 78 2 (set (reg:SF 145)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 a+0 S4 A32])) "../src/cdfun.f":60 127 {*movsf_internal}
     (nil))
(insn 78 77 79 2 (set (reg:SF 108 [ _22 ])
        (minus:SF (reg:SF 145)
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -20 [0xffffffffffffffec])) [1 acd0+0 S4 A32]))) "../src/cdfun.f":60 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 145)
        (nil)))
(insn 79 78 80 2 (set (reg:SF 21 xmm0)
        (reg:SF 108 [ _22 ])) "../src/cdfun.f":60 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 108 [ _22 ])
        (nil)))
(call_insn/u 80 79 81 2 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("cosf") [flags 0x41]  <function_decl 0x14263a700 __builtin_cosf>) [0 __builtin_cosf S1 A8])
            (const_int 0 [0]))) "../src/cdfun.f":60 665 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (nil)))
(insn 81 80 82 2 (set (reg:SF 109 [ _23 ])
        (reg:SF 21 xmm0)) "../src/cdfun.f":60 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 21 xmm0)
        (nil)))
(insn 82 81 83 2 (set (reg:SF 146)
        (mult:SF (reg:SF 107 [ _21 ])
            (reg:SF 109 [ _23 ]))) "../src/cdfun.f":60 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 109 [ _23 ])
        (expr_list:REG_DEAD (reg:SF 107 [ _21 ])
            (nil))))
(insn 83 82 84 2 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [1 dcd_a+0 S4 A32])
        (reg:SF 146)) "../src/cdfun.f":60 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 146)
        (nil)))
(insn 84 83 85 2 (set (reg:SF 147)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [1 dcd_a+0 S4 A32])) "../src/cdfun.f":62 127 {*movsf_internal}
     (nil))
(insn 85 84 86 2 (set (reg:SF 110 [ _24 ])
        (mult:SF (reg:SF 147)
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 a_be+0 S4 A32]))) "../src/cdfun.f":62 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 147)
        (nil)))
(insn 86 85 87 2 (set (reg/f:DI 148)
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 8 [0x8])) [2 dcd_be+0 S8 A64])) "../src/cdfun.f":62 81 {*movdi_internal}
     (nil))
(insn 87 86 88 2 (set (mem:SF (reg/f:DI 148) [1 *dcd_be_52(D)+0 S4 A32])
        (reg:SF 110 [ _24 ])) "../src/cdfun.f":62 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 148)
        (expr_list:REG_DEAD (reg:SF 110 [ _24 ])
            (nil))))
(insn 88 87 89 2 (set (reg:SF 149)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [1 dcd_a+0 S4 A32])) "../src/cdfun.f":63 127 {*movsf_internal}
     (nil))
(insn 89 88 90 2 (set (reg:SF 111 [ _25 ])
        (mult:SF (reg:SF 149)
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [1 a_wa+0 S4 A32]))) "../src/cdfun.f":63 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 149)
        (nil)))
(insn 90 89 91 2 (set (reg/f:DI 150)
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 16 [0x10])) [2 dcd_wa+0 S8 A64])) "../src/cdfun.f":63 81 {*movdi_internal}
     (nil))
(insn 91 90 92 2 (set (mem:SF (reg/f:DI 150) [1 *dcd_wa_54(D)+0 S4 A32])
        (reg:SF 111 [ _25 ])) "../src/cdfun.f":63 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 150)
        (expr_list:REG_DEAD (reg:SF 111 [ _25 ])
            (nil))))
(insn 92 91 93 2 (set (reg:SF 151)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [1 dcd_a+0 S4 A32])) "../src/cdfun.f":64 127 {*movsf_internal}
     (nil))
(insn 93 92 94 2 (set (reg:SF 112 [ _26 ])
        (mult:SF (reg:SF 151)
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [1 a_wt+0 S4 A32]))) "../src/cdfun.f":64 802 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 151)
        (nil)))
(insn 94 93 95 2 (set (reg/f:DI 152)
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 24 [0x18])) [2 dcd_wt+0 S8 A64])) "../src/cdfun.f":64 81 {*movdi_internal}
     (nil))
(insn 95 94 100 2 (set (mem:SF (reg/f:DI 152) [1 *dcd_wt_56(D)+0 S4 A32])
        (reg:SF 112 [ _26 ])) "../src/cdfun.f":64 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 152)
        (expr_list:REG_DEAD (reg:SF 112 [ _26 ])
            (nil))))
(insn 100 95 0 2 (const_int 0 [0]) "../src/cdfun.f":66 682 {nop}
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

