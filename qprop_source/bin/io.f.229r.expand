
;; Function getint (getint_, funcdef_no=0, decl_uid=3500, cgraph_uid=0, symbol_order=0)

getint (character(kind=1)[1:_input] & restrict input, integer(kind=4)[0:] * restrict a, integer(kind=4) & restrict n, logical(kind=4) & restrict error, integer(kind=4) _input)
{
  logical(kind=1) D.3546;
  integer(kind=4) D.3543;
  struct __st_parameter_dt dt_parm.4;
  integer(kind=4) M.3;
  integer(kind=4) D.3540;
  integer(kind=4) M.2;
  logical(kind=1) D.3531;
  integer(kind=4) D.3528;
  integer(kind=4) D.3527;
  integer(kind=4) D.3526;
  integer(kind=4) D.3525;
  integer(kind=4) D.3524;
  integer(kind=4) D.3522;
  integer(kind=4) D.3521;
  integer(kind=4) D.3520;
  void * restrict D.3519;
  character(kind=1)[1:] * pstr.1;
  integer(kind=4) M.0;
  integer(kind=4) D.3516;
  sizetype D.3550;
  bitsizetype D.3549;
  character(kind=1) rec[1:130];
  integer(kind=4) ninp;
  integer(kind=4) kspace;
  integer(kind=4) kcomma;
  integer(kind=4) k;
  integer(kind=4) ipass;
  integer(kind=4) ilenp;
  integer(kind=4) ilen;
  integer(kind=4) i;
  sizetype _1;
  bitsizetype _2;
  integer(kind=4) _3;
  integer(kind=4) _4;
  unsigned long _5;
  unsigned long _6;
  integer(kind=4) _7;
  integer(kind=4) _8;
  integer(kind=4) _9;
  integer(kind=4) _10;
  integer(kind=4) _11;
  unsigned long _12;
  unsigned long _13;
  unsigned long _14;
  unsigned long _15;
  unsigned long _16;
  unsigned long _17;
  unsigned long _18;
  unsigned long _19;
  sizetype _20;
  void * _21;
  unsigned long _22;
  unsigned long _23;
  unsigned long _24;
  unsigned long _25;
  unsigned long _26;
  unsigned long _27;
  unsigned long _28;
  unsigned long _29;
  sizetype _30;
  void * _31;
  character(kind=1) * _32;
  integer(kind=4) _33;
  integer(kind=4) _34;
  integer(kind=4) _35;
  integer(kind=4) _36;
  integer(kind=4) _37;
  character(kind=1) * _38;
  integer(kind=4) _39;
  integer(kind=4) _40;
  integer(kind=4) _41;
  integer(kind=4) _42;
  integer(kind=4) _43;
  integer(kind=4) _44;
  integer(kind=4) _45;
  integer(kind=4) _46;
  integer(kind=4) _47;
  integer(kind=4) _48;
  integer(kind=4) _49;
  integer(kind=4) _50;
  logical(kind=1) _51;
  integer(kind=8) _52;
  integer(kind=8) _53;
  integer(kind=4) * _54;
  integer(kind=4) _55;
  integer(kind=4) _56;
  integer(kind=4) M.0_61;
  integer(kind=4) M.2_62;
  integer(kind=4) M.3_63;
  bitsizetype _74;
  sizetype _75;
  integer(kind=4) _76;
  integer(kind=4) M.0_77;
  integer(kind=4) M.0_78;
  void * restrict _83;
  character(kind=1)[1:] * pstr.1_84;
  integer(kind=4) _87;
  integer(kind=4) _88;
  integer(kind=4) _89;
  integer(kind=4) _94;
  integer(kind=4) _95;
  integer(kind=4) _96;
  integer(kind=4) _97;
  integer(kind=4) _103;
  logical(kind=1) _105;
  integer(kind=4) M.2_109;
  integer(kind=4) M.2_110;
  integer(kind=4) _116;
  integer(kind=4) M.3_117;
  integer(kind=4) M.3_118;
  integer(kind=4) _128;
  logical(kind=1) _130;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = (sizetype) _input_73(D);
  _2 = (bitsizetype) _1;
  _74 = _2 * 8;
  _75 = (sizetype) _input_73(D);
  _76 = _input_73(D);
  M.0_77 = _76;
  if (M.0_77 > 128)
    goto <bb 3>; [0.00%]
  else
    goto <bb 4>; [0.00%]
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
  M.0_78 = 128;
;;    succ:       4

;;   basic block 4, loop depth 0
;;    pred:       2
;;                3
  # M.0_61 = PHI <M.0_77(2), M.0_78(3)>
  ilen_79 = M.0_61;
  ilenp_80 = ilen_79 + 2;
  _3 = MAX_EXPR <ilen_79, 0>;
  _4 = _3 + 2;
  _5 = (unsigned long) _4;
  _6 = MAX_EXPR <_5, 1>;
  _83 = __builtin_malloc (_6);
  pstr.1_84 = _83;
  _7 = MAX_EXPR <ilen_79, 0>;
  _8 = MAX_EXPR <ilen_79, 0>;
  _9 = _8 + 2;
  _gfortran_concat_string (_9, pstr.1_84, _7, input_85(D), 2, &" ,"[1]{lb: 1 sz: 1});
  _10 = MAX_EXPR <ilen_79, 0>;
  _87 = _10 + 2;
  _11 = MAX_EXPR <ilen_79, 0>;
  _88 = _11 + 2;
  _89 = MAX_EXPR <ilenp_80, 0>;
  if (_89 != 0)
    goto <bb 5>; [0.00%]
  else
    goto <bb 7>; [0.00%]
;;    succ:       5
;;                7

;;   basic block 5, loop depth 0
;;    pred:       4
  _12 = (unsigned long) _89;
  _13 = (unsigned long) _88;
  _14 = MIN_EXPR <_12, _13>;
  __builtin_memmove (&rec, pstr.1_84, _14);
  _15 = (unsigned long) _88;
  _16 = (unsigned long) _89;
  if (_15 < _16)
    goto <bb 6>; [0.00%]
  else
    goto <bb 7>; [0.00%]
;;    succ:       6
;;                7

;;   basic block 6, loop depth 0
;;    pred:       5
  _17 = (unsigned long) _89;
  _18 = (unsigned long) _88;
  _19 = _17 - _18;
  _20 = (sizetype) _88;
  _21 = &rec + _20;
  __builtin_memset (_21, 32, _19);
;;    succ:       7

;;   basic block 7, loop depth 0
;;    pred:       4
;;                6
;;                5
  __builtin_free (pstr.1_84);
  k_93 = _gfortran_string_index (130, &rec, 1, &"!"[1]{lb: 1 sz: 1}, 0);
  if (k_93 > 0)
    goto <bb 8>; [0.00%]
  else
    goto <bb 12>; [0.00%]
;;    succ:       8
;;                12

;;   basic block 8, loop depth 0
;;    pred:       7
  _94 = k_93 + -1;
  _95 = MAX_EXPR <_94, 0>;
  _96 = MAX_EXPR <_94, 0>;
  _97 = MAX_EXPR <ilen_79, 0>;
  if (_97 != 0)
    goto <bb 9>; [0.00%]
  else
    goto <bb 11>; [0.00%]
;;    succ:       9
;;                11

;;   basic block 9, loop depth 0
;;    pred:       8
  _22 = (unsigned long) _97;
  _23 = (unsigned long) _96;
  _24 = MIN_EXPR <_22, _23>;
  GIMPLE_NOP
  _25 = (unsigned long) _96;
  _26 = (unsigned long) _97;
  if (_25 < _26)
    goto <bb 10>; [0.00%]
  else
    goto <bb 11>; [0.00%]
;;    succ:       10
;;                11

;;   basic block 10, loop depth 0
;;    pred:       9
  _27 = (unsigned long) _97;
  _28 = (unsigned long) _96;
  _29 = _27 - _28;
  _30 = (sizetype) _96;
  _31 = &rec + _30;
  __builtin_memset (_31, 32, _29);
;;    succ:       11

;;   basic block 11, loop depth 0
;;    pred:       8
;;                10
;;                9
;;    succ:       12

;;   basic block 12, loop depth 0
;;    pred:       7
;;                11
  ninp_100 = *n_99(D);
  *n_99(D) = 0;
  k_102 = 1;
  _103 = ilen_79;
  ipass_104 = 1;
;;    succ:       13

;;   basic block 13, loop depth 1
;;    pred:       12
;;                22
  # ipass_58 = PHI <ipass_104(12), ipass_115(22)>
  # k_59 = PHI <k_102(12), k_60(22)>
  _105 = ipass_58 > _103;
  if (_105 != 0)
    goto <bb 23>; [0.00%]
  else
    goto <bb 14>; [0.00%]
;;    succ:       23
;;                14

;;   basic block 14, loop depth 1
;;    pred:       13
  _32 = &rec[k_59]{lb: 1 sz: 1};
  _33 = ilenp_80 - k_59;
  _34 = _33 + 1;
  _35 = MAX_EXPR <_34, 0>;
  _36 = _gfortran_string_index (_35, _32, 1, &" "[1]{lb: 1 sz: 1}, 0);
  _37 = k_59 + _36;
  kspace_106 = _37 + -1;
  _38 = &rec[k_59]{lb: 1 sz: 1};
  _39 = ilenp_80 - k_59;
  _40 = _39 + 1;
  _41 = MAX_EXPR <_40, 0>;
  _42 = _gfortran_string_index (_41, _38, 1, &","[1]{lb: 1 sz: 1}, 0);
  _43 = k_59 + _42;
  kcomma_107 = _43 + -1;
  if (k_59 == kspace_106)
    goto <bb 15>; [0.00%]
  else
    goto <bb 16>; [0.00%]
;;    succ:       15
;;                16

;;   basic block 15, loop depth 1
;;    pred:       14
  k_114 = k_59 + 1;
  goto <bb 21>; [0.00%]
;;    succ:       21

;;   basic block 16, loop depth 1
;;    pred:       14
  if (k_59 == kcomma_107)
    goto <bb 17>; [0.00%]
  else
    goto <bb 18>; [0.00%]
;;    succ:       17
;;                18

;;   basic block 17, loop depth 1
;;    pred:       16
  _44 = *n_99(D);
  _45 = _44 + 1;
  *n_99(D) = _45;
  k_113 = k_59 + 1;
  goto <bb 21>; [0.00%]
;;    succ:       21

;;   basic block 18, loop depth 1
;;    pred:       16
  _46 = *n_99(D);
  _47 = _46 + 1;
  *n_99(D) = _47;
  M.2_109 = kspace_106;
  if (kcomma_107 < M.2_109)
    goto <bb 19>; [0.00%]
  else
    goto <bb 20>; [0.00%]
;;    succ:       19
;;                20

;;   basic block 19, loop depth 1
;;    pred:       18
  M.2_110 = kcomma_107;
;;    succ:       20

;;   basic block 20, loop depth 1
;;    pred:       18
;;                19
  # M.2_62 = PHI <M.2_109(18), M.2_110(19)>
  k_111 = M.2_62 + 1;
;;    succ:       21

;;   basic block 21, loop depth 1
;;    pred:       15
;;                17
;;                20
  # k_60 = PHI <k_114(15), k_113(17), k_111(20)>
  if (k_60 >= ilen_79)
    goto <bb 23>; [0.00%]
  else
    goto <bb 22>; [0.00%]
;;    succ:       23
;;                22

;;   basic block 22, loop depth 1
;;    pred:       21
  ipass_115 = ipass_58 + 1;
  goto <bb 13>; [0.00%]
;;    succ:       13

;;   basic block 23, loop depth 0
;;    pred:       13
;;                21
  if (ninp_100 > 0)
    goto <bb 24>; [0.00%]
  else
    goto <bb 27>; [0.00%]
;;    succ:       24
;;                27

;;   basic block 24, loop depth 0
;;    pred:       23
  _116 = *n_99(D);
  M.3_117 = _116;
  if (ninp_100 < M.3_117)
    goto <bb 25>; [0.00%]
  else
    goto <bb 26>; [0.00%]
;;    succ:       25
;;                26

;;   basic block 25, loop depth 0
;;    pred:       24
  M.3_118 = ninp_100;
;;    succ:       26

;;   basic block 26, loop depth 0
;;    pred:       24
;;                25
  # M.3_63 = PHI <M.3_117(24), M.3_118(25)>
  *n_99(D) = M.3_63;
;;    succ:       27

;;   basic block 27, loop depth 0
;;    pred:       23
;;                26
  dt_parm.4.common.filename = &"../src/io.f"[1]{lb: 1 sz: 1};
  dt_parm.4.common.line = 268;
  dt_parm.4.internal_unit = &rec;
  _48 = MAX_EXPR <ilen_79, 0>;
  dt_parm.4.internal_unit_len = _48;
  dt_parm.4.internal_unit_desc = 0B;
  dt_parm.4.common.unit = -1;
  dt_parm.4.common.flags = 16516;
  _gfortran_st_read (&dt_parm.4);
  _128 = *n_99(D);
  i_129 = 1;
;;    succ:       28

;;   basic block 28, loop depth 1
;;    pred:       27
;;                30
  # i_57 = PHI <i_129(27), i_133(30)>
  _49 = dt_parm.4.common.flags;
  _50 = _49 & 3;
  _51 = (logical(kind=1)) _50;
  if (_51 != 0)
    goto <bb 31>; [0.00%]
  else
    goto <bb 29>; [0.00%]
;;    succ:       31
;;                29

;;   basic block 29, loop depth 1
;;    pred:       28
  _130 = i_57 > _128;
  if (_130 != 0)
    goto <bb 31>; [0.00%]
  else
    goto <bb 30>; [0.00%]
;;    succ:       31
;;                30

;;   basic block 30, loop depth 1
;;    pred:       29
  _52 = (integer(kind=8)) i_57;
  _53 = _52 + -1;
  _54 = &*a_131(D)[_53];
  _gfortran_transfer_integer (&dt_parm.4, _54, 4);
  i_133 = i_57 + 1;
  goto <bb 28>; [0.00%]
;;    succ:       28

;;   basic block 31, loop depth 0
;;    pred:       28
;;                29
  _gfortran_st_read_done (&dt_parm.4);
  _55 = dt_parm.4.common.flags;
  _56 = _55 & 3;
  switch (_56) <default: <L50> [0.00%], case 1: L.10 [0.00%]>
;;    succ:       33
;;                32

;;   basic block 32, loop depth 0
;;    pred:       31
L.10 [0.00%]:
  dt_parm.4 ={v} {CLOBBER};
  *n_99(D) = 0;
  *error_137(D) = 1;
  goto <bb 34>; [0.00%]
;;    succ:       34

;;   basic block 33, loop depth 0
;;    pred:       31
<L50> [0.00%]:
  dt_parm.4 ={v} {CLOBBER};
  *error_137(D) = 0;
;;    succ:       34

;;   basic block 34, loop depth 0
;;    pred:       33
;;                32
  rec ={v} {CLOBBER};
;;    succ:       35

;;   basic block 35, loop depth 0
;;    pred:       34
<L55> [0.00%]:
  return;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_1 - 1 )
Partition 2 (_2 - 2 )
Partition 3 (_3 - 3 )
Partition 4 (_4 - 4 )
Partition 5 (_5 - 5 )
Partition 6 (_6 - 6 )
Partition 7 (_7 - 7 )
Partition 8 (_8 - 8 )
Partition 9 (_9 - 9 )
Partition 10 (_10 - 10 )
Partition 11 (_11 - 11 )
Partition 12 (_12 - 12 )
Partition 13 (_13 - 13 )
Partition 14 (_14 - 14 )
Partition 15 (_15 - 15 )
Partition 16 (_16 - 16 )
Partition 17 (_17 - 17 )
Partition 18 (_18 - 18 )
Partition 19 (_19 - 19 )
Partition 20 (_20 - 20 )
Partition 21 (_21 - 21 )
Partition 22 (_22 - 22 )
Partition 23 (_23 - 23 )
Partition 24 (_24 - 24 )
Partition 25 (_25 - 25 )
Partition 26 (_26 - 26 )
Partition 27 (_27 - 27 )
Partition 28 (_28 - 28 )
Partition 29 (_29 - 29 )
Partition 30 (_30 - 30 )
Partition 31 (_31 - 31 )
Partition 32 (_32 - 32 )
Partition 33 (_33 - 33 )
Partition 34 (_34 - 34 )
Partition 35 (_35 - 35 )
Partition 36 (_36 - 36 )
Partition 37 (_37 - 37 )
Partition 38 (_38 - 38 )
Partition 39 (_39 - 39 )
Partition 40 (_40 - 40 )
Partition 41 (_41 - 41 )
Partition 42 (_42 - 42 )
Partition 43 (_43 - 43 )
Partition 44 (_44 - 44 )
Partition 45 (_45 - 45 )
Partition 46 (_46 - 46 )
Partition 47 (_47 - 47 )
Partition 48 (_48 - 48 )
Partition 49 (_49 - 49 )
Partition 50 (_50 - 50 )
Partition 51 (_51 - 51 )
Partition 52 (_52 - 52 )
Partition 53 (_53 - 53 )
Partition 54 (_54 - 54 )
Partition 55 (_55 - 55 )
Partition 56 (_56 - 56 )
Partition 57 (i_57 - 57 )
Partition 58 (ipass_58 - 58 )
Partition 59 (k_59 - 59 )
Partition 60 (k_60 - 60 )
Partition 61 (M.0_61 - 61 )
Partition 62 (M.2_62 - 62 )
Partition 63 (M.3_63 - 63 )
Partition 73 (_input_73(D) - 73 )
Partition 74 (_74 - 74 )
Partition 75 (_75 - 75 )
Partition 76 (_76 - 76 )
Partition 77 (M.0_77 - 77 )
Partition 78 (M.0_78 - 78 )
Partition 79 (ilen_79 - 79 )
Partition 80 (ilenp_80 - 80 )
Partition 83 (_83 - 83 )
Partition 84 (pstr.1_84 - 84 )
Partition 85 (input_85(D) - 85 )
Partition 87 (_87 - 87 )
Partition 88 (_88 - 88 )
Partition 89 (_89 - 89 )
Partition 93 (k_93 - 93 )
Partition 94 (_94 - 94 )
Partition 95 (_95 - 95 )
Partition 96 (_96 - 96 )
Partition 97 (_97 - 97 )
Partition 99 (n_99(D) - 99 )
Partition 100 (ninp_100 - 100 )
Partition 102 (k_102 - 102 )
Partition 103 (_103 - 103 )
Partition 104 (ipass_104 - 104 )
Partition 105 (_105 - 105 )
Partition 106 (kspace_106 - 106 )
Partition 107 (kcomma_107 - 107 )
Partition 109 (M.2_109 - 109 )
Partition 110 (M.2_110 - 110 )
Partition 111 (k_111 - 111 )
Partition 113 (k_113 - 113 )
Partition 114 (k_114 - 114 )
Partition 115 (ipass_115 - 115 )
Partition 116 (_116 - 116 )
Partition 117 (M.3_117 - 117 )
Partition 118 (M.3_118 - 118 )
Partition 128 (_128 - 128 )
Partition 129 (i_129 - 129 )
Partition 130 (_130 - 130 )
Partition 131 (a_131(D) - 131 )
Partition 133 (i_133 - 133 )
Partition 137 (error_137(D) - 137 )


Partition map 

Partition 0 (i_57 - 57 )
Partition 1 (ipass_58 - 58 )
Partition 2 (k_59 - 59 )
Partition 3 (k_60 - 60 )
Partition 4 (M.0_61 - 61 )
Partition 5 (M.2_62 - 62 )
Partition 6 (M.3_63 - 63 )
Partition 7 (_input_73(D) - 73 )
Partition 8 (_76 - 76 )
Partition 9 (M.0_77 - 77 )
Partition 10 (M.0_78 - 78 )
Partition 11 (input_85(D) - 85 )
Partition 12 (k_93 - 93 )
Partition 13 (n_99(D) - 99 )
Partition 14 (k_102 - 102 )
Partition 15 (ipass_104 - 104 )
Partition 16 (M.2_109 - 109 )
Partition 17 (M.2_110 - 110 )
Partition 18 (k_111 - 111 )
Partition 19 (k_113 - 113 )
Partition 20 (k_114 - 114 )
Partition 21 (ipass_115 - 115 )
Partition 22 (_116 - 116 )
Partition 23 (M.3_117 - 117 )
Partition 24 (M.3_118 - 118 )
Partition 25 (i_129 - 129 )
Partition 26 (a_131(D) - 131 )
Partition 27 (i_133 - 133 )
Partition 28 (error_137(D) - 137 )


Conflict graph:

After sorting:
Sorted Coalesce list:
(2147483646, 0) k_59 <-> k_60
(2147483646, 0) k_59 <-> k_93
(2147483646, 0) k_59 <-> k_102
(2147483646, 0) ipass_58 <-> ipass_104
(2147483646, 0) k_59 <-> k_111
(2147483646, 0) k_59 <-> k_113
(2147483646, 0) k_59 <-> k_114
(2147483646, 0) ipass_58 <-> ipass_115
(2147483646, 0) i_57 <-> i_129
(2147483646, 0) i_57 <-> i_133
(2, 0) M.0_61 <-> M.0_77
(2, 0) M.2_62 <-> M.2_109
(2, 0) M.3_63 <-> M.3_117
(1, 0) _76 <-> M.0_77
(1, 0) _116 <-> M.3_117

Partition map 

Partition 0 (i_57 - 57 )
Partition 1 (ipass_58 - 58 )
Partition 2 (k_59 - 59 )
Partition 3 (k_60 - 60 )
Partition 4 (M.0_61 - 61 )
Partition 5 (M.2_62 - 62 )
Partition 6 (M.3_63 - 63 )
Partition 7 (_input_73(D) - 73 )
Partition 8 (_76 - 76 )
Partition 9 (M.0_77 - 77 )
Partition 10 (M.0_78 - 78 )
Partition 11 (input_85(D) - 85 )
Partition 12 (k_93 - 93 )
Partition 13 (n_99(D) - 99 )
Partition 14 (k_102 - 102 )
Partition 15 (ipass_104 - 104 )
Partition 16 (M.2_109 - 109 )
Partition 17 (M.2_110 - 110 )
Partition 18 (k_111 - 111 )
Partition 19 (k_113 - 113 )
Partition 20 (k_114 - 114 )
Partition 21 (ipass_115 - 115 )
Partition 22 (_116 - 116 )
Partition 23 (M.3_117 - 117 )
Partition 24 (M.3_118 - 118 )
Partition 25 (i_129 - 129 )
Partition 26 (a_131(D) - 131 )
Partition 27 (i_133 - 133 )
Partition 28 (error_137(D) - 137 )

Coalesce list: (59)k_59 & (60)k_60 [map: 2, 3] : Success -> 2
Coalesce list: (59)k_59 & (93)k_93 [map: 2, 12] : Success -> 2
Coalesce list: (59)k_59 & (102)k_102 [map: 2, 14] : Success -> 2
Coalesce list: (58)ipass_58 & (104)ipass_104 [map: 1, 15] : Success -> 1
Coalesce list: (59)k_59 & (111)k_111 [map: 2, 18] : Success -> 2
Coalesce list: (59)k_59 & (113)k_113 [map: 2, 19] : Success -> 2
Coalesce list: (59)k_59 & (114)k_114 [map: 2, 20] : Success -> 2
Coalesce list: (58)ipass_58 & (115)ipass_115 [map: 1, 21] : Success -> 1
Coalesce list: (57)i_57 & (129)i_129 [map: 0, 25] : Success -> 0
Coalesce list: (57)i_57 & (133)i_133 [map: 0, 27] : Success -> 0
Coalesce list: (61)M.0_61 & (77)M.0_77 [map: 4, 9] : Success -> 4
Coalesce list: (62)M.2_62 & (109)M.2_109 [map: 5, 16] : Success -> 5
Coalesce list: (63)M.3_63 & (117)M.3_117 [map: 6, 23] : Success -> 6
Coalesce list: (76)_76 & (77)M.0_61 [map: 8, 4] : Success -> 4
Coalesce list: (116)_116 & (117)M.3_63 [map: 22, 6] : Success -> 6
Coalesce list: (57)i_57 & (133)i_57: Already Coalesced.
Coalesce list: (57)i_57 & (129)i_57: Already Coalesced.
Coalesce list: (63)M.3_63 & (118)M.3_118 [map: 6, 24] : Success -> 6
Coalesce list: (60)k_59 & (111)k_59: Already Coalesced.
Coalesce list: (60)k_59 & (113)k_59: Already Coalesced.
Coalesce list: (60)k_59 & (114)k_59: Already Coalesced.
Coalesce list: (62)M.2_62 & (110)M.2_110 [map: 5, 17] : Success -> 5
Coalesce list: (59)k_59 & (102)k_59: Already Coalesced.
Coalesce list: (58)ipass_58 & (115)ipass_58: Already Coalesced.
Coalesce list: (58)ipass_58 & (104)ipass_58: Already Coalesced.
Coalesce list: (61)M.0_61 & (78)M.0_78 [map: 4, 10] : Success -> 4
After Coalescing:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (_2 - 2 )
Partition 2 (_3 - 3 )
Partition 3 (_4 - 4 )
Partition 4 (_5 - 5 )
Partition 5 (_6 - 6 )
Partition 6 (_7 - 7 )
Partition 7 (_8 - 8 )
Partition 8 (_9 - 9 )
Partition 9 (_10 - 10 )
Partition 10 (_11 - 11 )
Partition 11 (_12 - 12 )
Partition 12 (_13 - 13 )
Partition 13 (_14 - 14 )
Partition 14 (_15 - 15 )
Partition 15 (_16 - 16 )
Partition 16 (_17 - 17 )
Partition 17 (_18 - 18 )
Partition 18 (_19 - 19 )
Partition 19 (_20 - 20 )
Partition 20 (_21 - 21 )
Partition 21 (_22 - 22 )
Partition 22 (_23 - 23 )
Partition 23 (_24 - 24 )
Partition 24 (_25 - 25 )
Partition 25 (_26 - 26 )
Partition 26 (_27 - 27 )
Partition 27 (_28 - 28 )
Partition 28 (_29 - 29 )
Partition 29 (_30 - 30 )
Partition 30 (_31 - 31 )
Partition 31 (_32 - 32 )
Partition 32 (_33 - 33 )
Partition 33 (_34 - 34 )
Partition 34 (_35 - 35 )
Partition 35 (_36 - 36 )
Partition 36 (_37 - 37 )
Partition 37 (_38 - 38 )
Partition 38 (_39 - 39 )
Partition 39 (_40 - 40 )
Partition 40 (_41 - 41 )
Partition 41 (_42 - 42 )
Partition 42 (_43 - 43 )
Partition 43 (_44 - 44 )
Partition 44 (_45 - 45 )
Partition 45 (_46 - 46 )
Partition 46 (_47 - 47 )
Partition 47 (_48 - 48 )
Partition 48 (_49 - 49 )
Partition 49 (_50 - 50 )
Partition 50 (_51 - 51 )
Partition 51 (_52 - 52 )
Partition 52 (_53 - 53 )
Partition 53 (_54 - 54 )
Partition 54 (_55 - 55 )
Partition 55 (_56 - 56 )
Partition 56 (i_57 - 57 129 133 )
Partition 57 (ipass_58 - 58 104 115 )
Partition 58 (k_59 - 59 60 93 102 111 113 114 )
Partition 59 (M.0_61 - 61 76 77 78 )
Partition 60 (M.2_62 - 62 109 110 )
Partition 61 (M.3_63 - 63 116 117 118 )
Partition 62 (_input_73(D) - 73 )
Partition 63 (_74 - 74 )
Partition 64 (_75 - 75 )
Partition 65 (ilen_79 - 79 )
Partition 66 (ilenp_80 - 80 )
Partition 67 (_83 - 83 )
Partition 68 (pstr.1_84 - 84 )
Partition 69 (input_85(D) - 85 )
Partition 70 (_87 - 87 )
Partition 71 (_88 - 88 )
Partition 72 (_89 - 89 )
Partition 73 (_94 - 94 )
Partition 74 (_95 - 95 )
Partition 75 (_96 - 96 )
Partition 76 (_97 - 97 )
Partition 77 (n_99(D) - 99 )
Partition 78 (ninp_100 - 100 )
Partition 79 (_103 - 103 )
Partition 80 (_105 - 105 )
Partition 81 (kspace_106 - 106 )
Partition 82 (kcomma_107 - 107 )
Partition 83 (_128 - 128 )
Partition 84 (_130 - 130 )
Partition 85 (a_131(D) - 131 )
Partition 86 (error_137(D) - 137 )

getint (character(kind=1)[1:_input] & restrict input, integer(kind=4)[0:] * restrict a, integer(kind=4) & restrict n, logical(kind=4) & restrict error, integer(kind=4) _input)
{
  logical(kind=1) D.3546;
  integer(kind=4) D.3543;
  struct __st_parameter_dt dt_parm.4;
  integer(kind=4) M.3;
  integer(kind=4) D.3540;
  integer(kind=4) M.2;
  logical(kind=1) D.3531;
  integer(kind=4) D.3528;
  integer(kind=4) D.3527;
  integer(kind=4) D.3526;
  integer(kind=4) D.3525;
  integer(kind=4) D.3524;
  integer(kind=4) D.3522;
  integer(kind=4) D.3521;
  integer(kind=4) D.3520;
  void * restrict D.3519;
  character(kind=1)[1:] * pstr.1;
  integer(kind=4) M.0;
  integer(kind=4) D.3516;
  sizetype D.3550;
  bitsizetype D.3549;
  character(kind=1) rec[1:130];
  integer(kind=4) ninp;
  integer(kind=4) kspace;
  integer(kind=4) kcomma;
  integer(kind=4) k;
  integer(kind=4) ipass;
  integer(kind=4) ilenp;
  integer(kind=4) ilen;
  integer(kind=4) i;
  sizetype _1;
  bitsizetype _2;
  integer(kind=4) _3;
  integer(kind=4) _4;
  unsigned long _5;
  unsigned long _6;
  integer(kind=4) _7;
  integer(kind=4) _8;
  integer(kind=4) _9;
  integer(kind=4) _10;
  integer(kind=4) _11;
  unsigned long _12;
  unsigned long _13;
  unsigned long _14;
  unsigned long _15;
  unsigned long _16;
  unsigned long _17;
  unsigned long _18;
  unsigned long _19;
  sizetype _20;
  void * _21;
  unsigned long _22;
  unsigned long _23;
  unsigned long _24;
  unsigned long _25;
  unsigned long _26;
  unsigned long _27;
  unsigned long _28;
  unsigned long _29;
  sizetype _30;
  void * _31;
  character(kind=1) * _32;
  integer(kind=4) _33;
  integer(kind=4) _34;
  integer(kind=4) _35;
  integer(kind=4) _36;
  integer(kind=4) _37;
  character(kind=1) * _38;
  integer(kind=4) _39;
  integer(kind=4) _40;
  integer(kind=4) _41;
  integer(kind=4) _42;
  integer(kind=4) _43;
  integer(kind=4) _44;
  integer(kind=4) _45;
  integer(kind=4) _46;
  integer(kind=4) _47;
  integer(kind=4) _48;
  integer(kind=4) _49;
  integer(kind=4) _50;
  logical(kind=1) _51;
  integer(kind=8) _52;
  integer(kind=8) _53;
  integer(kind=4) * _54;
  integer(kind=4) _55;
  integer(kind=4) _56;
  integer(kind=4) M.0_61;
  integer(kind=4) M.2_62;
  integer(kind=4) M.3_63;
  bitsizetype _74;
  sizetype _75;
  integer(kind=4) _76;
  integer(kind=4) M.0_77;
  integer(kind=4) M.0_78;
  void * restrict _83;
  character(kind=1)[1:] * pstr.1_84;
  integer(kind=4) _87;
  integer(kind=4) _88;
  integer(kind=4) _89;
  integer(kind=4) _94;
  integer(kind=4) _95;
  integer(kind=4) _96;
  integer(kind=4) _97;
  integer(kind=4) _103;
  logical(kind=1) _105;
  integer(kind=4) M.2_109;
  integer(kind=4) M.2_110;
  integer(kind=4) _116;
  integer(kind=4) M.3_117;
  integer(kind=4) M.3_118;
  integer(kind=4) _128;
  logical(kind=1) _130;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = (sizetype) _input_73(D);
  _2 = (bitsizetype) _1;
  _74 = _2 * 8;
  _75 = (sizetype) _input_73(D);
  _76 = _input_73(D);
  M.0_77 = _76;
  if (M.0_77 > 128)
    goto <bb 3>; [0.00%]
  else
    goto <bb 4>; [0.00%]
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
  M.0_78 = 128;
;;    succ:       4

;;   basic block 4, loop depth 0
;;    pred:       2
;;                3
  # M.0_61 = PHI <M.0_77(2), M.0_78(3)>
  ilen_79 = M.0_61;
  ilenp_80 = ilen_79 + 2;
  _3 = MAX_EXPR <ilen_79, 0>;
  _4 = _3 + 2;
  _5 = (unsigned long) _4;
  _6 = MAX_EXPR <_5, 1>;
  _83 = __builtin_malloc (_6);
  pstr.1_84 = _83;
  _7 = MAX_EXPR <ilen_79, 0>;
  _8 = MAX_EXPR <ilen_79, 0>;
  _9 = _8 + 2;
  _gfortran_concat_string (_9, pstr.1_84, _7, input_85(D), 2, &" ,"[1]{lb: 1 sz: 1});
  _10 = MAX_EXPR <ilen_79, 0>;
  _87 = _10 + 2;
  _11 = MAX_EXPR <ilen_79, 0>;
  _88 = _11 + 2;
  _89 = MAX_EXPR <ilenp_80, 0>;
  if (_89 != 0)
    goto <bb 5>; [0.00%]
  else
    goto <bb 7>; [0.00%]
;;    succ:       5
;;                7

;;   basic block 5, loop depth 0
;;    pred:       4
  _12 = (unsigned long) _89;
  _13 = (unsigned long) _88;
  _14 = MIN_EXPR <_12, _13>;
  __builtin_memmove (&rec, pstr.1_84, _14);
  _15 = (unsigned long) _88;
  _16 = (unsigned long) _89;
  if (_15 < _16)
    goto <bb 6>; [0.00%]
  else
    goto <bb 7>; [0.00%]
;;    succ:       6
;;                7

;;   basic block 6, loop depth 0
;;    pred:       5
  _17 = (unsigned long) _89;
  _18 = (unsigned long) _88;
  _19 = _17 - _18;
  _20 = (sizetype) _88;
  _21 = &rec + _20;
  __builtin_memset (_21, 32, _19);
;;    succ:       7

;;   basic block 7, loop depth 0
;;    pred:       4
;;                6
;;                5
  __builtin_free (pstr.1_84);
  k_93 = _gfortran_string_index (130, &rec, 1, &"!"[1]{lb: 1 sz: 1}, 0);
  if (k_93 > 0)
    goto <bb 8>; [0.00%]
  else
    goto <bb 12>; [0.00%]
;;    succ:       8
;;                12

;;   basic block 8, loop depth 0
;;    pred:       7
  _94 = k_93 + -1;
  _95 = MAX_EXPR <_94, 0>;
  _96 = MAX_EXPR <_94, 0>;
  _97 = MAX_EXPR <ilen_79, 0>;
  if (_97 != 0)
    goto <bb 9>; [0.00%]
  else
    goto <bb 11>; [0.00%]
;;    succ:       9
;;                11

;;   basic block 9, loop depth 0
;;    pred:       8
  _22 = (unsigned long) _97;
  _23 = (unsigned long) _96;
  _24 = MIN_EXPR <_22, _23>;
  GIMPLE_NOP
  _25 = (unsigned long) _96;
  _26 = (unsigned long) _97;
  if (_25 < _26)
    goto <bb 10>; [0.00%]
  else
    goto <bb 11>; [0.00%]
;;    succ:       10
;;                11

;;   basic block 10, loop depth 0
;;    pred:       9
  _27 = (unsigned long) _97;
  _28 = (unsigned long) _96;
  _29 = _27 - _28;
  _30 = (sizetype) _96;
  _31 = &rec + _30;
  __builtin_memset (_31, 32, _29);
;;    succ:       11

;;   basic block 11, loop depth 0
;;    pred:       8
;;                10
;;                9
;;    succ:       12

;;   basic block 12, loop depth 0
;;    pred:       7
;;                11
  ninp_100 = *n_99(D);
  *n_99(D) = 0;
  k_102 = 1;
  _103 = ilen_79;
  ipass_104 = 1;
;;    succ:       13

;;   basic block 13, loop depth 1
;;    pred:       12
;;                22
  # ipass_58 = PHI <ipass_104(12), ipass_115(22)>
  # k_59 = PHI <k_102(12), k_60(22)>
  _105 = ipass_58 > _103;
  if (_105 != 0)
    goto <bb 23>; [0.00%]
  else
    goto <bb 14>; [0.00%]
;;    succ:       23
;;                14

;;   basic block 14, loop depth 1
;;    pred:       13
  _32 = &rec[k_59]{lb: 1 sz: 1};
  _33 = ilenp_80 - k_59;
  _34 = _33 + 1;
  _35 = MAX_EXPR <_34, 0>;
  _36 = _gfortran_string_index (_35, _32, 1, &" "[1]{lb: 1 sz: 1}, 0);
  _37 = k_59 + _36;
  kspace_106 = _37 + -1;
  _38 = &rec[k_59]{lb: 1 sz: 1};
  _39 = ilenp_80 - k_59;
  _40 = _39 + 1;
  _41 = MAX_EXPR <_40, 0>;
  _42 = _gfortran_string_index (_41, _38, 1, &","[1]{lb: 1 sz: 1}, 0);
  _43 = k_59 + _42;
  kcomma_107 = _43 + -1;
  if (k_59 == kspace_106)
    goto <bb 15>; [0.00%]
  else
    goto <bb 16>; [0.00%]
;;    succ:       15
;;                16

;;   basic block 15, loop depth 1
;;    pred:       14
  k_114 = k_59 + 1;
  goto <bb 21>; [0.00%]
;;    succ:       21

;;   basic block 16, loop depth 1
;;    pred:       14
  if (k_59 == kcomma_107)
    goto <bb 17>; [0.00%]
  else
    goto <bb 18>; [0.00%]
;;    succ:       17
;;                18

;;   basic block 17, loop depth 1
;;    pred:       16
  _44 = *n_99(D);
  _45 = _44 + 1;
  *n_99(D) = _45;
  k_113 = k_59 + 1;
  goto <bb 21>; [0.00%]
;;    succ:       21

;;   basic block 18, loop depth 1
;;    pred:       16
  _46 = *n_99(D);
  _47 = _46 + 1;
  *n_99(D) = _47;
  M.2_109 = kspace_106;
  if (kcomma_107 < M.2_109)
    goto <bb 19>; [0.00%]
  else
    goto <bb 20>; [0.00%]
;;    succ:       19
;;                20

;;   basic block 19, loop depth 1
;;    pred:       18
  M.2_110 = kcomma_107;
;;    succ:       20

;;   basic block 20, loop depth 1
;;    pred:       18
;;                19
  # M.2_62 = PHI <M.2_109(18), M.2_110(19)>
  k_111 = M.2_62 + 1;
;;    succ:       21

;;   basic block 21, loop depth 1
;;    pred:       15
;;                17
;;                20
  # k_60 = PHI <k_114(15), k_113(17), k_111(20)>
  if (k_60 >= ilen_79)
    goto <bb 23>; [0.00%]
  else
    goto <bb 22>; [0.00%]
;;    succ:       23
;;                22

;;   basic block 22, loop depth 1
;;    pred:       21
  ipass_115 = ipass_58 + 1;
  goto <bb 13>; [0.00%]
;;    succ:       13

;;   basic block 23, loop depth 0
;;    pred:       13
;;                21
  if (ninp_100 > 0)
    goto <bb 24>; [0.00%]
  else
    goto <bb 27>; [0.00%]
;;    succ:       24
;;                27

;;   basic block 24, loop depth 0
;;    pred:       23
  _116 = *n_99(D);
  M.3_117 = _116;
  if (ninp_100 < M.3_117)
    goto <bb 25>; [0.00%]
  else
    goto <bb 26>; [0.00%]
;;    succ:       25
;;                26

;;   basic block 25, loop depth 0
;;    pred:       24
  M.3_118 = ninp_100;
;;    succ:       26

;;   basic block 26, loop depth 0
;;    pred:       24
;;                25
  # M.3_63 = PHI <M.3_117(24), M.3_118(25)>
  *n_99(D) = M.3_63;
;;    succ:       27

;;   basic block 27, loop depth 0
;;    pred:       23
;;                26
  dt_parm.4.common.filename = &"../src/io.f"[1]{lb: 1 sz: 1};
  dt_parm.4.common.line = 268;
  dt_parm.4.internal_unit = &rec;
  _48 = MAX_EXPR <ilen_79, 0>;
  dt_parm.4.internal_unit_len = _48;
  dt_parm.4.internal_unit_desc = 0B;
  dt_parm.4.common.unit = -1;
  dt_parm.4.common.flags = 16516;
  _gfortran_st_read (&dt_parm.4);
  _128 = *n_99(D);
  i_129 = 1;
;;    succ:       28

;;   basic block 28, loop depth 1
;;    pred:       27
;;                30
  # i_57 = PHI <i_129(27), i_133(30)>
  _49 = dt_parm.4.common.flags;
  _50 = _49 & 3;
  _51 = (logical(kind=1)) _50;
  if (_51 != 0)
    goto <bb 31>; [0.00%]
  else
    goto <bb 29>; [0.00%]
;;    succ:       31
;;                29

;;   basic block 29, loop depth 1
;;    pred:       28
  _130 = i_57 > _128;
  if (_130 != 0)
    goto <bb 31>; [0.00%]
  else
    goto <bb 30>; [0.00%]
;;    succ:       31
;;                30

;;   basic block 30, loop depth 1
;;    pred:       29
  _52 = (integer(kind=8)) i_57;
  _53 = _52 + -1;
  _54 = &*a_131(D)[_53];
  _gfortran_transfer_integer (&dt_parm.4, _54, 4);
  i_133 = i_57 + 1;
  goto <bb 28>; [0.00%]
;;    succ:       28

;;   basic block 31, loop depth 0
;;    pred:       28
;;                29
  _gfortran_st_read_done (&dt_parm.4);
  _55 = dt_parm.4.common.flags;
  _56 = _55 & 3;
  switch (_56) <default: <L50> [0.00%], case 1: L.10 [0.00%]>
;;    succ:       33
;;                32

;;   basic block 32, loop depth 0
;;    pred:       31
L.10 [0.00%]:
  dt_parm.4 ={v} {CLOBBER};
  *n_99(D) = 0;
  *error_137(D) = 1;
  goto <bb 34>; [0.00%]
;;    succ:       34

;;   basic block 33, loop depth 0
;;    pred:       31
<L50> [0.00%]:
  dt_parm.4 ={v} {CLOBBER};
  *error_137(D) = 0;
;;    succ:       34

;;   basic block 34, loop depth 0
;;    pred:       33
;;                32
  rec ={v} {CLOBBER};
;;    succ:       35

;;   basic block 35, loop depth 0
;;    pred:       34
<L55> [0.00%]:
  return;
;;    succ:       EXIT

}


Partition 0: size 480 align 16
	dt_parm.4

;; Generating RTL for gimple basic block 2

;; _1 = (sizetype) _input_73(D);

(insn 10 9 11 (set (reg:SI 161)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -692 [0xfffffffffffffd4c])) [1 _input+0 S4 A32])) "../src/io.f":278 -1
     (nil))

(insn 11 10 0 (set (reg:DI 87 [ _1 ])
        (sign_extend:DI (reg:SI 161))) "../src/io.f":278 -1
     (nil))

;; _2 = (bitsizetype) _1;

(insn 12 11 13 (set (subreg:DI (reg:TI 88 [ _2 ]) 0)
        (reg:DI 87 [ _1 ])) "../src/io.f":278 -1
     (nil))

(insn 13 12 0 (set (subreg:DI (reg:TI 88 [ _2 ]) 8)
        (const_int 0 [0])) "../src/io.f":278 -1
     (nil))

;; _74 = _2 * 8;

(insn 14 13 0 (parallel [
            (set (reg:TI 146 [ _74 ])
                (ashift:TI (reg:TI 88 [ _2 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":278 -1
     (nil))

;; _75 = (sizetype) _input_73(D);

(insn 15 14 16 (set (reg:SI 162)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -692 [0xfffffffffffffd4c])) [1 _input+0 S4 A32])) "../src/io.f":278 -1
     (nil))

(insn 16 15 0 (set (reg:DI 147 [ _75 ])
        (sign_extend:DI (reg:SI 162))) "../src/io.f":278 -1
     (nil))

;; _76 = _input_73(D);

(insn 17 16 0 (set (reg:SI 143 [ M.0_61 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -692 [0xfffffffffffffd4c])) [1 _input+0 S4 A32])) "../src/io.f":225 -1
     (nil))

;; M.0_77 = _76;

(nil)

;; if (M.0_77 > 128)

(insn 18 17 19 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 143 [ M.0_61 ])
            (const_int 128 [0x80]))) "../src/io.f":225 -1
     (nil))

(jump_insn 19 18 0 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "../src/io.f":225 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; M.0_78 = 128;

(insn 21 20 0 (set (reg:SI 143 [ M.0_61 ])
        (const_int 128 [0x80])) "../src/io.f":225 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; 

(code_label 22 21 23 2 (nil) [0 uses])

(note 23 22 0 NOTE_INSN_BASIC_BLOCK)

;; ilen_79 = M.0_61;

(insn 24 23 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [1 ilen+0 S4 A32])
        (reg:SI 143 [ M.0_61 ])) "../src/io.f":225 -1
     (nil))

;; ilenp_80 = ilen_79 + 2;

(insn 28 24 29 (set (reg:SI 166)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [1 ilen+0 S4 A32])) "../src/io.f":226 -1
     (nil))

(insn 29 28 30 (parallel [
            (set (reg:SI 165)
                (plus:SI (reg:SI 166)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":226 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [1 ilen+0 S4 A32])
            (const_int 2 [0x2]))
        (nil)))

(insn 30 29 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 ilenp+0 S4 A32])
        (reg:SI 165)) "../src/io.f":226 -1
     (nil))

;; _3 = MAX_EXPR <ilen_79, 0>;

(insn 32 30 31 (set (reg:SI 167)
        (const_int 0 [0])) "../src/io.f":229 -1
     (nil))

(insn 31 32 33 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [1 ilen+0 S4 A32])
            (const_int 0 [0]))) "../src/io.f":229 -1
     (nil))

(insn 33 31 0 (set (reg:SI 89 [ _3 ])
        (if_then_else:SI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [1 ilen+0 S4 A32])
            (reg:SI 167))) "../src/io.f":229 -1
     (nil))

;; _4 = _3 + 2;

(insn 34 33 0 (parallel [
            (set (reg:SI 90 [ _4 ])
                (plus:SI (reg:SI 89 [ _3 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":229 -1
     (nil))

;; _5 = (unsigned long) _4;

(insn 35 34 0 (set (reg:DI 91 [ _5 ])
        (sign_extend:DI (reg:SI 90 [ _4 ]))) "../src/io.f":229 -1
     (nil))

;; _6 = MAX_EXPR <_5, 1>;

(insn 37 35 36 (set (reg:DI 168)
        (const_int 1 [0x1])) "../src/io.f":229 -1
     (nil))

(insn 36 37 38 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 91 [ _5 ])
            (const_int 0 [0]))) "../src/io.f":229 -1
     (nil))

(insn 38 36 0 (set (reg:DI 92 [ _6 ])
        (if_then_else:DI (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (reg:DI 91 [ _5 ])
            (reg:DI 168))) "../src/io.f":229 -1
     (nil))

;; _83 = __builtin_malloc (_6);

(insn 39 38 40 (set (reg:DI 5 di)
        (reg:DI 92 [ _6 ])) "../src/io.f":229 -1
     (nil))

(call_insn 40 39 41 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x143849c00 __builtin_malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) "../src/io.f":229 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(insn 41 40 42 (set (reg/f:DI 169)
        (reg:DI 0 ax)) "../src/io.f":229 -1
     (expr_list:REG_NOALIAS (reg/f:DI 169)
        (nil)))

(insn 42 41 0 (set (reg/f:DI 148 [ _83 ])
        (reg/f:DI 169)) "../src/io.f":229 -1
     (nil))

;; pstr.1_84 = _83;

(insn 43 42 0 (set (reg/f:DI 149 [ pstr.1_84 ])
        (reg/f:DI 148 [ _83 ])) "../src/io.f":229 -1
     (nil))

;; _7 = MAX_EXPR <ilen_79, 0>;

(insn 45 43 44 (set (reg:SI 170)
        (const_int 0 [0])) "../src/io.f":229 -1
     (nil))

(insn 44 45 46 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [1 ilen+0 S4 A32])
            (const_int 0 [0]))) "../src/io.f":229 -1
     (nil))

(insn 46 44 0 (set (reg:SI 93 [ _7 ])
        (if_then_else:SI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [1 ilen+0 S4 A32])
            (reg:SI 170))) "../src/io.f":229 -1
     (nil))

;; _8 = MAX_EXPR <ilen_79, 0>;

(insn 48 46 47 (set (reg:SI 171)
        (const_int 0 [0])) "../src/io.f":229 -1
     (nil))

(insn 47 48 49 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [1 ilen+0 S4 A32])
            (const_int 0 [0]))) "../src/io.f":229 -1
     (nil))

(insn 49 47 0 (set (reg:SI 94 [ _8 ])
        (if_then_else:SI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [1 ilen+0 S4 A32])
            (reg:SI 171))) "../src/io.f":229 -1
     (nil))

;; _9 = _8 + 2;

(insn 50 49 0 (parallel [
            (set (reg:SI 95 [ _9 ])
                (plus:SI (reg:SI 94 [ _8 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":229 -1
     (nil))

;; _gfortran_concat_string (_9, pstr.1_84, _7, input_85(D), 2, &" ,"[1]{lb: 1 sz: 1});

(insn 51 50 52 (set (reg:DI 172)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -664 [0xfffffffffffffd68])) [10 input+0 S8 A64])) "../src/io.f":229 -1
     (nil))

(insn 52 51 53 (set (reg:DI 38 r9)
        (symbol_ref/f:DI ("*lC0") [flags 0x2]  <var_decl 0x143b721b0 *lC0>)) "../src/io.f":229 -1
     (nil))

(insn 53 52 54 (set (reg:SI 37 r8)
        (const_int 2 [0x2])) "../src/io.f":229 -1
     (nil))

(insn 54 53 55 (set (reg:DI 2 cx)
        (reg:DI 172)) "../src/io.f":229 -1
     (nil))

(insn 55 54 56 (set (reg:SI 1 dx)
        (reg:SI 93 [ _7 ])) "../src/io.f":229 -1
     (nil))

(insn 56 55 57 (set (reg:DI 4 si)
        (reg/f:DI 149 [ pstr.1_84 ])) "../src/io.f":229 -1
     (nil))

(insn 57 56 58 (set (reg:SI 5 di)
        (reg:SI 95 [ _9 ])) "../src/io.f":229 -1
     (nil))

(call_insn 58 57 0 (call (mem:QI (symbol_ref:DI ("_gfortran_concat_string") [flags 0x41]  <function_decl 0x1439c4800 _gfortran_concat_string>) [0 _gfortran_concat_string S1 A8])
        (const_int 0 [0])) "../src/io.f":229 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))

;; _10 = MAX_EXPR <ilen_79, 0>;

(insn 60 58 59 (set (reg:SI 173)
        (const_int 0 [0])) "../src/io.f":229 -1
     (nil))

(insn 59 60 61 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [1 ilen+0 S4 A32])
            (const_int 0 [0]))) "../src/io.f":229 -1
     (nil))

(insn 61 59 0 (set (reg:SI 96 [ _10 ])
        (if_then_else:SI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [1 ilen+0 S4 A32])
            (reg:SI 173))) "../src/io.f":229 -1
     (nil))

;; _87 = _10 + 2;

(insn 62 61 0 (parallel [
            (set (reg:SI 150 [ _87 ])
                (plus:SI (reg:SI 96 [ _10 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":229 -1
     (nil))

;; _11 = MAX_EXPR <ilen_79, 0>;

(insn 64 62 63 (set (reg:SI 174)
        (const_int 0 [0])) "../src/io.f":229 -1
     (nil))

(insn 63 64 65 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [1 ilen+0 S4 A32])
            (const_int 0 [0]))) "../src/io.f":229 -1
     (nil))

(insn 65 63 0 (set (reg:SI 97 [ _11 ])
        (if_then_else:SI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [1 ilen+0 S4 A32])
            (reg:SI 174))) "../src/io.f":229 -1
     (nil))

;; _88 = _11 + 2;

(insn 66 65 0 (parallel [
            (set (reg:SI 151 [ _88 ])
                (plus:SI (reg:SI 97 [ _11 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":229 -1
     (nil))

;; _89 = MAX_EXPR <ilenp_80, 0>;

(insn 68 66 67 (set (reg:SI 175)
        (const_int 0 [0])) "../src/io.f":229 -1
     (nil))

(insn 67 68 69 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [1 ilenp+0 S4 A32])
            (const_int 0 [0]))) "../src/io.f":229 -1
     (nil))

(insn 69 67 0 (set (reg:SI 152 [ _89 ])
        (if_then_else:SI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [1 ilenp+0 S4 A32])
            (reg:SI 175))) "../src/io.f":229 -1
     (nil))

;; if (_89 != 0)

(insn 70 69 71 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 152 [ _89 ])
            (const_int 0 [0]))) "../src/io.f":229 -1
     (nil))

(jump_insn 71 70 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "../src/io.f":229 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; _12 = (unsigned long) _89;

(insn 73 72 0 (set (reg:DI 98 [ _12 ])
        (sign_extend:DI (reg:SI 152 [ _89 ]))) "../src/io.f":229 -1
     (nil))

;; _13 = (unsigned long) _88;

(insn 74 73 0 (set (reg:DI 99 [ _13 ])
        (sign_extend:DI (reg:SI 151 [ _88 ]))) "../src/io.f":229 -1
     (nil))

;; _14 = MIN_EXPR <_12, _13>;

(insn 75 74 76 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 98 [ _12 ])
            (reg:DI 99 [ _13 ]))) "../src/io.f":229 -1
     (nil))

(insn 76 75 0 (set (reg:DI 100 [ _14 ])
        (if_then_else:DI (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (reg:DI 98 [ _12 ])
            (reg:DI 99 [ _13 ]))) "../src/io.f":229 -1
     (nil))

;; __builtin_memmove (&rec, pstr.1_84, _14);

(insn 77 76 78 (parallel [
            (set (reg:DI 176)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -176 [0xffffffffffffff50])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":229 -1
     (nil))

(insn 78 77 79 (set (reg:DI 1 dx)
        (reg:DI 100 [ _14 ])) "../src/io.f":229 -1
     (nil))

(insn 79 78 80 (set (reg:DI 4 si)
        (reg/f:DI 149 [ pstr.1_84 ])) "../src/io.f":229 -1
     (nil))

(insn 80 79 81 (set (reg:DI 5 di)
        (reg:DI 176)) "../src/io.f":229 -1
     (nil))

(call_insn 81 80 0 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memmove") [flags 0x41]  <function_decl 0x14386f400 __builtin_memmove>) [0 __builtin_memmove S1 A8])
            (const_int 0 [0]))) "../src/io.f":229 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))

;; _15 = (unsigned long) _88;

(insn 82 81 0 (set (reg:DI 101 [ _15 ])
        (sign_extend:DI (reg:SI 151 [ _88 ]))) "../src/io.f":229 -1
     (nil))

;; _16 = (unsigned long) _89;

(insn 83 82 0 (set (reg:DI 102 [ _16 ])
        (sign_extend:DI (reg:SI 152 [ _89 ]))) "../src/io.f":229 -1
     (nil))

;; if (_15 < _16)

(insn 84 83 85 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 101 [ _15 ])
            (reg:DI 102 [ _16 ]))) "../src/io.f":229 -1
     (nil))

(jump_insn 85 84 0 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "../src/io.f":229 -1
     (nil))

;; Generating RTL for gimple basic block 6

;; _17 = (unsigned long) _89;

(insn 87 86 0 (set (reg:DI 103 [ _17 ])
        (sign_extend:DI (reg:SI 152 [ _89 ]))) "../src/io.f":229 -1
     (nil))

;; _18 = (unsigned long) _88;

(insn 88 87 0 (set (reg:DI 104 [ _18 ])
        (sign_extend:DI (reg:SI 151 [ _88 ]))) "../src/io.f":229 -1
     (nil))

;; _19 = _17 - _18;

(insn 89 88 0 (parallel [
            (set (reg:DI 105 [ _19 ])
                (minus:DI (reg:DI 103 [ _17 ])
                    (reg:DI 104 [ _18 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":229 -1
     (nil))

;; _20 = (sizetype) _88;

(insn 90 89 0 (set (reg:DI 106 [ _20 ])
        (sign_extend:DI (reg:SI 151 [ _88 ]))) "../src/io.f":229 -1
     (nil))

;; _21 = &rec + _20;

(insn 91 90 92 (parallel [
            (set (reg:DI 177)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -176 [0xffffffffffffff50])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":229 -1
     (nil))

(insn 92 91 0 (parallel [
            (set (reg/f:DI 107 [ _21 ])
                (plus:DI (reg:DI 177)
                    (reg:DI 106 [ _20 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":229 -1
     (nil))
Applying pattern match.pd:836, generic-match.c:64
Applying pattern match.pd:873, generic-match.c:13046
Applying pattern match.pd:1221, generic-match.c:4912
Applying pattern match.pd:84, generic-match.c:11356
Applying pattern match.pd:1814, generic-match.c:9559
Applying pattern match.pd:148, generic-match.c:6836

;; __builtin_memset (_21, 32, _19);

(insn 93 92 94 (set (reg:DI 1 dx)
        (reg:DI 105 [ _19 ])) "../src/io.f":229 -1
     (nil))

(insn 94 93 95 (set (reg:SI 4 si)
        (const_int 32 [0x20])) "../src/io.f":229 -1
     (nil))

(insn 95 94 96 (set (reg:DI 5 di)
        (reg/f:DI 107 [ _21 ])) "../src/io.f":229 -1
     (nil))

(call_insn 96 95 0 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memset") [flags 0x41]  <function_decl 0x14386f600 __builtin_memset>) [0 __builtin_memset S1 A8])
            (const_int 0 [0]))) "../src/io.f":229 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))

;; Generating RTL for gimple basic block 7

;; 

(code_label 97 96 98 3 (nil) [0 uses])

(note 98 97 0 NOTE_INSN_BASIC_BLOCK)

;; __builtin_free (pstr.1_84);

(insn 99 98 100 (set (reg:DI 5 di)
        (reg/f:DI 149 [ pstr.1_84 ])) "../src/io.f":229 -1
     (nil))

(call_insn 100 99 0 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x143849b00 __builtin_free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) "../src/io.f":229 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; k_93 = _gfortran_string_index (130, &rec, 1, &"!"[1]{lb: 1 sz: 1}, 0);

(insn 101 100 102 (parallel [
            (set (reg:DI 178)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -176 [0xffffffffffffff50])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":232 -1
     (nil))

(insn 102 101 103 (set (reg:SI 37 r8)
        (const_int 0 [0])) "../src/io.f":232 -1
     (nil))

(insn 103 102 104 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*lC1") [flags 0x2]  <var_decl 0x143b72240 *lC1>)) "../src/io.f":232 -1
     (nil))

(insn 104 103 105 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) "../src/io.f":232 -1
     (nil))

(insn 105 104 106 (set (reg:DI 4 si)
        (reg:DI 178)) "../src/io.f":232 -1
     (nil))

(insn 106 105 107 (set (reg:SI 5 di)
        (const_int 130 [0x82])) "../src/io.f":232 -1
     (nil))

(call_insn/i 107 106 108 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_gfortran_string_index") [flags 0x41]  <function_decl 0x1439c4a00 _gfortran_string_index>) [0 _gfortran_string_index S1 A8])
            (const_int 0 [0]))) "../src/io.f":232 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (nil)))))))

(insn 108 107 109 (set (reg:SI 179)
        (reg:SI 0 ax)) "../src/io.f":232 -1
     (nil))

(insn 109 108 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])
        (reg:SI 179)) "../src/io.f":232 -1
     (nil))

;; if (k_93 > 0)

(insn 110 109 111 (set (reg:CCNO 17 flags)
        (compare:CCNO (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])
            (const_int 0 [0]))) "../src/io.f":233 -1
     (nil))

(jump_insn 111 110 0 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "../src/io.f":233 -1
     (nil))

;; Generating RTL for gimple basic block 8

;; _94 = k_93 + -1;

(insn 113 112 114 (set (reg:SI 180)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])) "../src/io.f":233 -1
     (nil))

(insn 114 113 0 (parallel [
            (set (reg:SI 153 [ _94 ])
                (plus:SI (reg:SI 180)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":233 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))

;; _95 = MAX_EXPR <_94, 0>;

(insn 116 114 115 (set (reg:SI 181)
        (const_int 0 [0])) "../src/io.f":233 -1
     (nil))

(insn 115 116 117 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 153 [ _94 ])
            (const_int 0 [0]))) "../src/io.f":233 -1
     (nil))

(insn 117 115 0 (set (reg:SI 154 [ _95 ])
        (if_then_else:SI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:SI 153 [ _94 ])
            (reg:SI 181))) "../src/io.f":233 -1
     (nil))

;; _96 = MAX_EXPR <_94, 0>;

(insn 119 117 118 (set (reg:SI 182)
        (const_int 0 [0])) "../src/io.f":233 -1
     (nil))

(insn 118 119 120 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 153 [ _94 ])
            (const_int 0 [0]))) "../src/io.f":233 -1
     (nil))

(insn 120 118 0 (set (reg:SI 155 [ _96 ])
        (if_then_else:SI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:SI 153 [ _94 ])
            (reg:SI 182))) "../src/io.f":233 -1
     (nil))

;; _97 = MAX_EXPR <ilen_79, 0>;

(insn 122 120 121 (set (reg:SI 183)
        (const_int 0 [0])) "../src/io.f":233 -1
     (nil))

(insn 121 122 123 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [1 ilen+0 S4 A32])
            (const_int 0 [0]))) "../src/io.f":233 -1
     (nil))

(insn 123 121 0 (set (reg:SI 156 [ _97 ])
        (if_then_else:SI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [1 ilen+0 S4 A32])
            (reg:SI 183))) "../src/io.f":233 -1
     (nil))

;; if (_97 != 0)

(insn 124 123 125 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 156 [ _97 ])
            (const_int 0 [0]))) "../src/io.f":233 -1
     (nil))

(jump_insn 125 124 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "../src/io.f":233 -1
     (nil))

;; Generating RTL for gimple basic block 9

;; _22 = (unsigned long) _97;

(insn 127 126 0 (set (reg:DI 108 [ _22 ])
        (sign_extend:DI (reg:SI 156 [ _97 ]))) "../src/io.f":233 -1
     (nil))

;; _23 = (unsigned long) _96;

(insn 128 127 0 (set (reg:DI 109 [ _23 ])
        (sign_extend:DI (reg:SI 155 [ _96 ]))) "../src/io.f":233 -1
     (nil))

;; _24 = MIN_EXPR <_22, _23>;

(insn 129 128 130 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 108 [ _22 ])
            (reg:DI 109 [ _23 ]))) "../src/io.f":233 -1
     (nil))

(insn 130 129 0 (set (reg:DI 110 [ _24 ])
        (if_then_else:DI (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (reg:DI 108 [ _22 ])
            (reg:DI 109 [ _23 ]))) "../src/io.f":233 -1
     (nil))

;; GIMPLE_NOP

(nil)

;; _25 = (unsigned long) _96;

(insn 131 130 0 (set (reg:DI 111 [ _25 ])
        (sign_extend:DI (reg:SI 155 [ _96 ]))) "../src/io.f":233 -1
     (nil))

;; _26 = (unsigned long) _97;

(insn 132 131 0 (set (reg:DI 112 [ _26 ])
        (sign_extend:DI (reg:SI 156 [ _97 ]))) "../src/io.f":233 -1
     (nil))

;; if (_25 < _26)

(insn 133 132 134 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 111 [ _25 ])
            (reg:DI 112 [ _26 ]))) "../src/io.f":233 -1
     (nil))

(jump_insn 134 133 0 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "../src/io.f":233 -1
     (nil))

;; Generating RTL for gimple basic block 10

;; _27 = (unsigned long) _97;

(insn 136 135 0 (set (reg:DI 113 [ _27 ])
        (sign_extend:DI (reg:SI 156 [ _97 ]))) "../src/io.f":233 -1
     (nil))

;; _28 = (unsigned long) _96;

(insn 137 136 0 (set (reg:DI 114 [ _28 ])
        (sign_extend:DI (reg:SI 155 [ _96 ]))) "../src/io.f":233 -1
     (nil))

;; _29 = _27 - _28;

(insn 138 137 0 (parallel [
            (set (reg:DI 115 [ _29 ])
                (minus:DI (reg:DI 113 [ _27 ])
                    (reg:DI 114 [ _28 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":233 -1
     (nil))

;; _30 = (sizetype) _96;

(insn 139 138 0 (set (reg:DI 116 [ _30 ])
        (sign_extend:DI (reg:SI 155 [ _96 ]))) "../src/io.f":233 -1
     (nil))

;; _31 = &rec + _30;

(insn 140 139 141 (parallel [
            (set (reg:DI 184)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -176 [0xffffffffffffff50])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":233 -1
     (nil))

(insn 141 140 0 (parallel [
            (set (reg/f:DI 117 [ _31 ])
                (plus:DI (reg:DI 184)
                    (reg:DI 116 [ _30 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":233 -1
     (nil))
Applying pattern match.pd:836, generic-match.c:64
Applying pattern match.pd:873, generic-match.c:13046
Applying pattern match.pd:1221, generic-match.c:4912
Applying pattern match.pd:84, generic-match.c:11356
Applying pattern match.pd:1814, generic-match.c:9559
Applying pattern match.pd:148, generic-match.c:6836

;; __builtin_memset (_31, 32, _29);

(insn 142 141 143 (set (reg:DI 1 dx)
        (reg:DI 115 [ _29 ])) "../src/io.f":233 -1
     (nil))

(insn 143 142 144 (set (reg:SI 4 si)
        (const_int 32 [0x20])) "../src/io.f":233 -1
     (nil))

(insn 144 143 145 (set (reg:DI 5 di)
        (reg/f:DI 117 [ _31 ])) "../src/io.f":233 -1
     (nil))

(call_insn 145 144 0 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memset") [flags 0x41]  <function_decl 0x14386f600 __builtin_memset>) [0 __builtin_memset S1 A8])
            (const_int 0 [0]))) "../src/io.f":233 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))

;; Generating RTL for gimple basic block 11

;; 

(code_label 146 145 147 5 (nil) [0 uses])

(note 147 146 0 NOTE_INSN_BASIC_BLOCK)

;; Generating RTL for gimple basic block 12

;; 

(code_label 148 147 149 4 (nil) [0 uses])

(note 149 148 0 NOTE_INSN_BASIC_BLOCK)

;; ninp_100 = *n_99(D);

(insn 150 149 151 (set (reg/f:DI 185)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -680 [0xfffffffffffffd58])) [11 n+0 S8 A64])) "../src/io.f":235 -1
     (nil))

(insn 151 150 152 (set (reg:SI 186)
        (mem:SI (reg/f:DI 185) [1 *n_99(D)+0 S4 A32])) "../src/io.f":235 -1
     (nil))

(insn 152 151 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [1 ninp+0 S4 A32])
        (reg:SI 186)) "../src/io.f":235 -1
     (nil))

;; *n_99(D) = 0;

(insn 153 152 154 (set (reg/f:DI 187)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -680 [0xfffffffffffffd58])) [11 n+0 S8 A64])) "../src/io.f":238 -1
     (nil))

(insn 154 153 0 (set (mem:SI (reg/f:DI 187) [1 *n_99(D)+0 S4 A32])
        (const_int 0 [0])) "../src/io.f":238 -1
     (nil))

;; k_102 = 1;

(insn 155 154 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])
        (const_int 1 [0x1])) "../src/io.f":239 -1
     (nil))

;; _103 = ilen_79;

(insn 156 155 0 (set (reg:SI 157 [ _103 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [1 ilen+0 S4 A32])) "../src/io.f":240 -1
     (nil))

;; ipass_104 = 1;

(insn 157 156 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 ipass+0 S4 A32])
        (const_int 1 [0x1])) "../src/io.f":240 -1
     (nil))

;; Generating RTL for gimple basic block 13

;; _105 = ipass_58 > _103;

(insn 159 158 160 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [1 ipass+0 S4 A32])
            (reg:SI 157 [ _103 ]))) "../src/io.f":240 -1
     (nil))

(insn 160 159 0 (set (reg:QI 158 [ _105 ])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "../src/io.f":240 -1
     (nil))

;; if (_105 != 0)

(insn 161 160 162 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 158 [ _105 ])
            (const_int 0 [0]))) "../src/io.f":240 -1
     (nil))

(jump_insn 162 161 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "../src/io.f":240 -1
     (nil))

;; Generating RTL for gimple basic block 14
Applying pattern match.pd:836, generic-match.c:64
Applying pattern match.pd:873, generic-match.c:13046
Applying pattern match.pd:148, generic-match.c:6836
Applying pattern match.pd:84, generic-match.c:11356

;; _32 = &rec[k_59]{lb: 1 sz: 1};

(insn 164 163 165 (parallel [
            (set (reg:DI 188)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -176 [0xffffffffffffff50])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":242 -1
     (nil))

(insn 165 164 166 (set (reg:SI 190)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])) "../src/io.f":242 -1
     (nil))

(insn 166 165 167 (parallel [
            (set (reg:SI 189)
                (plus:SI (reg:SI 190)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":242 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))

(insn 167 166 168 (set (reg:DI 191)
        (sign_extend:DI (reg:SI 189))) "../src/io.f":242 -1
     (nil))

(insn 168 167 0 (parallel [
            (set (reg/f:DI 118 [ _32 ])
                (plus:DI (reg:DI 188)
                    (reg:DI 191)))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":242 -1
     (nil))

;; _33 = ilenp_80 - k_59;

(insn 169 168 170 (set (reg:SI 192)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 ilenp+0 S4 A32])) "../src/io.f":242 -1
     (nil))

(insn 170 169 0 (parallel [
            (set (reg:SI 119 [ _33 ])
                (minus:SI (reg:SI 192)
                    (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":242 -1
     (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [1 ilenp+0 S4 A32])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32]))
        (nil)))

;; _34 = _33 + 1;

(insn 171 170 0 (parallel [
            (set (reg:SI 120 [ _34 ])
                (plus:SI (reg:SI 119 [ _33 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":242 -1
     (nil))

;; _35 = MAX_EXPR <_34, 0>;

(insn 173 171 172 (set (reg:SI 193)
        (const_int 0 [0])) "../src/io.f":242 -1
     (nil))

(insn 172 173 174 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 120 [ _34 ])
            (const_int 0 [0]))) "../src/io.f":242 -1
     (nil))

(insn 174 172 0 (set (reg:SI 121 [ _35 ])
        (if_then_else:SI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:SI 120 [ _34 ])
            (reg:SI 193))) "../src/io.f":242 -1
     (nil))

;; _36 = _gfortran_string_index (_35, _32, 1, &" "[1]{lb: 1 sz: 1}, 0);

(insn 175 174 176 (set (reg:SI 37 r8)
        (const_int 0 [0])) "../src/io.f":242 -1
     (nil))

(insn 176 175 177 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*lC2") [flags 0x2]  <var_decl 0x143b722d0 *lC2>)) "../src/io.f":242 -1
     (nil))

(insn 177 176 178 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) "../src/io.f":242 -1
     (nil))

(insn 178 177 179 (set (reg:DI 4 si)
        (reg/f:DI 118 [ _32 ])) "../src/io.f":242 -1
     (nil))

(insn 179 178 180 (set (reg:SI 5 di)
        (reg:SI 121 [ _35 ])) "../src/io.f":242 -1
     (nil))

(call_insn/i 180 179 181 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_gfortran_string_index") [flags 0x41]  <function_decl 0x1439c4a00 _gfortran_string_index>) [0 _gfortran_string_index S1 A8])
            (const_int 0 [0]))) "../src/io.f":242 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (nil)))))))

(insn 181 180 0 (set (reg:SI 122 [ _36 ])
        (reg:SI 0 ax)) "../src/io.f":242 -1
     (nil))

;; _37 = k_59 + _36;

(insn 182 181 183 (set (reg:SI 194)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])) "../src/io.f":242 -1
     (nil))

(insn 183 182 0 (parallel [
            (set (reg:SI 123 [ _37 ])
                (plus:SI (reg:SI 122 [ _36 ])
                    (reg:SI 194)))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":242 -1
     (expr_list:REG_EQUAL (plus:SI (reg:SI 122 [ _36 ])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32]))
        (nil)))

;; kspace_106 = _37 + -1;

(insn 184 183 185 (parallel [
            (set (reg:SI 195)
                (plus:SI (reg:SI 123 [ _37 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":242 -1
     (nil))

(insn 185 184 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [1 kspace+0 S4 A32])
        (reg:SI 195)) "../src/io.f":242 -1
     (nil))
Applying pattern match.pd:836, generic-match.c:64
Applying pattern match.pd:873, generic-match.c:13046
Applying pattern match.pd:148, generic-match.c:6836
Applying pattern match.pd:84, generic-match.c:11356

;; _38 = &rec[k_59]{lb: 1 sz: 1};

(insn 186 185 187 (parallel [
            (set (reg:DI 196)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -176 [0xffffffffffffff50])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":243 -1
     (nil))

(insn 187 186 188 (set (reg:SI 198)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])) "../src/io.f":243 -1
     (nil))

(insn 188 187 189 (parallel [
            (set (reg:SI 197)
                (plus:SI (reg:SI 198)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":243 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))

(insn 189 188 190 (set (reg:DI 199)
        (sign_extend:DI (reg:SI 197))) "../src/io.f":243 -1
     (nil))

(insn 190 189 0 (parallel [
            (set (reg/f:DI 124 [ _38 ])
                (plus:DI (reg:DI 196)
                    (reg:DI 199)))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":243 -1
     (nil))

;; _39 = ilenp_80 - k_59;

(insn 191 190 192 (set (reg:SI 200)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 ilenp+0 S4 A32])) "../src/io.f":243 -1
     (nil))

(insn 192 191 0 (parallel [
            (set (reg:SI 125 [ _39 ])
                (minus:SI (reg:SI 200)
                    (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":243 -1
     (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [1 ilenp+0 S4 A32])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32]))
        (nil)))

;; _40 = _39 + 1;

(insn 193 192 0 (parallel [
            (set (reg:SI 126 [ _40 ])
                (plus:SI (reg:SI 125 [ _39 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":243 -1
     (nil))

;; _41 = MAX_EXPR <_40, 0>;

(insn 195 193 194 (set (reg:SI 201)
        (const_int 0 [0])) "../src/io.f":243 -1
     (nil))

(insn 194 195 196 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 126 [ _40 ])
            (const_int 0 [0]))) "../src/io.f":243 -1
     (nil))

(insn 196 194 0 (set (reg:SI 127 [ _41 ])
        (if_then_else:SI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:SI 126 [ _40 ])
            (reg:SI 201))) "../src/io.f":243 -1
     (nil))

;; _42 = _gfortran_string_index (_41, _38, 1, &","[1]{lb: 1 sz: 1}, 0);

(insn 197 196 198 (set (reg:SI 37 r8)
        (const_int 0 [0])) "../src/io.f":243 -1
     (nil))

(insn 198 197 199 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*lC3") [flags 0x2]  <var_decl 0x143b72360 *lC3>)) "../src/io.f":243 -1
     (nil))

(insn 199 198 200 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) "../src/io.f":243 -1
     (nil))

(insn 200 199 201 (set (reg:DI 4 si)
        (reg/f:DI 124 [ _38 ])) "../src/io.f":243 -1
     (nil))

(insn 201 200 202 (set (reg:SI 5 di)
        (reg:SI 127 [ _41 ])) "../src/io.f":243 -1
     (nil))

(call_insn/i 202 201 203 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_gfortran_string_index") [flags 0x41]  <function_decl 0x1439c4a00 _gfortran_string_index>) [0 _gfortran_string_index S1 A8])
            (const_int 0 [0]))) "../src/io.f":243 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (nil)))))))

(insn 203 202 0 (set (reg:SI 128 [ _42 ])
        (reg:SI 0 ax)) "../src/io.f":243 -1
     (nil))

;; _43 = k_59 + _42;

(insn 204 203 205 (set (reg:SI 202)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])) "../src/io.f":243 -1
     (nil))

(insn 205 204 0 (parallel [
            (set (reg:SI 129 [ _43 ])
                (plus:SI (reg:SI 128 [ _42 ])
                    (reg:SI 202)))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":243 -1
     (expr_list:REG_EQUAL (plus:SI (reg:SI 128 [ _42 ])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32]))
        (nil)))

;; kcomma_107 = _43 + -1;

(insn 206 205 207 (parallel [
            (set (reg:SI 203)
                (plus:SI (reg:SI 129 [ _43 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":243 -1
     (nil))

(insn 207 206 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [1 kcomma+0 S4 A32])
        (reg:SI 203)) "../src/io.f":243 -1
     (nil))

;; if (k_59 == kspace_106)

(insn 208 207 209 (set (reg:SI 204)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])) "../src/io.f":245 -1
     (nil))

(insn 209 208 210 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 204)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -28 [0xffffffffffffffe4])) [1 kspace+0 S4 A32]))) "../src/io.f":245 -1
     (nil))

(jump_insn 210 209 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "../src/io.f":245 -1
     (nil))

;; Generating RTL for gimple basic block 15

;; k_114 = k_59 + 1;

(insn 212 211 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":247 -1
     (nil))

;; Generating RTL for gimple basic block 16

;; 

(code_label 215 214 216 7 (nil) [0 uses])

(note 216 215 0 NOTE_INSN_BASIC_BLOCK)

;; if (k_59 == kcomma_107)

(insn 217 216 218 (set (reg:SI 205)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])) "../src/io.f":251 -1
     (nil))

(insn 218 217 219 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 205)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])) [1 kcomma+0 S4 A32]))) "../src/io.f":251 -1
     (nil))

(jump_insn 219 218 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "../src/io.f":251 -1
     (nil))

;; Generating RTL for gimple basic block 17

;; _44 = *n_99(D);

(insn 221 220 222 (set (reg/f:DI 206)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -680 [0xfffffffffffffd58])) [11 n+0 S8 A64])) "../src/io.f":253 -1
     (nil))

(insn 222 221 0 (set (reg:SI 130 [ _44 ])
        (mem:SI (reg/f:DI 206) [1 *n_99(D)+0 S4 A32])) "../src/io.f":253 -1
     (nil))

;; _45 = _44 + 1;

(insn 223 222 0 (parallel [
            (set (reg:SI 131 [ _45 ])
                (plus:SI (reg:SI 130 [ _44 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":253 -1
     (nil))

;; *n_99(D) = _45;

(insn 224 223 225 (set (reg/f:DI 207)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -680 [0xfffffffffffffd58])) [11 n+0 S8 A64])) "../src/io.f":253 -1
     (nil))

(insn 225 224 0 (set (mem:SI (reg/f:DI 207) [1 *n_99(D)+0 S4 A32])
        (reg:SI 131 [ _45 ])) "../src/io.f":253 -1
     (nil))

;; k_113 = k_59 + 1;

(insn 226 225 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":254 -1
     (nil))

;; Generating RTL for gimple basic block 18

;; 

(code_label 229 228 230 9 (nil) [0 uses])

(note 230 229 0 NOTE_INSN_BASIC_BLOCK)

;; _46 = *n_99(D);

(insn 231 230 232 (set (reg/f:DI 208)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -680 [0xfffffffffffffd58])) [11 n+0 S8 A64])) "../src/io.f":260 -1
     (nil))

(insn 232 231 0 (set (reg:SI 132 [ _46 ])
        (mem:SI (reg/f:DI 208) [1 *n_99(D)+0 S4 A32])) "../src/io.f":260 -1
     (nil))

;; _47 = _46 + 1;

(insn 233 232 0 (parallel [
            (set (reg:SI 133 [ _47 ])
                (plus:SI (reg:SI 132 [ _46 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":260 -1
     (nil))

;; *n_99(D) = _47;

(insn 234 233 235 (set (reg/f:DI 209)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -680 [0xfffffffffffffd58])) [11 n+0 S8 A64])) "../src/io.f":260 -1
     (nil))

(insn 235 234 0 (set (mem:SI (reg/f:DI 209) [1 *n_99(D)+0 S4 A32])
        (reg:SI 133 [ _47 ])) "../src/io.f":260 -1
     (nil))

;; M.2_109 = kspace_106;

(insn 236 235 0 (set (reg:SI 144 [ M.2_62 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [1 kspace+0 S4 A32])) "../src/io.f":261 -1
     (nil))

;; if (kcomma_107 < M.2_109)

(insn 237 236 238 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])) [1 kcomma+0 S4 A32])
            (reg:SI 144 [ M.2_62 ]))) "../src/io.f":261 -1
     (nil))

(jump_insn 238 237 0 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "../src/io.f":261 -1
     (nil))

;; Generating RTL for gimple basic block 19

;; M.2_110 = kcomma_107;

(insn 240 239 0 (set (reg:SI 144 [ M.2_62 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [1 kcomma+0 S4 A32])) "../src/io.f":261 -1
     (nil))

;; Generating RTL for gimple basic block 20

;; 

(code_label 241 240 242 10 (nil) [0 uses])

(note 242 241 0 NOTE_INSN_BASIC_BLOCK)

;; k_111 = M.2_62 + 1;

(insn 243 242 244 (parallel [
            (set (reg:SI 210)
                (plus:SI (reg:SI 144 [ M.2_62 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":261 -1
     (nil))

(insn 244 243 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])
        (reg:SI 210)) "../src/io.f":261 -1
     (nil))

;; Generating RTL for gimple basic block 21

;; 

(code_label 245 244 246 8 (nil) [0 uses])

(note 246 245 0 NOTE_INSN_BASIC_BLOCK)

;; if (k_60 >= ilen_79)

(insn 247 246 248 (set (reg:SI 211)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])) "../src/io.f":263 -1
     (nil))

(insn 248 247 249 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 211)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [1 ilen+0 S4 A32]))) "../src/io.f":263 -1
     (nil))

(jump_insn 249 248 0 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "../src/io.f":263 -1
     (nil))

;; Generating RTL for gimple basic block 22

;; ipass_115 = ipass_58 + 1;

(insn 251 250 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [1 ipass+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [1 ipass+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":240 -1
     (nil))

;; Generating RTL for gimple basic block 23

;; 

(code_label 255 254 256 6 (nil) [0 uses])

(note 256 255 0 NOTE_INSN_BASIC_BLOCK)

;; if (ninp_100 > 0)

(insn 257 256 258 (set (reg:CCNO 17 flags)
        (compare:CCNO (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [1 ninp+0 S4 A32])
            (const_int 0 [0]))) "../src/io.f":267 -1
     (nil))

(jump_insn 258 257 0 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "../src/io.f":267 -1
     (nil))

;; Generating RTL for gimple basic block 24

;; _116 = *n_99(D);

(insn 260 259 261 (set (reg/f:DI 212)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -680 [0xfffffffffffffd58])) [11 n+0 S8 A64])) "../src/io.f":267 -1
     (nil))

(insn 261 260 0 (set (reg:SI 145 [ M.3_63 ])
        (mem:SI (reg/f:DI 212) [1 *n_99(D)+0 S4 A32])) "../src/io.f":267 -1
     (nil))

;; M.3_117 = _116;

(nil)

;; if (ninp_100 < M.3_117)

(insn 262 261 263 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [1 ninp+0 S4 A32])
            (reg:SI 145 [ M.3_63 ]))) "../src/io.f":267 -1
     (nil))

(jump_insn 263 262 0 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "../src/io.f":267 -1
     (nil))

;; Generating RTL for gimple basic block 25

;; M.3_118 = ninp_100;

(insn 265 264 0 (set (reg:SI 145 [ M.3_63 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [1 ninp+0 S4 A32])) "../src/io.f":267 -1
     (nil))

;; Generating RTL for gimple basic block 26

;; 

(code_label 266 265 267 13 (nil) [0 uses])

(note 267 266 0 NOTE_INSN_BASIC_BLOCK)

;; *n_99(D) = M.3_63;

(insn 268 267 269 (set (reg/f:DI 213)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -680 [0xfffffffffffffd58])) [11 n+0 S8 A64])) "../src/io.f":267 -1
     (nil))

(insn 269 268 0 (set (mem:SI (reg/f:DI 213) [1 *n_99(D)+0 S4 A32])
        (reg:SI 145 [ M.3_63 ])) "../src/io.f":267 -1
     (nil))

;; Generating RTL for gimple basic block 27

;; 

(code_label 270 269 271 12 (nil) [0 uses])

(note 271 270 0 NOTE_INSN_BASIC_BLOCK)

;; dt_parm.4.common.filename = &"../src/io.f"[1]{lb: 1 sz: 1};

(insn 272 271 273 (set (reg/f:DI 214)
        (symbol_ref/f:DI ("*lC4") [flags 0x2]  <var_decl 0x143b723f0 *lC4>)) "../src/io.f":268 -1
     (nil))

(insn 273 272 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -648 [0xfffffffffffffd78])) [5 dt_parm.4.common.filename+0 S8 A64])
        (reg/f:DI 214)) "../src/io.f":268 -1
     (nil))

;; dt_parm.4.common.line = 268;

(insn 274 273 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -640 [0xfffffffffffffd80])) [1 dt_parm.4.common.line+0 S4 A128])
        (const_int 268 [0x10c])) "../src/io.f":268 -1
     (nil))

;; dt_parm.4.internal_unit = &rec;

(insn 275 274 276 (parallel [
            (set (reg:DI 215)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -176 [0xffffffffffffff50])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":268 -1
     (nil))

(insn 276 275 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -560 [0xfffffffffffffdd0])) [5 dt_parm.4.internal_unit+0 S8 A128])
        (reg:DI 215)) "../src/io.f":268 -1
     (nil))

;; _48 = MAX_EXPR <ilen_79, 0>;

(insn 278 276 277 (set (reg:SI 216)
        (const_int 0 [0])) "../src/io.f":268 -1
     (nil))

(insn 277 278 279 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [1 ilen+0 S4 A32])
            (const_int 0 [0]))) "../src/io.f":268 -1
     (nil))

(insn 279 277 0 (set (reg:SI 134 [ _48 ])
        (if_then_else:SI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [1 ilen+0 S4 A32])
            (reg:SI 216))) "../src/io.f":268 -1
     (nil))

;; dt_parm.4.internal_unit_len = _48;

(insn 280 279 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -552 [0xfffffffffffffdd8])) [1 dt_parm.4.internal_unit_len+0 S4 A64])
        (reg:SI 134 [ _48 ])) "../src/io.f":268 -1
     (nil))

;; dt_parm.4.internal_unit_desc = 0B;

(insn 281 280 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -592 [0xfffffffffffffdb0])) [5 dt_parm.4.internal_unit_desc+0 S8 A128])
        (const_int 0 [0])) "../src/io.f":268 -1
     (nil))

;; dt_parm.4.common.unit = -1;

(insn 282 281 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -652 [0xfffffffffffffd74])) [1 dt_parm.4.common.unit+0 S4 A32])
        (const_int -1 [0xffffffffffffffff])) "../src/io.f":268 -1
     (nil))

;; dt_parm.4.common.flags = 16516;

(insn 283 282 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -656 [0xfffffffffffffd70])) [1 dt_parm.4.common.flags+0 S4 A128])
        (const_int 16516 [0x4084])) "../src/io.f":268 -1
     (nil))

;; _gfortran_st_read (&dt_parm.4);

(insn 284 283 285 (parallel [
            (set (reg:DI 217)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -656 [0xfffffffffffffd70])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":268 -1
     (nil))

(insn 285 284 286 (set (reg:DI 5 di)
        (reg:DI 217)) "../src/io.f":268 -1
     (nil))

(call_insn 286 285 0 (call (mem:QI (symbol_ref:DI ("_gfortran_st_read") [flags 0x41]  <function_decl 0x1439e0700 _gfortran_st_read>) [0 _gfortran_st_read S1 A8])
        (const_int 0 [0])) "../src/io.f":268 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; _128 = *n_99(D);

(insn 287 286 288 (set (reg/f:DI 218)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -680 [0xfffffffffffffd58])) [11 n+0 S8 A64])) "../src/io.f":268 -1
     (nil))

(insn 288 287 0 (set (reg:SI 159 [ _128 ])
        (mem:SI (reg/f:DI 218) [1 *n_99(D)+0 S4 A32])) "../src/io.f":268 -1
     (nil))

;; i_129 = 1;

(insn 289 288 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
        (const_int 1 [0x1])) "../src/io.f":268 -1
     (nil))

;; Generating RTL for gimple basic block 28

;; _49 = dt_parm.4.common.flags;

(insn 291 290 0 (set (reg:SI 135 [ _49 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -656 [0xfffffffffffffd70])) [1 dt_parm.4.common.flags+0 S4 A128])) "../src/io.f":268 -1
     (nil))

;; _50 = _49 & 3;

(insn 292 291 0 (parallel [
            (set (reg:SI 136 [ _50 ])
                (and:SI (reg:SI 135 [ _49 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":268 -1
     (nil))

;; _51 = (logical(kind=1)) _50;

(insn 293 292 294 (set (reg:QI 137 [ _51 ])
        (subreg:QI (reg:SI 136 [ _50 ]) 0)) "../src/io.f":268 -1
     (nil))

(insn 294 293 0 (parallel [
            (set (reg:QI 137 [ _51 ])
                (and:QI (reg:QI 137 [ _51 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":268 -1
     (nil))

;; if (_51 != 0)

(insn 295 294 296 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 137 [ _51 ])
            (const_int 0 [0]))) "../src/io.f":268 -1
     (nil))

(jump_insn 296 295 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "../src/io.f":268 -1
     (nil))

;; Generating RTL for gimple basic block 29

;; _130 = i_57 > _128;

(insn 298 297 299 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
            (reg:SI 159 [ _128 ]))) "../src/io.f":268 -1
     (nil))

(insn 299 298 0 (set (reg:QI 160 [ _130 ])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "../src/io.f":268 -1
     (nil))

;; if (_130 != 0)

(insn 300 299 301 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 160 [ _130 ])
            (const_int 0 [0]))) "../src/io.f":268 -1
     (nil))

(jump_insn 301 300 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "../src/io.f":268 -1
     (nil))

;; Generating RTL for gimple basic block 30

;; _52 = (integer(kind=8)) i_57;

(insn 303 302 304 (set (reg:SI 219)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/io.f":268 -1
     (nil))

(insn 304 303 0 (set (reg:DI 138 [ _52 ])
        (sign_extend:DI (reg:SI 219))) "../src/io.f":268 -1
     (nil))

;; _53 = _52 + -1;

(insn 305 304 0 (parallel [
            (set (reg:DI 139 [ _53 ])
                (plus:DI (reg:DI 138 [ _52 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":268 -1
     (nil))
Applying pattern match.pd:84, generic-match.c:11356

;; _54 = &*a_131(D)[_53];

(insn 306 305 307 (parallel [
            (set (reg:DI 220)
                (ashift:DI (reg:DI 139 [ _53 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":268 -1
     (nil))

(insn 307 306 308 (set (reg/f:DI 221)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -672 [0xfffffffffffffd60])) [6 a+0 S8 A64])) "../src/io.f":268 -1
     (nil))

(insn 308 307 0 (parallel [
            (set (reg/f:DI 140 [ _54 ])
                (plus:DI (reg:DI 220)
                    (reg/f:DI 221)))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":268 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -672 [0xfffffffffffffd60])) [6 a+0 S8 A64])
            (reg:DI 220))
        (nil)))

;; _gfortran_transfer_integer (&dt_parm.4, _54, 4);

(insn 309 308 310 (parallel [
            (set (reg:DI 222)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -656 [0xfffffffffffffd70])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":268 -1
     (nil))

(insn 310 309 311 (set (reg:SI 1 dx)
        (const_int 4 [0x4])) "../src/io.f":268 -1
     (nil))

(insn 311 310 312 (set (reg:DI 4 si)
        (reg/f:DI 140 [ _54 ])) "../src/io.f":268 -1
     (nil))

(insn 312 311 313 (set (reg:DI 5 di)
        (reg:DI 222)) "../src/io.f":268 -1
     (nil))

(call_insn 313 312 0 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_integer") [flags 0x41]  <function_decl 0x1439d4400 _gfortran_transfer_integer>) [0 _gfortran_transfer_integer S1 A8])
        (const_int 0 [0])) "../src/io.f":268 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))

;; i_133 = i_57 + 1;

(insn 314 313 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":268 -1
     (nil))

;; Generating RTL for gimple basic block 31

;; 

(code_label 318 317 319 14 (nil) [0 uses])

(note 319 318 0 NOTE_INSN_BASIC_BLOCK)

;; _gfortran_st_read_done (&dt_parm.4);

(insn 320 319 321 (parallel [
            (set (reg:DI 223)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -656 [0xfffffffffffffd70])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":268 -1
     (nil))

(insn 321 320 322 (set (reg:DI 5 di)
        (reg:DI 223)) "../src/io.f":268 -1
     (nil))

(call_insn 322 321 0 (call (mem:QI (symbol_ref:DI ("_gfortran_st_read_done") [flags 0x41]  <function_decl 0x1439e4200 _gfortran_st_read_done>) [0 _gfortran_st_read_done S1 A8])
        (const_int 0 [0])) "../src/io.f":268 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; _55 = dt_parm.4.common.flags;

(insn 323 322 0 (set (reg:SI 141 [ _55 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -656 [0xfffffffffffffd70])) [1 dt_parm.4.common.flags+0 S4 A128])) "../src/io.f":268 -1
     (nil))

;; _56 = _55 & 3;

(insn 324 323 0 (parallel [
            (set (reg:SI 142 [ _56 ])
                (and:SI (reg:SI 141 [ _55 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":268 -1
     (nil))
;; Expanding GIMPLE switch as decision tree:
;;        1

;; switch (_56) <default: <L50> [0.00%], case 1: L.10 [0.00%]>

(insn 325 324 326 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 142 [ _56 ])
            (const_int 1 [0x1]))) "../src/io.f":268 -1
     (nil))

(jump_insn 326 325 327 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "../src/io.f":268 -1
     (nil))

(jump_insn 327 326 328 (set (pc)
        (label_ref 0)) "../src/io.f":268 -1
     (nil))

(barrier 328 327 0)

;; Generating RTL for gimple basic block 32

;; L.10 [0.00%]:

(code_label 329 328 330 17 ("L.10") [0 uses])

(note 330 329 0 NOTE_INSN_BASIC_BLOCK)

;; dt_parm.4 ={v} {CLOBBER};

(nil)

;; *n_99(D) = 0;

(insn 331 330 332 (set (reg/f:DI 224)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -680 [0xfffffffffffffd58])) [11 n+0 S8 A64])) "../src/io.f":275 -1
     (nil))

(insn 332 331 0 (set (mem:SI (reg/f:DI 224) [1 *n_99(D)+0 S4 A32])
        (const_int 0 [0])) "../src/io.f":275 -1
     (nil))

;; *error_137(D) = 1;

(insn 333 332 334 (set (reg/f:DI 225)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -688 [0xfffffffffffffd50])) [12 error+0 S8 A64])) "../src/io.f":276 -1
     (nil))

(insn 334 333 0 (set (mem:SI (reg/f:DI 225) [13 *error_137(D)+0 S4 A32])
        (const_int 1 [0x1])) "../src/io.f":276 -1
     (nil))

;; Generating RTL for gimple basic block 33

;; <L50> [0.00%]:

(code_label 337 336 338 16 (nil) [0 uses])

(note 338 337 0 NOTE_INSN_BASIC_BLOCK)

;; dt_parm.4 ={v} {CLOBBER};

(nil)

;; *error_137(D) = 0;

(insn 339 338 340 (set (reg/f:DI 226)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -688 [0xfffffffffffffd50])) [12 error+0 S8 A64])) "../src/io.f":269 -1
     (nil))

(insn 340 339 0 (set (mem:SI (reg/f:DI 226) [13 *error_137(D)+0 S4 A32])
        (const_int 0 [0])) "../src/io.f":269 -1
     (nil))

;; Generating RTL for gimple basic block 34

;; 

(code_label 341 340 342 18 (nil) [0 uses])

(note 342 341 0 NOTE_INSN_BASIC_BLOCK)

;; rec ={v} {CLOBBER};

(nil)

;; Generating RTL for gimple basic block 35

;; <L55> [0.00%]:

(code_label 343 342 344 19 (nil) [0 uses])

(note 344 343 0 NOTE_INSN_BASIC_BLOCK)
Purged edges from bb 38


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Edge 9->12 redirected to 13
Edge 10->12 redirected to 13
Merging block 12 into block 11...
Merged blocks 11 and 12.
Merged 11 and 12 without moving.
Forwarding edge 32->33 to 35 failed.
Redirecting jump 335 from 36 to 38.
Merging block 36 into block 35...
Merged blocks 35 and 36.
Merged 35 and 36 without moving.
Merging block 37 into block 35...
Merged blocks 35 and 37.
Merged 35 and 37 without moving.


try_optimize_cfg iteration 2

Forwarding edge 32->33 to 35 failed.
fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 8 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 8 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 8 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -664 [0xfffffffffffffd68])) [10 input+0 S8 A64])
        (reg:DI 5 di [ input ])) "../src/io.f":208 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -672 [0xfffffffffffffd60])) [6 a+0 S8 A64])
        (reg:DI 4 si [ a ])) "../src/io.f":208 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -680 [0xfffffffffffffd58])) [11 n+0 S8 A64])
        (reg:DI 1 dx [ n ])) "../src/io.f":208 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -688 [0xfffffffffffffd50])) [12 error+0 S8 A64])
        (reg:DI 2 cx [ error ])) "../src/io.f":208 -1
     (nil))
(insn 6 5 7 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -692 [0xfffffffffffffd4c])) [1 _input+0 S4 A32])
        (reg:SI 37 r8 [ _input ])) "../src/io.f":208 -1
     (nil))
(note 7 6 10 2 NOTE_INSN_FUNCTION_BEG)
(insn 10 7 11 2 (set (reg:SI 161)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -692 [0xfffffffffffffd4c])) [1 _input+0 S4 A32])) "../src/io.f":278 -1
     (nil))
(insn 11 10 12 2 (set (reg:DI 87 [ _1 ])
        (sign_extend:DI (reg:SI 161))) "../src/io.f":278 -1
     (nil))
(insn 12 11 13 2 (set (subreg:DI (reg:TI 88 [ _2 ]) 0)
        (reg:DI 87 [ _1 ])) "../src/io.f":278 -1
     (nil))
(insn 13 12 14 2 (set (subreg:DI (reg:TI 88 [ _2 ]) 8)
        (const_int 0 [0])) "../src/io.f":278 -1
     (nil))
(insn 14 13 15 2 (parallel [
            (set (reg:TI 146 [ _74 ])
                (ashift:TI (reg:TI 88 [ _2 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":278 -1
     (nil))
(insn 15 14 16 2 (set (reg:SI 162)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -692 [0xfffffffffffffd4c])) [1 _input+0 S4 A32])) "../src/io.f":278 -1
     (nil))
(insn 16 15 17 2 (set (reg:DI 147 [ _75 ])
        (sign_extend:DI (reg:SI 162))) "../src/io.f":278 -1
     (nil))
(insn 17 16 18 2 (set (reg:SI 143 [ M.0_61 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -692 [0xfffffffffffffd4c])) [1 _input+0 S4 A32])) "../src/io.f":225 -1
     (nil))
(insn 18 17 19 2 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 143 [ M.0_61 ])
            (const_int 128 [0x80]))) "../src/io.f":225 -1
     (nil))
(jump_insn 19 18 20 2 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 22)
            (pc))) "../src/io.f":225 -1
     (nil)
 -> 22)
;;  succ:       4 (FALLTHRU)
;;              5

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 (FALLTHRU)
(note 20 19 21 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 22 4 (set (reg:SI 143 [ M.0_61 ])
        (const_int 128 [0x80])) "../src/io.f":225 -1
     (nil))
;;  succ:       5 (FALLTHRU)

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       2
;;              4 (FALLTHRU)
(code_label 22 21 23 5 2 (nil) [1 uses])
(note 23 22 24 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 28 5 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [1 ilen+0 S4 A32])
        (reg:SI 143 [ M.0_61 ])) "../src/io.f":225 -1
     (nil))
(insn 28 24 29 5 (set (reg:SI 166)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [1 ilen+0 S4 A32])) "../src/io.f":226 -1
     (nil))
(insn 29 28 30 5 (parallel [
            (set (reg:SI 165)
                (plus:SI (reg:SI 166)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":226 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [1 ilen+0 S4 A32])
            (const_int 2 [0x2]))
        (nil)))
(insn 30 29 32 5 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 ilenp+0 S4 A32])
        (reg:SI 165)) "../src/io.f":226 -1
     (nil))
(insn 32 30 31 5 (set (reg:SI 167)
        (const_int 0 [0])) "../src/io.f":229 -1
     (nil))
(insn 31 32 33 5 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [1 ilen+0 S4 A32])
            (const_int 0 [0]))) "../src/io.f":229 -1
     (nil))
(insn 33 31 34 5 (set (reg:SI 89 [ _3 ])
        (if_then_else:SI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [1 ilen+0 S4 A32])
            (reg:SI 167))) "../src/io.f":229 -1
     (nil))
(insn 34 33 35 5 (parallel [
            (set (reg:SI 90 [ _4 ])
                (plus:SI (reg:SI 89 [ _3 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":229 -1
     (nil))
(insn 35 34 37 5 (set (reg:DI 91 [ _5 ])
        (sign_extend:DI (reg:SI 90 [ _4 ]))) "../src/io.f":229 -1
     (nil))
(insn 37 35 36 5 (set (reg:DI 168)
        (const_int 1 [0x1])) "../src/io.f":229 -1
     (nil))
(insn 36 37 38 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 91 [ _5 ])
            (const_int 0 [0]))) "../src/io.f":229 -1
     (nil))
(insn 38 36 39 5 (set (reg:DI 92 [ _6 ])
        (if_then_else:DI (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (reg:DI 91 [ _5 ])
            (reg:DI 168))) "../src/io.f":229 -1
     (nil))
(insn 39 38 40 5 (set (reg:DI 5 di)
        (reg:DI 92 [ _6 ])) "../src/io.f":229 -1
     (nil))
(call_insn 40 39 41 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x143849c00 __builtin_malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) "../src/io.f":229 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 41 40 42 5 (set (reg/f:DI 169)
        (reg:DI 0 ax)) "../src/io.f":229 -1
     (expr_list:REG_NOALIAS (reg/f:DI 169)
        (nil)))
(insn 42 41 43 5 (set (reg/f:DI 148 [ _83 ])
        (reg/f:DI 169)) "../src/io.f":229 -1
     (nil))
(insn 43 42 45 5 (set (reg/f:DI 149 [ pstr.1_84 ])
        (reg/f:DI 148 [ _83 ])) "../src/io.f":229 -1
     (nil))
(insn 45 43 44 5 (set (reg:SI 170)
        (const_int 0 [0])) "../src/io.f":229 -1
     (nil))
(insn 44 45 46 5 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [1 ilen+0 S4 A32])
            (const_int 0 [0]))) "../src/io.f":229 -1
     (nil))
(insn 46 44 48 5 (set (reg:SI 93 [ _7 ])
        (if_then_else:SI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [1 ilen+0 S4 A32])
            (reg:SI 170))) "../src/io.f":229 -1
     (nil))
(insn 48 46 47 5 (set (reg:SI 171)
        (const_int 0 [0])) "../src/io.f":229 -1
     (nil))
(insn 47 48 49 5 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [1 ilen+0 S4 A32])
            (const_int 0 [0]))) "../src/io.f":229 -1
     (nil))
(insn 49 47 50 5 (set (reg:SI 94 [ _8 ])
        (if_then_else:SI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [1 ilen+0 S4 A32])
            (reg:SI 171))) "../src/io.f":229 -1
     (nil))
(insn 50 49 51 5 (parallel [
            (set (reg:SI 95 [ _9 ])
                (plus:SI (reg:SI 94 [ _8 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":229 -1
     (nil))
(insn 51 50 52 5 (set (reg:DI 172)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -664 [0xfffffffffffffd68])) [10 input+0 S8 A64])) "../src/io.f":229 -1
     (nil))
(insn 52 51 53 5 (set (reg:DI 38 r9)
        (symbol_ref/f:DI ("*lC0") [flags 0x2]  <var_decl 0x143b721b0 *lC0>)) "../src/io.f":229 -1
     (nil))
(insn 53 52 54 5 (set (reg:SI 37 r8)
        (const_int 2 [0x2])) "../src/io.f":229 -1
     (nil))
(insn 54 53 55 5 (set (reg:DI 2 cx)
        (reg:DI 172)) "../src/io.f":229 -1
     (nil))
(insn 55 54 56 5 (set (reg:SI 1 dx)
        (reg:SI 93 [ _7 ])) "../src/io.f":229 -1
     (nil))
(insn 56 55 57 5 (set (reg:DI 4 si)
        (reg/f:DI 149 [ pstr.1_84 ])) "../src/io.f":229 -1
     (nil))
(insn 57 56 58 5 (set (reg:SI 5 di)
        (reg:SI 95 [ _9 ])) "../src/io.f":229 -1
     (nil))
(call_insn 58 57 60 5 (call (mem:QI (symbol_ref:DI ("_gfortran_concat_string") [flags 0x41]  <function_decl 0x1439c4800 _gfortran_concat_string>) [0 _gfortran_concat_string S1 A8])
        (const_int 0 [0])) "../src/io.f":229 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 60 58 59 5 (set (reg:SI 173)
        (const_int 0 [0])) "../src/io.f":229 -1
     (nil))
(insn 59 60 61 5 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [1 ilen+0 S4 A32])
            (const_int 0 [0]))) "../src/io.f":229 -1
     (nil))
(insn 61 59 62 5 (set (reg:SI 96 [ _10 ])
        (if_then_else:SI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [1 ilen+0 S4 A32])
            (reg:SI 173))) "../src/io.f":229 -1
     (nil))
(insn 62 61 64 5 (parallel [
            (set (reg:SI 150 [ _87 ])
                (plus:SI (reg:SI 96 [ _10 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":229 -1
     (nil))
(insn 64 62 63 5 (set (reg:SI 174)
        (const_int 0 [0])) "../src/io.f":229 -1
     (nil))
(insn 63 64 65 5 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [1 ilen+0 S4 A32])
            (const_int 0 [0]))) "../src/io.f":229 -1
     (nil))
(insn 65 63 66 5 (set (reg:SI 97 [ _11 ])
        (if_then_else:SI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [1 ilen+0 S4 A32])
            (reg:SI 174))) "../src/io.f":229 -1
     (nil))
(insn 66 65 68 5 (parallel [
            (set (reg:SI 151 [ _88 ])
                (plus:SI (reg:SI 97 [ _11 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":229 -1
     (nil))
(insn 68 66 67 5 (set (reg:SI 175)
        (const_int 0 [0])) "../src/io.f":229 -1
     (nil))
(insn 67 68 69 5 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [1 ilenp+0 S4 A32])
            (const_int 0 [0]))) "../src/io.f":229 -1
     (nil))
(insn 69 67 70 5 (set (reg:SI 152 [ _89 ])
        (if_then_else:SI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [1 ilenp+0 S4 A32])
            (reg:SI 175))) "../src/io.f":229 -1
     (nil))
(insn 70 69 71 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 152 [ _89 ])
            (const_int 0 [0]))) "../src/io.f":229 -1
     (nil))
(jump_insn 71 70 72 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 97)
            (pc))) "../src/io.f":229 -1
     (nil)
 -> 97)
;;  succ:       6 (FALLTHRU)
;;              8

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       5 (FALLTHRU)
(note 72 71 73 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 73 72 74 6 (set (reg:DI 98 [ _12 ])
        (sign_extend:DI (reg:SI 152 [ _89 ]))) "../src/io.f":229 -1
     (nil))
(insn 74 73 75 6 (set (reg:DI 99 [ _13 ])
        (sign_extend:DI (reg:SI 151 [ _88 ]))) "../src/io.f":229 -1
     (nil))
(insn 75 74 76 6 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 98 [ _12 ])
            (reg:DI 99 [ _13 ]))) "../src/io.f":229 -1
     (nil))
(insn 76 75 77 6 (set (reg:DI 100 [ _14 ])
        (if_then_else:DI (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (reg:DI 98 [ _12 ])
            (reg:DI 99 [ _13 ]))) "../src/io.f":229 -1
     (nil))
(insn 77 76 78 6 (parallel [
            (set (reg:DI 176)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -176 [0xffffffffffffff50])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":229 -1
     (nil))
(insn 78 77 79 6 (set (reg:DI 1 dx)
        (reg:DI 100 [ _14 ])) "../src/io.f":229 -1
     (nil))
(insn 79 78 80 6 (set (reg:DI 4 si)
        (reg/f:DI 149 [ pstr.1_84 ])) "../src/io.f":229 -1
     (nil))
(insn 80 79 81 6 (set (reg:DI 5 di)
        (reg:DI 176)) "../src/io.f":229 -1
     (nil))
(call_insn 81 80 82 6 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memmove") [flags 0x41]  <function_decl 0x14386f400 __builtin_memmove>) [0 __builtin_memmove S1 A8])
            (const_int 0 [0]))) "../src/io.f":229 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 82 81 83 6 (set (reg:DI 101 [ _15 ])
        (sign_extend:DI (reg:SI 151 [ _88 ]))) "../src/io.f":229 -1
     (nil))
(insn 83 82 84 6 (set (reg:DI 102 [ _16 ])
        (sign_extend:DI (reg:SI 152 [ _89 ]))) "../src/io.f":229 -1
     (nil))
(insn 84 83 85 6 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 101 [ _15 ])
            (reg:DI 102 [ _16 ]))) "../src/io.f":229 -1
     (nil))
(jump_insn 85 84 86 6 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 97)
            (pc))) "../src/io.f":229 -1
     (nil)
 -> 97)
;;  succ:       7 (FALLTHRU)
;;              8

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       6 (FALLTHRU)
(note 86 85 87 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 87 86 88 7 (set (reg:DI 103 [ _17 ])
        (sign_extend:DI (reg:SI 152 [ _89 ]))) "../src/io.f":229 -1
     (nil))
(insn 88 87 89 7 (set (reg:DI 104 [ _18 ])
        (sign_extend:DI (reg:SI 151 [ _88 ]))) "../src/io.f":229 -1
     (nil))
(insn 89 88 90 7 (parallel [
            (set (reg:DI 105 [ _19 ])
                (minus:DI (reg:DI 103 [ _17 ])
                    (reg:DI 104 [ _18 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":229 -1
     (nil))
(insn 90 89 91 7 (set (reg:DI 106 [ _20 ])
        (sign_extend:DI (reg:SI 151 [ _88 ]))) "../src/io.f":229 -1
     (nil))
(insn 91 90 92 7 (parallel [
            (set (reg:DI 177)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -176 [0xffffffffffffff50])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":229 -1
     (nil))
(insn 92 91 93 7 (parallel [
            (set (reg/f:DI 107 [ _21 ])
                (plus:DI (reg:DI 177)
                    (reg:DI 106 [ _20 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":229 -1
     (nil))
(insn 93 92 94 7 (set (reg:DI 1 dx)
        (reg:DI 105 [ _19 ])) "../src/io.f":229 -1
     (nil))
(insn 94 93 95 7 (set (reg:SI 4 si)
        (const_int 32 [0x20])) "../src/io.f":229 -1
     (nil))
(insn 95 94 96 7 (set (reg:DI 5 di)
        (reg/f:DI 107 [ _21 ])) "../src/io.f":229 -1
     (nil))
(call_insn 96 95 97 7 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memset") [flags 0x41]  <function_decl 0x14386f600 __builtin_memset>) [0 __builtin_memset S1 A8])
            (const_int 0 [0]))) "../src/io.f":229 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       8 (FALLTHRU)

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL)
;;  pred:       5
;;              7 (FALLTHRU)
;;              6
(code_label 97 96 98 8 3 (nil) [2 uses])
(note 98 97 99 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 99 98 100 8 (set (reg:DI 5 di)
        (reg/f:DI 149 [ pstr.1_84 ])) "../src/io.f":229 -1
     (nil))
(call_insn 100 99 101 8 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x143849b00 __builtin_free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) "../src/io.f":229 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 101 100 102 8 (parallel [
            (set (reg:DI 178)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -176 [0xffffffffffffff50])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":232 -1
     (nil))
(insn 102 101 103 8 (set (reg:SI 37 r8)
        (const_int 0 [0])) "../src/io.f":232 -1
     (nil))
(insn 103 102 104 8 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*lC1") [flags 0x2]  <var_decl 0x143b72240 *lC1>)) "../src/io.f":232 -1
     (nil))
(insn 104 103 105 8 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) "../src/io.f":232 -1
     (nil))
(insn 105 104 106 8 (set (reg:DI 4 si)
        (reg:DI 178)) "../src/io.f":232 -1
     (nil))
(insn 106 105 107 8 (set (reg:SI 5 di)
        (const_int 130 [0x82])) "../src/io.f":232 -1
     (nil))
(call_insn/i 107 106 108 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_gfortran_string_index") [flags 0x41]  <function_decl 0x1439c4a00 _gfortran_string_index>) [0 _gfortran_string_index S1 A8])
            (const_int 0 [0]))) "../src/io.f":232 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (nil)))))))
(insn 108 107 109 8 (set (reg:SI 179)
        (reg:SI 0 ax)) "../src/io.f":232 -1
     (nil))
(insn 109 108 110 8 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])
        (reg:SI 179)) "../src/io.f":232 -1
     (nil))
(insn 110 109 111 8 (set (reg:CCNO 17 flags)
        (compare:CCNO (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])
            (const_int 0 [0]))) "../src/io.f":233 -1
     (nil))
(jump_insn 111 110 112 8 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 148)
            (pc))) "../src/io.f":233 -1
     (nil)
 -> 148)
;;  succ:       9 (FALLTHRU)
;;              13

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
(note 112 111 113 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 113 112 114 9 (set (reg:SI 180)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])) "../src/io.f":233 -1
     (nil))
(insn 114 113 116 9 (parallel [
            (set (reg:SI 153 [ _94 ])
                (plus:SI (reg:SI 180)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":233 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 116 114 115 9 (set (reg:SI 181)
        (const_int 0 [0])) "../src/io.f":233 -1
     (nil))
(insn 115 116 117 9 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 153 [ _94 ])
            (const_int 0 [0]))) "../src/io.f":233 -1
     (nil))
(insn 117 115 119 9 (set (reg:SI 154 [ _95 ])
        (if_then_else:SI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:SI 153 [ _94 ])
            (reg:SI 181))) "../src/io.f":233 -1
     (nil))
(insn 119 117 118 9 (set (reg:SI 182)
        (const_int 0 [0])) "../src/io.f":233 -1
     (nil))
(insn 118 119 120 9 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 153 [ _94 ])
            (const_int 0 [0]))) "../src/io.f":233 -1
     (nil))
(insn 120 118 122 9 (set (reg:SI 155 [ _96 ])
        (if_then_else:SI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:SI 153 [ _94 ])
            (reg:SI 182))) "../src/io.f":233 -1
     (nil))
(insn 122 120 121 9 (set (reg:SI 183)
        (const_int 0 [0])) "../src/io.f":233 -1
     (nil))
(insn 121 122 123 9 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [1 ilen+0 S4 A32])
            (const_int 0 [0]))) "../src/io.f":233 -1
     (nil))
(insn 123 121 124 9 (set (reg:SI 156 [ _97 ])
        (if_then_else:SI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [1 ilen+0 S4 A32])
            (reg:SI 183))) "../src/io.f":233 -1
     (nil))
(insn 124 123 125 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 156 [ _97 ])
            (const_int 0 [0]))) "../src/io.f":233 -1
     (nil))
(jump_insn 125 124 126 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 148)
            (pc))) "../src/io.f":233 617 {*jcc_1}
     (nil)
 -> 148)
;;  succ:       10 (FALLTHRU)
;;              13

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       9 (FALLTHRU)
(note 126 125 127 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 127 126 128 10 (set (reg:DI 108 [ _22 ])
        (sign_extend:DI (reg:SI 156 [ _97 ]))) "../src/io.f":233 -1
     (nil))
(insn 128 127 129 10 (set (reg:DI 109 [ _23 ])
        (sign_extend:DI (reg:SI 155 [ _96 ]))) "../src/io.f":233 -1
     (nil))
(insn 129 128 130 10 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 108 [ _22 ])
            (reg:DI 109 [ _23 ]))) "../src/io.f":233 -1
     (nil))
(insn 130 129 131 10 (set (reg:DI 110 [ _24 ])
        (if_then_else:DI (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (reg:DI 108 [ _22 ])
            (reg:DI 109 [ _23 ]))) "../src/io.f":233 -1
     (nil))
(insn 131 130 132 10 (set (reg:DI 111 [ _25 ])
        (sign_extend:DI (reg:SI 155 [ _96 ]))) "../src/io.f":233 -1
     (nil))
(insn 132 131 133 10 (set (reg:DI 112 [ _26 ])
        (sign_extend:DI (reg:SI 156 [ _97 ]))) "../src/io.f":233 -1
     (nil))
(insn 133 132 134 10 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 111 [ _25 ])
            (reg:DI 112 [ _26 ]))) "../src/io.f":233 -1
     (nil))
(jump_insn 134 133 135 10 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 148)
            (pc))) "../src/io.f":233 617 {*jcc_1}
     (nil)
 -> 148)
;;  succ:       11 (FALLTHRU)
;;              13

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 13, flags: (NEW, REACHABLE, RTL)
;;  pred:       10 (FALLTHRU)
(note 135 134 136 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 136 135 137 11 (set (reg:DI 113 [ _27 ])
        (sign_extend:DI (reg:SI 156 [ _97 ]))) "../src/io.f":233 -1
     (nil))
(insn 137 136 138 11 (set (reg:DI 114 [ _28 ])
        (sign_extend:DI (reg:SI 155 [ _96 ]))) "../src/io.f":233 -1
     (nil))
(insn 138 137 139 11 (parallel [
            (set (reg:DI 115 [ _29 ])
                (minus:DI (reg:DI 113 [ _27 ])
                    (reg:DI 114 [ _28 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":233 -1
     (nil))
(insn 139 138 140 11 (set (reg:DI 116 [ _30 ])
        (sign_extend:DI (reg:SI 155 [ _96 ]))) "../src/io.f":233 -1
     (nil))
(insn 140 139 141 11 (parallel [
            (set (reg:DI 184)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -176 [0xffffffffffffff50])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":233 -1
     (nil))
(insn 141 140 142 11 (parallel [
            (set (reg/f:DI 117 [ _31 ])
                (plus:DI (reg:DI 184)
                    (reg:DI 116 [ _30 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":233 -1
     (nil))
(insn 142 141 143 11 (set (reg:DI 1 dx)
        (reg:DI 115 [ _29 ])) "../src/io.f":233 -1
     (nil))
(insn 143 142 144 11 (set (reg:SI 4 si)
        (const_int 32 [0x20])) "../src/io.f":233 -1
     (nil))
(insn 144 143 145 11 (set (reg:DI 5 di)
        (reg/f:DI 117 [ _31 ])) "../src/io.f":233 -1
     (nil))
(call_insn 145 144 148 11 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memset") [flags 0x41]  <function_decl 0x14386f600 __builtin_memset>) [0 __builtin_memset S1 A8])
            (const_int 0 [0]))) "../src/io.f":233 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       13 (FALLTHRU)

;; basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 14, flags: (NEW, REACHABLE, RTL)
;;  pred:       8
;;              11 (FALLTHRU)
;;              9
;;              10
(code_label 148 145 149 13 4 (nil) [3 uses])
(note 149 148 150 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 150 149 151 13 (set (reg/f:DI 185)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -680 [0xfffffffffffffd58])) [11 n+0 S8 A64])) "../src/io.f":235 -1
     (nil))
(insn 151 150 152 13 (set (reg:SI 186)
        (mem:SI (reg/f:DI 185) [1 *n_99(D)+0 S4 A32])) "../src/io.f":235 -1
     (nil))
(insn 152 151 153 13 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [1 ninp+0 S4 A32])
        (reg:SI 186)) "../src/io.f":235 -1
     (nil))
(insn 153 152 154 13 (set (reg/f:DI 187)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -680 [0xfffffffffffffd58])) [11 n+0 S8 A64])) "../src/io.f":238 -1
     (nil))
(insn 154 153 155 13 (set (mem:SI (reg/f:DI 187) [1 *n_99(D)+0 S4 A32])
        (const_int 0 [0])) "../src/io.f":238 -1
     (nil))
(insn 155 154 156 13 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])
        (const_int 1 [0x1])) "../src/io.f":239 -1
     (nil))
(insn 156 155 157 13 (set (reg:SI 157 [ _103 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [1 ilen+0 S4 A32])) "../src/io.f":240 -1
     (nil))
(insn 157 156 252 13 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 ipass+0 S4 A32])
        (const_int 1 [0x1])) "../src/io.f":240 -1
     (nil))
;;  succ:       14 (FALLTHRU)

;; basic block 14, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 13, next block 15, flags: (NEW, REACHABLE, RTL)
;;  pred:       13 (FALLTHRU)
;;              23 (DFS_BACK)
(code_label 252 157 158 14 11 (nil) [1 uses])
(note 158 252 159 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 159 158 160 14 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [1 ipass+0 S4 A32])
            (reg:SI 157 [ _103 ]))) "../src/io.f":240 -1
     (nil))
(insn 160 159 161 14 (set (reg:QI 158 [ _105 ])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "../src/io.f":240 -1
     (nil))
(insn 161 160 162 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 158 [ _105 ])
            (const_int 0 [0]))) "../src/io.f":240 -1
     (nil))
(jump_insn 162 161 163 14 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 255)
            (pc))) "../src/io.f":240 -1
     (nil)
 -> 255)
;;  succ:       24
;;              15 (FALLTHRU)

;; basic block 15, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 14, next block 16, flags: (NEW, REACHABLE, RTL)
;;  pred:       14 (FALLTHRU)
(note 163 162 164 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 164 163 165 15 (parallel [
            (set (reg:DI 188)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -176 [0xffffffffffffff50])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":242 -1
     (nil))
(insn 165 164 166 15 (set (reg:SI 190)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])) "../src/io.f":242 -1
     (nil))
(insn 166 165 167 15 (parallel [
            (set (reg:SI 189)
                (plus:SI (reg:SI 190)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":242 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 167 166 168 15 (set (reg:DI 191)
        (sign_extend:DI (reg:SI 189))) "../src/io.f":242 -1
     (nil))
(insn 168 167 169 15 (parallel [
            (set (reg/f:DI 118 [ _32 ])
                (plus:DI (reg:DI 188)
                    (reg:DI 191)))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":242 -1
     (nil))
(insn 169 168 170 15 (set (reg:SI 192)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 ilenp+0 S4 A32])) "../src/io.f":242 -1
     (nil))
(insn 170 169 171 15 (parallel [
            (set (reg:SI 119 [ _33 ])
                (minus:SI (reg:SI 192)
                    (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":242 -1
     (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [1 ilenp+0 S4 A32])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32]))
        (nil)))
(insn 171 170 173 15 (parallel [
            (set (reg:SI 120 [ _34 ])
                (plus:SI (reg:SI 119 [ _33 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":242 -1
     (nil))
(insn 173 171 172 15 (set (reg:SI 193)
        (const_int 0 [0])) "../src/io.f":242 -1
     (nil))
(insn 172 173 174 15 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 120 [ _34 ])
            (const_int 0 [0]))) "../src/io.f":242 -1
     (nil))
(insn 174 172 175 15 (set (reg:SI 121 [ _35 ])
        (if_then_else:SI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:SI 120 [ _34 ])
            (reg:SI 193))) "../src/io.f":242 -1
     (nil))
(insn 175 174 176 15 (set (reg:SI 37 r8)
        (const_int 0 [0])) "../src/io.f":242 -1
     (nil))
(insn 176 175 177 15 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*lC2") [flags 0x2]  <var_decl 0x143b722d0 *lC2>)) "../src/io.f":242 -1
     (nil))
(insn 177 176 178 15 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) "../src/io.f":242 -1
     (nil))
(insn 178 177 179 15 (set (reg:DI 4 si)
        (reg/f:DI 118 [ _32 ])) "../src/io.f":242 -1
     (nil))
(insn 179 178 180 15 (set (reg:SI 5 di)
        (reg:SI 121 [ _35 ])) "../src/io.f":242 -1
     (nil))
(call_insn/i 180 179 181 15 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_gfortran_string_index") [flags 0x41]  <function_decl 0x1439c4a00 _gfortran_string_index>) [0 _gfortran_string_index S1 A8])
            (const_int 0 [0]))) "../src/io.f":242 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (nil)))))))
(insn 181 180 182 15 (set (reg:SI 122 [ _36 ])
        (reg:SI 0 ax)) "../src/io.f":242 -1
     (nil))
(insn 182 181 183 15 (set (reg:SI 194)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])) "../src/io.f":242 -1
     (nil))
(insn 183 182 184 15 (parallel [
            (set (reg:SI 123 [ _37 ])
                (plus:SI (reg:SI 122 [ _36 ])
                    (reg:SI 194)))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":242 -1
     (expr_list:REG_EQUAL (plus:SI (reg:SI 122 [ _36 ])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32]))
        (nil)))
(insn 184 183 185 15 (parallel [
            (set (reg:SI 195)
                (plus:SI (reg:SI 123 [ _37 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":242 -1
     (nil))
(insn 185 184 186 15 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [1 kspace+0 S4 A32])
        (reg:SI 195)) "../src/io.f":242 -1
     (nil))
(insn 186 185 187 15 (parallel [
            (set (reg:DI 196)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -176 [0xffffffffffffff50])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":243 -1
     (nil))
(insn 187 186 188 15 (set (reg:SI 198)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])) "../src/io.f":243 -1
     (nil))
(insn 188 187 189 15 (parallel [
            (set (reg:SI 197)
                (plus:SI (reg:SI 198)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":243 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 189 188 190 15 (set (reg:DI 199)
        (sign_extend:DI (reg:SI 197))) "../src/io.f":243 -1
     (nil))
(insn 190 189 191 15 (parallel [
            (set (reg/f:DI 124 [ _38 ])
                (plus:DI (reg:DI 196)
                    (reg:DI 199)))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":243 -1
     (nil))
(insn 191 190 192 15 (set (reg:SI 200)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 ilenp+0 S4 A32])) "../src/io.f":243 -1
     (nil))
(insn 192 191 193 15 (parallel [
            (set (reg:SI 125 [ _39 ])
                (minus:SI (reg:SI 200)
                    (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":243 -1
     (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [1 ilenp+0 S4 A32])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32]))
        (nil)))
(insn 193 192 195 15 (parallel [
            (set (reg:SI 126 [ _40 ])
                (plus:SI (reg:SI 125 [ _39 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":243 -1
     (nil))
(insn 195 193 194 15 (set (reg:SI 201)
        (const_int 0 [0])) "../src/io.f":243 -1
     (nil))
(insn 194 195 196 15 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 126 [ _40 ])
            (const_int 0 [0]))) "../src/io.f":243 -1
     (nil))
(insn 196 194 197 15 (set (reg:SI 127 [ _41 ])
        (if_then_else:SI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:SI 126 [ _40 ])
            (reg:SI 201))) "../src/io.f":243 -1
     (nil))
(insn 197 196 198 15 (set (reg:SI 37 r8)
        (const_int 0 [0])) "../src/io.f":243 -1
     (nil))
(insn 198 197 199 15 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*lC3") [flags 0x2]  <var_decl 0x143b72360 *lC3>)) "../src/io.f":243 -1
     (nil))
(insn 199 198 200 15 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) "../src/io.f":243 -1
     (nil))
(insn 200 199 201 15 (set (reg:DI 4 si)
        (reg/f:DI 124 [ _38 ])) "../src/io.f":243 -1
     (nil))
(insn 201 200 202 15 (set (reg:SI 5 di)
        (reg:SI 127 [ _41 ])) "../src/io.f":243 -1
     (nil))
(call_insn/i 202 201 203 15 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_gfortran_string_index") [flags 0x41]  <function_decl 0x1439c4a00 _gfortran_string_index>) [0 _gfortran_string_index S1 A8])
            (const_int 0 [0]))) "../src/io.f":243 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (nil)))))))
(insn 203 202 204 15 (set (reg:SI 128 [ _42 ])
        (reg:SI 0 ax)) "../src/io.f":243 -1
     (nil))
(insn 204 203 205 15 (set (reg:SI 202)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])) "../src/io.f":243 -1
     (nil))
(insn 205 204 206 15 (parallel [
            (set (reg:SI 129 [ _43 ])
                (plus:SI (reg:SI 128 [ _42 ])
                    (reg:SI 202)))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":243 -1
     (expr_list:REG_EQUAL (plus:SI (reg:SI 128 [ _42 ])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32]))
        (nil)))
(insn 206 205 207 15 (parallel [
            (set (reg:SI 203)
                (plus:SI (reg:SI 129 [ _43 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":243 -1
     (nil))
(insn 207 206 208 15 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [1 kcomma+0 S4 A32])
        (reg:SI 203)) "../src/io.f":243 -1
     (nil))
(insn 208 207 209 15 (set (reg:SI 204)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])) "../src/io.f":245 -1
     (nil))
(insn 209 208 210 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 204)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -28 [0xffffffffffffffe4])) [1 kspace+0 S4 A32]))) "../src/io.f":245 -1
     (nil))
(jump_insn 210 209 211 15 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 215)
            (pc))) "../src/io.f":245 -1
     (nil)
 -> 215)
;;  succ:       16 (FALLTHRU)
;;              17

;; basic block 16, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 15, next block 17, flags: (NEW, REACHABLE, RTL)
;;  pred:       15 (FALLTHRU)
(note 211 210 212 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 212 211 213 16 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":247 -1
     (nil))
(jump_insn 213 212 214 16 (set (pc)
        (label_ref 245)) "../src/io.f":248 -1
     (nil)
 -> 245)
;;  succ:       22

(barrier 214 213 215)
;; basic block 17, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 16, next block 18, flags: (NEW, REACHABLE, RTL)
;;  pred:       15
(code_label 215 214 216 17 7 (nil) [1 uses])
(note 216 215 217 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 217 216 218 17 (set (reg:SI 205)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])) "../src/io.f":251 -1
     (nil))
(insn 218 217 219 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 205)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])) [1 kcomma+0 S4 A32]))) "../src/io.f":251 -1
     (nil))
(jump_insn 219 218 220 17 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 229)
            (pc))) "../src/io.f":251 -1
     (nil)
 -> 229)
;;  succ:       18 (FALLTHRU)
;;              19

;; basic block 18, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 17, next block 19, flags: (NEW, REACHABLE, RTL)
;;  pred:       17 (FALLTHRU)
(note 220 219 221 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 221 220 222 18 (set (reg/f:DI 206)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -680 [0xfffffffffffffd58])) [11 n+0 S8 A64])) "../src/io.f":253 -1
     (nil))
(insn 222 221 223 18 (set (reg:SI 130 [ _44 ])
        (mem:SI (reg/f:DI 206) [1 *n_99(D)+0 S4 A32])) "../src/io.f":253 -1
     (nil))
(insn 223 222 224 18 (parallel [
            (set (reg:SI 131 [ _45 ])
                (plus:SI (reg:SI 130 [ _44 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":253 -1
     (nil))
(insn 224 223 225 18 (set (reg/f:DI 207)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -680 [0xfffffffffffffd58])) [11 n+0 S8 A64])) "../src/io.f":253 -1
     (nil))
(insn 225 224 226 18 (set (mem:SI (reg/f:DI 207) [1 *n_99(D)+0 S4 A32])
        (reg:SI 131 [ _45 ])) "../src/io.f":253 -1
     (nil))
(insn 226 225 227 18 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":254 -1
     (nil))
(jump_insn 227 226 228 18 (set (pc)
        (label_ref 245)) "../src/io.f":255 -1
     (nil)
 -> 245)
;;  succ:       22

(barrier 228 227 229)
;; basic block 19, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 18, next block 20, flags: (NEW, REACHABLE, RTL)
;;  pred:       17
(code_label 229 228 230 19 9 (nil) [1 uses])
(note 230 229 231 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 231 230 232 19 (set (reg/f:DI 208)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -680 [0xfffffffffffffd58])) [11 n+0 S8 A64])) "../src/io.f":260 -1
     (nil))
(insn 232 231 233 19 (set (reg:SI 132 [ _46 ])
        (mem:SI (reg/f:DI 208) [1 *n_99(D)+0 S4 A32])) "../src/io.f":260 -1
     (nil))
(insn 233 232 234 19 (parallel [
            (set (reg:SI 133 [ _47 ])
                (plus:SI (reg:SI 132 [ _46 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":260 -1
     (nil))
(insn 234 233 235 19 (set (reg/f:DI 209)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -680 [0xfffffffffffffd58])) [11 n+0 S8 A64])) "../src/io.f":260 -1
     (nil))
(insn 235 234 236 19 (set (mem:SI (reg/f:DI 209) [1 *n_99(D)+0 S4 A32])
        (reg:SI 133 [ _47 ])) "../src/io.f":260 -1
     (nil))
(insn 236 235 237 19 (set (reg:SI 144 [ M.2_62 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [1 kspace+0 S4 A32])) "../src/io.f":261 -1
     (nil))
(insn 237 236 238 19 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])) [1 kcomma+0 S4 A32])
            (reg:SI 144 [ M.2_62 ]))) "../src/io.f":261 -1
     (nil))
(jump_insn 238 237 239 19 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 241)
            (pc))) "../src/io.f":261 -1
     (nil)
 -> 241)
;;  succ:       20 (FALLTHRU)
;;              21

;; basic block 20, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 19, next block 21, flags: (NEW, REACHABLE, RTL)
;;  pred:       19 (FALLTHRU)
(note 239 238 240 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 240 239 241 20 (set (reg:SI 144 [ M.2_62 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [1 kcomma+0 S4 A32])) "../src/io.f":261 -1
     (nil))
;;  succ:       21 (FALLTHRU)

;; basic block 21, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 20, next block 22, flags: (NEW, REACHABLE, RTL)
;;  pred:       19
;;              20 (FALLTHRU)
(code_label 241 240 242 21 10 (nil) [1 uses])
(note 242 241 243 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 243 242 244 21 (parallel [
            (set (reg:SI 210)
                (plus:SI (reg:SI 144 [ M.2_62 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":261 -1
     (nil))
(insn 244 243 245 21 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])
        (reg:SI 210)) "../src/io.f":261 -1
     (nil))
;;  succ:       22 (FALLTHRU)

;; basic block 22, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 21, next block 23, flags: (NEW, REACHABLE, RTL)
;;  pred:       16
;;              18
;;              21 (FALLTHRU)
(code_label 245 244 246 22 8 (nil) [2 uses])
(note 246 245 247 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 247 246 248 22 (set (reg:SI 211)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])) "../src/io.f":263 -1
     (nil))
(insn 248 247 249 22 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 211)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [1 ilen+0 S4 A32]))) "../src/io.f":263 -1
     (nil))
(jump_insn 249 248 250 22 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 255)
            (pc))) "../src/io.f":263 -1
     (nil)
 -> 255)
;;  succ:       24
;;              23 (FALLTHRU)

;; basic block 23, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 22, next block 24, flags: (NEW, REACHABLE, RTL)
;;  pred:       22 (FALLTHRU)
(note 250 249 251 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 251 250 253 23 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [1 ipass+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [1 ipass+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":240 -1
     (nil))
(jump_insn 253 251 254 23 (set (pc)
        (label_ref 252)) "../src/io.f":240 -1
     (nil)
 -> 252)
;;  succ:       14 (DFS_BACK)

(barrier 254 253 255)
;; basic block 24, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 23, next block 25, flags: (NEW, REACHABLE, RTL)
;;  pred:       14
;;              22
(code_label 255 254 256 24 6 (nil) [2 uses])
(note 256 255 257 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 257 256 258 24 (set (reg:CCNO 17 flags)
        (compare:CCNO (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [1 ninp+0 S4 A32])
            (const_int 0 [0]))) "../src/io.f":267 -1
     (nil))
(jump_insn 258 257 259 24 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 270)
            (pc))) "../src/io.f":267 -1
     (nil)
 -> 270)
;;  succ:       25 (FALLTHRU)
;;              28

;; basic block 25, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 24, next block 26, flags: (NEW, REACHABLE, RTL)
;;  pred:       24 (FALLTHRU)
(note 259 258 260 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 260 259 261 25 (set (reg/f:DI 212)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -680 [0xfffffffffffffd58])) [11 n+0 S8 A64])) "../src/io.f":267 -1
     (nil))
(insn 261 260 262 25 (set (reg:SI 145 [ M.3_63 ])
        (mem:SI (reg/f:DI 212) [1 *n_99(D)+0 S4 A32])) "../src/io.f":267 -1
     (nil))
(insn 262 261 263 25 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [1 ninp+0 S4 A32])
            (reg:SI 145 [ M.3_63 ]))) "../src/io.f":267 -1
     (nil))
(jump_insn 263 262 264 25 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 266)
            (pc))) "../src/io.f":267 -1
     (nil)
 -> 266)
;;  succ:       26 (FALLTHRU)
;;              27

;; basic block 26, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 25, next block 27, flags: (NEW, REACHABLE, RTL)
;;  pred:       25 (FALLTHRU)
(note 264 263 265 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 265 264 266 26 (set (reg:SI 145 [ M.3_63 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [1 ninp+0 S4 A32])) "../src/io.f":267 -1
     (nil))
;;  succ:       27 (FALLTHRU)

;; basic block 27, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 26, next block 28, flags: (NEW, REACHABLE, RTL)
;;  pred:       25
;;              26 (FALLTHRU)
(code_label 266 265 267 27 13 (nil) [1 uses])
(note 267 266 268 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 268 267 269 27 (set (reg/f:DI 213)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -680 [0xfffffffffffffd58])) [11 n+0 S8 A64])) "../src/io.f":267 -1
     (nil))
(insn 269 268 270 27 (set (mem:SI (reg/f:DI 213) [1 *n_99(D)+0 S4 A32])
        (reg:SI 145 [ M.3_63 ])) "../src/io.f":267 -1
     (nil))
;;  succ:       28 (FALLTHRU)

;; basic block 28, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 27, next block 29, flags: (NEW, REACHABLE, RTL)
;;  pred:       24
;;              27 (FALLTHRU)
(code_label 270 269 271 28 12 (nil) [1 uses])
(note 271 270 272 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 272 271 273 28 (set (reg/f:DI 214)
        (symbol_ref/f:DI ("*lC4") [flags 0x2]  <var_decl 0x143b723f0 *lC4>)) "../src/io.f":268 -1
     (nil))
(insn 273 272 274 28 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -648 [0xfffffffffffffd78])) [5 dt_parm.4.common.filename+0 S8 A64])
        (reg/f:DI 214)) "../src/io.f":268 -1
     (nil))
(insn 274 273 275 28 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -640 [0xfffffffffffffd80])) [1 dt_parm.4.common.line+0 S4 A128])
        (const_int 268 [0x10c])) "../src/io.f":268 -1
     (nil))
(insn 275 274 276 28 (parallel [
            (set (reg:DI 215)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -176 [0xffffffffffffff50])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":268 -1
     (nil))
(insn 276 275 278 28 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -560 [0xfffffffffffffdd0])) [5 dt_parm.4.internal_unit+0 S8 A128])
        (reg:DI 215)) "../src/io.f":268 -1
     (nil))
(insn 278 276 277 28 (set (reg:SI 216)
        (const_int 0 [0])) "../src/io.f":268 -1
     (nil))
(insn 277 278 279 28 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [1 ilen+0 S4 A32])
            (const_int 0 [0]))) "../src/io.f":268 -1
     (nil))
(insn 279 277 280 28 (set (reg:SI 134 [ _48 ])
        (if_then_else:SI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [1 ilen+0 S4 A32])
            (reg:SI 216))) "../src/io.f":268 -1
     (nil))
(insn 280 279 281 28 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -552 [0xfffffffffffffdd8])) [1 dt_parm.4.internal_unit_len+0 S4 A64])
        (reg:SI 134 [ _48 ])) "../src/io.f":268 -1
     (nil))
(insn 281 280 282 28 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -592 [0xfffffffffffffdb0])) [5 dt_parm.4.internal_unit_desc+0 S8 A128])
        (const_int 0 [0])) "../src/io.f":268 -1
     (nil))
(insn 282 281 283 28 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -652 [0xfffffffffffffd74])) [1 dt_parm.4.common.unit+0 S4 A32])
        (const_int -1 [0xffffffffffffffff])) "../src/io.f":268 -1
     (nil))
(insn 283 282 284 28 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -656 [0xfffffffffffffd70])) [1 dt_parm.4.common.flags+0 S4 A128])
        (const_int 16516 [0x4084])) "../src/io.f":268 -1
     (nil))
(insn 284 283 285 28 (parallel [
            (set (reg:DI 217)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -656 [0xfffffffffffffd70])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":268 -1
     (nil))
(insn 285 284 286 28 (set (reg:DI 5 di)
        (reg:DI 217)) "../src/io.f":268 -1
     (nil))
(call_insn 286 285 287 28 (call (mem:QI (symbol_ref:DI ("_gfortran_st_read") [flags 0x41]  <function_decl 0x1439e0700 _gfortran_st_read>) [0 _gfortran_st_read S1 A8])
        (const_int 0 [0])) "../src/io.f":268 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 287 286 288 28 (set (reg/f:DI 218)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -680 [0xfffffffffffffd58])) [11 n+0 S8 A64])) "../src/io.f":268 -1
     (nil))
(insn 288 287 289 28 (set (reg:SI 159 [ _128 ])
        (mem:SI (reg/f:DI 218) [1 *n_99(D)+0 S4 A32])) "../src/io.f":268 -1
     (nil))
(insn 289 288 315 28 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
        (const_int 1 [0x1])) "../src/io.f":268 -1
     (nil))
;;  succ:       29 (FALLTHRU)

;; basic block 29, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 28, next block 30, flags: (NEW, REACHABLE, RTL)
;;  pred:       28 (FALLTHRU)
;;              31 (DFS_BACK)
(code_label 315 289 290 29 15 (nil) [1 uses])
(note 290 315 291 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 291 290 292 29 (set (reg:SI 135 [ _49 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -656 [0xfffffffffffffd70])) [1 dt_parm.4.common.flags+0 S4 A128])) "../src/io.f":268 -1
     (nil))
(insn 292 291 293 29 (parallel [
            (set (reg:SI 136 [ _50 ])
                (and:SI (reg:SI 135 [ _49 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":268 -1
     (nil))
(insn 293 292 294 29 (set (reg:QI 137 [ _51 ])
        (subreg:QI (reg:SI 136 [ _50 ]) 0)) "../src/io.f":268 -1
     (nil))
(insn 294 293 295 29 (parallel [
            (set (reg:QI 137 [ _51 ])
                (and:QI (reg:QI 137 [ _51 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":268 -1
     (nil))
(insn 295 294 296 29 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 137 [ _51 ])
            (const_int 0 [0]))) "../src/io.f":268 -1
     (nil))
(jump_insn 296 295 297 29 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 318)
            (pc))) "../src/io.f":268 -1
     (nil)
 -> 318)
;;  succ:       32
;;              30 (FALLTHRU)

;; basic block 30, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 29, next block 31, flags: (NEW, REACHABLE, RTL)
;;  pred:       29 (FALLTHRU)
(note 297 296 298 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 298 297 299 30 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
            (reg:SI 159 [ _128 ]))) "../src/io.f":268 -1
     (nil))
(insn 299 298 300 30 (set (reg:QI 160 [ _130 ])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "../src/io.f":268 -1
     (nil))
(insn 300 299 301 30 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 160 [ _130 ])
            (const_int 0 [0]))) "../src/io.f":268 -1
     (nil))
(jump_insn 301 300 302 30 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 318)
            (pc))) "../src/io.f":268 -1
     (nil)
 -> 318)
;;  succ:       32
;;              31 (FALLTHRU)

;; basic block 31, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 30, next block 32, flags: (NEW, REACHABLE, RTL)
;;  pred:       30 (FALLTHRU)
(note 302 301 303 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 303 302 304 31 (set (reg:SI 219)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../src/io.f":268 -1
     (nil))
(insn 304 303 305 31 (set (reg:DI 138 [ _52 ])
        (sign_extend:DI (reg:SI 219))) "../src/io.f":268 -1
     (nil))
(insn 305 304 306 31 (parallel [
            (set (reg:DI 139 [ _53 ])
                (plus:DI (reg:DI 138 [ _52 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":268 -1
     (nil))
(insn 306 305 307 31 (parallel [
            (set (reg:DI 220)
                (ashift:DI (reg:DI 139 [ _53 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":268 -1
     (nil))
(insn 307 306 308 31 (set (reg/f:DI 221)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -672 [0xfffffffffffffd60])) [6 a+0 S8 A64])) "../src/io.f":268 -1
     (nil))
(insn 308 307 309 31 (parallel [
            (set (reg/f:DI 140 [ _54 ])
                (plus:DI (reg:DI 220)
                    (reg/f:DI 221)))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":268 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -672 [0xfffffffffffffd60])) [6 a+0 S8 A64])
            (reg:DI 220))
        (nil)))
(insn 309 308 310 31 (parallel [
            (set (reg:DI 222)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -656 [0xfffffffffffffd70])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":268 -1
     (nil))
(insn 310 309 311 31 (set (reg:SI 1 dx)
        (const_int 4 [0x4])) "../src/io.f":268 -1
     (nil))
(insn 311 310 312 31 (set (reg:DI 4 si)
        (reg/f:DI 140 [ _54 ])) "../src/io.f":268 -1
     (nil))
(insn 312 311 313 31 (set (reg:DI 5 di)
        (reg:DI 222)) "../src/io.f":268 -1
     (nil))
(call_insn 313 312 314 31 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_integer") [flags 0x41]  <function_decl 0x1439d4400 _gfortran_transfer_integer>) [0 _gfortran_transfer_integer S1 A8])
        (const_int 0 [0])) "../src/io.f":268 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 314 313 316 31 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":268 -1
     (nil))
(jump_insn 316 314 317 31 (set (pc)
        (label_ref 315)) "../src/io.f":268 -1
     (nil)
 -> 315)
;;  succ:       29 (DFS_BACK)

(barrier 317 316 318)
;; basic block 32, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 31, next block 33, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       29
;;              30
(code_label 318 317 319 32 14 (nil) [2 uses])
(note 319 318 320 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 320 319 321 32 (parallel [
            (set (reg:DI 223)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -656 [0xfffffffffffffd70])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":268 -1
     (nil))
(insn 321 320 322 32 (set (reg:DI 5 di)
        (reg:DI 223)) "../src/io.f":268 -1
     (nil))
(call_insn 322 321 323 32 (call (mem:QI (symbol_ref:DI ("_gfortran_st_read_done") [flags 0x41]  <function_decl 0x1439e4200 _gfortran_st_read_done>) [0 _gfortran_st_read_done S1 A8])
        (const_int 0 [0])) "../src/io.f":268 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 323 322 324 32 (set (reg:SI 141 [ _55 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -656 [0xfffffffffffffd70])) [1 dt_parm.4.common.flags+0 S4 A128])) "../src/io.f":268 -1
     (nil))
(insn 324 323 325 32 (parallel [
            (set (reg:SI 142 [ _56 ])
                (and:SI (reg:SI 141 [ _55 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":268 -1
     (nil))
(insn 325 324 326 32 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 142 [ _56 ])
            (const_int 1 [0x1]))) "../src/io.f":268 -1
     (nil))
(jump_insn 326 325 347 32 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 329)
            (pc))) "../src/io.f":268 -1
     (nil)
 -> 329)
;;  succ:       34
;;              33 (FALLTHRU)

;; basic block 33, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 32, next block 34, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       32 (FALLTHRU)
(note 347 326 327 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(jump_insn 327 347 328 33 (set (pc)
        (label_ref 337)) "../src/io.f":268 -1
     (nil)
 -> 337)
;;  succ:       35

(barrier 328 327 329)
;; basic block 34, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 33, next block 35, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       32
(code_label 329 328 330 34 17 ("L.10") [1 uses])
(note 330 329 331 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 331 330 332 34 (set (reg/f:DI 224)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -680 [0xfffffffffffffd58])) [11 n+0 S8 A64])) "../src/io.f":275 -1
     (nil))
(insn 332 331 333 34 (set (mem:SI (reg/f:DI 224) [1 *n_99(D)+0 S4 A32])
        (const_int 0 [0])) "../src/io.f":275 -1
     (nil))
(insn 333 332 334 34 (set (reg/f:DI 225)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -688 [0xfffffffffffffd50])) [12 error+0 S8 A64])) "../src/io.f":276 -1
     (nil))
(insn 334 333 335 34 (set (mem:SI (reg/f:DI 225) [13 *error_137(D)+0 S4 A32])
        (const_int 1 [0x1])) "../src/io.f":276 -1
     (nil))
(jump_insn 335 334 336 34 (set (pc)
        (label_ref:DI 345)) "../src/io.f":277 649 {jump}
     (nil)
 -> 345)
;;  succ:       38 [100.0%] 

(barrier 336 335 337)
;; basic block 35, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 34, next block 38, flags: (NEW, REACHABLE, RTL)
;;  pred:       33
(code_label 337 336 338 35 16 (nil) [1 uses])
(note 338 337 339 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 339 338 340 35 (set (reg/f:DI 226)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -688 [0xfffffffffffffd50])) [12 error+0 S8 A64])) "../src/io.f":269 -1
     (nil))
(insn 340 339 348 35 (set (mem:SI (reg/f:DI 226) [13 *error_137(D)+0 S4 A32])
        (const_int 0 [0])) "../src/io.f":269 -1
     (nil))
(insn 348 340 345 35 (const_int 0 [0]) "../src/io.f":270 -1
     (nil))
;;  succ:       38 (FALLTHRU)

;; basic block 38, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 35, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       35 (FALLTHRU)
;;              34 [100.0%] 
(code_label 345 348 346 38 1 (nil) [1 uses])
(note 346 345 0 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function getflt (getflt_, funcdef_no=1, decl_uid=3552, cgraph_uid=1, symbol_order=1)

getflt (character(kind=1)[1:_input] & restrict input, real(kind=4)[0:] * restrict rnum, integer(kind=4) & restrict nr, logical(kind=4) & restrict error, integer(kind=4) _input)
{
  struct __st_parameter_dt dt_parm.7;
  integer(kind=4) M.6;
  integer(kind=4) M.5;
  logical(kind=1) D.3577;
  integer(kind=4) D.3574;
  sizetype D.3594;
  bitsizetype D.3593;
  character(kind=1) tab[1:1];
  integer(kind=4) ninp;
  integer(kind=4) n;
  integer(kind=4) ktab;
  integer(kind=4) kspace;
  integer(kind=4) kend;
  integer(kind=4) kdelim;
  integer(kind=4) kcomma;
  integer(kind=4) kblk;
  integer(kind=4) k;
  integer(kind=4) ipass;
  integer(kind=4) ilen;
  sizetype _1;
  bitsizetype _2;
  integer(kind=4) _3;
  character(kind=1) * _4;
  integer(kind=4) _5;
  integer(kind=4) _6;
  integer(kind=4) _7;
  integer(kind=4) _8;
  integer(kind=4) _9;
  character(kind=1) * _10;
  integer(kind=4) _11;
  integer(kind=4) _12;
  integer(kind=4) _13;
  integer(kind=4) _14;
  integer(kind=4) _15;
  integer(kind=4) _16;
  integer(kind=4) _17;
  character(kind=1) * _18;
  integer(kind=4) _19;
  integer(kind=4) _20;
  integer(kind=4) _21;
  integer(kind=4) _22;
  integer(kind=4) _23;
  integer(kind=4) _24;
  character(kind=1) * _25;
  integer(kind=4) _26;
  integer(kind=4) _27;
  integer(kind=4) _28;
  integer(kind=8) _29;
  integer(kind=8) _30;
  real(kind=4) * _31;
  integer(kind=4) _32;
  integer(kind=4) _33;
  integer(kind=4) M.5_44;
  integer(kind=4) M.6_45;
  bitsizetype _51;
  sizetype _52;
  integer(kind=4) _65;
  logical(kind=1) _67;
  integer(kind=4) M.5_72;
  integer(kind=4) M.5_73;
  integer(kind=4) M.6_78;
  integer(kind=4) M.6_79;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = (sizetype) _input_50(D);
  _2 = (bitsizetype) _1;
  _51 = _2 * 8;
  _52 = (sizetype) _input_50(D);
  tab[1]{lb: 1 sz: 1} = 9;
  ilen_55 = _input_50(D);
  k_57 = _gfortran_string_index (_input_50(D), input_56(D), 1, &"!"[1]{lb: 1 sz: 1}, 0);
  if (k_57 > 0)
    goto <bb 3>; [0.00%]
  else
    goto <bb 4>; [0.00%]
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
  ilen_58 = k_57 + -1;
;;    succ:       4

;;   basic block 4, loop depth 0
;;    pred:       2
;;                3
  # ilen_34 = PHI <ilen_55(2), ilen_58(3)>
  ninp_60 = *nr_59(D);
  if (ninp_60 == 0)
    goto <bb 5>; [0.00%]
  else
    goto <bb 6>; [0.00%]
;;    succ:       5
;;                6

;;   basic block 5, loop depth 0
;;    pred:       4
  _3 = ilen_34 / 2;
  ninp_61 = _3 + 1;
;;    succ:       6

;;   basic block 6, loop depth 0
;;    pred:       4
;;                5
  # ninp_43 = PHI <ninp_60(4), ninp_61(5)>
  *nr_59(D) = 0;
  if (ilen_34 == 0)
    goto <bb 7>; [0.00%]
  else
    goto <bb 8>; [0.00%]
;;    succ:       7
;;                8

;;   basic block 7, loop depth 0
;;    pred:       6
  goto <bb 31>; [0.00%]
;;    succ:       31

;;   basic block 8, loop depth 0
;;    pred:       6
  n_63 = 0;
  k_64 = 1;
  _65 = ilen_34;
  ipass_66 = 1;
;;    succ:       9

;;   basic block 9, loop depth 1
;;    pred:       8
;;                29
  # ipass_35 = PHI <ipass_66(8), ipass_101(29)>
  # k_36 = PHI <k_64(8), k_37(29)>
  # n_41 = PHI <n_63(8), n_42(29)>
  _67 = ipass_35 > _65;
  if (_67 != 0)
    goto <bb 30>; [0.00%]
  else
    goto <bb 10>; [0.00%]
;;    succ:       30
;;                10

;;   basic block 10, loop depth 1
;;    pred:       9
  _4 = &*input_56(D)[k_36]{lb: 1 sz: 1};
  _5 = ilen_34 - k_36;
  _6 = _5 + 1;
  _7 = MAX_EXPR <_6, 0>;
  _8 = _gfortran_string_index (_7, _4, 1, &" "[1]{lb: 1 sz: 1}, 0);
  _9 = k_36 + _8;
  kblk_68 = _9 + -1;
  _10 = &*input_56(D)[k_36]{lb: 1 sz: 1};
  _11 = ilen_34 - k_36;
  _12 = _11 + 1;
  _13 = MAX_EXPR <_12, 0>;
  _14 = _gfortran_string_index (_13, _10, 1, &tab, 0);
  _15 = k_36 + _14;
  ktab_69 = _15 + -1;
  _16 = k_36 + -1;
  if (kblk_68 == _16)
    goto <bb 11>; [0.00%]
  else
    goto <bb 12>; [0.00%]
;;    succ:       11
;;                12

;;   basic block 11, loop depth 1
;;    pred:       10
  kblk_70 = ilen_34 + 1;
;;    succ:       12

;;   basic block 12, loop depth 1
;;    pred:       10
;;                11
  # kblk_38 = PHI <kblk_68(10), kblk_70(11)>
  _17 = k_36 + -1;
  if (ktab_69 == _17)
    goto <bb 13>; [0.00%]
  else
    goto <bb 14>; [0.00%]
;;    succ:       13
;;                14

;;   basic block 13, loop depth 1
;;    pred:       12
  ktab_71 = ilen_34 + 1;
;;    succ:       14

;;   basic block 14, loop depth 1
;;    pred:       12
;;                13
  # ktab_40 = PHI <ktab_69(12), ktab_71(13)>
  M.5_72 = kblk_38;
  if (ktab_40 < M.5_72)
    goto <bb 15>; [0.00%]
  else
    goto <bb 16>; [0.00%]
;;    succ:       15
;;                16

;;   basic block 15, loop depth 1
;;    pred:       14
  M.5_73 = ktab_40;
;;    succ:       16

;;   basic block 16, loop depth 1
;;    pred:       14
;;                15
  # M.5_44 = PHI <M.5_72(14), M.5_73(15)>
  kspace_74 = M.5_44;
  if (kspace_74 == k_36)
    goto <bb 17>; [0.00%]
  else
    goto <bb 18>; [0.00%]
;;    succ:       17
;;                18

;;   basic block 17, loop depth 1
;;    pred:       16
  k_100 = k_36 + 1;
  goto <bb 28>; [0.00%]
;;    succ:       28

;;   basic block 18, loop depth 1
;;    pred:       16
  _18 = &*input_56(D)[k_36]{lb: 1 sz: 1};
  _19 = ilen_34 - k_36;
  _20 = _19 + 1;
  _21 = MAX_EXPR <_20, 0>;
  _22 = _gfortran_string_index (_21, _18, 1, &","[1]{lb: 1 sz: 1}, 0);
  _23 = k_36 + _22;
  kcomma_75 = _23 + -1;
  _24 = k_36 + -1;
  if (kcomma_75 == _24)
    goto <bb 19>; [0.00%]
  else
    goto <bb 20>; [0.00%]
;;    succ:       19
;;                20

;;   basic block 19, loop depth 1
;;    pred:       18
  kcomma_76 = ilen_34 + 1;
;;    succ:       20

;;   basic block 20, loop depth 1
;;    pred:       18
;;                19
  # kcomma_39 = PHI <kcomma_75(18), kcomma_76(19)>
  n_77 = n_41 + 1;
  if (n_77 > ninp_43)
    goto <bb 30>; [0.00%]
  else
    goto <bb 21>; [0.00%]
;;    succ:       30
;;                21

;;   basic block 21, loop depth 1
;;    pred:       20
  M.6_78 = kspace_74;
  if (kcomma_39 < M.6_78)
    goto <bb 22>; [0.00%]
  else
    goto <bb 23>; [0.00%]
;;    succ:       22
;;                23

;;   basic block 22, loop depth 1
;;    pred:       21
  M.6_79 = kcomma_39;
;;    succ:       23

;;   basic block 23, loop depth 1
;;    pred:       21
;;                22
  # M.6_45 = PHI <M.6_78(21), M.6_79(22)>
  kdelim_80 = M.6_45;
  if (k_36 == kdelim_80)
    goto <bb 24>; [0.00%]
  else
    goto <bb 25>; [0.00%]
;;    succ:       24
;;                25

;;   basic block 24, loop depth 1
;;    pred:       23
  k_99 = k_36 + 1;
  goto <bb 28>; [0.00%]
;;    succ:       28

;;   basic block 25, loop depth 1
;;    pred:       23
  kend_81 = kdelim_80 + -1;
  dt_parm.7.common.filename = &"../src/io.f"[1]{lb: 1 sz: 1};
  dt_parm.7.common.line = 185;
  _25 = &*input_56(D)[k_36]{lb: 1 sz: 1};
  dt_parm.7.internal_unit = _25;
  _26 = kend_81 - k_36;
  _27 = _26 + 1;
  _28 = MAX_EXPR <_27, 0>;
  dt_parm.7.internal_unit_len = _28;
  dt_parm.7.internal_unit_desc = 0B;
  dt_parm.7.common.unit = -1;
  dt_parm.7.common.flags = 16516;
  _gfortran_st_read (&dt_parm.7);
  _29 = (integer(kind=8)) n_77;
  _30 = _29 + -1;
  _31 = &*rnum_90(D)[_30];
  _gfortran_transfer_real (&dt_parm.7, _31, 4);
  _gfortran_st_read_done (&dt_parm.7);
  _32 = dt_parm.7.common.flags;
  _33 = _32 & 3;
  switch (_33) <default: <L40> [0.00%], case 1: L.22 [0.00%]>
;;    succ:       27
;;                26

;;   basic block 26, loop depth 0
;;    pred:       25
L.22 [0.00%]:
  dt_parm.7 ={v} {CLOBBER};
  *error_94(D) = 1;
  goto <bb 31>; [0.00%]
;;    succ:       31

;;   basic block 27, loop depth 1
;;    pred:       25
<L40> [0.00%]:
  dt_parm.7 ={v} {CLOBBER};
  *nr_59(D) = n_77;
  k_98 = kdelim_80 + 1;
;;    succ:       28

;;   basic block 28, loop depth 1
;;    pred:       17
;;                24
;;                27
  # k_37 = PHI <k_100(17), k_99(24), k_98(27)>
  # n_42 = PHI <n_41(17), n_77(24), n_77(27)>
  if (k_37 >= ilen_34)
    goto <bb 30>; [0.00%]
  else
    goto <bb 29>; [0.00%]
;;    succ:       30
;;                29

;;   basic block 29, loop depth 1
;;    pred:       28
  ipass_101 = ipass_35 + 1;
  goto <bb 9>; [0.00%]
;;    succ:       9

;;   basic block 30, loop depth 0
;;    pred:       9
;;                20
;;                28
  *error_94(D) = 0;
;;    succ:       31

;;   basic block 31, loop depth 0
;;    pred:       7
;;                30
;;                26
  tab ={v} {CLOBBER};
;;    succ:       32

;;   basic block 32, loop depth 0
;;    pred:       31
<L52> [0.00%]:
  return;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_1 - 1 )
Partition 2 (_2 - 2 )
Partition 3 (_3 - 3 )
Partition 4 (_4 - 4 )
Partition 5 (_5 - 5 )
Partition 6 (_6 - 6 )
Partition 7 (_7 - 7 )
Partition 8 (_8 - 8 )
Partition 9 (_9 - 9 )
Partition 10 (_10 - 10 )
Partition 11 (_11 - 11 )
Partition 12 (_12 - 12 )
Partition 13 (_13 - 13 )
Partition 14 (_14 - 14 )
Partition 15 (_15 - 15 )
Partition 16 (_16 - 16 )
Partition 17 (_17 - 17 )
Partition 18 (_18 - 18 )
Partition 19 (_19 - 19 )
Partition 20 (_20 - 20 )
Partition 21 (_21 - 21 )
Partition 22 (_22 - 22 )
Partition 23 (_23 - 23 )
Partition 24 (_24 - 24 )
Partition 25 (_25 - 25 )
Partition 26 (_26 - 26 )
Partition 27 (_27 - 27 )
Partition 28 (_28 - 28 )
Partition 29 (_29 - 29 )
Partition 30 (_30 - 30 )
Partition 31 (_31 - 31 )
Partition 32 (_32 - 32 )
Partition 33 (_33 - 33 )
Partition 34 (ilen_34 - 34 )
Partition 35 (ipass_35 - 35 )
Partition 36 (k_36 - 36 )
Partition 37 (k_37 - 37 )
Partition 38 (kblk_38 - 38 )
Partition 39 (kcomma_39 - 39 )
Partition 40 (ktab_40 - 40 )
Partition 41 (n_41 - 41 )
Partition 42 (n_42 - 42 )
Partition 43 (ninp_43 - 43 )
Partition 44 (M.5_44 - 44 )
Partition 45 (M.6_45 - 45 )
Partition 50 (_input_50(D) - 50 )
Partition 51 (_51 - 51 )
Partition 52 (_52 - 52 )
Partition 55 (ilen_55 - 55 )
Partition 56 (input_56(D) - 56 )
Partition 57 (k_57 - 57 )
Partition 58 (ilen_58 - 58 )
Partition 59 (nr_59(D) - 59 )
Partition 60 (ninp_60 - 60 )
Partition 61 (ninp_61 - 61 )
Partition 63 (n_63 - 63 )
Partition 64 (k_64 - 64 )
Partition 65 (_65 - 65 )
Partition 66 (ipass_66 - 66 )
Partition 67 (_67 - 67 )
Partition 68 (kblk_68 - 68 )
Partition 69 (ktab_69 - 69 )
Partition 70 (kblk_70 - 70 )
Partition 71 (ktab_71 - 71 )
Partition 72 (M.5_72 - 72 )
Partition 73 (M.5_73 - 73 )
Partition 74 (kspace_74 - 74 )
Partition 75 (kcomma_75 - 75 )
Partition 76 (kcomma_76 - 76 )
Partition 77 (n_77 - 77 )
Partition 78 (M.6_78 - 78 )
Partition 79 (M.6_79 - 79 )
Partition 80 (kdelim_80 - 80 )
Partition 81 (kend_81 - 81 )
Partition 90 (rnum_90(D) - 90 )
Partition 94 (error_94(D) - 94 )
Partition 98 (k_98 - 98 )
Partition 99 (k_99 - 99 )
Partition 100 (k_100 - 100 )
Partition 101 (ipass_101 - 101 )


Partition map 

Partition 0 (ilen_34 - 34 )
Partition 1 (ipass_35 - 35 )
Partition 2 (k_36 - 36 )
Partition 3 (k_37 - 37 )
Partition 4 (kblk_38 - 38 )
Partition 5 (kcomma_39 - 39 )
Partition 6 (ktab_40 - 40 )
Partition 7 (n_41 - 41 )
Partition 8 (n_42 - 42 )
Partition 9 (ninp_43 - 43 )
Partition 10 (M.5_44 - 44 )
Partition 11 (M.6_45 - 45 )
Partition 12 (_input_50(D) - 50 )
Partition 13 (ilen_55 - 55 )
Partition 14 (input_56(D) - 56 )
Partition 15 (k_57 - 57 )
Partition 16 (ilen_58 - 58 )
Partition 17 (nr_59(D) - 59 )
Partition 18 (ninp_60 - 60 )
Partition 19 (ninp_61 - 61 )
Partition 20 (n_63 - 63 )
Partition 21 (k_64 - 64 )
Partition 22 (ipass_66 - 66 )
Partition 23 (kblk_68 - 68 )
Partition 24 (ktab_69 - 69 )
Partition 25 (kblk_70 - 70 )
Partition 26 (ktab_71 - 71 )
Partition 27 (M.5_72 - 72 )
Partition 28 (M.5_73 - 73 )
Partition 29 (kcomma_75 - 75 )
Partition 30 (kcomma_76 - 76 )
Partition 31 (n_77 - 77 )
Partition 32 (M.6_78 - 78 )
Partition 33 (M.6_79 - 79 )
Partition 34 (rnum_90(D) - 90 )
Partition 35 (error_94(D) - 94 )
Partition 36 (k_98 - 98 )
Partition 37 (k_99 - 99 )
Partition 38 (k_100 - 100 )
Partition 39 (ipass_101 - 101 )


Conflict graph:

After sorting:
Sorted Coalesce list:
(2147483646, 0) ilen_34 <-> ilen_55
(2147483646, 0) ninp_43 <-> ninp_60
(2147483646, 0) k_36 <-> k_37
(2147483646, 0) kblk_38 <-> kblk_68
(2147483646, 0) ktab_40 <-> ktab_69
(2147483646, 0) kcomma_39 <-> kcomma_75
(2147483646, 0) n_41 <-> n_42
(2147483646, 0) k_36 <-> k_57
(2147483646, 0) ilen_34 <-> ilen_58
(2147483646, 0) ninp_43 <-> ninp_61
(2147483646, 0) n_41 <-> n_63
(2147483646, 0) k_36 <-> k_64
(2147483646, 0) ipass_35 <-> ipass_66
(2147483646, 0) kblk_38 <-> kblk_70
(2147483646, 0) ktab_40 <-> ktab_71
(2147483646, 0) kcomma_39 <-> kcomma_76
(2147483646, 0) n_41 <-> n_77
(2147483646, 0) k_36 <-> k_98
(2147483646, 0) k_36 <-> k_99
(2147483646, 0) k_36 <-> k_100
(2147483646, 0) ipass_35 <-> ipass_101
(2, 0) M.5_44 <-> M.5_72
(2, 0) M.6_45 <-> M.6_78
(2, 0) n_42 <-> n_77

Partition map 

Partition 0 (ilen_34 - 34 )
Partition 1 (ipass_35 - 35 )
Partition 2 (k_36 - 36 )
Partition 3 (k_37 - 37 )
Partition 4 (kblk_38 - 38 )
Partition 5 (kcomma_39 - 39 )
Partition 6 (ktab_40 - 40 )
Partition 7 (n_41 - 41 )
Partition 8 (n_42 - 42 )
Partition 9 (ninp_43 - 43 )
Partition 10 (M.5_44 - 44 )
Partition 11 (M.6_45 - 45 )
Partition 12 (_input_50(D) - 50 )
Partition 13 (ilen_55 - 55 )
Partition 14 (input_56(D) - 56 )
Partition 15 (k_57 - 57 )
Partition 16 (ilen_58 - 58 )
Partition 17 (nr_59(D) - 59 )
Partition 18 (ninp_60 - 60 )
Partition 19 (ninp_61 - 61 )
Partition 20 (n_63 - 63 )
Partition 21 (k_64 - 64 )
Partition 22 (ipass_66 - 66 )
Partition 23 (kblk_68 - 68 )
Partition 24 (ktab_69 - 69 )
Partition 25 (kblk_70 - 70 )
Partition 26 (ktab_71 - 71 )
Partition 27 (M.5_72 - 72 )
Partition 28 (M.5_73 - 73 )
Partition 29 (kcomma_75 - 75 )
Partition 30 (kcomma_76 - 76 )
Partition 31 (n_77 - 77 )
Partition 32 (M.6_78 - 78 )
Partition 33 (M.6_79 - 79 )
Partition 34 (rnum_90(D) - 90 )
Partition 35 (error_94(D) - 94 )
Partition 36 (k_98 - 98 )
Partition 37 (k_99 - 99 )
Partition 38 (k_100 - 100 )
Partition 39 (ipass_101 - 101 )

Coalesce list: (34)ilen_34 & (55)ilen_55 [map: 0, 13] : Success -> 0
Coalesce list: (43)ninp_43 & (60)ninp_60 [map: 9, 18] : Success -> 9
Coalesce list: (36)k_36 & (37)k_37 [map: 2, 3] : Success -> 2
Coalesce list: (38)kblk_38 & (68)kblk_68 [map: 4, 23] : Success -> 4
Coalesce list: (40)ktab_40 & (69)ktab_69 [map: 6, 24] : Success -> 6
Coalesce list: (39)kcomma_39 & (75)kcomma_75 [map: 5, 29] : Success -> 5
Coalesce list: (41)n_41 & (42)n_42 [map: 7, 8] : Success -> 7
Coalesce list: (36)k_36 & (57)k_57 [map: 2, 15] : Success -> 2
Coalesce list: (34)ilen_34 & (58)ilen_58 [map: 0, 16] : Success -> 0
Coalesce list: (43)ninp_43 & (61)ninp_61 [map: 9, 19] : Success -> 9
Coalesce list: (41)n_41 & (63)n_63 [map: 7, 20] : Success -> 7
Coalesce list: (36)k_36 & (64)k_64 [map: 2, 21] : Success -> 2
Coalesce list: (35)ipass_35 & (66)ipass_66 [map: 1, 22] : Success -> 1
Coalesce list: (38)kblk_38 & (70)kblk_70 [map: 4, 25] : Success -> 4
Coalesce list: (40)ktab_40 & (71)ktab_71 [map: 6, 26] : Success -> 6
Coalesce list: (39)kcomma_39 & (76)kcomma_76 [map: 5, 30] : Success -> 5
Coalesce list: (41)n_41 & (77)n_77 [map: 7, 31] : Success -> 7
Coalesce list: (36)k_36 & (98)k_98 [map: 2, 36] : Success -> 2
Coalesce list: (36)k_36 & (99)k_99 [map: 2, 37] : Success -> 2
Coalesce list: (36)k_36 & (100)k_100 [map: 2, 38] : Success -> 2
Coalesce list: (35)ipass_35 & (101)ipass_101 [map: 1, 39] : Success -> 1
Coalesce list: (44)M.5_44 & (72)M.5_72 [map: 10, 27] : Success -> 10
Coalesce list: (45)M.6_45 & (78)M.6_78 [map: 11, 32] : Success -> 11
Coalesce list: (42)n_41 & (77)n_41: Already Coalesced.
Coalesce list: (37)k_36 & (98)k_36: Already Coalesced.
Coalesce list: (37)k_36 & (99)k_36: Already Coalesced.
Coalesce list: (37)k_36 & (100)k_36: Already Coalesced.
Coalesce list: (45)M.6_45 & (79)M.6_79 [map: 11, 33] : Success -> 11
Coalesce list: (39)kcomma_39 & (76)kcomma_39: Already Coalesced.
Coalesce list: (44)M.5_44 & (73)M.5_73 [map: 10, 28] : Success -> 10
Coalesce list: (40)ktab_40 & (71)ktab_40: Already Coalesced.
Coalesce list: (38)kblk_38 & (70)kblk_38: Already Coalesced.
Coalesce list: (41)n_41 & (42)n_41: Already Coalesced.
Coalesce list: (41)n_41 & (63)n_41: Already Coalesced.
Coalesce list: (36)k_36 & (64)k_36: Already Coalesced.
Coalesce list: (35)ipass_35 & (101)ipass_35: Already Coalesced.
Coalesce list: (35)ipass_35 & (66)ipass_35: Already Coalesced.
Coalesce list: (43)ninp_43 & (61)ninp_43: Already Coalesced.
Coalesce list: (34)ilen_34 & (58)ilen_34: Already Coalesced.
After Coalescing:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (_2 - 2 )
Partition 2 (_3 - 3 )
Partition 3 (_4 - 4 )
Partition 4 (_5 - 5 )
Partition 5 (_6 - 6 )
Partition 6 (_7 - 7 )
Partition 7 (_8 - 8 )
Partition 8 (_9 - 9 )
Partition 9 (_10 - 10 )
Partition 10 (_11 - 11 )
Partition 11 (_12 - 12 )
Partition 12 (_13 - 13 )
Partition 13 (_14 - 14 )
Partition 14 (_15 - 15 )
Partition 15 (_16 - 16 )
Partition 16 (_17 - 17 )
Partition 17 (_18 - 18 )
Partition 18 (_19 - 19 )
Partition 19 (_20 - 20 )
Partition 20 (_21 - 21 )
Partition 21 (_22 - 22 )
Partition 22 (_23 - 23 )
Partition 23 (_24 - 24 )
Partition 24 (_25 - 25 )
Partition 25 (_26 - 26 )
Partition 26 (_27 - 27 )
Partition 27 (_28 - 28 )
Partition 28 (_29 - 29 )
Partition 29 (_30 - 30 )
Partition 30 (_31 - 31 )
Partition 31 (_32 - 32 )
Partition 32 (_33 - 33 )
Partition 33 (ilen_34 - 34 55 58 )
Partition 34 (ipass_35 - 35 66 101 )
Partition 35 (k_36 - 36 37 57 64 98 99 100 )
Partition 36 (kblk_38 - 38 68 70 )
Partition 37 (kcomma_39 - 39 75 76 )
Partition 38 (ktab_40 - 40 69 71 )
Partition 39 (n_41 - 41 42 63 77 )
Partition 40 (ninp_43 - 43 60 61 )
Partition 41 (M.5_44 - 44 72 73 )
Partition 42 (M.6_45 - 45 78 79 )
Partition 43 (_input_50(D) - 50 )
Partition 44 (_51 - 51 )
Partition 45 (_52 - 52 )
Partition 46 (input_56(D) - 56 )
Partition 47 (nr_59(D) - 59 )
Partition 48 (_65 - 65 )
Partition 49 (_67 - 67 )
Partition 50 (kspace_74 - 74 )
Partition 51 (kdelim_80 - 80 )
Partition 52 (kend_81 - 81 )
Partition 53 (rnum_90(D) - 90 )
Partition 54 (error_94(D) - 94 )

getflt (character(kind=1)[1:_input] & restrict input, real(kind=4)[0:] * restrict rnum, integer(kind=4) & restrict nr, logical(kind=4) & restrict error, integer(kind=4) _input)
{
  struct __st_parameter_dt dt_parm.7;
  integer(kind=4) M.6;
  integer(kind=4) M.5;
  logical(kind=1) D.3577;
  integer(kind=4) D.3574;
  sizetype D.3594;
  bitsizetype D.3593;
  character(kind=1) tab[1:1];
  integer(kind=4) ninp;
  integer(kind=4) n;
  integer(kind=4) ktab;
  integer(kind=4) kspace;
  integer(kind=4) kend;
  integer(kind=4) kdelim;
  integer(kind=4) kcomma;
  integer(kind=4) kblk;
  integer(kind=4) k;
  integer(kind=4) ipass;
  integer(kind=4) ilen;
  sizetype _1;
  bitsizetype _2;
  integer(kind=4) _3;
  character(kind=1) * _4;
  integer(kind=4) _5;
  integer(kind=4) _6;
  integer(kind=4) _7;
  integer(kind=4) _8;
  integer(kind=4) _9;
  character(kind=1) * _10;
  integer(kind=4) _11;
  integer(kind=4) _12;
  integer(kind=4) _13;
  integer(kind=4) _14;
  integer(kind=4) _15;
  integer(kind=4) _16;
  integer(kind=4) _17;
  character(kind=1) * _18;
  integer(kind=4) _19;
  integer(kind=4) _20;
  integer(kind=4) _21;
  integer(kind=4) _22;
  integer(kind=4) _23;
  integer(kind=4) _24;
  character(kind=1) * _25;
  integer(kind=4) _26;
  integer(kind=4) _27;
  integer(kind=4) _28;
  integer(kind=8) _29;
  integer(kind=8) _30;
  real(kind=4) * _31;
  integer(kind=4) _32;
  integer(kind=4) _33;
  integer(kind=4) M.5_44;
  integer(kind=4) M.6_45;
  bitsizetype _51;
  sizetype _52;
  integer(kind=4) _65;
  logical(kind=1) _67;
  integer(kind=4) M.5_72;
  integer(kind=4) M.5_73;
  integer(kind=4) M.6_78;
  integer(kind=4) M.6_79;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = (sizetype) _input_50(D);
  _2 = (bitsizetype) _1;
  _51 = _2 * 8;
  _52 = (sizetype) _input_50(D);
  tab[1]{lb: 1 sz: 1} = 9;
  ilen_55 = _input_50(D);
  k_57 = _gfortran_string_index (_input_50(D), input_56(D), 1, &"!"[1]{lb: 1 sz: 1}, 0);
  if (k_57 > 0)
    goto <bb 3>; [0.00%]
  else
    goto <bb 4>; [0.00%]
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
  ilen_58 = k_57 + -1;
;;    succ:       4

;;   basic block 4, loop depth 0
;;    pred:       2
;;                3
  # ilen_34 = PHI <ilen_55(2), ilen_58(3)>
  ninp_60 = *nr_59(D);
  if (ninp_60 == 0)
    goto <bb 5>; [0.00%]
  else
    goto <bb 6>; [0.00%]
;;    succ:       5
;;                6

;;   basic block 5, loop depth 0
;;    pred:       4
  _3 = ilen_34 / 2;
  ninp_61 = _3 + 1;
;;    succ:       6

;;   basic block 6, loop depth 0
;;    pred:       4
;;                5
  # ninp_43 = PHI <ninp_60(4), ninp_61(5)>
  *nr_59(D) = 0;
  if (ilen_34 == 0)
    goto <bb 7>; [0.00%]
  else
    goto <bb 8>; [0.00%]
;;    succ:       7
;;                8

;;   basic block 7, loop depth 0
;;    pred:       6
  goto <bb 31>; [0.00%]
;;    succ:       31

;;   basic block 8, loop depth 0
;;    pred:       6
  n_63 = 0;
  k_64 = 1;
  _65 = ilen_34;
  ipass_66 = 1;
;;    succ:       9

;;   basic block 9, loop depth 1
;;    pred:       8
;;                29
  # ipass_35 = PHI <ipass_66(8), ipass_101(29)>
  # k_36 = PHI <k_64(8), k_37(29)>
  # n_41 = PHI <n_63(8), n_42(29)>
  _67 = ipass_35 > _65;
  if (_67 != 0)
    goto <bb 30>; [0.00%]
  else
    goto <bb 10>; [0.00%]
;;    succ:       30
;;                10

;;   basic block 10, loop depth 1
;;    pred:       9
  _4 = &*input_56(D)[k_36]{lb: 1 sz: 1};
  _5 = ilen_34 - k_36;
  _6 = _5 + 1;
  _7 = MAX_EXPR <_6, 0>;
  _8 = _gfortran_string_index (_7, _4, 1, &" "[1]{lb: 1 sz: 1}, 0);
  _9 = k_36 + _8;
  kblk_68 = _9 + -1;
  _10 = &*input_56(D)[k_36]{lb: 1 sz: 1};
  _11 = ilen_34 - k_36;
  _12 = _11 + 1;
  _13 = MAX_EXPR <_12, 0>;
  _14 = _gfortran_string_index (_13, _10, 1, &tab, 0);
  _15 = k_36 + _14;
  ktab_69 = _15 + -1;
  _16 = k_36 + -1;
  if (kblk_68 == _16)
    goto <bb 11>; [0.00%]
  else
    goto <bb 12>; [0.00%]
;;    succ:       11
;;                12

;;   basic block 11, loop depth 1
;;    pred:       10
  kblk_70 = ilen_34 + 1;
;;    succ:       12

;;   basic block 12, loop depth 1
;;    pred:       10
;;                11
  # kblk_38 = PHI <kblk_68(10), kblk_70(11)>
  _17 = k_36 + -1;
  if (ktab_69 == _17)
    goto <bb 13>; [0.00%]
  else
    goto <bb 14>; [0.00%]
;;    succ:       13
;;                14

;;   basic block 13, loop depth 1
;;    pred:       12
  ktab_71 = ilen_34 + 1;
;;    succ:       14

;;   basic block 14, loop depth 1
;;    pred:       12
;;                13
  # ktab_40 = PHI <ktab_69(12), ktab_71(13)>
  M.5_72 = kblk_38;
  if (ktab_40 < M.5_72)
    goto <bb 15>; [0.00%]
  else
    goto <bb 16>; [0.00%]
;;    succ:       15
;;                16

;;   basic block 15, loop depth 1
;;    pred:       14
  M.5_73 = ktab_40;
;;    succ:       16

;;   basic block 16, loop depth 1
;;    pred:       14
;;                15
  # M.5_44 = PHI <M.5_72(14), M.5_73(15)>
  kspace_74 = M.5_44;
  if (kspace_74 == k_36)
    goto <bb 17>; [0.00%]
  else
    goto <bb 18>; [0.00%]
;;    succ:       17
;;                18

;;   basic block 17, loop depth 1
;;    pred:       16
  k_100 = k_36 + 1;
  goto <bb 28>; [0.00%]
;;    succ:       28

;;   basic block 18, loop depth 1
;;    pred:       16
  _18 = &*input_56(D)[k_36]{lb: 1 sz: 1};
  _19 = ilen_34 - k_36;
  _20 = _19 + 1;
  _21 = MAX_EXPR <_20, 0>;
  _22 = _gfortran_string_index (_21, _18, 1, &","[1]{lb: 1 sz: 1}, 0);
  _23 = k_36 + _22;
  kcomma_75 = _23 + -1;
  _24 = k_36 + -1;
  if (kcomma_75 == _24)
    goto <bb 19>; [0.00%]
  else
    goto <bb 20>; [0.00%]
;;    succ:       19
;;                20

;;   basic block 19, loop depth 1
;;    pred:       18
  kcomma_76 = ilen_34 + 1;
;;    succ:       20

;;   basic block 20, loop depth 1
;;    pred:       18
;;                19
  # kcomma_39 = PHI <kcomma_75(18), kcomma_76(19)>
  n_77 = n_41 + 1;
  if (n_77 > ninp_43)
    goto <bb 30>; [0.00%]
  else
    goto <bb 21>; [0.00%]
;;    succ:       30
;;                21

;;   basic block 21, loop depth 1
;;    pred:       20
  M.6_78 = kspace_74;
  if (kcomma_39 < M.6_78)
    goto <bb 22>; [0.00%]
  else
    goto <bb 23>; [0.00%]
;;    succ:       22
;;                23

;;   basic block 22, loop depth 1
;;    pred:       21
  M.6_79 = kcomma_39;
;;    succ:       23

;;   basic block 23, loop depth 1
;;    pred:       21
;;                22
  # M.6_45 = PHI <M.6_78(21), M.6_79(22)>
  kdelim_80 = M.6_45;
  if (k_36 == kdelim_80)
    goto <bb 24>; [0.00%]
  else
    goto <bb 25>; [0.00%]
;;    succ:       24
;;                25

;;   basic block 24, loop depth 1
;;    pred:       23
  k_99 = k_36 + 1;
  goto <bb 28>; [0.00%]
;;    succ:       28

;;   basic block 25, loop depth 1
;;    pred:       23
  kend_81 = kdelim_80 + -1;
  dt_parm.7.common.filename = &"../src/io.f"[1]{lb: 1 sz: 1};
  dt_parm.7.common.line = 185;
  _25 = &*input_56(D)[k_36]{lb: 1 sz: 1};
  dt_parm.7.internal_unit = _25;
  _26 = kend_81 - k_36;
  _27 = _26 + 1;
  _28 = MAX_EXPR <_27, 0>;
  dt_parm.7.internal_unit_len = _28;
  dt_parm.7.internal_unit_desc = 0B;
  dt_parm.7.common.unit = -1;
  dt_parm.7.common.flags = 16516;
  _gfortran_st_read (&dt_parm.7);
  _29 = (integer(kind=8)) n_77;
  _30 = _29 + -1;
  _31 = &*rnum_90(D)[_30];
  _gfortran_transfer_real (&dt_parm.7, _31, 4);
  _gfortran_st_read_done (&dt_parm.7);
  _32 = dt_parm.7.common.flags;
  _33 = _32 & 3;
  switch (_33) <default: <L40> [0.00%], case 1: L.22 [0.00%]>
;;    succ:       27
;;                26

;;   basic block 26, loop depth 0
;;    pred:       25
L.22 [0.00%]:
  dt_parm.7 ={v} {CLOBBER};
  *error_94(D) = 1;
  goto <bb 31>; [0.00%]
;;    succ:       31

;;   basic block 27, loop depth 1
;;    pred:       25
<L40> [0.00%]:
  dt_parm.7 ={v} {CLOBBER};
  *nr_59(D) = n_77;
  k_98 = kdelim_80 + 1;
;;    succ:       28

;;   basic block 28, loop depth 1
;;    pred:       17
;;                24
;;                27
  # k_37 = PHI <k_100(17), k_99(24), k_98(27)>
  # n_42 = PHI <n_41(17), n_77(24), n_77(27)>
  if (k_37 >= ilen_34)
    goto <bb 30>; [0.00%]
  else
    goto <bb 29>; [0.00%]
;;    succ:       30
;;                29

;;   basic block 29, loop depth 1
;;    pred:       28
  ipass_101 = ipass_35 + 1;
  goto <bb 9>; [0.00%]
;;    succ:       9

;;   basic block 30, loop depth 0
;;    pred:       9
;;                20
;;                28
  *error_94(D) = 0;
;;    succ:       31

;;   basic block 31, loop depth 0
;;    pred:       7
;;                30
;;                26
  tab ={v} {CLOBBER};
;;    succ:       32

;;   basic block 32, loop depth 0
;;    pred:       31
<L52> [0.00%]:
  return;
;;    succ:       EXIT

}


Partition 0: size 480 align 16
	dt_parm.7

;; Generating RTL for gimple basic block 2

;; _1 = (sizetype) _input_50(D);

(insn 10 9 11 (set (reg:SI 126)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -564 [0xfffffffffffffdcc])) [1 _input+0 S4 A32])) "../src/io.f":204 -1
     (nil))

(insn 11 10 0 (set (reg:DI 87 [ _1 ])
        (sign_extend:DI (reg:SI 126))) "../src/io.f":204 -1
     (nil))

;; _2 = (bitsizetype) _1;

(insn 12 11 13 (set (subreg:DI (reg:TI 88 [ _2 ]) 0)
        (reg:DI 87 [ _1 ])) "../src/io.f":204 -1
     (nil))

(insn 13 12 0 (set (subreg:DI (reg:TI 88 [ _2 ]) 8)
        (const_int 0 [0])) "../src/io.f":204 -1
     (nil))

;; _51 = _2 * 8;

(insn 14 13 0 (parallel [
            (set (reg:TI 122 [ _51 ])
                (ashift:TI (reg:TI 88 [ _2 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":204 -1
     (nil))

;; _52 = (sizetype) _input_50(D);

(insn 15 14 16 (set (reg:SI 127)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -564 [0xfffffffffffffdcc])) [1 _input+0 S4 A32])) "../src/io.f":204 -1
     (nil))

(insn 16 15 0 (set (reg:DI 123 [ _52 ])
        (sign_extend:DI (reg:SI 127))) "../src/io.f":204 -1
     (nil))

;; tab[1]{lb: 1 sz: 1} = 9;

(insn 17 16 0 (set (mem/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -45 [0xffffffffffffffd3])) [2 tab+0 S1 A8])
        (const_int 9 [0x9])) "../src/io.f":128 -1
     (nil))

;; ilen_55 = _input_50(D);

(insn 18 17 19 (set (reg:SI 128)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -564 [0xfffffffffffffdcc])) [1 _input+0 S4 A32])) "../src/io.f":131 -1
     (nil))

(insn 19 18 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 ilen+0 S4 A32])
        (reg:SI 128)) "../src/io.f":131 -1
     (nil))

;; k_57 = _gfortran_string_index (_input_50(D), input_56(D), 1, &"!"[1]{lb: 1 sz: 1}, 0);

(insn 20 19 21 (set (reg:DI 129)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -536 [0xfffffffffffffde8])) [10 input+0 S8 A64])) "../src/io.f":134 -1
     (nil))

(insn 21 20 22 (set (reg:SI 130)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -564 [0xfffffffffffffdcc])) [1 _input+0 S4 A32])) "../src/io.f":134 -1
     (nil))

(insn 22 21 23 (set (reg:SI 37 r8)
        (const_int 0 [0])) "../src/io.f":134 -1
     (nil))

(insn 23 22 24 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*lC1") [flags 0x2]  <var_decl 0x143b72240 *lC1>)) "../src/io.f":134 -1
     (nil))

(insn 24 23 25 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) "../src/io.f":134 -1
     (nil))

(insn 25 24 26 (set (reg:DI 4 si)
        (reg:DI 129)) "../src/io.f":134 -1
     (nil))

(insn 26 25 27 (set (reg:SI 5 di)
        (reg:SI 130)) "../src/io.f":134 -1
     (nil))

(call_insn/i 27 26 28 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_gfortran_string_index") [flags 0x41]  <function_decl 0x1439c4a00 _gfortran_string_index>) [0 _gfortran_string_index S1 A8])
            (const_int 0 [0]))) "../src/io.f":134 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (nil)))))))

(insn 28 27 29 (set (reg:SI 131)
        (reg:SI 0 ax)) "../src/io.f":134 -1
     (nil))

(insn 29 28 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])
        (reg:SI 131)) "../src/io.f":134 -1
     (nil))

;; if (k_57 > 0)

(insn 30 29 31 (set (reg:CCNO 17 flags)
        (compare:CCNO (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])
            (const_int 0 [0]))) "../src/io.f":135 -1
     (nil))

(jump_insn 31 30 0 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "../src/io.f":135 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; ilen_58 = k_57 + -1;

(insn 36 32 37 (set (reg:SI 135)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])) "../src/io.f":135 -1
     (nil))

(insn 37 36 38 (parallel [
            (set (reg:SI 134)
                (plus:SI (reg:SI 135)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":135 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))

(insn 38 37 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 ilen+0 S4 A32])
        (reg:SI 134)) "../src/io.f":135 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; 

(code_label 39 38 40 24 (nil) [0 uses])

(note 40 39 0 NOTE_INSN_BASIC_BLOCK)

;; ninp_60 = *nr_59(D);

(insn 41 40 42 (set (reg/f:DI 136)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -552 [0xfffffffffffffdd8])) [11 nr+0 S8 A64])) "../src/io.f":138 -1
     (nil))

(insn 42 41 43 (set (reg:SI 137)
        (mem:SI (reg/f:DI 136) [1 *nr_59(D)+0 S4 A32])) "../src/io.f":138 -1
     (nil))

(insn 43 42 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [1 ninp+0 S4 A32])
        (reg:SI 137)) "../src/io.f":138 -1
     (nil))

;; if (ninp_60 == 0)

(insn 44 43 45 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])) [1 ninp+0 S4 A32])
            (const_int 0 [0]))) "../src/io.f":139 -1
     (nil))

(jump_insn 45 44 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "../src/io.f":139 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; _3 = ilen_34 / 2;

(insn 47 46 48 (set (reg:SI 138)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 ilen+0 S4 A32])) "../src/io.f":139 -1
     (nil))

(insn 48 47 49 (parallel [
            (set (reg:SI 139)
                (lshiftrt:SI (reg:SI 138)
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":139 -1
     (nil))

(insn 49 48 50 (parallel [
            (set (reg:SI 140)
                (plus:SI (reg:SI 139)
                    (reg:SI 138)))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":139 -1
     (nil))

(insn 50 49 51 (parallel [
            (set (reg:SI 141)
                (ashiftrt:SI (reg:SI 140)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":139 -1
     (expr_list:REG_EQUAL (div:SI (reg:SI 138)
            (const_int 2 [0x2]))
        (nil)))

(insn 51 50 0 (set (reg:SI 89 [ _3 ])
        (reg:SI 141)) "../src/io.f":139 -1
     (nil))

;; ninp_61 = _3 + 1;

(insn 52 51 53 (parallel [
            (set (reg:SI 142)
                (plus:SI (reg:SI 89 [ _3 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":139 -1
     (nil))

(insn 53 52 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [1 ninp+0 S4 A32])
        (reg:SI 142)) "../src/io.f":139 -1
     (nil))

;; Generating RTL for gimple basic block 6

;; 

(code_label 54 53 55 25 (nil) [0 uses])

(note 55 54 0 NOTE_INSN_BASIC_BLOCK)

;; *nr_59(D) = 0;

(insn 56 55 57 (set (reg/f:DI 143)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -552 [0xfffffffffffffdd8])) [11 nr+0 S8 A64])) "../src/io.f":141 -1
     (nil))

(insn 57 56 0 (set (mem:SI (reg/f:DI 143) [1 *nr_59(D)+0 S4 A32])
        (const_int 0 [0])) "../src/io.f":141 -1
     (nil))

;; if (ilen_34 == 0)

(insn 58 57 59 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 ilen+0 S4 A32])
            (const_int 0 [0]))) "../src/io.f":143 -1
     (nil))

(jump_insn 59 58 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "../src/io.f":143 -1
     (nil))

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; 

(code_label 63 62 64 26 (nil) [0 uses])

(note 64 63 0 NOTE_INSN_BASIC_BLOCK)

;; n_63 = 0;

(insn 65 64 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [1 n+0 S4 A32])
        (const_int 0 [0])) "../src/io.f":146 -1
     (nil))

;; k_64 = 1;

(insn 66 65 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])
        (const_int 1 [0x1])) "../src/io.f":147 -1
     (nil))

;; _65 = ilen_34;

(insn 67 66 0 (set (reg:SI 124 [ _65 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 ilen+0 S4 A32])) "../src/io.f":148 -1
     (nil))

;; ipass_66 = 1;

(insn 68 67 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 ipass+0 S4 A32])
        (const_int 1 [0x1])) "../src/io.f":148 -1
     (nil))

;; Generating RTL for gimple basic block 9

;; _67 = ipass_35 > _65;

(insn 70 69 71 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [1 ipass+0 S4 A32])
            (reg:SI 124 [ _65 ]))) "../src/io.f":148 -1
     (nil))

(insn 71 70 0 (set (reg:QI 125 [ _67 ])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "../src/io.f":148 -1
     (nil))

;; if (_67 != 0)

(insn 72 71 73 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 125 [ _67 ])
            (const_int 0 [0]))) "../src/io.f":148 -1
     (nil))

(jump_insn 73 72 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "../src/io.f":148 -1
     (nil))

;; Generating RTL for gimple basic block 10
Applying pattern match.pd:836, generic-match.c:64
Applying pattern match.pd:873, generic-match.c:13046
Applying pattern match.pd:148, generic-match.c:6836
Applying pattern match.pd:84, generic-match.c:11356

;; _4 = &*input_56(D)[k_36]{lb: 1 sz: 1};

(insn 75 74 76 (set (reg:SI 145)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])) "../src/io.f":150 -1
     (nil))

(insn 76 75 77 (parallel [
            (set (reg:SI 144)
                (plus:SI (reg:SI 145)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":150 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))

(insn 77 76 78 (set (reg:DI 146)
        (sign_extend:DI (reg:SI 144))) "../src/io.f":150 -1
     (nil))

(insn 78 77 79 (set (reg/f:DI 147)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -536 [0xfffffffffffffde8])) [10 input+0 S8 A64])) "../src/io.f":150 -1
     (nil))

(insn 79 78 0 (parallel [
            (set (reg/f:DI 90 [ _4 ])
                (plus:DI (reg:DI 146)
                    (reg/f:DI 147)))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":150 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -536 [0xfffffffffffffde8])) [10 input+0 S8 A64])
            (reg:DI 146))
        (nil)))

;; _5 = ilen_34 - k_36;

(insn 80 79 81 (set (reg:SI 148)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 ilen+0 S4 A32])) "../src/io.f":150 -1
     (nil))

(insn 81 80 0 (parallel [
            (set (reg:SI 91 [ _5 ])
                (minus:SI (reg:SI 148)
                    (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":150 -1
     (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 ilen+0 S4 A32])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32]))
        (nil)))

;; _6 = _5 + 1;

(insn 82 81 0 (parallel [
            (set (reg:SI 92 [ _6 ])
                (plus:SI (reg:SI 91 [ _5 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":150 -1
     (nil))

;; _7 = MAX_EXPR <_6, 0>;

(insn 84 82 83 (set (reg:SI 149)
        (const_int 0 [0])) "../src/io.f":150 -1
     (nil))

(insn 83 84 85 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 92 [ _6 ])
            (const_int 0 [0]))) "../src/io.f":150 -1
     (nil))

(insn 85 83 0 (set (reg:SI 93 [ _7 ])
        (if_then_else:SI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:SI 92 [ _6 ])
            (reg:SI 149))) "../src/io.f":150 -1
     (nil))

;; _8 = _gfortran_string_index (_7, _4, 1, &" "[1]{lb: 1 sz: 1}, 0);

(insn 86 85 87 (set (reg:SI 37 r8)
        (const_int 0 [0])) "../src/io.f":150 -1
     (nil))

(insn 87 86 88 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*lC2") [flags 0x2]  <var_decl 0x143b722d0 *lC2>)) "../src/io.f":150 -1
     (nil))

(insn 88 87 89 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) "../src/io.f":150 -1
     (nil))

(insn 89 88 90 (set (reg:DI 4 si)
        (reg/f:DI 90 [ _4 ])) "../src/io.f":150 -1
     (nil))

(insn 90 89 91 (set (reg:SI 5 di)
        (reg:SI 93 [ _7 ])) "../src/io.f":150 -1
     (nil))

(call_insn/i 91 90 92 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_gfortran_string_index") [flags 0x41]  <function_decl 0x1439c4a00 _gfortran_string_index>) [0 _gfortran_string_index S1 A8])
            (const_int 0 [0]))) "../src/io.f":150 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (nil)))))))

(insn 92 91 0 (set (reg:SI 94 [ _8 ])
        (reg:SI 0 ax)) "../src/io.f":150 -1
     (nil))

;; _9 = k_36 + _8;

(insn 93 92 94 (set (reg:SI 150)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])) "../src/io.f":150 -1
     (nil))

(insn 94 93 0 (parallel [
            (set (reg:SI 95 [ _9 ])
                (plus:SI (reg:SI 94 [ _8 ])
                    (reg:SI 150)))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":150 -1
     (expr_list:REG_EQUAL (plus:SI (reg:SI 94 [ _8 ])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32]))
        (nil)))

;; kblk_68 = _9 + -1;

(insn 95 94 96 (parallel [
            (set (reg:SI 151)
                (plus:SI (reg:SI 95 [ _9 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":150 -1
     (nil))

(insn 96 95 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [1 kblk+0 S4 A32])
        (reg:SI 151)) "../src/io.f":150 -1
     (nil))
Applying pattern match.pd:836, generic-match.c:64
Applying pattern match.pd:873, generic-match.c:13046
Applying pattern match.pd:148, generic-match.c:6836
Applying pattern match.pd:84, generic-match.c:11356

;; _10 = &*input_56(D)[k_36]{lb: 1 sz: 1};

(insn 97 96 98 (set (reg:SI 153)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])) "../src/io.f":151 -1
     (nil))

(insn 98 97 99 (parallel [
            (set (reg:SI 152)
                (plus:SI (reg:SI 153)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":151 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))

(insn 99 98 100 (set (reg:DI 154)
        (sign_extend:DI (reg:SI 152))) "../src/io.f":151 -1
     (nil))

(insn 100 99 101 (set (reg/f:DI 155)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -536 [0xfffffffffffffde8])) [10 input+0 S8 A64])) "../src/io.f":151 -1
     (nil))

(insn 101 100 0 (parallel [
            (set (reg/f:DI 96 [ _10 ])
                (plus:DI (reg:DI 154)
                    (reg/f:DI 155)))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":151 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -536 [0xfffffffffffffde8])) [10 input+0 S8 A64])
            (reg:DI 154))
        (nil)))

;; _11 = ilen_34 - k_36;

(insn 102 101 103 (set (reg:SI 156)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 ilen+0 S4 A32])) "../src/io.f":151 -1
     (nil))

(insn 103 102 0 (parallel [
            (set (reg:SI 97 [ _11 ])
                (minus:SI (reg:SI 156)
                    (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":151 -1
     (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 ilen+0 S4 A32])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32]))
        (nil)))

;; _12 = _11 + 1;

(insn 104 103 0 (parallel [
            (set (reg:SI 98 [ _12 ])
                (plus:SI (reg:SI 97 [ _11 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":151 -1
     (nil))

;; _13 = MAX_EXPR <_12, 0>;

(insn 106 104 105 (set (reg:SI 157)
        (const_int 0 [0])) "../src/io.f":151 -1
     (nil))

(insn 105 106 107 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 98 [ _12 ])
            (const_int 0 [0]))) "../src/io.f":151 -1
     (nil))

(insn 107 105 0 (set (reg:SI 99 [ _13 ])
        (if_then_else:SI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:SI 98 [ _12 ])
            (reg:SI 157))) "../src/io.f":151 -1
     (nil))

;; _14 = _gfortran_string_index (_13, _10, 1, &tab, 0);

(insn 108 107 109 (parallel [
            (set (reg:DI 158)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -45 [0xffffffffffffffd3])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":151 -1
     (nil))

(insn 109 108 110 (set (reg:SI 37 r8)
        (const_int 0 [0])) "../src/io.f":151 -1
     (nil))

(insn 110 109 111 (set (reg:DI 2 cx)
        (reg:DI 158)) "../src/io.f":151 -1
     (nil))

(insn 111 110 112 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) "../src/io.f":151 -1
     (nil))

(insn 112 111 113 (set (reg:DI 4 si)
        (reg/f:DI 96 [ _10 ])) "../src/io.f":151 -1
     (nil))

(insn 113 112 114 (set (reg:SI 5 di)
        (reg:SI 99 [ _13 ])) "../src/io.f":151 -1
     (nil))

(call_insn/i 114 113 115 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_gfortran_string_index") [flags 0x41]  <function_decl 0x1439c4a00 _gfortran_string_index>) [0 _gfortran_string_index S1 A8])
            (const_int 0 [0]))) "../src/io.f":151 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (nil)))))))

(insn 115 114 0 (set (reg:SI 100 [ _14 ])
        (reg:SI 0 ax)) "../src/io.f":151 -1
     (nil))

;; _15 = k_36 + _14;

(insn 116 115 117 (set (reg:SI 159)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])) "../src/io.f":151 -1
     (nil))

(insn 117 116 0 (parallel [
            (set (reg:SI 101 [ _15 ])
                (plus:SI (reg:SI 100 [ _14 ])
                    (reg:SI 159)))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":151 -1
     (expr_list:REG_EQUAL (plus:SI (reg:SI 100 [ _14 ])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32]))
        (nil)))

;; ktab_69 = _15 + -1;

(insn 118 117 119 (parallel [
            (set (reg:SI 160)
                (plus:SI (reg:SI 101 [ _15 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":151 -1
     (nil))

(insn 119 118 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [1 ktab+0 S4 A32])
        (reg:SI 160)) "../src/io.f":151 -1
     (nil))

;; _16 = k_36 + -1;

(insn 120 119 121 (set (reg:SI 161)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])) "../src/io.f":153 -1
     (nil))

(insn 121 120 0 (parallel [
            (set (reg:SI 102 [ _16 ])
                (plus:SI (reg:SI 161)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":153 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))

;; if (kblk_68 == _16)

(insn 122 121 123 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [1 kblk+0 S4 A32])
            (reg:SI 102 [ _16 ]))) "../src/io.f":153 -1
     (nil))

(jump_insn 123 122 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "../src/io.f":153 -1
     (nil))

;; Generating RTL for gimple basic block 11

;; kblk_70 = ilen_34 + 1;

(insn 128 124 129 (set (reg:SI 165)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 ilen+0 S4 A32])) "../src/io.f":153 -1
     (nil))

(insn 129 128 130 (parallel [
            (set (reg:SI 164)
                (plus:SI (reg:SI 165)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":153 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 ilen+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))

(insn 130 129 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [1 kblk+0 S4 A32])
        (reg:SI 164)) "../src/io.f":153 -1
     (nil))

;; Generating RTL for gimple basic block 12

;; 

(code_label 131 130 132 29 (nil) [0 uses])

(note 132 131 0 NOTE_INSN_BASIC_BLOCK)

;; _17 = k_36 + -1;

(insn 133 132 134 (set (reg:SI 166)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])) "../src/io.f":154 -1
     (nil))

(insn 134 133 0 (parallel [
            (set (reg:SI 103 [ _17 ])
                (plus:SI (reg:SI 166)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":154 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))

;; if (ktab_69 == _17)

(insn 135 134 136 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [1 ktab+0 S4 A32])
            (reg:SI 103 [ _17 ]))) "../src/io.f":154 -1
     (nil))

(jump_insn 136 135 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "../src/io.f":154 -1
     (nil))

;; Generating RTL for gimple basic block 13

;; ktab_71 = ilen_34 + 1;

(insn 141 137 142 (set (reg:SI 170)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 ilen+0 S4 A32])) "../src/io.f":154 -1
     (nil))

(insn 142 141 143 (parallel [
            (set (reg:SI 169)
                (plus:SI (reg:SI 170)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":154 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 ilen+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))

(insn 143 142 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [1 ktab+0 S4 A32])
        (reg:SI 169)) "../src/io.f":154 -1
     (nil))

;; Generating RTL for gimple basic block 14

;; 

(code_label 144 143 145 30 (nil) [0 uses])

(note 145 144 0 NOTE_INSN_BASIC_BLOCK)

;; M.5_72 = kblk_38;

(insn 146 145 0 (set (reg:SI 120 [ M.5_44 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [1 kblk+0 S4 A32])) "../src/io.f":156 -1
     (nil))

;; if (ktab_40 < M.5_72)

(insn 147 146 148 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [1 ktab+0 S4 A32])
            (reg:SI 120 [ M.5_44 ]))) "../src/io.f":156 -1
     (nil))

(jump_insn 148 147 0 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "../src/io.f":156 -1
     (nil))

;; Generating RTL for gimple basic block 15

;; M.5_73 = ktab_40;

(insn 150 149 0 (set (reg:SI 120 [ M.5_44 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [1 ktab+0 S4 A32])) "../src/io.f":156 -1
     (nil))

;; Generating RTL for gimple basic block 16

;; 

(code_label 151 150 152 31 (nil) [0 uses])

(note 152 151 0 NOTE_INSN_BASIC_BLOCK)

;; kspace_74 = M.5_44;

(insn 153 152 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [1 kspace+0 S4 A32])
        (reg:SI 120 [ M.5_44 ])) "../src/io.f":156 -1
     (nil))

;; if (kspace_74 == k_36)

(insn 154 153 155 (set (reg:SI 171)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [1 kspace+0 S4 A32])) "../src/io.f":158 -1
     (nil))

(insn 155 154 156 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 171)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32]))) "../src/io.f":158 -1
     (nil))

(jump_insn 156 155 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "../src/io.f":158 -1
     (nil))

;; Generating RTL for gimple basic block 17

;; k_100 = k_36 + 1;

(insn 158 157 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":160 -1
     (nil))

;; Generating RTL for gimple basic block 18

;; 

(code_label 161 160 162 32 (nil) [0 uses])

(note 162 161 0 NOTE_INSN_BASIC_BLOCK)
Applying pattern match.pd:836, generic-match.c:64
Applying pattern match.pd:873, generic-match.c:13046
Applying pattern match.pd:148, generic-match.c:6836
Applying pattern match.pd:84, generic-match.c:11356

;; _18 = &*input_56(D)[k_36]{lb: 1 sz: 1};

(insn 163 162 164 (set (reg:SI 173)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])) "../src/io.f":165 -1
     (nil))

(insn 164 163 165 (parallel [
            (set (reg:SI 172)
                (plus:SI (reg:SI 173)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":165 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))

(insn 165 164 166 (set (reg:DI 174)
        (sign_extend:DI (reg:SI 172))) "../src/io.f":165 -1
     (nil))

(insn 166 165 167 (set (reg/f:DI 175)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -536 [0xfffffffffffffde8])) [10 input+0 S8 A64])) "../src/io.f":165 -1
     (nil))

(insn 167 166 0 (parallel [
            (set (reg/f:DI 104 [ _18 ])
                (plus:DI (reg:DI 174)
                    (reg/f:DI 175)))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":165 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -536 [0xfffffffffffffde8])) [10 input+0 S8 A64])
            (reg:DI 174))
        (nil)))

;; _19 = ilen_34 - k_36;

(insn 168 167 169 (set (reg:SI 176)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 ilen+0 S4 A32])) "../src/io.f":165 -1
     (nil))

(insn 169 168 0 (parallel [
            (set (reg:SI 105 [ _19 ])
                (minus:SI (reg:SI 176)
                    (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":165 -1
     (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 ilen+0 S4 A32])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32]))
        (nil)))

;; _20 = _19 + 1;

(insn 170 169 0 (parallel [
            (set (reg:SI 106 [ _20 ])
                (plus:SI (reg:SI 105 [ _19 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":165 -1
     (nil))

;; _21 = MAX_EXPR <_20, 0>;

(insn 172 170 171 (set (reg:SI 177)
        (const_int 0 [0])) "../src/io.f":165 -1
     (nil))

(insn 171 172 173 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 106 [ _20 ])
            (const_int 0 [0]))) "../src/io.f":165 -1
     (nil))

(insn 173 171 0 (set (reg:SI 107 [ _21 ])
        (if_then_else:SI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:SI 106 [ _20 ])
            (reg:SI 177))) "../src/io.f":165 -1
     (nil))

;; _22 = _gfortran_string_index (_21, _18, 1, &","[1]{lb: 1 sz: 1}, 0);

(insn 174 173 175 (set (reg:SI 37 r8)
        (const_int 0 [0])) "../src/io.f":165 -1
     (nil))

(insn 175 174 176 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*lC3") [flags 0x2]  <var_decl 0x143b72360 *lC3>)) "../src/io.f":165 -1
     (nil))

(insn 176 175 177 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) "../src/io.f":165 -1
     (nil))

(insn 177 176 178 (set (reg:DI 4 si)
        (reg/f:DI 104 [ _18 ])) "../src/io.f":165 -1
     (nil))

(insn 178 177 179 (set (reg:SI 5 di)
        (reg:SI 107 [ _21 ])) "../src/io.f":165 -1
     (nil))

(call_insn/i 179 178 180 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_gfortran_string_index") [flags 0x41]  <function_decl 0x1439c4a00 _gfortran_string_index>) [0 _gfortran_string_index S1 A8])
            (const_int 0 [0]))) "../src/io.f":165 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (nil)))))))

(insn 180 179 0 (set (reg:SI 108 [ _22 ])
        (reg:SI 0 ax)) "../src/io.f":165 -1
     (nil))

;; _23 = k_36 + _22;

(insn 181 180 182 (set (reg:SI 178)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])) "../src/io.f":165 -1
     (nil))

(insn 182 181 0 (parallel [
            (set (reg:SI 109 [ _23 ])
                (plus:SI (reg:SI 108 [ _22 ])
                    (reg:SI 178)))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":165 -1
     (expr_list:REG_EQUAL (plus:SI (reg:SI 108 [ _22 ])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32]))
        (nil)))

;; kcomma_75 = _23 + -1;

(insn 183 182 184 (parallel [
            (set (reg:SI 179)
                (plus:SI (reg:SI 109 [ _23 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":165 -1
     (nil))

(insn 184 183 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 kcomma+0 S4 A32])
        (reg:SI 179)) "../src/io.f":165 -1
     (nil))

;; _24 = k_36 + -1;

(insn 185 184 186 (set (reg:SI 180)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])) "../src/io.f":166 -1
     (nil))

(insn 186 185 0 (parallel [
            (set (reg:SI 110 [ _24 ])
                (plus:SI (reg:SI 180)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":166 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))

;; if (kcomma_75 == _24)

(insn 187 186 188 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [1 kcomma+0 S4 A32])
            (reg:SI 110 [ _24 ]))) "../src/io.f":166 -1
     (nil))

(jump_insn 188 187 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "../src/io.f":166 -1
     (nil))

;; Generating RTL for gimple basic block 19

;; kcomma_76 = ilen_34 + 1;

(insn 193 189 194 (set (reg:SI 184)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 ilen+0 S4 A32])) "../src/io.f":166 -1
     (nil))

(insn 194 193 195 (parallel [
            (set (reg:SI 183)
                (plus:SI (reg:SI 184)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":166 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 ilen+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))

(insn 195 194 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 kcomma+0 S4 A32])
        (reg:SI 183)) "../src/io.f":166 -1
     (nil))

;; Generating RTL for gimple basic block 20

;; 

(code_label 196 195 197 34 (nil) [0 uses])

(note 197 196 0 NOTE_INSN_BASIC_BLOCK)

;; n_77 = n_41 + 1;

(insn 198 197 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -28 [0xffffffffffffffe4])) [1 n+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -28 [0xffffffffffffffe4])) [1 n+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":169 -1
     (nil))

;; if (n_77 > ninp_43)

(insn 199 198 200 (set (reg:SI 185)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [1 n+0 S4 A32])) "../src/io.f":172 -1
     (nil))

(insn 200 199 201 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 185)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])) [1 ninp+0 S4 A32]))) "../src/io.f":172 -1
     (nil))

(jump_insn 201 200 0 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "../src/io.f":172 -1
     (nil))

;; Generating RTL for gimple basic block 21

;; M.6_78 = kspace_74;

(insn 203 202 0 (set (reg:SI 121 [ M.6_45 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [1 kspace+0 S4 A32])) "../src/io.f":175 -1
     (nil))

;; if (kcomma_39 < M.6_78)

(insn 204 203 205 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [1 kcomma+0 S4 A32])
            (reg:SI 121 [ M.6_45 ]))) "../src/io.f":175 -1
     (nil))

(jump_insn 205 204 0 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "../src/io.f":175 -1
     (nil))

;; Generating RTL for gimple basic block 22

;; M.6_79 = kcomma_39;

(insn 207 206 0 (set (reg:SI 121 [ M.6_45 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 kcomma+0 S4 A32])) "../src/io.f":175 -1
     (nil))

;; Generating RTL for gimple basic block 23

;; 

(code_label 208 207 209 35 (nil) [0 uses])

(note 209 208 0 NOTE_INSN_BASIC_BLOCK)

;; kdelim_80 = M.6_45;

(insn 210 209 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [1 kdelim+0 S4 A32])
        (reg:SI 121 [ M.6_45 ])) "../src/io.f":175 -1
     (nil))

;; if (k_36 == kdelim_80)

(insn 211 210 212 (set (reg:SI 186)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])) "../src/io.f":177 -1
     (nil))

(insn 212 211 213 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 186)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [1 kdelim+0 S4 A32]))) "../src/io.f":177 -1
     (nil))

(jump_insn 213 212 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "../src/io.f":177 -1
     (nil))

;; Generating RTL for gimple basic block 24

;; k_99 = k_36 + 1;

(insn 215 214 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":179 -1
     (nil))

;; Generating RTL for gimple basic block 25

;; 

(code_label 218 217 219 36 (nil) [0 uses])

(note 219 218 0 NOTE_INSN_BASIC_BLOCK)

;; kend_81 = kdelim_80 + -1;

(insn 223 219 224 (set (reg:SI 190)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [1 kdelim+0 S4 A32])) "../src/io.f":184 -1
     (nil))

(insn 224 223 225 (parallel [
            (set (reg:SI 189)
                (plus:SI (reg:SI 190)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":184 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [1 kdelim+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))

(insn 225 224 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -44 [0xffffffffffffffd4])) [1 kend+0 S4 A32])
        (reg:SI 189)) "../src/io.f":184 -1
     (nil))

;; dt_parm.7.common.filename = &"../src/io.f"[1]{lb: 1 sz: 1};

(insn 226 225 227 (set (reg/f:DI 191)
        (symbol_ref/f:DI ("*lC4") [flags 0x2]  <var_decl 0x143b723f0 *lC4>)) "../src/io.f":185 -1
     (nil))

(insn 227 226 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -520 [0xfffffffffffffdf8])) [5 dt_parm.7.common.filename+0 S8 A64])
        (reg/f:DI 191)) "../src/io.f":185 -1
     (nil))

;; dt_parm.7.common.line = 185;

(insn 228 227 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -512 [0xfffffffffffffe00])) [1 dt_parm.7.common.line+0 S4 A128])
        (const_int 185 [0xb9])) "../src/io.f":185 -1
     (nil))
Applying pattern match.pd:836, generic-match.c:64
Applying pattern match.pd:873, generic-match.c:13046
Applying pattern match.pd:148, generic-match.c:6836
Applying pattern match.pd:84, generic-match.c:11356

;; _25 = &*input_56(D)[k_36]{lb: 1 sz: 1};

(insn 229 228 230 (set (reg:SI 193)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])) "../src/io.f":185 -1
     (nil))

(insn 230 229 231 (parallel [
            (set (reg:SI 192)
                (plus:SI (reg:SI 193)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":185 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))

(insn 231 230 232 (set (reg:DI 194)
        (sign_extend:DI (reg:SI 192))) "../src/io.f":185 -1
     (nil))

(insn 232 231 233 (set (reg/f:DI 195)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -536 [0xfffffffffffffde8])) [10 input+0 S8 A64])) "../src/io.f":185 -1
     (nil))

(insn 233 232 0 (parallel [
            (set (reg/f:DI 111 [ _25 ])
                (plus:DI (reg:DI 194)
                    (reg/f:DI 195)))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":185 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -536 [0xfffffffffffffde8])) [10 input+0 S8 A64])
            (reg:DI 194))
        (nil)))

;; dt_parm.7.internal_unit = _25;

(insn 234 233 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -432 [0xfffffffffffffe50])) [5 dt_parm.7.internal_unit+0 S8 A128])
        (reg/f:DI 111 [ _25 ])) "../src/io.f":185 -1
     (nil))

;; _26 = kend_81 - k_36;

(insn 235 234 236 (set (reg:SI 196)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -44 [0xffffffffffffffd4])) [1 kend+0 S4 A32])) "../src/io.f":185 -1
     (nil))

(insn 236 235 0 (parallel [
            (set (reg:SI 112 [ _26 ])
                (minus:SI (reg:SI 196)
                    (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":185 -1
     (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -44 [0xffffffffffffffd4])) [1 kend+0 S4 A32])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32]))
        (nil)))

;; _27 = _26 + 1;

(insn 237 236 0 (parallel [
            (set (reg:SI 113 [ _27 ])
                (plus:SI (reg:SI 112 [ _26 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":185 -1
     (nil))

;; _28 = MAX_EXPR <_27, 0>;

(insn 239 237 238 (set (reg:SI 197)
        (const_int 0 [0])) "../src/io.f":185 -1
     (nil))

(insn 238 239 240 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 113 [ _27 ])
            (const_int 0 [0]))) "../src/io.f":185 -1
     (nil))

(insn 240 238 0 (set (reg:SI 114 [ _28 ])
        (if_then_else:SI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:SI 113 [ _27 ])
            (reg:SI 197))) "../src/io.f":185 -1
     (nil))

;; dt_parm.7.internal_unit_len = _28;

(insn 241 240 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -424 [0xfffffffffffffe58])) [1 dt_parm.7.internal_unit_len+0 S4 A64])
        (reg:SI 114 [ _28 ])) "../src/io.f":185 -1
     (nil))

;; dt_parm.7.internal_unit_desc = 0B;

(insn 242 241 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -464 [0xfffffffffffffe30])) [5 dt_parm.7.internal_unit_desc+0 S8 A128])
        (const_int 0 [0])) "../src/io.f":185 -1
     (nil))

;; dt_parm.7.common.unit = -1;

(insn 243 242 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -524 [0xfffffffffffffdf4])) [1 dt_parm.7.common.unit+0 S4 A32])
        (const_int -1 [0xffffffffffffffff])) "../src/io.f":185 -1
     (nil))

;; dt_parm.7.common.flags = 16516;

(insn 244 243 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -528 [0xfffffffffffffdf0])) [1 dt_parm.7.common.flags+0 S4 A128])
        (const_int 16516 [0x4084])) "../src/io.f":185 -1
     (nil))

;; _gfortran_st_read (&dt_parm.7);

(insn 245 244 246 (parallel [
            (set (reg:DI 198)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -528 [0xfffffffffffffdf0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":185 -1
     (nil))

(insn 246 245 247 (set (reg:DI 5 di)
        (reg:DI 198)) "../src/io.f":185 -1
     (nil))

(call_insn 247 246 0 (call (mem:QI (symbol_ref:DI ("_gfortran_st_read") [flags 0x41]  <function_decl 0x1439e0700 _gfortran_st_read>) [0 _gfortran_st_read S1 A8])
        (const_int 0 [0])) "../src/io.f":185 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; _29 = (integer(kind=8)) n_77;

(insn 248 247 249 (set (reg:SI 199)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [1 n+0 S4 A32])) "../src/io.f":185 -1
     (nil))

(insn 249 248 0 (set (reg:DI 115 [ _29 ])
        (sign_extend:DI (reg:SI 199))) "../src/io.f":185 -1
     (nil))

;; _30 = _29 + -1;

(insn 250 249 0 (parallel [
            (set (reg:DI 116 [ _30 ])
                (plus:DI (reg:DI 115 [ _29 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":185 -1
     (nil))
Applying pattern match.pd:84, generic-match.c:11356

;; _31 = &*rnum_90(D)[_30];

(insn 251 250 252 (parallel [
            (set (reg:DI 200)
                (ashift:DI (reg:DI 116 [ _30 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":185 -1
     (nil))

(insn 252 251 253 (set (reg/f:DI 201)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -544 [0xfffffffffffffde0])) [14 rnum+0 S8 A64])) "../src/io.f":185 -1
     (nil))

(insn 253 252 0 (parallel [
            (set (reg/f:DI 117 [ _31 ])
                (plus:DI (reg:DI 200)
                    (reg/f:DI 201)))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":185 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -544 [0xfffffffffffffde0])) [14 rnum+0 S8 A64])
            (reg:DI 200))
        (nil)))

;; _gfortran_transfer_real (&dt_parm.7, _31, 4);

(insn 254 253 255 (parallel [
            (set (reg:DI 202)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -528 [0xfffffffffffffdf0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":185 -1
     (nil))

(insn 255 254 256 (set (reg:SI 1 dx)
        (const_int 4 [0x4])) "../src/io.f":185 -1
     (nil))

(insn 256 255 257 (set (reg:DI 4 si)
        (reg/f:DI 117 [ _31 ])) "../src/io.f":185 -1
     (nil))

(insn 257 256 258 (set (reg:DI 5 di)
        (reg:DI 202)) "../src/io.f":185 -1
     (nil))

(call_insn 258 257 0 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_real") [flags 0x41]  <function_decl 0x1439d4c00 _gfortran_transfer_real>) [0 _gfortran_transfer_real S1 A8])
        (const_int 0 [0])) "../src/io.f":185 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))

;; _gfortran_st_read_done (&dt_parm.7);

(insn 259 258 260 (parallel [
            (set (reg:DI 203)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -528 [0xfffffffffffffdf0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":185 -1
     (nil))

(insn 260 259 261 (set (reg:DI 5 di)
        (reg:DI 203)) "../src/io.f":185 -1
     (nil))

(call_insn 261 260 0 (call (mem:QI (symbol_ref:DI ("_gfortran_st_read_done") [flags 0x41]  <function_decl 0x1439e4200 _gfortran_st_read_done>) [0 _gfortran_st_read_done S1 A8])
        (const_int 0 [0])) "../src/io.f":185 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; _32 = dt_parm.7.common.flags;

(insn 262 261 0 (set (reg:SI 118 [ _32 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -528 [0xfffffffffffffdf0])) [1 dt_parm.7.common.flags+0 S4 A128])) "../src/io.f":185 -1
     (nil))

;; _33 = _32 & 3;

(insn 263 262 0 (parallel [
            (set (reg:SI 119 [ _33 ])
                (and:SI (reg:SI 118 [ _32 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":185 -1
     (nil))
;; Expanding GIMPLE switch as decision tree:
;;        1

;; switch (_33) <default: <L40> [0.00%], case 1: L.22 [0.00%]>

(insn 264 263 265 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 119 [ _33 ])
            (const_int 1 [0x1]))) "../src/io.f":185 -1
     (nil))

(jump_insn 265 264 266 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "../src/io.f":185 -1
     (nil))

(jump_insn 266 265 267 (set (pc)
        (label_ref 0)) "../src/io.f":185 -1
     (nil))

(barrier 267 266 0)

;; Generating RTL for gimple basic block 26

;; L.22 [0.00%]:

(code_label 268 267 269 38 ("L.22") [0 uses])

(note 269 268 0 NOTE_INSN_BASIC_BLOCK)

;; dt_parm.7 ={v} {CLOBBER};

(nil)

;; *error_94(D) = 1;

(insn 270 269 271 (set (reg/f:DI 204)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -560 [0xfffffffffffffdd0])) [12 error+0 S8 A64])) "../src/io.f":202 -1
     (nil))

(insn 271 270 0 (set (mem:SI (reg/f:DI 204) [13 *error_94(D)+0 S4 A32])
        (const_int 1 [0x1])) "../src/io.f":202 -1
     (nil))

;; Generating RTL for gimple basic block 27

;; <L40> [0.00%]:

(code_label 274 273 275 37 (nil) [0 uses])

(note 275 274 0 NOTE_INSN_BASIC_BLOCK)

;; dt_parm.7 ={v} {CLOBBER};

(nil)

;; *nr_59(D) = n_77;

(insn 276 275 277 (set (reg/f:DI 205)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -552 [0xfffffffffffffdd8])) [11 nr+0 S8 A64])) "../src/io.f":186 -1
     (nil))

(insn 277 276 278 (set (reg:SI 206)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [1 n+0 S4 A32])) "../src/io.f":186 -1
     (nil))

(insn 278 277 0 (set (mem:SI (reg/f:DI 205) [1 *nr_59(D)+0 S4 A32])
        (reg:SI 206)) "../src/io.f":186 -1
     (nil))

;; k_98 = kdelim_80 + 1;

(insn 282 278 283 (set (reg:SI 210)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [1 kdelim+0 S4 A32])) "../src/io.f":189 -1
     (nil))

(insn 283 282 284 (parallel [
            (set (reg:SI 209)
                (plus:SI (reg:SI 210)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":189 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [1 kdelim+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))

(insn 284 283 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])
        (reg:SI 209)) "../src/io.f":189 -1
     (nil))

;; Generating RTL for gimple basic block 28

;; 

(code_label 285 284 286 33 (nil) [0 uses])

(note 286 285 0 NOTE_INSN_BASIC_BLOCK)

;; if (k_37 >= ilen_34)

(insn 287 286 288 (set (reg:SI 211)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])) "../src/io.f":191 -1
     (nil))

(insn 288 287 289 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 211)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 ilen+0 S4 A32]))) "../src/io.f":191 -1
     (nil))

(jump_insn 289 288 0 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "../src/io.f":191 -1
     (nil))

;; Generating RTL for gimple basic block 29

;; ipass_101 = ipass_35 + 1;

(insn 291 290 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [1 ipass+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [1 ipass+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":148 -1
     (nil))

;; Generating RTL for gimple basic block 30

;; 

(code_label 295 294 296 28 (nil) [0 uses])

(note 296 295 0 NOTE_INSN_BASIC_BLOCK)

;; *error_94(D) = 0;

(insn 297 296 298 (set (reg/f:DI 212)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -560 [0xfffffffffffffdd0])) [12 error+0 S8 A64])) "../src/io.f":196 -1
     (nil))

(insn 298 297 0 (set (mem:SI (reg/f:DI 212) [13 *error_94(D)+0 S4 A32])
        (const_int 0 [0])) "../src/io.f":196 -1
     (nil))

;; Generating RTL for gimple basic block 31

;; 

(code_label 299 298 300 27 (nil) [0 uses])

(note 300 299 0 NOTE_INSN_BASIC_BLOCK)

;; tab ={v} {CLOBBER};

(nil)

;; Generating RTL for gimple basic block 32

;; <L52> [0.00%]:

(code_label 301 300 302 40 (nil) [0 uses])

(note 302 301 0 NOTE_INSN_BASIC_BLOCK)
Purged edges from bb 35


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 7->8 to 35 failed.
Redirecting jump 61 from 33 to 35.
Forwarding edge 26->27 to 29 failed.
Redirecting jump 272 from 33 to 35.
Merging block 33 into block 32...
Merged blocks 32 and 33.
Merged 32 and 33 without moving.
Merging block 34 into block 32...
Merged blocks 32 and 34.
Merged 32 and 34 without moving.


try_optimize_cfg iteration 2

Forwarding edge 7->8 to 35 failed.
Forwarding edge 26->27 to 29 failed.
fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 8 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 8 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 8 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -536 [0xfffffffffffffde8])) [10 input+0 S8 A64])
        (reg:DI 5 di [ input ])) "../src/io.f":112 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -544 [0xfffffffffffffde0])) [14 rnum+0 S8 A64])
        (reg:DI 4 si [ rnum ])) "../src/io.f":112 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -552 [0xfffffffffffffdd8])) [11 nr+0 S8 A64])
        (reg:DI 1 dx [ nr ])) "../src/io.f":112 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -560 [0xfffffffffffffdd0])) [12 error+0 S8 A64])
        (reg:DI 2 cx [ error ])) "../src/io.f":112 -1
     (nil))
(insn 6 5 7 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -564 [0xfffffffffffffdcc])) [1 _input+0 S4 A32])
        (reg:SI 37 r8 [ _input ])) "../src/io.f":112 -1
     (nil))
(note 7 6 10 2 NOTE_INSN_FUNCTION_BEG)
(insn 10 7 11 2 (set (reg:SI 126)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -564 [0xfffffffffffffdcc])) [1 _input+0 S4 A32])) "../src/io.f":204 -1
     (nil))
(insn 11 10 12 2 (set (reg:DI 87 [ _1 ])
        (sign_extend:DI (reg:SI 126))) "../src/io.f":204 -1
     (nil))
(insn 12 11 13 2 (set (subreg:DI (reg:TI 88 [ _2 ]) 0)
        (reg:DI 87 [ _1 ])) "../src/io.f":204 -1
     (nil))
(insn 13 12 14 2 (set (subreg:DI (reg:TI 88 [ _2 ]) 8)
        (const_int 0 [0])) "../src/io.f":204 -1
     (nil))
(insn 14 13 15 2 (parallel [
            (set (reg:TI 122 [ _51 ])
                (ashift:TI (reg:TI 88 [ _2 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":204 -1
     (nil))
(insn 15 14 16 2 (set (reg:SI 127)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -564 [0xfffffffffffffdcc])) [1 _input+0 S4 A32])) "../src/io.f":204 -1
     (nil))
(insn 16 15 17 2 (set (reg:DI 123 [ _52 ])
        (sign_extend:DI (reg:SI 127))) "../src/io.f":204 -1
     (nil))
(insn 17 16 18 2 (set (mem/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -45 [0xffffffffffffffd3])) [2 tab+0 S1 A8])
        (const_int 9 [0x9])) "../src/io.f":128 -1
     (nil))
(insn 18 17 19 2 (set (reg:SI 128)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -564 [0xfffffffffffffdcc])) [1 _input+0 S4 A32])) "../src/io.f":131 -1
     (nil))
(insn 19 18 20 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 ilen+0 S4 A32])
        (reg:SI 128)) "../src/io.f":131 -1
     (nil))
(insn 20 19 21 2 (set (reg:DI 129)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -536 [0xfffffffffffffde8])) [10 input+0 S8 A64])) "../src/io.f":134 -1
     (nil))
(insn 21 20 22 2 (set (reg:SI 130)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -564 [0xfffffffffffffdcc])) [1 _input+0 S4 A32])) "../src/io.f":134 -1
     (nil))
(insn 22 21 23 2 (set (reg:SI 37 r8)
        (const_int 0 [0])) "../src/io.f":134 -1
     (nil))
(insn 23 22 24 2 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*lC1") [flags 0x2]  <var_decl 0x143b72240 *lC1>)) "../src/io.f":134 -1
     (nil))
(insn 24 23 25 2 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) "../src/io.f":134 -1
     (nil))
(insn 25 24 26 2 (set (reg:DI 4 si)
        (reg:DI 129)) "../src/io.f":134 -1
     (nil))
(insn 26 25 27 2 (set (reg:SI 5 di)
        (reg:SI 130)) "../src/io.f":134 -1
     (nil))
(call_insn/i 27 26 28 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_gfortran_string_index") [flags 0x41]  <function_decl 0x1439c4a00 _gfortran_string_index>) [0 _gfortran_string_index S1 A8])
            (const_int 0 [0]))) "../src/io.f":134 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (nil)))))))
(insn 28 27 29 2 (set (reg:SI 131)
        (reg:SI 0 ax)) "../src/io.f":134 -1
     (nil))
(insn 29 28 30 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])
        (reg:SI 131)) "../src/io.f":134 -1
     (nil))
(insn 30 29 31 2 (set (reg:CCNO 17 flags)
        (compare:CCNO (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])
            (const_int 0 [0]))) "../src/io.f":135 -1
     (nil))
(jump_insn 31 30 32 2 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 39)
            (pc))) "../src/io.f":135 -1
     (nil)
 -> 39)
;;  succ:       4 (FALLTHRU)
;;              5

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 (FALLTHRU)
(note 32 31 36 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 36 32 37 4 (set (reg:SI 135)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])) "../src/io.f":135 -1
     (nil))
(insn 37 36 38 4 (parallel [
            (set (reg:SI 134)
                (plus:SI (reg:SI 135)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":135 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 38 37 39 4 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 ilen+0 S4 A32])
        (reg:SI 134)) "../src/io.f":135 -1
     (nil))
;;  succ:       5 (FALLTHRU)

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       2
;;              4 (FALLTHRU)
(code_label 39 38 40 5 24 (nil) [1 uses])
(note 40 39 41 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 42 5 (set (reg/f:DI 136)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -552 [0xfffffffffffffdd8])) [11 nr+0 S8 A64])) "../src/io.f":138 -1
     (nil))
(insn 42 41 43 5 (set (reg:SI 137)
        (mem:SI (reg/f:DI 136) [1 *nr_59(D)+0 S4 A32])) "../src/io.f":138 -1
     (nil))
(insn 43 42 44 5 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [1 ninp+0 S4 A32])
        (reg:SI 137)) "../src/io.f":138 -1
     (nil))
(insn 44 43 45 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])) [1 ninp+0 S4 A32])
            (const_int 0 [0]))) "../src/io.f":139 -1
     (nil))
(jump_insn 45 44 46 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 54)
            (pc))) "../src/io.f":139 -1
     (nil)
 -> 54)
;;  succ:       6 (FALLTHRU)
;;              7

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       5 (FALLTHRU)
(note 46 45 47 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 47 46 48 6 (set (reg:SI 138)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 ilen+0 S4 A32])) "../src/io.f":139 -1
     (nil))
(insn 48 47 49 6 (parallel [
            (set (reg:SI 139)
                (lshiftrt:SI (reg:SI 138)
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":139 -1
     (nil))
(insn 49 48 50 6 (parallel [
            (set (reg:SI 140)
                (plus:SI (reg:SI 139)
                    (reg:SI 138)))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":139 -1
     (nil))
(insn 50 49 51 6 (parallel [
            (set (reg:SI 141)
                (ashiftrt:SI (reg:SI 140)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":139 -1
     (expr_list:REG_EQUAL (div:SI (reg:SI 138)
            (const_int 2 [0x2]))
        (nil)))
(insn 51 50 52 6 (set (reg:SI 89 [ _3 ])
        (reg:SI 141)) "../src/io.f":139 -1
     (nil))
(insn 52 51 53 6 (parallel [
            (set (reg:SI 142)
                (plus:SI (reg:SI 89 [ _3 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":139 -1
     (nil))
(insn 53 52 54 6 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [1 ninp+0 S4 A32])
        (reg:SI 142)) "../src/io.f":139 -1
     (nil))
;;  succ:       7 (FALLTHRU)

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       5
;;              6 (FALLTHRU)
(code_label 54 53 55 7 25 (nil) [1 uses])
(note 55 54 56 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 56 55 57 7 (set (reg/f:DI 143)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -552 [0xfffffffffffffdd8])) [11 nr+0 S8 A64])) "../src/io.f":141 -1
     (nil))
(insn 57 56 58 7 (set (mem:SI (reg/f:DI 143) [1 *nr_59(D)+0 S4 A32])
        (const_int 0 [0])) "../src/io.f":141 -1
     (nil))
(insn 58 57 59 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 ilen+0 S4 A32])
            (const_int 0 [0]))) "../src/io.f":143 -1
     (nil))
(jump_insn 59 58 60 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 63)
            (pc))) "../src/io.f":143 -1
     (nil)
 -> 63)
;;  succ:       8 (FALLTHRU)
;;              9

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7 (FALLTHRU)
(note 60 59 61 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(jump_insn 61 60 62 8 (set (pc)
        (label_ref:DI 303)) "../src/io.f":143 649 {jump}
     (nil)
 -> 303)
;;  succ:       35 [100.0%] 

(barrier 62 61 63)
;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL)
;;  pred:       7
(code_label 63 62 64 9 26 (nil) [1 uses])
(note 64 63 65 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 65 64 66 9 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [1 n+0 S4 A32])
        (const_int 0 [0])) "../src/io.f":146 -1
     (nil))
(insn 66 65 67 9 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])
        (const_int 1 [0x1])) "../src/io.f":147 -1
     (nil))
(insn 67 66 68 9 (set (reg:SI 124 [ _65 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 ilen+0 S4 A32])) "../src/io.f":148 -1
     (nil))
(insn 68 67 292 9 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 ipass+0 S4 A32])
        (const_int 1 [0x1])) "../src/io.f":148 -1
     (nil))
;;  succ:       10 (FALLTHRU)

;; basic block 10, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL)
;;  pred:       9 (FALLTHRU)
;;              31 (DFS_BACK)
(code_label 292 68 69 10 39 (nil) [1 uses])
(note 69 292 70 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 70 69 71 10 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [1 ipass+0 S4 A32])
            (reg:SI 124 [ _65 ]))) "../src/io.f":148 -1
     (nil))
(insn 71 70 72 10 (set (reg:QI 125 [ _67 ])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "../src/io.f":148 -1
     (nil))
(insn 72 71 73 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 125 [ _67 ])
            (const_int 0 [0]))) "../src/io.f":148 -1
     (nil))
(jump_insn 73 72 74 10 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 295)
            (pc))) "../src/io.f":148 -1
     (nil)
 -> 295)
;;  succ:       32
;;              11 (FALLTHRU)

;; basic block 11, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL)
;;  pred:       10 (FALLTHRU)
(note 74 73 75 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 75 74 76 11 (set (reg:SI 145)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])) "../src/io.f":150 -1
     (nil))
(insn 76 75 77 11 (parallel [
            (set (reg:SI 144)
                (plus:SI (reg:SI 145)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":150 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 77 76 78 11 (set (reg:DI 146)
        (sign_extend:DI (reg:SI 144))) "../src/io.f":150 -1
     (nil))
(insn 78 77 79 11 (set (reg/f:DI 147)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -536 [0xfffffffffffffde8])) [10 input+0 S8 A64])) "../src/io.f":150 -1
     (nil))
(insn 79 78 80 11 (parallel [
            (set (reg/f:DI 90 [ _4 ])
                (plus:DI (reg:DI 146)
                    (reg/f:DI 147)))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":150 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -536 [0xfffffffffffffde8])) [10 input+0 S8 A64])
            (reg:DI 146))
        (nil)))
(insn 80 79 81 11 (set (reg:SI 148)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 ilen+0 S4 A32])) "../src/io.f":150 -1
     (nil))
(insn 81 80 82 11 (parallel [
            (set (reg:SI 91 [ _5 ])
                (minus:SI (reg:SI 148)
                    (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":150 -1
     (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 ilen+0 S4 A32])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32]))
        (nil)))
(insn 82 81 84 11 (parallel [
            (set (reg:SI 92 [ _6 ])
                (plus:SI (reg:SI 91 [ _5 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":150 -1
     (nil))
(insn 84 82 83 11 (set (reg:SI 149)
        (const_int 0 [0])) "../src/io.f":150 -1
     (nil))
(insn 83 84 85 11 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 92 [ _6 ])
            (const_int 0 [0]))) "../src/io.f":150 -1
     (nil))
(insn 85 83 86 11 (set (reg:SI 93 [ _7 ])
        (if_then_else:SI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:SI 92 [ _6 ])
            (reg:SI 149))) "../src/io.f":150 -1
     (nil))
(insn 86 85 87 11 (set (reg:SI 37 r8)
        (const_int 0 [0])) "../src/io.f":150 -1
     (nil))
(insn 87 86 88 11 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*lC2") [flags 0x2]  <var_decl 0x143b722d0 *lC2>)) "../src/io.f":150 -1
     (nil))
(insn 88 87 89 11 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) "../src/io.f":150 -1
     (nil))
(insn 89 88 90 11 (set (reg:DI 4 si)
        (reg/f:DI 90 [ _4 ])) "../src/io.f":150 -1
     (nil))
(insn 90 89 91 11 (set (reg:SI 5 di)
        (reg:SI 93 [ _7 ])) "../src/io.f":150 -1
     (nil))
(call_insn/i 91 90 92 11 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_gfortran_string_index") [flags 0x41]  <function_decl 0x1439c4a00 _gfortran_string_index>) [0 _gfortran_string_index S1 A8])
            (const_int 0 [0]))) "../src/io.f":150 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (nil)))))))
(insn 92 91 93 11 (set (reg:SI 94 [ _8 ])
        (reg:SI 0 ax)) "../src/io.f":150 -1
     (nil))
(insn 93 92 94 11 (set (reg:SI 150)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])) "../src/io.f":150 -1
     (nil))
(insn 94 93 95 11 (parallel [
            (set (reg:SI 95 [ _9 ])
                (plus:SI (reg:SI 94 [ _8 ])
                    (reg:SI 150)))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":150 -1
     (expr_list:REG_EQUAL (plus:SI (reg:SI 94 [ _8 ])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32]))
        (nil)))
(insn 95 94 96 11 (parallel [
            (set (reg:SI 151)
                (plus:SI (reg:SI 95 [ _9 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":150 -1
     (nil))
(insn 96 95 97 11 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [1 kblk+0 S4 A32])
        (reg:SI 151)) "../src/io.f":150 -1
     (nil))
(insn 97 96 98 11 (set (reg:SI 153)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])) "../src/io.f":151 -1
     (nil))
(insn 98 97 99 11 (parallel [
            (set (reg:SI 152)
                (plus:SI (reg:SI 153)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":151 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 99 98 100 11 (set (reg:DI 154)
        (sign_extend:DI (reg:SI 152))) "../src/io.f":151 -1
     (nil))
(insn 100 99 101 11 (set (reg/f:DI 155)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -536 [0xfffffffffffffde8])) [10 input+0 S8 A64])) "../src/io.f":151 -1
     (nil))
(insn 101 100 102 11 (parallel [
            (set (reg/f:DI 96 [ _10 ])
                (plus:DI (reg:DI 154)
                    (reg/f:DI 155)))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":151 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -536 [0xfffffffffffffde8])) [10 input+0 S8 A64])
            (reg:DI 154))
        (nil)))
(insn 102 101 103 11 (set (reg:SI 156)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 ilen+0 S4 A32])) "../src/io.f":151 -1
     (nil))
(insn 103 102 104 11 (parallel [
            (set (reg:SI 97 [ _11 ])
                (minus:SI (reg:SI 156)
                    (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":151 -1
     (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 ilen+0 S4 A32])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32]))
        (nil)))
(insn 104 103 106 11 (parallel [
            (set (reg:SI 98 [ _12 ])
                (plus:SI (reg:SI 97 [ _11 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":151 -1
     (nil))
(insn 106 104 105 11 (set (reg:SI 157)
        (const_int 0 [0])) "../src/io.f":151 -1
     (nil))
(insn 105 106 107 11 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 98 [ _12 ])
            (const_int 0 [0]))) "../src/io.f":151 -1
     (nil))
(insn 107 105 108 11 (set (reg:SI 99 [ _13 ])
        (if_then_else:SI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:SI 98 [ _12 ])
            (reg:SI 157))) "../src/io.f":151 -1
     (nil))
(insn 108 107 109 11 (parallel [
            (set (reg:DI 158)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -45 [0xffffffffffffffd3])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":151 -1
     (nil))
(insn 109 108 110 11 (set (reg:SI 37 r8)
        (const_int 0 [0])) "../src/io.f":151 -1
     (nil))
(insn 110 109 111 11 (set (reg:DI 2 cx)
        (reg:DI 158)) "../src/io.f":151 -1
     (nil))
(insn 111 110 112 11 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) "../src/io.f":151 -1
     (nil))
(insn 112 111 113 11 (set (reg:DI 4 si)
        (reg/f:DI 96 [ _10 ])) "../src/io.f":151 -1
     (nil))
(insn 113 112 114 11 (set (reg:SI 5 di)
        (reg:SI 99 [ _13 ])) "../src/io.f":151 -1
     (nil))
(call_insn/i 114 113 115 11 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_gfortran_string_index") [flags 0x41]  <function_decl 0x1439c4a00 _gfortran_string_index>) [0 _gfortran_string_index S1 A8])
            (const_int 0 [0]))) "../src/io.f":151 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (nil)))))))
(insn 115 114 116 11 (set (reg:SI 100 [ _14 ])
        (reg:SI 0 ax)) "../src/io.f":151 -1
     (nil))
(insn 116 115 117 11 (set (reg:SI 159)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])) "../src/io.f":151 -1
     (nil))
(insn 117 116 118 11 (parallel [
            (set (reg:SI 101 [ _15 ])
                (plus:SI (reg:SI 100 [ _14 ])
                    (reg:SI 159)))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":151 -1
     (expr_list:REG_EQUAL (plus:SI (reg:SI 100 [ _14 ])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32]))
        (nil)))
(insn 118 117 119 11 (parallel [
            (set (reg:SI 160)
                (plus:SI (reg:SI 101 [ _15 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":151 -1
     (nil))
(insn 119 118 120 11 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [1 ktab+0 S4 A32])
        (reg:SI 160)) "../src/io.f":151 -1
     (nil))
(insn 120 119 121 11 (set (reg:SI 161)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])) "../src/io.f":153 -1
     (nil))
(insn 121 120 122 11 (parallel [
            (set (reg:SI 102 [ _16 ])
                (plus:SI (reg:SI 161)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":153 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 122 121 123 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [1 kblk+0 S4 A32])
            (reg:SI 102 [ _16 ]))) "../src/io.f":153 -1
     (nil))
(jump_insn 123 122 124 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 131)
            (pc))) "../src/io.f":153 -1
     (nil)
 -> 131)
;;  succ:       12 (FALLTHRU)
;;              13

;; basic block 12, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL)
;;  pred:       11 (FALLTHRU)
(note 124 123 128 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 128 124 129 12 (set (reg:SI 165)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 ilen+0 S4 A32])) "../src/io.f":153 -1
     (nil))
(insn 129 128 130 12 (parallel [
            (set (reg:SI 164)
                (plus:SI (reg:SI 165)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":153 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 ilen+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 130 129 131 12 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [1 kblk+0 S4 A32])
        (reg:SI 164)) "../src/io.f":153 -1
     (nil))
;;  succ:       13 (FALLTHRU)

;; basic block 13, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL)
;;  pred:       11
;;              12 (FALLTHRU)
(code_label 131 130 132 13 29 (nil) [1 uses])
(note 132 131 133 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 133 132 134 13 (set (reg:SI 166)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])) "../src/io.f":154 -1
     (nil))
(insn 134 133 135 13 (parallel [
            (set (reg:SI 103 [ _17 ])
                (plus:SI (reg:SI 166)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":154 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 135 134 136 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [1 ktab+0 S4 A32])
            (reg:SI 103 [ _17 ]))) "../src/io.f":154 -1
     (nil))
(jump_insn 136 135 137 13 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 144)
            (pc))) "../src/io.f":154 -1
     (nil)
 -> 144)
;;  succ:       14 (FALLTHRU)
;;              15

;; basic block 14, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 13, next block 15, flags: (NEW, REACHABLE, RTL)
;;  pred:       13 (FALLTHRU)
(note 137 136 141 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 141 137 142 14 (set (reg:SI 170)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 ilen+0 S4 A32])) "../src/io.f":154 -1
     (nil))
(insn 142 141 143 14 (parallel [
            (set (reg:SI 169)
                (plus:SI (reg:SI 170)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":154 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 ilen+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 143 142 144 14 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [1 ktab+0 S4 A32])
        (reg:SI 169)) "../src/io.f":154 -1
     (nil))
;;  succ:       15 (FALLTHRU)

;; basic block 15, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 14, next block 16, flags: (NEW, REACHABLE, RTL)
;;  pred:       13
;;              14 (FALLTHRU)
(code_label 144 143 145 15 30 (nil) [1 uses])
(note 145 144 146 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 146 145 147 15 (set (reg:SI 120 [ M.5_44 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [1 kblk+0 S4 A32])) "../src/io.f":156 -1
     (nil))
(insn 147 146 148 15 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [1 ktab+0 S4 A32])
            (reg:SI 120 [ M.5_44 ]))) "../src/io.f":156 -1
     (nil))
(jump_insn 148 147 149 15 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 151)
            (pc))) "../src/io.f":156 -1
     (nil)
 -> 151)
;;  succ:       16 (FALLTHRU)
;;              17

;; basic block 16, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 15, next block 17, flags: (NEW, REACHABLE, RTL)
;;  pred:       15 (FALLTHRU)
(note 149 148 150 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 150 149 151 16 (set (reg:SI 120 [ M.5_44 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [1 ktab+0 S4 A32])) "../src/io.f":156 -1
     (nil))
;;  succ:       17 (FALLTHRU)

;; basic block 17, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 16, next block 18, flags: (NEW, REACHABLE, RTL)
;;  pred:       15
;;              16 (FALLTHRU)
(code_label 151 150 152 17 31 (nil) [1 uses])
(note 152 151 153 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 153 152 154 17 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [1 kspace+0 S4 A32])
        (reg:SI 120 [ M.5_44 ])) "../src/io.f":156 -1
     (nil))
(insn 154 153 155 17 (set (reg:SI 171)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [1 kspace+0 S4 A32])) "../src/io.f":158 -1
     (nil))
(insn 155 154 156 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 171)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32]))) "../src/io.f":158 -1
     (nil))
(jump_insn 156 155 157 17 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 161)
            (pc))) "../src/io.f":158 -1
     (nil)
 -> 161)
;;  succ:       18 (FALLTHRU)
;;              19

;; basic block 18, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 17, next block 19, flags: (NEW, REACHABLE, RTL)
;;  pred:       17 (FALLTHRU)
(note 157 156 158 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 158 157 159 18 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":160 -1
     (nil))
(jump_insn 159 158 160 18 (set (pc)
        (label_ref 285)) "../src/io.f":161 -1
     (nil)
 -> 285)
;;  succ:       30

(barrier 160 159 161)
;; basic block 19, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 18, next block 20, flags: (NEW, REACHABLE, RTL)
;;  pred:       17
(code_label 161 160 162 19 32 (nil) [1 uses])
(note 162 161 163 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 163 162 164 19 (set (reg:SI 173)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])) "../src/io.f":165 -1
     (nil))
(insn 164 163 165 19 (parallel [
            (set (reg:SI 172)
                (plus:SI (reg:SI 173)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":165 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 165 164 166 19 (set (reg:DI 174)
        (sign_extend:DI (reg:SI 172))) "../src/io.f":165 -1
     (nil))
(insn 166 165 167 19 (set (reg/f:DI 175)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -536 [0xfffffffffffffde8])) [10 input+0 S8 A64])) "../src/io.f":165 -1
     (nil))
(insn 167 166 168 19 (parallel [
            (set (reg/f:DI 104 [ _18 ])
                (plus:DI (reg:DI 174)
                    (reg/f:DI 175)))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":165 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -536 [0xfffffffffffffde8])) [10 input+0 S8 A64])
            (reg:DI 174))
        (nil)))
(insn 168 167 169 19 (set (reg:SI 176)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 ilen+0 S4 A32])) "../src/io.f":165 -1
     (nil))
(insn 169 168 170 19 (parallel [
            (set (reg:SI 105 [ _19 ])
                (minus:SI (reg:SI 176)
                    (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":165 -1
     (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 ilen+0 S4 A32])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32]))
        (nil)))
(insn 170 169 172 19 (parallel [
            (set (reg:SI 106 [ _20 ])
                (plus:SI (reg:SI 105 [ _19 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":165 -1
     (nil))
(insn 172 170 171 19 (set (reg:SI 177)
        (const_int 0 [0])) "../src/io.f":165 -1
     (nil))
(insn 171 172 173 19 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 106 [ _20 ])
            (const_int 0 [0]))) "../src/io.f":165 -1
     (nil))
(insn 173 171 174 19 (set (reg:SI 107 [ _21 ])
        (if_then_else:SI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:SI 106 [ _20 ])
            (reg:SI 177))) "../src/io.f":165 -1
     (nil))
(insn 174 173 175 19 (set (reg:SI 37 r8)
        (const_int 0 [0])) "../src/io.f":165 -1
     (nil))
(insn 175 174 176 19 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*lC3") [flags 0x2]  <var_decl 0x143b72360 *lC3>)) "../src/io.f":165 -1
     (nil))
(insn 176 175 177 19 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) "../src/io.f":165 -1
     (nil))
(insn 177 176 178 19 (set (reg:DI 4 si)
        (reg/f:DI 104 [ _18 ])) "../src/io.f":165 -1
     (nil))
(insn 178 177 179 19 (set (reg:SI 5 di)
        (reg:SI 107 [ _21 ])) "../src/io.f":165 -1
     (nil))
(call_insn/i 179 178 180 19 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_gfortran_string_index") [flags 0x41]  <function_decl 0x1439c4a00 _gfortran_string_index>) [0 _gfortran_string_index S1 A8])
            (const_int 0 [0]))) "../src/io.f":165 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (nil)))))))
(insn 180 179 181 19 (set (reg:SI 108 [ _22 ])
        (reg:SI 0 ax)) "../src/io.f":165 -1
     (nil))
(insn 181 180 182 19 (set (reg:SI 178)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])) "../src/io.f":165 -1
     (nil))
(insn 182 181 183 19 (parallel [
            (set (reg:SI 109 [ _23 ])
                (plus:SI (reg:SI 108 [ _22 ])
                    (reg:SI 178)))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":165 -1
     (expr_list:REG_EQUAL (plus:SI (reg:SI 108 [ _22 ])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32]))
        (nil)))
(insn 183 182 184 19 (parallel [
            (set (reg:SI 179)
                (plus:SI (reg:SI 109 [ _23 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":165 -1
     (nil))
(insn 184 183 185 19 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 kcomma+0 S4 A32])
        (reg:SI 179)) "../src/io.f":165 -1
     (nil))
(insn 185 184 186 19 (set (reg:SI 180)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])) "../src/io.f":166 -1
     (nil))
(insn 186 185 187 19 (parallel [
            (set (reg:SI 110 [ _24 ])
                (plus:SI (reg:SI 180)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":166 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 187 186 188 19 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [1 kcomma+0 S4 A32])
            (reg:SI 110 [ _24 ]))) "../src/io.f":166 -1
     (nil))
(jump_insn 188 187 189 19 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 196)
            (pc))) "../src/io.f":166 -1
     (nil)
 -> 196)
;;  succ:       20 (FALLTHRU)
;;              21

;; basic block 20, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 19, next block 21, flags: (NEW, REACHABLE, RTL)
;;  pred:       19 (FALLTHRU)
(note 189 188 193 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 193 189 194 20 (set (reg:SI 184)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 ilen+0 S4 A32])) "../src/io.f":166 -1
     (nil))
(insn 194 193 195 20 (parallel [
            (set (reg:SI 183)
                (plus:SI (reg:SI 184)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":166 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 ilen+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 195 194 196 20 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 kcomma+0 S4 A32])
        (reg:SI 183)) "../src/io.f":166 -1
     (nil))
;;  succ:       21 (FALLTHRU)

;; basic block 21, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 20, next block 22, flags: (NEW, REACHABLE, RTL)
;;  pred:       19
;;              20 (FALLTHRU)
(code_label 196 195 197 21 34 (nil) [1 uses])
(note 197 196 198 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 198 197 199 21 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -28 [0xffffffffffffffe4])) [1 n+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -28 [0xffffffffffffffe4])) [1 n+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":169 -1
     (nil))
(insn 199 198 200 21 (set (reg:SI 185)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [1 n+0 S4 A32])) "../src/io.f":172 -1
     (nil))
(insn 200 199 201 21 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 185)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])) [1 ninp+0 S4 A32]))) "../src/io.f":172 -1
     (nil))
(jump_insn 201 200 202 21 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 295)
            (pc))) "../src/io.f":172 -1
     (nil)
 -> 295)
;;  succ:       32
;;              22 (FALLTHRU)

;; basic block 22, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 21, next block 23, flags: (NEW, REACHABLE, RTL)
;;  pred:       21 (FALLTHRU)
(note 202 201 203 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 203 202 204 22 (set (reg:SI 121 [ M.6_45 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [1 kspace+0 S4 A32])) "../src/io.f":175 -1
     (nil))
(insn 204 203 205 22 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [1 kcomma+0 S4 A32])
            (reg:SI 121 [ M.6_45 ]))) "../src/io.f":175 -1
     (nil))
(jump_insn 205 204 206 22 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 208)
            (pc))) "../src/io.f":175 -1
     (nil)
 -> 208)
;;  succ:       23 (FALLTHRU)
;;              24

;; basic block 23, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 22, next block 24, flags: (NEW, REACHABLE, RTL)
;;  pred:       22 (FALLTHRU)
(note 206 205 207 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 207 206 208 23 (set (reg:SI 121 [ M.6_45 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 kcomma+0 S4 A32])) "../src/io.f":175 -1
     (nil))
;;  succ:       24 (FALLTHRU)

;; basic block 24, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 23, next block 25, flags: (NEW, REACHABLE, RTL)
;;  pred:       22
;;              23 (FALLTHRU)
(code_label 208 207 209 24 35 (nil) [1 uses])
(note 209 208 210 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 210 209 211 24 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [1 kdelim+0 S4 A32])
        (reg:SI 121 [ M.6_45 ])) "../src/io.f":175 -1
     (nil))
(insn 211 210 212 24 (set (reg:SI 186)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])) "../src/io.f":177 -1
     (nil))
(insn 212 211 213 24 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 186)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [1 kdelim+0 S4 A32]))) "../src/io.f":177 -1
     (nil))
(jump_insn 213 212 214 24 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 218)
            (pc))) "../src/io.f":177 -1
     (nil)
 -> 218)
;;  succ:       25 (FALLTHRU)
;;              26

;; basic block 25, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 24, next block 26, flags: (NEW, REACHABLE, RTL)
;;  pred:       24 (FALLTHRU)
(note 214 213 215 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 215 214 216 25 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":179 -1
     (nil))
(jump_insn 216 215 217 25 (set (pc)
        (label_ref 285)) "../src/io.f":180 -1
     (nil)
 -> 285)
;;  succ:       30

(barrier 217 216 218)
;; basic block 26, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 25, next block 27, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       24
(code_label 218 217 219 26 36 (nil) [1 uses])
(note 219 218 223 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 223 219 224 26 (set (reg:SI 190)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [1 kdelim+0 S4 A32])) "../src/io.f":184 -1
     (nil))
(insn 224 223 225 26 (parallel [
            (set (reg:SI 189)
                (plus:SI (reg:SI 190)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":184 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [1 kdelim+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 225 224 226 26 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -44 [0xffffffffffffffd4])) [1 kend+0 S4 A32])
        (reg:SI 189)) "../src/io.f":184 -1
     (nil))
(insn 226 225 227 26 (set (reg/f:DI 191)
        (symbol_ref/f:DI ("*lC4") [flags 0x2]  <var_decl 0x143b723f0 *lC4>)) "../src/io.f":185 -1
     (nil))
(insn 227 226 228 26 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -520 [0xfffffffffffffdf8])) [5 dt_parm.7.common.filename+0 S8 A64])
        (reg/f:DI 191)) "../src/io.f":185 -1
     (nil))
(insn 228 227 229 26 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -512 [0xfffffffffffffe00])) [1 dt_parm.7.common.line+0 S4 A128])
        (const_int 185 [0xb9])) "../src/io.f":185 -1
     (nil))
(insn 229 228 230 26 (set (reg:SI 193)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])) "../src/io.f":185 -1
     (nil))
(insn 230 229 231 26 (parallel [
            (set (reg:SI 192)
                (plus:SI (reg:SI 193)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":185 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 231 230 232 26 (set (reg:DI 194)
        (sign_extend:DI (reg:SI 192))) "../src/io.f":185 -1
     (nil))
(insn 232 231 233 26 (set (reg/f:DI 195)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -536 [0xfffffffffffffde8])) [10 input+0 S8 A64])) "../src/io.f":185 -1
     (nil))
(insn 233 232 234 26 (parallel [
            (set (reg/f:DI 111 [ _25 ])
                (plus:DI (reg:DI 194)
                    (reg/f:DI 195)))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":185 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -536 [0xfffffffffffffde8])) [10 input+0 S8 A64])
            (reg:DI 194))
        (nil)))
(insn 234 233 235 26 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -432 [0xfffffffffffffe50])) [5 dt_parm.7.internal_unit+0 S8 A128])
        (reg/f:DI 111 [ _25 ])) "../src/io.f":185 -1
     (nil))
(insn 235 234 236 26 (set (reg:SI 196)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -44 [0xffffffffffffffd4])) [1 kend+0 S4 A32])) "../src/io.f":185 -1
     (nil))
(insn 236 235 237 26 (parallel [
            (set (reg:SI 112 [ _26 ])
                (minus:SI (reg:SI 196)
                    (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":185 -1
     (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -44 [0xffffffffffffffd4])) [1 kend+0 S4 A32])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32]))
        (nil)))
(insn 237 236 239 26 (parallel [
            (set (reg:SI 113 [ _27 ])
                (plus:SI (reg:SI 112 [ _26 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":185 -1
     (nil))
(insn 239 237 238 26 (set (reg:SI 197)
        (const_int 0 [0])) "../src/io.f":185 -1
     (nil))
(insn 238 239 240 26 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 113 [ _27 ])
            (const_int 0 [0]))) "../src/io.f":185 -1
     (nil))
(insn 240 238 241 26 (set (reg:SI 114 [ _28 ])
        (if_then_else:SI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:SI 113 [ _27 ])
            (reg:SI 197))) "../src/io.f":185 -1
     (nil))
(insn 241 240 242 26 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -424 [0xfffffffffffffe58])) [1 dt_parm.7.internal_unit_len+0 S4 A64])
        (reg:SI 114 [ _28 ])) "../src/io.f":185 -1
     (nil))
(insn 242 241 243 26 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -464 [0xfffffffffffffe30])) [5 dt_parm.7.internal_unit_desc+0 S8 A128])
        (const_int 0 [0])) "../src/io.f":185 -1
     (nil))
(insn 243 242 244 26 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -524 [0xfffffffffffffdf4])) [1 dt_parm.7.common.unit+0 S4 A32])
        (const_int -1 [0xffffffffffffffff])) "../src/io.f":185 -1
     (nil))
(insn 244 243 245 26 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -528 [0xfffffffffffffdf0])) [1 dt_parm.7.common.flags+0 S4 A128])
        (const_int 16516 [0x4084])) "../src/io.f":185 -1
     (nil))
(insn 245 244 246 26 (parallel [
            (set (reg:DI 198)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -528 [0xfffffffffffffdf0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":185 -1
     (nil))
(insn 246 245 247 26 (set (reg:DI 5 di)
        (reg:DI 198)) "../src/io.f":185 -1
     (nil))
(call_insn 247 246 248 26 (call (mem:QI (symbol_ref:DI ("_gfortran_st_read") [flags 0x41]  <function_decl 0x1439e0700 _gfortran_st_read>) [0 _gfortran_st_read S1 A8])
        (const_int 0 [0])) "../src/io.f":185 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 248 247 249 26 (set (reg:SI 199)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [1 n+0 S4 A32])) "../src/io.f":185 -1
     (nil))
(insn 249 248 250 26 (set (reg:DI 115 [ _29 ])
        (sign_extend:DI (reg:SI 199))) "../src/io.f":185 -1
     (nil))
(insn 250 249 251 26 (parallel [
            (set (reg:DI 116 [ _30 ])
                (plus:DI (reg:DI 115 [ _29 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":185 -1
     (nil))
(insn 251 250 252 26 (parallel [
            (set (reg:DI 200)
                (ashift:DI (reg:DI 116 [ _30 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":185 -1
     (nil))
(insn 252 251 253 26 (set (reg/f:DI 201)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -544 [0xfffffffffffffde0])) [14 rnum+0 S8 A64])) "../src/io.f":185 -1
     (nil))
(insn 253 252 254 26 (parallel [
            (set (reg/f:DI 117 [ _31 ])
                (plus:DI (reg:DI 200)
                    (reg/f:DI 201)))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":185 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -544 [0xfffffffffffffde0])) [14 rnum+0 S8 A64])
            (reg:DI 200))
        (nil)))
(insn 254 253 255 26 (parallel [
            (set (reg:DI 202)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -528 [0xfffffffffffffdf0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":185 -1
     (nil))
(insn 255 254 256 26 (set (reg:SI 1 dx)
        (const_int 4 [0x4])) "../src/io.f":185 -1
     (nil))
(insn 256 255 257 26 (set (reg:DI 4 si)
        (reg/f:DI 117 [ _31 ])) "../src/io.f":185 -1
     (nil))
(insn 257 256 258 26 (set (reg:DI 5 di)
        (reg:DI 202)) "../src/io.f":185 -1
     (nil))
(call_insn 258 257 259 26 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_real") [flags 0x41]  <function_decl 0x1439d4c00 _gfortran_transfer_real>) [0 _gfortran_transfer_real S1 A8])
        (const_int 0 [0])) "../src/io.f":185 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 259 258 260 26 (parallel [
            (set (reg:DI 203)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -528 [0xfffffffffffffdf0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":185 -1
     (nil))
(insn 260 259 261 26 (set (reg:DI 5 di)
        (reg:DI 203)) "../src/io.f":185 -1
     (nil))
(call_insn 261 260 262 26 (call (mem:QI (symbol_ref:DI ("_gfortran_st_read_done") [flags 0x41]  <function_decl 0x1439e4200 _gfortran_st_read_done>) [0 _gfortran_st_read_done S1 A8])
        (const_int 0 [0])) "../src/io.f":185 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 262 261 263 26 (set (reg:SI 118 [ _32 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -528 [0xfffffffffffffdf0])) [1 dt_parm.7.common.flags+0 S4 A128])) "../src/io.f":185 -1
     (nil))
(insn 263 262 264 26 (parallel [
            (set (reg:SI 119 [ _33 ])
                (and:SI (reg:SI 118 [ _32 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":185 -1
     (nil))
(insn 264 263 265 26 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 119 [ _33 ])
            (const_int 1 [0x1]))) "../src/io.f":185 -1
     (nil))
(jump_insn 265 264 305 26 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 268)
            (pc))) "../src/io.f":185 -1
     (nil)
 -> 268)
;;  succ:       28
;;              27 (FALLTHRU)

;; basic block 27, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 26, next block 28, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       26 (FALLTHRU)
(note 305 265 266 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(jump_insn 266 305 267 27 (set (pc)
        (label_ref 274)) "../src/io.f":185 -1
     (nil)
 -> 274)
;;  succ:       29

(barrier 267 266 268)
;; basic block 28, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 27, next block 29, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       26
(code_label 268 267 269 28 38 ("L.22") [1 uses])
(note 269 268 270 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 270 269 271 28 (set (reg/f:DI 204)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -560 [0xfffffffffffffdd0])) [12 error+0 S8 A64])) "../src/io.f":202 -1
     (nil))
(insn 271 270 272 28 (set (mem:SI (reg/f:DI 204) [13 *error_94(D)+0 S4 A32])
        (const_int 1 [0x1])) "../src/io.f":202 -1
     (nil))
(jump_insn 272 271 273 28 (set (pc)
        (label_ref:DI 303)) "../src/io.f":203 649 {jump}
     (nil)
 -> 303)
;;  succ:       35 [100.0%] 

(barrier 273 272 274)
;; basic block 29, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 28, next block 30, flags: (NEW, REACHABLE, RTL)
;;  pred:       27
(code_label 274 273 275 29 37 (nil) [1 uses])
(note 275 274 276 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 276 275 277 29 (set (reg/f:DI 205)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -552 [0xfffffffffffffdd8])) [11 nr+0 S8 A64])) "../src/io.f":186 -1
     (nil))
(insn 277 276 278 29 (set (reg:SI 206)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [1 n+0 S4 A32])) "../src/io.f":186 -1
     (nil))
(insn 278 277 282 29 (set (mem:SI (reg/f:DI 205) [1 *nr_59(D)+0 S4 A32])
        (reg:SI 206)) "../src/io.f":186 -1
     (nil))
(insn 282 278 283 29 (set (reg:SI 210)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [1 kdelim+0 S4 A32])) "../src/io.f":189 -1
     (nil))
(insn 283 282 284 29 (parallel [
            (set (reg:SI 209)
                (plus:SI (reg:SI 210)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":189 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [1 kdelim+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 284 283 285 29 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])
        (reg:SI 209)) "../src/io.f":189 -1
     (nil))
;;  succ:       30 (FALLTHRU)

;; basic block 30, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 29, next block 31, flags: (NEW, REACHABLE, RTL)
;;  pred:       18
;;              25
;;              29 (FALLTHRU)
(code_label 285 284 286 30 33 (nil) [2 uses])
(note 286 285 287 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 287 286 288 30 (set (reg:SI 211)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 k+0 S4 A32])) "../src/io.f":191 -1
     (nil))
(insn 288 287 289 30 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 211)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 ilen+0 S4 A32]))) "../src/io.f":191 -1
     (nil))
(jump_insn 289 288 290 30 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 295)
            (pc))) "../src/io.f":191 -1
     (nil)
 -> 295)
;;  succ:       32
;;              31 (FALLTHRU)

;; basic block 31, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 30, next block 32, flags: (NEW, REACHABLE, RTL)
;;  pred:       30 (FALLTHRU)
(note 290 289 291 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 291 290 293 31 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [1 ipass+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [1 ipass+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":148 -1
     (nil))
(jump_insn 293 291 294 31 (set (pc)
        (label_ref 292)) "../src/io.f":148 -1
     (nil)
 -> 292)
;;  succ:       10 (DFS_BACK)

(barrier 294 293 295)
;; basic block 32, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 31, next block 35, flags: (NEW, REACHABLE, RTL)
;;  pred:       10
;;              21
;;              30
(code_label 295 294 296 32 28 (nil) [3 uses])
(note 296 295 297 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 297 296 298 32 (set (reg/f:DI 212)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -560 [0xfffffffffffffdd0])) [12 error+0 S8 A64])) "../src/io.f":196 -1
     (nil))
(insn 298 297 306 32 (set (mem:SI (reg/f:DI 212) [13 *error_94(D)+0 S4 A32])
        (const_int 0 [0])) "../src/io.f":196 -1
     (nil))
(insn 306 298 303 32 (const_int 0 [0]) "../src/io.f":197 -1
     (nil))
;;  succ:       35 (FALLTHRU)

;; basic block 35, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 32, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       32 (FALLTHRU)
;;              8 [100.0%] 
;;              28 [100.0%] 
(code_label 303 306 304 35 23 (nil) [2 uses])
(note 304 303 0 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function fread (fread_, funcdef_no=2, decl_uid=3595, cgraph_uid=2, symbol_order=2)

fread (integer(kind=4) & restrict lu, character(kind=1)[1:_line] & restrict line, integer(kind=4) & restrict iline, integer(kind=4) & restrict ierr, character(kind=1)[1:_cval] & restrict cval, integer(kind=4) _line, integer(kind=4) _cval)
{
  integer(kind=4) D.3614;
  integer(kind=4) D.3613;
  integer(kind=4) D.3612;
  struct __st_parameter_dt dt_parm.8;
  sizetype D.3619;
  bitsizetype D.3618;
  sizetype D.3617;
  bitsizetype D.3616;
  integer(kind=4) kb;
  sizetype _1;
  bitsizetype _2;
  sizetype _3;
  bitsizetype _4;
  integer(kind=4) _5;
  integer(kind=4) _6;
  integer(kind=4) _7;
  integer(kind=4) _8;
  integer(kind=4) _9;
  integer(kind=4) _10;
  integer(kind=4) _11;
  integer(kind=4) _12;
  unsigned long _13;
  unsigned long _14;
  unsigned long _15;
  unsigned long _16;
  unsigned long _17;
  unsigned long _18;
  unsigned long _19;
  unsigned long _20;
  sizetype _21;
  void * _22;
  bitsizetype _28;
  sizetype _29;
  bitsizetype _31;
  sizetype _32;
  integer(kind=4) _53;
  integer(kind=4) _54;
  integer(kind=4) _55;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = (sizetype) _line_27(D);
  _2 = (bitsizetype) _1;
  _28 = _2 * 8;
  _29 = (sizetype) _line_27(D);
  _3 = (sizetype) _cval_30(D);
  _4 = (bitsizetype) _3;
  _31 = _4 * 8;
  _32 = (sizetype) _cval_30(D);
;;    succ:       3

;;   basic block 3, loop depth 1
;;    pred:       2
;;                5
;;                6
  _5 = *iline_34(D);
  _6 = _5 + 1;
  *iline_34(D) = _6;
  dt_parm.8.common.filename = &"../src/io.f"[1]{lb: 1 sz: 1};
  dt_parm.8.common.line = 27;
  dt_parm.8.format = &"(A)"[1]{lb: 1 sz: 1};
  dt_parm.8.format_len = 3;
  dt_parm.8.common.flags = 4104;
  _7 = *lu_41(D);
  dt_parm.8.common.unit = _7;
  _gfortran_st_read (&dt_parm.8);
  _gfortran_transfer_character (&dt_parm.8, line_44(D), _line_27(D));
  _gfortran_st_read_done (&dt_parm.8);
  _8 = dt_parm.8.common.flags;
  _9 = _8 & 3;
  switch (_9) <default: <L2> [0.00%], case 2: L.24 [0.00%]>
;;    succ:       5
;;                4

;;   basic block 4, loop depth 0
;;    pred:       3
L.24 [0.00%]:
  dt_parm.8 ={v} {CLOBBER};
  *ierr_48(D) = -1;
  goto <bb 13> (<L21>); [0.00%]
;;    succ:       13

;;   basic block 5, loop depth 1
;;    pred:       3
<L2> [0.00%]:
  dt_parm.8 ={v} {CLOBBER};
  _10 = _gfortran_string_index (2, &"#!"[1]{lb: 1 sz: 1}, 1, line_44(D), 0);
  if (_10 != 0)
    goto <bb 3>; [0.00%]
  else
    goto <bb 6>; [0.00%]
;;    succ:       3
;;                6

;;   basic block 6, loop depth 1
;;    pred:       5
  _11 = _gfortran_compare_string (_line_27(D), line_44(D), 1, &" "[1]{lb: 1 sz: 1});
  if (_11 == 0)
    goto <bb 3>; [0.00%]
  else
    goto <bb 7>; [0.00%]
;;    succ:       3
;;                7

;;   basic block 7, loop depth 0
;;    pred:       6
  _12 = _gfortran_string_index (_line_27(D), line_44(D), 1, &"!"[1]{lb: 1 sz: 1}, 0);
  kb_51 = _12 + -1;
  if (kb_51 <= 0)
    goto <bb 8>; [0.00%]
  else
    goto <bb 9>; [0.00%]
;;    succ:       8
;;                9

;;   basic block 8, loop depth 0
;;    pred:       7
  kb_52 = _line_27(D);
;;    succ:       9

;;   basic block 9, loop depth 0
;;    pred:       7
;;                8
  # kb_23 = PHI <kb_51(7), kb_52(8)>
  _53 = MAX_EXPR <kb_23, 0>;
  _54 = MAX_EXPR <kb_23, 0>;
  _55 = _cval_30(D);
  if (_55 != 0)
    goto <bb 10>; [0.00%]
  else
    goto <bb 12>; [0.00%]
;;    succ:       10
;;                12

;;   basic block 10, loop depth 0
;;    pred:       9
  _13 = (unsigned long) _55;
  _14 = (unsigned long) _54;
  _15 = MIN_EXPR <_13, _14>;
  __builtin_memmove (cval_56(D), line_44(D), _15);
  _16 = (unsigned long) _54;
  _17 = (unsigned long) _55;
  if (_16 < _17)
    goto <bb 11>; [0.00%]
  else
    goto <bb 12>; [0.00%]
;;    succ:       11
;;                12

;;   basic block 11, loop depth 0
;;    pred:       10
  _18 = (unsigned long) _55;
  _19 = (unsigned long) _54;
  _20 = _18 - _19;
  _21 = (sizetype) _54;
  _22 = cval_56(D) + _21;
  __builtin_memset (_22, 32, _20);
;;    succ:       12

;;   basic block 12, loop depth 0
;;    pred:       9
;;                11
;;                10
  *ierr_48(D) = 0;
;;    succ:       13

;;   basic block 13, loop depth 0
;;    pred:       12
;;                4
<L21> [0.00%]:
  return;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_1 - 1 )
Partition 2 (_2 - 2 )
Partition 3 (_3 - 3 )
Partition 4 (_4 - 4 )
Partition 5 (_5 - 5 )
Partition 6 (_6 - 6 )
Partition 7 (_7 - 7 )
Partition 8 (_8 - 8 )
Partition 9 (_9 - 9 )
Partition 10 (_10 - 10 )
Partition 11 (_11 - 11 )
Partition 12 (_12 - 12 )
Partition 13 (_13 - 13 )
Partition 14 (_14 - 14 )
Partition 15 (_15 - 15 )
Partition 16 (_16 - 16 )
Partition 17 (_17 - 17 )
Partition 18 (_18 - 18 )
Partition 19 (_19 - 19 )
Partition 20 (_20 - 20 )
Partition 21 (_21 - 21 )
Partition 22 (_22 - 22 )
Partition 23 (kb_23 - 23 )
Partition 27 (_line_27(D) - 27 )
Partition 28 (_28 - 28 )
Partition 29 (_29 - 29 )
Partition 30 (_cval_30(D) - 30 )
Partition 31 (_31 - 31 )
Partition 32 (_32 - 32 )
Partition 34 (iline_34(D) - 34 )
Partition 41 (lu_41(D) - 41 )
Partition 44 (line_44(D) - 44 )
Partition 48 (ierr_48(D) - 48 )
Partition 51 (kb_51 - 51 )
Partition 52 (kb_52 - 52 )
Partition 53 (_53 - 53 )
Partition 54 (_54 - 54 )
Partition 55 (_55 - 55 )
Partition 56 (cval_56(D) - 56 )


Partition map 

Partition 0 (kb_23 - 23 )
Partition 1 (_line_27(D) - 27 )
Partition 2 (_cval_30(D) - 30 )
Partition 3 (iline_34(D) - 34 )
Partition 4 (lu_41(D) - 41 )
Partition 5 (line_44(D) - 44 )
Partition 6 (ierr_48(D) - 48 )
Partition 7 (kb_51 - 51 )
Partition 8 (kb_52 - 52 )
Partition 9 (cval_56(D) - 56 )


Conflict graph:

After sorting:
Sorted Coalesce list:
(2147483646, 0) kb_23 <-> kb_51
(2147483646, 0) kb_23 <-> kb_52

Partition map 

Partition 0 (kb_23 - 23 )
Partition 1 (_line_27(D) - 27 )
Partition 2 (_cval_30(D) - 30 )
Partition 3 (iline_34(D) - 34 )
Partition 4 (lu_41(D) - 41 )
Partition 5 (line_44(D) - 44 )
Partition 6 (ierr_48(D) - 48 )
Partition 7 (kb_51 - 51 )
Partition 8 (kb_52 - 52 )
Partition 9 (cval_56(D) - 56 )

Coalesce list: (23)kb_23 & (51)kb_51 [map: 0, 7] : Success -> 0
Coalesce list: (23)kb_23 & (52)kb_52 [map: 0, 8] : Success -> 0
Coalesce list: (23)kb_23 & (52)kb_23: Already Coalesced.
After Coalescing:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (_2 - 2 )
Partition 2 (_3 - 3 )
Partition 3 (_4 - 4 )
Partition 4 (_5 - 5 )
Partition 5 (_6 - 6 )
Partition 6 (_7 - 7 )
Partition 7 (_8 - 8 )
Partition 8 (_9 - 9 )
Partition 9 (_10 - 10 )
Partition 10 (_11 - 11 )
Partition 11 (_12 - 12 )
Partition 12 (_13 - 13 )
Partition 13 (_14 - 14 )
Partition 14 (_15 - 15 )
Partition 15 (_16 - 16 )
Partition 16 (_17 - 17 )
Partition 17 (_18 - 18 )
Partition 18 (_19 - 19 )
Partition 19 (_20 - 20 )
Partition 20 (_21 - 21 )
Partition 21 (_22 - 22 )
Partition 22 (kb_23 - 23 51 52 )
Partition 23 (_line_27(D) - 27 )
Partition 24 (_28 - 28 )
Partition 25 (_29 - 29 )
Partition 26 (_cval_30(D) - 30 )
Partition 27 (_31 - 31 )
Partition 28 (_32 - 32 )
Partition 29 (iline_34(D) - 34 )
Partition 30 (lu_41(D) - 41 )
Partition 31 (line_44(D) - 44 )
Partition 32 (ierr_48(D) - 48 )
Partition 33 (_53 - 53 )
Partition 34 (_54 - 54 )
Partition 35 (_55 - 55 )
Partition 36 (cval_56(D) - 56 )

fread (integer(kind=4) & restrict lu, character(kind=1)[1:_line] & restrict line, integer(kind=4) & restrict iline, integer(kind=4) & restrict ierr, character(kind=1)[1:_cval] & restrict cval, integer(kind=4) _line, integer(kind=4) _cval)
{
  integer(kind=4) D.3614;
  integer(kind=4) D.3613;
  integer(kind=4) D.3612;
  struct __st_parameter_dt dt_parm.8;
  sizetype D.3619;
  bitsizetype D.3618;
  sizetype D.3617;
  bitsizetype D.3616;
  integer(kind=4) kb;
  sizetype _1;
  bitsizetype _2;
  sizetype _3;
  bitsizetype _4;
  integer(kind=4) _5;
  integer(kind=4) _6;
  integer(kind=4) _7;
  integer(kind=4) _8;
  integer(kind=4) _9;
  integer(kind=4) _10;
  integer(kind=4) _11;
  integer(kind=4) _12;
  unsigned long _13;
  unsigned long _14;
  unsigned long _15;
  unsigned long _16;
  unsigned long _17;
  unsigned long _18;
  unsigned long _19;
  unsigned long _20;
  sizetype _21;
  void * _22;
  bitsizetype _28;
  sizetype _29;
  bitsizetype _31;
  sizetype _32;
  integer(kind=4) _53;
  integer(kind=4) _54;
  integer(kind=4) _55;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = (sizetype) _line_27(D);
  _2 = (bitsizetype) _1;
  _28 = _2 * 8;
  _29 = (sizetype) _line_27(D);
  _3 = (sizetype) _cval_30(D);
  _4 = (bitsizetype) _3;
  _31 = _4 * 8;
  _32 = (sizetype) _cval_30(D);
;;    succ:       3

;;   basic block 3, loop depth 1
;;    pred:       2
;;                5
;;                6
  _5 = *iline_34(D);
  _6 = _5 + 1;
  *iline_34(D) = _6;
  dt_parm.8.common.filename = &"../src/io.f"[1]{lb: 1 sz: 1};
  dt_parm.8.common.line = 27;
  dt_parm.8.format = &"(A)"[1]{lb: 1 sz: 1};
  dt_parm.8.format_len = 3;
  dt_parm.8.common.flags = 4104;
  _7 = *lu_41(D);
  dt_parm.8.common.unit = _7;
  _gfortran_st_read (&dt_parm.8);
  _gfortran_transfer_character (&dt_parm.8, line_44(D), _line_27(D));
  _gfortran_st_read_done (&dt_parm.8);
  _8 = dt_parm.8.common.flags;
  _9 = _8 & 3;
  switch (_9) <default: <L2> [0.00%], case 2: L.24 [0.00%]>
;;    succ:       5
;;                4

;;   basic block 4, loop depth 0
;;    pred:       3
L.24 [0.00%]:
  dt_parm.8 ={v} {CLOBBER};
  *ierr_48(D) = -1;
  goto <bb 13> (<L21>); [0.00%]
;;    succ:       13

;;   basic block 5, loop depth 1
;;    pred:       3
<L2> [0.00%]:
  dt_parm.8 ={v} {CLOBBER};
  _10 = _gfortran_string_index (2, &"#!"[1]{lb: 1 sz: 1}, 1, line_44(D), 0);
  if (_10 != 0)
    goto <bb 3>; [0.00%]
  else
    goto <bb 6>; [0.00%]
;;    succ:       3
;;                6

;;   basic block 6, loop depth 1
;;    pred:       5
  _11 = _gfortran_compare_string (_line_27(D), line_44(D), 1, &" "[1]{lb: 1 sz: 1});
  if (_11 == 0)
    goto <bb 3>; [0.00%]
  else
    goto <bb 7>; [0.00%]
;;    succ:       3
;;                7

;;   basic block 7, loop depth 0
;;    pred:       6
  _12 = _gfortran_string_index (_line_27(D), line_44(D), 1, &"!"[1]{lb: 1 sz: 1}, 0);
  kb_51 = _12 + -1;
  if (kb_51 <= 0)
    goto <bb 8>; [0.00%]
  else
    goto <bb 9>; [0.00%]
;;    succ:       8
;;                9

;;   basic block 8, loop depth 0
;;    pred:       7
  kb_52 = _line_27(D);
;;    succ:       9

;;   basic block 9, loop depth 0
;;    pred:       7
;;                8
  # kb_23 = PHI <kb_51(7), kb_52(8)>
  _53 = MAX_EXPR <kb_23, 0>;
  _54 = MAX_EXPR <kb_23, 0>;
  _55 = _cval_30(D);
  if (_55 != 0)
    goto <bb 10>; [0.00%]
  else
    goto <bb 12>; [0.00%]
;;    succ:       10
;;                12

;;   basic block 10, loop depth 0
;;    pred:       9
  _13 = (unsigned long) _55;
  _14 = (unsigned long) _54;
  _15 = MIN_EXPR <_13, _14>;
  __builtin_memmove (cval_56(D), line_44(D), _15);
  _16 = (unsigned long) _54;
  _17 = (unsigned long) _55;
  if (_16 < _17)
    goto <bb 11>; [0.00%]
  else
    goto <bb 12>; [0.00%]
;;    succ:       11
;;                12

;;   basic block 11, loop depth 0
;;    pred:       10
  _18 = (unsigned long) _55;
  _19 = (unsigned long) _54;
  _20 = _18 - _19;
  _21 = (sizetype) _54;
  _22 = cval_56(D) + _21;
  __builtin_memset (_22, 32, _20);
;;    succ:       12

;;   basic block 12, loop depth 0
;;    pred:       9
;;                11
;;                10
  *ierr_48(D) = 0;
;;    succ:       13

;;   basic block 13, loop depth 0
;;    pred:       12
;;                4
<L21> [0.00%]:
  return;
;;    succ:       EXIT

}


Partition 0: size 480 align 16
	dt_parm.8

;; Generating RTL for gimple basic block 2

;; _1 = (sizetype) _line_27(D);

(insn 11 10 12 (set (reg:SI 116)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -540 [0xfffffffffffffde4])) [1 _line+0 S4 A32])) "../src/io.f":45 -1
     (nil))

(insn 12 11 0 (set (reg:DI 87 [ _1 ])
        (sign_extend:DI (reg:SI 116))) "../src/io.f":45 -1
     (nil))

;; _2 = (bitsizetype) _1;

(insn 13 12 14 (set (subreg:DI (reg:TI 88 [ _2 ]) 0)
        (reg:DI 87 [ _1 ])) "../src/io.f":45 -1
     (nil))

(insn 14 13 0 (set (subreg:DI (reg:TI 88 [ _2 ]) 8)
        (const_int 0 [0])) "../src/io.f":45 -1
     (nil))

;; _28 = _2 * 8;

(insn 15 14 0 (parallel [
            (set (reg:TI 109 [ _28 ])
                (ashift:TI (reg:TI 88 [ _2 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":45 -1
     (nil))

;; _29 = (sizetype) _line_27(D);

(insn 16 15 17 (set (reg:SI 117)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -540 [0xfffffffffffffde4])) [1 _line+0 S4 A32])) "../src/io.f":45 -1
     (nil))

(insn 17 16 0 (set (reg:DI 110 [ _29 ])
        (sign_extend:DI (reg:SI 117))) "../src/io.f":45 -1
     (nil))

;; _3 = (sizetype) _cval_30(D);

(insn 18 17 19 (set (reg:SI 118)
        (mem/c:SI (reg/f:DI 81 virtual-incoming-args) [1 _cval+0 S4 A64])) "../src/io.f":45 -1
     (nil))

(insn 19 18 0 (set (reg:DI 89 [ _3 ])
        (sign_extend:DI (reg:SI 118))) "../src/io.f":45 -1
     (nil))

;; _4 = (bitsizetype) _3;

(insn 20 19 21 (set (subreg:DI (reg:TI 90 [ _4 ]) 0)
        (reg:DI 89 [ _3 ])) "../src/io.f":45 -1
     (nil))

(insn 21 20 0 (set (subreg:DI (reg:TI 90 [ _4 ]) 8)
        (const_int 0 [0])) "../src/io.f":45 -1
     (nil))

;; _31 = _4 * 8;

(insn 22 21 0 (parallel [
            (set (reg:TI 111 [ _31 ])
                (ashift:TI (reg:TI 90 [ _4 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":45 -1
     (nil))

;; _32 = (sizetype) _cval_30(D);

(insn 23 22 24 (set (reg:SI 119)
        (mem/c:SI (reg/f:DI 81 virtual-incoming-args) [1 _cval+0 S4 A64])) "../src/io.f":45 -1
     (nil))

(insn 24 23 0 (set (reg:DI 112 [ _32 ])
        (sign_extend:DI (reg:SI 119))) "../src/io.f":45 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; _5 = *iline_34(D);

(insn 26 25 27 (set (reg/f:DI 120)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -520 [0xfffffffffffffdf8])) [11 iline+0 S8 A64])) "../src/io.f":25 -1
     (nil))

(insn 27 26 0 (set (reg:SI 91 [ _5 ])
        (mem:SI (reg/f:DI 120) [1 *iline_34(D)+0 S4 A32])) "../src/io.f":25 -1
     (nil))

;; _6 = _5 + 1;

(insn 28 27 0 (parallel [
            (set (reg:SI 92 [ _6 ])
                (plus:SI (reg:SI 91 [ _5 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":25 -1
     (nil))

;; *iline_34(D) = _6;

(insn 29 28 30 (set (reg/f:DI 121)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -520 [0xfffffffffffffdf8])) [11 iline+0 S8 A64])) "../src/io.f":25 -1
     (nil))

(insn 30 29 0 (set (mem:SI (reg/f:DI 121) [1 *iline_34(D)+0 S4 A32])
        (reg:SI 92 [ _6 ])) "../src/io.f":25 -1
     (nil))

;; dt_parm.8.common.filename = &"../src/io.f"[1]{lb: 1 sz: 1};

(insn 31 30 32 (set (reg/f:DI 122)
        (symbol_ref/f:DI ("*lC4") [flags 0x2]  <var_decl 0x143b723f0 *lC4>)) "../src/io.f":27 -1
     (nil))

(insn 32 31 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -488 [0xfffffffffffffe18])) [5 dt_parm.8.common.filename+0 S8 A64])
        (reg/f:DI 122)) "../src/io.f":27 -1
     (nil))

;; dt_parm.8.common.line = 27;

(insn 33 32 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -480 [0xfffffffffffffe20])) [1 dt_parm.8.common.line+0 S4 A128])
        (const_int 27 [0x1b])) "../src/io.f":27 -1
     (nil))

;; dt_parm.8.format = &"(A)"[1]{lb: 1 sz: 1};

(insn 34 33 35 (set (reg/f:DI 123)
        (symbol_ref/f:DI ("*lC5") [flags 0x2]  <var_decl 0x143ba4c60 *lC5>)) "../src/io.f":27 -1
     (nil))

(insn 35 34 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -424 [0xfffffffffffffe58])) [5 dt_parm.8.format+0 S8 A64])
        (reg/f:DI 123)) "../src/io.f":27 -1
     (nil))

;; dt_parm.8.format_len = 3;

(insn 36 35 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -416 [0xfffffffffffffe60])) [1 dt_parm.8.format_len+0 S4 A128])
        (const_int 3 [0x3])) "../src/io.f":27 -1
     (nil))

;; dt_parm.8.common.flags = 4104;

(insn 37 36 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -496 [0xfffffffffffffe10])) [1 dt_parm.8.common.flags+0 S4 A128])
        (const_int 4104 [0x1008])) "../src/io.f":27 -1
     (nil))

;; _7 = *lu_41(D);

(insn 38 37 39 (set (reg/f:DI 124)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -504 [0xfffffffffffffe08])) [11 lu+0 S8 A64])) "../src/io.f":27 -1
     (nil))

(insn 39 38 0 (set (reg:SI 93 [ _7 ])
        (mem:SI (reg/f:DI 124) [1 *lu_41(D)+0 S4 A32])) "../src/io.f":27 -1
     (nil))

;; dt_parm.8.common.unit = _7;

(insn 40 39 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -492 [0xfffffffffffffe14])) [1 dt_parm.8.common.unit+0 S4 A32])
        (reg:SI 93 [ _7 ])) "../src/io.f":27 -1
     (nil))

;; _gfortran_st_read (&dt_parm.8);

(insn 41 40 42 (parallel [
            (set (reg:DI 125)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -496 [0xfffffffffffffe10])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":27 -1
     (nil))

(insn 42 41 43 (set (reg:DI 5 di)
        (reg:DI 125)) "../src/io.f":27 -1
     (nil))

(call_insn 43 42 0 (call (mem:QI (symbol_ref:DI ("_gfortran_st_read") [flags 0x41]  <function_decl 0x1439e0700 _gfortran_st_read>) [0 _gfortran_st_read S1 A8])
        (const_int 0 [0])) "../src/io.f":27 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; _gfortran_transfer_character (&dt_parm.8, line_44(D), _line_27(D));

(insn 44 43 45 (set (reg:SI 126)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -540 [0xfffffffffffffde4])) [1 _line+0 S4 A32])) "../src/io.f":27 -1
     (nil))

(insn 45 44 46 (set (reg:DI 127)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -512 [0xfffffffffffffe00])) [10 line+0 S8 A64])) "../src/io.f":27 -1
     (nil))

(insn 46 45 47 (parallel [
            (set (reg:DI 128)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -496 [0xfffffffffffffe10])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":27 -1
     (nil))

(insn 47 46 48 (set (reg:SI 1 dx)
        (reg:SI 126)) "../src/io.f":27 -1
     (nil))

(insn 48 47 49 (set (reg:DI 4 si)
        (reg:DI 127)) "../src/io.f":27 -1
     (nil))

(insn 49 48 50 (set (reg:DI 5 di)
        (reg:DI 128)) "../src/io.f":27 -1
     (nil))

(call_insn 50 49 0 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_character") [flags 0x41]  <function_decl 0x1439d4800 _gfortran_transfer_character>) [0 _gfortran_transfer_character S1 A8])
        (const_int 0 [0])) "../src/io.f":27 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))

;; _gfortran_st_read_done (&dt_parm.8);

(insn 51 50 52 (parallel [
            (set (reg:DI 129)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -496 [0xfffffffffffffe10])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":27 -1
     (nil))

(insn 52 51 53 (set (reg:DI 5 di)
        (reg:DI 129)) "../src/io.f":27 -1
     (nil))

(call_insn 53 52 0 (call (mem:QI (symbol_ref:DI ("_gfortran_st_read_done") [flags 0x41]  <function_decl 0x1439e4200 _gfortran_st_read_done>) [0 _gfortran_st_read_done S1 A8])
        (const_int 0 [0])) "../src/io.f":27 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; _8 = dt_parm.8.common.flags;

(insn 54 53 0 (set (reg:SI 94 [ _8 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -496 [0xfffffffffffffe10])) [1 dt_parm.8.common.flags+0 S4 A128])) "../src/io.f":27 -1
     (nil))

;; _9 = _8 & 3;

(insn 55 54 0 (parallel [
            (set (reg:SI 95 [ _9 ])
                (and:SI (reg:SI 94 [ _8 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":27 -1
     (nil))
;; Expanding GIMPLE switch as decision tree:
;;        2

;; switch (_9) <default: <L2> [0.00%], case 2: L.24 [0.00%]>

(insn 56 55 57 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 95 [ _9 ])
            (const_int 2 [0x2]))) "../src/io.f":27 -1
     (nil))

(jump_insn 57 56 58 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "../src/io.f":27 -1
     (nil))

(jump_insn 58 57 59 (set (pc)
        (label_ref 0)) "../src/io.f":27 -1
     (nil))

(barrier 59 58 0)

;; Generating RTL for gimple basic block 4

;; L.24 [0.00%]:

(code_label 60 59 61 45 ("L.24") [0 uses])

(note 61 60 0 NOTE_INSN_BASIC_BLOCK)

;; dt_parm.8 ={v} {CLOBBER};

(nil)

;; *ierr_48(D) = -1;

(insn 62 61 63 (set (reg/f:DI 130)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -528 [0xfffffffffffffdf0])) [11 ierr+0 S8 A64])) "../src/io.f":43 -1
     (nil))

(insn 63 62 0 (set (mem:SI (reg/f:DI 130) [1 *ierr_48(D)+0 S4 A32])
        (const_int -1 [0xffffffffffffffff])) "../src/io.f":43 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; <L2> [0.00%]:

(code_label 66 65 67 44 (nil) [0 uses])

(note 67 66 0 NOTE_INSN_BASIC_BLOCK)

;; dt_parm.8 ={v} {CLOBBER};

(nil)

;; _10 = _gfortran_string_index (2, &"#!"[1]{lb: 1 sz: 1}, 1, line_44(D), 0);

(insn 68 67 69 (set (reg:DI 131)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -512 [0xfffffffffffffe00])) [10 line+0 S8 A64])) "../src/io.f":30 -1
     (nil))

(insn 69 68 70 (set (reg:SI 37 r8)
        (const_int 0 [0])) "../src/io.f":30 -1
     (nil))

(insn 70 69 71 (set (reg:DI 2 cx)
        (reg:DI 131)) "../src/io.f":30 -1
     (nil))

(insn 71 70 72 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) "../src/io.f":30 -1
     (nil))

(insn 72 71 73 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*lC6") [flags 0x2]  <var_decl 0x143ba4cf0 *lC6>)) "../src/io.f":30 -1
     (nil))

(insn 73 72 74 (set (reg:SI 5 di)
        (const_int 2 [0x2])) "../src/io.f":30 -1
     (nil))

(call_insn/i 74 73 75 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_gfortran_string_index") [flags 0x41]  <function_decl 0x1439c4a00 _gfortran_string_index>) [0 _gfortran_string_index S1 A8])
            (const_int 0 [0]))) "../src/io.f":30 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (nil)))))))

(insn 75 74 0 (set (reg:SI 96 [ _10 ])
        (reg:SI 0 ax)) "../src/io.f":30 -1
     (nil))

;; if (_10 != 0)

(insn 77 75 78 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 96 [ _10 ])
            (const_int 0 [0]))) "../src/io.f":30 -1
     (nil))

(jump_insn 78 77 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 76)
            (pc))) "../src/io.f":30 -1
     (nil))

;; Generating RTL for gimple basic block 6

;; _11 = _gfortran_compare_string (_line_27(D), line_44(D), 1, &" "[1]{lb: 1 sz: 1});

(insn 80 79 81 (set (reg:DI 132)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -512 [0xfffffffffffffe00])) [10 line+0 S8 A64])) "../src/io.f":31 -1
     (nil))

(insn 81 80 82 (set (reg:SI 133)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -540 [0xfffffffffffffde4])) [1 _line+0 S4 A32])) "../src/io.f":31 -1
     (nil))

(insn 82 81 83 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*lC2") [flags 0x2]  <var_decl 0x143b722d0 *lC2>)) "../src/io.f":31 -1
     (nil))

(insn 83 82 84 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) "../src/io.f":31 -1
     (nil))

(insn 84 83 85 (set (reg:DI 4 si)
        (reg:DI 132)) "../src/io.f":31 -1
     (nil))

(insn 85 84 86 (set (reg:SI 5 di)
        (reg:SI 133)) "../src/io.f":31 -1
     (nil))

(call_insn/i 86 85 87 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_gfortran_compare_string") [flags 0x41]  <function_decl 0x1439c4700 _gfortran_compare_string>) [0 _gfortran_compare_string S1 A8])
            (const_int 0 [0]))) "../src/io.f":31 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))

(insn 87 86 0 (set (reg:SI 97 [ _11 ])
        (reg:SI 0 ax)) "../src/io.f":31 -1
     (nil))

;; if (_11 == 0)

(insn 88 87 89 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 97 [ _11 ])
            (const_int 0 [0]))) "../src/io.f":31 -1
     (nil))

(jump_insn 89 88 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 76)
            (pc))) "../src/io.f":31 -1
     (nil))

;; Generating RTL for gimple basic block 7

;; _12 = _gfortran_string_index (_line_27(D), line_44(D), 1, &"!"[1]{lb: 1 sz: 1}, 0);

(insn 91 90 92 (set (reg:DI 134)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -512 [0xfffffffffffffe00])) [10 line+0 S8 A64])) "../src/io.f":33 -1
     (nil))

(insn 92 91 93 (set (reg:SI 135)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -540 [0xfffffffffffffde4])) [1 _line+0 S4 A32])) "../src/io.f":33 -1
     (nil))

(insn 93 92 94 (set (reg:SI 37 r8)
        (const_int 0 [0])) "../src/io.f":33 -1
     (nil))

(insn 94 93 95 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*lC1") [flags 0x2]  <var_decl 0x143b72240 *lC1>)) "../src/io.f":33 -1
     (nil))

(insn 95 94 96 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) "../src/io.f":33 -1
     (nil))

(insn 96 95 97 (set (reg:DI 4 si)
        (reg:DI 134)) "../src/io.f":33 -1
     (nil))

(insn 97 96 98 (set (reg:SI 5 di)
        (reg:SI 135)) "../src/io.f":33 -1
     (nil))

(call_insn/i 98 97 99 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_gfortran_string_index") [flags 0x41]  <function_decl 0x1439c4a00 _gfortran_string_index>) [0 _gfortran_string_index S1 A8])
            (const_int 0 [0]))) "../src/io.f":33 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (nil)))))))

(insn 99 98 0 (set (reg:SI 98 [ _12 ])
        (reg:SI 0 ax)) "../src/io.f":33 -1
     (nil))

;; kb_51 = _12 + -1;

(insn 100 99 101 (parallel [
            (set (reg:SI 136)
                (plus:SI (reg:SI 98 [ _12 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":33 -1
     (nil))

(insn 101 100 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 kb+0 S4 A32])
        (reg:SI 136)) "../src/io.f":33 -1
     (nil))

;; if (kb_51 <= 0)

(insn 102 101 103 (set (reg:CCNO 17 flags)
        (compare:CCNO (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 kb+0 S4 A32])
            (const_int 0 [0]))) "../src/io.f":34 -1
     (nil))

(jump_insn 103 102 0 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "../src/io.f":34 -1
     (nil))

;; Generating RTL for gimple basic block 8

;; kb_52 = _line_27(D);

(insn 105 104 106 (set (reg:SI 137)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -540 [0xfffffffffffffde4])) [1 _line+0 S4 A32])) "../src/io.f":34 -1
     (nil))

(insn 106 105 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 kb+0 S4 A32])
        (reg:SI 137)) "../src/io.f":34 -1
     (nil))

;; Generating RTL for gimple basic block 9

;; 

(code_label 107 106 108 48 (nil) [0 uses])

(note 108 107 0 NOTE_INSN_BASIC_BLOCK)

;; _53 = MAX_EXPR <kb_23, 0>;

(insn 110 108 109 (set (reg:SI 138)
        (const_int 0 [0])) "../src/io.f":36 -1
     (nil))

(insn 109 110 111 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 kb+0 S4 A32])
            (const_int 0 [0]))) "../src/io.f":36 -1
     (nil))

(insn 111 109 0 (set (reg:SI 113 [ _53 ])
        (if_then_else:SI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 kb+0 S4 A32])
            (reg:SI 138))) "../src/io.f":36 -1
     (nil))

;; _54 = MAX_EXPR <kb_23, 0>;

(insn 113 111 112 (set (reg:SI 139)
        (const_int 0 [0])) "../src/io.f":36 -1
     (nil))

(insn 112 113 114 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 kb+0 S4 A32])
            (const_int 0 [0]))) "../src/io.f":36 -1
     (nil))

(insn 114 112 0 (set (reg:SI 114 [ _54 ])
        (if_then_else:SI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 kb+0 S4 A32])
            (reg:SI 139))) "../src/io.f":36 -1
     (nil))

;; _55 = _cval_30(D);

(insn 115 114 0 (set (reg:SI 115 [ _55 ])
        (mem/c:SI (reg/f:DI 81 virtual-incoming-args) [1 _cval+0 S4 A64])) "../src/io.f":36 -1
     (nil))

;; if (_55 != 0)

(insn 116 115 117 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 115 [ _55 ])
            (const_int 0 [0]))) "../src/io.f":36 -1
     (nil))

(jump_insn 117 116 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "../src/io.f":36 -1
     (nil))

;; Generating RTL for gimple basic block 10

;; _13 = (unsigned long) _55;

(insn 119 118 0 (set (reg:DI 99 [ _13 ])
        (sign_extend:DI (reg:SI 115 [ _55 ]))) "../src/io.f":36 -1
     (nil))

;; _14 = (unsigned long) _54;

(insn 120 119 0 (set (reg:DI 100 [ _14 ])
        (sign_extend:DI (reg:SI 114 [ _54 ]))) "../src/io.f":36 -1
     (nil))

;; _15 = MIN_EXPR <_13, _14>;

(insn 121 120 122 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 99 [ _13 ])
            (reg:DI 100 [ _14 ]))) "../src/io.f":36 -1
     (nil))

(insn 122 121 0 (set (reg:DI 101 [ _15 ])
        (if_then_else:DI (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (reg:DI 99 [ _13 ])
            (reg:DI 100 [ _14 ]))) "../src/io.f":36 -1
     (nil))

;; __builtin_memmove (cval_56(D), line_44(D), _15);

(insn 123 122 124 (set (reg:DI 140)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -512 [0xfffffffffffffe00])) [10 line+0 S8 A64])) "../src/io.f":36 -1
     (nil))

(insn 124 123 125 (set (reg:DI 141)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -536 [0xfffffffffffffde8])) [10 cval+0 S8 A64])) "../src/io.f":36 -1
     (nil))

(insn 125 124 126 (set (reg:DI 1 dx)
        (reg:DI 101 [ _15 ])) "../src/io.f":36 -1
     (nil))

(insn 126 125 127 (set (reg:DI 4 si)
        (reg:DI 140)) "../src/io.f":36 -1
     (nil))

(insn 127 126 128 (set (reg:DI 5 di)
        (reg:DI 141)) "../src/io.f":36 -1
     (nil))

(call_insn 128 127 0 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memmove") [flags 0x41]  <function_decl 0x14386f400 __builtin_memmove>) [0 __builtin_memmove S1 A8])
            (const_int 0 [0]))) "../src/io.f":36 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))

;; _16 = (unsigned long) _54;

(insn 129 128 0 (set (reg:DI 102 [ _16 ])
        (sign_extend:DI (reg:SI 114 [ _54 ]))) "../src/io.f":36 -1
     (nil))

;; _17 = (unsigned long) _55;

(insn 130 129 0 (set (reg:DI 103 [ _17 ])
        (sign_extend:DI (reg:SI 115 [ _55 ]))) "../src/io.f":36 -1
     (nil))

;; if (_16 < _17)

(insn 131 130 132 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 102 [ _16 ])
            (reg:DI 103 [ _17 ]))) "../src/io.f":36 -1
     (nil))

(jump_insn 132 131 0 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "../src/io.f":36 -1
     (nil))

;; Generating RTL for gimple basic block 11

;; _18 = (unsigned long) _55;

(insn 134 133 0 (set (reg:DI 104 [ _18 ])
        (sign_extend:DI (reg:SI 115 [ _55 ]))) "../src/io.f":36 -1
     (nil))

;; _19 = (unsigned long) _54;

(insn 135 134 0 (set (reg:DI 105 [ _19 ])
        (sign_extend:DI (reg:SI 114 [ _54 ]))) "../src/io.f":36 -1
     (nil))

;; _20 = _18 - _19;

(insn 136 135 0 (parallel [
            (set (reg:DI 106 [ _20 ])
                (minus:DI (reg:DI 104 [ _18 ])
                    (reg:DI 105 [ _19 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":36 -1
     (nil))

;; _21 = (sizetype) _54;

(insn 137 136 0 (set (reg:DI 107 [ _21 ])
        (sign_extend:DI (reg:SI 114 [ _54 ]))) "../src/io.f":36 -1
     (nil))

;; _22 = cval_56(D) + _21;

(insn 138 137 139 (set (reg/f:DI 142)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -536 [0xfffffffffffffde8])) [10 cval+0 S8 A64])) "../src/io.f":36 -1
     (nil))

(insn 139 138 0 (parallel [
            (set (reg/f:DI 108 [ _22 ])
                (plus:DI (reg:DI 107 [ _21 ])
                    (reg/f:DI 142)))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":36 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -536 [0xfffffffffffffde8])) [10 cval+0 S8 A64])
            (reg:DI 107 [ _21 ]))
        (nil)))
Applying pattern match.pd:836, generic-match.c:64
Applying pattern match.pd:873, generic-match.c:13046
Applying pattern match.pd:1221, generic-match.c:4912
Applying pattern match.pd:84, generic-match.c:11356
Applying pattern match.pd:1814, generic-match.c:9559
Applying pattern match.pd:148, generic-match.c:6836

;; __builtin_memset (_22, 32, _20);

(insn 140 139 141 (set (reg:DI 1 dx)
        (reg:DI 106 [ _20 ])) "../src/io.f":36 -1
     (nil))

(insn 141 140 142 (set (reg:SI 4 si)
        (const_int 32 [0x20])) "../src/io.f":36 -1
     (nil))

(insn 142 141 143 (set (reg:DI 5 di)
        (reg/f:DI 108 [ _22 ])) "../src/io.f":36 -1
     (nil))

(call_insn 143 142 0 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memset") [flags 0x41]  <function_decl 0x14386f600 __builtin_memset>) [0 __builtin_memset S1 A8])
            (const_int 0 [0]))) "../src/io.f":36 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))

;; Generating RTL for gimple basic block 12

;; 

(code_label 144 143 145 49 (nil) [0 uses])

(note 145 144 0 NOTE_INSN_BASIC_BLOCK)

;; *ierr_48(D) = 0;

(insn 146 145 147 (set (reg/f:DI 143)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -528 [0xfffffffffffffdf0])) [11 ierr+0 S8 A64])) "../src/io.f":37 -1
     (nil))

(insn 147 146 0 (set (mem:SI (reg/f:DI 143) [1 *ierr_48(D)+0 S4 A32])
        (const_int 0 [0])) "../src/io.f":37 -1
     (nil))

;; Generating RTL for gimple basic block 13

;; <L21> [0.00%]:

(code_label 148 147 149 46 (nil) [0 uses])

(note 149 148 0 NOTE_INSN_BASIC_BLOCK)
Purged edges from bb 16


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 4->5 to 7 failed.
Redirecting jump 64 from 15 to 16.
Merging block 15 into block 14...
Merged blocks 14 and 15.
Merged 14 and 15 without moving.


try_optimize_cfg iteration 2

Forwarding edge 4->5 to 7 failed.
fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 9 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 9 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 9 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -504 [0xfffffffffffffe08])) [11 lu+0 S8 A64])
        (reg:DI 5 di [ lu ])) "../src/io.f":21 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -512 [0xfffffffffffffe00])) [10 line+0 S8 A64])
        (reg:DI 4 si [ line ])) "../src/io.f":21 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -520 [0xfffffffffffffdf8])) [11 iline+0 S8 A64])
        (reg:DI 1 dx [ iline ])) "../src/io.f":21 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -528 [0xfffffffffffffdf0])) [11 ierr+0 S8 A64])
        (reg:DI 2 cx [ ierr ])) "../src/io.f":21 -1
     (nil))
(insn 6 5 7 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -536 [0xfffffffffffffde8])) [10 cval+0 S8 A64])
        (reg:DI 37 r8 [ cval ])) "../src/io.f":21 -1
     (nil))
(insn 7 6 8 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -540 [0xfffffffffffffde4])) [1 _line+0 S4 A32])
        (reg:SI 38 r9 [ _line ])) "../src/io.f":21 -1
     (nil))
(note 8 7 11 2 NOTE_INSN_FUNCTION_BEG)
(insn 11 8 12 2 (set (reg:SI 116)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -540 [0xfffffffffffffde4])) [1 _line+0 S4 A32])) "../src/io.f":45 -1
     (nil))
(insn 12 11 13 2 (set (reg:DI 87 [ _1 ])
        (sign_extend:DI (reg:SI 116))) "../src/io.f":45 -1
     (nil))
(insn 13 12 14 2 (set (subreg:DI (reg:TI 88 [ _2 ]) 0)
        (reg:DI 87 [ _1 ])) "../src/io.f":45 -1
     (nil))
(insn 14 13 15 2 (set (subreg:DI (reg:TI 88 [ _2 ]) 8)
        (const_int 0 [0])) "../src/io.f":45 -1
     (nil))
(insn 15 14 16 2 (parallel [
            (set (reg:TI 109 [ _28 ])
                (ashift:TI (reg:TI 88 [ _2 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":45 -1
     (nil))
(insn 16 15 17 2 (set (reg:SI 117)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -540 [0xfffffffffffffde4])) [1 _line+0 S4 A32])) "../src/io.f":45 -1
     (nil))
(insn 17 16 18 2 (set (reg:DI 110 [ _29 ])
        (sign_extend:DI (reg:SI 117))) "../src/io.f":45 -1
     (nil))
(insn 18 17 19 2 (set (reg:SI 118)
        (mem/c:SI (reg/f:DI 81 virtual-incoming-args) [1 _cval+0 S4 A64])) "../src/io.f":45 -1
     (nil))
(insn 19 18 20 2 (set (reg:DI 89 [ _3 ])
        (sign_extend:DI (reg:SI 118))) "../src/io.f":45 -1
     (nil))
(insn 20 19 21 2 (set (subreg:DI (reg:TI 90 [ _4 ]) 0)
        (reg:DI 89 [ _3 ])) "../src/io.f":45 -1
     (nil))
(insn 21 20 22 2 (set (subreg:DI (reg:TI 90 [ _4 ]) 8)
        (const_int 0 [0])) "../src/io.f":45 -1
     (nil))
(insn 22 21 23 2 (parallel [
            (set (reg:TI 111 [ _31 ])
                (ashift:TI (reg:TI 90 [ _4 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":45 -1
     (nil))
(insn 23 22 24 2 (set (reg:SI 119)
        (mem/c:SI (reg/f:DI 81 virtual-incoming-args) [1 _cval+0 S4 A64])) "../src/io.f":45 -1
     (nil))
(insn 24 23 76 2 (set (reg:DI 112 [ _32 ])
        (sign_extend:DI (reg:SI 119))) "../src/io.f":45 -1
     (nil))
;;  succ:       4 (FALLTHRU)

;; basic block 4, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;;              7 (DFS_BACK)
;;              8 (DFS_BACK)
(code_label 76 24 25 4 47 (nil) [2 uses])
(note 25 76 26 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 4 (set (reg/f:DI 120)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -520 [0xfffffffffffffdf8])) [11 iline+0 S8 A64])) "../src/io.f":25 -1
     (nil))
(insn 27 26 28 4 (set (reg:SI 91 [ _5 ])
        (mem:SI (reg/f:DI 120) [1 *iline_34(D)+0 S4 A32])) "../src/io.f":25 -1
     (nil))
(insn 28 27 29 4 (parallel [
            (set (reg:SI 92 [ _6 ])
                (plus:SI (reg:SI 91 [ _5 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":25 -1
     (nil))
(insn 29 28 30 4 (set (reg/f:DI 121)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -520 [0xfffffffffffffdf8])) [11 iline+0 S8 A64])) "../src/io.f":25 -1
     (nil))
(insn 30 29 31 4 (set (mem:SI (reg/f:DI 121) [1 *iline_34(D)+0 S4 A32])
        (reg:SI 92 [ _6 ])) "../src/io.f":25 -1
     (nil))
(insn 31 30 32 4 (set (reg/f:DI 122)
        (symbol_ref/f:DI ("*lC4") [flags 0x2]  <var_decl 0x143b723f0 *lC4>)) "../src/io.f":27 -1
     (nil))
(insn 32 31 33 4 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -488 [0xfffffffffffffe18])) [5 dt_parm.8.common.filename+0 S8 A64])
        (reg/f:DI 122)) "../src/io.f":27 -1
     (nil))
(insn 33 32 34 4 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -480 [0xfffffffffffffe20])) [1 dt_parm.8.common.line+0 S4 A128])
        (const_int 27 [0x1b])) "../src/io.f":27 -1
     (nil))
(insn 34 33 35 4 (set (reg/f:DI 123)
        (symbol_ref/f:DI ("*lC5") [flags 0x2]  <var_decl 0x143ba4c60 *lC5>)) "../src/io.f":27 -1
     (nil))
(insn 35 34 36 4 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -424 [0xfffffffffffffe58])) [5 dt_parm.8.format+0 S8 A64])
        (reg/f:DI 123)) "../src/io.f":27 -1
     (nil))
(insn 36 35 37 4 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -416 [0xfffffffffffffe60])) [1 dt_parm.8.format_len+0 S4 A128])
        (const_int 3 [0x3])) "../src/io.f":27 -1
     (nil))
(insn 37 36 38 4 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -496 [0xfffffffffffffe10])) [1 dt_parm.8.common.flags+0 S4 A128])
        (const_int 4104 [0x1008])) "../src/io.f":27 -1
     (nil))
(insn 38 37 39 4 (set (reg/f:DI 124)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -504 [0xfffffffffffffe08])) [11 lu+0 S8 A64])) "../src/io.f":27 -1
     (nil))
(insn 39 38 40 4 (set (reg:SI 93 [ _7 ])
        (mem:SI (reg/f:DI 124) [1 *lu_41(D)+0 S4 A32])) "../src/io.f":27 -1
     (nil))
(insn 40 39 41 4 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -492 [0xfffffffffffffe14])) [1 dt_parm.8.common.unit+0 S4 A32])
        (reg:SI 93 [ _7 ])) "../src/io.f":27 -1
     (nil))
(insn 41 40 42 4 (parallel [
            (set (reg:DI 125)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -496 [0xfffffffffffffe10])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":27 -1
     (nil))
(insn 42 41 43 4 (set (reg:DI 5 di)
        (reg:DI 125)) "../src/io.f":27 -1
     (nil))
(call_insn 43 42 44 4 (call (mem:QI (symbol_ref:DI ("_gfortran_st_read") [flags 0x41]  <function_decl 0x1439e0700 _gfortran_st_read>) [0 _gfortran_st_read S1 A8])
        (const_int 0 [0])) "../src/io.f":27 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 44 43 45 4 (set (reg:SI 126)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -540 [0xfffffffffffffde4])) [1 _line+0 S4 A32])) "../src/io.f":27 -1
     (nil))
(insn 45 44 46 4 (set (reg:DI 127)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -512 [0xfffffffffffffe00])) [10 line+0 S8 A64])) "../src/io.f":27 -1
     (nil))
(insn 46 45 47 4 (parallel [
            (set (reg:DI 128)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -496 [0xfffffffffffffe10])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":27 -1
     (nil))
(insn 47 46 48 4 (set (reg:SI 1 dx)
        (reg:SI 126)) "../src/io.f":27 -1
     (nil))
(insn 48 47 49 4 (set (reg:DI 4 si)
        (reg:DI 127)) "../src/io.f":27 -1
     (nil))
(insn 49 48 50 4 (set (reg:DI 5 di)
        (reg:DI 128)) "../src/io.f":27 -1
     (nil))
(call_insn 50 49 51 4 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_character") [flags 0x41]  <function_decl 0x1439d4800 _gfortran_transfer_character>) [0 _gfortran_transfer_character S1 A8])
        (const_int 0 [0])) "../src/io.f":27 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 51 50 52 4 (parallel [
            (set (reg:DI 129)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -496 [0xfffffffffffffe10])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":27 -1
     (nil))
(insn 52 51 53 4 (set (reg:DI 5 di)
        (reg:DI 129)) "../src/io.f":27 -1
     (nil))
(call_insn 53 52 54 4 (call (mem:QI (symbol_ref:DI ("_gfortran_st_read_done") [flags 0x41]  <function_decl 0x1439e4200 _gfortran_st_read_done>) [0 _gfortran_st_read_done S1 A8])
        (const_int 0 [0])) "../src/io.f":27 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 54 53 55 4 (set (reg:SI 94 [ _8 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -496 [0xfffffffffffffe10])) [1 dt_parm.8.common.flags+0 S4 A128])) "../src/io.f":27 -1
     (nil))
(insn 55 54 56 4 (parallel [
            (set (reg:SI 95 [ _9 ])
                (and:SI (reg:SI 94 [ _8 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":27 -1
     (nil))
(insn 56 55 57 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 95 [ _9 ])
            (const_int 2 [0x2]))) "../src/io.f":27 -1
     (nil))
(jump_insn 57 56 152 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 60)
            (pc))) "../src/io.f":27 -1
     (nil)
 -> 60)
;;  succ:       6
;;              5 (FALLTHRU)

;; basic block 5, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
(note 152 57 58 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(jump_insn 58 152 59 5 (set (pc)
        (label_ref 66)) "../src/io.f":27 -1
     (nil)
 -> 66)
;;  succ:       7

(barrier 59 58 60)
;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4
(code_label 60 59 61 6 45 ("L.24") [1 uses])
(note 61 60 62 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 62 61 63 6 (set (reg/f:DI 130)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -528 [0xfffffffffffffdf0])) [11 ierr+0 S8 A64])) "../src/io.f":43 -1
     (nil))
(insn 63 62 64 6 (set (mem:SI (reg/f:DI 130) [1 *ierr_48(D)+0 S4 A32])
        (const_int -1 [0xffffffffffffffff])) "../src/io.f":43 -1
     (nil))
(jump_insn 64 63 65 6 (set (pc)
        (label_ref:DI 150)) "../src/io.f":44 649 {jump}
     (nil)
 -> 150)
;;  succ:       16 [100.0%] 

(barrier 65 64 66)
;; basic block 7, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       5
(code_label 66 65 67 7 44 (nil) [1 uses])
(note 67 66 68 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 68 67 69 7 (set (reg:DI 131)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -512 [0xfffffffffffffe00])) [10 line+0 S8 A64])) "../src/io.f":30 -1
     (nil))
(insn 69 68 70 7 (set (reg:SI 37 r8)
        (const_int 0 [0])) "../src/io.f":30 -1
     (nil))
(insn 70 69 71 7 (set (reg:DI 2 cx)
        (reg:DI 131)) "../src/io.f":30 -1
     (nil))
(insn 71 70 72 7 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) "../src/io.f":30 -1
     (nil))
(insn 72 71 73 7 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*lC6") [flags 0x2]  <var_decl 0x143ba4cf0 *lC6>)) "../src/io.f":30 -1
     (nil))
(insn 73 72 74 7 (set (reg:SI 5 di)
        (const_int 2 [0x2])) "../src/io.f":30 -1
     (nil))
(call_insn/i 74 73 75 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_gfortran_string_index") [flags 0x41]  <function_decl 0x1439c4a00 _gfortran_string_index>) [0 _gfortran_string_index S1 A8])
            (const_int 0 [0]))) "../src/io.f":30 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (nil)))))))
(insn 75 74 77 7 (set (reg:SI 96 [ _10 ])
        (reg:SI 0 ax)) "../src/io.f":30 -1
     (nil))
(insn 77 75 78 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 96 [ _10 ])
            (const_int 0 [0]))) "../src/io.f":30 -1
     (nil))
(jump_insn 78 77 79 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 76)
            (pc))) "../src/io.f":30 -1
     (nil)
 -> 76)
;;  succ:       4 (DFS_BACK)
;;              8 (FALLTHRU)

;; basic block 8, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL)
;;  pred:       7 (FALLTHRU)
(note 79 78 80 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 80 79 81 8 (set (reg:DI 132)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -512 [0xfffffffffffffe00])) [10 line+0 S8 A64])) "../src/io.f":31 -1
     (nil))
(insn 81 80 82 8 (set (reg:SI 133)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -540 [0xfffffffffffffde4])) [1 _line+0 S4 A32])) "../src/io.f":31 -1
     (nil))
(insn 82 81 83 8 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*lC2") [flags 0x2]  <var_decl 0x143b722d0 *lC2>)) "../src/io.f":31 -1
     (nil))
(insn 83 82 84 8 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) "../src/io.f":31 -1
     (nil))
(insn 84 83 85 8 (set (reg:DI 4 si)
        (reg:DI 132)) "../src/io.f":31 -1
     (nil))
(insn 85 84 86 8 (set (reg:SI 5 di)
        (reg:SI 133)) "../src/io.f":31 -1
     (nil))
(call_insn/i 86 85 87 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_gfortran_compare_string") [flags 0x41]  <function_decl 0x1439c4700 _gfortran_compare_string>) [0 _gfortran_compare_string S1 A8])
            (const_int 0 [0]))) "../src/io.f":31 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 87 86 88 8 (set (reg:SI 97 [ _11 ])
        (reg:SI 0 ax)) "../src/io.f":31 -1
     (nil))
(insn 88 87 89 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 97 [ _11 ])
            (const_int 0 [0]))) "../src/io.f":31 -1
     (nil))
(jump_insn 89 88 90 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 76)
            (pc))) "../src/io.f":31 -1
     (nil)
 -> 76)
;;  succ:       4 (DFS_BACK)
;;              9 (FALLTHRU)

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL)
;;  pred:       8 (FALLTHRU)
(note 90 89 91 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 91 90 92 9 (set (reg:DI 134)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -512 [0xfffffffffffffe00])) [10 line+0 S8 A64])) "../src/io.f":33 -1
     (nil))
(insn 92 91 93 9 (set (reg:SI 135)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -540 [0xfffffffffffffde4])) [1 _line+0 S4 A32])) "../src/io.f":33 -1
     (nil))
(insn 93 92 94 9 (set (reg:SI 37 r8)
        (const_int 0 [0])) "../src/io.f":33 -1
     (nil))
(insn 94 93 95 9 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*lC1") [flags 0x2]  <var_decl 0x143b72240 *lC1>)) "../src/io.f":33 -1
     (nil))
(insn 95 94 96 9 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) "../src/io.f":33 -1
     (nil))
(insn 96 95 97 9 (set (reg:DI 4 si)
        (reg:DI 134)) "../src/io.f":33 -1
     (nil))
(insn 97 96 98 9 (set (reg:SI 5 di)
        (reg:SI 135)) "../src/io.f":33 -1
     (nil))
(call_insn/i 98 97 99 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_gfortran_string_index") [flags 0x41]  <function_decl 0x1439c4a00 _gfortran_string_index>) [0 _gfortran_string_index S1 A8])
            (const_int 0 [0]))) "../src/io.f":33 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (nil)))))))
(insn 99 98 100 9 (set (reg:SI 98 [ _12 ])
        (reg:SI 0 ax)) "../src/io.f":33 -1
     (nil))
(insn 100 99 101 9 (parallel [
            (set (reg:SI 136)
                (plus:SI (reg:SI 98 [ _12 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":33 -1
     (nil))
(insn 101 100 102 9 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 kb+0 S4 A32])
        (reg:SI 136)) "../src/io.f":33 -1
     (nil))
(insn 102 101 103 9 (set (reg:CCNO 17 flags)
        (compare:CCNO (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 kb+0 S4 A32])
            (const_int 0 [0]))) "../src/io.f":34 -1
     (nil))
(jump_insn 103 102 104 9 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 107)
            (pc))) "../src/io.f":34 -1
     (nil)
 -> 107)
;;  succ:       10 (FALLTHRU)
;;              11

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL)
;;  pred:       9 (FALLTHRU)
(note 104 103 105 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 105 104 106 10 (set (reg:SI 137)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -540 [0xfffffffffffffde4])) [1 _line+0 S4 A32])) "../src/io.f":34 -1
     (nil))
(insn 106 105 107 10 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 kb+0 S4 A32])
        (reg:SI 137)) "../src/io.f":34 -1
     (nil))
;;  succ:       11 (FALLTHRU)

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL)
;;  pred:       9
;;              10 (FALLTHRU)
(code_label 107 106 108 11 48 (nil) [1 uses])
(note 108 107 110 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 110 108 109 11 (set (reg:SI 138)
        (const_int 0 [0])) "../src/io.f":36 -1
     (nil))
(insn 109 110 111 11 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 kb+0 S4 A32])
            (const_int 0 [0]))) "../src/io.f":36 -1
     (nil))
(insn 111 109 113 11 (set (reg:SI 113 [ _53 ])
        (if_then_else:SI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 kb+0 S4 A32])
            (reg:SI 138))) "../src/io.f":36 -1
     (nil))
(insn 113 111 112 11 (set (reg:SI 139)
        (const_int 0 [0])) "../src/io.f":36 -1
     (nil))
(insn 112 113 114 11 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 kb+0 S4 A32])
            (const_int 0 [0]))) "../src/io.f":36 -1
     (nil))
(insn 114 112 115 11 (set (reg:SI 114 [ _54 ])
        (if_then_else:SI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 kb+0 S4 A32])
            (reg:SI 139))) "../src/io.f":36 -1
     (nil))
(insn 115 114 116 11 (set (reg:SI 115 [ _55 ])
        (mem/c:SI (reg/f:DI 81 virtual-incoming-args) [1 _cval+0 S4 A64])) "../src/io.f":36 -1
     (nil))
(insn 116 115 117 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 115 [ _55 ])
            (const_int 0 [0]))) "../src/io.f":36 -1
     (nil))
(jump_insn 117 116 118 11 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 144)
            (pc))) "../src/io.f":36 -1
     (nil)
 -> 144)
;;  succ:       12 (FALLTHRU)
;;              14

;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL)
;;  pred:       11 (FALLTHRU)
(note 118 117 119 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 119 118 120 12 (set (reg:DI 99 [ _13 ])
        (sign_extend:DI (reg:SI 115 [ _55 ]))) "../src/io.f":36 -1
     (nil))
(insn 120 119 121 12 (set (reg:DI 100 [ _14 ])
        (sign_extend:DI (reg:SI 114 [ _54 ]))) "../src/io.f":36 -1
     (nil))
(insn 121 120 122 12 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 99 [ _13 ])
            (reg:DI 100 [ _14 ]))) "../src/io.f":36 -1
     (nil))
(insn 122 121 123 12 (set (reg:DI 101 [ _15 ])
        (if_then_else:DI (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (reg:DI 99 [ _13 ])
            (reg:DI 100 [ _14 ]))) "../src/io.f":36 -1
     (nil))
(insn 123 122 124 12 (set (reg:DI 140)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -512 [0xfffffffffffffe00])) [10 line+0 S8 A64])) "../src/io.f":36 -1
     (nil))
(insn 124 123 125 12 (set (reg:DI 141)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -536 [0xfffffffffffffde8])) [10 cval+0 S8 A64])) "../src/io.f":36 -1
     (nil))
(insn 125 124 126 12 (set (reg:DI 1 dx)
        (reg:DI 101 [ _15 ])) "../src/io.f":36 -1
     (nil))
(insn 126 125 127 12 (set (reg:DI 4 si)
        (reg:DI 140)) "../src/io.f":36 -1
     (nil))
(insn 127 126 128 12 (set (reg:DI 5 di)
        (reg:DI 141)) "../src/io.f":36 -1
     (nil))
(call_insn 128 127 129 12 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memmove") [flags 0x41]  <function_decl 0x14386f400 __builtin_memmove>) [0 __builtin_memmove S1 A8])
            (const_int 0 [0]))) "../src/io.f":36 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 129 128 130 12 (set (reg:DI 102 [ _16 ])
        (sign_extend:DI (reg:SI 114 [ _54 ]))) "../src/io.f":36 -1
     (nil))
(insn 130 129 131 12 (set (reg:DI 103 [ _17 ])
        (sign_extend:DI (reg:SI 115 [ _55 ]))) "../src/io.f":36 -1
     (nil))
(insn 131 130 132 12 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 102 [ _16 ])
            (reg:DI 103 [ _17 ]))) "../src/io.f":36 -1
     (nil))
(jump_insn 132 131 133 12 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 144)
            (pc))) "../src/io.f":36 -1
     (nil)
 -> 144)
;;  succ:       13 (FALLTHRU)
;;              14

;; basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL)
;;  pred:       12 (FALLTHRU)
(note 133 132 134 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 134 133 135 13 (set (reg:DI 104 [ _18 ])
        (sign_extend:DI (reg:SI 115 [ _55 ]))) "../src/io.f":36 -1
     (nil))
(insn 135 134 136 13 (set (reg:DI 105 [ _19 ])
        (sign_extend:DI (reg:SI 114 [ _54 ]))) "../src/io.f":36 -1
     (nil))
(insn 136 135 137 13 (parallel [
            (set (reg:DI 106 [ _20 ])
                (minus:DI (reg:DI 104 [ _18 ])
                    (reg:DI 105 [ _19 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":36 -1
     (nil))
(insn 137 136 138 13 (set (reg:DI 107 [ _21 ])
        (sign_extend:DI (reg:SI 114 [ _54 ]))) "../src/io.f":36 -1
     (nil))
(insn 138 137 139 13 (set (reg/f:DI 142)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -536 [0xfffffffffffffde8])) [10 cval+0 S8 A64])) "../src/io.f":36 -1
     (nil))
(insn 139 138 140 13 (parallel [
            (set (reg/f:DI 108 [ _22 ])
                (plus:DI (reg:DI 107 [ _21 ])
                    (reg/f:DI 142)))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":36 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -536 [0xfffffffffffffde8])) [10 cval+0 S8 A64])
            (reg:DI 107 [ _21 ]))
        (nil)))
(insn 140 139 141 13 (set (reg:DI 1 dx)
        (reg:DI 106 [ _20 ])) "../src/io.f":36 -1
     (nil))
(insn 141 140 142 13 (set (reg:SI 4 si)
        (const_int 32 [0x20])) "../src/io.f":36 -1
     (nil))
(insn 142 141 143 13 (set (reg:DI 5 di)
        (reg/f:DI 108 [ _22 ])) "../src/io.f":36 -1
     (nil))
(call_insn 143 142 144 13 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memset") [flags 0x41]  <function_decl 0x14386f600 __builtin_memset>) [0 __builtin_memset S1 A8])
            (const_int 0 [0]))) "../src/io.f":36 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       14 (FALLTHRU)

;; basic block 14, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 13, next block 16, flags: (NEW, REACHABLE, RTL)
;;  pred:       11
;;              13 (FALLTHRU)
;;              12
(code_label 144 143 145 14 49 (nil) [2 uses])
(note 145 144 146 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 146 145 147 14 (set (reg/f:DI 143)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -528 [0xfffffffffffffdf0])) [11 ierr+0 S8 A64])) "../src/io.f":37 -1
     (nil))
(insn 147 146 153 14 (set (mem:SI (reg/f:DI 143) [1 *ierr_48(D)+0 S4 A32])
        (const_int 0 [0])) "../src/io.f":37 -1
     (nil))
(insn 153 147 150 14 (const_int 0 [0]) "../src/io.f":38 -1
     (nil))
;;  succ:       16 (FALLTHRU)

;; basic block 16, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 14, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       14 (FALLTHRU)
;;              6 [100.0%] 
(code_label 150 153 151 16 43 (nil) [1 uses])
(note 151 150 0 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function rread (rread_, funcdef_no=3, decl_uid=3621, cgraph_uid=3, symbol_order=3)

rread (integer(kind=4) & restrict lu, character(kind=1)[1:_line] & restrict line, integer(kind=4) & restrict iline, integer(kind=4) & restrict ierr, integer(kind=4) & restrict nval, real(kind=4)[0:] * restrict val, integer(kind=4) _line)
{
  struct __st_parameter_dt dt_parm.9;
  sizetype D.3641;
  bitsizetype D.3640;
  integer(kind=4) kb;
  logical(kind=4) error;
  sizetype _1;
  bitsizetype _2;
  integer(kind=4) _3;
  integer(kind=4) _4;
  integer(kind=4) _5;
  integer(kind=4) _6;
  integer(kind=4) _7;
  integer(kind=4) _8;
  integer(kind=4) _9;
  integer(kind=4) _10;
  integer(kind=4) _11;
  logical(kind=4) error.18_12;
  bitsizetype _18;
  sizetype _19;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = (sizetype) _line_17(D);
  _2 = (bitsizetype) _1;
  _18 = _2 * 8;
  _19 = (sizetype) _line_17(D);
;;    succ:       3

;;   basic block 3, loop depth 1
;;    pred:       2
;;                5
;;                6
  _3 = *iline_21(D);
  _4 = _3 + 1;
  *iline_21(D) = _4;
  dt_parm.9.common.filename = &"../src/io.f"[1]{lb: 1 sz: 1};
  dt_parm.9.common.line = 57;
  dt_parm.9.format = &"(A)"[1]{lb: 1 sz: 1};
  dt_parm.9.format_len = 3;
  dt_parm.9.common.flags = 4104;
  _5 = *lu_28(D);
  dt_parm.9.common.unit = _5;
  _gfortran_st_read (&dt_parm.9);
  _gfortran_transfer_character (&dt_parm.9, line_31(D), _line_17(D));
  _gfortran_st_read_done (&dt_parm.9);
  _6 = dt_parm.9.common.flags;
  _7 = _6 & 3;
  switch (_7) <default: <L2> [0.00%], case 2: L.28 [0.00%]>
;;    succ:       5
;;                4

;;   basic block 4, loop depth 0
;;    pred:       3
L.28 [0.00%]:
  dt_parm.9 ={v} {CLOBBER};
  *ierr_35(D) = -1;
  goto <bb 13>; [0.00%]
;;    succ:       13

;;   basic block 5, loop depth 1
;;    pred:       3
<L2> [0.00%]:
  dt_parm.9 ={v} {CLOBBER};
  _8 = _gfortran_string_index (2, &"#!"[1]{lb: 1 sz: 1}, 1, line_31(D), 0);
  if (_8 != 0)
    goto <bb 3>; [0.00%]
  else
    goto <bb 6>; [0.00%]
;;    succ:       3
;;                6

;;   basic block 6, loop depth 1
;;    pred:       5
  _9 = _gfortran_compare_string (_line_17(D), line_31(D), 1, &" "[1]{lb: 1 sz: 1});
  if (_9 == 0)
    goto <bb 3>; [0.00%]
  else
    goto <bb 7>; [0.00%]
;;    succ:       3
;;                7

;;   basic block 7, loop depth 0
;;    pred:       6
  _10 = _gfortran_string_index (_line_17(D), line_31(D), 1, &"!"[1]{lb: 1 sz: 1}, 0);
  kb_38 = _10 + -1;
  if (kb_38 <= 0)
    goto <bb 8>; [0.00%]
  else
    goto <bb 9>; [0.00%]
;;    succ:       8
;;                9

;;   basic block 8, loop depth 0
;;    pred:       7
  kb_39 = _line_17(D);
;;    succ:       9

;;   basic block 9, loop depth 0
;;    pred:       7
;;                8
  # kb_13 = PHI <kb_38(7), kb_39(8)>
  _11 = MAX_EXPR <kb_13, 0>;
  getflt (line_31(D), val_40(D), nval_41(D), &error, _11);
  error.18_12 = error;
  if (error.18_12 != 0)
    goto <bb 10>; [0.00%]
  else
    goto <bb 11>; [0.00%]
;;    succ:       10
;;                11

;;   basic block 10, loop depth 0
;;    pred:       9
  *ierr_35(D) = 1;
  goto <bb 12>; [0.00%]
;;    succ:       12

;;   basic block 11, loop depth 0
;;    pred:       9
  *ierr_35(D) = 0;
;;    succ:       12

;;   basic block 12, loop depth 0
;;    pred:       10
;;                11
;;    succ:       13

;;   basic block 13, loop depth 0
;;    pred:       12
;;                4
  error ={v} {CLOBBER};
;;    succ:       14

;;   basic block 14, loop depth 0
;;    pred:       13
<L19> [0.00%]:
  return;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_1 - 1 )
Partition 2 (_2 - 2 )
Partition 3 (_3 - 3 )
Partition 4 (_4 - 4 )
Partition 5 (_5 - 5 )
Partition 6 (_6 - 6 )
Partition 7 (_7 - 7 )
Partition 8 (_8 - 8 )
Partition 9 (_9 - 9 )
Partition 10 (_10 - 10 )
Partition 11 (_11 - 11 )
Partition 12 (error.18_12 - 12 )
Partition 13 (kb_13 - 13 )
Partition 17 (_line_17(D) - 17 )
Partition 18 (_18 - 18 )
Partition 19 (_19 - 19 )
Partition 21 (iline_21(D) - 21 )
Partition 28 (lu_28(D) - 28 )
Partition 31 (line_31(D) - 31 )
Partition 35 (ierr_35(D) - 35 )
Partition 38 (kb_38 - 38 )
Partition 39 (kb_39 - 39 )
Partition 40 (val_40(D) - 40 )
Partition 41 (nval_41(D) - 41 )


Partition map 

Partition 0 (kb_13 - 13 )
Partition 1 (_line_17(D) - 17 )
Partition 2 (iline_21(D) - 21 )
Partition 3 (lu_28(D) - 28 )
Partition 4 (line_31(D) - 31 )
Partition 5 (ierr_35(D) - 35 )
Partition 6 (kb_38 - 38 )
Partition 7 (kb_39 - 39 )
Partition 8 (val_40(D) - 40 )
Partition 9 (nval_41(D) - 41 )


Conflict graph:

After sorting:
Sorted Coalesce list:
(2147483646, 0) kb_13 <-> kb_38
(2147483646, 0) kb_13 <-> kb_39

Partition map 

Partition 0 (kb_13 - 13 )
Partition 1 (_line_17(D) - 17 )
Partition 2 (iline_21(D) - 21 )
Partition 3 (lu_28(D) - 28 )
Partition 4 (line_31(D) - 31 )
Partition 5 (ierr_35(D) - 35 )
Partition 6 (kb_38 - 38 )
Partition 7 (kb_39 - 39 )
Partition 8 (val_40(D) - 40 )
Partition 9 (nval_41(D) - 41 )

Coalesce list: (13)kb_13 & (38)kb_38 [map: 0, 6] : Success -> 0
Coalesce list: (13)kb_13 & (39)kb_39 [map: 0, 7] : Success -> 0
Coalesce list: (13)kb_13 & (39)kb_13: Already Coalesced.
After Coalescing:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (_2 - 2 )
Partition 2 (_3 - 3 )
Partition 3 (_4 - 4 )
Partition 4 (_5 - 5 )
Partition 5 (_6 - 6 )
Partition 6 (_7 - 7 )
Partition 7 (_8 - 8 )
Partition 8 (_9 - 9 )
Partition 9 (_10 - 10 )
Partition 10 (_11 - 11 )
Partition 11 (error.18_12 - 12 )
Partition 12 (kb_13 - 13 38 39 )
Partition 13 (_line_17(D) - 17 )
Partition 14 (_18 - 18 )
Partition 15 (_19 - 19 )
Partition 16 (iline_21(D) - 21 )
Partition 17 (lu_28(D) - 28 )
Partition 18 (line_31(D) - 31 )
Partition 19 (ierr_35(D) - 35 )
Partition 20 (val_40(D) - 40 )
Partition 21 (nval_41(D) - 41 )

rread (integer(kind=4) & restrict lu, character(kind=1)[1:_line] & restrict line, integer(kind=4) & restrict iline, integer(kind=4) & restrict ierr, integer(kind=4) & restrict nval, real(kind=4)[0:] * restrict val, integer(kind=4) _line)
{
  struct __st_parameter_dt dt_parm.9;
  sizetype D.3641;
  bitsizetype D.3640;
  integer(kind=4) kb;
  logical(kind=4) error;
  sizetype _1;
  bitsizetype _2;
  integer(kind=4) _3;
  integer(kind=4) _4;
  integer(kind=4) _5;
  integer(kind=4) _6;
  integer(kind=4) _7;
  integer(kind=4) _8;
  integer(kind=4) _9;
  integer(kind=4) _10;
  integer(kind=4) _11;
  logical(kind=4) error.18_12;
  bitsizetype _18;
  sizetype _19;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = (sizetype) _line_17(D);
  _2 = (bitsizetype) _1;
  _18 = _2 * 8;
  _19 = (sizetype) _line_17(D);
;;    succ:       3

;;   basic block 3, loop depth 1
;;    pred:       2
;;                5
;;                6
  _3 = *iline_21(D);
  _4 = _3 + 1;
  *iline_21(D) = _4;
  dt_parm.9.common.filename = &"../src/io.f"[1]{lb: 1 sz: 1};
  dt_parm.9.common.line = 57;
  dt_parm.9.format = &"(A)"[1]{lb: 1 sz: 1};
  dt_parm.9.format_len = 3;
  dt_parm.9.common.flags = 4104;
  _5 = *lu_28(D);
  dt_parm.9.common.unit = _5;
  _gfortran_st_read (&dt_parm.9);
  _gfortran_transfer_character (&dt_parm.9, line_31(D), _line_17(D));
  _gfortran_st_read_done (&dt_parm.9);
  _6 = dt_parm.9.common.flags;
  _7 = _6 & 3;
  switch (_7) <default: <L2> [0.00%], case 2: L.28 [0.00%]>
;;    succ:       5
;;                4

;;   basic block 4, loop depth 0
;;    pred:       3
L.28 [0.00%]:
  dt_parm.9 ={v} {CLOBBER};
  *ierr_35(D) = -1;
  goto <bb 13>; [0.00%]
;;    succ:       13

;;   basic block 5, loop depth 1
;;    pred:       3
<L2> [0.00%]:
  dt_parm.9 ={v} {CLOBBER};
  _8 = _gfortran_string_index (2, &"#!"[1]{lb: 1 sz: 1}, 1, line_31(D), 0);
  if (_8 != 0)
    goto <bb 3>; [0.00%]
  else
    goto <bb 6>; [0.00%]
;;    succ:       3
;;                6

;;   basic block 6, loop depth 1
;;    pred:       5
  _9 = _gfortran_compare_string (_line_17(D), line_31(D), 1, &" "[1]{lb: 1 sz: 1});
  if (_9 == 0)
    goto <bb 3>; [0.00%]
  else
    goto <bb 7>; [0.00%]
;;    succ:       3
;;                7

;;   basic block 7, loop depth 0
;;    pred:       6
  _10 = _gfortran_string_index (_line_17(D), line_31(D), 1, &"!"[1]{lb: 1 sz: 1}, 0);
  kb_38 = _10 + -1;
  if (kb_38 <= 0)
    goto <bb 8>; [0.00%]
  else
    goto <bb 9>; [0.00%]
;;    succ:       8
;;                9

;;   basic block 8, loop depth 0
;;    pred:       7
  kb_39 = _line_17(D);
;;    succ:       9

;;   basic block 9, loop depth 0
;;    pred:       7
;;                8
  # kb_13 = PHI <kb_38(7), kb_39(8)>
  _11 = MAX_EXPR <kb_13, 0>;
  getflt (line_31(D), val_40(D), nval_41(D), &error, _11);
  error.18_12 = error;
  if (error.18_12 != 0)
    goto <bb 10>; [0.00%]
  else
    goto <bb 11>; [0.00%]
;;    succ:       10
;;                11

;;   basic block 10, loop depth 0
;;    pred:       9
  *ierr_35(D) = 1;
  goto <bb 12>; [0.00%]
;;    succ:       12

;;   basic block 11, loop depth 0
;;    pred:       9
  *ierr_35(D) = 0;
;;    succ:       12

;;   basic block 12, loop depth 0
;;    pred:       10
;;                11
;;    succ:       13

;;   basic block 13, loop depth 0
;;    pred:       12
;;                4
  error ={v} {CLOBBER};
;;    succ:       14

;;   basic block 14, loop depth 0
;;    pred:       13
<L19> [0.00%]:
  return;
;;    succ:       EXIT

}


Partition 0: size 480 align 16
	dt_parm.9

;; Generating RTL for gimple basic block 2

;; _1 = (sizetype) _line_17(D);

(insn 11 10 12 (set (reg:SI 101)
        (mem/c:SI (reg/f:DI 81 virtual-incoming-args) [1 _line+0 S4 A64])) "../src/io.f":76 -1
     (nil))

(insn 12 11 0 (set (reg:DI 87 [ _1 ])
        (sign_extend:DI (reg:SI 101))) "../src/io.f":76 -1
     (nil))

;; _2 = (bitsizetype) _1;

(insn 13 12 14 (set (subreg:DI (reg:TI 88 [ _2 ]) 0)
        (reg:DI 87 [ _1 ])) "../src/io.f":76 -1
     (nil))

(insn 14 13 0 (set (subreg:DI (reg:TI 88 [ _2 ]) 8)
        (const_int 0 [0])) "../src/io.f":76 -1
     (nil))

;; _18 = _2 * 8;

(insn 15 14 0 (parallel [
            (set (reg:TI 99 [ _18 ])
                (ashift:TI (reg:TI 88 [ _2 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":76 -1
     (nil))

;; _19 = (sizetype) _line_17(D);

(insn 16 15 17 (set (reg:SI 102)
        (mem/c:SI (reg/f:DI 81 virtual-incoming-args) [1 _line+0 S4 A64])) "../src/io.f":76 -1
     (nil))

(insn 17 16 0 (set (reg:DI 100 [ _19 ])
        (sign_extend:DI (reg:SI 102))) "../src/io.f":76 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; _3 = *iline_21(D);

(insn 19 18 20 (set (reg/f:DI 103)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -520 [0xfffffffffffffdf8])) [11 iline+0 S8 A64])) "../src/io.f":55 -1
     (nil))

(insn 20 19 0 (set (reg:SI 89 [ _3 ])
        (mem:SI (reg/f:DI 103) [1 *iline_21(D)+0 S4 A32])) "../src/io.f":55 -1
     (nil))

;; _4 = _3 + 1;

(insn 21 20 0 (parallel [
            (set (reg:SI 90 [ _4 ])
                (plus:SI (reg:SI 89 [ _3 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":55 -1
     (nil))

;; *iline_21(D) = _4;

(insn 22 21 23 (set (reg/f:DI 104)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -520 [0xfffffffffffffdf8])) [11 iline+0 S8 A64])) "../src/io.f":55 -1
     (nil))

(insn 23 22 0 (set (mem:SI (reg/f:DI 104) [1 *iline_21(D)+0 S4 A32])
        (reg:SI 90 [ _4 ])) "../src/io.f":55 -1
     (nil))

;; dt_parm.9.common.filename = &"../src/io.f"[1]{lb: 1 sz: 1};

(insn 24 23 25 (set (reg/f:DI 105)
        (symbol_ref/f:DI ("*lC4") [flags 0x2]  <var_decl 0x143b723f0 *lC4>)) "../src/io.f":57 -1
     (nil))

(insn 25 24 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -488 [0xfffffffffffffe18])) [5 dt_parm.9.common.filename+0 S8 A64])
        (reg/f:DI 105)) "../src/io.f":57 -1
     (nil))

;; dt_parm.9.common.line = 57;

(insn 26 25 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -480 [0xfffffffffffffe20])) [1 dt_parm.9.common.line+0 S4 A128])
        (const_int 57 [0x39])) "../src/io.f":57 -1
     (nil))

;; dt_parm.9.format = &"(A)"[1]{lb: 1 sz: 1};

(insn 27 26 28 (set (reg/f:DI 106)
        (symbol_ref/f:DI ("*lC5") [flags 0x2]  <var_decl 0x143ba4c60 *lC5>)) "../src/io.f":57 -1
     (nil))

(insn 28 27 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -424 [0xfffffffffffffe58])) [5 dt_parm.9.format+0 S8 A64])
        (reg/f:DI 106)) "../src/io.f":57 -1
     (nil))

;; dt_parm.9.format_len = 3;

(insn 29 28 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -416 [0xfffffffffffffe60])) [1 dt_parm.9.format_len+0 S4 A128])
        (const_int 3 [0x3])) "../src/io.f":57 -1
     (nil))

;; dt_parm.9.common.flags = 4104;

(insn 30 29 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -496 [0xfffffffffffffe10])) [1 dt_parm.9.common.flags+0 S4 A128])
        (const_int 4104 [0x1008])) "../src/io.f":57 -1
     (nil))

;; _5 = *lu_28(D);

(insn 31 30 32 (set (reg/f:DI 107)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -504 [0xfffffffffffffe08])) [11 lu+0 S8 A64])) "../src/io.f":57 -1
     (nil))

(insn 32 31 0 (set (reg:SI 91 [ _5 ])
        (mem:SI (reg/f:DI 107) [1 *lu_28(D)+0 S4 A32])) "../src/io.f":57 -1
     (nil))

;; dt_parm.9.common.unit = _5;

(insn 33 32 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -492 [0xfffffffffffffe14])) [1 dt_parm.9.common.unit+0 S4 A32])
        (reg:SI 91 [ _5 ])) "../src/io.f":57 -1
     (nil))

;; _gfortran_st_read (&dt_parm.9);

(insn 34 33 35 (parallel [
            (set (reg:DI 108)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -496 [0xfffffffffffffe10])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":57 -1
     (nil))

(insn 35 34 36 (set (reg:DI 5 di)
        (reg:DI 108)) "../src/io.f":57 -1
     (nil))

(call_insn 36 35 0 (call (mem:QI (symbol_ref:DI ("_gfortran_st_read") [flags 0x41]  <function_decl 0x1439e0700 _gfortran_st_read>) [0 _gfortran_st_read S1 A8])
        (const_int 0 [0])) "../src/io.f":57 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; _gfortran_transfer_character (&dt_parm.9, line_31(D), _line_17(D));

(insn 37 36 38 (set (reg:DI 109)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -512 [0xfffffffffffffe00])) [10 line+0 S8 A64])) "../src/io.f":57 -1
     (nil))

(insn 38 37 39 (parallel [
            (set (reg:DI 110)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -496 [0xfffffffffffffe10])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":57 -1
     (nil))

(insn 39 38 40 (set (reg:SI 1 dx)
        (mem/c:SI (reg/f:DI 81 virtual-incoming-args) [1 _line+0 S4 A64])) "../src/io.f":57 -1
     (nil))

(insn 40 39 41 (set (reg:DI 4 si)
        (reg:DI 109)) "../src/io.f":57 -1
     (nil))

(insn 41 40 42 (set (reg:DI 5 di)
        (reg:DI 110)) "../src/io.f":57 -1
     (nil))

(call_insn 42 41 0 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_character") [flags 0x41]  <function_decl 0x1439d4800 _gfortran_transfer_character>) [0 _gfortran_transfer_character S1 A8])
        (const_int 0 [0])) "../src/io.f":57 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))

;; _gfortran_st_read_done (&dt_parm.9);

(insn 43 42 44 (parallel [
            (set (reg:DI 111)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -496 [0xfffffffffffffe10])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":57 -1
     (nil))

(insn 44 43 45 (set (reg:DI 5 di)
        (reg:DI 111)) "../src/io.f":57 -1
     (nil))

(call_insn 45 44 0 (call (mem:QI (symbol_ref:DI ("_gfortran_st_read_done") [flags 0x41]  <function_decl 0x1439e4200 _gfortran_st_read_done>) [0 _gfortran_st_read_done S1 A8])
        (const_int 0 [0])) "../src/io.f":57 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; _6 = dt_parm.9.common.flags;

(insn 46 45 0 (set (reg:SI 92 [ _6 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -496 [0xfffffffffffffe10])) [1 dt_parm.9.common.flags+0 S4 A128])) "../src/io.f":57 -1
     (nil))

;; _7 = _6 & 3;

(insn 47 46 0 (parallel [
            (set (reg:SI 93 [ _7 ])
                (and:SI (reg:SI 92 [ _6 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":57 -1
     (nil))
;; Expanding GIMPLE switch as decision tree:
;;        2

;; switch (_7) <default: <L2> [0.00%], case 2: L.28 [0.00%]>

(insn 48 47 49 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 93 [ _7 ])
            (const_int 2 [0x2]))) "../src/io.f":57 -1
     (nil))

(jump_insn 49 48 50 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "../src/io.f":57 -1
     (nil))

(jump_insn 50 49 51 (set (pc)
        (label_ref 0)) "../src/io.f":57 -1
     (nil))

(barrier 51 50 0)

;; Generating RTL for gimple basic block 4

;; L.28 [0.00%]:

(code_label 52 51 53 54 ("L.28") [0 uses])

(note 53 52 0 NOTE_INSN_BASIC_BLOCK)

;; dt_parm.9 ={v} {CLOBBER};

(nil)

;; *ierr_35(D) = -1;

(insn 54 53 55 (set (reg/f:DI 112)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -528 [0xfffffffffffffdf0])) [11 ierr+0 S8 A64])) "../src/io.f":74 -1
     (nil))

(insn 55 54 0 (set (mem:SI (reg/f:DI 112) [1 *ierr_35(D)+0 S4 A32])
        (const_int -1 [0xffffffffffffffff])) "../src/io.f":74 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; <L2> [0.00%]:

(code_label 58 57 59 53 (nil) [0 uses])

(note 59 58 0 NOTE_INSN_BASIC_BLOCK)

;; dt_parm.9 ={v} {CLOBBER};

(nil)

;; _8 = _gfortran_string_index (2, &"#!"[1]{lb: 1 sz: 1}, 1, line_31(D), 0);

(insn 60 59 61 (set (reg:DI 113)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -512 [0xfffffffffffffe00])) [10 line+0 S8 A64])) "../src/io.f":60 -1
     (nil))

(insn 61 60 62 (set (reg:SI 37 r8)
        (const_int 0 [0])) "../src/io.f":60 -1
     (nil))

(insn 62 61 63 (set (reg:DI 2 cx)
        (reg:DI 113)) "../src/io.f":60 -1
     (nil))

(insn 63 62 64 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) "../src/io.f":60 -1
     (nil))

(insn 64 63 65 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*lC6") [flags 0x2]  <var_decl 0x143ba4cf0 *lC6>)) "../src/io.f":60 -1
     (nil))

(insn 65 64 66 (set (reg:SI 5 di)
        (const_int 2 [0x2])) "../src/io.f":60 -1
     (nil))

(call_insn/i 66 65 67 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_gfortran_string_index") [flags 0x41]  <function_decl 0x1439c4a00 _gfortran_string_index>) [0 _gfortran_string_index S1 A8])
            (const_int 0 [0]))) "../src/io.f":60 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (nil)))))))

(insn 67 66 0 (set (reg:SI 94 [ _8 ])
        (reg:SI 0 ax)) "../src/io.f":60 -1
     (nil))

;; if (_8 != 0)

(insn 69 67 70 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 94 [ _8 ])
            (const_int 0 [0]))) "../src/io.f":60 -1
     (nil))

(jump_insn 70 69 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 68)
            (pc))) "../src/io.f":60 -1
     (nil))

;; Generating RTL for gimple basic block 6

;; _9 = _gfortran_compare_string (_line_17(D), line_31(D), 1, &" "[1]{lb: 1 sz: 1});

(insn 72 71 73 (set (reg:DI 114)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -512 [0xfffffffffffffe00])) [10 line+0 S8 A64])) "../src/io.f":61 -1
     (nil))

(insn 73 72 74 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*lC2") [flags 0x2]  <var_decl 0x143b722d0 *lC2>)) "../src/io.f":61 -1
     (nil))

(insn 74 73 75 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) "../src/io.f":61 -1
     (nil))

(insn 75 74 76 (set (reg:DI 4 si)
        (reg:DI 114)) "../src/io.f":61 -1
     (nil))

(insn 76 75 77 (set (reg:SI 5 di)
        (mem/c:SI (reg/f:DI 81 virtual-incoming-args) [1 _line+0 S4 A64])) "../src/io.f":61 -1
     (nil))

(call_insn/i 77 76 78 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_gfortran_compare_string") [flags 0x41]  <function_decl 0x1439c4700 _gfortran_compare_string>) [0 _gfortran_compare_string S1 A8])
            (const_int 0 [0]))) "../src/io.f":61 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))

(insn 78 77 0 (set (reg:SI 95 [ _9 ])
        (reg:SI 0 ax)) "../src/io.f":61 -1
     (nil))

;; if (_9 == 0)

(insn 79 78 80 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 95 [ _9 ])
            (const_int 0 [0]))) "../src/io.f":61 -1
     (nil))

(jump_insn 80 79 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 68)
            (pc))) "../src/io.f":61 -1
     (nil))

;; Generating RTL for gimple basic block 7

;; _10 = _gfortran_string_index (_line_17(D), line_31(D), 1, &"!"[1]{lb: 1 sz: 1}, 0);

(insn 82 81 83 (set (reg:DI 115)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -512 [0xfffffffffffffe00])) [10 line+0 S8 A64])) "../src/io.f":63 -1
     (nil))

(insn 83 82 84 (set (reg:SI 37 r8)
        (const_int 0 [0])) "../src/io.f":63 -1
     (nil))

(insn 84 83 85 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*lC1") [flags 0x2]  <var_decl 0x143b72240 *lC1>)) "../src/io.f":63 -1
     (nil))

(insn 85 84 86 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) "../src/io.f":63 -1
     (nil))

(insn 86 85 87 (set (reg:DI 4 si)
        (reg:DI 115)) "../src/io.f":63 -1
     (nil))

(insn 87 86 88 (set (reg:SI 5 di)
        (mem/c:SI (reg/f:DI 81 virtual-incoming-args) [1 _line+0 S4 A64])) "../src/io.f":63 -1
     (nil))

(call_insn/i 88 87 89 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_gfortran_string_index") [flags 0x41]  <function_decl 0x1439c4a00 _gfortran_string_index>) [0 _gfortran_string_index S1 A8])
            (const_int 0 [0]))) "../src/io.f":63 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (nil)))))))

(insn 89 88 0 (set (reg:SI 96 [ _10 ])
        (reg:SI 0 ax)) "../src/io.f":63 -1
     (nil))

;; kb_38 = _10 + -1;

(insn 90 89 91 (parallel [
            (set (reg:SI 116)
                (plus:SI (reg:SI 96 [ _10 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":63 -1
     (nil))

(insn 91 90 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 kb+0 S4 A32])
        (reg:SI 116)) "../src/io.f":63 -1
     (nil))

;; if (kb_38 <= 0)

(insn 92 91 93 (set (reg:CCNO 17 flags)
        (compare:CCNO (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 kb+0 S4 A32])
            (const_int 0 [0]))) "../src/io.f":64 -1
     (nil))

(jump_insn 93 92 0 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "../src/io.f":64 -1
     (nil))

;; Generating RTL for gimple basic block 8

;; kb_39 = _line_17(D);

(insn 95 94 96 (set (reg:SI 117)
        (mem/c:SI (reg/f:DI 81 virtual-incoming-args) [1 _line+0 S4 A64])) "../src/io.f":64 -1
     (nil))

(insn 96 95 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 kb+0 S4 A32])
        (reg:SI 117)) "../src/io.f":64 -1
     (nil))

;; Generating RTL for gimple basic block 9

;; 

(code_label 97 96 98 57 (nil) [0 uses])

(note 98 97 0 NOTE_INSN_BASIC_BLOCK)

;; _11 = MAX_EXPR <kb_13, 0>;

(insn 100 98 99 (set (reg:SI 118)
        (const_int 0 [0])) "../src/io.f":66 -1
     (nil))

(insn 99 100 101 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 kb+0 S4 A32])
            (const_int 0 [0]))) "../src/io.f":66 -1
     (nil))

(insn 101 99 0 (set (reg:SI 97 [ _11 ])
        (if_then_else:SI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 kb+0 S4 A32])
            (reg:SI 118))) "../src/io.f":66 -1
     (nil))

;; getflt (line_31(D), val_40(D), nval_41(D), &error, _11);

(insn 102 101 103 (parallel [
            (set (reg:DI 119)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":66 -1
     (nil))

(insn 103 102 104 (set (reg:DI 120)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -536 [0xfffffffffffffde8])) [11 nval+0 S8 A64])) "../src/io.f":66 -1
     (nil))

(insn 104 103 105 (set (reg:DI 121)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -544 [0xfffffffffffffde0])) [14 val+0 S8 A64])) "../src/io.f":66 -1
     (nil))

(insn 105 104 106 (set (reg:DI 122)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -512 [0xfffffffffffffe00])) [10 line+0 S8 A64])) "../src/io.f":66 -1
     (nil))

(insn 106 105 107 (set (reg:SI 37 r8)
        (reg:SI 97 [ _11 ])) "../src/io.f":66 -1
     (nil))

(insn 107 106 108 (set (reg:DI 2 cx)
        (reg:DI 119)) "../src/io.f":66 -1
     (nil))

(insn 108 107 109 (set (reg:DI 1 dx)
        (reg:DI 120)) "../src/io.f":66 -1
     (nil))

(insn 109 108 110 (set (reg:DI 4 si)
        (reg:DI 121)) "../src/io.f":66 -1
     (nil))

(insn 110 109 111 (set (reg:DI 5 di)
        (reg:DI 122)) "../src/io.f":66 -1
     (nil))

(call_insn 111 110 0 (call (mem:QI (symbol_ref:DI ("getflt_") [flags 0x403]  <function_decl 0x1439e4900 getflt>) [0 getflt S1 A8])
        (const_int 0 [0])) "../src/io.f":66 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (nil)))))))

;; error.18_12 = error;

(insn 112 111 0 (set (reg:SI 98 [ error.18_12 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [13 error+0 S4 A64])) "../src/io.f":67 -1
     (nil))

;; if (error.18_12 != 0)

(insn 113 112 114 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 98 [ error.18_12 ])
            (const_int 0 [0]))) "../src/io.f":67 -1
     (nil))

(jump_insn 114 113 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "../src/io.f":67 -1
     (nil))

;; Generating RTL for gimple basic block 10

;; *ierr_35(D) = 1;

(insn 116 115 117 (set (reg/f:DI 123)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -528 [0xfffffffffffffdf0])) [11 ierr+0 S8 A64])) "../src/io.f":68 -1
     (nil))

(insn 117 116 0 (set (mem:SI (reg/f:DI 123) [1 *ierr_35(D)+0 S4 A32])
        (const_int 1 [0x1])) "../src/io.f":68 -1
     (nil))

;; Generating RTL for gimple basic block 11

;; 

(code_label 120 119 121 58 (nil) [0 uses])

(note 121 120 0 NOTE_INSN_BASIC_BLOCK)

;; *ierr_35(D) = 0;

(insn 122 121 123 (set (reg/f:DI 124)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -528 [0xfffffffffffffdf0])) [11 ierr+0 S8 A64])) "../src/io.f":70 -1
     (nil))

(insn 123 122 0 (set (mem:SI (reg/f:DI 124) [1 *ierr_35(D)+0 S4 A32])
        (const_int 0 [0])) "../src/io.f":70 -1
     (nil))

;; Generating RTL for gimple basic block 12

;; 

(code_label 124 123 125 59 (nil) [0 uses])

(note 125 124 0 NOTE_INSN_BASIC_BLOCK)

;; Generating RTL for gimple basic block 13

;; 

(code_label 126 125 127 55 (nil) [0 uses])

(note 127 126 0 NOTE_INSN_BASIC_BLOCK)

;; error ={v} {CLOBBER};

(nil)

;; Generating RTL for gimple basic block 14

;; <L19> [0.00%]:

(code_label 128 127 129 60 (nil) [0 uses])

(note 129 128 0 NOTE_INSN_BASIC_BLOCK)
Purged edges from bb 17


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 4->5 to 7 failed.
Redirecting jump 56 from 15 to 17.
Redirecting jump 118 from 14 to 17.
Merging block 14 into block 13...
Merged blocks 13 and 14.
Merged 13 and 14 without moving.
Merging block 15 into block 13...
Merged blocks 13 and 15.
Merged 13 and 15 without moving.
Merging block 16 into block 13...
Merged blocks 13 and 16.
Merged 13 and 16 without moving.


try_optimize_cfg iteration 2

Forwarding edge 4->5 to 7 failed.
fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 9 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 9 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 9 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -504 [0xfffffffffffffe08])) [11 lu+0 S8 A64])
        (reg:DI 5 di [ lu ])) "../src/io.f":48 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -512 [0xfffffffffffffe00])) [10 line+0 S8 A64])
        (reg:DI 4 si [ line ])) "../src/io.f":48 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -520 [0xfffffffffffffdf8])) [11 iline+0 S8 A64])
        (reg:DI 1 dx [ iline ])) "../src/io.f":48 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -528 [0xfffffffffffffdf0])) [11 ierr+0 S8 A64])
        (reg:DI 2 cx [ ierr ])) "../src/io.f":48 -1
     (nil))
(insn 6 5 7 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -536 [0xfffffffffffffde8])) [11 nval+0 S8 A64])
        (reg:DI 37 r8 [ nval ])) "../src/io.f":48 -1
     (nil))
(insn 7 6 8 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -544 [0xfffffffffffffde0])) [14 val+0 S8 A64])
        (reg:DI 38 r9 [ val ])) "../src/io.f":48 -1
     (nil))
(note 8 7 11 2 NOTE_INSN_FUNCTION_BEG)
(insn 11 8 12 2 (set (reg:SI 101)
        (mem/c:SI (reg/f:DI 81 virtual-incoming-args) [1 _line+0 S4 A64])) "../src/io.f":76 -1
     (nil))
(insn 12 11 13 2 (set (reg:DI 87 [ _1 ])
        (sign_extend:DI (reg:SI 101))) "../src/io.f":76 -1
     (nil))
(insn 13 12 14 2 (set (subreg:DI (reg:TI 88 [ _2 ]) 0)
        (reg:DI 87 [ _1 ])) "../src/io.f":76 -1
     (nil))
(insn 14 13 15 2 (set (subreg:DI (reg:TI 88 [ _2 ]) 8)
        (const_int 0 [0])) "../src/io.f":76 -1
     (nil))
(insn 15 14 16 2 (parallel [
            (set (reg:TI 99 [ _18 ])
                (ashift:TI (reg:TI 88 [ _2 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":76 -1
     (nil))
(insn 16 15 17 2 (set (reg:SI 102)
        (mem/c:SI (reg/f:DI 81 virtual-incoming-args) [1 _line+0 S4 A64])) "../src/io.f":76 -1
     (nil))
(insn 17 16 68 2 (set (reg:DI 100 [ _19 ])
        (sign_extend:DI (reg:SI 102))) "../src/io.f":76 -1
     (nil))
;;  succ:       4 (FALLTHRU)

;; basic block 4, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;;              7 (DFS_BACK)
;;              8 (DFS_BACK)
(code_label 68 17 18 4 56 (nil) [2 uses])
(note 18 68 19 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 4 (set (reg/f:DI 103)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -520 [0xfffffffffffffdf8])) [11 iline+0 S8 A64])) "../src/io.f":55 -1
     (nil))
(insn 20 19 21 4 (set (reg:SI 89 [ _3 ])
        (mem:SI (reg/f:DI 103) [1 *iline_21(D)+0 S4 A32])) "../src/io.f":55 -1
     (nil))
(insn 21 20 22 4 (parallel [
            (set (reg:SI 90 [ _4 ])
                (plus:SI (reg:SI 89 [ _3 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":55 -1
     (nil))
(insn 22 21 23 4 (set (reg/f:DI 104)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -520 [0xfffffffffffffdf8])) [11 iline+0 S8 A64])) "../src/io.f":55 -1
     (nil))
(insn 23 22 24 4 (set (mem:SI (reg/f:DI 104) [1 *iline_21(D)+0 S4 A32])
        (reg:SI 90 [ _4 ])) "../src/io.f":55 -1
     (nil))
(insn 24 23 25 4 (set (reg/f:DI 105)
        (symbol_ref/f:DI ("*lC4") [flags 0x2]  <var_decl 0x143b723f0 *lC4>)) "../src/io.f":57 -1
     (nil))
(insn 25 24 26 4 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -488 [0xfffffffffffffe18])) [5 dt_parm.9.common.filename+0 S8 A64])
        (reg/f:DI 105)) "../src/io.f":57 -1
     (nil))
(insn 26 25 27 4 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -480 [0xfffffffffffffe20])) [1 dt_parm.9.common.line+0 S4 A128])
        (const_int 57 [0x39])) "../src/io.f":57 -1
     (nil))
(insn 27 26 28 4 (set (reg/f:DI 106)
        (symbol_ref/f:DI ("*lC5") [flags 0x2]  <var_decl 0x143ba4c60 *lC5>)) "../src/io.f":57 -1
     (nil))
(insn 28 27 29 4 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -424 [0xfffffffffffffe58])) [5 dt_parm.9.format+0 S8 A64])
        (reg/f:DI 106)) "../src/io.f":57 -1
     (nil))
(insn 29 28 30 4 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -416 [0xfffffffffffffe60])) [1 dt_parm.9.format_len+0 S4 A128])
        (const_int 3 [0x3])) "../src/io.f":57 -1
     (nil))
(insn 30 29 31 4 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -496 [0xfffffffffffffe10])) [1 dt_parm.9.common.flags+0 S4 A128])
        (const_int 4104 [0x1008])) "../src/io.f":57 -1
     (nil))
(insn 31 30 32 4 (set (reg/f:DI 107)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -504 [0xfffffffffffffe08])) [11 lu+0 S8 A64])) "../src/io.f":57 -1
     (nil))
(insn 32 31 33 4 (set (reg:SI 91 [ _5 ])
        (mem:SI (reg/f:DI 107) [1 *lu_28(D)+0 S4 A32])) "../src/io.f":57 -1
     (nil))
(insn 33 32 34 4 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -492 [0xfffffffffffffe14])) [1 dt_parm.9.common.unit+0 S4 A32])
        (reg:SI 91 [ _5 ])) "../src/io.f":57 -1
     (nil))
(insn 34 33 35 4 (parallel [
            (set (reg:DI 108)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -496 [0xfffffffffffffe10])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":57 -1
     (nil))
(insn 35 34 36 4 (set (reg:DI 5 di)
        (reg:DI 108)) "../src/io.f":57 -1
     (nil))
(call_insn 36 35 37 4 (call (mem:QI (symbol_ref:DI ("_gfortran_st_read") [flags 0x41]  <function_decl 0x1439e0700 _gfortran_st_read>) [0 _gfortran_st_read S1 A8])
        (const_int 0 [0])) "../src/io.f":57 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 37 36 38 4 (set (reg:DI 109)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -512 [0xfffffffffffffe00])) [10 line+0 S8 A64])) "../src/io.f":57 -1
     (nil))
(insn 38 37 39 4 (parallel [
            (set (reg:DI 110)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -496 [0xfffffffffffffe10])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":57 -1
     (nil))
(insn 39 38 40 4 (set (reg:SI 1 dx)
        (mem/c:SI (reg/f:DI 81 virtual-incoming-args) [1 _line+0 S4 A64])) "../src/io.f":57 -1
     (nil))
(insn 40 39 41 4 (set (reg:DI 4 si)
        (reg:DI 109)) "../src/io.f":57 -1
     (nil))
(insn 41 40 42 4 (set (reg:DI 5 di)
        (reg:DI 110)) "../src/io.f":57 -1
     (nil))
(call_insn 42 41 43 4 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_character") [flags 0x41]  <function_decl 0x1439d4800 _gfortran_transfer_character>) [0 _gfortran_transfer_character S1 A8])
        (const_int 0 [0])) "../src/io.f":57 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 43 42 44 4 (parallel [
            (set (reg:DI 111)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -496 [0xfffffffffffffe10])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":57 -1
     (nil))
(insn 44 43 45 4 (set (reg:DI 5 di)
        (reg:DI 111)) "../src/io.f":57 -1
     (nil))
(call_insn 45 44 46 4 (call (mem:QI (symbol_ref:DI ("_gfortran_st_read_done") [flags 0x41]  <function_decl 0x1439e4200 _gfortran_st_read_done>) [0 _gfortran_st_read_done S1 A8])
        (const_int 0 [0])) "../src/io.f":57 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 46 45 47 4 (set (reg:SI 92 [ _6 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -496 [0xfffffffffffffe10])) [1 dt_parm.9.common.flags+0 S4 A128])) "../src/io.f":57 -1
     (nil))
(insn 47 46 48 4 (parallel [
            (set (reg:SI 93 [ _7 ])
                (and:SI (reg:SI 92 [ _6 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":57 -1
     (nil))
(insn 48 47 49 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 93 [ _7 ])
            (const_int 2 [0x2]))) "../src/io.f":57 -1
     (nil))
(jump_insn 49 48 132 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 52)
            (pc))) "../src/io.f":57 -1
     (nil)
 -> 52)
;;  succ:       6
;;              5 (FALLTHRU)

;; basic block 5, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
(note 132 49 50 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(jump_insn 50 132 51 5 (set (pc)
        (label_ref 58)) "../src/io.f":57 -1
     (nil)
 -> 58)
;;  succ:       7

(barrier 51 50 52)
;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4
(code_label 52 51 53 6 54 ("L.28") [1 uses])
(note 53 52 54 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 54 53 55 6 (set (reg/f:DI 112)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -528 [0xfffffffffffffdf0])) [11 ierr+0 S8 A64])) "../src/io.f":74 -1
     (nil))
(insn 55 54 56 6 (set (mem:SI (reg/f:DI 112) [1 *ierr_35(D)+0 S4 A32])
        (const_int -1 [0xffffffffffffffff])) "../src/io.f":74 -1
     (nil))
(jump_insn 56 55 57 6 (set (pc)
        (label_ref:DI 130)) "../src/io.f":75 649 {jump}
     (nil)
 -> 130)
;;  succ:       17 [100.0%] 

(barrier 57 56 58)
;; basic block 7, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       5
(code_label 58 57 59 7 53 (nil) [1 uses])
(note 59 58 60 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 60 59 61 7 (set (reg:DI 113)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -512 [0xfffffffffffffe00])) [10 line+0 S8 A64])) "../src/io.f":60 -1
     (nil))
(insn 61 60 62 7 (set (reg:SI 37 r8)
        (const_int 0 [0])) "../src/io.f":60 -1
     (nil))
(insn 62 61 63 7 (set (reg:DI 2 cx)
        (reg:DI 113)) "../src/io.f":60 -1
     (nil))
(insn 63 62 64 7 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) "../src/io.f":60 -1
     (nil))
(insn 64 63 65 7 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*lC6") [flags 0x2]  <var_decl 0x143ba4cf0 *lC6>)) "../src/io.f":60 -1
     (nil))
(insn 65 64 66 7 (set (reg:SI 5 di)
        (const_int 2 [0x2])) "../src/io.f":60 -1
     (nil))
(call_insn/i 66 65 67 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_gfortran_string_index") [flags 0x41]  <function_decl 0x1439c4a00 _gfortran_string_index>) [0 _gfortran_string_index S1 A8])
            (const_int 0 [0]))) "../src/io.f":60 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (nil)))))))
(insn 67 66 69 7 (set (reg:SI 94 [ _8 ])
        (reg:SI 0 ax)) "../src/io.f":60 -1
     (nil))
(insn 69 67 70 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 94 [ _8 ])
            (const_int 0 [0]))) "../src/io.f":60 -1
     (nil))
(jump_insn 70 69 71 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 68)
            (pc))) "../src/io.f":60 -1
     (nil)
 -> 68)
;;  succ:       4 (DFS_BACK)
;;              8 (FALLTHRU)

;; basic block 8, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL)
;;  pred:       7 (FALLTHRU)
(note 71 70 72 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 72 71 73 8 (set (reg:DI 114)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -512 [0xfffffffffffffe00])) [10 line+0 S8 A64])) "../src/io.f":61 -1
     (nil))
(insn 73 72 74 8 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*lC2") [flags 0x2]  <var_decl 0x143b722d0 *lC2>)) "../src/io.f":61 -1
     (nil))
(insn 74 73 75 8 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) "../src/io.f":61 -1
     (nil))
(insn 75 74 76 8 (set (reg:DI 4 si)
        (reg:DI 114)) "../src/io.f":61 -1
     (nil))
(insn 76 75 77 8 (set (reg:SI 5 di)
        (mem/c:SI (reg/f:DI 81 virtual-incoming-args) [1 _line+0 S4 A64])) "../src/io.f":61 -1
     (nil))
(call_insn/i 77 76 78 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_gfortran_compare_string") [flags 0x41]  <function_decl 0x1439c4700 _gfortran_compare_string>) [0 _gfortran_compare_string S1 A8])
            (const_int 0 [0]))) "../src/io.f":61 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 78 77 79 8 (set (reg:SI 95 [ _9 ])
        (reg:SI 0 ax)) "../src/io.f":61 -1
     (nil))
(insn 79 78 80 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 95 [ _9 ])
            (const_int 0 [0]))) "../src/io.f":61 -1
     (nil))
(jump_insn 80 79 81 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 68)
            (pc))) "../src/io.f":61 -1
     (nil)
 -> 68)
;;  succ:       4 (DFS_BACK)
;;              9 (FALLTHRU)

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL)
;;  pred:       8 (FALLTHRU)
(note 81 80 82 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 82 81 83 9 (set (reg:DI 115)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -512 [0xfffffffffffffe00])) [10 line+0 S8 A64])) "../src/io.f":63 -1
     (nil))
(insn 83 82 84 9 (set (reg:SI 37 r8)
        (const_int 0 [0])) "../src/io.f":63 -1
     (nil))
(insn 84 83 85 9 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*lC1") [flags 0x2]  <var_decl 0x143b72240 *lC1>)) "../src/io.f":63 -1
     (nil))
(insn 85 84 86 9 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) "../src/io.f":63 -1
     (nil))
(insn 86 85 87 9 (set (reg:DI 4 si)
        (reg:DI 115)) "../src/io.f":63 -1
     (nil))
(insn 87 86 88 9 (set (reg:SI 5 di)
        (mem/c:SI (reg/f:DI 81 virtual-incoming-args) [1 _line+0 S4 A64])) "../src/io.f":63 -1
     (nil))
(call_insn/i 88 87 89 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_gfortran_string_index") [flags 0x41]  <function_decl 0x1439c4a00 _gfortran_string_index>) [0 _gfortran_string_index S1 A8])
            (const_int 0 [0]))) "../src/io.f":63 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (nil)))))))
(insn 89 88 90 9 (set (reg:SI 96 [ _10 ])
        (reg:SI 0 ax)) "../src/io.f":63 -1
     (nil))
(insn 90 89 91 9 (parallel [
            (set (reg:SI 116)
                (plus:SI (reg:SI 96 [ _10 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":63 -1
     (nil))
(insn 91 90 92 9 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 kb+0 S4 A32])
        (reg:SI 116)) "../src/io.f":63 -1
     (nil))
(insn 92 91 93 9 (set (reg:CCNO 17 flags)
        (compare:CCNO (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 kb+0 S4 A32])
            (const_int 0 [0]))) "../src/io.f":64 -1
     (nil))
(jump_insn 93 92 94 9 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 97)
            (pc))) "../src/io.f":64 -1
     (nil)
 -> 97)
;;  succ:       10 (FALLTHRU)
;;              11

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL)
;;  pred:       9 (FALLTHRU)
(note 94 93 95 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 95 94 96 10 (set (reg:SI 117)
        (mem/c:SI (reg/f:DI 81 virtual-incoming-args) [1 _line+0 S4 A64])) "../src/io.f":64 -1
     (nil))
(insn 96 95 97 10 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 kb+0 S4 A32])
        (reg:SI 117)) "../src/io.f":64 -1
     (nil))
;;  succ:       11 (FALLTHRU)

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL)
;;  pred:       9
;;              10 (FALLTHRU)
(code_label 97 96 98 11 57 (nil) [1 uses])
(note 98 97 100 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 100 98 99 11 (set (reg:SI 118)
        (const_int 0 [0])) "../src/io.f":66 -1
     (nil))
(insn 99 100 101 11 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 kb+0 S4 A32])
            (const_int 0 [0]))) "../src/io.f":66 -1
     (nil))
(insn 101 99 102 11 (set (reg:SI 97 [ _11 ])
        (if_then_else:SI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 kb+0 S4 A32])
            (reg:SI 118))) "../src/io.f":66 -1
     (nil))
(insn 102 101 103 11 (parallel [
            (set (reg:DI 119)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":66 -1
     (nil))
(insn 103 102 104 11 (set (reg:DI 120)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -536 [0xfffffffffffffde8])) [11 nval+0 S8 A64])) "../src/io.f":66 -1
     (nil))
(insn 104 103 105 11 (set (reg:DI 121)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -544 [0xfffffffffffffde0])) [14 val+0 S8 A64])) "../src/io.f":66 -1
     (nil))
(insn 105 104 106 11 (set (reg:DI 122)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -512 [0xfffffffffffffe00])) [10 line+0 S8 A64])) "../src/io.f":66 -1
     (nil))
(insn 106 105 107 11 (set (reg:SI 37 r8)
        (reg:SI 97 [ _11 ])) "../src/io.f":66 -1
     (nil))
(insn 107 106 108 11 (set (reg:DI 2 cx)
        (reg:DI 119)) "../src/io.f":66 -1
     (nil))
(insn 108 107 109 11 (set (reg:DI 1 dx)
        (reg:DI 120)) "../src/io.f":66 -1
     (nil))
(insn 109 108 110 11 (set (reg:DI 4 si)
        (reg:DI 121)) "../src/io.f":66 -1
     (nil))
(insn 110 109 111 11 (set (reg:DI 5 di)
        (reg:DI 122)) "../src/io.f":66 -1
     (nil))
(call_insn 111 110 112 11 (call (mem:QI (symbol_ref:DI ("getflt_") [flags 0x403]  <function_decl 0x1439e4900 getflt>) [0 getflt S1 A8])
        (const_int 0 [0])) "../src/io.f":66 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (nil)))))))
(insn 112 111 113 11 (set (reg:SI 98 [ error.18_12 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [13 error+0 S4 A64])) "../src/io.f":67 -1
     (nil))
(insn 113 112 114 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 98 [ error.18_12 ])
            (const_int 0 [0]))) "../src/io.f":67 -1
     (nil))
(jump_insn 114 113 115 11 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 120)
            (pc))) "../src/io.f":67 -1
     (nil)
 -> 120)
;;  succ:       12 (FALLTHRU)
;;              13

;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       11 (FALLTHRU)
(note 115 114 116 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 116 115 117 12 (set (reg/f:DI 123)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -528 [0xfffffffffffffdf0])) [11 ierr+0 S8 A64])) "../src/io.f":68 -1
     (nil))
(insn 117 116 118 12 (set (mem:SI (reg/f:DI 123) [1 *ierr_35(D)+0 S4 A32])
        (const_int 1 [0x1])) "../src/io.f":68 -1
     (nil))
(jump_insn 118 117 119 12 (set (pc)
        (label_ref:DI 130)) 649 {jump}
     (nil)
 -> 130)
;;  succ:       17 [100.0%] 

(barrier 119 118 120)
;; basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 17, flags: (NEW, REACHABLE, RTL)
;;  pred:       11
(code_label 120 119 121 13 58 (nil) [1 uses])
(note 121 120 122 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 122 121 123 13 (set (reg/f:DI 124)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -528 [0xfffffffffffffdf0])) [11 ierr+0 S8 A64])) "../src/io.f":70 -1
     (nil))
(insn 123 122 133 13 (set (mem:SI (reg/f:DI 124) [1 *ierr_35(D)+0 S4 A32])
        (const_int 0 [0])) "../src/io.f":70 -1
     (nil))
(insn 133 123 130 13 (const_int 0 [0]) "../src/io.f":72 -1
     (nil))
;;  succ:       17 (FALLTHRU)

;; basic block 17, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 13, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       13 (FALLTHRU)
;;              6 [100.0%] 
;;              12 [100.0%] 
(code_label 130 133 131 17 52 (nil) [2 uses])
(note 131 130 0 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function iread (iread_, funcdef_no=4, decl_uid=3643, cgraph_uid=4, symbol_order=4)

iread (integer(kind=4) & restrict lu, character(kind=1)[1:_line] & restrict line, integer(kind=4) & restrict iline, integer(kind=4) & restrict ierr, integer(kind=4) & restrict nval, integer(kind=4)[0:] * restrict ival, integer(kind=4) _line)
{
  struct __st_parameter_dt dt_parm.10;
  sizetype D.3663;
  bitsizetype D.3662;
  integer(kind=4) kb;
  logical(kind=4) error;
  sizetype _1;
  bitsizetype _2;
  integer(kind=4) _3;
  integer(kind=4) _4;
  integer(kind=4) _5;
  integer(kind=4) _6;
  integer(kind=4) _7;
  integer(kind=4) _8;
  integer(kind=4) _9;
  integer(kind=4) _10;
  integer(kind=4) _11;
  logical(kind=4) error.19_12;
  bitsizetype _18;
  sizetype _19;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = (sizetype) _line_17(D);
  _2 = (bitsizetype) _1;
  _18 = _2 * 8;
  _19 = (sizetype) _line_17(D);
;;    succ:       3

;;   basic block 3, loop depth 1
;;    pred:       2
;;                5
;;                6
  _3 = *iline_21(D);
  _4 = _3 + 1;
  *iline_21(D) = _4;
  dt_parm.10.common.filename = &"../src/io.f"[1]{lb: 1 sz: 1};
  dt_parm.10.common.line = 89;
  dt_parm.10.format = &"(A)"[1]{lb: 1 sz: 1};
  dt_parm.10.format_len = 3;
  dt_parm.10.common.flags = 4104;
  _5 = *lu_28(D);
  dt_parm.10.common.unit = _5;
  _gfortran_st_read (&dt_parm.10);
  _gfortran_transfer_character (&dt_parm.10, line_31(D), _line_17(D));
  _gfortran_st_read_done (&dt_parm.10);
  _6 = dt_parm.10.common.flags;
  _7 = _6 & 3;
  switch (_7) <default: <L2> [0.00%], case 2: L.33 [0.00%]>
;;    succ:       5
;;                4

;;   basic block 4, loop depth 0
;;    pred:       3
L.33 [0.00%]:
  dt_parm.10 ={v} {CLOBBER};
  *ierr_35(D) = -1;
  goto <bb 13>; [0.00%]
;;    succ:       13

;;   basic block 5, loop depth 1
;;    pred:       3
<L2> [0.00%]:
  dt_parm.10 ={v} {CLOBBER};
  _8 = _gfortran_string_index (2, &"#!"[1]{lb: 1 sz: 1}, 1, line_31(D), 0);
  if (_8 != 0)
    goto <bb 3>; [0.00%]
  else
    goto <bb 6>; [0.00%]
;;    succ:       3
;;                6

;;   basic block 6, loop depth 1
;;    pred:       5
  _9 = _gfortran_compare_string (_line_17(D), line_31(D), 1, &" "[1]{lb: 1 sz: 1});
  if (_9 == 0)
    goto <bb 3>; [0.00%]
  else
    goto <bb 7>; [0.00%]
;;    succ:       3
;;                7

;;   basic block 7, loop depth 0
;;    pred:       6
  _10 = _gfortran_string_index (_line_17(D), line_31(D), 1, &"!"[1]{lb: 1 sz: 1}, 0);
  kb_38 = _10 + -1;
  if (kb_38 <= 0)
    goto <bb 8>; [0.00%]
  else
    goto <bb 9>; [0.00%]
;;    succ:       8
;;                9

;;   basic block 8, loop depth 0
;;    pred:       7
  kb_39 = _line_17(D);
;;    succ:       9

;;   basic block 9, loop depth 0
;;    pred:       7
;;                8
  # kb_13 = PHI <kb_38(7), kb_39(8)>
  _11 = MAX_EXPR <kb_13, 0>;
  getint (line_31(D), ival_40(D), nval_41(D), &error, _11);
  error.19_12 = error;
  if (error.19_12 != 0)
    goto <bb 10>; [0.00%]
  else
    goto <bb 11>; [0.00%]
;;    succ:       10
;;                11

;;   basic block 10, loop depth 0
;;    pred:       9
  *ierr_35(D) = 1;
  goto <bb 12>; [0.00%]
;;    succ:       12

;;   basic block 11, loop depth 0
;;    pred:       9
  *ierr_35(D) = 0;
;;    succ:       12

;;   basic block 12, loop depth 0
;;    pred:       10
;;                11
;;    succ:       13

;;   basic block 13, loop depth 0
;;    pred:       12
;;                4
  error ={v} {CLOBBER};
;;    succ:       14

;;   basic block 14, loop depth 0
;;    pred:       13
<L19> [0.00%]:
  return;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_1 - 1 )
Partition 2 (_2 - 2 )
Partition 3 (_3 - 3 )
Partition 4 (_4 - 4 )
Partition 5 (_5 - 5 )
Partition 6 (_6 - 6 )
Partition 7 (_7 - 7 )
Partition 8 (_8 - 8 )
Partition 9 (_9 - 9 )
Partition 10 (_10 - 10 )
Partition 11 (_11 - 11 )
Partition 12 (error.19_12 - 12 )
Partition 13 (kb_13 - 13 )
Partition 17 (_line_17(D) - 17 )
Partition 18 (_18 - 18 )
Partition 19 (_19 - 19 )
Partition 21 (iline_21(D) - 21 )
Partition 28 (lu_28(D) - 28 )
Partition 31 (line_31(D) - 31 )
Partition 35 (ierr_35(D) - 35 )
Partition 38 (kb_38 - 38 )
Partition 39 (kb_39 - 39 )
Partition 40 (ival_40(D) - 40 )
Partition 41 (nval_41(D) - 41 )


Partition map 

Partition 0 (kb_13 - 13 )
Partition 1 (_line_17(D) - 17 )
Partition 2 (iline_21(D) - 21 )
Partition 3 (lu_28(D) - 28 )
Partition 4 (line_31(D) - 31 )
Partition 5 (ierr_35(D) - 35 )
Partition 6 (kb_38 - 38 )
Partition 7 (kb_39 - 39 )
Partition 8 (ival_40(D) - 40 )
Partition 9 (nval_41(D) - 41 )


Conflict graph:

After sorting:
Sorted Coalesce list:
(2147483646, 0) kb_13 <-> kb_38
(2147483646, 0) kb_13 <-> kb_39

Partition map 

Partition 0 (kb_13 - 13 )
Partition 1 (_line_17(D) - 17 )
Partition 2 (iline_21(D) - 21 )
Partition 3 (lu_28(D) - 28 )
Partition 4 (line_31(D) - 31 )
Partition 5 (ierr_35(D) - 35 )
Partition 6 (kb_38 - 38 )
Partition 7 (kb_39 - 39 )
Partition 8 (ival_40(D) - 40 )
Partition 9 (nval_41(D) - 41 )

Coalesce list: (13)kb_13 & (38)kb_38 [map: 0, 6] : Success -> 0
Coalesce list: (13)kb_13 & (39)kb_39 [map: 0, 7] : Success -> 0
Coalesce list: (13)kb_13 & (39)kb_13: Already Coalesced.
After Coalescing:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (_2 - 2 )
Partition 2 (_3 - 3 )
Partition 3 (_4 - 4 )
Partition 4 (_5 - 5 )
Partition 5 (_6 - 6 )
Partition 6 (_7 - 7 )
Partition 7 (_8 - 8 )
Partition 8 (_9 - 9 )
Partition 9 (_10 - 10 )
Partition 10 (_11 - 11 )
Partition 11 (error.19_12 - 12 )
Partition 12 (kb_13 - 13 38 39 )
Partition 13 (_line_17(D) - 17 )
Partition 14 (_18 - 18 )
Partition 15 (_19 - 19 )
Partition 16 (iline_21(D) - 21 )
Partition 17 (lu_28(D) - 28 )
Partition 18 (line_31(D) - 31 )
Partition 19 (ierr_35(D) - 35 )
Partition 20 (ival_40(D) - 40 )
Partition 21 (nval_41(D) - 41 )

iread (integer(kind=4) & restrict lu, character(kind=1)[1:_line] & restrict line, integer(kind=4) & restrict iline, integer(kind=4) & restrict ierr, integer(kind=4) & restrict nval, integer(kind=4)[0:] * restrict ival, integer(kind=4) _line)
{
  struct __st_parameter_dt dt_parm.10;
  sizetype D.3663;
  bitsizetype D.3662;
  integer(kind=4) kb;
  logical(kind=4) error;
  sizetype _1;
  bitsizetype _2;
  integer(kind=4) _3;
  integer(kind=4) _4;
  integer(kind=4) _5;
  integer(kind=4) _6;
  integer(kind=4) _7;
  integer(kind=4) _8;
  integer(kind=4) _9;
  integer(kind=4) _10;
  integer(kind=4) _11;
  logical(kind=4) error.19_12;
  bitsizetype _18;
  sizetype _19;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = (sizetype) _line_17(D);
  _2 = (bitsizetype) _1;
  _18 = _2 * 8;
  _19 = (sizetype) _line_17(D);
;;    succ:       3

;;   basic block 3, loop depth 1
;;    pred:       2
;;                5
;;                6
  _3 = *iline_21(D);
  _4 = _3 + 1;
  *iline_21(D) = _4;
  dt_parm.10.common.filename = &"../src/io.f"[1]{lb: 1 sz: 1};
  dt_parm.10.common.line = 89;
  dt_parm.10.format = &"(A)"[1]{lb: 1 sz: 1};
  dt_parm.10.format_len = 3;
  dt_parm.10.common.flags = 4104;
  _5 = *lu_28(D);
  dt_parm.10.common.unit = _5;
  _gfortran_st_read (&dt_parm.10);
  _gfortran_transfer_character (&dt_parm.10, line_31(D), _line_17(D));
  _gfortran_st_read_done (&dt_parm.10);
  _6 = dt_parm.10.common.flags;
  _7 = _6 & 3;
  switch (_7) <default: <L2> [0.00%], case 2: L.33 [0.00%]>
;;    succ:       5
;;                4

;;   basic block 4, loop depth 0
;;    pred:       3
L.33 [0.00%]:
  dt_parm.10 ={v} {CLOBBER};
  *ierr_35(D) = -1;
  goto <bb 13>; [0.00%]
;;    succ:       13

;;   basic block 5, loop depth 1
;;    pred:       3
<L2> [0.00%]:
  dt_parm.10 ={v} {CLOBBER};
  _8 = _gfortran_string_index (2, &"#!"[1]{lb: 1 sz: 1}, 1, line_31(D), 0);
  if (_8 != 0)
    goto <bb 3>; [0.00%]
  else
    goto <bb 6>; [0.00%]
;;    succ:       3
;;                6

;;   basic block 6, loop depth 1
;;    pred:       5
  _9 = _gfortran_compare_string (_line_17(D), line_31(D), 1, &" "[1]{lb: 1 sz: 1});
  if (_9 == 0)
    goto <bb 3>; [0.00%]
  else
    goto <bb 7>; [0.00%]
;;    succ:       3
;;                7

;;   basic block 7, loop depth 0
;;    pred:       6
  _10 = _gfortran_string_index (_line_17(D), line_31(D), 1, &"!"[1]{lb: 1 sz: 1}, 0);
  kb_38 = _10 + -1;
  if (kb_38 <= 0)
    goto <bb 8>; [0.00%]
  else
    goto <bb 9>; [0.00%]
;;    succ:       8
;;                9

;;   basic block 8, loop depth 0
;;    pred:       7
  kb_39 = _line_17(D);
;;    succ:       9

;;   basic block 9, loop depth 0
;;    pred:       7
;;                8
  # kb_13 = PHI <kb_38(7), kb_39(8)>
  _11 = MAX_EXPR <kb_13, 0>;
  getint (line_31(D), ival_40(D), nval_41(D), &error, _11);
  error.19_12 = error;
  if (error.19_12 != 0)
    goto <bb 10>; [0.00%]
  else
    goto <bb 11>; [0.00%]
;;    succ:       10
;;                11

;;   basic block 10, loop depth 0
;;    pred:       9
  *ierr_35(D) = 1;
  goto <bb 12>; [0.00%]
;;    succ:       12

;;   basic block 11, loop depth 0
;;    pred:       9
  *ierr_35(D) = 0;
;;    succ:       12

;;   basic block 12, loop depth 0
;;    pred:       10
;;                11
;;    succ:       13

;;   basic block 13, loop depth 0
;;    pred:       12
;;                4
  error ={v} {CLOBBER};
;;    succ:       14

;;   basic block 14, loop depth 0
;;    pred:       13
<L19> [0.00%]:
  return;
;;    succ:       EXIT

}


Partition 0: size 480 align 16
	dt_parm.10

;; Generating RTL for gimple basic block 2

;; _1 = (sizetype) _line_17(D);

(insn 11 10 12 (set (reg:SI 101)
        (mem/c:SI (reg/f:DI 81 virtual-incoming-args) [1 _line+0 S4 A64])) "../src/io.f":108 -1
     (nil))

(insn 12 11 0 (set (reg:DI 87 [ _1 ])
        (sign_extend:DI (reg:SI 101))) "../src/io.f":108 -1
     (nil))

;; _2 = (bitsizetype) _1;

(insn 13 12 14 (set (subreg:DI (reg:TI 88 [ _2 ]) 0)
        (reg:DI 87 [ _1 ])) "../src/io.f":108 -1
     (nil))

(insn 14 13 0 (set (subreg:DI (reg:TI 88 [ _2 ]) 8)
        (const_int 0 [0])) "../src/io.f":108 -1
     (nil))

;; _18 = _2 * 8;

(insn 15 14 0 (parallel [
            (set (reg:TI 99 [ _18 ])
                (ashift:TI (reg:TI 88 [ _2 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":108 -1
     (nil))

;; _19 = (sizetype) _line_17(D);

(insn 16 15 17 (set (reg:SI 102)
        (mem/c:SI (reg/f:DI 81 virtual-incoming-args) [1 _line+0 S4 A64])) "../src/io.f":108 -1
     (nil))

(insn 17 16 0 (set (reg:DI 100 [ _19 ])
        (sign_extend:DI (reg:SI 102))) "../src/io.f":108 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; _3 = *iline_21(D);

(insn 19 18 20 (set (reg/f:DI 103)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -520 [0xfffffffffffffdf8])) [11 iline+0 S8 A64])) "../src/io.f":87 -1
     (nil))

(insn 20 19 0 (set (reg:SI 89 [ _3 ])
        (mem:SI (reg/f:DI 103) [1 *iline_21(D)+0 S4 A32])) "../src/io.f":87 -1
     (nil))

;; _4 = _3 + 1;

(insn 21 20 0 (parallel [
            (set (reg:SI 90 [ _4 ])
                (plus:SI (reg:SI 89 [ _3 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":87 -1
     (nil))

;; *iline_21(D) = _4;

(insn 22 21 23 (set (reg/f:DI 104)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -520 [0xfffffffffffffdf8])) [11 iline+0 S8 A64])) "../src/io.f":87 -1
     (nil))

(insn 23 22 0 (set (mem:SI (reg/f:DI 104) [1 *iline_21(D)+0 S4 A32])
        (reg:SI 90 [ _4 ])) "../src/io.f":87 -1
     (nil))

;; dt_parm.10.common.filename = &"../src/io.f"[1]{lb: 1 sz: 1};

(insn 24 23 25 (set (reg/f:DI 105)
        (symbol_ref/f:DI ("*lC4") [flags 0x2]  <var_decl 0x143b723f0 *lC4>)) "../src/io.f":89 -1
     (nil))

(insn 25 24 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -488 [0xfffffffffffffe18])) [5 dt_parm.10.common.filename+0 S8 A64])
        (reg/f:DI 105)) "../src/io.f":89 -1
     (nil))

;; dt_parm.10.common.line = 89;

(insn 26 25 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -480 [0xfffffffffffffe20])) [1 dt_parm.10.common.line+0 S4 A128])
        (const_int 89 [0x59])) "../src/io.f":89 -1
     (nil))

;; dt_parm.10.format = &"(A)"[1]{lb: 1 sz: 1};

(insn 27 26 28 (set (reg/f:DI 106)
        (symbol_ref/f:DI ("*lC5") [flags 0x2]  <var_decl 0x143ba4c60 *lC5>)) "../src/io.f":89 -1
     (nil))

(insn 28 27 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -424 [0xfffffffffffffe58])) [5 dt_parm.10.format+0 S8 A64])
        (reg/f:DI 106)) "../src/io.f":89 -1
     (nil))

;; dt_parm.10.format_len = 3;

(insn 29 28 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -416 [0xfffffffffffffe60])) [1 dt_parm.10.format_len+0 S4 A128])
        (const_int 3 [0x3])) "../src/io.f":89 -1
     (nil))

;; dt_parm.10.common.flags = 4104;

(insn 30 29 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -496 [0xfffffffffffffe10])) [1 dt_parm.10.common.flags+0 S4 A128])
        (const_int 4104 [0x1008])) "../src/io.f":89 -1
     (nil))

;; _5 = *lu_28(D);

(insn 31 30 32 (set (reg/f:DI 107)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -504 [0xfffffffffffffe08])) [11 lu+0 S8 A64])) "../src/io.f":89 -1
     (nil))

(insn 32 31 0 (set (reg:SI 91 [ _5 ])
        (mem:SI (reg/f:DI 107) [1 *lu_28(D)+0 S4 A32])) "../src/io.f":89 -1
     (nil))

;; dt_parm.10.common.unit = _5;

(insn 33 32 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -492 [0xfffffffffffffe14])) [1 dt_parm.10.common.unit+0 S4 A32])
        (reg:SI 91 [ _5 ])) "../src/io.f":89 -1
     (nil))

;; _gfortran_st_read (&dt_parm.10);

(insn 34 33 35 (parallel [
            (set (reg:DI 108)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -496 [0xfffffffffffffe10])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":89 -1
     (nil))

(insn 35 34 36 (set (reg:DI 5 di)
        (reg:DI 108)) "../src/io.f":89 -1
     (nil))

(call_insn 36 35 0 (call (mem:QI (symbol_ref:DI ("_gfortran_st_read") [flags 0x41]  <function_decl 0x1439e0700 _gfortran_st_read>) [0 _gfortran_st_read S1 A8])
        (const_int 0 [0])) "../src/io.f":89 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; _gfortran_transfer_character (&dt_parm.10, line_31(D), _line_17(D));

(insn 37 36 38 (set (reg:DI 109)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -512 [0xfffffffffffffe00])) [10 line+0 S8 A64])) "../src/io.f":89 -1
     (nil))

(insn 38 37 39 (parallel [
            (set (reg:DI 110)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -496 [0xfffffffffffffe10])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":89 -1
     (nil))

(insn 39 38 40 (set (reg:SI 1 dx)
        (mem/c:SI (reg/f:DI 81 virtual-incoming-args) [1 _line+0 S4 A64])) "../src/io.f":89 -1
     (nil))

(insn 40 39 41 (set (reg:DI 4 si)
        (reg:DI 109)) "../src/io.f":89 -1
     (nil))

(insn 41 40 42 (set (reg:DI 5 di)
        (reg:DI 110)) "../src/io.f":89 -1
     (nil))

(call_insn 42 41 0 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_character") [flags 0x41]  <function_decl 0x1439d4800 _gfortran_transfer_character>) [0 _gfortran_transfer_character S1 A8])
        (const_int 0 [0])) "../src/io.f":89 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))

;; _gfortran_st_read_done (&dt_parm.10);

(insn 43 42 44 (parallel [
            (set (reg:DI 111)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -496 [0xfffffffffffffe10])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":89 -1
     (nil))

(insn 44 43 45 (set (reg:DI 5 di)
        (reg:DI 111)) "../src/io.f":89 -1
     (nil))

(call_insn 45 44 0 (call (mem:QI (symbol_ref:DI ("_gfortran_st_read_done") [flags 0x41]  <function_decl 0x1439e4200 _gfortran_st_read_done>) [0 _gfortran_st_read_done S1 A8])
        (const_int 0 [0])) "../src/io.f":89 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; _6 = dt_parm.10.common.flags;

(insn 46 45 0 (set (reg:SI 92 [ _6 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -496 [0xfffffffffffffe10])) [1 dt_parm.10.common.flags+0 S4 A128])) "../src/io.f":89 -1
     (nil))

;; _7 = _6 & 3;

(insn 47 46 0 (parallel [
            (set (reg:SI 93 [ _7 ])
                (and:SI (reg:SI 92 [ _6 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":89 -1
     (nil))
;; Expanding GIMPLE switch as decision tree:
;;        2

;; switch (_7) <default: <L2> [0.00%], case 2: L.33 [0.00%]>

(insn 48 47 49 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 93 [ _7 ])
            (const_int 2 [0x2]))) "../src/io.f":89 -1
     (nil))

(jump_insn 49 48 50 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "../src/io.f":89 -1
     (nil))

(jump_insn 50 49 51 (set (pc)
        (label_ref 0)) "../src/io.f":89 -1
     (nil))

(barrier 51 50 0)

;; Generating RTL for gimple basic block 4

;; L.33 [0.00%]:

(code_label 52 51 53 65 ("L.33") [0 uses])

(note 53 52 0 NOTE_INSN_BASIC_BLOCK)

;; dt_parm.10 ={v} {CLOBBER};

(nil)

;; *ierr_35(D) = -1;

(insn 54 53 55 (set (reg/f:DI 112)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -528 [0xfffffffffffffdf0])) [11 ierr+0 S8 A64])) "../src/io.f":106 -1
     (nil))

(insn 55 54 0 (set (mem:SI (reg/f:DI 112) [1 *ierr_35(D)+0 S4 A32])
        (const_int -1 [0xffffffffffffffff])) "../src/io.f":106 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; <L2> [0.00%]:

(code_label 58 57 59 64 (nil) [0 uses])

(note 59 58 0 NOTE_INSN_BASIC_BLOCK)

;; dt_parm.10 ={v} {CLOBBER};

(nil)

;; _8 = _gfortran_string_index (2, &"#!"[1]{lb: 1 sz: 1}, 1, line_31(D), 0);

(insn 60 59 61 (set (reg:DI 113)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -512 [0xfffffffffffffe00])) [10 line+0 S8 A64])) "../src/io.f":92 -1
     (nil))

(insn 61 60 62 (set (reg:SI 37 r8)
        (const_int 0 [0])) "../src/io.f":92 -1
     (nil))

(insn 62 61 63 (set (reg:DI 2 cx)
        (reg:DI 113)) "../src/io.f":92 -1
     (nil))

(insn 63 62 64 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) "../src/io.f":92 -1
     (nil))

(insn 64 63 65 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*lC6") [flags 0x2]  <var_decl 0x143ba4cf0 *lC6>)) "../src/io.f":92 -1
     (nil))

(insn 65 64 66 (set (reg:SI 5 di)
        (const_int 2 [0x2])) "../src/io.f":92 -1
     (nil))

(call_insn/i 66 65 67 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_gfortran_string_index") [flags 0x41]  <function_decl 0x1439c4a00 _gfortran_string_index>) [0 _gfortran_string_index S1 A8])
            (const_int 0 [0]))) "../src/io.f":92 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (nil)))))))

(insn 67 66 0 (set (reg:SI 94 [ _8 ])
        (reg:SI 0 ax)) "../src/io.f":92 -1
     (nil))

;; if (_8 != 0)

(insn 69 67 70 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 94 [ _8 ])
            (const_int 0 [0]))) "../src/io.f":92 -1
     (nil))

(jump_insn 70 69 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 68)
            (pc))) "../src/io.f":92 -1
     (nil))

;; Generating RTL for gimple basic block 6

;; _9 = _gfortran_compare_string (_line_17(D), line_31(D), 1, &" "[1]{lb: 1 sz: 1});

(insn 72 71 73 (set (reg:DI 114)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -512 [0xfffffffffffffe00])) [10 line+0 S8 A64])) "../src/io.f":93 -1
     (nil))

(insn 73 72 74 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*lC2") [flags 0x2]  <var_decl 0x143b722d0 *lC2>)) "../src/io.f":93 -1
     (nil))

(insn 74 73 75 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) "../src/io.f":93 -1
     (nil))

(insn 75 74 76 (set (reg:DI 4 si)
        (reg:DI 114)) "../src/io.f":93 -1
     (nil))

(insn 76 75 77 (set (reg:SI 5 di)
        (mem/c:SI (reg/f:DI 81 virtual-incoming-args) [1 _line+0 S4 A64])) "../src/io.f":93 -1
     (nil))

(call_insn/i 77 76 78 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_gfortran_compare_string") [flags 0x41]  <function_decl 0x1439c4700 _gfortran_compare_string>) [0 _gfortran_compare_string S1 A8])
            (const_int 0 [0]))) "../src/io.f":93 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))

(insn 78 77 0 (set (reg:SI 95 [ _9 ])
        (reg:SI 0 ax)) "../src/io.f":93 -1
     (nil))

;; if (_9 == 0)

(insn 79 78 80 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 95 [ _9 ])
            (const_int 0 [0]))) "../src/io.f":93 -1
     (nil))

(jump_insn 80 79 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 68)
            (pc))) "../src/io.f":93 -1
     (nil))

;; Generating RTL for gimple basic block 7

;; _10 = _gfortran_string_index (_line_17(D), line_31(D), 1, &"!"[1]{lb: 1 sz: 1}, 0);

(insn 82 81 83 (set (reg:DI 115)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -512 [0xfffffffffffffe00])) [10 line+0 S8 A64])) "../src/io.f":95 -1
     (nil))

(insn 83 82 84 (set (reg:SI 37 r8)
        (const_int 0 [0])) "../src/io.f":95 -1
     (nil))

(insn 84 83 85 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*lC1") [flags 0x2]  <var_decl 0x143b72240 *lC1>)) "../src/io.f":95 -1
     (nil))

(insn 85 84 86 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) "../src/io.f":95 -1
     (nil))

(insn 86 85 87 (set (reg:DI 4 si)
        (reg:DI 115)) "../src/io.f":95 -1
     (nil))

(insn 87 86 88 (set (reg:SI 5 di)
        (mem/c:SI (reg/f:DI 81 virtual-incoming-args) [1 _line+0 S4 A64])) "../src/io.f":95 -1
     (nil))

(call_insn/i 88 87 89 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_gfortran_string_index") [flags 0x41]  <function_decl 0x1439c4a00 _gfortran_string_index>) [0 _gfortran_string_index S1 A8])
            (const_int 0 [0]))) "../src/io.f":95 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (nil)))))))

(insn 89 88 0 (set (reg:SI 96 [ _10 ])
        (reg:SI 0 ax)) "../src/io.f":95 -1
     (nil))

;; kb_38 = _10 + -1;

(insn 90 89 91 (parallel [
            (set (reg:SI 116)
                (plus:SI (reg:SI 96 [ _10 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":95 -1
     (nil))

(insn 91 90 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 kb+0 S4 A32])
        (reg:SI 116)) "../src/io.f":95 -1
     (nil))

;; if (kb_38 <= 0)

(insn 92 91 93 (set (reg:CCNO 17 flags)
        (compare:CCNO (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 kb+0 S4 A32])
            (const_int 0 [0]))) "../src/io.f":96 -1
     (nil))

(jump_insn 93 92 0 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "../src/io.f":96 -1
     (nil))

;; Generating RTL for gimple basic block 8

;; kb_39 = _line_17(D);

(insn 95 94 96 (set (reg:SI 117)
        (mem/c:SI (reg/f:DI 81 virtual-incoming-args) [1 _line+0 S4 A64])) "../src/io.f":96 -1
     (nil))

(insn 96 95 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 kb+0 S4 A32])
        (reg:SI 117)) "../src/io.f":96 -1
     (nil))

;; Generating RTL for gimple basic block 9

;; 

(code_label 97 96 98 68 (nil) [0 uses])

(note 98 97 0 NOTE_INSN_BASIC_BLOCK)

;; _11 = MAX_EXPR <kb_13, 0>;

(insn 100 98 99 (set (reg:SI 118)
        (const_int 0 [0])) "../src/io.f":98 -1
     (nil))

(insn 99 100 101 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 kb+0 S4 A32])
            (const_int 0 [0]))) "../src/io.f":98 -1
     (nil))

(insn 101 99 0 (set (reg:SI 97 [ _11 ])
        (if_then_else:SI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 kb+0 S4 A32])
            (reg:SI 118))) "../src/io.f":98 -1
     (nil))

;; getint (line_31(D), ival_40(D), nval_41(D), &error, _11);

(insn 102 101 103 (parallel [
            (set (reg:DI 119)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":98 -1
     (nil))

(insn 103 102 104 (set (reg:DI 120)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -536 [0xfffffffffffffde8])) [11 nval+0 S8 A64])) "../src/io.f":98 -1
     (nil))

(insn 104 103 105 (set (reg:DI 121)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -544 [0xfffffffffffffde0])) [6 ival+0 S8 A64])) "../src/io.f":98 -1
     (nil))

(insn 105 104 106 (set (reg:DI 122)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -512 [0xfffffffffffffe00])) [10 line+0 S8 A64])) "../src/io.f":98 -1
     (nil))

(insn 106 105 107 (set (reg:SI 37 r8)
        (reg:SI 97 [ _11 ])) "../src/io.f":98 -1
     (nil))

(insn 107 106 108 (set (reg:DI 2 cx)
        (reg:DI 119)) "../src/io.f":98 -1
     (nil))

(insn 108 107 109 (set (reg:DI 1 dx)
        (reg:DI 120)) "../src/io.f":98 -1
     (nil))

(insn 109 108 110 (set (reg:DI 4 si)
        (reg:DI 121)) "../src/io.f":98 -1
     (nil))

(insn 110 109 111 (set (reg:DI 5 di)
        (reg:DI 122)) "../src/io.f":98 -1
     (nil))

(call_insn 111 110 0 (call (mem:QI (symbol_ref:DI ("getint_") [flags 0x403]  <function_decl 0x1439e4800 getint>) [0 getint S1 A8])
        (const_int 0 [0])) "../src/io.f":98 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (nil)))))))

;; error.19_12 = error;

(insn 112 111 0 (set (reg:SI 98 [ error.19_12 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [13 error+0 S4 A64])) "../src/io.f":99 -1
     (nil))

;; if (error.19_12 != 0)

(insn 113 112 114 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 98 [ error.19_12 ])
            (const_int 0 [0]))) "../src/io.f":99 -1
     (nil))

(jump_insn 114 113 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "../src/io.f":99 -1
     (nil))

;; Generating RTL for gimple basic block 10

;; *ierr_35(D) = 1;

(insn 116 115 117 (set (reg/f:DI 123)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -528 [0xfffffffffffffdf0])) [11 ierr+0 S8 A64])) "../src/io.f":100 -1
     (nil))

(insn 117 116 0 (set (mem:SI (reg/f:DI 123) [1 *ierr_35(D)+0 S4 A32])
        (const_int 1 [0x1])) "../src/io.f":100 -1
     (nil))

;; Generating RTL for gimple basic block 11

;; 

(code_label 120 119 121 69 (nil) [0 uses])

(note 121 120 0 NOTE_INSN_BASIC_BLOCK)

;; *ierr_35(D) = 0;

(insn 122 121 123 (set (reg/f:DI 124)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -528 [0xfffffffffffffdf0])) [11 ierr+0 S8 A64])) "../src/io.f":102 -1
     (nil))

(insn 123 122 0 (set (mem:SI (reg/f:DI 124) [1 *ierr_35(D)+0 S4 A32])
        (const_int 0 [0])) "../src/io.f":102 -1
     (nil))

;; Generating RTL for gimple basic block 12

;; 

(code_label 124 123 125 70 (nil) [0 uses])

(note 125 124 0 NOTE_INSN_BASIC_BLOCK)

;; Generating RTL for gimple basic block 13

;; 

(code_label 126 125 127 66 (nil) [0 uses])

(note 127 126 0 NOTE_INSN_BASIC_BLOCK)

;; error ={v} {CLOBBER};

(nil)

;; Generating RTL for gimple basic block 14

;; <L19> [0.00%]:

(code_label 128 127 129 71 (nil) [0 uses])

(note 129 128 0 NOTE_INSN_BASIC_BLOCK)
Purged edges from bb 17


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 4->5 to 7 failed.
Redirecting jump 56 from 15 to 17.
Redirecting jump 118 from 14 to 17.
Merging block 14 into block 13...
Merged blocks 13 and 14.
Merged 13 and 14 without moving.
Merging block 15 into block 13...
Merged blocks 13 and 15.
Merged 13 and 15 without moving.
Merging block 16 into block 13...
Merged blocks 13 and 16.
Merged 13 and 16 without moving.


try_optimize_cfg iteration 2

Forwarding edge 4->5 to 7 failed.
fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 9 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 9 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 9 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -504 [0xfffffffffffffe08])) [11 lu+0 S8 A64])
        (reg:DI 5 di [ lu ])) "../src/io.f":80 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -512 [0xfffffffffffffe00])) [10 line+0 S8 A64])
        (reg:DI 4 si [ line ])) "../src/io.f":80 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -520 [0xfffffffffffffdf8])) [11 iline+0 S8 A64])
        (reg:DI 1 dx [ iline ])) "../src/io.f":80 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -528 [0xfffffffffffffdf0])) [11 ierr+0 S8 A64])
        (reg:DI 2 cx [ ierr ])) "../src/io.f":80 -1
     (nil))
(insn 6 5 7 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -536 [0xfffffffffffffde8])) [11 nval+0 S8 A64])
        (reg:DI 37 r8 [ nval ])) "../src/io.f":80 -1
     (nil))
(insn 7 6 8 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -544 [0xfffffffffffffde0])) [6 ival+0 S8 A64])
        (reg:DI 38 r9 [ ival ])) "../src/io.f":80 -1
     (nil))
(note 8 7 11 2 NOTE_INSN_FUNCTION_BEG)
(insn 11 8 12 2 (set (reg:SI 101)
        (mem/c:SI (reg/f:DI 81 virtual-incoming-args) [1 _line+0 S4 A64])) "../src/io.f":108 -1
     (nil))
(insn 12 11 13 2 (set (reg:DI 87 [ _1 ])
        (sign_extend:DI (reg:SI 101))) "../src/io.f":108 -1
     (nil))
(insn 13 12 14 2 (set (subreg:DI (reg:TI 88 [ _2 ]) 0)
        (reg:DI 87 [ _1 ])) "../src/io.f":108 -1
     (nil))
(insn 14 13 15 2 (set (subreg:DI (reg:TI 88 [ _2 ]) 8)
        (const_int 0 [0])) "../src/io.f":108 -1
     (nil))
(insn 15 14 16 2 (parallel [
            (set (reg:TI 99 [ _18 ])
                (ashift:TI (reg:TI 88 [ _2 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":108 -1
     (nil))
(insn 16 15 17 2 (set (reg:SI 102)
        (mem/c:SI (reg/f:DI 81 virtual-incoming-args) [1 _line+0 S4 A64])) "../src/io.f":108 -1
     (nil))
(insn 17 16 68 2 (set (reg:DI 100 [ _19 ])
        (sign_extend:DI (reg:SI 102))) "../src/io.f":108 -1
     (nil))
;;  succ:       4 (FALLTHRU)

;; basic block 4, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;;              7 (DFS_BACK)
;;              8 (DFS_BACK)
(code_label 68 17 18 4 67 (nil) [2 uses])
(note 18 68 19 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 4 (set (reg/f:DI 103)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -520 [0xfffffffffffffdf8])) [11 iline+0 S8 A64])) "../src/io.f":87 -1
     (nil))
(insn 20 19 21 4 (set (reg:SI 89 [ _3 ])
        (mem:SI (reg/f:DI 103) [1 *iline_21(D)+0 S4 A32])) "../src/io.f":87 -1
     (nil))
(insn 21 20 22 4 (parallel [
            (set (reg:SI 90 [ _4 ])
                (plus:SI (reg:SI 89 [ _3 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":87 -1
     (nil))
(insn 22 21 23 4 (set (reg/f:DI 104)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -520 [0xfffffffffffffdf8])) [11 iline+0 S8 A64])) "../src/io.f":87 -1
     (nil))
(insn 23 22 24 4 (set (mem:SI (reg/f:DI 104) [1 *iline_21(D)+0 S4 A32])
        (reg:SI 90 [ _4 ])) "../src/io.f":87 -1
     (nil))
(insn 24 23 25 4 (set (reg/f:DI 105)
        (symbol_ref/f:DI ("*lC4") [flags 0x2]  <var_decl 0x143b723f0 *lC4>)) "../src/io.f":89 -1
     (nil))
(insn 25 24 26 4 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -488 [0xfffffffffffffe18])) [5 dt_parm.10.common.filename+0 S8 A64])
        (reg/f:DI 105)) "../src/io.f":89 -1
     (nil))
(insn 26 25 27 4 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -480 [0xfffffffffffffe20])) [1 dt_parm.10.common.line+0 S4 A128])
        (const_int 89 [0x59])) "../src/io.f":89 -1
     (nil))
(insn 27 26 28 4 (set (reg/f:DI 106)
        (symbol_ref/f:DI ("*lC5") [flags 0x2]  <var_decl 0x143ba4c60 *lC5>)) "../src/io.f":89 -1
     (nil))
(insn 28 27 29 4 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -424 [0xfffffffffffffe58])) [5 dt_parm.10.format+0 S8 A64])
        (reg/f:DI 106)) "../src/io.f":89 -1
     (nil))
(insn 29 28 30 4 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -416 [0xfffffffffffffe60])) [1 dt_parm.10.format_len+0 S4 A128])
        (const_int 3 [0x3])) "../src/io.f":89 -1
     (nil))
(insn 30 29 31 4 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -496 [0xfffffffffffffe10])) [1 dt_parm.10.common.flags+0 S4 A128])
        (const_int 4104 [0x1008])) "../src/io.f":89 -1
     (nil))
(insn 31 30 32 4 (set (reg/f:DI 107)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -504 [0xfffffffffffffe08])) [11 lu+0 S8 A64])) "../src/io.f":89 -1
     (nil))
(insn 32 31 33 4 (set (reg:SI 91 [ _5 ])
        (mem:SI (reg/f:DI 107) [1 *lu_28(D)+0 S4 A32])) "../src/io.f":89 -1
     (nil))
(insn 33 32 34 4 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -492 [0xfffffffffffffe14])) [1 dt_parm.10.common.unit+0 S4 A32])
        (reg:SI 91 [ _5 ])) "../src/io.f":89 -1
     (nil))
(insn 34 33 35 4 (parallel [
            (set (reg:DI 108)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -496 [0xfffffffffffffe10])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":89 -1
     (nil))
(insn 35 34 36 4 (set (reg:DI 5 di)
        (reg:DI 108)) "../src/io.f":89 -1
     (nil))
(call_insn 36 35 37 4 (call (mem:QI (symbol_ref:DI ("_gfortran_st_read") [flags 0x41]  <function_decl 0x1439e0700 _gfortran_st_read>) [0 _gfortran_st_read S1 A8])
        (const_int 0 [0])) "../src/io.f":89 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 37 36 38 4 (set (reg:DI 109)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -512 [0xfffffffffffffe00])) [10 line+0 S8 A64])) "../src/io.f":89 -1
     (nil))
(insn 38 37 39 4 (parallel [
            (set (reg:DI 110)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -496 [0xfffffffffffffe10])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":89 -1
     (nil))
(insn 39 38 40 4 (set (reg:SI 1 dx)
        (mem/c:SI (reg/f:DI 81 virtual-incoming-args) [1 _line+0 S4 A64])) "../src/io.f":89 -1
     (nil))
(insn 40 39 41 4 (set (reg:DI 4 si)
        (reg:DI 109)) "../src/io.f":89 -1
     (nil))
(insn 41 40 42 4 (set (reg:DI 5 di)
        (reg:DI 110)) "../src/io.f":89 -1
     (nil))
(call_insn 42 41 43 4 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_character") [flags 0x41]  <function_decl 0x1439d4800 _gfortran_transfer_character>) [0 _gfortran_transfer_character S1 A8])
        (const_int 0 [0])) "../src/io.f":89 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 43 42 44 4 (parallel [
            (set (reg:DI 111)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -496 [0xfffffffffffffe10])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":89 -1
     (nil))
(insn 44 43 45 4 (set (reg:DI 5 di)
        (reg:DI 111)) "../src/io.f":89 -1
     (nil))
(call_insn 45 44 46 4 (call (mem:QI (symbol_ref:DI ("_gfortran_st_read_done") [flags 0x41]  <function_decl 0x1439e4200 _gfortran_st_read_done>) [0 _gfortran_st_read_done S1 A8])
        (const_int 0 [0])) "../src/io.f":89 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 46 45 47 4 (set (reg:SI 92 [ _6 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -496 [0xfffffffffffffe10])) [1 dt_parm.10.common.flags+0 S4 A128])) "../src/io.f":89 -1
     (nil))
(insn 47 46 48 4 (parallel [
            (set (reg:SI 93 [ _7 ])
                (and:SI (reg:SI 92 [ _6 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":89 -1
     (nil))
(insn 48 47 49 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 93 [ _7 ])
            (const_int 2 [0x2]))) "../src/io.f":89 -1
     (nil))
(jump_insn 49 48 132 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 52)
            (pc))) "../src/io.f":89 -1
     (nil)
 -> 52)
;;  succ:       6
;;              5 (FALLTHRU)

;; basic block 5, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
(note 132 49 50 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(jump_insn 50 132 51 5 (set (pc)
        (label_ref 58)) "../src/io.f":89 -1
     (nil)
 -> 58)
;;  succ:       7

(barrier 51 50 52)
;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4
(code_label 52 51 53 6 65 ("L.33") [1 uses])
(note 53 52 54 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 54 53 55 6 (set (reg/f:DI 112)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -528 [0xfffffffffffffdf0])) [11 ierr+0 S8 A64])) "../src/io.f":106 -1
     (nil))
(insn 55 54 56 6 (set (mem:SI (reg/f:DI 112) [1 *ierr_35(D)+0 S4 A32])
        (const_int -1 [0xffffffffffffffff])) "../src/io.f":106 -1
     (nil))
(jump_insn 56 55 57 6 (set (pc)
        (label_ref:DI 130)) "../src/io.f":107 649 {jump}
     (nil)
 -> 130)
;;  succ:       17 [100.0%] 

(barrier 57 56 58)
;; basic block 7, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       5
(code_label 58 57 59 7 64 (nil) [1 uses])
(note 59 58 60 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 60 59 61 7 (set (reg:DI 113)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -512 [0xfffffffffffffe00])) [10 line+0 S8 A64])) "../src/io.f":92 -1
     (nil))
(insn 61 60 62 7 (set (reg:SI 37 r8)
        (const_int 0 [0])) "../src/io.f":92 -1
     (nil))
(insn 62 61 63 7 (set (reg:DI 2 cx)
        (reg:DI 113)) "../src/io.f":92 -1
     (nil))
(insn 63 62 64 7 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) "../src/io.f":92 -1
     (nil))
(insn 64 63 65 7 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*lC6") [flags 0x2]  <var_decl 0x143ba4cf0 *lC6>)) "../src/io.f":92 -1
     (nil))
(insn 65 64 66 7 (set (reg:SI 5 di)
        (const_int 2 [0x2])) "../src/io.f":92 -1
     (nil))
(call_insn/i 66 65 67 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_gfortran_string_index") [flags 0x41]  <function_decl 0x1439c4a00 _gfortran_string_index>) [0 _gfortran_string_index S1 A8])
            (const_int 0 [0]))) "../src/io.f":92 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (nil)))))))
(insn 67 66 69 7 (set (reg:SI 94 [ _8 ])
        (reg:SI 0 ax)) "../src/io.f":92 -1
     (nil))
(insn 69 67 70 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 94 [ _8 ])
            (const_int 0 [0]))) "../src/io.f":92 -1
     (nil))
(jump_insn 70 69 71 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 68)
            (pc))) "../src/io.f":92 -1
     (nil)
 -> 68)
;;  succ:       4 (DFS_BACK)
;;              8 (FALLTHRU)

;; basic block 8, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL)
;;  pred:       7 (FALLTHRU)
(note 71 70 72 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 72 71 73 8 (set (reg:DI 114)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -512 [0xfffffffffffffe00])) [10 line+0 S8 A64])) "../src/io.f":93 -1
     (nil))
(insn 73 72 74 8 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*lC2") [flags 0x2]  <var_decl 0x143b722d0 *lC2>)) "../src/io.f":93 -1
     (nil))
(insn 74 73 75 8 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) "../src/io.f":93 -1
     (nil))
(insn 75 74 76 8 (set (reg:DI 4 si)
        (reg:DI 114)) "../src/io.f":93 -1
     (nil))
(insn 76 75 77 8 (set (reg:SI 5 di)
        (mem/c:SI (reg/f:DI 81 virtual-incoming-args) [1 _line+0 S4 A64])) "../src/io.f":93 -1
     (nil))
(call_insn/i 77 76 78 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_gfortran_compare_string") [flags 0x41]  <function_decl 0x1439c4700 _gfortran_compare_string>) [0 _gfortran_compare_string S1 A8])
            (const_int 0 [0]))) "../src/io.f":93 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 78 77 79 8 (set (reg:SI 95 [ _9 ])
        (reg:SI 0 ax)) "../src/io.f":93 -1
     (nil))
(insn 79 78 80 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 95 [ _9 ])
            (const_int 0 [0]))) "../src/io.f":93 -1
     (nil))
(jump_insn 80 79 81 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 68)
            (pc))) "../src/io.f":93 -1
     (nil)
 -> 68)
;;  succ:       4 (DFS_BACK)
;;              9 (FALLTHRU)

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL)
;;  pred:       8 (FALLTHRU)
(note 81 80 82 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 82 81 83 9 (set (reg:DI 115)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -512 [0xfffffffffffffe00])) [10 line+0 S8 A64])) "../src/io.f":95 -1
     (nil))
(insn 83 82 84 9 (set (reg:SI 37 r8)
        (const_int 0 [0])) "../src/io.f":95 -1
     (nil))
(insn 84 83 85 9 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*lC1") [flags 0x2]  <var_decl 0x143b72240 *lC1>)) "../src/io.f":95 -1
     (nil))
(insn 85 84 86 9 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) "../src/io.f":95 -1
     (nil))
(insn 86 85 87 9 (set (reg:DI 4 si)
        (reg:DI 115)) "../src/io.f":95 -1
     (nil))
(insn 87 86 88 9 (set (reg:SI 5 di)
        (mem/c:SI (reg/f:DI 81 virtual-incoming-args) [1 _line+0 S4 A64])) "../src/io.f":95 -1
     (nil))
(call_insn/i 88 87 89 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_gfortran_string_index") [flags 0x41]  <function_decl 0x1439c4a00 _gfortran_string_index>) [0 _gfortran_string_index S1 A8])
            (const_int 0 [0]))) "../src/io.f":95 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (nil)))))))
(insn 89 88 90 9 (set (reg:SI 96 [ _10 ])
        (reg:SI 0 ax)) "../src/io.f":95 -1
     (nil))
(insn 90 89 91 9 (parallel [
            (set (reg:SI 116)
                (plus:SI (reg:SI 96 [ _10 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":95 -1
     (nil))
(insn 91 90 92 9 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 kb+0 S4 A32])
        (reg:SI 116)) "../src/io.f":95 -1
     (nil))
(insn 92 91 93 9 (set (reg:CCNO 17 flags)
        (compare:CCNO (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 kb+0 S4 A32])
            (const_int 0 [0]))) "../src/io.f":96 -1
     (nil))
(jump_insn 93 92 94 9 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 97)
            (pc))) "../src/io.f":96 -1
     (nil)
 -> 97)
;;  succ:       10 (FALLTHRU)
;;              11

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL)
;;  pred:       9 (FALLTHRU)
(note 94 93 95 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 95 94 96 10 (set (reg:SI 117)
        (mem/c:SI (reg/f:DI 81 virtual-incoming-args) [1 _line+0 S4 A64])) "../src/io.f":96 -1
     (nil))
(insn 96 95 97 10 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 kb+0 S4 A32])
        (reg:SI 117)) "../src/io.f":96 -1
     (nil))
;;  succ:       11 (FALLTHRU)

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL)
;;  pred:       9
;;              10 (FALLTHRU)
(code_label 97 96 98 11 68 (nil) [1 uses])
(note 98 97 100 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 100 98 99 11 (set (reg:SI 118)
        (const_int 0 [0])) "../src/io.f":98 -1
     (nil))
(insn 99 100 101 11 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 kb+0 S4 A32])
            (const_int 0 [0]))) "../src/io.f":98 -1
     (nil))
(insn 101 99 102 11 (set (reg:SI 97 [ _11 ])
        (if_then_else:SI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 kb+0 S4 A32])
            (reg:SI 118))) "../src/io.f":98 -1
     (nil))
(insn 102 101 103 11 (parallel [
            (set (reg:DI 119)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":98 -1
     (nil))
(insn 103 102 104 11 (set (reg:DI 120)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -536 [0xfffffffffffffde8])) [11 nval+0 S8 A64])) "../src/io.f":98 -1
     (nil))
(insn 104 103 105 11 (set (reg:DI 121)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -544 [0xfffffffffffffde0])) [6 ival+0 S8 A64])) "../src/io.f":98 -1
     (nil))
(insn 105 104 106 11 (set (reg:DI 122)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -512 [0xfffffffffffffe00])) [10 line+0 S8 A64])) "../src/io.f":98 -1
     (nil))
(insn 106 105 107 11 (set (reg:SI 37 r8)
        (reg:SI 97 [ _11 ])) "../src/io.f":98 -1
     (nil))
(insn 107 106 108 11 (set (reg:DI 2 cx)
        (reg:DI 119)) "../src/io.f":98 -1
     (nil))
(insn 108 107 109 11 (set (reg:DI 1 dx)
        (reg:DI 120)) "../src/io.f":98 -1
     (nil))
(insn 109 108 110 11 (set (reg:DI 4 si)
        (reg:DI 121)) "../src/io.f":98 -1
     (nil))
(insn 110 109 111 11 (set (reg:DI 5 di)
        (reg:DI 122)) "../src/io.f":98 -1
     (nil))
(call_insn 111 110 112 11 (call (mem:QI (symbol_ref:DI ("getint_") [flags 0x403]  <function_decl 0x1439e4800 getint>) [0 getint S1 A8])
        (const_int 0 [0])) "../src/io.f":98 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (nil)))))))
(insn 112 111 113 11 (set (reg:SI 98 [ error.19_12 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [13 error+0 S4 A64])) "../src/io.f":99 -1
     (nil))
(insn 113 112 114 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 98 [ error.19_12 ])
            (const_int 0 [0]))) "../src/io.f":99 -1
     (nil))
(jump_insn 114 113 115 11 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 120)
            (pc))) "../src/io.f":99 -1
     (nil)
 -> 120)
;;  succ:       12 (FALLTHRU)
;;              13

;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       11 (FALLTHRU)
(note 115 114 116 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 116 115 117 12 (set (reg/f:DI 123)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -528 [0xfffffffffffffdf0])) [11 ierr+0 S8 A64])) "../src/io.f":100 -1
     (nil))
(insn 117 116 118 12 (set (mem:SI (reg/f:DI 123) [1 *ierr_35(D)+0 S4 A32])
        (const_int 1 [0x1])) "../src/io.f":100 -1
     (nil))
(jump_insn 118 117 119 12 (set (pc)
        (label_ref:DI 130)) 649 {jump}
     (nil)
 -> 130)
;;  succ:       17 [100.0%] 

(barrier 119 118 120)
;; basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 17, flags: (NEW, REACHABLE, RTL)
;;  pred:       11
(code_label 120 119 121 13 69 (nil) [1 uses])
(note 121 120 122 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 122 121 123 13 (set (reg/f:DI 124)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -528 [0xfffffffffffffdf0])) [11 ierr+0 S8 A64])) "../src/io.f":102 -1
     (nil))
(insn 123 122 133 13 (set (mem:SI (reg/f:DI 124) [1 *ierr_35(D)+0 S4 A32])
        (const_int 0 [0])) "../src/io.f":102 -1
     (nil))
(insn 133 123 130 13 (const_int 0 [0]) "../src/io.f":104 -1
     (nil))
;;  succ:       17 (FALLTHRU)

;; basic block 17, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 13, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       13 (FALLTHRU)
;;              6 [100.0%] 
;;              12 [100.0%] 
(code_label 130 133 131 17 63 (nil) [2 uses])
(note 131 130 0 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function pparse (pparse_, funcdef_no=5, decl_uid=3664, cgraph_uid=5, symbol_order=5)

pparse (character(kind=1)[1:_line] & restrict line, real(kind=4) & restrict p1, real(kind=4) & restrict p2, integer(kind=4) & restrict np, integer(kind=4) & restrict ierr, integer(kind=4) _line)
{
  struct __st_parameter_dt dt_parm.17;
  struct __st_parameter_dt dt_parm.16;
  struct __st_parameter_dt dt_parm.15;
  struct __st_parameter_dt dt_parm.14;
  struct __st_parameter_dt dt_parm.13;
  struct __st_parameter_dt dt_parm.12;
  struct __st_parameter_dt dt_parm.11;
  sizetype D.3709;
  bitsizetype D.3708;
  real(kind=4) rnum;
  real(kind=4) pdel;
  integer(kind=4) n;
  integer(kind=4) kslash;
  integer(kind=4) kcomma2;
  integer(kind=4) kcomma1;
  integer(kind=4) kb;
  integer(kind=4) ka;
  integer(kind=4) k;
  logical(kind=1) iftmp.22;
  logical(kind=1) iftmp.20;
  sizetype _1;
  bitsizetype _2;
  logical(kind=4) iftmp.21_3;
  character(kind=1) * _4;
  integer(kind=4) _5;
  integer(kind=4) _6;
  integer(kind=4) _7;
  integer(kind=4) _8;
  integer(kind=4) _9;
  integer(kind=4) _10;
  integer(kind=4) _11;
  real(kind=4) _12;
  integer(kind=4) _13;
  integer(kind=4) _14;
  integer(kind=4) _15;
  logical(kind=4) iftmp.23_16;
  character(kind=1) * _17;
  integer(kind=4) _18;
  integer(kind=4) _19;
  integer(kind=4) _20;
  integer(kind=4) _21;
  integer(kind=4) _22;
  real(kind=4) _23;
  real(kind=4) _24;
  character(kind=1) * _25;
  integer(kind=4) _26;
  integer(kind=4) _27;
  integer(kind=4) _28;
  integer(kind=4) _29;
  integer(kind=4) _30;
  character(kind=1) * _31;
  integer(kind=4) _32;
  integer(kind=4) _33;
  integer(kind=4) _34;
  integer(kind=4) _35;
  integer(kind=4) _36;
  real(kind=4) _37;
  real(kind=4) _38;
  real(kind=4) _39;
  real(kind=4) _40;
  real(kind=4) pdel.24_41;
  real(kind=4) _42;
  real(kind=4) rnum.25_43;
  real(kind=4) _44;
  real(kind=4) _45;
  integer(kind=4) _46;
  character(kind=1) * _47;
  integer(kind=4) _48;
  integer(kind=4) _49;
  integer(kind=4) _50;
  integer(kind=4) _51;
  integer(kind=4) _52;
  character(kind=1) * _53;
  integer(kind=4) _54;
  integer(kind=4) _55;
  integer(kind=4) _56;
  integer(kind=4) _57;
  integer(kind=4) _58;
  real(kind=4) rnum.26_59;
  real(kind=4) _60;
  real(kind=4) _61;
  integer(kind=4) _62;
  logical(kind=1) iftmp.20_64;
  logical(kind=1) iftmp.22_65;
  bitsizetype _71;
  sizetype _72;
  logical(kind=1) iftmp.20_78;
  logical(kind=1) iftmp.20_79;
  logical(kind=1) iftmp.22_100;
  logical(kind=1) iftmp.22_101;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = (sizetype) _line_70(D);
  _2 = (bitsizetype) _1;
  _71 = _2 * 8;
  _72 = (sizetype) _line_70(D);
  n_73 = _line_70(D);
  kcomma1_76 = _gfortran_string_index (_line_70(D), line_75(D), 1, &","[1]{lb: 1 sz: 1}, 0);
  kslash_77 = _gfortran_string_index (_line_70(D), line_75(D), 1, &"/"[1]{lb: 1 sz: 1}, 0);
  if (kcomma1_76 > 0)
    goto <bb 3>; [0.00%]
  else
    goto <bb 5>; [0.00%]
;;    succ:       3
;;                5

;;   basic block 3, loop depth 0
;;    pred:       2
  if (kslash_77 == 0)
    goto <bb 4>; [0.00%]
  else
    goto <bb 5>; [0.00%]
;;    succ:       4
;;                5

;;   basic block 4, loop depth 0
;;    pred:       3
  iftmp.20_78 = 1;
  goto <bb 6>; [0.00%]
;;    succ:       6

;;   basic block 5, loop depth 0
;;    pred:       2
;;                3
  iftmp.20_79 = 0;
;;    succ:       6

;;   basic block 6, loop depth 0
;;    pred:       4
;;                5
  # iftmp.20_64 = PHI <iftmp.20_78(4), iftmp.20_79(5)>
  iftmp.21_3 = (logical(kind=4)) iftmp.20_64;
  if (iftmp.21_3 != 0)
    goto <bb 7>; [0.00%]
  else
    goto <bb 8>; [0.00%]
;;    succ:       7
;;                8

;;   basic block 7, loop depth 0
;;    pred:       6
  k_81 = kcomma1_76 + 1;
  _4 = &*line_75(D)[k_81]{lb: 1 sz: 1};
  _5 = n_73 - k_81;
  _6 = _5 + 1;
  _7 = MAX_EXPR <_6, 0>;
  _8 = _gfortran_string_index (_7, _4, 1, &","[1]{lb: 1 sz: 1}, 0);
  _9 = k_81 + _8;
  kcomma2_82 = _9 + -1;
  goto <bb 9>; [0.00%]
;;    succ:       9

;;   basic block 8, loop depth 0
;;    pred:       6
  kcomma2_80 = 0;
;;    succ:       9

;;   basic block 9, loop depth 0
;;    pred:       7
;;                8
  # kcomma2_63 = PHI <kcomma2_82(7), kcomma2_80(8)>
  *ierr_83(D) = 0;
  if (kcomma1_76 == 0)
    goto <bb 10>; [0.00%]
  else
    goto <bb 14>; [0.00%]
;;    succ:       10
;;                14

;;   basic block 10, loop depth 0
;;    pred:       9
  dt_parm.11.common.filename = &"../src/io.f"[1]{lb: 1 sz: 1};
  dt_parm.11.common.line = 312;
  dt_parm.11.internal_unit = line_75(D);
  dt_parm.11.internal_unit_len = _line_70(D);
  dt_parm.11.internal_unit_desc = 0B;
  dt_parm.11.common.unit = -1;
  dt_parm.11.common.flags = 16524;
  _gfortran_st_read (&dt_parm.11);
  _gfortran_transfer_real (&dt_parm.11, p1_94(D), 4);
  _gfortran_st_read_done (&dt_parm.11);
  _10 = dt_parm.11.common.flags;
  _11 = _10 & 3;
  switch (_11) <default: <L11> [0.00%], case 1: L.40 [0.00%], case 2: L.41 [0.00%]>
;;    succ:       13
;;                11
;;                12

;;   basic block 11, loop depth 0
;;    pred:       10
L.40 [0.00%]:
  dt_parm.11 ={v} {CLOBBER};
  goto <bb 45>; [0.00%]
;;    succ:       45

;;   basic block 12, loop depth 0
;;    pred:       10
L.41 [0.00%]:
  dt_parm.11 ={v} {CLOBBER};
  goto <bb 46>; [0.00%]
;;    succ:       46

;;   basic block 13, loop depth 0
;;    pred:       10
<L11> [0.00%]:
  dt_parm.11 ={v} {CLOBBER};
  _12 = *p1_94(D);
  *p2_112(D) = _12;
  *np_132(D) = 1;
  goto <bb 47>; [0.00%]
;;    succ:       47

;;   basic block 14, loop depth 0
;;    pred:       9
  k_85 = kcomma1_76 + -1;
  dt_parm.12.common.filename = &"../src/io.f"[1]{lb: 1 sz: 1};
  dt_parm.12.common.line = 320;
  dt_parm.12.internal_unit = line_75(D);
  _13 = MAX_EXPR <k_85, 0>;
  dt_parm.12.internal_unit_len = _13;
  dt_parm.12.internal_unit_desc = 0B;
  dt_parm.12.common.unit = -1;
  dt_parm.12.common.flags = 16524;
  _gfortran_st_read (&dt_parm.12);
  _gfortran_transfer_real (&dt_parm.12, p1_94(D), 4);
  _gfortran_st_read_done (&dt_parm.12);
  _14 = dt_parm.12.common.flags;
  _15 = _14 & 3;
  switch (_15) <default: <L18> [0.00%], case 1: L.42 [0.00%], case 2: L.43 [0.00%]>
;;    succ:       17
;;                15
;;                16

;;   basic block 15, loop depth 0
;;    pred:       14
L.42 [0.00%]:
  dt_parm.12 ={v} {CLOBBER};
  goto <bb 45>; [0.00%]
;;    succ:       45

;;   basic block 16, loop depth 0
;;    pred:       14
L.43 [0.00%]:
  dt_parm.12 ={v} {CLOBBER};
  goto <bb 46>; [0.00%]
;;    succ:       46

;;   basic block 17, loop depth 0
;;    pred:       14
<L18> [0.00%]:
  dt_parm.12 ={v} {CLOBBER};
  if (kcomma2_63 == 0)
    goto <bb 18>; [0.00%]
  else
    goto <bb 20>; [0.00%]
;;    succ:       18
;;                20

;;   basic block 18, loop depth 0
;;    pred:       17
  if (kslash_77 == 0)
    goto <bb 19>; [0.00%]
  else
    goto <bb 20>; [0.00%]
;;    succ:       19
;;                20

;;   basic block 19, loop depth 0
;;    pred:       18
  iftmp.22_100 = 1;
  goto <bb 21>; [0.00%]
;;    succ:       21

;;   basic block 20, loop depth 0
;;    pred:       17
;;                18
  iftmp.22_101 = 0;
;;    succ:       21

;;   basic block 21, loop depth 0
;;    pred:       19
;;                20
  # iftmp.22_65 = PHI <iftmp.22_100(19), iftmp.22_101(20)>
  iftmp.23_16 = (logical(kind=4)) iftmp.22_65;
  if (iftmp.23_16 != 0)
    goto <bb 22>; [0.00%]
  else
    goto <bb 29>; [0.00%]
;;    succ:       22
;;                29

;;   basic block 22, loop depth 0
;;    pred:       21
  k_165 = kcomma1_76 + 1;
  dt_parm.13.common.filename = &"../src/io.f"[1]{lb: 1 sz: 1};
  dt_parm.13.common.line = 325;
  _17 = &*line_75(D)[k_165]{lb: 1 sz: 1};
  dt_parm.13.internal_unit = _17;
  _18 = n_73 - k_165;
  _19 = _18 + 1;
  _20 = MAX_EXPR <_19, 0>;
  dt_parm.13.internal_unit_len = _20;
  dt_parm.13.internal_unit_desc = 0B;
  dt_parm.13.common.unit = -1;
  dt_parm.13.common.flags = 16524;
  _gfortran_st_read (&dt_parm.13);
  _gfortran_transfer_real (&dt_parm.13, p2_112(D), 4);
  _gfortran_st_read_done (&dt_parm.13);
  _21 = dt_parm.13.common.flags;
  _22 = _21 & 3;
  switch (_22) <default: <L29> [0.00%], case 1: L.45 [0.00%], case 2: L.46 [0.00%]>
;;    succ:       25
;;                23
;;                24

;;   basic block 23, loop depth 0
;;    pred:       22
L.45 [0.00%]:
  dt_parm.13 ={v} {CLOBBER};
  goto <bb 45>; [0.00%]
;;    succ:       45

;;   basic block 24, loop depth 0
;;    pred:       22
L.46 [0.00%]:
  dt_parm.13 ={v} {CLOBBER};
  goto <bb 46>; [0.00%]
;;    succ:       46

;;   basic block 25, loop depth 0
;;    pred:       22
<L29> [0.00%]:
  dt_parm.13 ={v} {CLOBBER};
  _23 = *p1_94(D);
  _24 = *p2_112(D);
  if (_23 == _24)
    goto <bb 26>; [0.00%]
  else
    goto <bb 27>; [0.00%]
;;    succ:       26
;;                27

;;   basic block 26, loop depth 0
;;    pred:       25
  *np_132(D) = 1;
  goto <bb 28>; [0.00%]
;;    succ:       28

;;   basic block 27, loop depth 0
;;    pred:       25
  *np_132(D) = 5;
;;    succ:       28

;;   basic block 28, loop depth 0
;;    pred:       26
;;                27
  goto <bb 47>; [0.00%]
;;    succ:       47

;;   basic block 29, loop depth 0
;;    pred:       21
  if (kcomma2_63 != 0)
    goto <bb 30>; [0.00%]
  else
    goto <bb 37>; [0.00%]
;;    succ:       30
;;                37

;;   basic block 30, loop depth 0
;;    pred:       29
  ka_134 = kcomma1_76 + 1;
  kb_135 = kcomma2_63 + -1;
  dt_parm.14.common.filename = &"../src/io.f"[1]{lb: 1 sz: 1};
  dt_parm.14.common.line = 339;
  _25 = &*line_75(D)[ka_134]{lb: 1 sz: 1};
  dt_parm.14.internal_unit = _25;
  _26 = kb_135 - ka_134;
  _27 = _26 + 1;
  _28 = MAX_EXPR <_27, 0>;
  dt_parm.14.internal_unit_len = _28;
  dt_parm.14.internal_unit_desc = 0B;
  dt_parm.14.common.unit = -1;
  dt_parm.14.common.flags = 16524;
  _gfortran_st_read (&dt_parm.14);
  _gfortran_transfer_real (&dt_parm.14, p2_112(D), 4);
  _gfortran_st_read_done (&dt_parm.14);
  _29 = dt_parm.14.common.flags;
  _30 = _29 & 3;
  switch (_30) <default: <L41> [0.00%], case 1: L.48 [0.00%], case 2: L.49 [0.00%]>
;;    succ:       33
;;                31
;;                32

;;   basic block 31, loop depth 0
;;    pred:       30
L.48 [0.00%]:
  dt_parm.14 ={v} {CLOBBER};
  goto <bb 45>; [0.00%]
;;    succ:       45

;;   basic block 32, loop depth 0
;;    pred:       30
L.49 [0.00%]:
  dt_parm.14 ={v} {CLOBBER};
  goto <bb 46>; [0.00%]
;;    succ:       46

;;   basic block 33, loop depth 0
;;    pred:       30
<L41> [0.00%]:
  dt_parm.14 ={v} {CLOBBER};
  k_149 = kcomma2_63 + 1;
  dt_parm.15.common.filename = &"../src/io.f"[1]{lb: 1 sz: 1};
  dt_parm.15.common.line = 341;
  _31 = &*line_75(D)[k_149]{lb: 1 sz: 1};
  dt_parm.15.internal_unit = _31;
  _32 = n_73 - k_149;
  _33 = _32 + 1;
  _34 = MAX_EXPR <_33, 0>;
  dt_parm.15.internal_unit_len = _34;
  dt_parm.15.internal_unit_desc = 0B;
  dt_parm.15.common.unit = -1;
  dt_parm.15.common.flags = 16524;
  _gfortran_st_read (&dt_parm.15);
  _gfortran_transfer_real (&dt_parm.15, &pdel, 4);
  _gfortran_st_read_done (&dt_parm.15);
  _35 = dt_parm.15.common.flags;
  _36 = _35 & 3;
  switch (_36) <default: <L47> [0.00%], case 1: L.50 [0.00%], case 2: L.51 [0.00%]>
;;    succ:       36
;;                34
;;                35

;;   basic block 34, loop depth 0
;;    pred:       33
L.50 [0.00%]:
  dt_parm.15 ={v} {CLOBBER};
  goto <bb 45>; [0.00%]
;;    succ:       45

;;   basic block 35, loop depth 0
;;    pred:       33
L.51 [0.00%]:
  dt_parm.15 ={v} {CLOBBER};
  goto <bb 46>; [0.00%]
;;    succ:       46

;;   basic block 36, loop depth 0
;;    pred:       33
<L47> [0.00%]:
  dt_parm.15 ={v} {CLOBBER};
  _37 = *p2_112(D);
  _38 = *p1_94(D);
  _39 = _37 - _38;
  _40 = ((_39));
  pdel.24_41 = pdel;
  _42 = _40 / pdel.24_41;
  rnum = _42;
  rnum.25_43 = rnum;
  _44 = ABS_EXPR <rnum.25_43>;
  _45 = _44 + 1.4900000095367431640625e+0;
  _46 = (integer(kind=4)) _45;
  *np_132(D) = _46;
  goto <bb 47>; [0.00%]
;;    succ:       47

;;   basic block 37, loop depth 0
;;    pred:       29
  if (kslash_77 != 0)
    goto <bb 38>; [0.00%]
  else
    goto <bb 45>; [0.00%]
;;    succ:       38
;;                45

;;   basic block 38, loop depth 0
;;    pred:       37
  ka_102 = kcomma1_76 + 1;
  kb_103 = kslash_77 + -1;
  dt_parm.16.common.filename = &"../src/io.f"[1]{lb: 1 sz: 1};
  dt_parm.16.common.line = 350;
  _47 = &*line_75(D)[ka_102]{lb: 1 sz: 1};
  dt_parm.16.internal_unit = _47;
  _48 = kb_103 - ka_102;
  _49 = _48 + 1;
  _50 = MAX_EXPR <_49, 0>;
  dt_parm.16.internal_unit_len = _50;
  dt_parm.16.internal_unit_desc = 0B;
  dt_parm.16.common.unit = -1;
  dt_parm.16.common.flags = 16524;
  _gfortran_st_read (&dt_parm.16);
  _gfortran_transfer_real (&dt_parm.16, p2_112(D), 4);
  _gfortran_st_read_done (&dt_parm.16);
  _51 = dt_parm.16.common.flags;
  _52 = _51 & 3;
  switch (_52) <default: <L55> [0.00%], case 1: L.52 [0.00%], case 2: L.53 [0.00%]>
;;    succ:       41
;;                39
;;                40

;;   basic block 39, loop depth 0
;;    pred:       38
L.52 [0.00%]:
  dt_parm.16 ={v} {CLOBBER};
  goto <bb 45>; [0.00%]
;;    succ:       45

;;   basic block 40, loop depth 0
;;    pred:       38
L.53 [0.00%]:
  dt_parm.16 ={v} {CLOBBER};
  goto <bb 46>; [0.00%]
;;    succ:       46

;;   basic block 41, loop depth 0
;;    pred:       38
<L55> [0.00%]:
  dt_parm.16 ={v} {CLOBBER};
  k_118 = kslash_77 + 1;
  dt_parm.17.common.filename = &"../src/io.f"[1]{lb: 1 sz: 1};
  dt_parm.17.common.line = 352;
  _53 = &*line_75(D)[k_118]{lb: 1 sz: 1};
  dt_parm.17.internal_unit = _53;
  _54 = n_73 - k_118;
  _55 = _54 + 1;
  _56 = MAX_EXPR <_55, 0>;
  dt_parm.17.internal_unit_len = _56;
  dt_parm.17.internal_unit_desc = 0B;
  dt_parm.17.common.unit = -1;
  dt_parm.17.common.flags = 16524;
  _gfortran_st_read (&dt_parm.17);
  _gfortran_transfer_real (&dt_parm.17, &rnum, 4);
  _gfortran_st_read_done (&dt_parm.17);
  _57 = dt_parm.17.common.flags;
  _58 = _57 & 3;
  switch (_58) <default: <L61> [0.00%], case 1: L.54 [0.00%], case 2: L.55 [0.00%]>
;;    succ:       44
;;                42
;;                43

;;   basic block 42, loop depth 0
;;    pred:       41
L.54 [0.00%]:
  dt_parm.17 ={v} {CLOBBER};
  goto <bb 45>; [0.00%]
;;    succ:       45

;;   basic block 43, loop depth 0
;;    pred:       41
L.55 [0.00%]:
  dt_parm.17 ={v} {CLOBBER};
  goto <bb 46>; [0.00%]
;;    succ:       46

;;   basic block 44, loop depth 0
;;    pred:       41
<L61> [0.00%]:
  dt_parm.17 ={v} {CLOBBER};
  rnum.26_59 = rnum;
  _60 = ABS_EXPR <rnum.26_59>;
  _61 = _60 + 9.99999977648258209228515625e-3;
  _62 = (integer(kind=4)) _61;
  *np_132(D) = _62;
  goto <bb 47>; [0.00%]
;;    succ:       47

;;   basic block 45, loop depth 0
;;    pred:       11
;;                15
;;                23
;;                31
;;                34
;;                37
;;                39
;;                42
  *ierr_83(D) = 1;
  goto <bb 47>; [0.00%]
;;    succ:       47

;;   basic block 46, loop depth 0
;;    pred:       12
;;                16
;;                24
;;                32
;;                35
;;                40
;;                43
  *ierr_83(D) = -1;
;;    succ:       47

;;   basic block 47, loop depth 0
;;    pred:       13
;;                28
;;                36
;;                44
;;                45
;;                46
  pdel ={v} {CLOBBER};
  rnum ={v} {CLOBBER};
;;    succ:       48

;;   basic block 48, loop depth 0
;;    pred:       47
<L71> [0.00%]:
  return;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_1 - 1 )
Partition 2 (_2 - 2 )
Partition 3 (iftmp.21_3 - 3 )
Partition 4 (_4 - 4 )
Partition 5 (_5 - 5 )
Partition 6 (_6 - 6 )
Partition 7 (_7 - 7 )
Partition 8 (_8 - 8 )
Partition 9 (_9 - 9 )
Partition 10 (_10 - 10 )
Partition 11 (_11 - 11 )
Partition 12 (_12 - 12 )
Partition 13 (_13 - 13 )
Partition 14 (_14 - 14 )
Partition 15 (_15 - 15 )
Partition 16 (iftmp.23_16 - 16 )
Partition 17 (_17 - 17 )
Partition 18 (_18 - 18 )
Partition 19 (_19 - 19 )
Partition 20 (_20 - 20 )
Partition 21 (_21 - 21 )
Partition 22 (_22 - 22 )
Partition 23 (_23 - 23 )
Partition 24 (_24 - 24 )
Partition 25 (_25 - 25 )
Partition 26 (_26 - 26 )
Partition 27 (_27 - 27 )
Partition 28 (_28 - 28 )
Partition 29 (_29 - 29 )
Partition 30 (_30 - 30 )
Partition 31 (_31 - 31 )
Partition 32 (_32 - 32 )
Partition 33 (_33 - 33 )
Partition 34 (_34 - 34 )
Partition 35 (_35 - 35 )
Partition 36 (_36 - 36 )
Partition 37 (_37 - 37 )
Partition 38 (_38 - 38 )
Partition 39 (_39 - 39 )
Partition 40 (_40 - 40 )
Partition 41 (pdel.24_41 - 41 )
Partition 42 (_42 - 42 )
Partition 43 (rnum.25_43 - 43 )
Partition 44 (_44 - 44 )
Partition 45 (_45 - 45 )
Partition 46 (_46 - 46 )
Partition 47 (_47 - 47 )
Partition 48 (_48 - 48 )
Partition 49 (_49 - 49 )
Partition 50 (_50 - 50 )
Partition 51 (_51 - 51 )
Partition 52 (_52 - 52 )
Partition 53 (_53 - 53 )
Partition 54 (_54 - 54 )
Partition 55 (_55 - 55 )
Partition 56 (_56 - 56 )
Partition 57 (_57 - 57 )
Partition 58 (_58 - 58 )
Partition 59 (rnum.26_59 - 59 )
Partition 60 (_60 - 60 )
Partition 61 (_61 - 61 )
Partition 62 (_62 - 62 )
Partition 63 (kcomma2_63 - 63 )
Partition 64 (iftmp.20_64 - 64 )
Partition 65 (iftmp.22_65 - 65 )
Partition 70 (_line_70(D) - 70 )
Partition 71 (_71 - 71 )
Partition 72 (_72 - 72 )
Partition 73 (n_73 - 73 )
Partition 75 (line_75(D) - 75 )
Partition 76 (kcomma1_76 - 76 )
Partition 77 (kslash_77 - 77 )
Partition 78 (iftmp.20_78 - 78 )
Partition 79 (iftmp.20_79 - 79 )
Partition 80 (kcomma2_80 - 80 )
Partition 81 (k_81 - 81 )
Partition 82 (kcomma2_82 - 82 )
Partition 83 (ierr_83(D) - 83 )
Partition 85 (k_85 - 85 )
Partition 94 (p1_94(D) - 94 )
Partition 100 (iftmp.22_100 - 100 )
Partition 101 (iftmp.22_101 - 101 )
Partition 102 (ka_102 - 102 )
Partition 103 (kb_103 - 103 )
Partition 112 (p2_112(D) - 112 )
Partition 118 (k_118 - 118 )
Partition 132 (np_132(D) - 132 )
Partition 134 (ka_134 - 134 )
Partition 135 (kb_135 - 135 )
Partition 149 (k_149 - 149 )
Partition 165 (k_165 - 165 )


Partition map 

Partition 0 (kcomma2_63 - 63 )
Partition 1 (iftmp.20_64 - 64 )
Partition 2 (iftmp.22_65 - 65 )
Partition 3 (_line_70(D) - 70 )
Partition 4 (line_75(D) - 75 )
Partition 5 (iftmp.20_78 - 78 )
Partition 6 (iftmp.20_79 - 79 )
Partition 7 (kcomma2_80 - 80 )
Partition 8 (k_81 - 81 )
Partition 9 (kcomma2_82 - 82 )
Partition 10 (ierr_83(D) - 83 )
Partition 11 (k_85 - 85 )
Partition 12 (p1_94(D) - 94 )
Partition 13 (iftmp.22_100 - 100 )
Partition 14 (iftmp.22_101 - 101 )
Partition 15 (ka_102 - 102 )
Partition 16 (kb_103 - 103 )
Partition 17 (p2_112(D) - 112 )
Partition 18 (k_118 - 118 )
Partition 19 (np_132(D) - 132 )
Partition 20 (ka_134 - 134 )
Partition 21 (kb_135 - 135 )
Partition 22 (k_149 - 149 )
Partition 23 (k_165 - 165 )


Conflict graph:

After sorting:
Sorted Coalesce list:
(2147483646, 0) kcomma2_63 <-> kcomma2_80
(2147483646, 0) kcomma2_63 <-> kcomma2_82
(2147483646, 0) k_81 <-> k_85
(2147483646, 0) k_81 <-> k_118
(2147483646, 0) ka_102 <-> ka_134
(2147483646, 0) kb_103 <-> kb_135
(2147483646, 0) k_81 <-> k_149
(2147483646, 0) k_81 <-> k_165

Partition map 

Partition 0 (kcomma2_63 - 63 )
Partition 1 (iftmp.20_64 - 64 )
Partition 2 (iftmp.22_65 - 65 )
Partition 3 (_line_70(D) - 70 )
Partition 4 (line_75(D) - 75 )
Partition 5 (iftmp.20_78 - 78 )
Partition 6 (iftmp.20_79 - 79 )
Partition 7 (kcomma2_80 - 80 )
Partition 8 (k_81 - 81 )
Partition 9 (kcomma2_82 - 82 )
Partition 10 (ierr_83(D) - 83 )
Partition 11 (k_85 - 85 )
Partition 12 (p1_94(D) - 94 )
Partition 13 (iftmp.22_100 - 100 )
Partition 14 (iftmp.22_101 - 101 )
Partition 15 (ka_102 - 102 )
Partition 16 (kb_103 - 103 )
Partition 17 (p2_112(D) - 112 )
Partition 18 (k_118 - 118 )
Partition 19 (np_132(D) - 132 )
Partition 20 (ka_134 - 134 )
Partition 21 (kb_135 - 135 )
Partition 22 (k_149 - 149 )
Partition 23 (k_165 - 165 )

Coalesce list: (63)kcomma2_63 & (80)kcomma2_80 [map: 0, 7] : Success -> 0
Coalesce list: (63)kcomma2_63 & (82)kcomma2_82 [map: 0, 9] : Success -> 0
Coalesce list: (81)k_81 & (85)k_85 [map: 8, 11] : Success -> 8
Coalesce list: (81)k_81 & (118)k_118 [map: 8, 18] : Success -> 8
Coalesce list: (102)ka_102 & (134)ka_134 [map: 15, 20] : Success -> 15
Coalesce list: (103)kb_103 & (135)kb_135 [map: 16, 21] : Success -> 16
Coalesce list: (81)k_81 & (149)k_149 [map: 8, 22] : Success -> 8
Coalesce list: (81)k_81 & (165)k_165 [map: 8, 23] : Success -> 8
Coalesce list: (65)iftmp.22_65 & (101)iftmp.22_101 [map: 2, 14] : Success -> 2
Coalesce list: (65)iftmp.22_65 & (100)iftmp.22_100 [map: 2, 13] : Success -> 2
Coalesce list: (63)kcomma2_63 & (80)kcomma2_63: Already Coalesced.
Coalesce list: (63)kcomma2_63 & (82)kcomma2_63: Already Coalesced.
Coalesce list: (64)iftmp.20_64 & (79)iftmp.20_79 [map: 1, 6] : Success -> 1
Coalesce list: (64)iftmp.20_64 & (78)iftmp.20_78 [map: 1, 5] : Success -> 1
After Coalescing:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (_2 - 2 )
Partition 2 (iftmp.21_3 - 3 )
Partition 3 (_4 - 4 )
Partition 4 (_5 - 5 )
Partition 5 (_6 - 6 )
Partition 6 (_7 - 7 )
Partition 7 (_8 - 8 )
Partition 8 (_9 - 9 )
Partition 9 (_10 - 10 )
Partition 10 (_11 - 11 )
Partition 11 (_12 - 12 )
Partition 12 (_13 - 13 )
Partition 13 (_14 - 14 )
Partition 14 (_15 - 15 )
Partition 15 (iftmp.23_16 - 16 )
Partition 16 (_17 - 17 )
Partition 17 (_18 - 18 )
Partition 18 (_19 - 19 )
Partition 19 (_20 - 20 )
Partition 20 (_21 - 21 )
Partition 21 (_22 - 22 )
Partition 22 (_23 - 23 )
Partition 23 (_24 - 24 )
Partition 24 (_25 - 25 )
Partition 25 (_26 - 26 )
Partition 26 (_27 - 27 )
Partition 27 (_28 - 28 )
Partition 28 (_29 - 29 )
Partition 29 (_30 - 30 )
Partition 30 (_31 - 31 )
Partition 31 (_32 - 32 )
Partition 32 (_33 - 33 )
Partition 33 (_34 - 34 )
Partition 34 (_35 - 35 )
Partition 35 (_36 - 36 )
Partition 36 (_37 - 37 )
Partition 37 (_38 - 38 )
Partition 38 (_39 - 39 )
Partition 39 (_40 - 40 )
Partition 40 (pdel.24_41 - 41 )
Partition 41 (_42 - 42 )
Partition 42 (rnum.25_43 - 43 )
Partition 43 (_44 - 44 )
Partition 44 (_45 - 45 )
Partition 45 (_46 - 46 )
Partition 46 (_47 - 47 )
Partition 47 (_48 - 48 )
Partition 48 (_49 - 49 )
Partition 49 (_50 - 50 )
Partition 50 (_51 - 51 )
Partition 51 (_52 - 52 )
Partition 52 (_53 - 53 )
Partition 53 (_54 - 54 )
Partition 54 (_55 - 55 )
Partition 55 (_56 - 56 )
Partition 56 (_57 - 57 )
Partition 57 (_58 - 58 )
Partition 58 (rnum.26_59 - 59 )
Partition 59 (_60 - 60 )
Partition 60 (_61 - 61 )
Partition 61 (_62 - 62 )
Partition 62 (kcomma2_63 - 63 80 82 )
Partition 63 (iftmp.20_64 - 64 78 79 )
Partition 64 (iftmp.22_65 - 65 100 101 )
Partition 65 (_line_70(D) - 70 )
Partition 66 (_71 - 71 )
Partition 67 (_72 - 72 )
Partition 68 (n_73 - 73 )
Partition 69 (line_75(D) - 75 )
Partition 70 (kcomma1_76 - 76 )
Partition 71 (kslash_77 - 77 )
Partition 72 (k_81 - 81 85 118 149 165 )
Partition 73 (ierr_83(D) - 83 )
Partition 74 (p1_94(D) - 94 )
Partition 75 (ka_102 - 102 134 )
Partition 76 (kb_103 - 103 135 )
Partition 77 (p2_112(D) - 112 )
Partition 78 (np_132(D) - 132 )

pparse (character(kind=1)[1:_line] & restrict line, real(kind=4) & restrict p1, real(kind=4) & restrict p2, integer(kind=4) & restrict np, integer(kind=4) & restrict ierr, integer(kind=4) _line)
{
  struct __st_parameter_dt dt_parm.17;
  struct __st_parameter_dt dt_parm.16;
  struct __st_parameter_dt dt_parm.15;
  struct __st_parameter_dt dt_parm.14;
  struct __st_parameter_dt dt_parm.13;
  struct __st_parameter_dt dt_parm.12;
  struct __st_parameter_dt dt_parm.11;
  sizetype D.3709;
  bitsizetype D.3708;
  real(kind=4) rnum;
  real(kind=4) pdel;
  integer(kind=4) n;
  integer(kind=4) kslash;
  integer(kind=4) kcomma2;
  integer(kind=4) kcomma1;
  integer(kind=4) kb;
  integer(kind=4) ka;
  integer(kind=4) k;
  logical(kind=1) iftmp.22;
  logical(kind=1) iftmp.20;
  sizetype _1;
  bitsizetype _2;
  logical(kind=4) iftmp.21_3;
  character(kind=1) * _4;
  integer(kind=4) _5;
  integer(kind=4) _6;
  integer(kind=4) _7;
  integer(kind=4) _8;
  integer(kind=4) _9;
  integer(kind=4) _10;
  integer(kind=4) _11;
  real(kind=4) _12;
  integer(kind=4) _13;
  integer(kind=4) _14;
  integer(kind=4) _15;
  logical(kind=4) iftmp.23_16;
  character(kind=1) * _17;
  integer(kind=4) _18;
  integer(kind=4) _19;
  integer(kind=4) _20;
  integer(kind=4) _21;
  integer(kind=4) _22;
  real(kind=4) _23;
  real(kind=4) _24;
  character(kind=1) * _25;
  integer(kind=4) _26;
  integer(kind=4) _27;
  integer(kind=4) _28;
  integer(kind=4) _29;
  integer(kind=4) _30;
  character(kind=1) * _31;
  integer(kind=4) _32;
  integer(kind=4) _33;
  integer(kind=4) _34;
  integer(kind=4) _35;
  integer(kind=4) _36;
  real(kind=4) _37;
  real(kind=4) _38;
  real(kind=4) _39;
  real(kind=4) _40;
  real(kind=4) pdel.24_41;
  real(kind=4) _42;
  real(kind=4) rnum.25_43;
  real(kind=4) _44;
  real(kind=4) _45;
  integer(kind=4) _46;
  character(kind=1) * _47;
  integer(kind=4) _48;
  integer(kind=4) _49;
  integer(kind=4) _50;
  integer(kind=4) _51;
  integer(kind=4) _52;
  character(kind=1) * _53;
  integer(kind=4) _54;
  integer(kind=4) _55;
  integer(kind=4) _56;
  integer(kind=4) _57;
  integer(kind=4) _58;
  real(kind=4) rnum.26_59;
  real(kind=4) _60;
  real(kind=4) _61;
  integer(kind=4) _62;
  logical(kind=1) iftmp.20_64;
  logical(kind=1) iftmp.22_65;
  bitsizetype _71;
  sizetype _72;
  logical(kind=1) iftmp.20_78;
  logical(kind=1) iftmp.20_79;
  logical(kind=1) iftmp.22_100;
  logical(kind=1) iftmp.22_101;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = (sizetype) _line_70(D);
  _2 = (bitsizetype) _1;
  _71 = _2 * 8;
  _72 = (sizetype) _line_70(D);
  n_73 = _line_70(D);
  kcomma1_76 = _gfortran_string_index (_line_70(D), line_75(D), 1, &","[1]{lb: 1 sz: 1}, 0);
  kslash_77 = _gfortran_string_index (_line_70(D), line_75(D), 1, &"/"[1]{lb: 1 sz: 1}, 0);
  if (kcomma1_76 > 0)
    goto <bb 3>; [0.00%]
  else
    goto <bb 5>; [0.00%]
;;    succ:       3
;;                5

;;   basic block 3, loop depth 0
;;    pred:       2
  if (kslash_77 == 0)
    goto <bb 4>; [0.00%]
  else
    goto <bb 5>; [0.00%]
;;    succ:       4
;;                5

;;   basic block 4, loop depth 0
;;    pred:       3
  iftmp.20_78 = 1;
  goto <bb 6>; [0.00%]
;;    succ:       6

;;   basic block 5, loop depth 0
;;    pred:       2
;;                3
  iftmp.20_79 = 0;
;;    succ:       6

;;   basic block 6, loop depth 0
;;    pred:       4
;;                5
  # iftmp.20_64 = PHI <iftmp.20_78(4), iftmp.20_79(5)>
  iftmp.21_3 = (logical(kind=4)) iftmp.20_64;
  if (iftmp.21_3 != 0)
    goto <bb 7>; [0.00%]
  else
    goto <bb 8>; [0.00%]
;;    succ:       7
;;                8

;;   basic block 7, loop depth 0
;;    pred:       6
  k_81 = kcomma1_76 + 1;
  _4 = &*line_75(D)[k_81]{lb: 1 sz: 1};
  _5 = n_73 - k_81;
  _6 = _5 + 1;
  _7 = MAX_EXPR <_6, 0>;
  _8 = _gfortran_string_index (_7, _4, 1, &","[1]{lb: 1 sz: 1}, 0);
  _9 = k_81 + _8;
  kcomma2_82 = _9 + -1;
  goto <bb 9>; [0.00%]
;;    succ:       9

;;   basic block 8, loop depth 0
;;    pred:       6
  kcomma2_80 = 0;
;;    succ:       9

;;   basic block 9, loop depth 0
;;    pred:       7
;;                8
  # kcomma2_63 = PHI <kcomma2_82(7), kcomma2_80(8)>
  *ierr_83(D) = 0;
  if (kcomma1_76 == 0)
    goto <bb 10>; [0.00%]
  else
    goto <bb 14>; [0.00%]
;;    succ:       10
;;                14

;;   basic block 10, loop depth 0
;;    pred:       9
  dt_parm.11.common.filename = &"../src/io.f"[1]{lb: 1 sz: 1};
  dt_parm.11.common.line = 312;
  dt_parm.11.internal_unit = line_75(D);
  dt_parm.11.internal_unit_len = _line_70(D);
  dt_parm.11.internal_unit_desc = 0B;
  dt_parm.11.common.unit = -1;
  dt_parm.11.common.flags = 16524;
  _gfortran_st_read (&dt_parm.11);
  _gfortran_transfer_real (&dt_parm.11, p1_94(D), 4);
  _gfortran_st_read_done (&dt_parm.11);
  _10 = dt_parm.11.common.flags;
  _11 = _10 & 3;
  switch (_11) <default: <L11> [0.00%], case 1: L.40 [0.00%], case 2: L.41 [0.00%]>
;;    succ:       13
;;                11
;;                12

;;   basic block 11, loop depth 0
;;    pred:       10
L.40 [0.00%]:
  dt_parm.11 ={v} {CLOBBER};
  goto <bb 45>; [0.00%]
;;    succ:       45

;;   basic block 12, loop depth 0
;;    pred:       10
L.41 [0.00%]:
  dt_parm.11 ={v} {CLOBBER};
  goto <bb 46>; [0.00%]
;;    succ:       46

;;   basic block 13, loop depth 0
;;    pred:       10
<L11> [0.00%]:
  dt_parm.11 ={v} {CLOBBER};
  _12 = *p1_94(D);
  *p2_112(D) = _12;
  *np_132(D) = 1;
  goto <bb 47>; [0.00%]
;;    succ:       47

;;   basic block 14, loop depth 0
;;    pred:       9
  k_85 = kcomma1_76 + -1;
  dt_parm.12.common.filename = &"../src/io.f"[1]{lb: 1 sz: 1};
  dt_parm.12.common.line = 320;
  dt_parm.12.internal_unit = line_75(D);
  _13 = MAX_EXPR <k_85, 0>;
  dt_parm.12.internal_unit_len = _13;
  dt_parm.12.internal_unit_desc = 0B;
  dt_parm.12.common.unit = -1;
  dt_parm.12.common.flags = 16524;
  _gfortran_st_read (&dt_parm.12);
  _gfortran_transfer_real (&dt_parm.12, p1_94(D), 4);
  _gfortran_st_read_done (&dt_parm.12);
  _14 = dt_parm.12.common.flags;
  _15 = _14 & 3;
  switch (_15) <default: <L18> [0.00%], case 1: L.42 [0.00%], case 2: L.43 [0.00%]>
;;    succ:       17
;;                15
;;                16

;;   basic block 15, loop depth 0
;;    pred:       14
L.42 [0.00%]:
  dt_parm.12 ={v} {CLOBBER};
  goto <bb 45>; [0.00%]
;;    succ:       45

;;   basic block 16, loop depth 0
;;    pred:       14
L.43 [0.00%]:
  dt_parm.12 ={v} {CLOBBER};
  goto <bb 46>; [0.00%]
;;    succ:       46

;;   basic block 17, loop depth 0
;;    pred:       14
<L18> [0.00%]:
  dt_parm.12 ={v} {CLOBBER};
  if (kcomma2_63 == 0)
    goto <bb 18>; [0.00%]
  else
    goto <bb 20>; [0.00%]
;;    succ:       18
;;                20

;;   basic block 18, loop depth 0
;;    pred:       17
  if (kslash_77 == 0)
    goto <bb 19>; [0.00%]
  else
    goto <bb 20>; [0.00%]
;;    succ:       19
;;                20

;;   basic block 19, loop depth 0
;;    pred:       18
  iftmp.22_100 = 1;
  goto <bb 21>; [0.00%]
;;    succ:       21

;;   basic block 20, loop depth 0
;;    pred:       17
;;                18
  iftmp.22_101 = 0;
;;    succ:       21

;;   basic block 21, loop depth 0
;;    pred:       19
;;                20
  # iftmp.22_65 = PHI <iftmp.22_100(19), iftmp.22_101(20)>
  iftmp.23_16 = (logical(kind=4)) iftmp.22_65;
  if (iftmp.23_16 != 0)
    goto <bb 22>; [0.00%]
  else
    goto <bb 29>; [0.00%]
;;    succ:       22
;;                29

;;   basic block 22, loop depth 0
;;    pred:       21
  k_165 = kcomma1_76 + 1;
  dt_parm.13.common.filename = &"../src/io.f"[1]{lb: 1 sz: 1};
  dt_parm.13.common.line = 325;
  _17 = &*line_75(D)[k_165]{lb: 1 sz: 1};
  dt_parm.13.internal_unit = _17;
  _18 = n_73 - k_165;
  _19 = _18 + 1;
  _20 = MAX_EXPR <_19, 0>;
  dt_parm.13.internal_unit_len = _20;
  dt_parm.13.internal_unit_desc = 0B;
  dt_parm.13.common.unit = -1;
  dt_parm.13.common.flags = 16524;
  _gfortran_st_read (&dt_parm.13);
  _gfortran_transfer_real (&dt_parm.13, p2_112(D), 4);
  _gfortran_st_read_done (&dt_parm.13);
  _21 = dt_parm.13.common.flags;
  _22 = _21 & 3;
  switch (_22) <default: <L29> [0.00%], case 1: L.45 [0.00%], case 2: L.46 [0.00%]>
;;    succ:       25
;;                23
;;                24

;;   basic block 23, loop depth 0
;;    pred:       22
L.45 [0.00%]:
  dt_parm.13 ={v} {CLOBBER};
  goto <bb 45>; [0.00%]
;;    succ:       45

;;   basic block 24, loop depth 0
;;    pred:       22
L.46 [0.00%]:
  dt_parm.13 ={v} {CLOBBER};
  goto <bb 46>; [0.00%]
;;    succ:       46

;;   basic block 25, loop depth 0
;;    pred:       22
<L29> [0.00%]:
  dt_parm.13 ={v} {CLOBBER};
  _23 = *p1_94(D);
  _24 = *p2_112(D);
  if (_23 == _24)
    goto <bb 26>; [0.00%]
  else
    goto <bb 27>; [0.00%]
;;    succ:       26
;;                27

;;   basic block 26, loop depth 0
;;    pred:       25
  *np_132(D) = 1;
  goto <bb 28>; [0.00%]
;;    succ:       28

;;   basic block 27, loop depth 0
;;    pred:       25
  *np_132(D) = 5;
;;    succ:       28

;;   basic block 28, loop depth 0
;;    pred:       26
;;                27
  goto <bb 47>; [0.00%]
;;    succ:       47

;;   basic block 29, loop depth 0
;;    pred:       21
  if (kcomma2_63 != 0)
    goto <bb 30>; [0.00%]
  else
    goto <bb 37>; [0.00%]
;;    succ:       30
;;                37

;;   basic block 30, loop depth 0
;;    pred:       29
  ka_134 = kcomma1_76 + 1;
  kb_135 = kcomma2_63 + -1;
  dt_parm.14.common.filename = &"../src/io.f"[1]{lb: 1 sz: 1};
  dt_parm.14.common.line = 339;
  _25 = &*line_75(D)[ka_134]{lb: 1 sz: 1};
  dt_parm.14.internal_unit = _25;
  _26 = kb_135 - ka_134;
  _27 = _26 + 1;
  _28 = MAX_EXPR <_27, 0>;
  dt_parm.14.internal_unit_len = _28;
  dt_parm.14.internal_unit_desc = 0B;
  dt_parm.14.common.unit = -1;
  dt_parm.14.common.flags = 16524;
  _gfortran_st_read (&dt_parm.14);
  _gfortran_transfer_real (&dt_parm.14, p2_112(D), 4);
  _gfortran_st_read_done (&dt_parm.14);
  _29 = dt_parm.14.common.flags;
  _30 = _29 & 3;
  switch (_30) <default: <L41> [0.00%], case 1: L.48 [0.00%], case 2: L.49 [0.00%]>
;;    succ:       33
;;                31
;;                32

;;   basic block 31, loop depth 0
;;    pred:       30
L.48 [0.00%]:
  dt_parm.14 ={v} {CLOBBER};
  goto <bb 45>; [0.00%]
;;    succ:       45

;;   basic block 32, loop depth 0
;;    pred:       30
L.49 [0.00%]:
  dt_parm.14 ={v} {CLOBBER};
  goto <bb 46>; [0.00%]
;;    succ:       46

;;   basic block 33, loop depth 0
;;    pred:       30
<L41> [0.00%]:
  dt_parm.14 ={v} {CLOBBER};
  k_149 = kcomma2_63 + 1;
  dt_parm.15.common.filename = &"../src/io.f"[1]{lb: 1 sz: 1};
  dt_parm.15.common.line = 341;
  _31 = &*line_75(D)[k_149]{lb: 1 sz: 1};
  dt_parm.15.internal_unit = _31;
  _32 = n_73 - k_149;
  _33 = _32 + 1;
  _34 = MAX_EXPR <_33, 0>;
  dt_parm.15.internal_unit_len = _34;
  dt_parm.15.internal_unit_desc = 0B;
  dt_parm.15.common.unit = -1;
  dt_parm.15.common.flags = 16524;
  _gfortran_st_read (&dt_parm.15);
  _gfortran_transfer_real (&dt_parm.15, &pdel, 4);
  _gfortran_st_read_done (&dt_parm.15);
  _35 = dt_parm.15.common.flags;
  _36 = _35 & 3;
  switch (_36) <default: <L47> [0.00%], case 1: L.50 [0.00%], case 2: L.51 [0.00%]>
;;    succ:       36
;;                34
;;                35

;;   basic block 34, loop depth 0
;;    pred:       33
L.50 [0.00%]:
  dt_parm.15 ={v} {CLOBBER};
  goto <bb 45>; [0.00%]
;;    succ:       45

;;   basic block 35, loop depth 0
;;    pred:       33
L.51 [0.00%]:
  dt_parm.15 ={v} {CLOBBER};
  goto <bb 46>; [0.00%]
;;    succ:       46

;;   basic block 36, loop depth 0
;;    pred:       33
<L47> [0.00%]:
  dt_parm.15 ={v} {CLOBBER};
  _37 = *p2_112(D);
  _38 = *p1_94(D);
  _39 = _37 - _38;
  _40 = ((_39));
  pdel.24_41 = pdel;
  _42 = _40 / pdel.24_41;
  rnum = _42;
  rnum.25_43 = rnum;
  _44 = ABS_EXPR <rnum.25_43>;
  _45 = _44 + 1.4900000095367431640625e+0;
  _46 = (integer(kind=4)) _45;
  *np_132(D) = _46;
  goto <bb 47>; [0.00%]
;;    succ:       47

;;   basic block 37, loop depth 0
;;    pred:       29
  if (kslash_77 != 0)
    goto <bb 38>; [0.00%]
  else
    goto <bb 45>; [0.00%]
;;    succ:       38
;;                45

;;   basic block 38, loop depth 0
;;    pred:       37
  ka_102 = kcomma1_76 + 1;
  kb_103 = kslash_77 + -1;
  dt_parm.16.common.filename = &"../src/io.f"[1]{lb: 1 sz: 1};
  dt_parm.16.common.line = 350;
  _47 = &*line_75(D)[ka_102]{lb: 1 sz: 1};
  dt_parm.16.internal_unit = _47;
  _48 = kb_103 - ka_102;
  _49 = _48 + 1;
  _50 = MAX_EXPR <_49, 0>;
  dt_parm.16.internal_unit_len = _50;
  dt_parm.16.internal_unit_desc = 0B;
  dt_parm.16.common.unit = -1;
  dt_parm.16.common.flags = 16524;
  _gfortran_st_read (&dt_parm.16);
  _gfortran_transfer_real (&dt_parm.16, p2_112(D), 4);
  _gfortran_st_read_done (&dt_parm.16);
  _51 = dt_parm.16.common.flags;
  _52 = _51 & 3;
  switch (_52) <default: <L55> [0.00%], case 1: L.52 [0.00%], case 2: L.53 [0.00%]>
;;    succ:       41
;;                39
;;                40

;;   basic block 39, loop depth 0
;;    pred:       38
L.52 [0.00%]:
  dt_parm.16 ={v} {CLOBBER};
  goto <bb 45>; [0.00%]
;;    succ:       45

;;   basic block 40, loop depth 0
;;    pred:       38
L.53 [0.00%]:
  dt_parm.16 ={v} {CLOBBER};
  goto <bb 46>; [0.00%]
;;    succ:       46

;;   basic block 41, loop depth 0
;;    pred:       38
<L55> [0.00%]:
  dt_parm.16 ={v} {CLOBBER};
  k_118 = kslash_77 + 1;
  dt_parm.17.common.filename = &"../src/io.f"[1]{lb: 1 sz: 1};
  dt_parm.17.common.line = 352;
  _53 = &*line_75(D)[k_118]{lb: 1 sz: 1};
  dt_parm.17.internal_unit = _53;
  _54 = n_73 - k_118;
  _55 = _54 + 1;
  _56 = MAX_EXPR <_55, 0>;
  dt_parm.17.internal_unit_len = _56;
  dt_parm.17.internal_unit_desc = 0B;
  dt_parm.17.common.unit = -1;
  dt_parm.17.common.flags = 16524;
  _gfortran_st_read (&dt_parm.17);
  _gfortran_transfer_real (&dt_parm.17, &rnum, 4);
  _gfortran_st_read_done (&dt_parm.17);
  _57 = dt_parm.17.common.flags;
  _58 = _57 & 3;
  switch (_58) <default: <L61> [0.00%], case 1: L.54 [0.00%], case 2: L.55 [0.00%]>
;;    succ:       44
;;                42
;;                43

;;   basic block 42, loop depth 0
;;    pred:       41
L.54 [0.00%]:
  dt_parm.17 ={v} {CLOBBER};
  goto <bb 45>; [0.00%]
;;    succ:       45

;;   basic block 43, loop depth 0
;;    pred:       41
L.55 [0.00%]:
  dt_parm.17 ={v} {CLOBBER};
  goto <bb 46>; [0.00%]
;;    succ:       46

;;   basic block 44, loop depth 0
;;    pred:       41
<L61> [0.00%]:
  dt_parm.17 ={v} {CLOBBER};
  rnum.26_59 = rnum;
  _60 = ABS_EXPR <rnum.26_59>;
  _61 = _60 + 9.99999977648258209228515625e-3;
  _62 = (integer(kind=4)) _61;
  *np_132(D) = _62;
  goto <bb 47>; [0.00%]
;;    succ:       47

;;   basic block 45, loop depth 0
;;    pred:       11
;;                15
;;                23
;;                31
;;                34
;;                37
;;                39
;;                42
  *ierr_83(D) = 1;
  goto <bb 47>; [0.00%]
;;    succ:       47

;;   basic block 46, loop depth 0
;;    pred:       12
;;                16
;;                24
;;                32
;;                35
;;                40
;;                43
  *ierr_83(D) = -1;
;;    succ:       47

;;   basic block 47, loop depth 0
;;    pred:       13
;;                28
;;                36
;;                44
;;                45
;;                46
  pdel ={v} {CLOBBER};
  rnum ={v} {CLOBBER};
;;    succ:       48

;;   basic block 48, loop depth 0
;;    pred:       47
<L71> [0.00%]:
  return;
;;    succ:       EXIT

}


Partition 6: size 480 align 16
	dt_parm.17	dt_parm.11	dt_parm.12	dt_parm.13	dt_parm.14	dt_parm.15	dt_parm.16

;; Generating RTL for gimple basic block 2

;; _1 = (sizetype) _line_70(D);

(insn 11 10 12 (set (reg:SI 153)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -572 [0xfffffffffffffdc4])) [1 _line+0 S4 A32])) "../src/io.f":367 -1
     (nil))

(insn 12 11 0 (set (reg:DI 87 [ _1 ])
        (sign_extend:DI (reg:SI 153))) "../src/io.f":367 -1
     (nil))

;; _2 = (bitsizetype) _1;

(insn 13 12 14 (set (subreg:DI (reg:TI 88 [ _2 ]) 0)
        (reg:DI 87 [ _1 ])) "../src/io.f":367 -1
     (nil))

(insn 14 13 0 (set (subreg:DI (reg:TI 88 [ _2 ]) 8)
        (const_int 0 [0])) "../src/io.f":367 -1
     (nil))

;; _71 = _2 * 8;

(insn 15 14 0 (parallel [
            (set (reg:TI 151 [ _71 ])
                (ashift:TI (reg:TI 88 [ _2 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":367 -1
     (nil))

;; _72 = (sizetype) _line_70(D);

(insn 16 15 17 (set (reg:SI 154)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -572 [0xfffffffffffffdc4])) [1 _line+0 S4 A32])) "../src/io.f":367 -1
     (nil))

(insn 17 16 0 (set (reg:DI 152 [ _72 ])
        (sign_extend:DI (reg:SI 154))) "../src/io.f":367 -1
     (nil))

;; n_73 = _line_70(D);

(insn 18 17 19 (set (reg:SI 155)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -572 [0xfffffffffffffdc4])) [1 _line+0 S4 A32])) "../src/io.f":296 -1
     (nil))

(insn 19 18 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 n+0 S4 A32])
        (reg:SI 155)) "../src/io.f":296 -1
     (nil))

;; kcomma1_76 = _gfortran_string_index (_line_70(D), line_75(D), 1, &","[1]{lb: 1 sz: 1}, 0);

(insn 20 19 21 (set (reg:DI 156)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -536 [0xfffffffffffffde8])) [10 line+0 S8 A64])) "../src/io.f":298 -1
     (nil))

(insn 21 20 22 (set (reg:SI 157)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -572 [0xfffffffffffffdc4])) [1 _line+0 S4 A32])) "../src/io.f":298 -1
     (nil))

(insn 22 21 23 (set (reg:SI 37 r8)
        (const_int 0 [0])) "../src/io.f":298 -1
     (nil))

(insn 23 22 24 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*lC3") [flags 0x2]  <var_decl 0x143b72360 *lC3>)) "../src/io.f":298 -1
     (nil))

(insn 24 23 25 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) "../src/io.f":298 -1
     (nil))

(insn 25 24 26 (set (reg:DI 4 si)
        (reg:DI 156)) "../src/io.f":298 -1
     (nil))

(insn 26 25 27 (set (reg:SI 5 di)
        (reg:SI 157)) "../src/io.f":298 -1
     (nil))

(call_insn/i 27 26 28 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_gfortran_string_index") [flags 0x41]  <function_decl 0x1439c4a00 _gfortran_string_index>) [0 _gfortran_string_index S1 A8])
            (const_int 0 [0]))) "../src/io.f":298 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (nil)))))))

(insn 28 27 29 (set (reg:SI 158)
        (reg:SI 0 ax)) "../src/io.f":298 -1
     (nil))

(insn 29 28 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 kcomma1+0 S4 A32])
        (reg:SI 158)) "../src/io.f":298 -1
     (nil))

;; kslash_77 = _gfortran_string_index (_line_70(D), line_75(D), 1, &"/"[1]{lb: 1 sz: 1}, 0);

(insn 30 29 31 (set (reg:DI 159)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -536 [0xfffffffffffffde8])) [10 line+0 S8 A64])) "../src/io.f":299 -1
     (nil))

(insn 31 30 32 (set (reg:SI 160)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -572 [0xfffffffffffffdc4])) [1 _line+0 S4 A32])) "../src/io.f":299 -1
     (nil))

(insn 32 31 33 (set (reg:SI 37 r8)
        (const_int 0 [0])) "../src/io.f":299 -1
     (nil))

(insn 33 32 34 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*lC7") [flags 0x2]  <var_decl 0x143bb8ab0 *lC7>)) "../src/io.f":299 -1
     (nil))

(insn 34 33 35 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) "../src/io.f":299 -1
     (nil))

(insn 35 34 36 (set (reg:DI 4 si)
        (reg:DI 159)) "../src/io.f":299 -1
     (nil))

(insn 36 35 37 (set (reg:SI 5 di)
        (reg:SI 160)) "../src/io.f":299 -1
     (nil))

(call_insn/i 37 36 38 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_gfortran_string_index") [flags 0x41]  <function_decl 0x1439c4a00 _gfortran_string_index>) [0 _gfortran_string_index S1 A8])
            (const_int 0 [0]))) "../src/io.f":299 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (nil)))))))

(insn 38 37 39 (set (reg:SI 161)
        (reg:SI 0 ax)) "../src/io.f":299 -1
     (nil))

(insn 39 38 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [1 kslash+0 S4 A32])
        (reg:SI 161)) "../src/io.f":299 -1
     (nil))

;; if (kcomma1_76 > 0)

(insn 40 39 41 (set (reg:CCNO 17 flags)
        (compare:CCNO (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [1 kcomma1+0 S4 A32])
            (const_int 0 [0]))) "../src/io.f":300 -1
     (nil))

(jump_insn 41 40 0 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "../src/io.f":300 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; if (kslash_77 == 0)

(insn 43 42 44 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [1 kslash+0 S4 A32])
            (const_int 0 [0]))) "../src/io.f":300 -1
     (nil))

(jump_insn 44 43 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "../src/io.f":300 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; iftmp.20_78 = 1;

(insn 46 45 0 (set (reg:QI 149 [ iftmp.20_64 ])
        (const_int 1 [0x1])) "../src/io.f":300 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; 

(code_label 49 48 50 75 (nil) [0 uses])

(note 50 49 0 NOTE_INSN_BASIC_BLOCK)

;; iftmp.20_79 = 0;

(insn 51 50 0 (set (reg:QI 149 [ iftmp.20_64 ])
        (const_int 0 [0])) "../src/io.f":300 -1
     (nil))

;; Generating RTL for gimple basic block 6

;; 

(code_label 52 51 53 76 (nil) [0 uses])

(note 53 52 0 NOTE_INSN_BASIC_BLOCK)

;; iftmp.21_3 = (logical(kind=4)) iftmp.20_64;

(insn 54 53 55 (set (reg:SI 89 [ iftmp.21_3 ])
        (zero_extend:SI (reg:QI 149 [ iftmp.20_64 ]))) "../src/io.f":300 -1
     (nil))

(insn 55 54 0 (parallel [
            (set (reg:SI 89 [ iftmp.21_3 ])
                (and:SI (reg:SI 89 [ iftmp.21_3 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":300 -1
     (nil))

;; if (iftmp.21_3 != 0)

(insn 56 55 57 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 89 [ iftmp.21_3 ])
            (const_int 0 [0]))) "../src/io.f":300 -1
     (nil))

(jump_insn 57 56 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "../src/io.f":300 -1
     (nil))

;; Generating RTL for gimple basic block 7

;; k_81 = kcomma1_76 + 1;

(insn 62 58 63 (set (reg:SI 165)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 kcomma1+0 S4 A32])) "../src/io.f":301 -1
     (nil))

(insn 63 62 64 (parallel [
            (set (reg:SI 164)
                (plus:SI (reg:SI 165)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":301 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [1 kcomma1+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))

(insn 64 63 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 k+0 S4 A32])
        (reg:SI 164)) "../src/io.f":301 -1
     (nil))
Applying pattern match.pd:836, generic-match.c:64
Applying pattern match.pd:873, generic-match.c:13046
Applying pattern match.pd:148, generic-match.c:6836
Applying pattern match.pd:84, generic-match.c:11356

;; _4 = &*line_75(D)[k_81]{lb: 1 sz: 1};

(insn 65 64 66 (set (reg:SI 167)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 k+0 S4 A32])) "../src/io.f":302 -1
     (nil))

(insn 66 65 67 (parallel [
            (set (reg:SI 166)
                (plus:SI (reg:SI 167)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":302 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [1 k+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))

(insn 67 66 68 (set (reg:DI 168)
        (sign_extend:DI (reg:SI 166))) "../src/io.f":302 -1
     (nil))

(insn 68 67 69 (set (reg/f:DI 169)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -536 [0xfffffffffffffde8])) [10 line+0 S8 A64])) "../src/io.f":302 -1
     (nil))

(insn 69 68 0 (parallel [
            (set (reg/f:DI 90 [ _4 ])
                (plus:DI (reg:DI 168)
                    (reg/f:DI 169)))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":302 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -536 [0xfffffffffffffde8])) [10 line+0 S8 A64])
            (reg:DI 168))
        (nil)))

;; _5 = n_73 - k_81;

(insn 70 69 71 (set (reg:SI 170)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 n+0 S4 A32])) "../src/io.f":302 -1
     (nil))

(insn 71 70 0 (parallel [
            (set (reg:SI 91 [ _5 ])
                (minus:SI (reg:SI 170)
                    (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -20 [0xffffffffffffffec])) [1 k+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":302 -1
     (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [1 n+0 S4 A32])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [1 k+0 S4 A32]))
        (nil)))

;; _6 = _5 + 1;

(insn 72 71 0 (parallel [
            (set (reg:SI 92 [ _6 ])
                (plus:SI (reg:SI 91 [ _5 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":302 -1
     (nil))

;; _7 = MAX_EXPR <_6, 0>;

(insn 74 72 73 (set (reg:SI 171)
        (const_int 0 [0])) "../src/io.f":302 -1
     (nil))

(insn 73 74 75 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 92 [ _6 ])
            (const_int 0 [0]))) "../src/io.f":302 -1
     (nil))

(insn 75 73 0 (set (reg:SI 93 [ _7 ])
        (if_then_else:SI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:SI 92 [ _6 ])
            (reg:SI 171))) "../src/io.f":302 -1
     (nil))

;; _8 = _gfortran_string_index (_7, _4, 1, &","[1]{lb: 1 sz: 1}, 0);

(insn 76 75 77 (set (reg:SI 37 r8)
        (const_int 0 [0])) "../src/io.f":302 -1
     (nil))

(insn 77 76 78 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*lC3") [flags 0x2]  <var_decl 0x143b72360 *lC3>)) "../src/io.f":302 -1
     (nil))

(insn 78 77 79 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) "../src/io.f":302 -1
     (nil))

(insn 79 78 80 (set (reg:DI 4 si)
        (reg/f:DI 90 [ _4 ])) "../src/io.f":302 -1
     (nil))

(insn 80 79 81 (set (reg:SI 5 di)
        (reg:SI 93 [ _7 ])) "../src/io.f":302 -1
     (nil))

(call_insn/i 81 80 82 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_gfortran_string_index") [flags 0x41]  <function_decl 0x1439c4a00 _gfortran_string_index>) [0 _gfortran_string_index S1 A8])
            (const_int 0 [0]))) "../src/io.f":302 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (nil)))))))

(insn 82 81 0 (set (reg:SI 94 [ _8 ])
        (reg:SI 0 ax)) "../src/io.f":302 -1
     (nil))

;; _9 = k_81 + _8;

(insn 83 82 84 (set (reg:SI 172)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 k+0 S4 A32])) "../src/io.f":302 -1
     (nil))

(insn 84 83 0 (parallel [
            (set (reg:SI 95 [ _9 ])
                (plus:SI (reg:SI 94 [ _8 ])
                    (reg:SI 172)))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":302 -1
     (expr_list:REG_EQUAL (plus:SI (reg:SI 94 [ _8 ])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [1 k+0 S4 A32]))
        (nil)))

;; kcomma2_82 = _9 + -1;

(insn 85 84 86 (parallel [
            (set (reg:SI 173)
                (plus:SI (reg:SI 95 [ _9 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":302 -1
     (nil))

(insn 86 85 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 kcomma2+0 S4 A32])
        (reg:SI 173)) "../src/io.f":302 -1
     (nil))

;; Generating RTL for gimple basic block 8

;; 

(code_label 89 88 90 77 (nil) [0 uses])

(note 90 89 0 NOTE_INSN_BASIC_BLOCK)

;; kcomma2_80 = 0;

(insn 91 90 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 kcomma2+0 S4 A32])
        (const_int 0 [0])) "../src/io.f":304 -1
     (nil))

;; Generating RTL for gimple basic block 9

;; 

(code_label 92 91 93 78 (nil) [0 uses])

(note 93 92 0 NOTE_INSN_BASIC_BLOCK)

;; *ierr_83(D) = 0;

(insn 94 93 95 (set (reg/f:DI 174)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -568 [0xfffffffffffffdc8])) [11 ierr+0 S8 A64])) "../src/io.f":308 -1
     (nil))

(insn 95 94 0 (set (mem:SI (reg/f:DI 174) [1 *ierr_83(D)+0 S4 A32])
        (const_int 0 [0])) "../src/io.f":308 -1
     (nil))

;; if (kcomma1_76 == 0)

(insn 96 95 97 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [1 kcomma1+0 S4 A32])
            (const_int 0 [0]))) "../src/io.f":310 -1
     (nil))

(jump_insn 97 96 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "../src/io.f":310 -1
     (nil))

;; Generating RTL for gimple basic block 10

;; dt_parm.11.common.filename = &"../src/io.f"[1]{lb: 1 sz: 1};

(insn 99 98 100 (set (reg/f:DI 175)
        (symbol_ref/f:DI ("*lC4") [flags 0x2]  <var_decl 0x143b723f0 *lC4>)) "../src/io.f":312 -1
     (nil))

(insn 100 99 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -520 [0xfffffffffffffdf8])) [5 dt_parm.11.common.filename+0 S8 A64])
        (reg/f:DI 175)) "../src/io.f":312 -1
     (nil))

;; dt_parm.11.common.line = 312;

(insn 101 100 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -512 [0xfffffffffffffe00])) [1 dt_parm.11.common.line+0 S4 A128])
        (const_int 312 [0x138])) "../src/io.f":312 -1
     (nil))

;; dt_parm.11.internal_unit = line_75(D);

(insn 102 101 103 (set (reg/f:DI 176)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -536 [0xfffffffffffffde8])) [10 line+0 S8 A64])) "../src/io.f":312 -1
     (nil))

(insn 103 102 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -432 [0xfffffffffffffe50])) [5 dt_parm.11.internal_unit+0 S8 A128])
        (reg/f:DI 176)) "../src/io.f":312 -1
     (nil))

;; dt_parm.11.internal_unit_len = _line_70(D);

(insn 104 103 105 (set (reg:SI 177)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -572 [0xfffffffffffffdc4])) [1 _line+0 S4 A32])) "../src/io.f":312 -1
     (nil))

(insn 105 104 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -424 [0xfffffffffffffe58])) [1 dt_parm.11.internal_unit_len+0 S4 A64])
        (reg:SI 177)) "../src/io.f":312 -1
     (nil))

;; dt_parm.11.internal_unit_desc = 0B;

(insn 106 105 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -464 [0xfffffffffffffe30])) [5 dt_parm.11.internal_unit_desc+0 S8 A128])
        (const_int 0 [0])) "../src/io.f":312 -1
     (nil))

;; dt_parm.11.common.unit = -1;

(insn 107 106 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -524 [0xfffffffffffffdf4])) [1 dt_parm.11.common.unit+0 S4 A32])
        (const_int -1 [0xffffffffffffffff])) "../src/io.f":312 -1
     (nil))

;; dt_parm.11.common.flags = 16524;

(insn 108 107 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -528 [0xfffffffffffffdf0])) [1 dt_parm.11.common.flags+0 S4 A128])
        (const_int 16524 [0x408c])) "../src/io.f":312 -1
     (nil))

;; _gfortran_st_read (&dt_parm.11);

(insn 109 108 110 (parallel [
            (set (reg:DI 178)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -528 [0xfffffffffffffdf0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":312 -1
     (nil))

(insn 110 109 111 (set (reg:DI 5 di)
        (reg:DI 178)) "../src/io.f":312 -1
     (nil))

(call_insn 111 110 0 (call (mem:QI (symbol_ref:DI ("_gfortran_st_read") [flags 0x41]  <function_decl 0x1439e0700 _gfortran_st_read>) [0 _gfortran_st_read S1 A8])
        (const_int 0 [0])) "../src/io.f":312 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; _gfortran_transfer_real (&dt_parm.11, p1_94(D), 4);

(insn 112 111 113 (set (reg:DI 179)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -544 [0xfffffffffffffde0])) [16 p1+0 S8 A64])) "../src/io.f":312 -1
     (nil))

(insn 113 112 114 (parallel [
            (set (reg:DI 180)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -528 [0xfffffffffffffdf0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":312 -1
     (nil))

(insn 114 113 115 (set (reg:SI 1 dx)
        (const_int 4 [0x4])) "../src/io.f":312 -1
     (nil))

(insn 115 114 116 (set (reg:DI 4 si)
        (reg:DI 179)) "../src/io.f":312 -1
     (nil))

(insn 116 115 117 (set (reg:DI 5 di)
        (reg:DI 180)) "../src/io.f":312 -1
     (nil))

(call_insn 117 116 0 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_real") [flags 0x41]  <function_decl 0x1439d4c00 _gfortran_transfer_real>) [0 _gfortran_transfer_real S1 A8])
        (const_int 0 [0])) "../src/io.f":312 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))

;; _gfortran_st_read_done (&dt_parm.11);

(insn 118 117 119 (parallel [
            (set (reg:DI 181)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -528 [0xfffffffffffffdf0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":312 -1
     (nil))

(insn 119 118 120 (set (reg:DI 5 di)
        (reg:DI 181)) "../src/io.f":312 -1
     (nil))

(call_insn 120 119 0 (call (mem:QI (symbol_ref:DI ("_gfortran_st_read_done") [flags 0x41]  <function_decl 0x1439e4200 _gfortran_st_read_done>) [0 _gfortran_st_read_done S1 A8])
        (const_int 0 [0])) "../src/io.f":312 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; _10 = dt_parm.11.common.flags;

(insn 121 120 0 (set (reg:SI 96 [ _10 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -528 [0xfffffffffffffdf0])) [1 dt_parm.11.common.flags+0 S4 A128])) "../src/io.f":312 -1
     (nil))

;; _11 = _10 & 3;

(insn 122 121 0 (parallel [
            (set (reg:SI 97 [ _11 ])
                (and:SI (reg:SI 96 [ _10 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":312 -1
     (nil))
;; Expanding GIMPLE switch as decision tree:
;;        1
;;               2

;; switch (_11) <default: <L11> [0.00%], case 1: L.40 [0.00%], case 2: L.41 [0.00%]>

(insn 123 122 124 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 97 [ _11 ])
            (const_int 1 [0x1]))) "../src/io.f":312 -1
     (nil))

(jump_insn 124 123 125 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "../src/io.f":312 -1
     (nil))

(insn 125 124 126 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 97 [ _11 ])
            (const_int 2 [0x2]))) "../src/io.f":312 -1
     (nil))

(jump_insn 126 125 127 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "../src/io.f":312 -1
     (nil))

(jump_insn 127 126 128 (set (pc)
        (label_ref 0)) "../src/io.f":312 -1
     (nil))

(barrier 128 127 0)

;; Generating RTL for gimple basic block 11

;; L.40 [0.00%]:

(code_label 129 128 130 81 ("L.40") [0 uses])

(note 130 129 0 NOTE_INSN_BASIC_BLOCK)

;; dt_parm.11 ={v} {CLOBBER};

(nil)

;; Generating RTL for gimple basic block 12

;; L.41 [0.00%]:

(code_label 133 132 134 82 ("L.41") [0 uses])

(note 134 133 0 NOTE_INSN_BASIC_BLOCK)

;; dt_parm.11 ={v} {CLOBBER};

(nil)

;; Generating RTL for gimple basic block 13

;; <L11> [0.00%]:

(code_label 137 136 138 80 (nil) [0 uses])

(note 138 137 0 NOTE_INSN_BASIC_BLOCK)

;; dt_parm.11 ={v} {CLOBBER};

(nil)

;; _12 = *p1_94(D);

(insn 139 138 140 (set (reg/f:DI 182)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -544 [0xfffffffffffffde0])) [16 p1+0 S8 A64])) "../src/io.f":313 -1
     (nil))

(insn 140 139 0 (set (reg:SF 98 [ _12 ])
        (mem:SF (reg/f:DI 182) [15 *p1_94(D)+0 S4 A32])) "../src/io.f":313 -1
     (nil))

;; *p2_112(D) = _12;

(insn 141 140 142 (set (reg/f:DI 183)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -552 [0xfffffffffffffdd8])) [16 p2+0 S8 A64])) "../src/io.f":313 -1
     (nil))

(insn 142 141 0 (set (mem:SF (reg/f:DI 183) [15 *p2_112(D)+0 S4 A32])
        (reg:SF 98 [ _12 ])) "../src/io.f":313 -1
     (nil))

;; *np_132(D) = 1;

(insn 143 142 144 (set (reg/f:DI 184)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -560 [0xfffffffffffffdd0])) [11 np+0 S8 A64])) "../src/io.f":314 -1
     (nil))

(insn 144 143 0 (set (mem:SI (reg/f:DI 184) [1 *np_132(D)+0 S4 A32])
        (const_int 1 [0x1])) "../src/io.f":314 -1
     (nil))

;; Generating RTL for gimple basic block 14

;; 

(code_label 147 146 148 79 (nil) [0 uses])

(note 148 147 0 NOTE_INSN_BASIC_BLOCK)

;; k_85 = kcomma1_76 + -1;

(insn 152 148 153 (set (reg:SI 188)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 kcomma1+0 S4 A32])) "../src/io.f":319 -1
     (nil))

(insn 153 152 154 (parallel [
            (set (reg:SI 187)
                (plus:SI (reg:SI 188)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":319 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [1 kcomma1+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))

(insn 154 153 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 k+0 S4 A32])
        (reg:SI 187)) "../src/io.f":319 -1
     (nil))

;; dt_parm.12.common.filename = &"../src/io.f"[1]{lb: 1 sz: 1};

(insn 155 154 156 (set (reg/f:DI 189)
        (symbol_ref/f:DI ("*lC4") [flags 0x2]  <var_decl 0x143b723f0 *lC4>)) "../src/io.f":320 -1
     (nil))

(insn 156 155 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -520 [0xfffffffffffffdf8])) [5 dt_parm.12.common.filename+0 S8 A64])
        (reg/f:DI 189)) "../src/io.f":320 -1
     (nil))

;; dt_parm.12.common.line = 320;

(insn 157 156 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -512 [0xfffffffffffffe00])) [1 dt_parm.12.common.line+0 S4 A128])
        (const_int 320 [0x140])) "../src/io.f":320 -1
     (nil))

;; dt_parm.12.internal_unit = line_75(D);

(insn 158 157 159 (set (reg/f:DI 190)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -536 [0xfffffffffffffde8])) [10 line+0 S8 A64])) "../src/io.f":320 -1
     (nil))

(insn 159 158 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -432 [0xfffffffffffffe50])) [5 dt_parm.12.internal_unit+0 S8 A128])
        (reg/f:DI 190)) "../src/io.f":320 -1
     (nil))

;; _13 = MAX_EXPR <k_85, 0>;

(insn 161 159 160 (set (reg:SI 191)
        (const_int 0 [0])) "../src/io.f":320 -1
     (nil))

(insn 160 161 162 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [1 k+0 S4 A32])
            (const_int 0 [0]))) "../src/io.f":320 -1
     (nil))

(insn 162 160 0 (set (reg:SI 99 [ _13 ])
        (if_then_else:SI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [1 k+0 S4 A32])
            (reg:SI 191))) "../src/io.f":320 -1
     (nil))

;; dt_parm.12.internal_unit_len = _13;

(insn 163 162 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -424 [0xfffffffffffffe58])) [1 dt_parm.12.internal_unit_len+0 S4 A64])
        (reg:SI 99 [ _13 ])) "../src/io.f":320 -1
     (nil))

;; dt_parm.12.internal_unit_desc = 0B;

(insn 164 163 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -464 [0xfffffffffffffe30])) [5 dt_parm.12.internal_unit_desc+0 S8 A128])
        (const_int 0 [0])) "../src/io.f":320 -1
     (nil))

;; dt_parm.12.common.unit = -1;

(insn 165 164 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -524 [0xfffffffffffffdf4])) [1 dt_parm.12.common.unit+0 S4 A32])
        (const_int -1 [0xffffffffffffffff])) "../src/io.f":320 -1
     (nil))

;; dt_parm.12.common.flags = 16524;

(insn 166 165 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -528 [0xfffffffffffffdf0])) [1 dt_parm.12.common.flags+0 S4 A128])
        (const_int 16524 [0x408c])) "../src/io.f":320 -1
     (nil))

;; _gfortran_st_read (&dt_parm.12);

(insn 167 166 168 (parallel [
            (set (reg:DI 192)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -528 [0xfffffffffffffdf0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":320 -1
     (nil))

(insn 168 167 169 (set (reg:DI 5 di)
        (reg:DI 192)) "../src/io.f":320 -1
     (nil))

(call_insn 169 168 0 (call (mem:QI (symbol_ref:DI ("_gfortran_st_read") [flags 0x41]  <function_decl 0x1439e0700 _gfortran_st_read>) [0 _gfortran_st_read S1 A8])
        (const_int 0 [0])) "../src/io.f":320 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; _gfortran_transfer_real (&dt_parm.12, p1_94(D), 4);

(insn 170 169 171 (set (reg:DI 193)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -544 [0xfffffffffffffde0])) [16 p1+0 S8 A64])) "../src/io.f":320 -1
     (nil))

(insn 171 170 172 (parallel [
            (set (reg:DI 194)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -528 [0xfffffffffffffdf0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":320 -1
     (nil))

(insn 172 171 173 (set (reg:SI 1 dx)
        (const_int 4 [0x4])) "../src/io.f":320 -1
     (nil))

(insn 173 172 174 (set (reg:DI 4 si)
        (reg:DI 193)) "../src/io.f":320 -1
     (nil))

(insn 174 173 175 (set (reg:DI 5 di)
        (reg:DI 194)) "../src/io.f":320 -1
     (nil))

(call_insn 175 174 0 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_real") [flags 0x41]  <function_decl 0x1439d4c00 _gfortran_transfer_real>) [0 _gfortran_transfer_real S1 A8])
        (const_int 0 [0])) "../src/io.f":320 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))

;; _gfortran_st_read_done (&dt_parm.12);

(insn 176 175 177 (parallel [
            (set (reg:DI 195)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -528 [0xfffffffffffffdf0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":320 -1
     (nil))

(insn 177 176 178 (set (reg:DI 5 di)
        (reg:DI 195)) "../src/io.f":320 -1
     (nil))

(call_insn 178 177 0 (call (mem:QI (symbol_ref:DI ("_gfortran_st_read_done") [flags 0x41]  <function_decl 0x1439e4200 _gfortran_st_read_done>) [0 _gfortran_st_read_done S1 A8])
        (const_int 0 [0])) "../src/io.f":320 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; _14 = dt_parm.12.common.flags;

(insn 179 178 0 (set (reg:SI 100 [ _14 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -528 [0xfffffffffffffdf0])) [1 dt_parm.12.common.flags+0 S4 A128])) "../src/io.f":320 -1
     (nil))

;; _15 = _14 & 3;

(insn 180 179 0 (parallel [
            (set (reg:SI 101 [ _15 ])
                (and:SI (reg:SI 100 [ _14 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":320 -1
     (nil))
;; Expanding GIMPLE switch as decision tree:
;;        1
;;               2

;; switch (_15) <default: <L18> [0.00%], case 1: L.42 [0.00%], case 2: L.43 [0.00%]>

(insn 181 180 182 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 101 [ _15 ])
            (const_int 1 [0x1]))) "../src/io.f":320 -1
     (nil))

(jump_insn 182 181 183 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "../src/io.f":320 -1
     (nil))

(insn 183 182 184 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 101 [ _15 ])
            (const_int 2 [0x2]))) "../src/io.f":320 -1
     (nil))

(jump_insn 184 183 185 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "../src/io.f":320 -1
     (nil))

(jump_insn 185 184 186 (set (pc)
        (label_ref 0)) "../src/io.f":320 -1
     (nil))

(barrier 186 185 0)

;; Generating RTL for gimple basic block 15

;; L.42 [0.00%]:

(code_label 187 186 188 87 ("L.42") [0 uses])

(note 188 187 0 NOTE_INSN_BASIC_BLOCK)

;; dt_parm.12 ={v} {CLOBBER};

(nil)

;; Generating RTL for gimple basic block 16

;; L.43 [0.00%]:

(code_label 191 190 192 88 ("L.43") [0 uses])

(note 192 191 0 NOTE_INSN_BASIC_BLOCK)

;; dt_parm.12 ={v} {CLOBBER};

(nil)

;; Generating RTL for gimple basic block 17

;; <L18> [0.00%]:

(code_label 195 194 196 86 (nil) [0 uses])

(note 196 195 0 NOTE_INSN_BASIC_BLOCK)

;; dt_parm.12 ={v} {CLOBBER};

(nil)

;; if (kcomma2_63 == 0)

(insn 197 196 198 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 kcomma2+0 S4 A32])
            (const_int 0 [0]))) "../src/io.f":322 -1
     (nil))

(jump_insn 198 197 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "../src/io.f":322 -1
     (nil))

;; Generating RTL for gimple basic block 18

;; if (kslash_77 == 0)

(insn 200 199 201 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [1 kslash+0 S4 A32])
            (const_int 0 [0]))) "../src/io.f":322 -1
     (nil))

(jump_insn 201 200 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "../src/io.f":322 -1
     (nil))

;; Generating RTL for gimple basic block 19

;; iftmp.22_100 = 1;

(insn 203 202 0 (set (reg:QI 150 [ iftmp.22_65 ])
        (const_int 1 [0x1])) "../src/io.f":322 -1
     (nil))

;; Generating RTL for gimple basic block 20

;; 

(code_label 206 205 207 89 (nil) [0 uses])

(note 207 206 0 NOTE_INSN_BASIC_BLOCK)

;; iftmp.22_101 = 0;

(insn 208 207 0 (set (reg:QI 150 [ iftmp.22_65 ])
        (const_int 0 [0])) "../src/io.f":322 -1
     (nil))

;; Generating RTL for gimple basic block 21

;; 

(code_label 209 208 210 90 (nil) [0 uses])

(note 210 209 0 NOTE_INSN_BASIC_BLOCK)

;; iftmp.23_16 = (logical(kind=4)) iftmp.22_65;

(insn 211 210 212 (set (reg:SI 102 [ iftmp.23_16 ])
        (zero_extend:SI (reg:QI 150 [ iftmp.22_65 ]))) "../src/io.f":322 -1
     (nil))

(insn 212 211 0 (parallel [
            (set (reg:SI 102 [ iftmp.23_16 ])
                (and:SI (reg:SI 102 [ iftmp.23_16 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":322 -1
     (nil))

;; if (iftmp.23_16 != 0)

(insn 213 212 214 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 102 [ iftmp.23_16 ])
            (const_int 0 [0]))) "../src/io.f":322 -1
     (nil))

(jump_insn 214 213 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "../src/io.f":322 -1
     (nil))

;; Generating RTL for gimple basic block 22

;; k_165 = kcomma1_76 + 1;

(insn 219 215 220 (set (reg:SI 199)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 kcomma1+0 S4 A32])) "../src/io.f":324 -1
     (nil))

(insn 220 219 221 (parallel [
            (set (reg:SI 198)
                (plus:SI (reg:SI 199)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":324 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [1 kcomma1+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))

(insn 221 220 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 k+0 S4 A32])
        (reg:SI 198)) "../src/io.f":324 -1
     (nil))

;; dt_parm.13.common.filename = &"../src/io.f"[1]{lb: 1 sz: 1};

(insn 222 221 223 (set (reg/f:DI 200)
        (symbol_ref/f:DI ("*lC4") [flags 0x2]  <var_decl 0x143b723f0 *lC4>)) "../src/io.f":325 -1
     (nil))

(insn 223 222 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -520 [0xfffffffffffffdf8])) [5 dt_parm.13.common.filename+0 S8 A64])
        (reg/f:DI 200)) "../src/io.f":325 -1
     (nil))

;; dt_parm.13.common.line = 325;

(insn 224 223 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -512 [0xfffffffffffffe00])) [1 dt_parm.13.common.line+0 S4 A128])
        (const_int 325 [0x145])) "../src/io.f":325 -1
     (nil))
Applying pattern match.pd:836, generic-match.c:64
Applying pattern match.pd:873, generic-match.c:13046
Applying pattern match.pd:148, generic-match.c:6836
Applying pattern match.pd:84, generic-match.c:11356

;; _17 = &*line_75(D)[k_165]{lb: 1 sz: 1};

(insn 225 224 226 (set (reg:SI 202)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 k+0 S4 A32])) "../src/io.f":325 -1
     (nil))

(insn 226 225 227 (parallel [
            (set (reg:SI 201)
                (plus:SI (reg:SI 202)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":325 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [1 k+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))

(insn 227 226 228 (set (reg:DI 203)
        (sign_extend:DI (reg:SI 201))) "../src/io.f":325 -1
     (nil))

(insn 228 227 229 (set (reg/f:DI 204)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -536 [0xfffffffffffffde8])) [10 line+0 S8 A64])) "../src/io.f":325 -1
     (nil))

(insn 229 228 0 (parallel [
            (set (reg/f:DI 103 [ _17 ])
                (plus:DI (reg:DI 203)
                    (reg/f:DI 204)))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":325 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -536 [0xfffffffffffffde8])) [10 line+0 S8 A64])
            (reg:DI 203))
        (nil)))

;; dt_parm.13.internal_unit = _17;

(insn 230 229 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -432 [0xfffffffffffffe50])) [5 dt_parm.13.internal_unit+0 S8 A128])
        (reg/f:DI 103 [ _17 ])) "../src/io.f":325 -1
     (nil))

;; _18 = n_73 - k_165;

(insn 231 230 232 (set (reg:SI 205)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 n+0 S4 A32])) "../src/io.f":325 -1
     (nil))

(insn 232 231 0 (parallel [
            (set (reg:SI 104 [ _18 ])
                (minus:SI (reg:SI 205)
                    (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -20 [0xffffffffffffffec])) [1 k+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":325 -1
     (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [1 n+0 S4 A32])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [1 k+0 S4 A32]))
        (nil)))

;; _19 = _18 + 1;

(insn 233 232 0 (parallel [
            (set (reg:SI 105 [ _19 ])
                (plus:SI (reg:SI 104 [ _18 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":325 -1
     (nil))

;; _20 = MAX_EXPR <_19, 0>;

(insn 235 233 234 (set (reg:SI 206)
        (const_int 0 [0])) "../src/io.f":325 -1
     (nil))

(insn 234 235 236 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 105 [ _19 ])
            (const_int 0 [0]))) "../src/io.f":325 -1
     (nil))

(insn 236 234 0 (set (reg:SI 106 [ _20 ])
        (if_then_else:SI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:SI 105 [ _19 ])
            (reg:SI 206))) "../src/io.f":325 -1
     (nil))

;; dt_parm.13.internal_unit_len = _20;

(insn 237 236 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -424 [0xfffffffffffffe58])) [1 dt_parm.13.internal_unit_len+0 S4 A64])
        (reg:SI 106 [ _20 ])) "../src/io.f":325 -1
     (nil))

;; dt_parm.13.internal_unit_desc = 0B;

(insn 238 237 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -464 [0xfffffffffffffe30])) [5 dt_parm.13.internal_unit_desc+0 S8 A128])
        (const_int 0 [0])) "../src/io.f":325 -1
     (nil))

;; dt_parm.13.common.unit = -1;

(insn 239 238 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -524 [0xfffffffffffffdf4])) [1 dt_parm.13.common.unit+0 S4 A32])
        (const_int -1 [0xffffffffffffffff])) "../src/io.f":325 -1
     (nil))

;; dt_parm.13.common.flags = 16524;

(insn 240 239 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -528 [0xfffffffffffffdf0])) [1 dt_parm.13.common.flags+0 S4 A128])
        (const_int 16524 [0x408c])) "../src/io.f":325 -1
     (nil))

;; _gfortran_st_read (&dt_parm.13);

(insn 241 240 242 (parallel [
            (set (reg:DI 207)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -528 [0xfffffffffffffdf0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":325 -1
     (nil))

(insn 242 241 243 (set (reg:DI 5 di)
        (reg:DI 207)) "../src/io.f":325 -1
     (nil))

(call_insn 243 242 0 (call (mem:QI (symbol_ref:DI ("_gfortran_st_read") [flags 0x41]  <function_decl 0x1439e0700 _gfortran_st_read>) [0 _gfortran_st_read S1 A8])
        (const_int 0 [0])) "../src/io.f":325 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; _gfortran_transfer_real (&dt_parm.13, p2_112(D), 4);

(insn 244 243 245 (set (reg:DI 208)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -552 [0xfffffffffffffdd8])) [16 p2+0 S8 A64])) "../src/io.f":325 -1
     (nil))

(insn 245 244 246 (parallel [
            (set (reg:DI 209)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -528 [0xfffffffffffffdf0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":325 -1
     (nil))

(insn 246 245 247 (set (reg:SI 1 dx)
        (const_int 4 [0x4])) "../src/io.f":325 -1
     (nil))

(insn 247 246 248 (set (reg:DI 4 si)
        (reg:DI 208)) "../src/io.f":325 -1
     (nil))

(insn 248 247 249 (set (reg:DI 5 di)
        (reg:DI 209)) "../src/io.f":325 -1
     (nil))

(call_insn 249 248 0 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_real") [flags 0x41]  <function_decl 0x1439d4c00 _gfortran_transfer_real>) [0 _gfortran_transfer_real S1 A8])
        (const_int 0 [0])) "../src/io.f":325 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))

;; _gfortran_st_read_done (&dt_parm.13);

(insn 250 249 251 (parallel [
            (set (reg:DI 210)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -528 [0xfffffffffffffdf0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":325 -1
     (nil))

(insn 251 250 252 (set (reg:DI 5 di)
        (reg:DI 210)) "../src/io.f":325 -1
     (nil))

(call_insn 252 251 0 (call (mem:QI (symbol_ref:DI ("_gfortran_st_read_done") [flags 0x41]  <function_decl 0x1439e4200 _gfortran_st_read_done>) [0 _gfortran_st_read_done S1 A8])
        (const_int 0 [0])) "../src/io.f":325 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; _21 = dt_parm.13.common.flags;

(insn 253 252 0 (set (reg:SI 107 [ _21 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -528 [0xfffffffffffffdf0])) [1 dt_parm.13.common.flags+0 S4 A128])) "../src/io.f":325 -1
     (nil))

;; _22 = _21 & 3;

(insn 254 253 0 (parallel [
            (set (reg:SI 108 [ _22 ])
                (and:SI (reg:SI 107 [ _21 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":325 -1
     (nil))
;; Expanding GIMPLE switch as decision tree:
;;        1
;;               2

;; switch (_22) <default: <L29> [0.00%], case 1: L.45 [0.00%], case 2: L.46 [0.00%]>

(insn 255 254 256 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 108 [ _22 ])
            (const_int 1 [0x1]))) "../src/io.f":325 -1
     (nil))

(jump_insn 256 255 257 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "../src/io.f":325 -1
     (nil))

(insn 257 256 258 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 108 [ _22 ])
            (const_int 2 [0x2]))) "../src/io.f":325 -1
     (nil))

(jump_insn 258 257 259 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "../src/io.f":325 -1
     (nil))

(jump_insn 259 258 260 (set (pc)
        (label_ref 0)) "../src/io.f":325 -1
     (nil))

(barrier 260 259 0)

;; Generating RTL for gimple basic block 23

;; L.45 [0.00%]:

(code_label 261 260 262 93 ("L.45") [0 uses])

(note 262 261 0 NOTE_INSN_BASIC_BLOCK)

;; dt_parm.13 ={v} {CLOBBER};

(nil)

;; Generating RTL for gimple basic block 24

;; L.46 [0.00%]:

(code_label 265 264 266 94 ("L.46") [0 uses])

(note 266 265 0 NOTE_INSN_BASIC_BLOCK)

;; dt_parm.13 ={v} {CLOBBER};

(nil)

;; Generating RTL for gimple basic block 25

;; <L29> [0.00%]:

(code_label 269 268 270 92 (nil) [0 uses])

(note 270 269 0 NOTE_INSN_BASIC_BLOCK)

;; dt_parm.13 ={v} {CLOBBER};

(nil)

;; _23 = *p1_94(D);

(insn 271 270 272 (set (reg/f:DI 211)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -544 [0xfffffffffffffde0])) [16 p1+0 S8 A64])) "../src/io.f":326 -1
     (nil))

(insn 272 271 0 (set (reg:SF 109 [ _23 ])
        (mem:SF (reg/f:DI 211) [15 *p1_94(D)+0 S4 A32])) "../src/io.f":326 -1
     (nil))

;; _24 = *p2_112(D);

(insn 273 272 274 (set (reg/f:DI 212)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -552 [0xfffffffffffffdd8])) [16 p2+0 S8 A64])) "../src/io.f":326 -1
     (nil))

(insn 274 273 0 (set (reg:SF 110 [ _24 ])
        (mem:SF (reg/f:DI 212) [15 *p2_112(D)+0 S4 A32])) "../src/io.f":326 -1
     (nil))

;; if (_23 == _24)

(insn 275 274 276 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 109 [ _23 ])
            (reg:SF 110 [ _24 ]))) "../src/io.f":326 -1
     (nil))

(jump_insn 276 275 277 (set (pc)
        (if_then_else (unordered (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "../src/io.f":326 -1
     (nil))

(insn 277 276 278 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 109 [ _23 ])
            (reg:SF 110 [ _24 ]))) "../src/io.f":326 -1
     (nil))

(jump_insn 278 277 279 (set (pc)
        (if_then_else (uneq (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref 281)
            (pc))) "../src/io.f":326 -1
     (nil))

(jump_insn 279 278 280 (set (pc)
        (label_ref 0)) "../src/io.f":326 -1
     (nil))

(barrier 280 279 281)

(code_label 281 280 0 96 (nil) [0 uses])

;; Generating RTL for gimple basic block 26

;; *np_132(D) = 1;

(insn 283 282 284 (set (reg/f:DI 213)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -560 [0xfffffffffffffdd0])) [11 np+0 S8 A64])) "../src/io.f":328 -1
     (nil))

(insn 284 283 0 (set (mem:SI (reg/f:DI 213) [1 *np_132(D)+0 S4 A32])
        (const_int 1 [0x1])) "../src/io.f":328 -1
     (nil))

;; Generating RTL for gimple basic block 27

;; 

(code_label 287 286 288 95 (nil) [0 uses])

(note 288 287 0 NOTE_INSN_BASIC_BLOCK)

;; *np_132(D) = 5;

(insn 289 288 290 (set (reg/f:DI 214)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -560 [0xfffffffffffffdd0])) [11 np+0 S8 A64])) "../src/io.f":331 -1
     (nil))

(insn 290 289 0 (set (mem:SI (reg/f:DI 214) [1 *np_132(D)+0 S4 A32])
        (const_int 5 [0x5])) "../src/io.f":331 -1
     (nil))

;; Generating RTL for gimple basic block 28

;; 

(code_label 291 290 292 97 (nil) [0 uses])

(note 292 291 0 NOTE_INSN_BASIC_BLOCK)

;; Generating RTL for gimple basic block 29

;; 

(code_label 295 294 296 91 (nil) [0 uses])

(note 296 295 0 NOTE_INSN_BASIC_BLOCK)

;; if (kcomma2_63 != 0)

(insn 297 296 298 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 kcomma2+0 S4 A32])
            (const_int 0 [0]))) "../src/io.f":335 -1
     (nil))

(jump_insn 298 297 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "../src/io.f":335 -1
     (nil))

;; Generating RTL for gimple basic block 30

;; ka_134 = kcomma1_76 + 1;

(insn 303 299 304 (set (reg:SI 218)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 kcomma1+0 S4 A32])) "../src/io.f":337 -1
     (nil))

(insn 304 303 305 (parallel [
            (set (reg:SI 217)
                (plus:SI (reg:SI 218)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":337 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [1 kcomma1+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))

(insn 305 304 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [1 ka+0 S4 A32])
        (reg:SI 217)) "../src/io.f":337 -1
     (nil))

;; kb_135 = kcomma2_63 + -1;

(insn 309 305 310 (set (reg:SI 222)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 kcomma2+0 S4 A32])) "../src/io.f":338 -1
     (nil))

(insn 310 309 311 (parallel [
            (set (reg:SI 221)
                (plus:SI (reg:SI 222)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":338 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 kcomma2+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))

(insn 311 310 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [1 kb+0 S4 A32])
        (reg:SI 221)) "../src/io.f":338 -1
     (nil))

;; dt_parm.14.common.filename = &"../src/io.f"[1]{lb: 1 sz: 1};

(insn 312 311 313 (set (reg/f:DI 223)
        (symbol_ref/f:DI ("*lC4") [flags 0x2]  <var_decl 0x143b723f0 *lC4>)) "../src/io.f":339 -1
     (nil))

(insn 313 312 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -520 [0xfffffffffffffdf8])) [5 dt_parm.14.common.filename+0 S8 A64])
        (reg/f:DI 223)) "../src/io.f":339 -1
     (nil))

;; dt_parm.14.common.line = 339;

(insn 314 313 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -512 [0xfffffffffffffe00])) [1 dt_parm.14.common.line+0 S4 A128])
        (const_int 339 [0x153])) "../src/io.f":339 -1
     (nil))
Applying pattern match.pd:836, generic-match.c:64
Applying pattern match.pd:873, generic-match.c:13046
Applying pattern match.pd:148, generic-match.c:6836
Applying pattern match.pd:84, generic-match.c:11356

;; _25 = &*line_75(D)[ka_134]{lb: 1 sz: 1};

(insn 315 314 316 (set (reg:SI 225)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [1 ka+0 S4 A32])) "../src/io.f":339 -1
     (nil))

(insn 316 315 317 (parallel [
            (set (reg:SI 224)
                (plus:SI (reg:SI 225)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":339 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [1 ka+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))

(insn 317 316 318 (set (reg:DI 226)
        (sign_extend:DI (reg:SI 224))) "../src/io.f":339 -1
     (nil))

(insn 318 317 319 (set (reg/f:DI 227)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -536 [0xfffffffffffffde8])) [10 line+0 S8 A64])) "../src/io.f":339 -1
     (nil))

(insn 319 318 0 (parallel [
            (set (reg/f:DI 111 [ _25 ])
                (plus:DI (reg:DI 226)
                    (reg/f:DI 227)))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":339 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -536 [0xfffffffffffffde8])) [10 line+0 S8 A64])
            (reg:DI 226))
        (nil)))

;; dt_parm.14.internal_unit = _25;

(insn 320 319 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -432 [0xfffffffffffffe50])) [5 dt_parm.14.internal_unit+0 S8 A128])
        (reg/f:DI 111 [ _25 ])) "../src/io.f":339 -1
     (nil))

;; _26 = kb_135 - ka_134;

(insn 321 320 322 (set (reg:SI 228)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [1 kb+0 S4 A32])) "../src/io.f":339 -1
     (nil))

(insn 322 321 0 (parallel [
            (set (reg:SI 112 [ _26 ])
                (minus:SI (reg:SI 228)
                    (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -24 [0xffffffffffffffe8])) [1 ka+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":339 -1
     (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -28 [0xffffffffffffffe4])) [1 kb+0 S4 A32])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [1 ka+0 S4 A32]))
        (nil)))

;; _27 = _26 + 1;

(insn 323 322 0 (parallel [
            (set (reg:SI 113 [ _27 ])
                (plus:SI (reg:SI 112 [ _26 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":339 -1
     (nil))

;; _28 = MAX_EXPR <_27, 0>;

(insn 325 323 324 (set (reg:SI 229)
        (const_int 0 [0])) "../src/io.f":339 -1
     (nil))

(insn 324 325 326 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 113 [ _27 ])
            (const_int 0 [0]))) "../src/io.f":339 -1
     (nil))

(insn 326 324 0 (set (reg:SI 114 [ _28 ])
        (if_then_else:SI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:SI 113 [ _27 ])
            (reg:SI 229))) "../src/io.f":339 -1
     (nil))

;; dt_parm.14.internal_unit_len = _28;

(insn 327 326 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -424 [0xfffffffffffffe58])) [1 dt_parm.14.internal_unit_len+0 S4 A64])
        (reg:SI 114 [ _28 ])) "../src/io.f":339 -1
     (nil))

;; dt_parm.14.internal_unit_desc = 0B;

(insn 328 327 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -464 [0xfffffffffffffe30])) [5 dt_parm.14.internal_unit_desc+0 S8 A128])
        (const_int 0 [0])) "../src/io.f":339 -1
     (nil))

;; dt_parm.14.common.unit = -1;

(insn 329 328 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -524 [0xfffffffffffffdf4])) [1 dt_parm.14.common.unit+0 S4 A32])
        (const_int -1 [0xffffffffffffffff])) "../src/io.f":339 -1
     (nil))

;; dt_parm.14.common.flags = 16524;

(insn 330 329 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -528 [0xfffffffffffffdf0])) [1 dt_parm.14.common.flags+0 S4 A128])
        (const_int 16524 [0x408c])) "../src/io.f":339 -1
     (nil))

;; _gfortran_st_read (&dt_parm.14);

(insn 331 330 332 (parallel [
            (set (reg:DI 230)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -528 [0xfffffffffffffdf0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":339 -1
     (nil))

(insn 332 331 333 (set (reg:DI 5 di)
        (reg:DI 230)) "../src/io.f":339 -1
     (nil))

(call_insn 333 332 0 (call (mem:QI (symbol_ref:DI ("_gfortran_st_read") [flags 0x41]  <function_decl 0x1439e0700 _gfortran_st_read>) [0 _gfortran_st_read S1 A8])
        (const_int 0 [0])) "../src/io.f":339 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; _gfortran_transfer_real (&dt_parm.14, p2_112(D), 4);

(insn 334 333 335 (set (reg:DI 231)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -552 [0xfffffffffffffdd8])) [16 p2+0 S8 A64])) "../src/io.f":339 -1
     (nil))

(insn 335 334 336 (parallel [
            (set (reg:DI 232)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -528 [0xfffffffffffffdf0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":339 -1
     (nil))

(insn 336 335 337 (set (reg:SI 1 dx)
        (const_int 4 [0x4])) "../src/io.f":339 -1
     (nil))

(insn 337 336 338 (set (reg:DI 4 si)
        (reg:DI 231)) "../src/io.f":339 -1
     (nil))

(insn 338 337 339 (set (reg:DI 5 di)
        (reg:DI 232)) "../src/io.f":339 -1
     (nil))

(call_insn 339 338 0 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_real") [flags 0x41]  <function_decl 0x1439d4c00 _gfortran_transfer_real>) [0 _gfortran_transfer_real S1 A8])
        (const_int 0 [0])) "../src/io.f":339 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))

;; _gfortran_st_read_done (&dt_parm.14);

(insn 340 339 341 (parallel [
            (set (reg:DI 233)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -528 [0xfffffffffffffdf0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":339 -1
     (nil))

(insn 341 340 342 (set (reg:DI 5 di)
        (reg:DI 233)) "../src/io.f":339 -1
     (nil))

(call_insn 342 341 0 (call (mem:QI (symbol_ref:DI ("_gfortran_st_read_done") [flags 0x41]  <function_decl 0x1439e4200 _gfortran_st_read_done>) [0 _gfortran_st_read_done S1 A8])
        (const_int 0 [0])) "../src/io.f":339 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; _29 = dt_parm.14.common.flags;

(insn 343 342 0 (set (reg:SI 115 [ _29 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -528 [0xfffffffffffffdf0])) [1 dt_parm.14.common.flags+0 S4 A128])) "../src/io.f":339 -1
     (nil))

;; _30 = _29 & 3;

(insn 344 343 0 (parallel [
            (set (reg:SI 116 [ _30 ])
                (and:SI (reg:SI 115 [ _29 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":339 -1
     (nil))
;; Expanding GIMPLE switch as decision tree:
;;        1
;;               2

;; switch (_30) <default: <L41> [0.00%], case 1: L.48 [0.00%], case 2: L.49 [0.00%]>

(insn 345 344 346 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 116 [ _30 ])
            (const_int 1 [0x1]))) "../src/io.f":339 -1
     (nil))

(jump_insn 346 345 347 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "../src/io.f":339 -1
     (nil))

(insn 347 346 348 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 116 [ _30 ])
            (const_int 2 [0x2]))) "../src/io.f":339 -1
     (nil))

(jump_insn 348 347 349 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "../src/io.f":339 -1
     (nil))

(jump_insn 349 348 350 (set (pc)
        (label_ref 0)) "../src/io.f":339 -1
     (nil))

(barrier 350 349 0)

;; Generating RTL for gimple basic block 31

;; L.48 [0.00%]:

(code_label 351 350 352 100 ("L.48") [0 uses])

(note 352 351 0 NOTE_INSN_BASIC_BLOCK)

;; dt_parm.14 ={v} {CLOBBER};

(nil)

;; Generating RTL for gimple basic block 32

;; L.49 [0.00%]:

(code_label 355 354 356 101 ("L.49") [0 uses])

(note 356 355 0 NOTE_INSN_BASIC_BLOCK)

;; dt_parm.14 ={v} {CLOBBER};

(nil)

;; Generating RTL for gimple basic block 33

;; <L41> [0.00%]:

(code_label 359 358 360 99 (nil) [0 uses])

(note 360 359 0 NOTE_INSN_BASIC_BLOCK)

;; dt_parm.14 ={v} {CLOBBER};

(nil)

;; k_149 = kcomma2_63 + 1;

(insn 364 360 365 (set (reg:SI 237)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 kcomma2+0 S4 A32])) "../src/io.f":340 -1
     (nil))

(insn 365 364 366 (parallel [
            (set (reg:SI 236)
                (plus:SI (reg:SI 237)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":340 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 kcomma2+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))

(insn 366 365 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 k+0 S4 A32])
        (reg:SI 236)) "../src/io.f":340 -1
     (nil))

;; dt_parm.15.common.filename = &"../src/io.f"[1]{lb: 1 sz: 1};

(insn 367 366 368 (set (reg/f:DI 238)
        (symbol_ref/f:DI ("*lC4") [flags 0x2]  <var_decl 0x143b723f0 *lC4>)) "../src/io.f":341 -1
     (nil))

(insn 368 367 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -520 [0xfffffffffffffdf8])) [5 dt_parm.15.common.filename+0 S8 A64])
        (reg/f:DI 238)) "../src/io.f":341 -1
     (nil))

;; dt_parm.15.common.line = 341;

(insn 369 368 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -512 [0xfffffffffffffe00])) [1 dt_parm.15.common.line+0 S4 A128])
        (const_int 341 [0x155])) "../src/io.f":341 -1
     (nil))
Applying pattern match.pd:836, generic-match.c:64
Applying pattern match.pd:873, generic-match.c:13046
Applying pattern match.pd:148, generic-match.c:6836
Applying pattern match.pd:84, generic-match.c:11356

;; _31 = &*line_75(D)[k_149]{lb: 1 sz: 1};

(insn 370 369 371 (set (reg:SI 240)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 k+0 S4 A32])) "../src/io.f":341 -1
     (nil))

(insn 371 370 372 (parallel [
            (set (reg:SI 239)
                (plus:SI (reg:SI 240)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":341 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [1 k+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))

(insn 372 371 373 (set (reg:DI 241)
        (sign_extend:DI (reg:SI 239))) "../src/io.f":341 -1
     (nil))

(insn 373 372 374 (set (reg/f:DI 242)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -536 [0xfffffffffffffde8])) [10 line+0 S8 A64])) "../src/io.f":341 -1
     (nil))

(insn 374 373 0 (parallel [
            (set (reg/f:DI 117 [ _31 ])
                (plus:DI (reg:DI 241)
                    (reg/f:DI 242)))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":341 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -536 [0xfffffffffffffde8])) [10 line+0 S8 A64])
            (reg:DI 241))
        (nil)))

;; dt_parm.15.internal_unit = _31;

(insn 375 374 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -432 [0xfffffffffffffe50])) [5 dt_parm.15.internal_unit+0 S8 A128])
        (reg/f:DI 117 [ _31 ])) "../src/io.f":341 -1
     (nil))

;; _32 = n_73 - k_149;

(insn 376 375 377 (set (reg:SI 243)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 n+0 S4 A32])) "../src/io.f":341 -1
     (nil))

(insn 377 376 0 (parallel [
            (set (reg:SI 118 [ _32 ])
                (minus:SI (reg:SI 243)
                    (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -20 [0xffffffffffffffec])) [1 k+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":341 -1
     (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [1 n+0 S4 A32])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [1 k+0 S4 A32]))
        (nil)))

;; _33 = _32 + 1;

(insn 378 377 0 (parallel [
            (set (reg:SI 119 [ _33 ])
                (plus:SI (reg:SI 118 [ _32 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":341 -1
     (nil))

;; _34 = MAX_EXPR <_33, 0>;

(insn 380 378 379 (set (reg:SI 244)
        (const_int 0 [0])) "../src/io.f":341 -1
     (nil))

(insn 379 380 381 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 119 [ _33 ])
            (const_int 0 [0]))) "../src/io.f":341 -1
     (nil))

(insn 381 379 0 (set (reg:SI 120 [ _34 ])
        (if_then_else:SI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:SI 119 [ _33 ])
            (reg:SI 244))) "../src/io.f":341 -1
     (nil))

;; dt_parm.15.internal_unit_len = _34;

(insn 382 381 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -424 [0xfffffffffffffe58])) [1 dt_parm.15.internal_unit_len+0 S4 A64])
        (reg:SI 120 [ _34 ])) "../src/io.f":341 -1
     (nil))

;; dt_parm.15.internal_unit_desc = 0B;

(insn 383 382 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -464 [0xfffffffffffffe30])) [5 dt_parm.15.internal_unit_desc+0 S8 A128])
        (const_int 0 [0])) "../src/io.f":341 -1
     (nil))

;; dt_parm.15.common.unit = -1;

(insn 384 383 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -524 [0xfffffffffffffdf4])) [1 dt_parm.15.common.unit+0 S4 A32])
        (const_int -1 [0xffffffffffffffff])) "../src/io.f":341 -1
     (nil))

;; dt_parm.15.common.flags = 16524;

(insn 385 384 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -528 [0xfffffffffffffdf0])) [1 dt_parm.15.common.flags+0 S4 A128])
        (const_int 16524 [0x408c])) "../src/io.f":341 -1
     (nil))

;; _gfortran_st_read (&dt_parm.15);

(insn 386 385 387 (parallel [
            (set (reg:DI 245)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -528 [0xfffffffffffffdf0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":341 -1
     (nil))

(insn 387 386 388 (set (reg:DI 5 di)
        (reg:DI 245)) "../src/io.f":341 -1
     (nil))

(call_insn 388 387 0 (call (mem:QI (symbol_ref:DI ("_gfortran_st_read") [flags 0x41]  <function_decl 0x1439e0700 _gfortran_st_read>) [0 _gfortran_st_read S1 A8])
        (const_int 0 [0])) "../src/io.f":341 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; _gfortran_transfer_real (&dt_parm.15, &pdel, 4);

(insn 389 388 390 (parallel [
            (set (reg:DI 246)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":341 -1
     (nil))

(insn 390 389 391 (parallel [
            (set (reg:DI 247)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -528 [0xfffffffffffffdf0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":341 -1
     (nil))

(insn 391 390 392 (set (reg:SI 1 dx)
        (const_int 4 [0x4])) "../src/io.f":341 -1
     (nil))

(insn 392 391 393 (set (reg:DI 4 si)
        (reg:DI 246)) "../src/io.f":341 -1
     (nil))

(insn 393 392 394 (set (reg:DI 5 di)
        (reg:DI 247)) "../src/io.f":341 -1
     (nil))

(call_insn 394 393 0 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_real") [flags 0x41]  <function_decl 0x1439d4c00 _gfortran_transfer_real>) [0 _gfortran_transfer_real S1 A8])
        (const_int 0 [0])) "../src/io.f":341 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))

;; _gfortran_st_read_done (&dt_parm.15);

(insn 395 394 396 (parallel [
            (set (reg:DI 248)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -528 [0xfffffffffffffdf0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":341 -1
     (nil))

(insn 396 395 397 (set (reg:DI 5 di)
        (reg:DI 248)) "../src/io.f":341 -1
     (nil))

(call_insn 397 396 0 (call (mem:QI (symbol_ref:DI ("_gfortran_st_read_done") [flags 0x41]  <function_decl 0x1439e4200 _gfortran_st_read_done>) [0 _gfortran_st_read_done S1 A8])
        (const_int 0 [0])) "../src/io.f":341 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; _35 = dt_parm.15.common.flags;

(insn 398 397 0 (set (reg:SI 121 [ _35 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -528 [0xfffffffffffffdf0])) [1 dt_parm.15.common.flags+0 S4 A128])) "../src/io.f":341 -1
     (nil))

;; _36 = _35 & 3;

(insn 399 398 0 (parallel [
            (set (reg:SI 122 [ _36 ])
                (and:SI (reg:SI 121 [ _35 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":341 -1
     (nil))
;; Expanding GIMPLE switch as decision tree:
;;        1
;;               2

;; switch (_36) <default: <L47> [0.00%], case 1: L.50 [0.00%], case 2: L.51 [0.00%]>

(insn 400 399 401 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 122 [ _36 ])
            (const_int 1 [0x1]))) "../src/io.f":341 -1
     (nil))

(jump_insn 401 400 402 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "../src/io.f":341 -1
     (nil))

(insn 402 401 403 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 122 [ _36 ])
            (const_int 2 [0x2]))) "../src/io.f":341 -1
     (nil))

(jump_insn 403 402 404 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "../src/io.f":341 -1
     (nil))

(jump_insn 404 403 405 (set (pc)
        (label_ref 0)) "../src/io.f":341 -1
     (nil))

(barrier 405 404 0)

;; Generating RTL for gimple basic block 34

;; L.50 [0.00%]:

(code_label 406 405 407 103 ("L.50") [0 uses])

(note 407 406 0 NOTE_INSN_BASIC_BLOCK)

;; dt_parm.15 ={v} {CLOBBER};

(nil)

;; Generating RTL for gimple basic block 35

;; L.51 [0.00%]:

(code_label 410 409 411 104 ("L.51") [0 uses])

(note 411 410 0 NOTE_INSN_BASIC_BLOCK)

;; dt_parm.15 ={v} {CLOBBER};

(nil)

;; Generating RTL for gimple basic block 36

;; <L47> [0.00%]:

(code_label 414 413 415 102 (nil) [0 uses])

(note 415 414 0 NOTE_INSN_BASIC_BLOCK)

;; dt_parm.15 ={v} {CLOBBER};

(nil)

;; _37 = *p2_112(D);

(insn 416 415 417 (set (reg/f:DI 249)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -552 [0xfffffffffffffdd8])) [16 p2+0 S8 A64])) "../src/io.f":342 -1
     (nil))

(insn 417 416 0 (set (reg:SF 123 [ _37 ])
        (mem:SF (reg/f:DI 249) [15 *p2_112(D)+0 S4 A32])) "../src/io.f":342 -1
     (nil))

;; _38 = *p1_94(D);

(insn 418 417 419 (set (reg/f:DI 250)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -544 [0xfffffffffffffde0])) [16 p1+0 S8 A64])) "../src/io.f":342 -1
     (nil))

(insn 419 418 0 (set (reg:SF 124 [ _38 ])
        (mem:SF (reg/f:DI 250) [15 *p1_94(D)+0 S4 A32])) "../src/io.f":342 -1
     (nil))

;; _39 = _37 - _38;

(insn 420 419 0 (set (reg:SF 125 [ _39 ])
        (minus:SF (reg:SF 123 [ _37 ])
            (reg:SF 124 [ _38 ]))) "../src/io.f":342 -1
     (nil))

;; _40 = ((_39));

(insn 421 420 0 (set (reg:SF 126 [ _40 ])
        (reg:SF 125 [ _39 ])) "../src/io.f":342 -1
     (nil))

;; pdel.24_41 = pdel;

(insn 422 421 0 (set (reg:SF 127 [ pdel.24_41 ])
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [15 pdel+0 S4 A128])) "../src/io.f":342 -1
     (nil))

;; _42 = _40 / pdel.24_41;

(insn 423 422 0 (set (reg:SF 128 [ _42 ])
        (div:SF (reg:SF 126 [ _40 ])
            (reg:SF 127 [ pdel.24_41 ]))) "../src/io.f":342 -1
     (nil))

;; rnum = _42;

(insn 424 423 0 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [15 rnum+0 S4 A32])
        (reg:SF 128 [ _42 ])) "../src/io.f":342 -1
     (nil))

;; rnum.25_43 = rnum;

(insn 425 424 0 (set (reg:SF 129 [ rnum.25_43 ])
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [15 rnum+0 S4 A32])) "../src/io.f":343 -1
     (nil))

;; _44 = ABS_EXPR <rnum.25_43>;

(insn 426 425 427 (set (reg:V4SF 251)
        (mem/u/c:V4SF (symbol_ref/u:DI ("*lC8") [flags 0x2]) [15  S16 A128])) "../src/io.f":343 -1
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF +QNaN [+QNaN])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))

(insn 427 426 0 (parallel [
            (set (reg:SF 130 [ _44 ])
                (abs:SF (reg:SF 129 [ rnum.25_43 ])))
            (use (reg:V4SF 251))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":343 -1
     (expr_list:REG_EQUAL (abs:SF (reg:SF 129 [ rnum.25_43 ]))
        (nil)))

;; _45 = _44 + 1.4900000095367431640625e+0;

(insn 428 427 429 (set (reg:SF 252)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC9") [flags 0x2]) [15  S4 A32])) "../src/io.f":343 -1
     (expr_list:REG_EQUAL (const_double:SF 1.4900000095367431640625e+0 [0x0.beb852p+1])
        (nil)))

(insn 429 428 0 (set (reg:SF 131 [ _45 ])
        (plus:SF (reg:SF 130 [ _44 ])
            (reg:SF 252))) "../src/io.f":343 -1
     (nil))

;; _46 = (integer(kind=4)) _45;

(insn 430 429 0 (set (reg:SI 132 [ _46 ])
        (fix:SI (reg:SF 131 [ _45 ]))) "../src/io.f":343 -1
     (nil))

;; *np_132(D) = _46;

(insn 431 430 432 (set (reg/f:DI 253)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -560 [0xfffffffffffffdd0])) [11 np+0 S8 A64])) "../src/io.f":343 -1
     (nil))

(insn 432 431 0 (set (mem:SI (reg/f:DI 253) [1 *np_132(D)+0 S4 A32])
        (reg:SI 132 [ _46 ])) "../src/io.f":343 -1
     (nil))

;; Generating RTL for gimple basic block 37

;; 

(code_label 435 434 436 98 (nil) [0 uses])

(note 436 435 0 NOTE_INSN_BASIC_BLOCK)

;; if (kslash_77 != 0)

(insn 437 436 438 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [1 kslash+0 S4 A32])
            (const_int 0 [0]))) "../src/io.f":346 -1
     (nil))

(jump_insn 438 437 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "../src/io.f":346 -1
     (nil))

;; Generating RTL for gimple basic block 38

;; ka_102 = kcomma1_76 + 1;

(insn 443 439 444 (set (reg:SI 257)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 kcomma1+0 S4 A32])) "../src/io.f":347 -1
     (nil))

(insn 444 443 445 (parallel [
            (set (reg:SI 256)
                (plus:SI (reg:SI 257)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":347 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [1 kcomma1+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))

(insn 445 444 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [1 ka+0 S4 A32])
        (reg:SI 256)) "../src/io.f":347 -1
     (nil))

;; kb_103 = kslash_77 + -1;

(insn 449 445 450 (set (reg:SI 261)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [1 kslash+0 S4 A32])) "../src/io.f":348 -1
     (nil))

(insn 450 449 451 (parallel [
            (set (reg:SI 260)
                (plus:SI (reg:SI 261)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":348 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [1 kslash+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))

(insn 451 450 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [1 kb+0 S4 A32])
        (reg:SI 260)) "../src/io.f":348 -1
     (nil))

;; dt_parm.16.common.filename = &"../src/io.f"[1]{lb: 1 sz: 1};

(insn 452 451 453 (set (reg/f:DI 262)
        (symbol_ref/f:DI ("*lC4") [flags 0x2]  <var_decl 0x143b723f0 *lC4>)) "../src/io.f":350 -1
     (nil))

(insn 453 452 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -520 [0xfffffffffffffdf8])) [5 dt_parm.16.common.filename+0 S8 A64])
        (reg/f:DI 262)) "../src/io.f":350 -1
     (nil))

;; dt_parm.16.common.line = 350;

(insn 454 453 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -512 [0xfffffffffffffe00])) [1 dt_parm.16.common.line+0 S4 A128])
        (const_int 350 [0x15e])) "../src/io.f":350 -1
     (nil))
Applying pattern match.pd:836, generic-match.c:64
Applying pattern match.pd:873, generic-match.c:13046
Applying pattern match.pd:148, generic-match.c:6836
Applying pattern match.pd:84, generic-match.c:11356

;; _47 = &*line_75(D)[ka_102]{lb: 1 sz: 1};

(insn 455 454 456 (set (reg:SI 264)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [1 ka+0 S4 A32])) "../src/io.f":350 -1
     (nil))

(insn 456 455 457 (parallel [
            (set (reg:SI 263)
                (plus:SI (reg:SI 264)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":350 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [1 ka+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))

(insn 457 456 458 (set (reg:DI 265)
        (sign_extend:DI (reg:SI 263))) "../src/io.f":350 -1
     (nil))

(insn 458 457 459 (set (reg/f:DI 266)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -536 [0xfffffffffffffde8])) [10 line+0 S8 A64])) "../src/io.f":350 -1
     (nil))

(insn 459 458 0 (parallel [
            (set (reg/f:DI 133 [ _47 ])
                (plus:DI (reg:DI 265)
                    (reg/f:DI 266)))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":350 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -536 [0xfffffffffffffde8])) [10 line+0 S8 A64])
            (reg:DI 265))
        (nil)))

;; dt_parm.16.internal_unit = _47;

(insn 460 459 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -432 [0xfffffffffffffe50])) [5 dt_parm.16.internal_unit+0 S8 A128])
        (reg/f:DI 133 [ _47 ])) "../src/io.f":350 -1
     (nil))

;; _48 = kb_103 - ka_102;

(insn 461 460 462 (set (reg:SI 267)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [1 kb+0 S4 A32])) "../src/io.f":350 -1
     (nil))

(insn 462 461 0 (parallel [
            (set (reg:SI 134 [ _48 ])
                (minus:SI (reg:SI 267)
                    (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -24 [0xffffffffffffffe8])) [1 ka+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":350 -1
     (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -28 [0xffffffffffffffe4])) [1 kb+0 S4 A32])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [1 ka+0 S4 A32]))
        (nil)))

;; _49 = _48 + 1;

(insn 463 462 0 (parallel [
            (set (reg:SI 135 [ _49 ])
                (plus:SI (reg:SI 134 [ _48 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":350 -1
     (nil))

;; _50 = MAX_EXPR <_49, 0>;

(insn 465 463 464 (set (reg:SI 268)
        (const_int 0 [0])) "../src/io.f":350 -1
     (nil))

(insn 464 465 466 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 135 [ _49 ])
            (const_int 0 [0]))) "../src/io.f":350 -1
     (nil))

(insn 466 464 0 (set (reg:SI 136 [ _50 ])
        (if_then_else:SI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:SI 135 [ _49 ])
            (reg:SI 268))) "../src/io.f":350 -1
     (nil))

;; dt_parm.16.internal_unit_len = _50;

(insn 467 466 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -424 [0xfffffffffffffe58])) [1 dt_parm.16.internal_unit_len+0 S4 A64])
        (reg:SI 136 [ _50 ])) "../src/io.f":350 -1
     (nil))

;; dt_parm.16.internal_unit_desc = 0B;

(insn 468 467 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -464 [0xfffffffffffffe30])) [5 dt_parm.16.internal_unit_desc+0 S8 A128])
        (const_int 0 [0])) "../src/io.f":350 -1
     (nil))

;; dt_parm.16.common.unit = -1;

(insn 469 468 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -524 [0xfffffffffffffdf4])) [1 dt_parm.16.common.unit+0 S4 A32])
        (const_int -1 [0xffffffffffffffff])) "../src/io.f":350 -1
     (nil))

;; dt_parm.16.common.flags = 16524;

(insn 470 469 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -528 [0xfffffffffffffdf0])) [1 dt_parm.16.common.flags+0 S4 A128])
        (const_int 16524 [0x408c])) "../src/io.f":350 -1
     (nil))

;; _gfortran_st_read (&dt_parm.16);

(insn 471 470 472 (parallel [
            (set (reg:DI 269)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -528 [0xfffffffffffffdf0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":350 -1
     (nil))

(insn 472 471 473 (set (reg:DI 5 di)
        (reg:DI 269)) "../src/io.f":350 -1
     (nil))

(call_insn 473 472 0 (call (mem:QI (symbol_ref:DI ("_gfortran_st_read") [flags 0x41]  <function_decl 0x1439e0700 _gfortran_st_read>) [0 _gfortran_st_read S1 A8])
        (const_int 0 [0])) "../src/io.f":350 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; _gfortran_transfer_real (&dt_parm.16, p2_112(D), 4);

(insn 474 473 475 (set (reg:DI 270)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -552 [0xfffffffffffffdd8])) [16 p2+0 S8 A64])) "../src/io.f":350 -1
     (nil))

(insn 475 474 476 (parallel [
            (set (reg:DI 271)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -528 [0xfffffffffffffdf0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":350 -1
     (nil))

(insn 476 475 477 (set (reg:SI 1 dx)
        (const_int 4 [0x4])) "../src/io.f":350 -1
     (nil))

(insn 477 476 478 (set (reg:DI 4 si)
        (reg:DI 270)) "../src/io.f":350 -1
     (nil))

(insn 478 477 479 (set (reg:DI 5 di)
        (reg:DI 271)) "../src/io.f":350 -1
     (nil))

(call_insn 479 478 0 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_real") [flags 0x41]  <function_decl 0x1439d4c00 _gfortran_transfer_real>) [0 _gfortran_transfer_real S1 A8])
        (const_int 0 [0])) "../src/io.f":350 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))

;; _gfortran_st_read_done (&dt_parm.16);

(insn 480 479 481 (parallel [
            (set (reg:DI 272)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -528 [0xfffffffffffffdf0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":350 -1
     (nil))

(insn 481 480 482 (set (reg:DI 5 di)
        (reg:DI 272)) "../src/io.f":350 -1
     (nil))

(call_insn 482 481 0 (call (mem:QI (symbol_ref:DI ("_gfortran_st_read_done") [flags 0x41]  <function_decl 0x1439e4200 _gfortran_st_read_done>) [0 _gfortran_st_read_done S1 A8])
        (const_int 0 [0])) "../src/io.f":350 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; _51 = dt_parm.16.common.flags;

(insn 483 482 0 (set (reg:SI 137 [ _51 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -528 [0xfffffffffffffdf0])) [1 dt_parm.16.common.flags+0 S4 A128])) "../src/io.f":350 -1
     (nil))

;; _52 = _51 & 3;

(insn 484 483 0 (parallel [
            (set (reg:SI 138 [ _52 ])
                (and:SI (reg:SI 137 [ _51 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":350 -1
     (nil))
;; Expanding GIMPLE switch as decision tree:
;;        1
;;               2

;; switch (_52) <default: <L55> [0.00%], case 1: L.52 [0.00%], case 2: L.53 [0.00%]>

(insn 485 484 486 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 138 [ _52 ])
            (const_int 1 [0x1]))) "../src/io.f":350 -1
     (nil))

(jump_insn 486 485 487 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "../src/io.f":350 -1
     (nil))

(insn 487 486 488 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 138 [ _52 ])
            (const_int 2 [0x2]))) "../src/io.f":350 -1
     (nil))

(jump_insn 488 487 489 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "../src/io.f":350 -1
     (nil))

(jump_insn 489 488 490 (set (pc)
        (label_ref 0)) "../src/io.f":350 -1
     (nil))

(barrier 490 489 0)

;; Generating RTL for gimple basic block 39

;; L.52 [0.00%]:

(code_label 491 490 492 106 ("L.52") [0 uses])

(note 492 491 0 NOTE_INSN_BASIC_BLOCK)

;; dt_parm.16 ={v} {CLOBBER};

(nil)

;; Generating RTL for gimple basic block 40

;; L.53 [0.00%]:

(code_label 495 494 496 107 ("L.53") [0 uses])

(note 496 495 0 NOTE_INSN_BASIC_BLOCK)

;; dt_parm.16 ={v} {CLOBBER};

(nil)

;; Generating RTL for gimple basic block 41

;; <L55> [0.00%]:

(code_label 499 498 500 105 (nil) [0 uses])

(note 500 499 0 NOTE_INSN_BASIC_BLOCK)

;; dt_parm.16 ={v} {CLOBBER};

(nil)

;; k_118 = kslash_77 + 1;

(insn 504 500 505 (set (reg:SI 276)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [1 kslash+0 S4 A32])) "../src/io.f":351 -1
     (nil))

(insn 505 504 506 (parallel [
            (set (reg:SI 275)
                (plus:SI (reg:SI 276)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":351 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [1 kslash+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))

(insn 506 505 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 k+0 S4 A32])
        (reg:SI 275)) "../src/io.f":351 -1
     (nil))

;; dt_parm.17.common.filename = &"../src/io.f"[1]{lb: 1 sz: 1};

(insn 507 506 508 (set (reg/f:DI 277)
        (symbol_ref/f:DI ("*lC4") [flags 0x2]  <var_decl 0x143b723f0 *lC4>)) "../src/io.f":352 -1
     (nil))

(insn 508 507 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -520 [0xfffffffffffffdf8])) [5 dt_parm.17.common.filename+0 S8 A64])
        (reg/f:DI 277)) "../src/io.f":352 -1
     (nil))

;; dt_parm.17.common.line = 352;

(insn 509 508 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -512 [0xfffffffffffffe00])) [1 dt_parm.17.common.line+0 S4 A128])
        (const_int 352 [0x160])) "../src/io.f":352 -1
     (nil))
Applying pattern match.pd:836, generic-match.c:64
Applying pattern match.pd:873, generic-match.c:13046
Applying pattern match.pd:148, generic-match.c:6836
Applying pattern match.pd:84, generic-match.c:11356

;; _53 = &*line_75(D)[k_118]{lb: 1 sz: 1};

(insn 510 509 511 (set (reg:SI 279)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 k+0 S4 A32])) "../src/io.f":352 -1
     (nil))

(insn 511 510 512 (parallel [
            (set (reg:SI 278)
                (plus:SI (reg:SI 279)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":352 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [1 k+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))

(insn 512 511 513 (set (reg:DI 280)
        (sign_extend:DI (reg:SI 278))) "../src/io.f":352 -1
     (nil))

(insn 513 512 514 (set (reg/f:DI 281)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -536 [0xfffffffffffffde8])) [10 line+0 S8 A64])) "../src/io.f":352 -1
     (nil))

(insn 514 513 0 (parallel [
            (set (reg/f:DI 139 [ _53 ])
                (plus:DI (reg:DI 280)
                    (reg/f:DI 281)))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":352 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -536 [0xfffffffffffffde8])) [10 line+0 S8 A64])
            (reg:DI 280))
        (nil)))

;; dt_parm.17.internal_unit = _53;

(insn 515 514 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -432 [0xfffffffffffffe50])) [5 dt_parm.17.internal_unit+0 S8 A128])
        (reg/f:DI 139 [ _53 ])) "../src/io.f":352 -1
     (nil))

;; _54 = n_73 - k_118;

(insn 516 515 517 (set (reg:SI 282)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 n+0 S4 A32])) "../src/io.f":352 -1
     (nil))

(insn 517 516 0 (parallel [
            (set (reg:SI 140 [ _54 ])
                (minus:SI (reg:SI 282)
                    (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -20 [0xffffffffffffffec])) [1 k+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":352 -1
     (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [1 n+0 S4 A32])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [1 k+0 S4 A32]))
        (nil)))

;; _55 = _54 + 1;

(insn 518 517 0 (parallel [
            (set (reg:SI 141 [ _55 ])
                (plus:SI (reg:SI 140 [ _54 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":352 -1
     (nil))

;; _56 = MAX_EXPR <_55, 0>;

(insn 520 518 519 (set (reg:SI 283)
        (const_int 0 [0])) "../src/io.f":352 -1
     (nil))

(insn 519 520 521 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 141 [ _55 ])
            (const_int 0 [0]))) "../src/io.f":352 -1
     (nil))

(insn 521 519 0 (set (reg:SI 142 [ _56 ])
        (if_then_else:SI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:SI 141 [ _55 ])
            (reg:SI 283))) "../src/io.f":352 -1
     (nil))

;; dt_parm.17.internal_unit_len = _56;

(insn 522 521 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -424 [0xfffffffffffffe58])) [1 dt_parm.17.internal_unit_len+0 S4 A64])
        (reg:SI 142 [ _56 ])) "../src/io.f":352 -1
     (nil))

;; dt_parm.17.internal_unit_desc = 0B;

(insn 523 522 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -464 [0xfffffffffffffe30])) [5 dt_parm.17.internal_unit_desc+0 S8 A128])
        (const_int 0 [0])) "../src/io.f":352 -1
     (nil))

;; dt_parm.17.common.unit = -1;

(insn 524 523 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -524 [0xfffffffffffffdf4])) [1 dt_parm.17.common.unit+0 S4 A32])
        (const_int -1 [0xffffffffffffffff])) "../src/io.f":352 -1
     (nil))

;; dt_parm.17.common.flags = 16524;

(insn 525 524 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -528 [0xfffffffffffffdf0])) [1 dt_parm.17.common.flags+0 S4 A128])
        (const_int 16524 [0x408c])) "../src/io.f":352 -1
     (nil))

;; _gfortran_st_read (&dt_parm.17);

(insn 526 525 527 (parallel [
            (set (reg:DI 284)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -528 [0xfffffffffffffdf0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":352 -1
     (nil))

(insn 527 526 528 (set (reg:DI 5 di)
        (reg:DI 284)) "../src/io.f":352 -1
     (nil))

(call_insn 528 527 0 (call (mem:QI (symbol_ref:DI ("_gfortran_st_read") [flags 0x41]  <function_decl 0x1439e0700 _gfortran_st_read>) [0 _gfortran_st_read S1 A8])
        (const_int 0 [0])) "../src/io.f":352 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; _gfortran_transfer_real (&dt_parm.17, &rnum, 4);

(insn 529 528 530 (parallel [
            (set (reg:DI 285)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -36 [0xffffffffffffffdc])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":352 -1
     (nil))

(insn 530 529 531 (parallel [
            (set (reg:DI 286)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -528 [0xfffffffffffffdf0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":352 -1
     (nil))

(insn 531 530 532 (set (reg:SI 1 dx)
        (const_int 4 [0x4])) "../src/io.f":352 -1
     (nil))

(insn 532 531 533 (set (reg:DI 4 si)
        (reg:DI 285)) "../src/io.f":352 -1
     (nil))

(insn 533 532 534 (set (reg:DI 5 di)
        (reg:DI 286)) "../src/io.f":352 -1
     (nil))

(call_insn 534 533 0 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_real") [flags 0x41]  <function_decl 0x1439d4c00 _gfortran_transfer_real>) [0 _gfortran_transfer_real S1 A8])
        (const_int 0 [0])) "../src/io.f":352 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))

;; _gfortran_st_read_done (&dt_parm.17);

(insn 535 534 536 (parallel [
            (set (reg:DI 287)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -528 [0xfffffffffffffdf0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":352 -1
     (nil))

(insn 536 535 537 (set (reg:DI 5 di)
        (reg:DI 287)) "../src/io.f":352 -1
     (nil))

(call_insn 537 536 0 (call (mem:QI (symbol_ref:DI ("_gfortran_st_read_done") [flags 0x41]  <function_decl 0x1439e4200 _gfortran_st_read_done>) [0 _gfortran_st_read_done S1 A8])
        (const_int 0 [0])) "../src/io.f":352 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; _57 = dt_parm.17.common.flags;

(insn 538 537 0 (set (reg:SI 143 [ _57 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -528 [0xfffffffffffffdf0])) [1 dt_parm.17.common.flags+0 S4 A128])) "../src/io.f":352 -1
     (nil))

;; _58 = _57 & 3;

(insn 539 538 0 (parallel [
            (set (reg:SI 144 [ _58 ])
                (and:SI (reg:SI 143 [ _57 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":352 -1
     (nil))
;; Expanding GIMPLE switch as decision tree:
;;        1
;;               2

;; switch (_58) <default: <L61> [0.00%], case 1: L.54 [0.00%], case 2: L.55 [0.00%]>

(insn 540 539 541 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 144 [ _58 ])
            (const_int 1 [0x1]))) "../src/io.f":352 -1
     (nil))

(jump_insn 541 540 542 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "../src/io.f":352 -1
     (nil))

(insn 542 541 543 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 144 [ _58 ])
            (const_int 2 [0x2]))) "../src/io.f":352 -1
     (nil))

(jump_insn 543 542 544 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "../src/io.f":352 -1
     (nil))

(jump_insn 544 543 545 (set (pc)
        (label_ref 0)) "../src/io.f":352 -1
     (nil))

(barrier 545 544 0)

;; Generating RTL for gimple basic block 42

;; L.54 [0.00%]:

(code_label 546 545 547 109 ("L.54") [0 uses])

(note 547 546 0 NOTE_INSN_BASIC_BLOCK)

;; dt_parm.17 ={v} {CLOBBER};

(nil)

;; Generating RTL for gimple basic block 43

;; L.55 [0.00%]:

(code_label 550 549 551 110 ("L.55") [0 uses])

(note 551 550 0 NOTE_INSN_BASIC_BLOCK)

;; dt_parm.17 ={v} {CLOBBER};

(nil)

;; Generating RTL for gimple basic block 44

;; <L61> [0.00%]:

(code_label 554 553 555 108 (nil) [0 uses])

(note 555 554 0 NOTE_INSN_BASIC_BLOCK)

;; dt_parm.17 ={v} {CLOBBER};

(nil)

;; rnum.26_59 = rnum;

(insn 556 555 0 (set (reg:SF 145 [ rnum.26_59 ])
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [15 rnum+0 S4 A32])) "../src/io.f":353 -1
     (nil))

;; _60 = ABS_EXPR <rnum.26_59>;

(insn 557 556 558 (set (reg:V4SF 288)
        (mem/u/c:V4SF (symbol_ref/u:DI ("*lC8") [flags 0x2]) [15  S16 A128])) "../src/io.f":353 -1
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF +QNaN [+QNaN])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))

(insn 558 557 0 (parallel [
            (set (reg:SF 146 [ _60 ])
                (abs:SF (reg:SF 145 [ rnum.26_59 ])))
            (use (reg:V4SF 288))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":353 -1
     (expr_list:REG_EQUAL (abs:SF (reg:SF 145 [ rnum.26_59 ]))
        (nil)))

;; _61 = _60 + 9.99999977648258209228515625e-3;

(insn 559 558 560 (set (reg:SF 289)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC10") [flags 0x2]) [15  S4 A32])) "../src/io.f":353 -1
     (expr_list:REG_EQUAL (const_double:SF 9.99999977648258209228515625e-3 [0x0.a3d70ap-6])
        (nil)))

(insn 560 559 0 (set (reg:SF 147 [ _61 ])
        (plus:SF (reg:SF 146 [ _60 ])
            (reg:SF 289))) "../src/io.f":353 -1
     (nil))

;; _62 = (integer(kind=4)) _61;

(insn 561 560 0 (set (reg:SI 148 [ _62 ])
        (fix:SI (reg:SF 147 [ _61 ]))) "../src/io.f":353 -1
     (nil))

;; *np_132(D) = _62;

(insn 562 561 563 (set (reg/f:DI 290)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -560 [0xfffffffffffffdd0])) [11 np+0 S8 A64])) "../src/io.f":353 -1
     (nil))

(insn 563 562 0 (set (mem:SI (reg/f:DI 290) [1 *np_132(D)+0 S4 A32])
        (reg:SI 148 [ _62 ])) "../src/io.f":353 -1
     (nil))

;; Generating RTL for gimple basic block 45

;; 

(code_label 566 565 567 83 (nil) [0 uses])

(note 567 566 0 NOTE_INSN_BASIC_BLOCK)

;; *ierr_83(D) = 1;

(insn 568 567 569 (set (reg/f:DI 291)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -568 [0xfffffffffffffdc8])) [11 ierr+0 S8 A64])) "../src/io.f":360 -1
     (nil))

(insn 569 568 0 (set (mem:SI (reg/f:DI 291) [1 *ierr_83(D)+0 S4 A32])
        (const_int 1 [0x1])) "../src/io.f":360 -1
     (nil))

;; Generating RTL for gimple basic block 46

;; 

(code_label 572 571 573 84 (nil) [0 uses])

(note 573 572 0 NOTE_INSN_BASIC_BLOCK)

;; *ierr_83(D) = -1;

(insn 574 573 575 (set (reg/f:DI 292)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -568 [0xfffffffffffffdc8])) [11 ierr+0 S8 A64])) "../src/io.f":364 -1
     (nil))

(insn 575 574 0 (set (mem:SI (reg/f:DI 292) [1 *ierr_83(D)+0 S4 A32])
        (const_int -1 [0xffffffffffffffff])) "../src/io.f":364 -1
     (nil))

;; Generating RTL for gimple basic block 47

;; 

(code_label 576 575 577 85 (nil) [0 uses])

(note 577 576 0 NOTE_INSN_BASIC_BLOCK)

;; pdel ={v} {CLOBBER};

(nil)

;; rnum ={v} {CLOBBER};

(nil)

;; Generating RTL for gimple basic block 48

;; <L71> [0.00%]:

(code_label 578 577 579 111 (nil) [0 uses])

(note 579 578 0 NOTE_INSN_BASIC_BLOCK)
Purged edges from bb 52
Purged edges from bb 54
Purged edges from bb 56
Purged non-fallthru edges from bb 59
Purged edges from bb 61
Purged edges from bb 63
Purged edges from bb 65
Purged edges from bb 67


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Edge 11->14 redirected to 63
Edge 12->15 redirected to 64
Forwarding edge 12->13 to 16 failed.
Forwarding edge 12->13 to 16 failed.
deleting block 14
deleting block 15
Removing jump 127.
Merging block 16 into block 13...
Merged blocks 13 and 16.
Merged 13 and 16 without moving.
Redirecting jump 145 from 65 to 67.
Edge 17->20 redirected to 63
Edge 18->21 redirected to 64
Forwarding edge 18->19 to 22 failed.
Forwarding edge 18->19 to 22 failed.
deleting block 20
deleting block 21
Removing jump 185.
Merging block 22 into block 19...
Merged blocks 19 and 22.
Merged 19 and 22 without moving.
Edge 27->30 redirected to 63
Edge 28->31 redirected to 64
Forwarding edge 28->29 to 32 failed.
Forwarding edge 28->29 to 32 failed.
deleting block 30
deleting block 31
Removing jump 259.
Merging block 32 into block 29...
Merged blocks 29 and 32.
Merged 29 and 32 without moving.
Edge 33->35 redirected to 36
Forwarding edge 33->34 to 37 failed.
Forwarding edge 33->34 to 37 failed.
deleting block 35
Redirecting jump 285 from 38 to 67.
Merging block 38 into block 37...
Merged blocks 37 and 38.
Merged 37 and 38 without moving.
Redirecting jump 293 from 65 to 67.
Edge 40->43 redirected to 63
Edge 41->44 redirected to 64
Forwarding edge 41->42 to 45 failed.
Forwarding edge 41->42 to 45 failed.
deleting block 43
deleting block 44
Removing jump 349.
Merging block 45 into block 42...
Merged blocks 42 and 45.
Merged 42 and 45 without moving.
Edge 42->48 redirected to 63
Edge 46->49 redirected to 64
Forwarding edge 46->47 to 50 failed.
Forwarding edge 46->47 to 50 failed.
deleting block 48
deleting block 49
Removing jump 404.
Merging block 50 into block 47...
Merged blocks 47 and 50.
Merged 47 and 50 without moving.
Redirecting jump 433 from 65 to 67.
Edge 52->55 redirected to 63
Edge 53->56 redirected to 64
Forwarding edge 53->54 to 57 failed.
Forwarding edge 53->54 to 57 failed.
deleting block 55
deleting block 56
Removing jump 489.
Merging block 57 into block 54...
Merged blocks 54 and 57.
Merged 54 and 57 without moving.
Edge 54->60 redirected to 63
Edge 58->61 redirected to 64
Forwarding edge 58->59 to 62 failed.
Forwarding edge 58->59 to 62 failed.
deleting block 60
deleting block 61
Removing jump 544.
Merging block 62 into block 59...
Merged blocks 59 and 62.
Merged 59 and 62 without moving.
Redirecting jump 564 from 65 to 67.
Redirecting jump 570 from 65 to 67.
Merging block 65 into block 64...
Merged blocks 64 and 65.
Merged 64 and 65 without moving.
Merging block 66 into block 64...
Merged blocks 64 and 66.
Merged 64 and 66 without moving.


try_optimize_cfg iteration 2

Forwarding edge 33->34 to 37 failed.
fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 9 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 9 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 9 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -536 [0xfffffffffffffde8])) [10 line+0 S8 A64])
        (reg:DI 5 di [ line ])) "../src/io.f":284 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -544 [0xfffffffffffffde0])) [16 p1+0 S8 A64])
        (reg:DI 4 si [ p1 ])) "../src/io.f":284 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -552 [0xfffffffffffffdd8])) [16 p2+0 S8 A64])
        (reg:DI 1 dx [ p2 ])) "../src/io.f":284 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -560 [0xfffffffffffffdd0])) [11 np+0 S8 A64])
        (reg:DI 2 cx [ np ])) "../src/io.f":284 -1
     (nil))
(insn 6 5 7 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -568 [0xfffffffffffffdc8])) [11 ierr+0 S8 A64])
        (reg:DI 37 r8 [ ierr ])) "../src/io.f":284 -1
     (nil))
(insn 7 6 8 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -572 [0xfffffffffffffdc4])) [1 _line+0 S4 A32])
        (reg:SI 38 r9 [ _line ])) "../src/io.f":284 -1
     (nil))
(note 8 7 11 2 NOTE_INSN_FUNCTION_BEG)
(insn 11 8 12 2 (set (reg:SI 153)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -572 [0xfffffffffffffdc4])) [1 _line+0 S4 A32])) "../src/io.f":367 -1
     (nil))
(insn 12 11 13 2 (set (reg:DI 87 [ _1 ])
        (sign_extend:DI (reg:SI 153))) "../src/io.f":367 -1
     (nil))
(insn 13 12 14 2 (set (subreg:DI (reg:TI 88 [ _2 ]) 0)
        (reg:DI 87 [ _1 ])) "../src/io.f":367 -1
     (nil))
(insn 14 13 15 2 (set (subreg:DI (reg:TI 88 [ _2 ]) 8)
        (const_int 0 [0])) "../src/io.f":367 -1
     (nil))
(insn 15 14 16 2 (parallel [
            (set (reg:TI 151 [ _71 ])
                (ashift:TI (reg:TI 88 [ _2 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":367 -1
     (nil))
(insn 16 15 17 2 (set (reg:SI 154)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -572 [0xfffffffffffffdc4])) [1 _line+0 S4 A32])) "../src/io.f":367 -1
     (nil))
(insn 17 16 18 2 (set (reg:DI 152 [ _72 ])
        (sign_extend:DI (reg:SI 154))) "../src/io.f":367 -1
     (nil))
(insn 18 17 19 2 (set (reg:SI 155)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -572 [0xfffffffffffffdc4])) [1 _line+0 S4 A32])) "../src/io.f":296 -1
     (nil))
(insn 19 18 20 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 n+0 S4 A32])
        (reg:SI 155)) "../src/io.f":296 -1
     (nil))
(insn 20 19 21 2 (set (reg:DI 156)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -536 [0xfffffffffffffde8])) [10 line+0 S8 A64])) "../src/io.f":298 -1
     (nil))
(insn 21 20 22 2 (set (reg:SI 157)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -572 [0xfffffffffffffdc4])) [1 _line+0 S4 A32])) "../src/io.f":298 -1
     (nil))
(insn 22 21 23 2 (set (reg:SI 37 r8)
        (const_int 0 [0])) "../src/io.f":298 -1
     (nil))
(insn 23 22 24 2 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*lC3") [flags 0x2]  <var_decl 0x143b72360 *lC3>)) "../src/io.f":298 -1
     (nil))
(insn 24 23 25 2 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) "../src/io.f":298 -1
     (nil))
(insn 25 24 26 2 (set (reg:DI 4 si)
        (reg:DI 156)) "../src/io.f":298 -1
     (nil))
(insn 26 25 27 2 (set (reg:SI 5 di)
        (reg:SI 157)) "../src/io.f":298 -1
     (nil))
(call_insn/i 27 26 28 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_gfortran_string_index") [flags 0x41]  <function_decl 0x1439c4a00 _gfortran_string_index>) [0 _gfortran_string_index S1 A8])
            (const_int 0 [0]))) "../src/io.f":298 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (nil)))))))
(insn 28 27 29 2 (set (reg:SI 158)
        (reg:SI 0 ax)) "../src/io.f":298 -1
     (nil))
(insn 29 28 30 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 kcomma1+0 S4 A32])
        (reg:SI 158)) "../src/io.f":298 -1
     (nil))
(insn 30 29 31 2 (set (reg:DI 159)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -536 [0xfffffffffffffde8])) [10 line+0 S8 A64])) "../src/io.f":299 -1
     (nil))
(insn 31 30 32 2 (set (reg:SI 160)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -572 [0xfffffffffffffdc4])) [1 _line+0 S4 A32])) "../src/io.f":299 -1
     (nil))
(insn 32 31 33 2 (set (reg:SI 37 r8)
        (const_int 0 [0])) "../src/io.f":299 -1
     (nil))
(insn 33 32 34 2 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*lC7") [flags 0x2]  <var_decl 0x143bb8ab0 *lC7>)) "../src/io.f":299 -1
     (nil))
(insn 34 33 35 2 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) "../src/io.f":299 -1
     (nil))
(insn 35 34 36 2 (set (reg:DI 4 si)
        (reg:DI 159)) "../src/io.f":299 -1
     (nil))
(insn 36 35 37 2 (set (reg:SI 5 di)
        (reg:SI 160)) "../src/io.f":299 -1
     (nil))
(call_insn/i 37 36 38 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_gfortran_string_index") [flags 0x41]  <function_decl 0x1439c4a00 _gfortran_string_index>) [0 _gfortran_string_index S1 A8])
            (const_int 0 [0]))) "../src/io.f":299 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (nil)))))))
(insn 38 37 39 2 (set (reg:SI 161)
        (reg:SI 0 ax)) "../src/io.f":299 -1
     (nil))
(insn 39 38 40 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [1 kslash+0 S4 A32])
        (reg:SI 161)) "../src/io.f":299 -1
     (nil))
(insn 40 39 41 2 (set (reg:CCNO 17 flags)
        (compare:CCNO (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [1 kcomma1+0 S4 A32])
            (const_int 0 [0]))) "../src/io.f":300 -1
     (nil))
(jump_insn 41 40 42 2 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 49)
            (pc))) "../src/io.f":300 -1
     (nil)
 -> 49)
;;  succ:       4 (FALLTHRU)
;;              6

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 (FALLTHRU)
(note 42 41 43 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 43 42 44 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [1 kslash+0 S4 A32])
            (const_int 0 [0]))) "../src/io.f":300 -1
     (nil))
(jump_insn 44 43 45 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 49)
            (pc))) "../src/io.f":300 -1
     (nil)
 -> 49)
;;  succ:       5 (FALLTHRU)
;;              6

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       4 (FALLTHRU)
(note 45 44 46 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 46 45 47 5 (set (reg:QI 149 [ iftmp.20_64 ])
        (const_int 1 [0x1])) "../src/io.f":300 -1
     (nil))
(jump_insn 47 46 48 5 (set (pc)
        (label_ref 52)) "../src/io.f":300 -1
     (nil)
 -> 52)
;;  succ:       7

(barrier 48 47 49)
;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       2
;;              4
(code_label 49 48 50 6 75 (nil) [2 uses])
(note 50 49 51 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 51 50 52 6 (set (reg:QI 149 [ iftmp.20_64 ])
        (const_int 0 [0])) "../src/io.f":300 -1
     (nil))
;;  succ:       7 (FALLTHRU)

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       5
;;              6 (FALLTHRU)
(code_label 52 51 53 7 76 (nil) [1 uses])
(note 53 52 54 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 54 53 55 7 (set (reg:SI 89 [ iftmp.21_3 ])
        (zero_extend:SI (reg:QI 149 [ iftmp.20_64 ]))) "../src/io.f":300 -1
     (nil))
(insn 55 54 56 7 (parallel [
            (set (reg:SI 89 [ iftmp.21_3 ])
                (and:SI (reg:SI 89 [ iftmp.21_3 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":300 -1
     (nil))
(insn 56 55 57 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 89 [ iftmp.21_3 ])
            (const_int 0 [0]))) "../src/io.f":300 -1
     (nil))
(jump_insn 57 56 58 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 89)
            (pc))) "../src/io.f":300 -1
     (nil)
 -> 89)
;;  succ:       8 (FALLTHRU)
;;              9

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL)
;;  pred:       7 (FALLTHRU)
(note 58 57 62 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 62 58 63 8 (set (reg:SI 165)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 kcomma1+0 S4 A32])) "../src/io.f":301 -1
     (nil))
(insn 63 62 64 8 (parallel [
            (set (reg:SI 164)
                (plus:SI (reg:SI 165)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":301 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [1 kcomma1+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 64 63 65 8 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 k+0 S4 A32])
        (reg:SI 164)) "../src/io.f":301 -1
     (nil))
(insn 65 64 66 8 (set (reg:SI 167)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 k+0 S4 A32])) "../src/io.f":302 -1
     (nil))
(insn 66 65 67 8 (parallel [
            (set (reg:SI 166)
                (plus:SI (reg:SI 167)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":302 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [1 k+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 67 66 68 8 (set (reg:DI 168)
        (sign_extend:DI (reg:SI 166))) "../src/io.f":302 -1
     (nil))
(insn 68 67 69 8 (set (reg/f:DI 169)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -536 [0xfffffffffffffde8])) [10 line+0 S8 A64])) "../src/io.f":302 -1
     (nil))
(insn 69 68 70 8 (parallel [
            (set (reg/f:DI 90 [ _4 ])
                (plus:DI (reg:DI 168)
                    (reg/f:DI 169)))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":302 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -536 [0xfffffffffffffde8])) [10 line+0 S8 A64])
            (reg:DI 168))
        (nil)))
(insn 70 69 71 8 (set (reg:SI 170)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 n+0 S4 A32])) "../src/io.f":302 -1
     (nil))
(insn 71 70 72 8 (parallel [
            (set (reg:SI 91 [ _5 ])
                (minus:SI (reg:SI 170)
                    (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -20 [0xffffffffffffffec])) [1 k+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":302 -1
     (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [1 n+0 S4 A32])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [1 k+0 S4 A32]))
        (nil)))
(insn 72 71 74 8 (parallel [
            (set (reg:SI 92 [ _6 ])
                (plus:SI (reg:SI 91 [ _5 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":302 -1
     (nil))
(insn 74 72 73 8 (set (reg:SI 171)
        (const_int 0 [0])) "../src/io.f":302 -1
     (nil))
(insn 73 74 75 8 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 92 [ _6 ])
            (const_int 0 [0]))) "../src/io.f":302 -1
     (nil))
(insn 75 73 76 8 (set (reg:SI 93 [ _7 ])
        (if_then_else:SI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:SI 92 [ _6 ])
            (reg:SI 171))) "../src/io.f":302 -1
     (nil))
(insn 76 75 77 8 (set (reg:SI 37 r8)
        (const_int 0 [0])) "../src/io.f":302 -1
     (nil))
(insn 77 76 78 8 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*lC3") [flags 0x2]  <var_decl 0x143b72360 *lC3>)) "../src/io.f":302 -1
     (nil))
(insn 78 77 79 8 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) "../src/io.f":302 -1
     (nil))
(insn 79 78 80 8 (set (reg:DI 4 si)
        (reg/f:DI 90 [ _4 ])) "../src/io.f":302 -1
     (nil))
(insn 80 79 81 8 (set (reg:SI 5 di)
        (reg:SI 93 [ _7 ])) "../src/io.f":302 -1
     (nil))
(call_insn/i 81 80 82 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_gfortran_string_index") [flags 0x41]  <function_decl 0x1439c4a00 _gfortran_string_index>) [0 _gfortran_string_index S1 A8])
            (const_int 0 [0]))) "../src/io.f":302 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (nil)))))))
(insn 82 81 83 8 (set (reg:SI 94 [ _8 ])
        (reg:SI 0 ax)) "../src/io.f":302 -1
     (nil))
(insn 83 82 84 8 (set (reg:SI 172)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 k+0 S4 A32])) "../src/io.f":302 -1
     (nil))
(insn 84 83 85 8 (parallel [
            (set (reg:SI 95 [ _9 ])
                (plus:SI (reg:SI 94 [ _8 ])
                    (reg:SI 172)))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":302 -1
     (expr_list:REG_EQUAL (plus:SI (reg:SI 94 [ _8 ])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [1 k+0 S4 A32]))
        (nil)))
(insn 85 84 86 8 (parallel [
            (set (reg:SI 173)
                (plus:SI (reg:SI 95 [ _9 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":302 -1
     (nil))
(insn 86 85 87 8 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 kcomma2+0 S4 A32])
        (reg:SI 173)) "../src/io.f":302 -1
     (nil))
(jump_insn 87 86 88 8 (set (pc)
        (label_ref 92)) -1
     (nil)
 -> 92)
;;  succ:       10

(barrier 88 87 89)
;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL)
;;  pred:       7
(code_label 89 88 90 9 77 (nil) [1 uses])
(note 90 89 91 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 91 90 92 9 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 kcomma2+0 S4 A32])
        (const_int 0 [0])) "../src/io.f":304 -1
     (nil))
;;  succ:       10 (FALLTHRU)

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL)
;;  pred:       8
;;              9 (FALLTHRU)
(code_label 92 91 93 10 78 (nil) [1 uses])
(note 93 92 94 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 94 93 95 10 (set (reg/f:DI 174)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -568 [0xfffffffffffffdc8])) [11 ierr+0 S8 A64])) "../src/io.f":308 -1
     (nil))
(insn 95 94 96 10 (set (mem:SI (reg/f:DI 174) [1 *ierr_83(D)+0 S4 A32])
        (const_int 0 [0])) "../src/io.f":308 -1
     (nil))
(insn 96 95 97 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [1 kcomma1+0 S4 A32])
            (const_int 0 [0]))) "../src/io.f":310 -1
     (nil))
(jump_insn 97 96 98 10 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 147)
            (pc))) "../src/io.f":310 -1
     (nil)
 -> 147)
;;  succ:       11 (FALLTHRU)
;;              17

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10 (FALLTHRU)
(note 98 97 99 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 99 98 100 11 (set (reg/f:DI 175)
        (symbol_ref/f:DI ("*lC4") [flags 0x2]  <var_decl 0x143b723f0 *lC4>)) "../src/io.f":312 -1
     (nil))
(insn 100 99 101 11 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -520 [0xfffffffffffffdf8])) [5 dt_parm.11.common.filename+0 S8 A64])
        (reg/f:DI 175)) "../src/io.f":312 -1
     (nil))
(insn 101 100 102 11 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -512 [0xfffffffffffffe00])) [1 dt_parm.11.common.line+0 S4 A128])
        (const_int 312 [0x138])) "../src/io.f":312 -1
     (nil))
(insn 102 101 103 11 (set (reg/f:DI 176)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -536 [0xfffffffffffffde8])) [10 line+0 S8 A64])) "../src/io.f":312 -1
     (nil))
(insn 103 102 104 11 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -432 [0xfffffffffffffe50])) [5 dt_parm.11.internal_unit+0 S8 A128])
        (reg/f:DI 176)) "../src/io.f":312 -1
     (nil))
(insn 104 103 105 11 (set (reg:SI 177)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -572 [0xfffffffffffffdc4])) [1 _line+0 S4 A32])) "../src/io.f":312 -1
     (nil))
(insn 105 104 106 11 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -424 [0xfffffffffffffe58])) [1 dt_parm.11.internal_unit_len+0 S4 A64])
        (reg:SI 177)) "../src/io.f":312 -1
     (nil))
(insn 106 105 107 11 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -464 [0xfffffffffffffe30])) [5 dt_parm.11.internal_unit_desc+0 S8 A128])
        (const_int 0 [0])) "../src/io.f":312 -1
     (nil))
(insn 107 106 108 11 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -524 [0xfffffffffffffdf4])) [1 dt_parm.11.common.unit+0 S4 A32])
        (const_int -1 [0xffffffffffffffff])) "../src/io.f":312 -1
     (nil))
(insn 108 107 109 11 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -528 [0xfffffffffffffdf0])) [1 dt_parm.11.common.flags+0 S4 A128])
        (const_int 16524 [0x408c])) "../src/io.f":312 -1
     (nil))
(insn 109 108 110 11 (parallel [
            (set (reg:DI 178)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -528 [0xfffffffffffffdf0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":312 -1
     (nil))
(insn 110 109 111 11 (set (reg:DI 5 di)
        (reg:DI 178)) "../src/io.f":312 -1
     (nil))
(call_insn 111 110 112 11 (call (mem:QI (symbol_ref:DI ("_gfortran_st_read") [flags 0x41]  <function_decl 0x1439e0700 _gfortran_st_read>) [0 _gfortran_st_read S1 A8])
        (const_int 0 [0])) "../src/io.f":312 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 112 111 113 11 (set (reg:DI 179)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -544 [0xfffffffffffffde0])) [16 p1+0 S8 A64])) "../src/io.f":312 -1
     (nil))
(insn 113 112 114 11 (parallel [
            (set (reg:DI 180)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -528 [0xfffffffffffffdf0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":312 -1
     (nil))
(insn 114 113 115 11 (set (reg:SI 1 dx)
        (const_int 4 [0x4])) "../src/io.f":312 -1
     (nil))
(insn 115 114 116 11 (set (reg:DI 4 si)
        (reg:DI 179)) "../src/io.f":312 -1
     (nil))
(insn 116 115 117 11 (set (reg:DI 5 di)
        (reg:DI 180)) "../src/io.f":312 -1
     (nil))
(call_insn 117 116 118 11 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_real") [flags 0x41]  <function_decl 0x1439d4c00 _gfortran_transfer_real>) [0 _gfortran_transfer_real S1 A8])
        (const_int 0 [0])) "../src/io.f":312 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 118 117 119 11 (parallel [
            (set (reg:DI 181)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -528 [0xfffffffffffffdf0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":312 -1
     (nil))
(insn 119 118 120 11 (set (reg:DI 5 di)
        (reg:DI 181)) "../src/io.f":312 -1
     (nil))
(call_insn 120 119 121 11 (call (mem:QI (symbol_ref:DI ("_gfortran_st_read_done") [flags 0x41]  <function_decl 0x1439e4200 _gfortran_st_read_done>) [0 _gfortran_st_read_done S1 A8])
        (const_int 0 [0])) "../src/io.f":312 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 121 120 122 11 (set (reg:SI 96 [ _10 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -528 [0xfffffffffffffdf0])) [1 dt_parm.11.common.flags+0 S4 A128])) "../src/io.f":312 -1
     (nil))
(insn 122 121 123 11 (parallel [
            (set (reg:SI 97 [ _11 ])
                (and:SI (reg:SI 96 [ _10 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":312 -1
     (nil))
(insn 123 122 124 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 97 [ _11 ])
            (const_int 1 [0x1]))) "../src/io.f":312 -1
     (nil))
(jump_insn 124 123 582 11 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 566)
            (pc))) "../src/io.f":312 617 {*jcc_1}
     (nil)
 -> 566)
;;  succ:       63
;;              12 (FALLTHRU)

;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       11 (FALLTHRU)
(note 582 124 125 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 125 582 126 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 97 [ _11 ])
            (const_int 2 [0x2]))) "../src/io.f":312 -1
     (nil))
(jump_insn 126 125 583 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 572)
            (pc))) "../src/io.f":312 617 {*jcc_1}
     (nil)
 -> 572)
;;  succ:       64
;;              13 (FALLTHRU)

;; basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 17, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       12 (FALLTHRU)
(note 583 126 129 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(note 129 583 133 13 ("L.40") NOTE_INSN_DELETED_LABEL 81)
(note 133 129 139 13 ("L.41") NOTE_INSN_DELETED_LABEL 82)
(insn 139 133 140 13 (set (reg/f:DI 182)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -544 [0xfffffffffffffde0])) [16 p1+0 S8 A64])) "../src/io.f":313 -1
     (nil))
(insn 140 139 141 13 (set (reg:SF 98 [ _12 ])
        (mem:SF (reg/f:DI 182) [15 *p1_94(D)+0 S4 A32])) "../src/io.f":313 -1
     (nil))
(insn 141 140 142 13 (set (reg/f:DI 183)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -552 [0xfffffffffffffdd8])) [16 p2+0 S8 A64])) "../src/io.f":313 -1
     (nil))
(insn 142 141 143 13 (set (mem:SF (reg/f:DI 183) [15 *p2_112(D)+0 S4 A32])
        (reg:SF 98 [ _12 ])) "../src/io.f":313 -1
     (nil))
(insn 143 142 144 13 (set (reg/f:DI 184)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -560 [0xfffffffffffffdd0])) [11 np+0 S8 A64])) "../src/io.f":314 -1
     (nil))
(insn 144 143 145 13 (set (mem:SI (reg/f:DI 184) [1 *np_132(D)+0 S4 A32])
        (const_int 1 [0x1])) "../src/io.f":314 -1
     (nil))
(jump_insn 145 144 146 13 (set (pc)
        (label_ref:DI 580)) "../src/io.f":315 649 {jump}
     (nil)
 -> 580)
;;  succ:       67 [100.0%] 

(barrier 146 145 147)
;; basic block 17, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 13, next block 18, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10
(code_label 147 146 148 17 79 (nil) [1 uses])
(note 148 147 152 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 152 148 153 17 (set (reg:SI 188)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 kcomma1+0 S4 A32])) "../src/io.f":319 -1
     (nil))
(insn 153 152 154 17 (parallel [
            (set (reg:SI 187)
                (plus:SI (reg:SI 188)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":319 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [1 kcomma1+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 154 153 155 17 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 k+0 S4 A32])
        (reg:SI 187)) "../src/io.f":319 -1
     (nil))
(insn 155 154 156 17 (set (reg/f:DI 189)
        (symbol_ref/f:DI ("*lC4") [flags 0x2]  <var_decl 0x143b723f0 *lC4>)) "../src/io.f":320 -1
     (nil))
(insn 156 155 157 17 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -520 [0xfffffffffffffdf8])) [5 dt_parm.12.common.filename+0 S8 A64])
        (reg/f:DI 189)) "../src/io.f":320 -1
     (nil))
(insn 157 156 158 17 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -512 [0xfffffffffffffe00])) [1 dt_parm.12.common.line+0 S4 A128])
        (const_int 320 [0x140])) "../src/io.f":320 -1
     (nil))
(insn 158 157 159 17 (set (reg/f:DI 190)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -536 [0xfffffffffffffde8])) [10 line+0 S8 A64])) "../src/io.f":320 -1
     (nil))
(insn 159 158 161 17 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -432 [0xfffffffffffffe50])) [5 dt_parm.12.internal_unit+0 S8 A128])
        (reg/f:DI 190)) "../src/io.f":320 -1
     (nil))
(insn 161 159 160 17 (set (reg:SI 191)
        (const_int 0 [0])) "../src/io.f":320 -1
     (nil))
(insn 160 161 162 17 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [1 k+0 S4 A32])
            (const_int 0 [0]))) "../src/io.f":320 -1
     (nil))
(insn 162 160 163 17 (set (reg:SI 99 [ _13 ])
        (if_then_else:SI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [1 k+0 S4 A32])
            (reg:SI 191))) "../src/io.f":320 -1
     (nil))
(insn 163 162 164 17 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -424 [0xfffffffffffffe58])) [1 dt_parm.12.internal_unit_len+0 S4 A64])
        (reg:SI 99 [ _13 ])) "../src/io.f":320 -1
     (nil))
(insn 164 163 165 17 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -464 [0xfffffffffffffe30])) [5 dt_parm.12.internal_unit_desc+0 S8 A128])
        (const_int 0 [0])) "../src/io.f":320 -1
     (nil))
(insn 165 164 166 17 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -524 [0xfffffffffffffdf4])) [1 dt_parm.12.common.unit+0 S4 A32])
        (const_int -1 [0xffffffffffffffff])) "../src/io.f":320 -1
     (nil))
(insn 166 165 167 17 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -528 [0xfffffffffffffdf0])) [1 dt_parm.12.common.flags+0 S4 A128])
        (const_int 16524 [0x408c])) "../src/io.f":320 -1
     (nil))
(insn 167 166 168 17 (parallel [
            (set (reg:DI 192)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -528 [0xfffffffffffffdf0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":320 -1
     (nil))
(insn 168 167 169 17 (set (reg:DI 5 di)
        (reg:DI 192)) "../src/io.f":320 -1
     (nil))
(call_insn 169 168 170 17 (call (mem:QI (symbol_ref:DI ("_gfortran_st_read") [flags 0x41]  <function_decl 0x1439e0700 _gfortran_st_read>) [0 _gfortran_st_read S1 A8])
        (const_int 0 [0])) "../src/io.f":320 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 170 169 171 17 (set (reg:DI 193)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -544 [0xfffffffffffffde0])) [16 p1+0 S8 A64])) "../src/io.f":320 -1
     (nil))
(insn 171 170 172 17 (parallel [
            (set (reg:DI 194)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -528 [0xfffffffffffffdf0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":320 -1
     (nil))
(insn 172 171 173 17 (set (reg:SI 1 dx)
        (const_int 4 [0x4])) "../src/io.f":320 -1
     (nil))
(insn 173 172 174 17 (set (reg:DI 4 si)
        (reg:DI 193)) "../src/io.f":320 -1
     (nil))
(insn 174 173 175 17 (set (reg:DI 5 di)
        (reg:DI 194)) "../src/io.f":320 -1
     (nil))
(call_insn 175 174 176 17 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_real") [flags 0x41]  <function_decl 0x1439d4c00 _gfortran_transfer_real>) [0 _gfortran_transfer_real S1 A8])
        (const_int 0 [0])) "../src/io.f":320 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 176 175 177 17 (parallel [
            (set (reg:DI 195)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -528 [0xfffffffffffffdf0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":320 -1
     (nil))
(insn 177 176 178 17 (set (reg:DI 5 di)
        (reg:DI 195)) "../src/io.f":320 -1
     (nil))
(call_insn 178 177 179 17 (call (mem:QI (symbol_ref:DI ("_gfortran_st_read_done") [flags 0x41]  <function_decl 0x1439e4200 _gfortran_st_read_done>) [0 _gfortran_st_read_done S1 A8])
        (const_int 0 [0])) "../src/io.f":320 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 179 178 180 17 (set (reg:SI 100 [ _14 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -528 [0xfffffffffffffdf0])) [1 dt_parm.12.common.flags+0 S4 A128])) "../src/io.f":320 -1
     (nil))
(insn 180 179 181 17 (parallel [
            (set (reg:SI 101 [ _15 ])
                (and:SI (reg:SI 100 [ _14 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":320 -1
     (nil))
(insn 181 180 182 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 101 [ _15 ])
            (const_int 1 [0x1]))) "../src/io.f":320 -1
     (nil))
(jump_insn 182 181 584 17 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 566)
            (pc))) "../src/io.f":320 617 {*jcc_1}
     (nil)
 -> 566)
;;  succ:       63
;;              18 (FALLTHRU)

;; basic block 18, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 17, next block 19, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       17 (FALLTHRU)
(note 584 182 183 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 183 584 184 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 101 [ _15 ])
            (const_int 2 [0x2]))) "../src/io.f":320 -1
     (nil))
(jump_insn 184 183 585 18 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 572)
            (pc))) "../src/io.f":320 617 {*jcc_1}
     (nil)
 -> 572)
;;  succ:       64
;;              19 (FALLTHRU)

;; basic block 19, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 18, next block 23, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       18 (FALLTHRU)
(note 585 184 187 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(note 187 585 191 19 ("L.42") NOTE_INSN_DELETED_LABEL 87)
(note 191 187 197 19 ("L.43") NOTE_INSN_DELETED_LABEL 88)
(insn 197 191 198 19 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 kcomma2+0 S4 A32])
            (const_int 0 [0]))) "../src/io.f":322 -1
     (nil))
(jump_insn 198 197 199 19 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 206)
            (pc))) "../src/io.f":322 -1
     (nil)
 -> 206)
;;  succ:       23 (FALLTHRU)
;;              25

;; basic block 23, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 19, next block 24, flags: (NEW, REACHABLE, RTL)
;;  pred:       19 (FALLTHRU)
(note 199 198 200 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 200 199 201 23 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [1 kslash+0 S4 A32])
            (const_int 0 [0]))) "../src/io.f":322 -1
     (nil))
(jump_insn 201 200 202 23 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 206)
            (pc))) "../src/io.f":322 -1
     (nil)
 -> 206)
;;  succ:       24 (FALLTHRU)
;;              25

;; basic block 24, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 23, next block 25, flags: (NEW, REACHABLE, RTL)
;;  pred:       23 (FALLTHRU)
(note 202 201 203 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 203 202 204 24 (set (reg:QI 150 [ iftmp.22_65 ])
        (const_int 1 [0x1])) "../src/io.f":322 -1
     (nil))
(jump_insn 204 203 205 24 (set (pc)
        (label_ref 209)) "../src/io.f":322 -1
     (nil)
 -> 209)
;;  succ:       26

(barrier 205 204 206)
;; basic block 25, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 24, next block 26, flags: (NEW, REACHABLE, RTL)
;;  pred:       19
;;              23
(code_label 206 205 207 25 89 (nil) [2 uses])
(note 207 206 208 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 208 207 209 25 (set (reg:QI 150 [ iftmp.22_65 ])
        (const_int 0 [0])) "../src/io.f":322 -1
     (nil))
;;  succ:       26 (FALLTHRU)

;; basic block 26, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 25, next block 27, flags: (NEW, REACHABLE, RTL)
;;  pred:       24
;;              25 (FALLTHRU)
(code_label 209 208 210 26 90 (nil) [1 uses])
(note 210 209 211 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 211 210 212 26 (set (reg:SI 102 [ iftmp.23_16 ])
        (zero_extend:SI (reg:QI 150 [ iftmp.22_65 ]))) "../src/io.f":322 -1
     (nil))
(insn 212 211 213 26 (parallel [
            (set (reg:SI 102 [ iftmp.23_16 ])
                (and:SI (reg:SI 102 [ iftmp.23_16 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":322 -1
     (nil))
(insn 213 212 214 26 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 102 [ iftmp.23_16 ])
            (const_int 0 [0]))) "../src/io.f":322 -1
     (nil))
(jump_insn 214 213 215 26 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 295)
            (pc))) "../src/io.f":322 -1
     (nil)
 -> 295)
;;  succ:       27 (FALLTHRU)
;;              39

;; basic block 27, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 26, next block 28, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       26 (FALLTHRU)
(note 215 214 219 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 219 215 220 27 (set (reg:SI 199)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 kcomma1+0 S4 A32])) "../src/io.f":324 -1
     (nil))
(insn 220 219 221 27 (parallel [
            (set (reg:SI 198)
                (plus:SI (reg:SI 199)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":324 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [1 kcomma1+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 221 220 222 27 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 k+0 S4 A32])
        (reg:SI 198)) "../src/io.f":324 -1
     (nil))
(insn 222 221 223 27 (set (reg/f:DI 200)
        (symbol_ref/f:DI ("*lC4") [flags 0x2]  <var_decl 0x143b723f0 *lC4>)) "../src/io.f":325 -1
     (nil))
(insn 223 222 224 27 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -520 [0xfffffffffffffdf8])) [5 dt_parm.13.common.filename+0 S8 A64])
        (reg/f:DI 200)) "../src/io.f":325 -1
     (nil))
(insn 224 223 225 27 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -512 [0xfffffffffffffe00])) [1 dt_parm.13.common.line+0 S4 A128])
        (const_int 325 [0x145])) "../src/io.f":325 -1
     (nil))
(insn 225 224 226 27 (set (reg:SI 202)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 k+0 S4 A32])) "../src/io.f":325 -1
     (nil))
(insn 226 225 227 27 (parallel [
            (set (reg:SI 201)
                (plus:SI (reg:SI 202)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":325 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [1 k+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 227 226 228 27 (set (reg:DI 203)
        (sign_extend:DI (reg:SI 201))) "../src/io.f":325 -1
     (nil))
(insn 228 227 229 27 (set (reg/f:DI 204)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -536 [0xfffffffffffffde8])) [10 line+0 S8 A64])) "../src/io.f":325 -1
     (nil))
(insn 229 228 230 27 (parallel [
            (set (reg/f:DI 103 [ _17 ])
                (plus:DI (reg:DI 203)
                    (reg/f:DI 204)))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":325 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -536 [0xfffffffffffffde8])) [10 line+0 S8 A64])
            (reg:DI 203))
        (nil)))
(insn 230 229 231 27 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -432 [0xfffffffffffffe50])) [5 dt_parm.13.internal_unit+0 S8 A128])
        (reg/f:DI 103 [ _17 ])) "../src/io.f":325 -1
     (nil))
(insn 231 230 232 27 (set (reg:SI 205)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 n+0 S4 A32])) "../src/io.f":325 -1
     (nil))
(insn 232 231 233 27 (parallel [
            (set (reg:SI 104 [ _18 ])
                (minus:SI (reg:SI 205)
                    (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -20 [0xffffffffffffffec])) [1 k+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":325 -1
     (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [1 n+0 S4 A32])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [1 k+0 S4 A32]))
        (nil)))
(insn 233 232 235 27 (parallel [
            (set (reg:SI 105 [ _19 ])
                (plus:SI (reg:SI 104 [ _18 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":325 -1
     (nil))
(insn 235 233 234 27 (set (reg:SI 206)
        (const_int 0 [0])) "../src/io.f":325 -1
     (nil))
(insn 234 235 236 27 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 105 [ _19 ])
            (const_int 0 [0]))) "../src/io.f":325 -1
     (nil))
(insn 236 234 237 27 (set (reg:SI 106 [ _20 ])
        (if_then_else:SI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:SI 105 [ _19 ])
            (reg:SI 206))) "../src/io.f":325 -1
     (nil))
(insn 237 236 238 27 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -424 [0xfffffffffffffe58])) [1 dt_parm.13.internal_unit_len+0 S4 A64])
        (reg:SI 106 [ _20 ])) "../src/io.f":325 -1
     (nil))
(insn 238 237 239 27 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -464 [0xfffffffffffffe30])) [5 dt_parm.13.internal_unit_desc+0 S8 A128])
        (const_int 0 [0])) "../src/io.f":325 -1
     (nil))
(insn 239 238 240 27 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -524 [0xfffffffffffffdf4])) [1 dt_parm.13.common.unit+0 S4 A32])
        (const_int -1 [0xffffffffffffffff])) "../src/io.f":325 -1
     (nil))
(insn 240 239 241 27 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -528 [0xfffffffffffffdf0])) [1 dt_parm.13.common.flags+0 S4 A128])
        (const_int 16524 [0x408c])) "../src/io.f":325 -1
     (nil))
(insn 241 240 242 27 (parallel [
            (set (reg:DI 207)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -528 [0xfffffffffffffdf0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":325 -1
     (nil))
(insn 242 241 243 27 (set (reg:DI 5 di)
        (reg:DI 207)) "../src/io.f":325 -1
     (nil))
(call_insn 243 242 244 27 (call (mem:QI (symbol_ref:DI ("_gfortran_st_read") [flags 0x41]  <function_decl 0x1439e0700 _gfortran_st_read>) [0 _gfortran_st_read S1 A8])
        (const_int 0 [0])) "../src/io.f":325 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 244 243 245 27 (set (reg:DI 208)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -552 [0xfffffffffffffdd8])) [16 p2+0 S8 A64])) "../src/io.f":325 -1
     (nil))
(insn 245 244 246 27 (parallel [
            (set (reg:DI 209)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -528 [0xfffffffffffffdf0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":325 -1
     (nil))
(insn 246 245 247 27 (set (reg:SI 1 dx)
        (const_int 4 [0x4])) "../src/io.f":325 -1
     (nil))
(insn 247 246 248 27 (set (reg:DI 4 si)
        (reg:DI 208)) "../src/io.f":325 -1
     (nil))
(insn 248 247 249 27 (set (reg:DI 5 di)
        (reg:DI 209)) "../src/io.f":325 -1
     (nil))
(call_insn 249 248 250 27 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_real") [flags 0x41]  <function_decl 0x1439d4c00 _gfortran_transfer_real>) [0 _gfortran_transfer_real S1 A8])
        (const_int 0 [0])) "../src/io.f":325 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 250 249 251 27 (parallel [
            (set (reg:DI 210)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -528 [0xfffffffffffffdf0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":325 -1
     (nil))
(insn 251 250 252 27 (set (reg:DI 5 di)
        (reg:DI 210)) "../src/io.f":325 -1
     (nil))
(call_insn 252 251 253 27 (call (mem:QI (symbol_ref:DI ("_gfortran_st_read_done") [flags 0x41]  <function_decl 0x1439e4200 _gfortran_st_read_done>) [0 _gfortran_st_read_done S1 A8])
        (const_int 0 [0])) "../src/io.f":325 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 253 252 254 27 (set (reg:SI 107 [ _21 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -528 [0xfffffffffffffdf0])) [1 dt_parm.13.common.flags+0 S4 A128])) "../src/io.f":325 -1
     (nil))
(insn 254 253 255 27 (parallel [
            (set (reg:SI 108 [ _22 ])
                (and:SI (reg:SI 107 [ _21 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":325 -1
     (nil))
(insn 255 254 256 27 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 108 [ _22 ])
            (const_int 1 [0x1]))) "../src/io.f":325 -1
     (nil))
(jump_insn 256 255 586 27 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 566)
            (pc))) "../src/io.f":325 617 {*jcc_1}
     (nil)
 -> 566)
;;  succ:       63
;;              28 (FALLTHRU)

;; basic block 28, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 27, next block 29, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       27 (FALLTHRU)
(note 586 256 257 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 257 586 258 28 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 108 [ _22 ])
            (const_int 2 [0x2]))) "../src/io.f":325 -1
     (nil))
(jump_insn 258 257 587 28 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 572)
            (pc))) "../src/io.f":325 617 {*jcc_1}
     (nil)
 -> 572)
;;  succ:       64
;;              29 (FALLTHRU)

;; basic block 29, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 28, next block 33, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       28 (FALLTHRU)
(note 587 258 261 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(note 261 587 265 29 ("L.45") NOTE_INSN_DELETED_LABEL 93)
(note 265 261 271 29 ("L.46") NOTE_INSN_DELETED_LABEL 94)
(insn 271 265 272 29 (set (reg/f:DI 211)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -544 [0xfffffffffffffde0])) [16 p1+0 S8 A64])) "../src/io.f":326 -1
     (nil))
(insn 272 271 273 29 (set (reg:SF 109 [ _23 ])
        (mem:SF (reg/f:DI 211) [15 *p1_94(D)+0 S4 A32])) "../src/io.f":326 -1
     (nil))
(insn 273 272 274 29 (set (reg/f:DI 212)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -552 [0xfffffffffffffdd8])) [16 p2+0 S8 A64])) "../src/io.f":326 -1
     (nil))
(insn 274 273 275 29 (set (reg:SF 110 [ _24 ])
        (mem:SF (reg/f:DI 212) [15 *p2_112(D)+0 S4 A32])) "../src/io.f":326 -1
     (nil))
(insn 275 274 276 29 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 109 [ _23 ])
            (reg:SF 110 [ _24 ]))) "../src/io.f":326 -1
     (nil))
(jump_insn 276 275 588 29 (set (pc)
        (if_then_else (unordered (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref 287)
            (pc))) "../src/io.f":326 -1
     (nil)
 -> 287)
;;  succ:       37
;;              33 (FALLTHRU)

;; basic block 33, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 29, next block 34, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       29 (FALLTHRU)
(note 588 276 277 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 277 588 278 33 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 109 [ _23 ])
            (reg:SF 110 [ _24 ]))) "../src/io.f":326 -1
     (nil))
(jump_insn 278 277 589 33 (set (pc)
        (if_then_else (uneq (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 599)
            (pc))) "../src/io.f":326 617 {*jcc_1}
     (nil)
 -> 599)
;;  succ:       36
;;              34 (FALLTHRU)

;; basic block 34, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 33, next block 36, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       33 (FALLTHRU)
(note 589 278 279 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(jump_insn 279 589 280 34 (set (pc)
        (label_ref 287)) "../src/io.f":326 -1
     (nil)
 -> 287)
;;  succ:       37

(barrier 280 279 599)
;; basic block 36, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 34, next block 37, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       33
(code_label 599 280 282 36 112 (nil) [1 uses])
(note 282 599 283 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 283 282 284 36 (set (reg/f:DI 213)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -560 [0xfffffffffffffdd0])) [11 np+0 S8 A64])) "../src/io.f":328 -1
     (nil))
(insn 284 283 285 36 (set (mem:SI (reg/f:DI 213) [1 *np_132(D)+0 S4 A32])
        (const_int 1 [0x1])) "../src/io.f":328 -1
     (nil))
(jump_insn 285 284 286 36 (set (pc)
        (label_ref:DI 580)) 649 {jump}
     (nil)
 -> 580)
;;  succ:       67 [100.0%] 

(barrier 286 285 287)
;; basic block 37, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 36, next block 39, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       29
;;              34
(code_label 287 286 288 37 95 (nil) [2 uses])
(note 288 287 289 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 289 288 290 37 (set (reg/f:DI 214)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -560 [0xfffffffffffffdd0])) [11 np+0 S8 A64])) "../src/io.f":331 -1
     (nil))
(insn 290 289 293 37 (set (mem:SI (reg/f:DI 214) [1 *np_132(D)+0 S4 A32])
        (const_int 5 [0x5])) "../src/io.f":331 -1
     (nil))
(jump_insn 293 290 294 37 (set (pc)
        (label_ref:DI 580)) "../src/io.f":333 649 {jump}
     (nil)
 -> 580)
;;  succ:       67 [100.0%] 

(barrier 294 293 295)
;; basic block 39, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 37, next block 40, flags: (NEW, REACHABLE, RTL)
;;  pred:       26
(code_label 295 294 296 39 91 (nil) [1 uses])
(note 296 295 297 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 297 296 298 39 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 kcomma2+0 S4 A32])
            (const_int 0 [0]))) "../src/io.f":335 -1
     (nil))
(jump_insn 298 297 299 39 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 435)
            (pc))) "../src/io.f":335 -1
     (nil)
 -> 435)
;;  succ:       40 (FALLTHRU)
;;              51

;; basic block 40, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 39, next block 41, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       39 (FALLTHRU)
(note 299 298 303 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 303 299 304 40 (set (reg:SI 218)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 kcomma1+0 S4 A32])) "../src/io.f":337 -1
     (nil))
(insn 304 303 305 40 (parallel [
            (set (reg:SI 217)
                (plus:SI (reg:SI 218)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":337 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [1 kcomma1+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 305 304 309 40 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [1 ka+0 S4 A32])
        (reg:SI 217)) "../src/io.f":337 -1
     (nil))
(insn 309 305 310 40 (set (reg:SI 222)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 kcomma2+0 S4 A32])) "../src/io.f":338 -1
     (nil))
(insn 310 309 311 40 (parallel [
            (set (reg:SI 221)
                (plus:SI (reg:SI 222)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":338 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 kcomma2+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 311 310 312 40 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [1 kb+0 S4 A32])
        (reg:SI 221)) "../src/io.f":338 -1
     (nil))
(insn 312 311 313 40 (set (reg/f:DI 223)
        (symbol_ref/f:DI ("*lC4") [flags 0x2]  <var_decl 0x143b723f0 *lC4>)) "../src/io.f":339 -1
     (nil))
(insn 313 312 314 40 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -520 [0xfffffffffffffdf8])) [5 dt_parm.14.common.filename+0 S8 A64])
        (reg/f:DI 223)) "../src/io.f":339 -1
     (nil))
(insn 314 313 315 40 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -512 [0xfffffffffffffe00])) [1 dt_parm.14.common.line+0 S4 A128])
        (const_int 339 [0x153])) "../src/io.f":339 -1
     (nil))
(insn 315 314 316 40 (set (reg:SI 225)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [1 ka+0 S4 A32])) "../src/io.f":339 -1
     (nil))
(insn 316 315 317 40 (parallel [
            (set (reg:SI 224)
                (plus:SI (reg:SI 225)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":339 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [1 ka+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 317 316 318 40 (set (reg:DI 226)
        (sign_extend:DI (reg:SI 224))) "../src/io.f":339 -1
     (nil))
(insn 318 317 319 40 (set (reg/f:DI 227)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -536 [0xfffffffffffffde8])) [10 line+0 S8 A64])) "../src/io.f":339 -1
     (nil))
(insn 319 318 320 40 (parallel [
            (set (reg/f:DI 111 [ _25 ])
                (plus:DI (reg:DI 226)
                    (reg/f:DI 227)))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":339 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -536 [0xfffffffffffffde8])) [10 line+0 S8 A64])
            (reg:DI 226))
        (nil)))
(insn 320 319 321 40 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -432 [0xfffffffffffffe50])) [5 dt_parm.14.internal_unit+0 S8 A128])
        (reg/f:DI 111 [ _25 ])) "../src/io.f":339 -1
     (nil))
(insn 321 320 322 40 (set (reg:SI 228)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [1 kb+0 S4 A32])) "../src/io.f":339 -1
     (nil))
(insn 322 321 323 40 (parallel [
            (set (reg:SI 112 [ _26 ])
                (minus:SI (reg:SI 228)
                    (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -24 [0xffffffffffffffe8])) [1 ka+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":339 -1
     (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -28 [0xffffffffffffffe4])) [1 kb+0 S4 A32])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [1 ka+0 S4 A32]))
        (nil)))
(insn 323 322 325 40 (parallel [
            (set (reg:SI 113 [ _27 ])
                (plus:SI (reg:SI 112 [ _26 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":339 -1
     (nil))
(insn 325 323 324 40 (set (reg:SI 229)
        (const_int 0 [0])) "../src/io.f":339 -1
     (nil))
(insn 324 325 326 40 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 113 [ _27 ])
            (const_int 0 [0]))) "../src/io.f":339 -1
     (nil))
(insn 326 324 327 40 (set (reg:SI 114 [ _28 ])
        (if_then_else:SI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:SI 113 [ _27 ])
            (reg:SI 229))) "../src/io.f":339 -1
     (nil))
(insn 327 326 328 40 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -424 [0xfffffffffffffe58])) [1 dt_parm.14.internal_unit_len+0 S4 A64])
        (reg:SI 114 [ _28 ])) "../src/io.f":339 -1
     (nil))
(insn 328 327 329 40 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -464 [0xfffffffffffffe30])) [5 dt_parm.14.internal_unit_desc+0 S8 A128])
        (const_int 0 [0])) "../src/io.f":339 -1
     (nil))
(insn 329 328 330 40 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -524 [0xfffffffffffffdf4])) [1 dt_parm.14.common.unit+0 S4 A32])
        (const_int -1 [0xffffffffffffffff])) "../src/io.f":339 -1
     (nil))
(insn 330 329 331 40 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -528 [0xfffffffffffffdf0])) [1 dt_parm.14.common.flags+0 S4 A128])
        (const_int 16524 [0x408c])) "../src/io.f":339 -1
     (nil))
(insn 331 330 332 40 (parallel [
            (set (reg:DI 230)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -528 [0xfffffffffffffdf0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":339 -1
     (nil))
(insn 332 331 333 40 (set (reg:DI 5 di)
        (reg:DI 230)) "../src/io.f":339 -1
     (nil))
(call_insn 333 332 334 40 (call (mem:QI (symbol_ref:DI ("_gfortran_st_read") [flags 0x41]  <function_decl 0x1439e0700 _gfortran_st_read>) [0 _gfortran_st_read S1 A8])
        (const_int 0 [0])) "../src/io.f":339 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 334 333 335 40 (set (reg:DI 231)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -552 [0xfffffffffffffdd8])) [16 p2+0 S8 A64])) "../src/io.f":339 -1
     (nil))
(insn 335 334 336 40 (parallel [
            (set (reg:DI 232)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -528 [0xfffffffffffffdf0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":339 -1
     (nil))
(insn 336 335 337 40 (set (reg:SI 1 dx)
        (const_int 4 [0x4])) "../src/io.f":339 -1
     (nil))
(insn 337 336 338 40 (set (reg:DI 4 si)
        (reg:DI 231)) "../src/io.f":339 -1
     (nil))
(insn 338 337 339 40 (set (reg:DI 5 di)
        (reg:DI 232)) "../src/io.f":339 -1
     (nil))
(call_insn 339 338 340 40 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_real") [flags 0x41]  <function_decl 0x1439d4c00 _gfortran_transfer_real>) [0 _gfortran_transfer_real S1 A8])
        (const_int 0 [0])) "../src/io.f":339 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 340 339 341 40 (parallel [
            (set (reg:DI 233)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -528 [0xfffffffffffffdf0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":339 -1
     (nil))
(insn 341 340 342 40 (set (reg:DI 5 di)
        (reg:DI 233)) "../src/io.f":339 -1
     (nil))
(call_insn 342 341 343 40 (call (mem:QI (symbol_ref:DI ("_gfortran_st_read_done") [flags 0x41]  <function_decl 0x1439e4200 _gfortran_st_read_done>) [0 _gfortran_st_read_done S1 A8])
        (const_int 0 [0])) "../src/io.f":339 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 343 342 344 40 (set (reg:SI 115 [ _29 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -528 [0xfffffffffffffdf0])) [1 dt_parm.14.common.flags+0 S4 A128])) "../src/io.f":339 -1
     (nil))
(insn 344 343 345 40 (parallel [
            (set (reg:SI 116 [ _30 ])
                (and:SI (reg:SI 115 [ _29 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":339 -1
     (nil))
(insn 345 344 346 40 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 116 [ _30 ])
            (const_int 1 [0x1]))) "../src/io.f":339 -1
     (nil))
(jump_insn 346 345 591 40 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 566)
            (pc))) "../src/io.f":339 617 {*jcc_1}
     (nil)
 -> 566)
;;  succ:       63
;;              41 (FALLTHRU)

;; basic block 41, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 40, next block 42, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       40 (FALLTHRU)
(note 591 346 347 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 347 591 348 41 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 116 [ _30 ])
            (const_int 2 [0x2]))) "../src/io.f":339 -1
     (nil))
(jump_insn 348 347 592 41 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 572)
            (pc))) "../src/io.f":339 617 {*jcc_1}
     (nil)
 -> 572)
;;  succ:       64
;;              42 (FALLTHRU)

;; basic block 42, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 41, next block 46, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       41 (FALLTHRU)
(note 592 348 351 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(note 351 592 355 42 ("L.48") NOTE_INSN_DELETED_LABEL 100)
(note 355 351 364 42 ("L.49") NOTE_INSN_DELETED_LABEL 101)
(insn 364 355 365 42 (set (reg:SI 237)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 kcomma2+0 S4 A32])) "../src/io.f":340 -1
     (nil))
(insn 365 364 366 42 (parallel [
            (set (reg:SI 236)
                (plus:SI (reg:SI 237)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":340 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 kcomma2+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 366 365 367 42 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 k+0 S4 A32])
        (reg:SI 236)) "../src/io.f":340 -1
     (nil))
(insn 367 366 368 42 (set (reg/f:DI 238)
        (symbol_ref/f:DI ("*lC4") [flags 0x2]  <var_decl 0x143b723f0 *lC4>)) "../src/io.f":341 -1
     (nil))
(insn 368 367 369 42 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -520 [0xfffffffffffffdf8])) [5 dt_parm.15.common.filename+0 S8 A64])
        (reg/f:DI 238)) "../src/io.f":341 -1
     (nil))
(insn 369 368 370 42 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -512 [0xfffffffffffffe00])) [1 dt_parm.15.common.line+0 S4 A128])
        (const_int 341 [0x155])) "../src/io.f":341 -1
     (nil))
(insn 370 369 371 42 (set (reg:SI 240)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 k+0 S4 A32])) "../src/io.f":341 -1
     (nil))
(insn 371 370 372 42 (parallel [
            (set (reg:SI 239)
                (plus:SI (reg:SI 240)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":341 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [1 k+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 372 371 373 42 (set (reg:DI 241)
        (sign_extend:DI (reg:SI 239))) "../src/io.f":341 -1
     (nil))
(insn 373 372 374 42 (set (reg/f:DI 242)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -536 [0xfffffffffffffde8])) [10 line+0 S8 A64])) "../src/io.f":341 -1
     (nil))
(insn 374 373 375 42 (parallel [
            (set (reg/f:DI 117 [ _31 ])
                (plus:DI (reg:DI 241)
                    (reg/f:DI 242)))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":341 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -536 [0xfffffffffffffde8])) [10 line+0 S8 A64])
            (reg:DI 241))
        (nil)))
(insn 375 374 376 42 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -432 [0xfffffffffffffe50])) [5 dt_parm.15.internal_unit+0 S8 A128])
        (reg/f:DI 117 [ _31 ])) "../src/io.f":341 -1
     (nil))
(insn 376 375 377 42 (set (reg:SI 243)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 n+0 S4 A32])) "../src/io.f":341 -1
     (nil))
(insn 377 376 378 42 (parallel [
            (set (reg:SI 118 [ _32 ])
                (minus:SI (reg:SI 243)
                    (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -20 [0xffffffffffffffec])) [1 k+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":341 -1
     (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [1 n+0 S4 A32])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [1 k+0 S4 A32]))
        (nil)))
(insn 378 377 380 42 (parallel [
            (set (reg:SI 119 [ _33 ])
                (plus:SI (reg:SI 118 [ _32 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":341 -1
     (nil))
(insn 380 378 379 42 (set (reg:SI 244)
        (const_int 0 [0])) "../src/io.f":341 -1
     (nil))
(insn 379 380 381 42 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 119 [ _33 ])
            (const_int 0 [0]))) "../src/io.f":341 -1
     (nil))
(insn 381 379 382 42 (set (reg:SI 120 [ _34 ])
        (if_then_else:SI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:SI 119 [ _33 ])
            (reg:SI 244))) "../src/io.f":341 -1
     (nil))
(insn 382 381 383 42 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -424 [0xfffffffffffffe58])) [1 dt_parm.15.internal_unit_len+0 S4 A64])
        (reg:SI 120 [ _34 ])) "../src/io.f":341 -1
     (nil))
(insn 383 382 384 42 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -464 [0xfffffffffffffe30])) [5 dt_parm.15.internal_unit_desc+0 S8 A128])
        (const_int 0 [0])) "../src/io.f":341 -1
     (nil))
(insn 384 383 385 42 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -524 [0xfffffffffffffdf4])) [1 dt_parm.15.common.unit+0 S4 A32])
        (const_int -1 [0xffffffffffffffff])) "../src/io.f":341 -1
     (nil))
(insn 385 384 386 42 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -528 [0xfffffffffffffdf0])) [1 dt_parm.15.common.flags+0 S4 A128])
        (const_int 16524 [0x408c])) "../src/io.f":341 -1
     (nil))
(insn 386 385 387 42 (parallel [
            (set (reg:DI 245)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -528 [0xfffffffffffffdf0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":341 -1
     (nil))
(insn 387 386 388 42 (set (reg:DI 5 di)
        (reg:DI 245)) "../src/io.f":341 -1
     (nil))
(call_insn 388 387 389 42 (call (mem:QI (symbol_ref:DI ("_gfortran_st_read") [flags 0x41]  <function_decl 0x1439e0700 _gfortran_st_read>) [0 _gfortran_st_read S1 A8])
        (const_int 0 [0])) "../src/io.f":341 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 389 388 390 42 (parallel [
            (set (reg:DI 246)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":341 -1
     (nil))
(insn 390 389 391 42 (parallel [
            (set (reg:DI 247)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -528 [0xfffffffffffffdf0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":341 -1
     (nil))
(insn 391 390 392 42 (set (reg:SI 1 dx)
        (const_int 4 [0x4])) "../src/io.f":341 -1
     (nil))
(insn 392 391 393 42 (set (reg:DI 4 si)
        (reg:DI 246)) "../src/io.f":341 -1
     (nil))
(insn 393 392 394 42 (set (reg:DI 5 di)
        (reg:DI 247)) "../src/io.f":341 -1
     (nil))
(call_insn 394 393 395 42 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_real") [flags 0x41]  <function_decl 0x1439d4c00 _gfortran_transfer_real>) [0 _gfortran_transfer_real S1 A8])
        (const_int 0 [0])) "../src/io.f":341 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 395 394 396 42 (parallel [
            (set (reg:DI 248)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -528 [0xfffffffffffffdf0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":341 -1
     (nil))
(insn 396 395 397 42 (set (reg:DI 5 di)
        (reg:DI 248)) "../src/io.f":341 -1
     (nil))
(call_insn 397 396 398 42 (call (mem:QI (symbol_ref:DI ("_gfortran_st_read_done") [flags 0x41]  <function_decl 0x1439e4200 _gfortran_st_read_done>) [0 _gfortran_st_read_done S1 A8])
        (const_int 0 [0])) "../src/io.f":341 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 398 397 399 42 (set (reg:SI 121 [ _35 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -528 [0xfffffffffffffdf0])) [1 dt_parm.15.common.flags+0 S4 A128])) "../src/io.f":341 -1
     (nil))
(insn 399 398 400 42 (parallel [
            (set (reg:SI 122 [ _36 ])
                (and:SI (reg:SI 121 [ _35 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":341 -1
     (nil))
(insn 400 399 401 42 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 122 [ _36 ])
            (const_int 1 [0x1]))) "../src/io.f":341 -1
     (nil))
(jump_insn 401 400 593 42 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 566)
            (pc))) "../src/io.f":341 617 {*jcc_1}
     (nil)
 -> 566)
;;  succ:       63
;;              46 (FALLTHRU)

;; basic block 46, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 42, next block 47, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       42 (FALLTHRU)
(note 593 401 402 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 402 593 403 46 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 122 [ _36 ])
            (const_int 2 [0x2]))) "../src/io.f":341 -1
     (nil))
(jump_insn 403 402 594 46 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 572)
            (pc))) "../src/io.f":341 617 {*jcc_1}
     (nil)
 -> 572)
;;  succ:       64
;;              47 (FALLTHRU)

;; basic block 47, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 46, next block 51, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       46 (FALLTHRU)
(note 594 403 406 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(note 406 594 410 47 ("L.50") NOTE_INSN_DELETED_LABEL 103)
(note 410 406 416 47 ("L.51") NOTE_INSN_DELETED_LABEL 104)
(insn 416 410 417 47 (set (reg/f:DI 249)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -552 [0xfffffffffffffdd8])) [16 p2+0 S8 A64])) "../src/io.f":342 -1
     (nil))
(insn 417 416 418 47 (set (reg:SF 123 [ _37 ])
        (mem:SF (reg/f:DI 249) [15 *p2_112(D)+0 S4 A32])) "../src/io.f":342 -1
     (nil))
(insn 418 417 419 47 (set (reg/f:DI 250)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -544 [0xfffffffffffffde0])) [16 p1+0 S8 A64])) "../src/io.f":342 -1
     (nil))
(insn 419 418 420 47 (set (reg:SF 124 [ _38 ])
        (mem:SF (reg/f:DI 250) [15 *p1_94(D)+0 S4 A32])) "../src/io.f":342 -1
     (nil))
(insn 420 419 421 47 (set (reg:SF 125 [ _39 ])
        (minus:SF (reg:SF 123 [ _37 ])
            (reg:SF 124 [ _38 ]))) "../src/io.f":342 -1
     (nil))
(insn 421 420 422 47 (set (reg:SF 126 [ _40 ])
        (reg:SF 125 [ _39 ])) "../src/io.f":342 -1
     (nil))
(insn 422 421 423 47 (set (reg:SF 127 [ pdel.24_41 ])
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [15 pdel+0 S4 A128])) "../src/io.f":342 -1
     (nil))
(insn 423 422 424 47 (set (reg:SF 128 [ _42 ])
        (div:SF (reg:SF 126 [ _40 ])
            (reg:SF 127 [ pdel.24_41 ]))) "../src/io.f":342 -1
     (nil))
(insn 424 423 425 47 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [15 rnum+0 S4 A32])
        (reg:SF 128 [ _42 ])) "../src/io.f":342 -1
     (nil))
(insn 425 424 426 47 (set (reg:SF 129 [ rnum.25_43 ])
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [15 rnum+0 S4 A32])) "../src/io.f":343 -1
     (nil))
(insn 426 425 427 47 (set (reg:V4SF 251)
        (mem/u/c:V4SF (symbol_ref/u:DI ("*lC8") [flags 0x2]) [15  S16 A128])) "../src/io.f":343 -1
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF +QNaN [+QNaN])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 427 426 428 47 (parallel [
            (set (reg:SF 130 [ _44 ])
                (abs:SF (reg:SF 129 [ rnum.25_43 ])))
            (use (reg:V4SF 251))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":343 -1
     (expr_list:REG_EQUAL (abs:SF (reg:SF 129 [ rnum.25_43 ]))
        (nil)))
(insn 428 427 429 47 (set (reg:SF 252)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC9") [flags 0x2]) [15  S4 A32])) "../src/io.f":343 -1
     (expr_list:REG_EQUAL (const_double:SF 1.4900000095367431640625e+0 [0x0.beb852p+1])
        (nil)))
(insn 429 428 430 47 (set (reg:SF 131 [ _45 ])
        (plus:SF (reg:SF 130 [ _44 ])
            (reg:SF 252))) "../src/io.f":343 -1
     (nil))
(insn 430 429 431 47 (set (reg:SI 132 [ _46 ])
        (fix:SI (reg:SF 131 [ _45 ]))) "../src/io.f":343 -1
     (nil))
(insn 431 430 432 47 (set (reg/f:DI 253)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -560 [0xfffffffffffffdd0])) [11 np+0 S8 A64])) "../src/io.f":343 -1
     (nil))
(insn 432 431 433 47 (set (mem:SI (reg/f:DI 253) [1 *np_132(D)+0 S4 A32])
        (reg:SI 132 [ _46 ])) "../src/io.f":343 -1
     (nil))
(jump_insn 433 432 434 47 (set (pc)
        (label_ref:DI 580)) "../src/io.f":344 649 {jump}
     (nil)
 -> 580)
;;  succ:       67 [100.0%] 

(barrier 434 433 435)
;; basic block 51, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 47, next block 52, flags: (NEW, REACHABLE, RTL)
;;  pred:       39
(code_label 435 434 436 51 98 (nil) [1 uses])
(note 436 435 437 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(insn 437 436 438 51 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [1 kslash+0 S4 A32])
            (const_int 0 [0]))) "../src/io.f":346 -1
     (nil))
(jump_insn 438 437 439 51 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 566)
            (pc))) "../src/io.f":346 -1
     (nil)
 -> 566)
;;  succ:       52 (FALLTHRU)
;;              63

;; basic block 52, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 51, next block 53, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       51 (FALLTHRU)
(note 439 438 443 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(insn 443 439 444 52 (set (reg:SI 257)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 kcomma1+0 S4 A32])) "../src/io.f":347 -1
     (nil))
(insn 444 443 445 52 (parallel [
            (set (reg:SI 256)
                (plus:SI (reg:SI 257)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":347 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [1 kcomma1+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 445 444 449 52 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [1 ka+0 S4 A32])
        (reg:SI 256)) "../src/io.f":347 -1
     (nil))
(insn 449 445 450 52 (set (reg:SI 261)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [1 kslash+0 S4 A32])) "../src/io.f":348 -1
     (nil))
(insn 450 449 451 52 (parallel [
            (set (reg:SI 260)
                (plus:SI (reg:SI 261)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":348 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [1 kslash+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 451 450 452 52 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [1 kb+0 S4 A32])
        (reg:SI 260)) "../src/io.f":348 -1
     (nil))
(insn 452 451 453 52 (set (reg/f:DI 262)
        (symbol_ref/f:DI ("*lC4") [flags 0x2]  <var_decl 0x143b723f0 *lC4>)) "../src/io.f":350 -1
     (nil))
(insn 453 452 454 52 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -520 [0xfffffffffffffdf8])) [5 dt_parm.16.common.filename+0 S8 A64])
        (reg/f:DI 262)) "../src/io.f":350 -1
     (nil))
(insn 454 453 455 52 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -512 [0xfffffffffffffe00])) [1 dt_parm.16.common.line+0 S4 A128])
        (const_int 350 [0x15e])) "../src/io.f":350 -1
     (nil))
(insn 455 454 456 52 (set (reg:SI 264)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [1 ka+0 S4 A32])) "../src/io.f":350 -1
     (nil))
(insn 456 455 457 52 (parallel [
            (set (reg:SI 263)
                (plus:SI (reg:SI 264)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":350 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [1 ka+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 457 456 458 52 (set (reg:DI 265)
        (sign_extend:DI (reg:SI 263))) "../src/io.f":350 -1
     (nil))
(insn 458 457 459 52 (set (reg/f:DI 266)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -536 [0xfffffffffffffde8])) [10 line+0 S8 A64])) "../src/io.f":350 -1
     (nil))
(insn 459 458 460 52 (parallel [
            (set (reg/f:DI 133 [ _47 ])
                (plus:DI (reg:DI 265)
                    (reg/f:DI 266)))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":350 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -536 [0xfffffffffffffde8])) [10 line+0 S8 A64])
            (reg:DI 265))
        (nil)))
(insn 460 459 461 52 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -432 [0xfffffffffffffe50])) [5 dt_parm.16.internal_unit+0 S8 A128])
        (reg/f:DI 133 [ _47 ])) "../src/io.f":350 -1
     (nil))
(insn 461 460 462 52 (set (reg:SI 267)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [1 kb+0 S4 A32])) "../src/io.f":350 -1
     (nil))
(insn 462 461 463 52 (parallel [
            (set (reg:SI 134 [ _48 ])
                (minus:SI (reg:SI 267)
                    (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -24 [0xffffffffffffffe8])) [1 ka+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":350 -1
     (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -28 [0xffffffffffffffe4])) [1 kb+0 S4 A32])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [1 ka+0 S4 A32]))
        (nil)))
(insn 463 462 465 52 (parallel [
            (set (reg:SI 135 [ _49 ])
                (plus:SI (reg:SI 134 [ _48 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":350 -1
     (nil))
(insn 465 463 464 52 (set (reg:SI 268)
        (const_int 0 [0])) "../src/io.f":350 -1
     (nil))
(insn 464 465 466 52 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 135 [ _49 ])
            (const_int 0 [0]))) "../src/io.f":350 -1
     (nil))
(insn 466 464 467 52 (set (reg:SI 136 [ _50 ])
        (if_then_else:SI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:SI 135 [ _49 ])
            (reg:SI 268))) "../src/io.f":350 -1
     (nil))
(insn 467 466 468 52 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -424 [0xfffffffffffffe58])) [1 dt_parm.16.internal_unit_len+0 S4 A64])
        (reg:SI 136 [ _50 ])) "../src/io.f":350 -1
     (nil))
(insn 468 467 469 52 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -464 [0xfffffffffffffe30])) [5 dt_parm.16.internal_unit_desc+0 S8 A128])
        (const_int 0 [0])) "../src/io.f":350 -1
     (nil))
(insn 469 468 470 52 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -524 [0xfffffffffffffdf4])) [1 dt_parm.16.common.unit+0 S4 A32])
        (const_int -1 [0xffffffffffffffff])) "../src/io.f":350 -1
     (nil))
(insn 470 469 471 52 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -528 [0xfffffffffffffdf0])) [1 dt_parm.16.common.flags+0 S4 A128])
        (const_int 16524 [0x408c])) "../src/io.f":350 -1
     (nil))
(insn 471 470 472 52 (parallel [
            (set (reg:DI 269)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -528 [0xfffffffffffffdf0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":350 -1
     (nil))
(insn 472 471 473 52 (set (reg:DI 5 di)
        (reg:DI 269)) "../src/io.f":350 -1
     (nil))
(call_insn 473 472 474 52 (call (mem:QI (symbol_ref:DI ("_gfortran_st_read") [flags 0x41]  <function_decl 0x1439e0700 _gfortran_st_read>) [0 _gfortran_st_read S1 A8])
        (const_int 0 [0])) "../src/io.f":350 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 474 473 475 52 (set (reg:DI 270)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -552 [0xfffffffffffffdd8])) [16 p2+0 S8 A64])) "../src/io.f":350 -1
     (nil))
(insn 475 474 476 52 (parallel [
            (set (reg:DI 271)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -528 [0xfffffffffffffdf0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":350 -1
     (nil))
(insn 476 475 477 52 (set (reg:SI 1 dx)
        (const_int 4 [0x4])) "../src/io.f":350 -1
     (nil))
(insn 477 476 478 52 (set (reg:DI 4 si)
        (reg:DI 270)) "../src/io.f":350 -1
     (nil))
(insn 478 477 479 52 (set (reg:DI 5 di)
        (reg:DI 271)) "../src/io.f":350 -1
     (nil))
(call_insn 479 478 480 52 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_real") [flags 0x41]  <function_decl 0x1439d4c00 _gfortran_transfer_real>) [0 _gfortran_transfer_real S1 A8])
        (const_int 0 [0])) "../src/io.f":350 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 480 479 481 52 (parallel [
            (set (reg:DI 272)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -528 [0xfffffffffffffdf0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":350 -1
     (nil))
(insn 481 480 482 52 (set (reg:DI 5 di)
        (reg:DI 272)) "../src/io.f":350 -1
     (nil))
(call_insn 482 481 483 52 (call (mem:QI (symbol_ref:DI ("_gfortran_st_read_done") [flags 0x41]  <function_decl 0x1439e4200 _gfortran_st_read_done>) [0 _gfortran_st_read_done S1 A8])
        (const_int 0 [0])) "../src/io.f":350 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 483 482 484 52 (set (reg:SI 137 [ _51 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -528 [0xfffffffffffffdf0])) [1 dt_parm.16.common.flags+0 S4 A128])) "../src/io.f":350 -1
     (nil))
(insn 484 483 485 52 (parallel [
            (set (reg:SI 138 [ _52 ])
                (and:SI (reg:SI 137 [ _51 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":350 -1
     (nil))
(insn 485 484 486 52 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 138 [ _52 ])
            (const_int 1 [0x1]))) "../src/io.f":350 -1
     (nil))
(jump_insn 486 485 595 52 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 566)
            (pc))) "../src/io.f":350 617 {*jcc_1}
     (nil)
 -> 566)
;;  succ:       63
;;              53 (FALLTHRU)

;; basic block 53, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 52, next block 54, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       52 (FALLTHRU)
(note 595 486 487 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(insn 487 595 488 53 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 138 [ _52 ])
            (const_int 2 [0x2]))) "../src/io.f":350 -1
     (nil))
(jump_insn 488 487 596 53 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 572)
            (pc))) "../src/io.f":350 617 {*jcc_1}
     (nil)
 -> 572)
;;  succ:       64
;;              54 (FALLTHRU)

;; basic block 54, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 53, next block 58, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       53 (FALLTHRU)
(note 596 488 491 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(note 491 596 495 54 ("L.52") NOTE_INSN_DELETED_LABEL 106)
(note 495 491 504 54 ("L.53") NOTE_INSN_DELETED_LABEL 107)
(insn 504 495 505 54 (set (reg:SI 276)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [1 kslash+0 S4 A32])) "../src/io.f":351 -1
     (nil))
(insn 505 504 506 54 (parallel [
            (set (reg:SI 275)
                (plus:SI (reg:SI 276)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":351 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [1 kslash+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 506 505 507 54 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 k+0 S4 A32])
        (reg:SI 275)) "../src/io.f":351 -1
     (nil))
(insn 507 506 508 54 (set (reg/f:DI 277)
        (symbol_ref/f:DI ("*lC4") [flags 0x2]  <var_decl 0x143b723f0 *lC4>)) "../src/io.f":352 -1
     (nil))
(insn 508 507 509 54 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -520 [0xfffffffffffffdf8])) [5 dt_parm.17.common.filename+0 S8 A64])
        (reg/f:DI 277)) "../src/io.f":352 -1
     (nil))
(insn 509 508 510 54 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -512 [0xfffffffffffffe00])) [1 dt_parm.17.common.line+0 S4 A128])
        (const_int 352 [0x160])) "../src/io.f":352 -1
     (nil))
(insn 510 509 511 54 (set (reg:SI 279)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 k+0 S4 A32])) "../src/io.f":352 -1
     (nil))
(insn 511 510 512 54 (parallel [
            (set (reg:SI 278)
                (plus:SI (reg:SI 279)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":352 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [1 k+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 512 511 513 54 (set (reg:DI 280)
        (sign_extend:DI (reg:SI 278))) "../src/io.f":352 -1
     (nil))
(insn 513 512 514 54 (set (reg/f:DI 281)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -536 [0xfffffffffffffde8])) [10 line+0 S8 A64])) "../src/io.f":352 -1
     (nil))
(insn 514 513 515 54 (parallel [
            (set (reg/f:DI 139 [ _53 ])
                (plus:DI (reg:DI 280)
                    (reg/f:DI 281)))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":352 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -536 [0xfffffffffffffde8])) [10 line+0 S8 A64])
            (reg:DI 280))
        (nil)))
(insn 515 514 516 54 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -432 [0xfffffffffffffe50])) [5 dt_parm.17.internal_unit+0 S8 A128])
        (reg/f:DI 139 [ _53 ])) "../src/io.f":352 -1
     (nil))
(insn 516 515 517 54 (set (reg:SI 282)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 n+0 S4 A32])) "../src/io.f":352 -1
     (nil))
(insn 517 516 518 54 (parallel [
            (set (reg:SI 140 [ _54 ])
                (minus:SI (reg:SI 282)
                    (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -20 [0xffffffffffffffec])) [1 k+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":352 -1
     (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [1 n+0 S4 A32])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [1 k+0 S4 A32]))
        (nil)))
(insn 518 517 520 54 (parallel [
            (set (reg:SI 141 [ _55 ])
                (plus:SI (reg:SI 140 [ _54 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":352 -1
     (nil))
(insn 520 518 519 54 (set (reg:SI 283)
        (const_int 0 [0])) "../src/io.f":352 -1
     (nil))
(insn 519 520 521 54 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 141 [ _55 ])
            (const_int 0 [0]))) "../src/io.f":352 -1
     (nil))
(insn 521 519 522 54 (set (reg:SI 142 [ _56 ])
        (if_then_else:SI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:SI 141 [ _55 ])
            (reg:SI 283))) "../src/io.f":352 -1
     (nil))
(insn 522 521 523 54 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -424 [0xfffffffffffffe58])) [1 dt_parm.17.internal_unit_len+0 S4 A64])
        (reg:SI 142 [ _56 ])) "../src/io.f":352 -1
     (nil))
(insn 523 522 524 54 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -464 [0xfffffffffffffe30])) [5 dt_parm.17.internal_unit_desc+0 S8 A128])
        (const_int 0 [0])) "../src/io.f":352 -1
     (nil))
(insn 524 523 525 54 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -524 [0xfffffffffffffdf4])) [1 dt_parm.17.common.unit+0 S4 A32])
        (const_int -1 [0xffffffffffffffff])) "../src/io.f":352 -1
     (nil))
(insn 525 524 526 54 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -528 [0xfffffffffffffdf0])) [1 dt_parm.17.common.flags+0 S4 A128])
        (const_int 16524 [0x408c])) "../src/io.f":352 -1
     (nil))
(insn 526 525 527 54 (parallel [
            (set (reg:DI 284)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -528 [0xfffffffffffffdf0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":352 -1
     (nil))
(insn 527 526 528 54 (set (reg:DI 5 di)
        (reg:DI 284)) "../src/io.f":352 -1
     (nil))
(call_insn 528 527 529 54 (call (mem:QI (symbol_ref:DI ("_gfortran_st_read") [flags 0x41]  <function_decl 0x1439e0700 _gfortran_st_read>) [0 _gfortran_st_read S1 A8])
        (const_int 0 [0])) "../src/io.f":352 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 529 528 530 54 (parallel [
            (set (reg:DI 285)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -36 [0xffffffffffffffdc])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":352 -1
     (nil))
(insn 530 529 531 54 (parallel [
            (set (reg:DI 286)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -528 [0xfffffffffffffdf0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":352 -1
     (nil))
(insn 531 530 532 54 (set (reg:SI 1 dx)
        (const_int 4 [0x4])) "../src/io.f":352 -1
     (nil))
(insn 532 531 533 54 (set (reg:DI 4 si)
        (reg:DI 285)) "../src/io.f":352 -1
     (nil))
(insn 533 532 534 54 (set (reg:DI 5 di)
        (reg:DI 286)) "../src/io.f":352 -1
     (nil))
(call_insn 534 533 535 54 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_real") [flags 0x41]  <function_decl 0x1439d4c00 _gfortran_transfer_real>) [0 _gfortran_transfer_real S1 A8])
        (const_int 0 [0])) "../src/io.f":352 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 535 534 536 54 (parallel [
            (set (reg:DI 287)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -528 [0xfffffffffffffdf0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":352 -1
     (nil))
(insn 536 535 537 54 (set (reg:DI 5 di)
        (reg:DI 287)) "../src/io.f":352 -1
     (nil))
(call_insn 537 536 538 54 (call (mem:QI (symbol_ref:DI ("_gfortran_st_read_done") [flags 0x41]  <function_decl 0x1439e4200 _gfortran_st_read_done>) [0 _gfortran_st_read_done S1 A8])
        (const_int 0 [0])) "../src/io.f":352 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 538 537 539 54 (set (reg:SI 143 [ _57 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -528 [0xfffffffffffffdf0])) [1 dt_parm.17.common.flags+0 S4 A128])) "../src/io.f":352 -1
     (nil))
(insn 539 538 540 54 (parallel [
            (set (reg:SI 144 [ _58 ])
                (and:SI (reg:SI 143 [ _57 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":352 -1
     (nil))
(insn 540 539 541 54 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 144 [ _58 ])
            (const_int 1 [0x1]))) "../src/io.f":352 -1
     (nil))
(jump_insn 541 540 597 54 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 566)
            (pc))) "../src/io.f":352 617 {*jcc_1}
     (nil)
 -> 566)
;;  succ:       63
;;              58 (FALLTHRU)

;; basic block 58, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 54, next block 59, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       54 (FALLTHRU)
(note 597 541 542 58 [bb 58] NOTE_INSN_BASIC_BLOCK)
(insn 542 597 543 58 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 144 [ _58 ])
            (const_int 2 [0x2]))) "../src/io.f":352 -1
     (nil))
(jump_insn 543 542 598 58 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 572)
            (pc))) "../src/io.f":352 617 {*jcc_1}
     (nil)
 -> 572)
;;  succ:       64
;;              59 (FALLTHRU)

;; basic block 59, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 58, next block 63, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       58 (FALLTHRU)
(note 598 543 546 59 [bb 59] NOTE_INSN_BASIC_BLOCK)
(note 546 598 550 59 ("L.54") NOTE_INSN_DELETED_LABEL 109)
(note 550 546 556 59 ("L.55") NOTE_INSN_DELETED_LABEL 110)
(insn 556 550 557 59 (set (reg:SF 145 [ rnum.26_59 ])
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [15 rnum+0 S4 A32])) "../src/io.f":353 -1
     (nil))
(insn 557 556 558 59 (set (reg:V4SF 288)
        (mem/u/c:V4SF (symbol_ref/u:DI ("*lC8") [flags 0x2]) [15  S16 A128])) "../src/io.f":353 -1
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF +QNaN [+QNaN])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 558 557 559 59 (parallel [
            (set (reg:SF 146 [ _60 ])
                (abs:SF (reg:SF 145 [ rnum.26_59 ])))
            (use (reg:V4SF 288))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":353 -1
     (expr_list:REG_EQUAL (abs:SF (reg:SF 145 [ rnum.26_59 ]))
        (nil)))
(insn 559 558 560 59 (set (reg:SF 289)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC10") [flags 0x2]) [15  S4 A32])) "../src/io.f":353 -1
     (expr_list:REG_EQUAL (const_double:SF 9.99999977648258209228515625e-3 [0x0.a3d70ap-6])
        (nil)))
(insn 560 559 561 59 (set (reg:SF 147 [ _61 ])
        (plus:SF (reg:SF 146 [ _60 ])
            (reg:SF 289))) "../src/io.f":353 -1
     (nil))
(insn 561 560 562 59 (set (reg:SI 148 [ _62 ])
        (fix:SI (reg:SF 147 [ _61 ]))) "../src/io.f":353 -1
     (nil))
(insn 562 561 563 59 (set (reg/f:DI 290)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -560 [0xfffffffffffffdd0])) [11 np+0 S8 A64])) "../src/io.f":353 -1
     (nil))
(insn 563 562 564 59 (set (mem:SI (reg/f:DI 290) [1 *np_132(D)+0 S4 A32])
        (reg:SI 148 [ _62 ])) "../src/io.f":353 -1
     (nil))
(jump_insn 564 563 565 59 (set (pc)
        (label_ref:DI 580)) "../src/io.f":354 649 {jump}
     (nil)
 -> 580)
;;  succ:       67 [100.0%] 

(barrier 565 564 566)
;; basic block 63, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 59, next block 64, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       11
;;              17
;;              27
;;              40
;;              42
;;              51
;;              52
;;              54
(code_label 566 565 567 63 83 (nil) [8 uses])
(note 567 566 568 63 [bb 63] NOTE_INSN_BASIC_BLOCK)
(insn 568 567 569 63 (set (reg/f:DI 291)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -568 [0xfffffffffffffdc8])) [11 ierr+0 S8 A64])) "../src/io.f":360 -1
     (nil))
(insn 569 568 570 63 (set (mem:SI (reg/f:DI 291) [1 *ierr_83(D)+0 S4 A32])
        (const_int 1 [0x1])) "../src/io.f":360 -1
     (nil))
(jump_insn 570 569 571 63 (set (pc)
        (label_ref:DI 580)) "../src/io.f":361 649 {jump}
     (nil)
 -> 580)
;;  succ:       67 [100.0%] 

(barrier 571 570 572)
;; basic block 64, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 63, next block 67, flags: (NEW, REACHABLE, RTL)
;;  pred:       12
;;              18
;;              28
;;              41
;;              46
;;              53
;;              58
(code_label 572 571 573 64 84 (nil) [7 uses])
(note 573 572 574 64 [bb 64] NOTE_INSN_BASIC_BLOCK)
(insn 574 573 575 64 (set (reg/f:DI 292)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -568 [0xfffffffffffffdc8])) [11 ierr+0 S8 A64])) "../src/io.f":364 -1
     (nil))
(insn 575 574 600 64 (set (mem:SI (reg/f:DI 292) [1 *ierr_83(D)+0 S4 A32])
        (const_int -1 [0xffffffffffffffff])) "../src/io.f":364 -1
     (nil))
(insn 600 575 580 64 (const_int 0 [0]) "../src/io.f":365 -1
     (nil))
;;  succ:       67 (FALLTHRU)

;; basic block 67, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 64, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       64 (FALLTHRU)
;;              13 [100.0%] 
;;              36 [100.0%] 
;;              37 [100.0%] 
;;              47 [100.0%] 
;;              59 [100.0%] 
;;              63 [100.0%] 
(code_label 580 600 581 67 74 (nil) [6 uses])
(note 581 580 0 67 [bb 67] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function getarg0 (getarg0_, funcdef_no=6, decl_uid=3710, cgraph_uid=6, symbol_order=6)

getarg0 (integer(kind=4) & restrict iarg, character(kind=1)[1:_arg] & restrict arg, integer(kind=4) _arg)
{
  unsigned long D.3719;
  integer(kind=4) D.3718;
  sizetype D.3721;
  bitsizetype D.3720;
  integer(kind=4) narg;
  sizetype _1;
  bitsizetype _2;
  integer(kind=4) _3;
  unsigned long _4;
  unsigned long _5;
  unsigned long _6;
  unsigned long _7;
  void * _8;
  bitsizetype _11;
  sizetype _12;
  integer(kind=4) _17;
  unsigned long _18;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = (sizetype) _arg_10(D);
  _2 = (bitsizetype) _1;
  _11 = _2 * 8;
  _12 = (sizetype) _arg_10(D);
  narg_15 = _gfortran_iargc ();
  _3 = *iarg_16(D);
  if (narg_15 >= _3)
    goto <bb 3>; [0.00%]
  else
    goto <bb 4>; [0.00%]
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
  _gfortran_getarg_i4 (iarg_16(D), arg_19(D), _arg_10(D));
  goto <bb 7>; [0.00%]
;;    succ:       7

;;   basic block 4, loop depth 0
;;    pred:       2
  _17 = _arg_10(D);
  _4 = (unsigned long) _17;
  _18 = _4 + 18446744073709551615;
  if (_17 != 0)
    goto <bb 5>; [0.00%]
  else
    goto <bb 7>; [0.00%]
;;    succ:       5
;;                7

;;   basic block 5, loop depth 0
;;    pred:       4
  _5 = (unsigned long) _17;
  _6 = MIN_EXPR <_5, 1>;
  __builtin_memcpy (arg_19(D), &" "[1]{lb: 1 sz: 1}, _6);
  _7 = (unsigned long) _17;
  if (_7 > 1)
    goto <bb 6>; [0.00%]
  else
    goto <bb 7>; [0.00%]
;;    succ:       6
;;                7

;;   basic block 6, loop depth 0
;;    pred:       5
  _8 = arg_19(D) + 1;
  __builtin_memset (_8, 32, _18);
;;    succ:       7

;;   basic block 7, loop depth 0
;;    pred:       3
;;                4
;;                6
;;                5
;;    succ:       8

;;   basic block 8, loop depth 0
;;    pred:       7
<L10> [0.00%]:
  return;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_1 - 1 )
Partition 2 (_2 - 2 )
Partition 3 (_3 - 3 )
Partition 4 (_4 - 4 )
Partition 5 (_5 - 5 )
Partition 6 (_6 - 6 )
Partition 7 (_7 - 7 )
Partition 8 (_8 - 8 )
Partition 10 (_arg_10(D) - 10 )
Partition 11 (_11 - 11 )
Partition 12 (_12 - 12 )
Partition 15 (narg_15 - 15 )
Partition 16 (iarg_16(D) - 16 )
Partition 17 (_17 - 17 )
Partition 18 (_18 - 18 )
Partition 19 (arg_19(D) - 19 )


Partition map 

Partition 0 (_arg_10(D) - 10 )
Partition 1 (iarg_16(D) - 16 )
Partition 2 (arg_19(D) - 19 )


Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (_arg_10(D) - 10 )
Partition 1 (iarg_16(D) - 16 )
Partition 2 (arg_19(D) - 19 )

After Coalescing:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (_2 - 2 )
Partition 2 (_3 - 3 )
Partition 3 (_4 - 4 )
Partition 4 (_5 - 5 )
Partition 5 (_6 - 6 )
Partition 6 (_7 - 7 )
Partition 7 (_8 - 8 )
Partition 8 (_arg_10(D) - 10 )
Partition 9 (_11 - 11 )
Partition 10 (_12 - 12 )
Partition 11 (narg_15 - 15 )
Partition 12 (iarg_16(D) - 16 )
Partition 13 (_17 - 17 )
Partition 14 (_18 - 18 )
Partition 15 (arg_19(D) - 19 )

getarg0 (integer(kind=4) & restrict iarg, character(kind=1)[1:_arg] & restrict arg, integer(kind=4) _arg)
{
  unsigned long D.3719;
  integer(kind=4) D.3718;
  sizetype D.3721;
  bitsizetype D.3720;
  integer(kind=4) narg;
  sizetype _1;
  bitsizetype _2;
  integer(kind=4) _3;
  unsigned long _4;
  unsigned long _5;
  unsigned long _6;
  unsigned long _7;
  void * _8;
  bitsizetype _11;
  sizetype _12;
  integer(kind=4) _17;
  unsigned long _18;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = (sizetype) _arg_10(D);
  _2 = (bitsizetype) _1;
  _11 = _2 * 8;
  _12 = (sizetype) _arg_10(D);
  narg_15 = _gfortran_iargc ();
  _3 = *iarg_16(D);
  if (narg_15 >= _3)
    goto <bb 3>; [0.00%]
  else
    goto <bb 4>; [0.00%]
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
  _gfortran_getarg_i4 (iarg_16(D), arg_19(D), _arg_10(D));
  goto <bb 7>; [0.00%]
;;    succ:       7

;;   basic block 4, loop depth 0
;;    pred:       2
  _17 = _arg_10(D);
  _4 = (unsigned long) _17;
  _18 = _4 + 18446744073709551615;
  if (_17 != 0)
    goto <bb 5>; [0.00%]
  else
    goto <bb 7>; [0.00%]
;;    succ:       5
;;                7

;;   basic block 5, loop depth 0
;;    pred:       4
  _5 = (unsigned long) _17;
  _6 = MIN_EXPR <_5, 1>;
  __builtin_memcpy (arg_19(D), &" "[1]{lb: 1 sz: 1}, _6);
  _7 = (unsigned long) _17;
  if (_7 > 1)
    goto <bb 6>; [0.00%]
  else
    goto <bb 7>; [0.00%]
;;    succ:       6
;;                7

;;   basic block 6, loop depth 0
;;    pred:       5
  _8 = arg_19(D) + 1;
  __builtin_memset (_8, 32, _18);
;;    succ:       7

;;   basic block 7, loop depth 0
;;    pred:       3
;;                4
;;                6
;;                5
;;    succ:       8

;;   basic block 8, loop depth 0
;;    pred:       7
<L10> [0.00%]:
  return;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; _1 = (sizetype) _arg_10(D);

(insn 8 7 9 (set (reg:SI 99)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [1 _arg+0 S4 A32])) "../src/io.f":388 -1
     (nil))

(insn 9 8 0 (set (reg:DI 87 [ _1 ])
        (sign_extend:DI (reg:SI 99))) "../src/io.f":388 -1
     (nil))

;; _2 = (bitsizetype) _1;

(insn 10 9 11 (set (subreg:DI (reg:TI 88 [ _2 ]) 0)
        (reg:DI 87 [ _1 ])) "../src/io.f":388 -1
     (nil))

(insn 11 10 0 (set (subreg:DI (reg:TI 88 [ _2 ]) 8)
        (const_int 0 [0])) "../src/io.f":388 -1
     (nil))

;; _11 = _2 * 8;

(insn 12 11 0 (parallel [
            (set (reg:TI 95 [ _11 ])
                (ashift:TI (reg:TI 88 [ _2 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":388 -1
     (nil))

;; _12 = (sizetype) _arg_10(D);

(insn 13 12 14 (set (reg:SI 100)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [1 _arg+0 S4 A32])) "../src/io.f":388 -1
     (nil))

(insn 14 13 0 (set (reg:DI 96 [ _12 ])
        (sign_extend:DI (reg:SI 100))) "../src/io.f":388 -1
     (nil))

;; narg_15 = _gfortran_iargc ();

(call_insn 15 14 16 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_gfortran_iargc") [flags 0x41]  <function_decl 0x1439d3100 _gfortran_iargc>) [0 _gfortran_iargc S1 A8])
            (const_int 0 [0]))) "../src/io.f":380 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

(insn 16 15 17 (set (reg:SI 101)
        (reg:SI 0 ax)) "../src/io.f":380 -1
     (nil))

(insn 17 16 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 narg+0 S4 A32])
        (reg:SI 101)) "../src/io.f":380 -1
     (nil))

;; _3 = *iarg_16(D);

(insn 18 17 19 (set (reg/f:DI 102)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [11 iarg+0 S8 A64])) "../src/io.f":381 -1
     (nil))

(insn 19 18 0 (set (reg:SI 89 [ _3 ])
        (mem:SI (reg/f:DI 102) [1 *iarg_16(D)+0 S4 A32])) "../src/io.f":381 -1
     (nil))

;; if (narg_15 >= _3)

(insn 20 19 21 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 narg+0 S4 A32])
            (reg:SI 89 [ _3 ]))) "../src/io.f":381 -1
     (nil))

(jump_insn 21 20 0 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "../src/io.f":381 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; _gfortran_getarg_i4 (iarg_16(D), arg_19(D), _arg_10(D));

(insn 23 22 24 (set (reg:SI 103)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [1 _arg+0 S4 A32])) "../src/io.f":382 -1
     (nil))

(insn 24 23 25 (set (reg:DI 104)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [10 arg+0 S8 A64])) "../src/io.f":382 -1
     (nil))

(insn 25 24 26 (set (reg:DI 105)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [11 iarg+0 S8 A64])) "../src/io.f":382 -1
     (nil))

(insn 26 25 27 (set (reg:SI 1 dx)
        (reg:SI 103)) "../src/io.f":382 -1
     (nil))

(insn 27 26 28 (set (reg:DI 4 si)
        (reg:DI 104)) "../src/io.f":382 -1
     (nil))

(insn 28 27 29 (set (reg:DI 5 di)
        (reg:DI 105)) "../src/io.f":382 -1
     (nil))

(insn 29 28 30 (set (reg:QI 0 ax)
        (const_int 0 [0])) "../src/io.f":382 -1
     (nil))

(call_insn 30 29 0 (call (mem:QI (symbol_ref:DI ("_gfortran_getarg_i4") [flags 0x41]  <function_decl 0x1439e4f00 _gfortran_getarg_i4>) [0 _gfortran_getarg_i4 S1 A8])
        (const_int 0 [0])) "../src/io.f":382 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (nil))))))

;; Generating RTL for gimple basic block 4

;; 

(code_label 33 32 34 114 (nil) [0 uses])

(note 34 33 0 NOTE_INSN_BASIC_BLOCK)

;; _17 = _arg_10(D);

(insn 35 34 0 (set (reg:SI 97 [ _17 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [1 _arg+0 S4 A32])) "../src/io.f":384 -1
     (nil))

;; _4 = (unsigned long) _17;

(insn 36 35 0 (set (reg:DI 90 [ _4 ])
        (sign_extend:DI (reg:SI 97 [ _17 ]))) "../src/io.f":384 -1
     (nil))

;; _18 = _4 + 18446744073709551615;

(insn 37 36 0 (parallel [
            (set (reg:DI 98 [ _18 ])
                (plus:DI (reg:DI 90 [ _4 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":384 -1
     (nil))

;; if (_17 != 0)

(insn 38 37 39 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 97 [ _17 ])
            (const_int 0 [0]))) "../src/io.f":384 -1
     (nil))

(jump_insn 39 38 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "../src/io.f":384 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; _5 = (unsigned long) _17;

(insn 41 40 0 (set (reg:DI 91 [ _5 ])
        (sign_extend:DI (reg:SI 97 [ _17 ]))) "../src/io.f":384 -1
     (nil))

;; _6 = MIN_EXPR <_5, 1>;

(insn 43 41 42 (set (reg:DI 106)
        (const_int 1 [0x1])) "../src/io.f":384 -1
     (nil))

(insn 42 43 44 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 91 [ _5 ])
            (const_int 0 [0]))) "../src/io.f":384 -1
     (nil))

(insn 44 42 0 (set (reg:DI 92 [ _6 ])
        (if_then_else:DI (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (reg:DI 91 [ _5 ])
            (reg:DI 106))) "../src/io.f":384 -1
     (nil))
Applying pattern match.pd:836, generic-match.c:64
Applying pattern match.pd:873, generic-match.c:13046
Applying pattern match.pd:1221, generic-match.c:4912
Applying pattern match.pd:84, generic-match.c:11356
Applying pattern match.pd:1814, generic-match.c:9559
Applying pattern match.pd:148, generic-match.c:6836
Applying pattern match.pd:836, generic-match.c:64
Applying pattern match.pd:873, generic-match.c:13046
Applying pattern match.pd:1221, generic-match.c:4912
Applying pattern match.pd:84, generic-match.c:11356
Applying pattern match.pd:1814, generic-match.c:9559
Applying pattern match.pd:148, generic-match.c:6836

;; __builtin_memcpy (arg_19(D), &" "[1]{lb: 1 sz: 1}, _6);

(insn 45 44 46 (set (reg/f:DI 107)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [10 arg+0 S8 A64])) "../src/io.f":384 -1
     (nil))

(insn 46 45 47 (set (reg:DI 108)
        (reg/f:DI 107)) "../src/io.f":384 -1
     (nil))

(insn 47 46 48 (set (reg:DI 109)
        (symbol_ref/f:DI ("*lC2") [flags 0x2]  <var_decl 0x143b722d0 *lC2>)) "../src/io.f":384 -1
     (nil))

(insn 48 47 49 (set (reg:DI 110)
        (reg:DI 92 [ _6 ])) "../src/io.f":384 -1
     (nil))

(insn 49 48 50 (set (reg:DI 1 dx)
        (reg:DI 110)) "../src/io.f":384 -1
     (nil))

(insn 50 49 51 (set (reg:DI 4 si)
        (reg:DI 109)) "../src/io.f":384 -1
     (nil))

(insn 51 50 52 (set (reg:DI 5 di)
        (reg:DI 108)) "../src/io.f":384 -1
     (nil))

(call_insn 52 51 53 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memcpy") [flags 0x41]  <function_decl 0x14386f300 __builtin_memcpy>) [0 __builtin_memcpy S1 A8])
            (const_int 0 [0]))) "../src/io.f":384 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))

(insn 53 52 54 (set (reg:DI 111)
        (reg:DI 0 ax)) "../src/io.f":384 -1
     (nil))

(insn 54 53 0 (set (reg:DI 112)
        (reg:DI 111)) "../src/io.f":384 -1
     (nil))

;; _7 = (unsigned long) _17;

(insn 55 54 0 (set (reg:DI 93 [ _7 ])
        (sign_extend:DI (reg:SI 97 [ _17 ]))) "../src/io.f":384 -1
     (nil))

;; if (_7 > 1)

(insn 56 55 57 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 93 [ _7 ])
            (const_int 1 [0x1]))) "../src/io.f":384 -1
     (nil))

(jump_insn 57 56 0 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "../src/io.f":384 -1
     (nil))

;; Generating RTL for gimple basic block 6

;; _8 = arg_19(D) + 1;

(insn 59 58 60 (set (reg/f:DI 113)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [10 arg+0 S8 A64])) "../src/io.f":384 -1
     (nil))

(insn 60 59 0 (parallel [
            (set (reg/f:DI 94 [ _8 ])
                (plus:DI (reg/f:DI 113)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":384 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])) [10 arg+0 S8 A64])
            (const_int 1 [0x1]))
        (nil)))
Applying pattern match.pd:836, generic-match.c:64
Applying pattern match.pd:873, generic-match.c:13046
Applying pattern match.pd:1221, generic-match.c:4912
Applying pattern match.pd:84, generic-match.c:11356
Applying pattern match.pd:1814, generic-match.c:9559
Applying pattern match.pd:148, generic-match.c:6836

;; __builtin_memset (_8, 32, _18);

(insn 61 60 62 (set (reg:DI 1 dx)
        (reg:DI 98 [ _18 ])) "../src/io.f":384 -1
     (nil))

(insn 62 61 63 (set (reg:SI 4 si)
        (const_int 32 [0x20])) "../src/io.f":384 -1
     (nil))

(insn 63 62 64 (set (reg:DI 5 di)
        (reg/f:DI 94 [ _8 ])) "../src/io.f":384 -1
     (nil))

(call_insn 64 63 0 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memset") [flags 0x41]  <function_decl 0x14386f600 __builtin_memset>) [0 __builtin_memset S1 A8])
            (const_int 0 [0]))) "../src/io.f":384 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))

;; Generating RTL for gimple basic block 7

;; 

(code_label 65 64 66 115 (nil) [0 uses])

(note 66 65 0 NOTE_INSN_BASIC_BLOCK)

;; Generating RTL for gimple basic block 8

;; <L10> [0.00%]:

(code_label 67 66 68 116 (nil) [0 uses])

(note 68 67 0 NOTE_INSN_BASIC_BLOCK)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Redirecting jump 31 from 8 to 10.
Edge 5->8 redirected to 10
Edge 6->8 redirected to 10
Merging block 8 into block 7...
Merged blocks 7 and 8.
Merged 7 and 8 without moving.
Merging block 9 into block 7...
Merged blocks 7 and 9.
Merged 7 and 9 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [11 iarg+0 S8 A64])
        (reg:DI 5 di [ iarg ])) "../src/io.f":370 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [10 arg+0 S8 A64])
        (reg:DI 4 si [ arg ])) "../src/io.f":370 -1
     (nil))
(insn 4 3 5 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [1 _arg+0 S4 A32])
        (reg:SI 1 dx [ _arg ])) "../src/io.f":370 -1
     (nil))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg:SI 99)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [1 _arg+0 S4 A32])) "../src/io.f":388 -1
     (nil))
(insn 9 8 10 2 (set (reg:DI 87 [ _1 ])
        (sign_extend:DI (reg:SI 99))) "../src/io.f":388 -1
     (nil))
(insn 10 9 11 2 (set (subreg:DI (reg:TI 88 [ _2 ]) 0)
        (reg:DI 87 [ _1 ])) "../src/io.f":388 -1
     (nil))
(insn 11 10 12 2 (set (subreg:DI (reg:TI 88 [ _2 ]) 8)
        (const_int 0 [0])) "../src/io.f":388 -1
     (nil))
(insn 12 11 13 2 (parallel [
            (set (reg:TI 95 [ _11 ])
                (ashift:TI (reg:TI 88 [ _2 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":388 -1
     (nil))
(insn 13 12 14 2 (set (reg:SI 100)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [1 _arg+0 S4 A32])) "../src/io.f":388 -1
     (nil))
(insn 14 13 15 2 (set (reg:DI 96 [ _12 ])
        (sign_extend:DI (reg:SI 100))) "../src/io.f":388 -1
     (nil))
(call_insn 15 14 16 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_gfortran_iargc") [flags 0x41]  <function_decl 0x1439d3100 _gfortran_iargc>) [0 _gfortran_iargc S1 A8])
            (const_int 0 [0]))) "../src/io.f":380 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))
(insn 16 15 17 2 (set (reg:SI 101)
        (reg:SI 0 ax)) "../src/io.f":380 -1
     (nil))
(insn 17 16 18 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 narg+0 S4 A32])
        (reg:SI 101)) "../src/io.f":380 -1
     (nil))
(insn 18 17 19 2 (set (reg/f:DI 102)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [11 iarg+0 S8 A64])) "../src/io.f":381 -1
     (nil))
(insn 19 18 20 2 (set (reg:SI 89 [ _3 ])
        (mem:SI (reg/f:DI 102) [1 *iarg_16(D)+0 S4 A32])) "../src/io.f":381 -1
     (nil))
(insn 20 19 21 2 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 narg+0 S4 A32])
            (reg:SI 89 [ _3 ]))) "../src/io.f":381 -1
     (nil))
(jump_insn 21 20 22 2 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 33)
            (pc))) "../src/io.f":381 -1
     (nil)
 -> 33)
;;  succ:       4 (FALLTHRU)
;;              5

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
(note 22 21 23 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 24 4 (set (reg:SI 103)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [1 _arg+0 S4 A32])) "../src/io.f":382 -1
     (nil))
(insn 24 23 25 4 (set (reg:DI 104)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [10 arg+0 S8 A64])) "../src/io.f":382 -1
     (nil))
(insn 25 24 26 4 (set (reg:DI 105)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [11 iarg+0 S8 A64])) "../src/io.f":382 -1
     (nil))
(insn 26 25 27 4 (set (reg:SI 1 dx)
        (reg:SI 103)) "../src/io.f":382 -1
     (nil))
(insn 27 26 28 4 (set (reg:DI 4 si)
        (reg:DI 104)) "../src/io.f":382 -1
     (nil))
(insn 28 27 29 4 (set (reg:DI 5 di)
        (reg:DI 105)) "../src/io.f":382 -1
     (nil))
(insn 29 28 30 4 (set (reg:QI 0 ax)
        (const_int 0 [0])) "../src/io.f":382 -1
     (nil))
(call_insn 30 29 31 4 (call (mem:QI (symbol_ref:DI ("_gfortran_getarg_i4") [flags 0x41]  <function_decl 0x1439e4f00 _gfortran_getarg_i4>) [0 _gfortran_getarg_i4 S1 A8])
        (const_int 0 [0])) "../src/io.f":382 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (nil))))))
(jump_insn 31 30 32 4 (set (pc)
        (label_ref:DI 69)) 649 {jump}
     (nil)
 -> 69)
;;  succ:       10 [100.0%] 

(barrier 32 31 33)
;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
(code_label 33 32 34 5 114 (nil) [1 uses])
(note 34 33 35 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 5 (set (reg:SI 97 [ _17 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [1 _arg+0 S4 A32])) "../src/io.f":384 -1
     (nil))
(insn 36 35 37 5 (set (reg:DI 90 [ _4 ])
        (sign_extend:DI (reg:SI 97 [ _17 ]))) "../src/io.f":384 -1
     (nil))
(insn 37 36 38 5 (parallel [
            (set (reg:DI 98 [ _18 ])
                (plus:DI (reg:DI 90 [ _4 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":384 -1
     (nil))
(insn 38 37 39 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 97 [ _17 ])
            (const_int 0 [0]))) "../src/io.f":384 -1
     (nil))
(jump_insn 39 38 40 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 69)
            (pc))) "../src/io.f":384 617 {*jcc_1}
     (nil)
 -> 69)
;;  succ:       6 (FALLTHRU)
;;              10

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
(note 40 39 41 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 43 6 (set (reg:DI 91 [ _5 ])
        (sign_extend:DI (reg:SI 97 [ _17 ]))) "../src/io.f":384 -1
     (nil))
(insn 43 41 42 6 (set (reg:DI 106)
        (const_int 1 [0x1])) "../src/io.f":384 -1
     (nil))
(insn 42 43 44 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 91 [ _5 ])
            (const_int 0 [0]))) "../src/io.f":384 -1
     (nil))
(insn 44 42 45 6 (set (reg:DI 92 [ _6 ])
        (if_then_else:DI (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (reg:DI 91 [ _5 ])
            (reg:DI 106))) "../src/io.f":384 -1
     (nil))
(insn 45 44 46 6 (set (reg/f:DI 107)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [10 arg+0 S8 A64])) "../src/io.f":384 -1
     (nil))
(insn 46 45 47 6 (set (reg:DI 108)
        (reg/f:DI 107)) "../src/io.f":384 -1
     (nil))
(insn 47 46 48 6 (set (reg:DI 109)
        (symbol_ref/f:DI ("*lC2") [flags 0x2]  <var_decl 0x143b722d0 *lC2>)) "../src/io.f":384 -1
     (nil))
(insn 48 47 49 6 (set (reg:DI 110)
        (reg:DI 92 [ _6 ])) "../src/io.f":384 -1
     (nil))
(insn 49 48 50 6 (set (reg:DI 1 dx)
        (reg:DI 110)) "../src/io.f":384 -1
     (nil))
(insn 50 49 51 6 (set (reg:DI 4 si)
        (reg:DI 109)) "../src/io.f":384 -1
     (nil))
(insn 51 50 52 6 (set (reg:DI 5 di)
        (reg:DI 108)) "../src/io.f":384 -1
     (nil))
(call_insn 52 51 53 6 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memcpy") [flags 0x41]  <function_decl 0x14386f300 __builtin_memcpy>) [0 __builtin_memcpy S1 A8])
            (const_int 0 [0]))) "../src/io.f":384 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 53 52 54 6 (set (reg:DI 111)
        (reg:DI 0 ax)) "../src/io.f":384 -1
     (nil))
(insn 54 53 55 6 (set (reg:DI 112)
        (reg:DI 111)) "../src/io.f":384 -1
     (nil))
(insn 55 54 56 6 (set (reg:DI 93 [ _7 ])
        (sign_extend:DI (reg:SI 97 [ _17 ]))) "../src/io.f":384 -1
     (nil))
(insn 56 55 57 6 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 93 [ _7 ])
            (const_int 1 [0x1]))) "../src/io.f":384 -1
     (nil))
(jump_insn 57 56 58 6 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 69)
            (pc))) "../src/io.f":384 617 {*jcc_1}
     (nil)
 -> 69)
;;  succ:       7 (FALLTHRU)
;;              10

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 10, flags: (NEW, REACHABLE, RTL)
;;  pred:       6 (FALLTHRU)
(note 58 57 59 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 59 58 60 7 (set (reg/f:DI 113)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [10 arg+0 S8 A64])) "../src/io.f":384 -1
     (nil))
(insn 60 59 61 7 (parallel [
            (set (reg/f:DI 94 [ _8 ])
                (plus:DI (reg/f:DI 113)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":384 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])) [10 arg+0 S8 A64])
            (const_int 1 [0x1]))
        (nil)))
(insn 61 60 62 7 (set (reg:DI 1 dx)
        (reg:DI 98 [ _18 ])) "../src/io.f":384 -1
     (nil))
(insn 62 61 63 7 (set (reg:SI 4 si)
        (const_int 32 [0x20])) "../src/io.f":384 -1
     (nil))
(insn 63 62 64 7 (set (reg:DI 5 di)
        (reg/f:DI 94 [ _8 ])) "../src/io.f":384 -1
     (nil))
(call_insn 64 63 71 7 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memset") [flags 0x41]  <function_decl 0x14386f600 __builtin_memset>) [0 __builtin_memset S1 A8])
            (const_int 0 [0]))) "../src/io.f":384 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 71 64 69 7 (const_int 0 [0]) "../src/io.f":387 -1
     (nil))
;;  succ:       10 (FALLTHRU)

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       7 (FALLTHRU)
;;              4 [100.0%] 
;;              5
;;              6
(code_label 69 71 70 10 113 (nil) [3 uses])
(note 70 69 0 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function strip (strip_, funcdef_no=7, decl_uid=3722, cgraph_uid=7, symbol_order=7)

strip (character(kind=1)[1:_string] & restrict string, integer(kind=4) & restrict ns, integer(kind=4) _string)
{
  integer(kind=4) D.3756;
  integer(kind=4) D.3755;
  integer(kind=4) D.3754;
  integer(kind=4) D.3753;
  integer(kind=4) D.3752;
  logical(kind=1) D.3749;
  integer(kind=4) D.3746;
  integer(kind=4) D.3745;
  logical(kind=1) D.3742;
  integer(kind=4) D.3739;
  integer(kind=4) D.3737;
  integer(kind=4) D.3736;
  logical(kind=1) D.3734;
  integer(kind=4) D.3731;
  sizetype D.3758;
  bitsizetype D.3757;
  integer(kind=4) nsdel;
  integer(kind=4) n;
  integer(kind=4) k1;
  integer(kind=4) k0;
  sizetype _1;
  bitsizetype _2;
  integer(kind=4) _3;
  character(kind=1) _4;
  integer(kind=4) _5;
  integer(kind=4) _6;
  character(kind=1) _7;
  character(kind=1) _8;
  integer(kind=4) _9;
  integer(kind=4) _10;
  integer(kind=4) _11;
  integer(kind=4) _12;
  integer(kind=4) _13;
  integer(kind=4) _14;
  integer(kind=4) _15;
  unsigned long _16;
  unsigned long _17;
  unsigned long _18;
  character(kind=1) * _19;
  character(kind=1) * _20;
  unsigned long _21;
  unsigned long _22;
  unsigned long _23;
  unsigned long _24;
  unsigned long _25;
  character(kind=1) * _26;
  sizetype _27;
  void * _28;
  integer(kind=4) _29;
  integer(kind=4) _30;
  bitsizetype _38;
  sizetype _39;
  integer(kind=4) _41;
  logical(kind=1) _45;
  integer(kind=4) _46;
  integer(kind=4) _47;
  integer(kind=4) _50;
  logical(kind=1) _52;
  integer(kind=4) _54;
  integer(kind=4) _55;
  logical(kind=1) _57;
  integer(kind=4) _60;
  integer(kind=4) _61;
  integer(kind=4) _62;
  integer(kind=4) _63;
  integer(kind=4) _64;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = (sizetype) _string_37(D);
  _2 = (bitsizetype) _1;
  _38 = _2 * 8;
  _39 = (sizetype) _string_37(D);
  n_40 = _string_37(D);
  _41 = n_40;
  *ns_43(D) = _41;
;;    succ:       3

;;   basic block 3, loop depth 1
;;    pred:       2
;;                5
  _3 = *ns_43(D);
  _45 = _3 <= 0;
  if (_45 != 0)
    goto <bb 6>; [0.00%]
  else
    goto <bb 4>; [0.00%]
;;    succ:       6
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  _46 = *ns_43(D);
  _47 = *ns_43(D);
  _4 = *string_48(D)[_46]{lb: 1 sz: 1};
  if (_4 != 32)
    goto <bb 7>; [0.00%]
  else
    goto <bb 5>; [0.00%]
;;    succ:       7
;;                5

;;   basic block 5, loop depth 1
;;    pred:       4
  _5 = *ns_43(D);
  _6 = _5 + -1;
  *ns_43(D) = _6;
  goto <bb 3>; [0.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       3
  *ns_43(D) = 0;
  goto <bb 20> (<L27>); [0.00%]
;;    succ:       20

;;   basic block 7, loop depth 1
;;    pred:       4
;;                19
  _50 = *ns_43(D);
  k0_51 = 1;
;;    succ:       8

;;   basic block 8, loop depth 2
;;    pred:       7
;;                10
  # k0_31 = PHI <k0_51(7), k0_53(10)>
  _52 = k0_31 > _50;
  if (_52 != 0)
    goto <bb 11>; [0.00%]
  else
    goto <bb 9>; [0.00%]
;;    succ:       11
;;                9

;;   basic block 9, loop depth 2
;;    pred:       8
  _7 = *string_48(D)[k0_31]{lb: 1 sz: 1};
  if (_7 == 32)
    goto <bb 12>; [0.00%]
  else
    goto <bb 10>; [0.00%]
;;    succ:       12
;;                10

;;   basic block 10, loop depth 2
;;    pred:       9
  k0_53 = k0_31 + 1;
  goto <bb 8>; [0.00%]
;;    succ:       8

;;   basic block 11, loop depth 0
;;    pred:       8
  goto <bb 20> (<L27>); [0.00%]
;;    succ:       20

;;   basic block 12, loop depth 1
;;    pred:       9
  _54 = k0_31 + 1;
  _55 = *ns_43(D);
  k1_56 = _54;
;;    succ:       13

;;   basic block 13, loop depth 2
;;    pred:       12
;;                15
  # k1_32 = PHI <k1_56(12), k1_58(15)>
  _57 = k1_32 > _55;
  if (_57 != 0)
    goto <bb 16>; [0.00%]
  else
    goto <bb 14>; [0.00%]
;;    succ:       16
;;                14

;;   basic block 14, loop depth 2
;;    pred:       13
  _8 = *string_48(D)[k1_32]{lb: 1 sz: 1};
  if (_8 != 32)
    goto <bb 16>; [0.00%]
  else
    goto <bb 15>; [0.00%]
;;    succ:       16
;;                15

;;   basic block 15, loop depth 2
;;    pred:       14
  k1_58 = k1_32 + 1;
  goto <bb 13>; [0.00%]
;;    succ:       13

;;   basic block 16, loop depth 1
;;    pred:       13
;;                14
  nsdel_59 = k1_32 - k0_31;
  _9 = *ns_43(D);
  _60 = _9 - nsdel_59;
  _61 = *ns_43(D);
  _10 = _61 - k1_32;
  _11 = _10 + 1;
  _62 = MAX_EXPR <_11, 0>;
  _12 = _61 - k1_32;
  _13 = _12 + 1;
  _63 = MAX_EXPR <_13, 0>;
  _14 = _60 - k0_31;
  _15 = _14 + 1;
  _64 = MAX_EXPR <_15, 0>;
  if (_64 != 0)
    goto <bb 17>; [0.00%]
  else
    goto <bb 19>; [0.00%]
;;    succ:       17
;;                19

;;   basic block 17, loop depth 1
;;    pred:       16
  _16 = (unsigned long) _64;
  _17 = (unsigned long) _63;
  _18 = MIN_EXPR <_16, _17>;
  _19 = &*string_48(D)[k1_32]{lb: 1 sz: 1};
  _20 = &*string_48(D)[k0_31]{lb: 1 sz: 1};
  __builtin_memmove (_20, _19, _18);
  _21 = (unsigned long) _63;
  _22 = (unsigned long) _64;
  if (_21 < _22)
    goto <bb 18>; [0.00%]
  else
    goto <bb 19>; [0.00%]
;;    succ:       18
;;                19

;;   basic block 18, loop depth 1
;;    pred:       17
  _23 = (unsigned long) _64;
  _24 = (unsigned long) _63;
  _25 = _23 - _24;
  _26 = &*string_48(D)[k0_31]{lb: 1 sz: 1};
  _27 = (sizetype) _63;
  _28 = _26 + _27;
  __builtin_memset (_28, 32, _25);
;;    succ:       19

;;   basic block 19, loop depth 1
;;    pred:       16
;;                18
;;                17
  _29 = *ns_43(D);
  _30 = _29 - nsdel_59;
  *ns_43(D) = _30;
  goto <bb 7>; [0.00%]
;;    succ:       7

;;   basic block 20, loop depth 0
;;    pred:       6
;;                11
<L27> [0.00%]:
  return;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_1 - 1 )
Partition 2 (_2 - 2 )
Partition 3 (_3 - 3 )
Partition 4 (_4 - 4 )
Partition 5 (_5 - 5 )
Partition 6 (_6 - 6 )
Partition 7 (_7 - 7 )
Partition 8 (_8 - 8 )
Partition 9 (_9 - 9 )
Partition 10 (_10 - 10 )
Partition 11 (_11 - 11 )
Partition 12 (_12 - 12 )
Partition 13 (_13 - 13 )
Partition 14 (_14 - 14 )
Partition 15 (_15 - 15 )
Partition 16 (_16 - 16 )
Partition 17 (_17 - 17 )
Partition 18 (_18 - 18 )
Partition 19 (_19 - 19 )
Partition 20 (_20 - 20 )
Partition 21 (_21 - 21 )
Partition 22 (_22 - 22 )
Partition 23 (_23 - 23 )
Partition 24 (_24 - 24 )
Partition 25 (_25 - 25 )
Partition 26 (_26 - 26 )
Partition 27 (_27 - 27 )
Partition 28 (_28 - 28 )
Partition 29 (_29 - 29 )
Partition 30 (_30 - 30 )
Partition 31 (k0_31 - 31 )
Partition 32 (k1_32 - 32 )
Partition 37 (_string_37(D) - 37 )
Partition 38 (_38 - 38 )
Partition 39 (_39 - 39 )
Partition 40 (n_40 - 40 )
Partition 41 (_41 - 41 )
Partition 43 (ns_43(D) - 43 )
Partition 45 (_45 - 45 )
Partition 46 (_46 - 46 )
Partition 47 (_47 - 47 )
Partition 48 (string_48(D) - 48 )
Partition 50 (_50 - 50 )
Partition 51 (k0_51 - 51 )
Partition 52 (_52 - 52 )
Partition 53 (k0_53 - 53 )
Partition 54 (_54 - 54 )
Partition 55 (_55 - 55 )
Partition 56 (k1_56 - 56 )
Partition 57 (_57 - 57 )
Partition 58 (k1_58 - 58 )
Partition 59 (nsdel_59 - 59 )
Partition 60 (_60 - 60 )
Partition 61 (_61 - 61 )
Partition 62 (_62 - 62 )
Partition 63 (_63 - 63 )
Partition 64 (_64 - 64 )


Partition map 

Partition 0 (k0_31 - 31 )
Partition 1 (k1_32 - 32 )
Partition 2 (_string_37(D) - 37 )
Partition 3 (ns_43(D) - 43 )
Partition 4 (string_48(D) - 48 )
Partition 5 (k0_51 - 51 )
Partition 6 (k0_53 - 53 )
Partition 7 (k1_56 - 56 )
Partition 8 (k1_58 - 58 )


Conflict graph:

After sorting:
Sorted Coalesce list:
(2147483646, 0) k0_31 <-> k0_51
(2147483646, 0) k0_31 <-> k0_53
(2147483646, 0) k1_32 <-> k1_56
(2147483646, 0) k1_32 <-> k1_58

Partition map 

Partition 0 (k0_31 - 31 )
Partition 1 (k1_32 - 32 )
Partition 2 (_string_37(D) - 37 )
Partition 3 (ns_43(D) - 43 )
Partition 4 (string_48(D) - 48 )
Partition 5 (k0_51 - 51 )
Partition 6 (k0_53 - 53 )
Partition 7 (k1_56 - 56 )
Partition 8 (k1_58 - 58 )

Coalesce list: (31)k0_31 & (51)k0_51 [map: 0, 5] : Success -> 0
Coalesce list: (31)k0_31 & (53)k0_53 [map: 0, 6] : Success -> 0
Coalesce list: (32)k1_32 & (56)k1_56 [map: 1, 7] : Success -> 1
Coalesce list: (32)k1_32 & (58)k1_58 [map: 1, 8] : Success -> 1
Coalesce list: (32)k1_32 & (58)k1_32: Already Coalesced.
Coalesce list: (32)k1_32 & (56)k1_32: Already Coalesced.
Coalesce list: (31)k0_31 & (53)k0_31: Already Coalesced.
Coalesce list: (31)k0_31 & (51)k0_31: Already Coalesced.
After Coalescing:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (_2 - 2 )
Partition 2 (_3 - 3 )
Partition 3 (_4 - 4 )
Partition 4 (_5 - 5 )
Partition 5 (_6 - 6 )
Partition 6 (_7 - 7 )
Partition 7 (_8 - 8 )
Partition 8 (_9 - 9 )
Partition 9 (_10 - 10 )
Partition 10 (_11 - 11 )
Partition 11 (_12 - 12 )
Partition 12 (_13 - 13 )
Partition 13 (_14 - 14 )
Partition 14 (_15 - 15 )
Partition 15 (_16 - 16 )
Partition 16 (_17 - 17 )
Partition 17 (_18 - 18 )
Partition 18 (_19 - 19 )
Partition 19 (_20 - 20 )
Partition 20 (_21 - 21 )
Partition 21 (_22 - 22 )
Partition 22 (_23 - 23 )
Partition 23 (_24 - 24 )
Partition 24 (_25 - 25 )
Partition 25 (_26 - 26 )
Partition 26 (_27 - 27 )
Partition 27 (_28 - 28 )
Partition 28 (_29 - 29 )
Partition 29 (_30 - 30 )
Partition 30 (k0_31 - 31 51 53 )
Partition 31 (k1_32 - 32 56 58 )
Partition 32 (_string_37(D) - 37 )
Partition 33 (_38 - 38 )
Partition 34 (_39 - 39 )
Partition 35 (n_40 - 40 )
Partition 36 (_41 - 41 )
Partition 37 (ns_43(D) - 43 )
Partition 38 (_45 - 45 )
Partition 39 (_46 - 46 )
Partition 40 (_47 - 47 )
Partition 41 (string_48(D) - 48 )
Partition 42 (_50 - 50 )
Partition 43 (_52 - 52 )
Partition 44 (_54 - 54 )
Partition 45 (_55 - 55 )
Partition 46 (_57 - 57 )
Partition 47 (nsdel_59 - 59 )
Partition 48 (_60 - 60 )
Partition 49 (_61 - 61 )
Partition 50 (_62 - 62 )
Partition 51 (_63 - 63 )
Partition 52 (_64 - 64 )

strip (character(kind=1)[1:_string] & restrict string, integer(kind=4) & restrict ns, integer(kind=4) _string)
{
  integer(kind=4) D.3756;
  integer(kind=4) D.3755;
  integer(kind=4) D.3754;
  integer(kind=4) D.3753;
  integer(kind=4) D.3752;
  logical(kind=1) D.3749;
  integer(kind=4) D.3746;
  integer(kind=4) D.3745;
  logical(kind=1) D.3742;
  integer(kind=4) D.3739;
  integer(kind=4) D.3737;
  integer(kind=4) D.3736;
  logical(kind=1) D.3734;
  integer(kind=4) D.3731;
  sizetype D.3758;
  bitsizetype D.3757;
  integer(kind=4) nsdel;
  integer(kind=4) n;
  integer(kind=4) k1;
  integer(kind=4) k0;
  sizetype _1;
  bitsizetype _2;
  integer(kind=4) _3;
  character(kind=1) _4;
  integer(kind=4) _5;
  integer(kind=4) _6;
  character(kind=1) _7;
  character(kind=1) _8;
  integer(kind=4) _9;
  integer(kind=4) _10;
  integer(kind=4) _11;
  integer(kind=4) _12;
  integer(kind=4) _13;
  integer(kind=4) _14;
  integer(kind=4) _15;
  unsigned long _16;
  unsigned long _17;
  unsigned long _18;
  character(kind=1) * _19;
  character(kind=1) * _20;
  unsigned long _21;
  unsigned long _22;
  unsigned long _23;
  unsigned long _24;
  unsigned long _25;
  character(kind=1) * _26;
  sizetype _27;
  void * _28;
  integer(kind=4) _29;
  integer(kind=4) _30;
  bitsizetype _38;
  sizetype _39;
  integer(kind=4) _41;
  logical(kind=1) _45;
  integer(kind=4) _46;
  integer(kind=4) _47;
  integer(kind=4) _50;
  logical(kind=1) _52;
  integer(kind=4) _54;
  integer(kind=4) _55;
  logical(kind=1) _57;
  integer(kind=4) _60;
  integer(kind=4) _61;
  integer(kind=4) _62;
  integer(kind=4) _63;
  integer(kind=4) _64;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = (sizetype) _string_37(D);
  _2 = (bitsizetype) _1;
  _38 = _2 * 8;
  _39 = (sizetype) _string_37(D);
  n_40 = _string_37(D);
  _41 = n_40;
  *ns_43(D) = _41;
;;    succ:       3

;;   basic block 3, loop depth 1
;;    pred:       2
;;                5
  _3 = *ns_43(D);
  _45 = _3 <= 0;
  if (_45 != 0)
    goto <bb 6>; [0.00%]
  else
    goto <bb 4>; [0.00%]
;;    succ:       6
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  _46 = *ns_43(D);
  _47 = *ns_43(D);
  _4 = *string_48(D)[_46]{lb: 1 sz: 1};
  if (_4 != 32)
    goto <bb 7>; [0.00%]
  else
    goto <bb 5>; [0.00%]
;;    succ:       7
;;                5

;;   basic block 5, loop depth 1
;;    pred:       4
  _5 = *ns_43(D);
  _6 = _5 + -1;
  *ns_43(D) = _6;
  goto <bb 3>; [0.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       3
  *ns_43(D) = 0;
  goto <bb 20> (<L27>); [0.00%]
;;    succ:       20

;;   basic block 7, loop depth 1
;;    pred:       4
;;                19
  _50 = *ns_43(D);
  k0_51 = 1;
;;    succ:       8

;;   basic block 8, loop depth 2
;;    pred:       7
;;                10
  # k0_31 = PHI <k0_51(7), k0_53(10)>
  _52 = k0_31 > _50;
  if (_52 != 0)
    goto <bb 11>; [0.00%]
  else
    goto <bb 9>; [0.00%]
;;    succ:       11
;;                9

;;   basic block 9, loop depth 2
;;    pred:       8
  _7 = *string_48(D)[k0_31]{lb: 1 sz: 1};
  if (_7 == 32)
    goto <bb 12>; [0.00%]
  else
    goto <bb 10>; [0.00%]
;;    succ:       12
;;                10

;;   basic block 10, loop depth 2
;;    pred:       9
  k0_53 = k0_31 + 1;
  goto <bb 8>; [0.00%]
;;    succ:       8

;;   basic block 11, loop depth 0
;;    pred:       8
  goto <bb 20> (<L27>); [0.00%]
;;    succ:       20

;;   basic block 12, loop depth 1
;;    pred:       9
  _54 = k0_31 + 1;
  _55 = *ns_43(D);
  k1_56 = _54;
;;    succ:       13

;;   basic block 13, loop depth 2
;;    pred:       12
;;                15
  # k1_32 = PHI <k1_56(12), k1_58(15)>
  _57 = k1_32 > _55;
  if (_57 != 0)
    goto <bb 16>; [0.00%]
  else
    goto <bb 14>; [0.00%]
;;    succ:       16
;;                14

;;   basic block 14, loop depth 2
;;    pred:       13
  _8 = *string_48(D)[k1_32]{lb: 1 sz: 1};
  if (_8 != 32)
    goto <bb 16>; [0.00%]
  else
    goto <bb 15>; [0.00%]
;;    succ:       16
;;                15

;;   basic block 15, loop depth 2
;;    pred:       14
  k1_58 = k1_32 + 1;
  goto <bb 13>; [0.00%]
;;    succ:       13

;;   basic block 16, loop depth 1
;;    pred:       13
;;                14
  nsdel_59 = k1_32 - k0_31;
  _9 = *ns_43(D);
  _60 = _9 - nsdel_59;
  _61 = *ns_43(D);
  _10 = _61 - k1_32;
  _11 = _10 + 1;
  _62 = MAX_EXPR <_11, 0>;
  _12 = _61 - k1_32;
  _13 = _12 + 1;
  _63 = MAX_EXPR <_13, 0>;
  _14 = _60 - k0_31;
  _15 = _14 + 1;
  _64 = MAX_EXPR <_15, 0>;
  if (_64 != 0)
    goto <bb 17>; [0.00%]
  else
    goto <bb 19>; [0.00%]
;;    succ:       17
;;                19

;;   basic block 17, loop depth 1
;;    pred:       16
  _16 = (unsigned long) _64;
  _17 = (unsigned long) _63;
  _18 = MIN_EXPR <_16, _17>;
  _19 = &*string_48(D)[k1_32]{lb: 1 sz: 1};
  _20 = &*string_48(D)[k0_31]{lb: 1 sz: 1};
  __builtin_memmove (_20, _19, _18);
  _21 = (unsigned long) _63;
  _22 = (unsigned long) _64;
  if (_21 < _22)
    goto <bb 18>; [0.00%]
  else
    goto <bb 19>; [0.00%]
;;    succ:       18
;;                19

;;   basic block 18, loop depth 1
;;    pred:       17
  _23 = (unsigned long) _64;
  _24 = (unsigned long) _63;
  _25 = _23 - _24;
  _26 = &*string_48(D)[k0_31]{lb: 1 sz: 1};
  _27 = (sizetype) _63;
  _28 = _26 + _27;
  __builtin_memset (_28, 32, _25);
;;    succ:       19

;;   basic block 19, loop depth 1
;;    pred:       16
;;                18
;;                17
  _29 = *ns_43(D);
  _30 = _29 - nsdel_59;
  *ns_43(D) = _30;
  goto <bb 7>; [0.00%]
;;    succ:       7

;;   basic block 20, loop depth 0
;;    pred:       6
;;                11
<L27> [0.00%]:
  return;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; _1 = (sizetype) _string_37(D);

(insn 8 7 9 (set (reg:SI 133)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [1 _string+0 S4 A32])) "../src/io.f":431 -1
     (nil))

(insn 9 8 0 (set (reg:DI 87 [ _1 ])
        (sign_extend:DI (reg:SI 133))) "../src/io.f":431 -1
     (nil))

;; _2 = (bitsizetype) _1;

(insn 10 9 11 (set (subreg:DI (reg:TI 88 [ _2 ]) 0)
        (reg:DI 87 [ _1 ])) "../src/io.f":431 -1
     (nil))

(insn 11 10 0 (set (subreg:DI (reg:TI 88 [ _2 ]) 8)
        (const_int 0 [0])) "../src/io.f":431 -1
     (nil))

;; _38 = _2 * 8;

(insn 12 11 0 (parallel [
            (set (reg:TI 117 [ _38 ])
                (ashift:TI (reg:TI 88 [ _2 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":431 -1
     (nil))

;; _39 = (sizetype) _string_37(D);

(insn 13 12 14 (set (reg:SI 134)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [1 _string+0 S4 A32])) "../src/io.f":431 -1
     (nil))

(insn 14 13 0 (set (reg:DI 118 [ _39 ])
        (sign_extend:DI (reg:SI 134))) "../src/io.f":431 -1
     (nil))

;; n_40 = _string_37(D);

(insn 15 14 16 (set (reg:SI 135)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [1 _string+0 S4 A32])) "../src/io.f":399 -1
     (nil))

(insn 16 15 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 n+0 S4 A32])
        (reg:SI 135)) "../src/io.f":399 -1
     (nil))

;; _41 = n_40;

(insn 17 16 0 (set (reg:SI 119 [ _41 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 n+0 S4 A32])) "../src/io.f":402 -1
     (nil))

;; *ns_43(D) = _41;

(insn 18 17 19 (set (reg/f:DI 136)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [11 ns+0 S8 A64])) "../src/io.f":402 -1
     (nil))

(insn 19 18 0 (set (mem:SI (reg/f:DI 136) [1 *ns_43(D)+0 S4 A32])
        (reg:SI 119 [ _41 ])) "../src/io.f":402 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; _3 = *ns_43(D);

(insn 21 20 22 (set (reg/f:DI 137)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [11 ns+0 S8 A64])) "../src/io.f":402 -1
     (nil))

(insn 22 21 0 (set (reg:SI 89 [ _3 ])
        (mem:SI (reg/f:DI 137) [1 *ns_43(D)+0 S4 A32])) "../src/io.f":402 -1
     (nil))

;; _45 = _3 <= 0;

(insn 23 22 24 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 89 [ _3 ])
            (const_int 0 [0]))) "../src/io.f":402 -1
     (nil))

(insn 24 23 0 (set (reg:QI 120 [ _45 ])
        (le:QI (reg:CCNO 17 flags)
            (const_int 0 [0]))) "../src/io.f":402 -1
     (nil))

;; if (_45 != 0)

(insn 25 24 26 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 120 [ _45 ])
            (const_int 0 [0]))) "../src/io.f":402 -1
     (nil))

(jump_insn 26 25 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "../src/io.f":402 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; _46 = *ns_43(D);

(insn 28 27 29 (set (reg/f:DI 138)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [11 ns+0 S8 A64])) "../src/io.f":403 -1
     (nil))

(insn 29 28 0 (set (reg:SI 121 [ _46 ])
        (mem:SI (reg/f:DI 138) [1 *ns_43(D)+0 S4 A32])) "../src/io.f":403 -1
     (nil))

;; _47 = *ns_43(D);

(insn 30 29 31 (set (reg/f:DI 139)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [11 ns+0 S8 A64])) "../src/io.f":403 -1
     (nil))

(insn 31 30 0 (set (reg:SI 122 [ _47 ])
        (mem:SI (reg/f:DI 139) [1 *ns_43(D)+0 S4 A32])) "../src/io.f":403 -1
     (nil))
Applying pattern match.pd:1824, generic-match.c:9571
Applying pattern match.pd:836, generic-match.c:64
Applying pattern match.pd:873, generic-match.c:13046
Applying pattern match.pd:836, generic-match.c:64
Applying pattern match.pd:873, generic-match.c:13046
Applying pattern match.pd:148, generic-match.c:6836
Applying pattern match.pd:84, generic-match.c:11356
Applying pattern match.pd:836, generic-match.c:64
Applying pattern match.pd:873, generic-match.c:13046
Applying pattern match.pd:148, generic-match.c:6836
Applying pattern match.pd:84, generic-match.c:11356
Applying pattern match.pd:836, generic-match.c:64
Applying pattern match.pd:873, generic-match.c:13046
Applying pattern match.pd:148, generic-match.c:6836
Applying pattern match.pd:84, generic-match.c:11356

;; _4 = *string_48(D)[_46]{lb: 1 sz: 1};

(insn 32 31 33 (set (reg/f:DI 140)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [10 string+0 S8 A64])) "../src/io.f":403 -1
     (nil))

(insn 33 32 34 (parallel [
            (set (reg:SI 141)
                (plus:SI (reg:SI 121 [ _46 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":403 -1
     (nil))

(insn 34 33 35 (set (reg:DI 142)
        (sign_extend:DI (reg:SI 141))) "../src/io.f":403 -1
     (nil))

(insn 35 34 0 (set (reg:QI 90 [ _4 ])
        (mem:QI (plus:DI (reg/f:DI 140)
                (reg:DI 142)) [2 *string_48(D) S1 A8])) "../src/io.f":403 -1
     (nil))

;; if (_4 != 32)

(insn 36 35 37 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 90 [ _4 ])
            (const_int 32 [0x20]))) "../src/io.f":403 -1
     (nil))

(jump_insn 37 36 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "../src/io.f":403 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; _5 = *ns_43(D);

(insn 39 38 40 (set (reg/f:DI 143)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [11 ns+0 S8 A64])) "../src/io.f":402 -1
     (nil))

(insn 40 39 0 (set (reg:SI 91 [ _5 ])
        (mem:SI (reg/f:DI 143) [1 *ns_43(D)+0 S4 A32])) "../src/io.f":402 -1
     (nil))

;; _6 = _5 + -1;

(insn 41 40 0 (parallel [
            (set (reg:SI 92 [ _6 ])
                (plus:SI (reg:SI 91 [ _5 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":402 -1
     (nil))

;; *ns_43(D) = _6;

(insn 42 41 43 (set (reg/f:DI 144)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [11 ns+0 S8 A64])) "../src/io.f":402 -1
     (nil))

(insn 43 42 0 (set (mem:SI (reg/f:DI 144) [1 *ns_43(D)+0 S4 A32])
        (reg:SI 92 [ _6 ])) "../src/io.f":402 -1
     (nil))

;; Generating RTL for gimple basic block 6

;; 

(code_label 47 46 48 119 (nil) [0 uses])

(note 48 47 0 NOTE_INSN_BASIC_BLOCK)

;; *ns_43(D) = 0;

(insn 49 48 50 (set (reg/f:DI 145)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [11 ns+0 S8 A64])) "../src/io.f":405 -1
     (nil))

(insn 50 49 0 (set (mem:SI (reg/f:DI 145) [1 *ns_43(D)+0 S4 A32])
        (const_int 0 [0])) "../src/io.f":405 -1
     (nil))

;; Generating RTL for gimple basic block 7

;; 

(code_label 53 52 54 120 (nil) [0 uses])

(note 54 53 0 NOTE_INSN_BASIC_BLOCK)

;; _50 = *ns_43(D);

(insn 55 54 56 (set (reg/f:DI 146)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [11 ns+0 S8 A64])) "../src/io.f":412 -1
     (nil))

(insn 56 55 0 (set (reg:SI 123 [ _50 ])
        (mem:SI (reg/f:DI 146) [1 *ns_43(D)+0 S4 A32])) "../src/io.f":412 -1
     (nil))

;; k0_51 = 1;

(insn 57 56 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 k0+0 S4 A32])
        (const_int 1 [0x1])) "../src/io.f":412 -1
     (nil))

;; Generating RTL for gimple basic block 8

;; _52 = k0_31 > _50;

(insn 59 58 60 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 k0+0 S4 A32])
            (reg:SI 123 [ _50 ]))) "../src/io.f":412 -1
     (nil))

(insn 60 59 0 (set (reg:QI 124 [ _52 ])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "../src/io.f":412 -1
     (nil))

;; if (_52 != 0)

(insn 61 60 62 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 124 [ _52 ])
            (const_int 0 [0]))) "../src/io.f":412 -1
     (nil))

(jump_insn 62 61 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "../src/io.f":412 -1
     (nil))

;; Generating RTL for gimple basic block 9
Applying pattern match.pd:1824, generic-match.c:9571
Applying pattern match.pd:836, generic-match.c:64
Applying pattern match.pd:873, generic-match.c:13046
Applying pattern match.pd:836, generic-match.c:64
Applying pattern match.pd:873, generic-match.c:13046
Applying pattern match.pd:148, generic-match.c:6836
Applying pattern match.pd:84, generic-match.c:11356
Applying pattern match.pd:836, generic-match.c:64
Applying pattern match.pd:873, generic-match.c:13046
Applying pattern match.pd:148, generic-match.c:6836
Applying pattern match.pd:84, generic-match.c:11356
Applying pattern match.pd:836, generic-match.c:64
Applying pattern match.pd:873, generic-match.c:13046
Applying pattern match.pd:148, generic-match.c:6836
Applying pattern match.pd:84, generic-match.c:11356

;; _7 = *string_48(D)[k0_31]{lb: 1 sz: 1};

(insn 64 63 65 (set (reg/f:DI 147)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [10 string+0 S8 A64])) "../src/io.f":413 -1
     (nil))

(insn 65 64 66 (set (reg:SI 149)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 k0+0 S4 A32])) "../src/io.f":413 -1
     (nil))

(insn 66 65 67 (parallel [
            (set (reg:SI 148)
                (plus:SI (reg:SI 149)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":413 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 k0+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))

(insn 67 66 68 (set (reg:DI 150)
        (sign_extend:DI (reg:SI 148))) "../src/io.f":413 -1
     (nil))

(insn 68 67 0 (set (reg:QI 93 [ _7 ])
        (mem:QI (plus:DI (reg/f:DI 147)
                (reg:DI 150)) [2 *string_48(D) S1 A8])) "../src/io.f":413 -1
     (nil))

;; if (_7 == 32)

(insn 69 68 70 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 93 [ _7 ])
            (const_int 32 [0x20]))) "../src/io.f":413 -1
     (nil))

(jump_insn 70 69 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "../src/io.f":413 -1
     (nil))

;; Generating RTL for gimple basic block 10

;; k0_53 = k0_31 + 1;

(insn 72 71 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [1 k0+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [1 k0+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":412 -1
     (nil))

;; Generating RTL for gimple basic block 11

;; 

(code_label 76 75 77 123 (nil) [0 uses])

(note 77 76 0 NOTE_INSN_BASIC_BLOCK)

;; Generating RTL for gimple basic block 12

;; 

(code_label 80 79 81 124 (nil) [0 uses])

(note 81 80 0 NOTE_INSN_BASIC_BLOCK)

;; _54 = k0_31 + 1;

(insn 82 81 83 (set (reg:SI 151)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 k0+0 S4 A32])) "../src/io.f":419 -1
     (nil))

(insn 83 82 0 (parallel [
            (set (reg:SI 125 [ _54 ])
                (plus:SI (reg:SI 151)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":419 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 k0+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))

;; _55 = *ns_43(D);

(insn 84 83 85 (set (reg/f:DI 152)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [11 ns+0 S8 A64])) "../src/io.f":419 -1
     (nil))

(insn 85 84 0 (set (reg:SI 126 [ _55 ])
        (mem:SI (reg/f:DI 152) [1 *ns_43(D)+0 S4 A32])) "../src/io.f":419 -1
     (nil))

;; k1_56 = _54;

(insn 86 85 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 k1+0 S4 A32])
        (reg:SI 125 [ _54 ])) "../src/io.f":419 -1
     (nil))

;; Generating RTL for gimple basic block 13

;; _57 = k1_32 > _55;

(insn 88 87 89 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [1 k1+0 S4 A32])
            (reg:SI 126 [ _55 ]))) "../src/io.f":419 -1
     (nil))

(insn 89 88 0 (set (reg:QI 127 [ _57 ])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "../src/io.f":419 -1
     (nil))

;; if (_57 != 0)

(insn 90 89 91 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 127 [ _57 ])
            (const_int 0 [0]))) "../src/io.f":419 -1
     (nil))

(jump_insn 91 90 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "../src/io.f":419 -1
     (nil))

;; Generating RTL for gimple basic block 14
Applying pattern match.pd:1824, generic-match.c:9571
Applying pattern match.pd:836, generic-match.c:64
Applying pattern match.pd:873, generic-match.c:13046
Applying pattern match.pd:836, generic-match.c:64
Applying pattern match.pd:873, generic-match.c:13046
Applying pattern match.pd:148, generic-match.c:6836
Applying pattern match.pd:84, generic-match.c:11356
Applying pattern match.pd:836, generic-match.c:64
Applying pattern match.pd:873, generic-match.c:13046
Applying pattern match.pd:148, generic-match.c:6836
Applying pattern match.pd:84, generic-match.c:11356
Applying pattern match.pd:836, generic-match.c:64
Applying pattern match.pd:873, generic-match.c:13046
Applying pattern match.pd:148, generic-match.c:6836
Applying pattern match.pd:84, generic-match.c:11356

;; _8 = *string_48(D)[k1_32]{lb: 1 sz: 1};

(insn 93 92 94 (set (reg/f:DI 153)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [10 string+0 S8 A64])) "../src/io.f":420 -1
     (nil))

(insn 94 93 95 (set (reg:SI 155)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 k1+0 S4 A32])) "../src/io.f":420 -1
     (nil))

(insn 95 94 96 (parallel [
            (set (reg:SI 154)
                (plus:SI (reg:SI 155)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":420 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [1 k1+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))

(insn 96 95 97 (set (reg:DI 156)
        (sign_extend:DI (reg:SI 154))) "../src/io.f":420 -1
     (nil))

(insn 97 96 0 (set (reg:QI 94 [ _8 ])
        (mem:QI (plus:DI (reg/f:DI 153)
                (reg:DI 156)) [2 *string_48(D) S1 A8])) "../src/io.f":420 -1
     (nil))

;; if (_8 != 32)

(insn 98 97 99 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 94 [ _8 ])
            (const_int 32 [0x20]))) "../src/io.f":420 -1
     (nil))

(jump_insn 99 98 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "../src/io.f":420 -1
     (nil))

;; Generating RTL for gimple basic block 15

;; k1_58 = k1_32 + 1;

(insn 101 100 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [1 k1+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [1 k1+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":419 -1
     (nil))

;; Generating RTL for gimple basic block 16

;; 

(code_label 105 104 106 126 (nil) [0 uses])

(note 106 105 0 NOTE_INSN_BASIC_BLOCK)

;; nsdel_59 = k1_32 - k0_31;

(insn 110 106 111 (set (reg:SI 160)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 k1+0 S4 A32])) "../src/io.f":425 -1
     (nil))

(insn 111 110 112 (parallel [
            (set (reg:SI 159)
                (minus:SI (reg:SI 160)
                    (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [1 k0+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":425 -1
     (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [1 k1+0 S4 A32])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 k0+0 S4 A32]))
        (nil)))

(insn 112 111 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [1 nsdel+0 S4 A32])
        (reg:SI 159)) "../src/io.f":425 -1
     (nil))

;; _9 = *ns_43(D);

(insn 113 112 114 (set (reg/f:DI 161)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [11 ns+0 S8 A64])) "../src/io.f":426 -1
     (nil))

(insn 114 113 0 (set (reg:SI 95 [ _9 ])
        (mem:SI (reg/f:DI 161) [1 *ns_43(D)+0 S4 A32])) "../src/io.f":426 -1
     (nil))

;; _60 = _9 - nsdel_59;

(insn 115 114 0 (parallel [
            (set (reg:SI 128 [ _60 ])
                (minus:SI (reg:SI 95 [ _9 ])
                    (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -16 [0xfffffffffffffff0])) [1 nsdel+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":426 -1
     (nil))

;; _61 = *ns_43(D);

(insn 116 115 117 (set (reg/f:DI 162)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [11 ns+0 S8 A64])) "../src/io.f":426 -1
     (nil))

(insn 117 116 0 (set (reg:SI 129 [ _61 ])
        (mem:SI (reg/f:DI 162) [1 *ns_43(D)+0 S4 A32])) "../src/io.f":426 -1
     (nil))

;; _10 = _61 - k1_32;

(insn 118 117 0 (parallel [
            (set (reg:SI 96 [ _10 ])
                (minus:SI (reg:SI 129 [ _61 ])
                    (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [1 k1+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":426 -1
     (nil))

;; _11 = _10 + 1;

(insn 119 118 0 (parallel [
            (set (reg:SI 97 [ _11 ])
                (plus:SI (reg:SI 96 [ _10 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":426 -1
     (nil))

;; _62 = MAX_EXPR <_11, 0>;

(insn 121 119 120 (set (reg:SI 163)
        (const_int 0 [0])) "../src/io.f":426 -1
     (nil))

(insn 120 121 122 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 97 [ _11 ])
            (const_int 0 [0]))) "../src/io.f":426 -1
     (nil))

(insn 122 120 0 (set (reg:SI 130 [ _62 ])
        (if_then_else:SI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:SI 97 [ _11 ])
            (reg:SI 163))) "../src/io.f":426 -1
     (nil))

;; _12 = _61 - k1_32;

(insn 123 122 0 (parallel [
            (set (reg:SI 98 [ _12 ])
                (minus:SI (reg:SI 129 [ _61 ])
                    (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [1 k1+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":426 -1
     (nil))

;; _13 = _12 + 1;

(insn 124 123 0 (parallel [
            (set (reg:SI 99 [ _13 ])
                (plus:SI (reg:SI 98 [ _12 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":426 -1
     (nil))

;; _63 = MAX_EXPR <_13, 0>;

(insn 126 124 125 (set (reg:SI 164)
        (const_int 0 [0])) "../src/io.f":426 -1
     (nil))

(insn 125 126 127 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 99 [ _13 ])
            (const_int 0 [0]))) "../src/io.f":426 -1
     (nil))

(insn 127 125 0 (set (reg:SI 131 [ _63 ])
        (if_then_else:SI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:SI 99 [ _13 ])
            (reg:SI 164))) "../src/io.f":426 -1
     (nil))

;; _14 = _60 - k0_31;

(insn 128 127 0 (parallel [
            (set (reg:SI 100 [ _14 ])
                (minus:SI (reg:SI 128 [ _60 ])
                    (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [1 k0+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":426 -1
     (nil))

;; _15 = _14 + 1;

(insn 129 128 0 (parallel [
            (set (reg:SI 101 [ _15 ])
                (plus:SI (reg:SI 100 [ _14 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":426 -1
     (nil))

;; _64 = MAX_EXPR <_15, 0>;

(insn 131 129 130 (set (reg:SI 165)
        (const_int 0 [0])) "../src/io.f":426 -1
     (nil))

(insn 130 131 132 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 101 [ _15 ])
            (const_int 0 [0]))) "../src/io.f":426 -1
     (nil))

(insn 132 130 0 (set (reg:SI 132 [ _64 ])
        (if_then_else:SI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:SI 101 [ _15 ])
            (reg:SI 165))) "../src/io.f":426 -1
     (nil))

;; if (_64 != 0)

(insn 133 132 134 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 132 [ _64 ])
            (const_int 0 [0]))) "../src/io.f":426 -1
     (nil))

(jump_insn 134 133 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "../src/io.f":426 -1
     (nil))

;; Generating RTL for gimple basic block 17

;; _16 = (unsigned long) _64;

(insn 136 135 0 (set (reg:DI 102 [ _16 ])
        (sign_extend:DI (reg:SI 132 [ _64 ]))) "../src/io.f":426 -1
     (nil))

;; _17 = (unsigned long) _63;

(insn 137 136 0 (set (reg:DI 103 [ _17 ])
        (sign_extend:DI (reg:SI 131 [ _63 ]))) "../src/io.f":426 -1
     (nil))

;; _18 = MIN_EXPR <_16, _17>;

(insn 138 137 139 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 102 [ _16 ])
            (reg:DI 103 [ _17 ]))) "../src/io.f":426 -1
     (nil))

(insn 139 138 0 (set (reg:DI 104 [ _18 ])
        (if_then_else:DI (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (reg:DI 102 [ _16 ])
            (reg:DI 103 [ _17 ]))) "../src/io.f":426 -1
     (nil))
Applying pattern match.pd:836, generic-match.c:64
Applying pattern match.pd:873, generic-match.c:13046
Applying pattern match.pd:148, generic-match.c:6836
Applying pattern match.pd:84, generic-match.c:11356

;; _19 = &*string_48(D)[k1_32]{lb: 1 sz: 1};

(insn 140 139 141 (set (reg:SI 167)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 k1+0 S4 A32])) "../src/io.f":426 -1
     (nil))

(insn 141 140 142 (parallel [
            (set (reg:SI 166)
                (plus:SI (reg:SI 167)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":426 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [1 k1+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))

(insn 142 141 143 (set (reg:DI 168)
        (sign_extend:DI (reg:SI 166))) "../src/io.f":426 -1
     (nil))

(insn 143 142 144 (set (reg/f:DI 169)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [10 string+0 S8 A64])) "../src/io.f":426 -1
     (nil))

(insn 144 143 0 (parallel [
            (set (reg/f:DI 105 [ _19 ])
                (plus:DI (reg:DI 168)
                    (reg/f:DI 169)))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":426 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [10 string+0 S8 A64])
            (reg:DI 168))
        (nil)))
Applying pattern match.pd:836, generic-match.c:64
Applying pattern match.pd:873, generic-match.c:13046
Applying pattern match.pd:148, generic-match.c:6836
Applying pattern match.pd:84, generic-match.c:11356

;; _20 = &*string_48(D)[k0_31]{lb: 1 sz: 1};

(insn 145 144 146 (set (reg:SI 171)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 k0+0 S4 A32])) "../src/io.f":426 -1
     (nil))

(insn 146 145 147 (parallel [
            (set (reg:SI 170)
                (plus:SI (reg:SI 171)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":426 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 k0+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))

(insn 147 146 148 (set (reg:DI 172)
        (sign_extend:DI (reg:SI 170))) "../src/io.f":426 -1
     (nil))

(insn 148 147 149 (set (reg/f:DI 173)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [10 string+0 S8 A64])) "../src/io.f":426 -1
     (nil))

(insn 149 148 0 (parallel [
            (set (reg/f:DI 106 [ _20 ])
                (plus:DI (reg:DI 172)
                    (reg/f:DI 173)))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":426 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [10 string+0 S8 A64])
            (reg:DI 172))
        (nil)))

;; __builtin_memmove (_20, _19, _18);

(insn 150 149 151 (set (reg:DI 1 dx)
        (reg:DI 104 [ _18 ])) "../src/io.f":426 -1
     (nil))

(insn 151 150 152 (set (reg:DI 4 si)
        (reg/f:DI 105 [ _19 ])) "../src/io.f":426 -1
     (nil))

(insn 152 151 153 (set (reg:DI 5 di)
        (reg/f:DI 106 [ _20 ])) "../src/io.f":426 -1
     (nil))

(call_insn 153 152 0 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memmove") [flags 0x41]  <function_decl 0x14386f400 __builtin_memmove>) [0 __builtin_memmove S1 A8])
            (const_int 0 [0]))) "../src/io.f":426 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))

;; _21 = (unsigned long) _63;

(insn 154 153 0 (set (reg:DI 107 [ _21 ])
        (sign_extend:DI (reg:SI 131 [ _63 ]))) "../src/io.f":426 -1
     (nil))

;; _22 = (unsigned long) _64;

(insn 155 154 0 (set (reg:DI 108 [ _22 ])
        (sign_extend:DI (reg:SI 132 [ _64 ]))) "../src/io.f":426 -1
     (nil))

;; if (_21 < _22)

(insn 156 155 157 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 107 [ _21 ])
            (reg:DI 108 [ _22 ]))) "../src/io.f":426 -1
     (nil))

(jump_insn 157 156 0 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "../src/io.f":426 -1
     (nil))

;; Generating RTL for gimple basic block 18

;; _23 = (unsigned long) _64;

(insn 159 158 0 (set (reg:DI 109 [ _23 ])
        (sign_extend:DI (reg:SI 132 [ _64 ]))) "../src/io.f":426 -1
     (nil))

;; _24 = (unsigned long) _63;

(insn 160 159 0 (set (reg:DI 110 [ _24 ])
        (sign_extend:DI (reg:SI 131 [ _63 ]))) "../src/io.f":426 -1
     (nil))

;; _25 = _23 - _24;

(insn 161 160 0 (parallel [
            (set (reg:DI 111 [ _25 ])
                (minus:DI (reg:DI 109 [ _23 ])
                    (reg:DI 110 [ _24 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":426 -1
     (nil))
Applying pattern match.pd:836, generic-match.c:64
Applying pattern match.pd:873, generic-match.c:13046
Applying pattern match.pd:148, generic-match.c:6836
Applying pattern match.pd:84, generic-match.c:11356

;; _26 = &*string_48(D)[k0_31]{lb: 1 sz: 1};

(insn 162 161 163 (set (reg:SI 175)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 k0+0 S4 A32])) "../src/io.f":426 -1
     (nil))

(insn 163 162 164 (parallel [
            (set (reg:SI 174)
                (plus:SI (reg:SI 175)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":426 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 k0+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))

(insn 164 163 165 (set (reg:DI 176)
        (sign_extend:DI (reg:SI 174))) "../src/io.f":426 -1
     (nil))

(insn 165 164 166 (set (reg/f:DI 177)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [10 string+0 S8 A64])) "../src/io.f":426 -1
     (nil))

(insn 166 165 0 (parallel [
            (set (reg/f:DI 112 [ _26 ])
                (plus:DI (reg:DI 176)
                    (reg/f:DI 177)))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":426 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [10 string+0 S8 A64])
            (reg:DI 176))
        (nil)))

;; _27 = (sizetype) _63;

(insn 167 166 0 (set (reg:DI 113 [ _27 ])
        (sign_extend:DI (reg:SI 131 [ _63 ]))) "../src/io.f":426 -1
     (nil))

;; _28 = _26 + _27;

(insn 168 167 0 (parallel [
            (set (reg/f:DI 114 [ _28 ])
                (plus:DI (reg/f:DI 112 [ _26 ])
                    (reg:DI 113 [ _27 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":426 -1
     (nil))
Applying pattern match.pd:836, generic-match.c:64
Applying pattern match.pd:873, generic-match.c:13046
Applying pattern match.pd:1221, generic-match.c:4912
Applying pattern match.pd:84, generic-match.c:11356
Applying pattern match.pd:1814, generic-match.c:9559
Applying pattern match.pd:148, generic-match.c:6836

;; __builtin_memset (_28, 32, _25);

(insn 169 168 170 (set (reg:DI 1 dx)
        (reg:DI 111 [ _25 ])) "../src/io.f":426 -1
     (nil))

(insn 170 169 171 (set (reg:SI 4 si)
        (const_int 32 [0x20])) "../src/io.f":426 -1
     (nil))

(insn 171 170 172 (set (reg:DI 5 di)
        (reg/f:DI 114 [ _28 ])) "../src/io.f":426 -1
     (nil))

(call_insn 172 171 0 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memset") [flags 0x41]  <function_decl 0x14386f600 __builtin_memset>) [0 __builtin_memset S1 A8])
            (const_int 0 [0]))) "../src/io.f":426 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))

;; Generating RTL for gimple basic block 19

;; 

(code_label 173 172 174 128 (nil) [0 uses])

(note 174 173 0 NOTE_INSN_BASIC_BLOCK)

;; _29 = *ns_43(D);

(insn 175 174 176 (set (reg/f:DI 178)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [11 ns+0 S8 A64])) "../src/io.f":427 -1
     (nil))

(insn 176 175 0 (set (reg:SI 115 [ _29 ])
        (mem:SI (reg/f:DI 178) [1 *ns_43(D)+0 S4 A32])) "../src/io.f":427 -1
     (nil))

;; _30 = _29 - nsdel_59;

(insn 177 176 0 (parallel [
            (set (reg:SI 116 [ _30 ])
                (minus:SI (reg:SI 115 [ _29 ])
                    (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -16 [0xfffffffffffffff0])) [1 nsdel+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":427 -1
     (nil))

;; *ns_43(D) = _30;

(insn 178 177 179 (set (reg/f:DI 179)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [11 ns+0 S8 A64])) "../src/io.f":427 -1
     (nil))

(insn 179 178 0 (set (mem:SI (reg/f:DI 179) [1 *ns_43(D)+0 S4 A32])
        (reg:SI 116 [ _30 ])) "../src/io.f":427 -1
     (nil))

;; Generating RTL for gimple basic block 20

;; <L27> [0.00%]:

(code_label 182 181 183 122 (nil) [0 uses])

(note 183 182 0 NOTE_INSN_BASIC_BLOCK)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Redirecting jump 51 from 21 to 22.
Redirecting jump 78 from 21 to 22.
deleting block 21


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [10 string+0 S8 A64])
        (reg:DI 5 di [ string ])) "../src/io.f":392 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [11 ns+0 S8 A64])
        (reg:DI 4 si [ ns ])) "../src/io.f":392 -1
     (nil))
(insn 4 3 5 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [1 _string+0 S4 A32])
        (reg:SI 1 dx [ _string ])) "../src/io.f":392 -1
     (nil))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg:SI 133)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [1 _string+0 S4 A32])) "../src/io.f":431 -1
     (nil))
(insn 9 8 10 2 (set (reg:DI 87 [ _1 ])
        (sign_extend:DI (reg:SI 133))) "../src/io.f":431 -1
     (nil))
(insn 10 9 11 2 (set (subreg:DI (reg:TI 88 [ _2 ]) 0)
        (reg:DI 87 [ _1 ])) "../src/io.f":431 -1
     (nil))
(insn 11 10 12 2 (set (subreg:DI (reg:TI 88 [ _2 ]) 8)
        (const_int 0 [0])) "../src/io.f":431 -1
     (nil))
(insn 12 11 13 2 (parallel [
            (set (reg:TI 117 [ _38 ])
                (ashift:TI (reg:TI 88 [ _2 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":431 -1
     (nil))
(insn 13 12 14 2 (set (reg:SI 134)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [1 _string+0 S4 A32])) "../src/io.f":431 -1
     (nil))
(insn 14 13 15 2 (set (reg:DI 118 [ _39 ])
        (sign_extend:DI (reg:SI 134))) "../src/io.f":431 -1
     (nil))
(insn 15 14 16 2 (set (reg:SI 135)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [1 _string+0 S4 A32])) "../src/io.f":399 -1
     (nil))
(insn 16 15 17 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 n+0 S4 A32])
        (reg:SI 135)) "../src/io.f":399 -1
     (nil))
(insn 17 16 18 2 (set (reg:SI 119 [ _41 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 n+0 S4 A32])) "../src/io.f":402 -1
     (nil))
(insn 18 17 19 2 (set (reg/f:DI 136)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [11 ns+0 S8 A64])) "../src/io.f":402 -1
     (nil))
(insn 19 18 44 2 (set (mem:SI (reg/f:DI 136) [1 *ns_43(D)+0 S4 A32])
        (reg:SI 119 [ _41 ])) "../src/io.f":402 -1
     (nil))
;;  succ:       4 (FALLTHRU)

;; basic block 4, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 (FALLTHRU)
;;              6 (DFS_BACK)
(code_label 44 19 20 4 121 (nil) [1 uses])
(note 20 44 21 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 22 4 (set (reg/f:DI 137)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [11 ns+0 S8 A64])) "../src/io.f":402 -1
     (nil))
(insn 22 21 23 4 (set (reg:SI 89 [ _3 ])
        (mem:SI (reg/f:DI 137) [1 *ns_43(D)+0 S4 A32])) "../src/io.f":402 -1
     (nil))
(insn 23 22 24 4 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 89 [ _3 ])
            (const_int 0 [0]))) "../src/io.f":402 -1
     (nil))
(insn 24 23 25 4 (set (reg:QI 120 [ _45 ])
        (le:QI (reg:CCNO 17 flags)
            (const_int 0 [0]))) "../src/io.f":402 -1
     (nil))
(insn 25 24 26 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 120 [ _45 ])
            (const_int 0 [0]))) "../src/io.f":402 -1
     (nil))
(jump_insn 26 25 27 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 47)
            (pc))) "../src/io.f":402 -1
     (nil)
 -> 47)
;;  succ:       7
;;              5 (FALLTHRU)

;; basic block 5, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       4 (FALLTHRU)
(note 27 26 28 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 29 5 (set (reg/f:DI 138)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [11 ns+0 S8 A64])) "../src/io.f":403 -1
     (nil))
(insn 29 28 30 5 (set (reg:SI 121 [ _46 ])
        (mem:SI (reg/f:DI 138) [1 *ns_43(D)+0 S4 A32])) "../src/io.f":403 -1
     (nil))
(insn 30 29 31 5 (set (reg/f:DI 139)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [11 ns+0 S8 A64])) "../src/io.f":403 -1
     (nil))
(insn 31 30 32 5 (set (reg:SI 122 [ _47 ])
        (mem:SI (reg/f:DI 139) [1 *ns_43(D)+0 S4 A32])) "../src/io.f":403 -1
     (nil))
(insn 32 31 33 5 (set (reg/f:DI 140)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [10 string+0 S8 A64])) "../src/io.f":403 -1
     (nil))
(insn 33 32 34 5 (parallel [
            (set (reg:SI 141)
                (plus:SI (reg:SI 121 [ _46 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":403 -1
     (nil))
(insn 34 33 35 5 (set (reg:DI 142)
        (sign_extend:DI (reg:SI 141))) "../src/io.f":403 -1
     (nil))
(insn 35 34 36 5 (set (reg:QI 90 [ _4 ])
        (mem:QI (plus:DI (reg/f:DI 140)
                (reg:DI 142)) [2 *string_48(D) S1 A8])) "../src/io.f":403 -1
     (nil))
(insn 36 35 37 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 90 [ _4 ])
            (const_int 32 [0x20]))) "../src/io.f":403 -1
     (nil))
(jump_insn 37 36 38 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 53)
            (pc))) "../src/io.f":403 -1
     (nil)
 -> 53)
;;  succ:       8
;;              6 (FALLTHRU)

;; basic block 6, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       5 (FALLTHRU)
(note 38 37 39 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 40 6 (set (reg/f:DI 143)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [11 ns+0 S8 A64])) "../src/io.f":402 -1
     (nil))
(insn 40 39 41 6 (set (reg:SI 91 [ _5 ])
        (mem:SI (reg/f:DI 143) [1 *ns_43(D)+0 S4 A32])) "../src/io.f":402 -1
     (nil))
(insn 41 40 42 6 (parallel [
            (set (reg:SI 92 [ _6 ])
                (plus:SI (reg:SI 91 [ _5 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":402 -1
     (nil))
(insn 42 41 43 6 (set (reg/f:DI 144)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [11 ns+0 S8 A64])) "../src/io.f":402 -1
     (nil))
(insn 43 42 45 6 (set (mem:SI (reg/f:DI 144) [1 *ns_43(D)+0 S4 A32])
        (reg:SI 92 [ _6 ])) "../src/io.f":402 -1
     (nil))
(jump_insn 45 43 46 6 (set (pc)
        (label_ref 44)) "../src/io.f":402 -1
     (nil)
 -> 44)
;;  succ:       4 (DFS_BACK)

(barrier 46 45 47)
;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4
(code_label 47 46 48 7 119 (nil) [1 uses])
(note 48 47 49 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 49 48 50 7 (set (reg/f:DI 145)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [11 ns+0 S8 A64])) "../src/io.f":405 -1
     (nil))
(insn 50 49 51 7 (set (mem:SI (reg/f:DI 145) [1 *ns_43(D)+0 S4 A32])
        (const_int 0 [0])) "../src/io.f":405 -1
     (nil))
(jump_insn 51 50 52 7 (set (pc)
        (label_ref:DI 184)) "../src/io.f":406 649 {jump}
     (nil)
 -> 184)
;;  succ:       22 [100.0%] 

(barrier 52 51 53)
;; basic block 8, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL)
;;  pred:       5
;;              20 (DFS_BACK)
(code_label 53 52 54 8 120 (nil) [2 uses])
(note 54 53 55 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 55 54 56 8 (set (reg/f:DI 146)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [11 ns+0 S8 A64])) "../src/io.f":412 -1
     (nil))
(insn 56 55 57 8 (set (reg:SI 123 [ _50 ])
        (mem:SI (reg/f:DI 146) [1 *ns_43(D)+0 S4 A32])) "../src/io.f":412 -1
     (nil))
(insn 57 56 73 8 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 k0+0 S4 A32])
        (const_int 1 [0x1])) "../src/io.f":412 -1
     (nil))
;;  succ:       9 (FALLTHRU)

;; basic block 9, loop depth 2, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL)
;;  pred:       8 (FALLTHRU)
;;              11 (DFS_BACK)
(code_label 73 57 58 9 125 (nil) [1 uses])
(note 58 73 59 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 59 58 60 9 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 k0+0 S4 A32])
            (reg:SI 123 [ _50 ]))) "../src/io.f":412 -1
     (nil))
(insn 60 59 61 9 (set (reg:QI 124 [ _52 ])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "../src/io.f":412 -1
     (nil))
(insn 61 60 62 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 124 [ _52 ])
            (const_int 0 [0]))) "../src/io.f":412 -1
     (nil))
(jump_insn 62 61 63 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 76)
            (pc))) "../src/io.f":412 -1
     (nil)
 -> 76)
;;  succ:       12
;;              10 (FALLTHRU)

;; basic block 10, loop depth 2, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL)
;;  pred:       9 (FALLTHRU)
(note 63 62 64 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 64 63 65 10 (set (reg/f:DI 147)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [10 string+0 S8 A64])) "../src/io.f":413 -1
     (nil))
(insn 65 64 66 10 (set (reg:SI 149)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 k0+0 S4 A32])) "../src/io.f":413 -1
     (nil))
(insn 66 65 67 10 (parallel [
            (set (reg:SI 148)
                (plus:SI (reg:SI 149)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":413 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 k0+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 67 66 68 10 (set (reg:DI 150)
        (sign_extend:DI (reg:SI 148))) "../src/io.f":413 -1
     (nil))
(insn 68 67 69 10 (set (reg:QI 93 [ _7 ])
        (mem:QI (plus:DI (reg/f:DI 147)
                (reg:DI 150)) [2 *string_48(D) S1 A8])) "../src/io.f":413 -1
     (nil))
(insn 69 68 70 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 93 [ _7 ])
            (const_int 32 [0x20]))) "../src/io.f":413 -1
     (nil))
(jump_insn 70 69 71 10 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 80)
            (pc))) "../src/io.f":413 -1
     (nil)
 -> 80)
;;  succ:       13
;;              11 (FALLTHRU)

;; basic block 11, loop depth 2, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL)
;;  pred:       10 (FALLTHRU)
(note 71 70 72 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 72 71 74 11 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [1 k0+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [1 k0+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":412 -1
     (nil))
(jump_insn 74 72 75 11 (set (pc)
        (label_ref 73)) "../src/io.f":412 -1
     (nil)
 -> 73)
;;  succ:       9 (DFS_BACK)

(barrier 75 74 76)
;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       9
(code_label 76 75 77 12 123 (nil) [1 uses])
(note 77 76 78 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(jump_insn 78 77 79 12 (set (pc)
        (label_ref:DI 184)) "../src/io.f":415 649 {jump}
     (nil)
 -> 184)
;;  succ:       22 [100.0%] 

(barrier 79 78 80)
;; basic block 13, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL)
;;  pred:       10
(code_label 80 79 81 13 124 (nil) [1 uses])
(note 81 80 82 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 82 81 83 13 (set (reg:SI 151)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 k0+0 S4 A32])) "../src/io.f":419 -1
     (nil))
(insn 83 82 84 13 (parallel [
            (set (reg:SI 125 [ _54 ])
                (plus:SI (reg:SI 151)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":419 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 k0+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 84 83 85 13 (set (reg/f:DI 152)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [11 ns+0 S8 A64])) "../src/io.f":419 -1
     (nil))
(insn 85 84 86 13 (set (reg:SI 126 [ _55 ])
        (mem:SI (reg/f:DI 152) [1 *ns_43(D)+0 S4 A32])) "../src/io.f":419 -1
     (nil))
(insn 86 85 102 13 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 k1+0 S4 A32])
        (reg:SI 125 [ _54 ])) "../src/io.f":419 -1
     (nil))
;;  succ:       14 (FALLTHRU)

;; basic block 14, loop depth 2, count 0, freq 0, maybe hot
;;  prev block 13, next block 15, flags: (NEW, REACHABLE, RTL)
;;  pred:       13 (FALLTHRU)
;;              16 (DFS_BACK)
(code_label 102 86 87 14 127 (nil) [1 uses])
(note 87 102 88 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 88 87 89 14 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [1 k1+0 S4 A32])
            (reg:SI 126 [ _55 ]))) "../src/io.f":419 -1
     (nil))
(insn 89 88 90 14 (set (reg:QI 127 [ _57 ])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "../src/io.f":419 -1
     (nil))
(insn 90 89 91 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 127 [ _57 ])
            (const_int 0 [0]))) "../src/io.f":419 -1
     (nil))
(jump_insn 91 90 92 14 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 105)
            (pc))) "../src/io.f":419 -1
     (nil)
 -> 105)
;;  succ:       17
;;              15 (FALLTHRU)

;; basic block 15, loop depth 2, count 0, freq 0, maybe hot
;;  prev block 14, next block 16, flags: (NEW, REACHABLE, RTL)
;;  pred:       14 (FALLTHRU)
(note 92 91 93 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 93 92 94 15 (set (reg/f:DI 153)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [10 string+0 S8 A64])) "../src/io.f":420 -1
     (nil))
(insn 94 93 95 15 (set (reg:SI 155)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 k1+0 S4 A32])) "../src/io.f":420 -1
     (nil))
(insn 95 94 96 15 (parallel [
            (set (reg:SI 154)
                (plus:SI (reg:SI 155)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":420 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [1 k1+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 96 95 97 15 (set (reg:DI 156)
        (sign_extend:DI (reg:SI 154))) "../src/io.f":420 -1
     (nil))
(insn 97 96 98 15 (set (reg:QI 94 [ _8 ])
        (mem:QI (plus:DI (reg/f:DI 153)
                (reg:DI 156)) [2 *string_48(D) S1 A8])) "../src/io.f":420 -1
     (nil))
(insn 98 97 99 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 94 [ _8 ])
            (const_int 32 [0x20]))) "../src/io.f":420 -1
     (nil))
(jump_insn 99 98 100 15 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 105)
            (pc))) "../src/io.f":420 -1
     (nil)
 -> 105)
;;  succ:       17
;;              16 (FALLTHRU)

;; basic block 16, loop depth 2, count 0, freq 0, maybe hot
;;  prev block 15, next block 17, flags: (NEW, REACHABLE, RTL)
;;  pred:       15 (FALLTHRU)
(note 100 99 101 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 101 100 103 16 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [1 k1+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [1 k1+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":419 -1
     (nil))
(jump_insn 103 101 104 16 (set (pc)
        (label_ref 102)) "../src/io.f":419 -1
     (nil)
 -> 102)
;;  succ:       14 (DFS_BACK)

(barrier 104 103 105)
;; basic block 17, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 16, next block 18, flags: (NEW, REACHABLE, RTL)
;;  pred:       14
;;              15
(code_label 105 104 106 17 126 (nil) [2 uses])
(note 106 105 110 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 110 106 111 17 (set (reg:SI 160)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 k1+0 S4 A32])) "../src/io.f":425 -1
     (nil))
(insn 111 110 112 17 (parallel [
            (set (reg:SI 159)
                (minus:SI (reg:SI 160)
                    (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [1 k0+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":425 -1
     (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [1 k1+0 S4 A32])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 k0+0 S4 A32]))
        (nil)))
(insn 112 111 113 17 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [1 nsdel+0 S4 A32])
        (reg:SI 159)) "../src/io.f":425 -1
     (nil))
(insn 113 112 114 17 (set (reg/f:DI 161)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [11 ns+0 S8 A64])) "../src/io.f":426 -1
     (nil))
(insn 114 113 115 17 (set (reg:SI 95 [ _9 ])
        (mem:SI (reg/f:DI 161) [1 *ns_43(D)+0 S4 A32])) "../src/io.f":426 -1
     (nil))
(insn 115 114 116 17 (parallel [
            (set (reg:SI 128 [ _60 ])
                (minus:SI (reg:SI 95 [ _9 ])
                    (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -16 [0xfffffffffffffff0])) [1 nsdel+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":426 -1
     (nil))
(insn 116 115 117 17 (set (reg/f:DI 162)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [11 ns+0 S8 A64])) "../src/io.f":426 -1
     (nil))
(insn 117 116 118 17 (set (reg:SI 129 [ _61 ])
        (mem:SI (reg/f:DI 162) [1 *ns_43(D)+0 S4 A32])) "../src/io.f":426 -1
     (nil))
(insn 118 117 119 17 (parallel [
            (set (reg:SI 96 [ _10 ])
                (minus:SI (reg:SI 129 [ _61 ])
                    (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [1 k1+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":426 -1
     (nil))
(insn 119 118 121 17 (parallel [
            (set (reg:SI 97 [ _11 ])
                (plus:SI (reg:SI 96 [ _10 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":426 -1
     (nil))
(insn 121 119 120 17 (set (reg:SI 163)
        (const_int 0 [0])) "../src/io.f":426 -1
     (nil))
(insn 120 121 122 17 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 97 [ _11 ])
            (const_int 0 [0]))) "../src/io.f":426 -1
     (nil))
(insn 122 120 123 17 (set (reg:SI 130 [ _62 ])
        (if_then_else:SI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:SI 97 [ _11 ])
            (reg:SI 163))) "../src/io.f":426 -1
     (nil))
(insn 123 122 124 17 (parallel [
            (set (reg:SI 98 [ _12 ])
                (minus:SI (reg:SI 129 [ _61 ])
                    (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [1 k1+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":426 -1
     (nil))
(insn 124 123 126 17 (parallel [
            (set (reg:SI 99 [ _13 ])
                (plus:SI (reg:SI 98 [ _12 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":426 -1
     (nil))
(insn 126 124 125 17 (set (reg:SI 164)
        (const_int 0 [0])) "../src/io.f":426 -1
     (nil))
(insn 125 126 127 17 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 99 [ _13 ])
            (const_int 0 [0]))) "../src/io.f":426 -1
     (nil))
(insn 127 125 128 17 (set (reg:SI 131 [ _63 ])
        (if_then_else:SI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:SI 99 [ _13 ])
            (reg:SI 164))) "../src/io.f":426 -1
     (nil))
(insn 128 127 129 17 (parallel [
            (set (reg:SI 100 [ _14 ])
                (minus:SI (reg:SI 128 [ _60 ])
                    (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [1 k0+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":426 -1
     (nil))
(insn 129 128 131 17 (parallel [
            (set (reg:SI 101 [ _15 ])
                (plus:SI (reg:SI 100 [ _14 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":426 -1
     (nil))
(insn 131 129 130 17 (set (reg:SI 165)
        (const_int 0 [0])) "../src/io.f":426 -1
     (nil))
(insn 130 131 132 17 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 101 [ _15 ])
            (const_int 0 [0]))) "../src/io.f":426 -1
     (nil))
(insn 132 130 133 17 (set (reg:SI 132 [ _64 ])
        (if_then_else:SI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:SI 101 [ _15 ])
            (reg:SI 165))) "../src/io.f":426 -1
     (nil))
(insn 133 132 134 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 132 [ _64 ])
            (const_int 0 [0]))) "../src/io.f":426 -1
     (nil))
(jump_insn 134 133 135 17 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 173)
            (pc))) "../src/io.f":426 -1
     (nil)
 -> 173)
;;  succ:       18 (FALLTHRU)
;;              20

;; basic block 18, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 17, next block 19, flags: (NEW, REACHABLE, RTL)
;;  pred:       17 (FALLTHRU)
(note 135 134 136 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 136 135 137 18 (set (reg:DI 102 [ _16 ])
        (sign_extend:DI (reg:SI 132 [ _64 ]))) "../src/io.f":426 -1
     (nil))
(insn 137 136 138 18 (set (reg:DI 103 [ _17 ])
        (sign_extend:DI (reg:SI 131 [ _63 ]))) "../src/io.f":426 -1
     (nil))
(insn 138 137 139 18 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 102 [ _16 ])
            (reg:DI 103 [ _17 ]))) "../src/io.f":426 -1
     (nil))
(insn 139 138 140 18 (set (reg:DI 104 [ _18 ])
        (if_then_else:DI (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (reg:DI 102 [ _16 ])
            (reg:DI 103 [ _17 ]))) "../src/io.f":426 -1
     (nil))
(insn 140 139 141 18 (set (reg:SI 167)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 k1+0 S4 A32])) "../src/io.f":426 -1
     (nil))
(insn 141 140 142 18 (parallel [
            (set (reg:SI 166)
                (plus:SI (reg:SI 167)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":426 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [1 k1+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 142 141 143 18 (set (reg:DI 168)
        (sign_extend:DI (reg:SI 166))) "../src/io.f":426 -1
     (nil))
(insn 143 142 144 18 (set (reg/f:DI 169)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [10 string+0 S8 A64])) "../src/io.f":426 -1
     (nil))
(insn 144 143 145 18 (parallel [
            (set (reg/f:DI 105 [ _19 ])
                (plus:DI (reg:DI 168)
                    (reg/f:DI 169)))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":426 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [10 string+0 S8 A64])
            (reg:DI 168))
        (nil)))
(insn 145 144 146 18 (set (reg:SI 171)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 k0+0 S4 A32])) "../src/io.f":426 -1
     (nil))
(insn 146 145 147 18 (parallel [
            (set (reg:SI 170)
                (plus:SI (reg:SI 171)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":426 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 k0+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 147 146 148 18 (set (reg:DI 172)
        (sign_extend:DI (reg:SI 170))) "../src/io.f":426 -1
     (nil))
(insn 148 147 149 18 (set (reg/f:DI 173)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [10 string+0 S8 A64])) "../src/io.f":426 -1
     (nil))
(insn 149 148 150 18 (parallel [
            (set (reg/f:DI 106 [ _20 ])
                (plus:DI (reg:DI 172)
                    (reg/f:DI 173)))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":426 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [10 string+0 S8 A64])
            (reg:DI 172))
        (nil)))
(insn 150 149 151 18 (set (reg:DI 1 dx)
        (reg:DI 104 [ _18 ])) "../src/io.f":426 -1
     (nil))
(insn 151 150 152 18 (set (reg:DI 4 si)
        (reg/f:DI 105 [ _19 ])) "../src/io.f":426 -1
     (nil))
(insn 152 151 153 18 (set (reg:DI 5 di)
        (reg/f:DI 106 [ _20 ])) "../src/io.f":426 -1
     (nil))
(call_insn 153 152 154 18 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memmove") [flags 0x41]  <function_decl 0x14386f400 __builtin_memmove>) [0 __builtin_memmove S1 A8])
            (const_int 0 [0]))) "../src/io.f":426 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 154 153 155 18 (set (reg:DI 107 [ _21 ])
        (sign_extend:DI (reg:SI 131 [ _63 ]))) "../src/io.f":426 -1
     (nil))
(insn 155 154 156 18 (set (reg:DI 108 [ _22 ])
        (sign_extend:DI (reg:SI 132 [ _64 ]))) "../src/io.f":426 -1
     (nil))
(insn 156 155 157 18 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 107 [ _21 ])
            (reg:DI 108 [ _22 ]))) "../src/io.f":426 -1
     (nil))
(jump_insn 157 156 158 18 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 173)
            (pc))) "../src/io.f":426 -1
     (nil)
 -> 173)
;;  succ:       19 (FALLTHRU)
;;              20

;; basic block 19, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 18, next block 20, flags: (NEW, REACHABLE, RTL)
;;  pred:       18 (FALLTHRU)
(note 158 157 159 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 159 158 160 19 (set (reg:DI 109 [ _23 ])
        (sign_extend:DI (reg:SI 132 [ _64 ]))) "../src/io.f":426 -1
     (nil))
(insn 160 159 161 19 (set (reg:DI 110 [ _24 ])
        (sign_extend:DI (reg:SI 131 [ _63 ]))) "../src/io.f":426 -1
     (nil))
(insn 161 160 162 19 (parallel [
            (set (reg:DI 111 [ _25 ])
                (minus:DI (reg:DI 109 [ _23 ])
                    (reg:DI 110 [ _24 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":426 -1
     (nil))
(insn 162 161 163 19 (set (reg:SI 175)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 k0+0 S4 A32])) "../src/io.f":426 -1
     (nil))
(insn 163 162 164 19 (parallel [
            (set (reg:SI 174)
                (plus:SI (reg:SI 175)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":426 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 k0+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 164 163 165 19 (set (reg:DI 176)
        (sign_extend:DI (reg:SI 174))) "../src/io.f":426 -1
     (nil))
(insn 165 164 166 19 (set (reg/f:DI 177)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [10 string+0 S8 A64])) "../src/io.f":426 -1
     (nil))
(insn 166 165 167 19 (parallel [
            (set (reg/f:DI 112 [ _26 ])
                (plus:DI (reg:DI 176)
                    (reg/f:DI 177)))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":426 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [10 string+0 S8 A64])
            (reg:DI 176))
        (nil)))
(insn 167 166 168 19 (set (reg:DI 113 [ _27 ])
        (sign_extend:DI (reg:SI 131 [ _63 ]))) "../src/io.f":426 -1
     (nil))
(insn 168 167 169 19 (parallel [
            (set (reg/f:DI 114 [ _28 ])
                (plus:DI (reg/f:DI 112 [ _26 ])
                    (reg:DI 113 [ _27 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":426 -1
     (nil))
(insn 169 168 170 19 (set (reg:DI 1 dx)
        (reg:DI 111 [ _25 ])) "../src/io.f":426 -1
     (nil))
(insn 170 169 171 19 (set (reg:SI 4 si)
        (const_int 32 [0x20])) "../src/io.f":426 -1
     (nil))
(insn 171 170 172 19 (set (reg:DI 5 di)
        (reg/f:DI 114 [ _28 ])) "../src/io.f":426 -1
     (nil))
(call_insn 172 171 173 19 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memset") [flags 0x41]  <function_decl 0x14386f600 __builtin_memset>) [0 __builtin_memset S1 A8])
            (const_int 0 [0]))) "../src/io.f":426 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       20 (FALLTHRU)

;; basic block 20, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 19, next block 22, flags: (NEW, REACHABLE, RTL)
;;  pred:       17
;;              19 (FALLTHRU)
;;              18
(code_label 173 172 174 20 128 (nil) [2 uses])
(note 174 173 175 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 175 174 176 20 (set (reg/f:DI 178)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [11 ns+0 S8 A64])) "../src/io.f":427 -1
     (nil))
(insn 176 175 177 20 (set (reg:SI 115 [ _29 ])
        (mem:SI (reg/f:DI 178) [1 *ns_43(D)+0 S4 A32])) "../src/io.f":427 -1
     (nil))
(insn 177 176 178 20 (parallel [
            (set (reg:SI 116 [ _30 ])
                (minus:SI (reg:SI 115 [ _29 ])
                    (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -16 [0xfffffffffffffff0])) [1 nsdel+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "../src/io.f":427 -1
     (nil))
(insn 178 177 179 20 (set (reg/f:DI 179)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [11 ns+0 S8 A64])) "../src/io.f":427 -1
     (nil))
(insn 179 178 180 20 (set (mem:SI (reg/f:DI 179) [1 *ns_43(D)+0 S4 A32])
        (reg:SI 116 [ _30 ])) "../src/io.f":427 -1
     (nil))
(jump_insn 180 179 181 20 (set (pc)
        (label_ref 53)) "../src/io.f":429 -1
     (nil)
 -> 53)
;;  succ:       8 (DFS_BACK)

(barrier 181 180 184)
;; basic block 22, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 20, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       12 [100.0%] 
;;              7 [100.0%] 
(code_label 184 181 185 22 118 (nil) [2 uses])
(note 185 184 0 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)

